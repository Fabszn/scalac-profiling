<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="214" onload="init(evt)" viewBox="0 0 1200 214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#e0e0ff" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="214.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="197" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="197" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String(&quot;d&quot;)) :: shapeless.HNil,Option[Double] :: shapeless.HNil] (4 ms, 0.14%)</title><rect x="260.3" y="53" width="1.6" height="15.0" fill="rgb(0,235,194)" rx="2" ry="2" />
<text text-anchor="" x="263.25" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type]] (4 ms, 0.14%)</title><rect x="1185.2" y="53" width="1.6" height="15.0" fill="rgb(0,210,125)" rx="2" ry="2" />
<text text-anchor="" x="1188.20" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(&quot;Nil&quot;)) :: shapeless.HNil,scala.collection.immutable.Nil.type :+: shapeless.CNil] (4 ms, 0.14%)</title><rect x="243.4" y="53" width="1.6" height="15.0" fill="rgb(0,219,120)" rx="2" ry="2" />
<text text-anchor="" x="246.44" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Encoder[String] (23 ms, 0.78%)</title><rect x="1150.8" y="85" width="9.2" height="15.0" fill="rgb(0,200,128)" rx="2" ry="2" />
<text text-anchor="" x="1153.76" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[Qux]] (10 ms, 0.34%)</title><rect x="1085.1" y="69" width="4.0" height="15.0" fill="rgb(0,196,182)" rx="2" ry="2" />
<text text-anchor="" x="1088.09" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;::&quot;)] (3 ms, 0.10%)</title><rect x="242.2" y="53" width="1.2" height="15.0" fill="rgb(0,220,4)" rx="2" ry="2" />
<text text-anchor="" x="245.24" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.Nil.type,K] (12 ms, 0.41%)</title><rect x="297.9" y="69" width="4.8" height="15.0" fill="rgb(0,190,23)" rx="2" ry="2" />
<text text-anchor="" x="300.89" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.Nil.type] (79 ms, 2.68%)</title><rect x="1025.4" y="101" width="31.7" height="15.0" fill="rgb(0,192,122)" rx="2" ry="2" />
<text text-anchor="" x="1028.43" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;d&quot;)] (8 ms, 0.27%)</title><rect x="946.6" y="37" width="3.2" height="15.0" fill="rgb(0,190,59)" rx="2" ry="2" />
<text text-anchor="" x="949.55" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;tl$access$1&quot;)],List[String]] :: shapeless.HNil] (47 ms, 1.59%)</title><rect x="345.1" y="101" width="18.9" height="15.0" fill="rgb(0,205,199)" rx="2" ry="2" />
<text text-anchor="" x="348.14" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Decoder[String] (6 ms, 0.20%)</title><rect x="341.5" y="69" width="2.4" height="15.0" fill="rgb(0,218,184)" rx="2" ry="2" />
<text text-anchor="" x="344.54" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Decoder[List[String]] (23 ms, 0.78%)</title><rect x="349.1" y="85" width="9.3" height="15.0" fill="rgb(0,193,179)" rx="2" ry="2" />
<text text-anchor="" x="352.14" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.decoding.DerivedDecoder[List[String]] (287 ms, 9.74%)</title><rect x="130.9" y="101" width="114.9" height="15.0" fill="rgb(0,191,43)" rx="2" ry="2" />
<text text-anchor="" x="133.92" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.circe.gener..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[scala.collection.immutable.Nil.type]] (9 ms, 0.31%)</title><rect x="1183.2" y="69" width="3.6" height="15.0" fill="rgb(0,191,112)" rx="2" ry="2" />
<text text-anchor="" x="1186.19" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]] (7 ms, 0.24%)</title><rect x="1144.4" y="37" width="2.8" height="15.0" fill="rgb(0,236,195)" rx="2" ry="2" />
<text text-anchor="" x="1147.35" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R] (117 ms, 3.97%)</title><rect x="977.0" y="85" width="46.8" height="15.0" fill="rgb(0,231,85)" rx="2" ry="2" />
<text text-anchor="" x="979.98" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >shap..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>scala.collection.generic.CanBuildFrom[Nothing,Double,Traversable[Double] with Option[Double]] (2 ms, 0.07%)</title><rect x="336.3" y="69" width="0.8" height="15.0" fill="rgb(0,196,43)" rx="2" ry="2" />
<text text-anchor="" x="339.33" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[this.Out]] (6 ms, 0.20%)</title><rect x="950.2" y="85" width="2.4" height="15.0" fill="rgb(0,232,178)" rx="2" ry="2" />
<text text-anchor="" x="953.16" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Encoder[Foo] (2,001 ms, 67.90%)</title><rect x="388.8" y="149" width="801.2" height="15.0" fill="rgb(0,204,46)" rx="2" ry="2" />
<text text-anchor="" x="391.79" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.circe.Encoder[Foo]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Generic.Aux[scala.collection.immutable.Nil.type,V] (14 ms, 0.48%)</title><rect x="302.7" y="69" width="5.6" height="15.0" fill="rgb(0,216,195)" rx="2" ry="2" />
<text text-anchor="" x="305.70" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[Bar]] (9 ms, 0.31%)</title><rect x="1077.1" y="69" width="3.6" height="15.0" fill="rgb(0,234,100)" rx="2" ry="2" />
<text text-anchor="" x="1080.09" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Decoder[Int] (4 ms, 0.14%)</title><rect x="328.7" y="85" width="1.6" height="15.0" fill="rgb(0,196,205)" rx="2" ry="2" />
<text text-anchor="" x="331.72" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.Decoder[Foo]] (891 ms, 30.23%)</title><rect x="32.0" y="133" width="356.8" height="15.0" fill="rgb(0,228,20)" rx="2" ry="2" />
<text text-anchor="" x="35.02" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.circe.export.Exported[io.circe.Decoder[Foo]]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WebsiteExample.foo.type =&gt; ?{def asJson: ?} (45 ms, 1.53%)</title><rect x="10.0" y="149" width="18.0" height="15.0" fill="rgb(0,210,18)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[List[String]]] (9 ms, 0.31%)</title><rect x="1147.2" y="69" width="3.6" height="15.0" fill="rgb(0,226,93)" rx="2" ry="2" />
<text text-anchor="" x="1150.16" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Generic.Aux[Foo,V] (13 ms, 0.44%)</title><rect x="120.9" y="69" width="5.2" height="15.0" fill="rgb(0,205,204)" rx="2" ry="2" />
<text text-anchor="" x="123.91" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.Decoder[String]] (6 ms, 0.20%)</title><rect x="354.8" y="53" width="2.4" height="15.0" fill="rgb(0,194,174)" rx="2" ry="2" />
<text text-anchor="" x="357.75" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;Qux&quot;)] (3 ms, 0.10%)</title><rect x="128.9" y="37" width="1.2" height="15.0" fill="rgb(0,235,139)" rx="2" ry="2" />
<text text-anchor="" x="131.92" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Qux]] (4 ms, 0.14%)</title><rect x="1087.5" y="53" width="1.6" height="15.0" fill="rgb(0,213,178)" rx="2" ry="2" />
<text text-anchor="" x="1090.50" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.DefaultSymbolicLabelling.Aux[Qux,K] (35 ms, 1.19%)</title><rect x="908.1" y="69" width="14.0" height="15.0" fill="rgb(0,210,172)" rx="2" ry="2" />
<text text-anchor="" x="911.11" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;Nil&quot;)] (6 ms, 0.20%)</title><rect x="898.1" y="37" width="2.4" height="15.0" fill="rgb(0,198,201)" rx="2" ry="2" />
<text text-anchor="" x="901.10" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.encoding.ReprObjectEncoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;Bar&quot;)],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;Qux&quot;)],Qux] :+: shapeless.CNil] (80 ms, 2.71%)</title><rect x="1057.1" y="101" width="32.0" height="15.0" fill="rgb(0,190,23)" rx="2" ry="2" />
<text text-anchor="" x="1060.06" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(&quot;i&quot;)) :: (Symbol @@ String(&quot;d&quot;)) :: shapeless.HNil,Int :: Option[Double] :: shapeless.HNil,R] (9 ms, 0.31%)</title><rect x="258.3" y="69" width="3.6" height="15.0" fill="rgb(0,227,150)" rx="2" ry="2" />
<text text-anchor="" x="261.25" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type]] (1 ms, 0.03%)</title><rect x="388.0" y="53" width="0.4" height="15.0" fill="rgb(0,195,131)" rx="2" ry="2" />
<text text-anchor="" x="390.98" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Decoder[Double] (10 ms, 0.34%)</title><rect x="332.3" y="69" width="4.0" height="15.0" fill="rgb(0,199,37)" rx="2" ry="2" />
<text text-anchor="" x="335.33" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.encoding.ReprObjectEncoder[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;i&quot;)],Int] :: Option[Double] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;d&quot;)],Option[Double]] :: shapeless.HNil] (51 ms, 1.73%)</title><rect x="1089.1" y="101" width="20.4" height="15.0" fill="rgb(0,235,8)" rx="2" ry="2" />
<text text-anchor="" x="1092.10" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Decoder[Qux] (8 ms, 0.27%)</title><rect x="320.7" y="85" width="3.2" height="15.0" fill="rgb(0,206,47)" rx="2" ry="2" />
<text text-anchor="" x="323.72" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(&quot;Qux&quot;)) :: shapeless.HNil,Qux :+: shapeless.CNil] (4 ms, 0.14%)</title><rect x="128.5" y="53" width="1.6" height="15.0" fill="rgb(0,237,82)" rx="2" ry="2" />
<text text-anchor="" x="131.52" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.decoding.DerivedDecoder[Bar] (34 ms, 1.15%)</title><rect x="99.3" y="101" width="13.6" height="15.0" fill="rgb(0,235,93)" rx="2" ry="2" />
<text text-anchor="" x="102.29" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[shapeless.labelled.FieldType[Symbol @@ String(&quot;xs&quot;),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]] (5 ms, 0.17%)</title><rect x="562.2" y="85" width="2.0" height="15.0" fill="rgb(0,222,93)" rx="2" ry="2" />
<text text-anchor="" x="565.16" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[scala.collection.immutable.::[String]]] (9 ms, 0.31%)</title><rect x="1174.8" y="69" width="3.6" height="15.0" fill="rgb(0,192,105)" rx="2" ry="2" />
<text text-anchor="" x="1177.78" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.LabelledGeneric.Aux[scala.collection.immutable.Nil.type,R] (31 ms, 1.05%)</title><rect x="296.3" y="85" width="12.4" height="15.0" fill="rgb(0,224,165)" rx="2" ry="2" />
<text text-anchor="" x="299.29" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.LabelledGeneric.Aux[String,R] (20 ms, 0.68%)</title><rect x="264.7" y="85" width="8.0" height="15.0" fill="rgb(0,210,46)" rx="2" ry="2" />
<text text-anchor="" x="267.66" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Encoder[List[String]] (26 ms, 0.88%)</title><rect x="1114.7" y="85" width="10.4" height="15.0" fill="rgb(0,222,195)" rx="2" ry="2" />
<text text-anchor="" x="1117.72" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Encoder[String] (7 ms, 0.24%)</title><rect x="1172.0" y="69" width="2.8" height="15.0" fill="rgb(0,216,26)" rx="2" ry="2" />
<text text-anchor="" x="1174.98" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(&quot;head&quot;)) :: (Symbol @@ String(&quot;tl$access$1&quot;)) :: shapeless.HNil,String :: List[String] :: shapeless.HNil,R] (26 ms, 0.88%)</title><rect x="1013.0" y="69" width="10.4" height="15.0" fill="rgb(0,212,128)" rx="2" ry="2" />
<text text-anchor="" x="1016.02" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.LabelledGeneric.Aux[Foo,R] (42 ms, 1.43%)</title><rect x="113.3" y="85" width="16.8" height="15.0" fill="rgb(0,226,105)" rx="2" ry="2" />
<text text-anchor="" x="116.31" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.decoding.ReprDecoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;xs&quot;)],List[String]] :: shapeless.HNil] (20 ms, 0.68%)</title><rect x="337.1" y="101" width="8.0" height="15.0" fill="rgb(0,201,134)" rx="2" ry="2" />
<text text-anchor="" x="340.13" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.DefaultSymbolicLabelling.Aux[String,K] (36 ms, 1.22%)</title><rect x="961.8" y="69" width="14.4" height="15.0" fill="rgb(0,202,93)" rx="2" ry="2" />
<text text-anchor="" x="964.77" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String(&quot;::&quot;)) :: (Symbol @@ String(&quot;Nil&quot;)) :: shapeless.HNil,scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil,R] (27 ms, 0.92%)</title><rect x="890.5" y="69" width="10.8" height="15.0" fill="rgb(0,206,139)" rx="2" ry="2" />
<text text-anchor="" x="893.50" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.decoding.ReprDecoder[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;i&quot;)],Int] :: Option[Double] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;d&quot;)],Option[Double]] :: shapeless.HNil] (33 ms, 1.12%)</title><rect x="323.9" y="101" width="13.2" height="15.0" fill="rgb(0,199,95)" rx="2" ry="2" />
<text text-anchor="" x="326.92" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Generic.Aux[Qux,V] (42 ms, 1.43%)</title><rect x="922.1" y="69" width="16.8" height="15.0" fill="rgb(0,226,199)" rx="2" ry="2" />
<text text-anchor="" x="925.13" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;Bar&quot;)] (3 ms, 0.10%)</title><rect x="127.3" y="53" width="1.2" height="15.0" fill="rgb(0,210,164)" rx="2" ry="2" />
<text text-anchor="" x="130.32" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>this.Out &lt;:&lt; (String :: List[String] :: shapeless.HNil) (1 ms, 0.03%)</title><rect x="1023.4" y="69" width="0.4" height="15.0" fill="rgb(0,220,45)" rx="2" ry="2" />
<text text-anchor="" x="1026.43" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.DefaultSymbolicLabelling.Aux[Bar,K] (24 ms, 0.81%)</title><rect x="518.1" y="69" width="9.6" height="15.0" fill="rgb(0,223,23)" rx="2" ry="2" />
<text text-anchor="" x="521.12" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[this.Out]] (2 ms, 0.07%)</title><rect x="295.1" y="85" width="0.8" height="15.0" fill="rgb(0,196,150)" rx="2" ry="2" />
<text text-anchor="" x="298.09" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.hlist.ZipWithKeys.Aux[shapeless.HNil,shapeless.HNil,R] (3 ms, 0.10%)</title><rect x="1054.3" y="69" width="1.2" height="15.0" fill="rgb(0,225,26)" rx="2" ry="2" />
<text text-anchor="" x="1057.26" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[this.Out]] (1 ms, 0.03%)</title><rect x="261.9" y="85" width="0.4" height="15.0" fill="rgb(0,194,109)" rx="2" ry="2" />
<text text-anchor="" x="264.86" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.DefaultSymbolicLabelling.Aux[Qux,K] (11 ms, 0.37%)</title><rect x="247.8" y="69" width="4.4" height="15.0" fill="rgb(0,234,186)" rx="2" ry="2" />
<text text-anchor="" x="250.84" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Decoder[scala.collection.immutable.::[String]] (18 ms, 0.61%)</title><rect x="377.2" y="85" width="7.2" height="15.0" fill="rgb(0,227,159)" rx="2" ry="2" />
<text text-anchor="" x="380.17" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Decoder[scala.collection.immutable.Nil.type] (10 ms, 0.34%)</title><rect x="384.4" y="85" width="4.0" height="15.0" fill="rgb(0,208,30)" rx="2" ry="2" />
<text text-anchor="" x="387.38" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.DefaultSymbolicLabelling.Aux[String,K] (13 ms, 0.44%)</title><rect x="267.5" y="69" width="5.2" height="15.0" fill="rgb(0,213,49)" rx="2" ry="2" />
<text text-anchor="" x="270.46" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Encoder[List[String]] (47 ms, 1.59%)</title><rect x="1131.9" y="85" width="18.9" height="15.0" fill="rgb(0,202,141)" rx="2" ry="2" />
<text text-anchor="" x="1134.94" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Generic.Aux[Bar,V] (13 ms, 0.44%)</title><rect x="104.9" y="69" width="5.2" height="15.0" fill="rgb(0,209,196)" rx="2" ry="2" />
<text text-anchor="" x="107.90" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(&quot;xs&quot;)) :: shapeless.HNil,List[String] :: shapeless.HNil,R] (6 ms, 0.20%)</title><rect x="110.1" y="69" width="2.4" height="15.0" fill="rgb(0,239,120)" rx="2" ry="2" />
<text text-anchor="" x="113.10" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.Decoder[List[String]]] (3 ms, 0.10%)</title><rect x="343.9" y="69" width="1.2" height="15.0" fill="rgb(0,195,115)" rx="2" ry="2" />
<text text-anchor="" x="346.94" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;tl$access$1&quot;)] (8 ms, 0.27%)</title><rect x="1019.8" y="37" width="3.2" height="15.0" fill="rgb(0,217,135)" rx="2" ry="2" />
<text text-anchor="" x="1022.83" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]] (123 ms, 4.17%)</title><rect x="976.2" y="101" width="49.2" height="15.0" fill="rgb(0,212,132)" rx="2" ry="2" />
<text text-anchor="" x="979.18" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.Decoder[Bar]] (2 ms, 0.07%)</title><rect x="319.9" y="69" width="0.8" height="15.0" fill="rgb(0,208,120)" rx="2" ry="2" />
<text text-anchor="" x="322.92" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>(=&gt; Unit) =&gt; shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]] (1 ms, 0.03%)</title><rect x="1157.6" y="53" width="0.4" height="15.0" fill="rgb(0,209,16)" rx="2" ry="2" />
<text text-anchor="" x="1160.57" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.LabelledGeneric.Aux[scala.collection.immutable.Nil.type,R] (73 ms, 2.48%)</title><rect x="1026.2" y="85" width="29.3" height="15.0" fill="rgb(0,226,80)" rx="2" ry="2" />
<text text-anchor="" x="1029.23" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sh..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[List[String]]] (4 ms, 0.14%)</title><rect x="1123.5" y="53" width="1.6" height="15.0" fill="rgb(0,207,204)" rx="2" ry="2" />
<text text-anchor="" x="1126.53" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.Nil.type,K] (27 ms, 0.92%)</title><rect x="1029.8" y="69" width="10.8" height="15.0" fill="rgb(0,198,205)" rx="2" ry="2" />
<text text-anchor="" x="1032.84" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.LabelledGeneric.Aux[Bar,R] (118 ms, 4.00%)</title><rect x="514.9" y="85" width="47.3" height="15.0" fill="rgb(0,197,88)" rx="2" ry="2" />
<text text-anchor="" x="517.91" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >shap..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Encoder[scala.collection.immutable.::[String]] (27 ms, 0.92%)</title><rect x="1168.0" y="85" width="10.8" height="15.0" fill="rgb(0,235,124)" rx="2" ry="2" />
<text text-anchor="" x="1170.98" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.LabelledGeneric.Aux[List[String],R] (284 ms, 9.64%)</title><rect x="131.3" y="85" width="113.7" height="15.0" fill="rgb(0,217,168)" rx="2" ry="2" />
<text text-anchor="" x="134.32" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >shapeless.Labe..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String(&quot;d&quot;)) :: shapeless.HNil,Option[Double] :: shapeless.HNil] (12 ms, 0.41%)</title><rect x="945.4" y="53" width="4.8" height="15.0" fill="rgb(0,221,19)" rx="2" ry="2" />
<text text-anchor="" x="948.35" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;::&quot;)] (9 ms, 0.31%)</title><rect x="893.3" y="53" width="3.6" height="15.0" fill="rgb(0,226,110)" rx="2" ry="2" />
<text text-anchor="" x="896.30" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Foo]] (835 ms, 28.33%)</title><rect x="54.4" y="117" width="334.4" height="15.0" fill="rgb(0,234,46)" rx="2" ry="2" />
<text text-anchor="" x="57.45" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >shapeless.Lazy[io.circe.generic.decoding.Deri..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>this.Out &lt;:&lt; (Bar :+: Qux :+: shapeless.CNil) (1 ms, 0.03%)</title><rect x="643.8" y="69" width="0.4" height="15.0" fill="rgb(0,222,141)" rx="2" ry="2" />
<text text-anchor="" x="646.84" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.encoding.DerivedObjectEncoder[Qux] (123 ms, 4.17%)</title><rect x="903.3" y="101" width="49.3" height="15.0" fill="rgb(0,225,70)" rx="2" ry="2" />
<text text-anchor="" x="906.31" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[this.Out]] (4 ms, 0.14%)</title><rect x="1023.8" y="85" width="1.6" height="15.0" fill="rgb(0,219,44)" rx="2" ry="2" />
<text text-anchor="" x="1026.83" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.encoding.ReprObjectEncoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;::&quot;)],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;Nil&quot;)],scala.collection.immutable.Nil.type] :+: shapeless.CNil] (67 ms, 2.27%)</title><rect x="1160.0" y="101" width="26.8" height="15.0" fill="rgb(0,211,191)" rx="2" ry="2" />
<text text-anchor="" x="1162.97" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >i..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Bar]] (1 ms, 0.03%)</title><rect x="320.3" y="53" width="0.4" height="15.0" fill="rgb(0,236,50)" rx="2" ry="2" />
<text text-anchor="" x="323.32" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(&quot;head&quot;)) :: (Symbol @@ String(&quot;tl$access$1&quot;)) :: shapeless.HNil,String :: List[String] :: shapeless.HNil,R] (9 ms, 0.31%)</title><rect x="291.5" y="69" width="3.6" height="15.0" fill="rgb(0,213,175)" rx="2" ry="2" />
<text text-anchor="" x="294.49" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;head&quot;)] (7 ms, 0.24%)</title><rect x="1015.8" y="53" width="2.8" height="15.0" fill="rgb(0,193,200)" rx="2" ry="2" />
<text text-anchor="" x="1018.82" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;i&quot;)] (8 ms, 0.27%)</title><rect x="942.1" y="53" width="3.3" height="15.0" fill="rgb(0,237,42)" rx="2" ry="2" />
<text text-anchor="" x="945.15" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>(=&gt; Unit) =&gt; shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]] (1 ms, 0.03%)</title><rect x="362.8" y="53" width="0.4" height="15.0" fill="rgb(0,201,209)" rx="2" ry="2" />
<text text-anchor="" x="365.76" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.Decoder[Qux]] (3 ms, 0.10%)</title><rect x="322.7" y="69" width="1.2" height="15.0" fill="rgb(0,202,29)" rx="2" ry="2" />
<text text-anchor="" x="325.72" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[Qux]] (1 ms, 0.03%)</title><rect x="323.5" y="53" width="0.4" height="15.0" fill="rgb(0,219,131)" rx="2" ry="2" />
<text text-anchor="" x="326.52" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.encoding.DerivedObjectEncoder[List[String]] (642 ms, 21.78%)</title><rect x="646.2" y="101" width="257.1" height="15.0" fill="rgb(0,190,5)" rx="2" ry="2" />
<text text-anchor="" x="649.25" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.circe.generic.encoding.DerivedO..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String(&quot;tl$access$1&quot;)) :: shapeless.HNil,List[String] :: shapeless.HNil] (12 ms, 0.41%)</title><rect x="1018.6" y="53" width="4.8" height="15.0" fill="rgb(0,190,204)" rx="2" ry="2" />
<text text-anchor="" x="1021.63" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;xs&quot;)] (8 ms, 0.27%)</title><rect x="559.0" y="53" width="3.2" height="15.0" fill="rgb(0,196,137)" rx="2" ry="2" />
<text text-anchor="" x="561.96" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;xs&quot;)] (3 ms, 0.10%)</title><rect x="111.3" y="53" width="1.2" height="15.0" fill="rgb(0,234,20)" rx="2" ry="2" />
<text text-anchor="" x="114.30" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.encoding.ReprObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;xs&quot;)],List[String]] :: shapeless.HNil] (39 ms, 1.32%)</title><rect x="1109.5" y="101" width="15.6" height="15.0" fill="rgb(0,239,56)" rx="2" ry="2" />
<text text-anchor="" x="1112.52" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;Nil&quot;)] (3 ms, 0.10%)</title><rect x="243.8" y="37" width="1.2" height="15.0" fill="rgb(0,192,204)" rx="2" ry="2" />
<text text-anchor="" x="246.84" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.encoding.DerivedObjectEncoder[Foo] (205 ms, 6.96%)</title><rect x="564.2" y="101" width="82.0" height="15.0" fill="rgb(0,220,0)" rx="2" ry="2" />
<text text-anchor="" x="567.16" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.circe...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.DefaultSymbolicLabelling.Aux[List[String],K] (167 ms, 5.67%)</title><rect x="651.1" y="69" width="66.8" height="15.0" fill="rgb(0,197,124)" rx="2" ry="2" />
<text text-anchor="" x="654.05" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >shapele..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.labelled.FieldType[Symbol @@ String(&quot;xs&quot;),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out &lt;:&lt; (List[String] :: shapeless.HNil) (1 ms, 0.03%)</title><rect x="540.1" y="69" width="0.4" height="15.0" fill="rgb(0,228,201)" rx="2" ry="2" />
<text text-anchor="" x="543.14" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.DefaultSymbolicLabelling.Aux[Foo,K] (66 ms, 2.24%)</title><rect x="581.4" y="69" width="26.4" height="15.0" fill="rgb(0,197,164)" rx="2" ry="2" />
<text text-anchor="" x="584.38" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[List[String]]] (3 ms, 0.10%)</title><rect x="1149.6" y="53" width="1.2" height="15.0" fill="rgb(0,194,26)" rx="2" ry="2" />
<text text-anchor="" x="1152.56" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.LabelledGeneric.Aux[Bar,R] (33 ms, 1.12%)</title><rect x="99.3" y="85" width="13.2" height="15.0" fill="rgb(0,225,195)" rx="2" ry="2" />
<text text-anchor="" x="102.29" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]] (4 ms, 0.14%)</title><rect x="1055.5" y="85" width="1.6" height="15.0" fill="rgb(0,197,59)" rx="2" ry="2" />
<text text-anchor="" x="1058.46" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Generic.Aux[List[String],V] (196 ms, 6.65%)</title><rect x="162.6" y="69" width="78.4" height="15.0" fill="rgb(0,233,115)" rx="2" ry="2" />
<text text-anchor="" x="165.56" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >shapeless..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil] (1 ms, 0.03%)</title><rect x="643.4" y="37" width="0.4" height="15.0" fill="rgb(0,229,182)" rx="2" ry="2" />
<text text-anchor="" x="646.44" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[List[String]]] (9 ms, 0.31%)</title><rect x="1121.5" y="69" width="3.6" height="15.0" fill="rgb(0,212,144)" rx="2" ry="2" />
<text text-anchor="" x="1124.53" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil] (2 ms, 0.07%)</title><rect x="900.5" y="37" width="0.8" height="15.0" fill="rgb(0,211,104)" rx="2" ry="2" />
<text text-anchor="" x="903.51" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Generic.Aux[Foo,V] (44 ms, 1.49%)</title><rect x="607.8" y="69" width="17.6" height="15.0" fill="rgb(0,206,96)" rx="2" ry="2" />
<text text-anchor="" x="610.81" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;tl$access$1&quot;)] (3 ms, 0.10%)</title><rect x="293.9" y="37" width="1.2" height="15.0" fill="rgb(0,211,209)" rx="2" ry="2" />
<text text-anchor="" x="296.89" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.decoding.DerivedDecoder[Qux] (41 ms, 1.39%)</title><rect x="245.8" y="101" width="16.5" height="15.0" fill="rgb(0,216,76)" rx="2" ry="2" />
<text text-anchor="" x="248.84" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(&quot;i&quot;)) :: (Symbol @@ String(&quot;d&quot;)) :: shapeless.HNil,Int :: Option[Double] :: shapeless.HNil,R] (28 ms, 0.95%)</title><rect x="938.9" y="69" width="11.3" height="15.0" fill="rgb(0,234,45)" rx="2" ry="2" />
<text text-anchor="" x="941.94" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[this.Out]] (2 ms, 0.07%)</title><rect x="130.1" y="85" width="0.8" height="15.0" fill="rgb(0,200,67)" rx="2" ry="2" />
<text text-anchor="" x="133.12" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.LabelledGeneric.Aux[Foo,R] (197 ms, 6.68%)</title><rect x="565.4" y="85" width="78.8" height="15.0" fill="rgb(0,213,155)" rx="2" ry="2" />
<text text-anchor="" x="568.36" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >shapeless..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Encoder[Double] (8 ms, 0.27%)</title><rect x="1106.3" y="69" width="3.2" height="15.0" fill="rgb(0,192,57)" rx="2" ry="2" />
<text text-anchor="" x="1109.31" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Bar]] (4 ms, 0.14%)</title><rect x="1079.1" y="53" width="1.6" height="15.0" fill="rgb(0,216,27)" rx="2" ry="2" />
<text text-anchor="" x="1082.09" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[this.Out]] (5 ms, 0.17%)</title><rect x="644.2" y="85" width="2.0" height="15.0" fill="rgb(0,230,201)" rx="2" ry="2" />
<text text-anchor="" x="647.24" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>scala.collection.immutable.::[String] =&gt; Iterable[String] (1 ms, 0.03%)</title><rect x="1178.4" y="69" width="0.4" height="15.0" fill="rgb(0,224,166)" rx="2" ry="2" />
<text text-anchor="" x="1181.39" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.::[String],K] (32 ms, 1.09%)</title><rect x="982.6" y="69" width="12.8" height="15.0" fill="rgb(0,213,203)" rx="2" ry="2" />
<text text-anchor="" x="985.59" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;d&quot;)] (3 ms, 0.10%)</title><rect x="260.7" y="37" width="1.2" height="15.0" fill="rgb(0,194,127)" rx="2" ry="2" />
<text text-anchor="" x="263.65" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.LabelledGeneric.Aux[String,R] (53 ms, 1.80%)</title><rect x="955.0" y="85" width="21.2" height="15.0" fill="rgb(0,226,126)" rx="2" ry="2" />
<text text-anchor="" x="957.96" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[this.Out]] (2 ms, 0.07%)</title><rect x="245.0" y="85" width="0.8" height="15.0" fill="rgb(0,209,4)" rx="2" ry="2" />
<text text-anchor="" x="248.04" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Generic.Aux[Qux,V] (15 ms, 0.51%)</title><rect x="252.2" y="69" width="6.1" height="15.0" fill="rgb(0,221,155)" rx="2" ry="2" />
<text text-anchor="" x="255.25" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Decoder[String] (6 ms, 0.20%)</title><rect x="380.0" y="69" width="2.4" height="15.0" fill="rgb(0,225,20)" rx="2" ry="2" />
<text text-anchor="" x="382.98" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.LabelledGeneric.Aux[Qux,R] (39 ms, 1.32%)</title><rect x="246.2" y="85" width="15.7" height="15.0" fill="rgb(0,210,206)" rx="2" ry="2" />
<text text-anchor="" x="249.24" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Generic.Aux[Bar,V] (31 ms, 1.05%)</title><rect x="527.7" y="69" width="12.4" height="15.0" fill="rgb(0,228,96)" rx="2" ry="2" />
<text text-anchor="" x="530.73" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[scala.collection.immutable.::[String]]] (4 ms, 0.14%)</title><rect x="1176.8" y="53" width="1.6" height="15.0" fill="rgb(0,206,52)" rx="2" ry="2" />
<text text-anchor="" x="1179.79" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Generic.Aux[List[String],V] (431 ms, 14.63%)</title><rect x="717.9" y="69" width="172.6" height="15.0" fill="rgb(0,232,3)" rx="2" ry="2" />
<text text-anchor="" x="720.92" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >shapeless.Generic.Aux[..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.encoding.DerivedObjectEncoder[Bar] (125 ms, 4.24%)</title><rect x="514.1" y="101" width="50.1" height="15.0" fill="rgb(0,213,68)" rx="2" ry="2" />
<text text-anchor="" x="517.11" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.ci..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String(&quot;Bar&quot;)) :: (Symbol @@ String(&quot;Qux&quot;)) :: shapeless.HNil,Bar :+: Qux :+: shapeless.CNil,R] (10 ms, 0.34%)</title><rect x="126.1" y="69" width="4.0" height="15.0" fill="rgb(0,214,52)" rx="2" ry="2" />
<text text-anchor="" x="129.12" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Decoder[List[String]] (14 ms, 0.48%)</title><rect x="339.5" y="85" width="5.6" height="15.0" fill="rgb(0,238,194)" rx="2" ry="2" />
<text text-anchor="" x="342.54" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.encoding.ReprObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],String] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;tl$access$1&quot;)],List[String]] :: shapeless.HNil] (87 ms, 2.95%)</title><rect x="1125.1" y="101" width="34.9" height="15.0" fill="rgb(0,194,38)" rx="2" ry="2" />
<text text-anchor="" x="1128.13" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>this.Out &lt;:&lt; (scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil) (1 ms, 0.03%)</title><rect x="901.3" y="69" width="0.4" height="15.0" fill="rgb(0,191,84)" rx="2" ry="2" />
<text text-anchor="" x="904.31" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (2,947 ms, 100%)</title><rect x="10.0" y="165" width="1180.0" height="15.0" fill="rgb(0,221,44)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.decoding.ReprDecoder[Bar with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;Bar&quot;)],Bar] :+: Qux with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;Qux&quot;)],Qux] :+: shapeless.CNil] (37 ms, 1.26%)</title><rect x="309.1" y="101" width="14.8" height="15.0" fill="rgb(0,213,128)" rx="2" ry="2" />
<text text-anchor="" x="312.10" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Encoder[Bar] (19 ms, 0.64%)</title><rect x="1073.1" y="85" width="7.6" height="15.0" fill="rgb(0,214,9)" rx="2" ry="2" />
<text text-anchor="" x="1076.08" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(&quot;Qux&quot;)) :: shapeless.HNil,Qux :+: shapeless.CNil] (22 ms, 0.75%)</title><rect x="635.0" y="53" width="8.8" height="15.0" fill="rgb(0,211,65)" rx="2" ry="2" />
<text text-anchor="" x="638.04" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Generic.Aux[scala.collection.immutable.::[String],V] (21 ms, 0.71%)</title><rect x="283.1" y="69" width="8.4" height="15.0" fill="rgb(0,218,148)" rx="2" ry="2" />
<text text-anchor="" x="286.08" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.DefaultSymbolicLabelling.Aux[Foo,K] (13 ms, 0.44%)</title><rect x="115.7" y="69" width="5.2" height="15.0" fill="rgb(0,202,75)" rx="2" ry="2" />
<text text-anchor="" x="118.71" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;Bar&quot;)] (9 ms, 0.31%)</title><rect x="631.4" y="53" width="3.6" height="15.0" fill="rgb(0,199,98)" rx="2" ry="2" />
<text text-anchor="" x="634.43" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;head&quot;)] (3 ms, 0.10%)</title><rect x="292.3" y="53" width="1.2" height="15.0" fill="rgb(0,190,128)" rx="2" ry="2" />
<text text-anchor="" x="295.29" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Decoder[Foo] (901 ms, 30.57%)</title><rect x="28.0" y="149" width="360.8" height="15.0" fill="rgb(0,235,52)" rx="2" ry="2" />
<text text-anchor="" x="31.02" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.circe.Decoder[Foo]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[Foo]] (1,955 ms, 66.34%)</title><rect x="407.2" y="133" width="782.8" height="15.0" fill="rgb(0,228,159)" rx="2" ry="2" />
<text text-anchor="" x="410.20" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.circe.export.Exported[io.circe.ObjectEncoder[Foo]]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Encoder[Qux] (21 ms, 0.71%)</title><rect x="1080.7" y="85" width="8.4" height="15.0" fill="rgb(0,212,29)" rx="2" ry="2" />
<text text-anchor="" x="1083.69" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.hlist.ZipWithKeys[(Symbol @@ String(&quot;tl$access$1&quot;)) :: shapeless.HNil,List[String] :: shapeless.HNil] (4 ms, 0.14%)</title><rect x="293.5" y="53" width="1.6" height="15.0" fill="rgb(0,224,26)" rx="2" ry="2" />
<text text-anchor="" x="296.49" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>(=&gt; Unit) =&gt; shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]] (2 ms, 0.07%)</title><rect x="1143.6" y="37" width="0.8" height="15.0" fill="rgb(0,236,80)" rx="2" ry="2" />
<text text-anchor="" x="1146.55" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.LabelledGeneric.Aux[Qux,R] (115 ms, 3.90%)</title><rect x="904.1" y="85" width="46.1" height="15.0" fill="rgb(0,216,200)" rx="2" ry="2" />
<text text-anchor="" x="907.11" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >shap..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Decoder[String] (13 ms, 0.44%)</title><rect x="351.9" y="69" width="5.3" height="15.0" fill="rgb(0,228,69)" rx="2" ry="2" />
<text text-anchor="" x="354.95" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.LabelledGeneric.Aux[List[String],R] (636 ms, 21.58%)</title><rect x="647.0" y="85" width="254.7" height="15.0" fill="rgb(0,231,147)" rx="2" ry="2" />
<text text-anchor="" x="650.05" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >shapeless.LabelledGeneric.Aux[Lis..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Decoder[Option[Double]] (17 ms, 0.58%)</title><rect x="330.3" y="85" width="6.8" height="15.0" fill="rgb(0,231,137)" rx="2" ry="2" />
<text text-anchor="" x="333.33" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String(&quot;::&quot;)) :: (Symbol @@ String(&quot;Nil&quot;)) :: shapeless.HNil,scala.collection.immutable.::[String] :+: scala.collection.immutable.Nil.type :+: shapeless.CNil,R] (10 ms, 0.34%)</title><rect x="241.0" y="69" width="4.0" height="15.0" fill="rgb(0,212,3)" rx="2" ry="2" />
<text text-anchor="" x="244.03" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.DefaultSymbolicLabelling.Aux[scala.collection.immutable.::[String],K] (15 ms, 0.51%)</title><rect x="277.1" y="69" width="6.0" height="15.0" fill="rgb(0,198,24)" rx="2" ry="2" />
<text text-anchor="" x="280.07" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.encoding.DerivedObjectEncoder[String] (59 ms, 2.00%)</title><rect x="952.6" y="101" width="23.6" height="15.0" fill="rgb(0,218,131)" rx="2" ry="2" />
<text text-anchor="" x="955.56" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >i..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(&quot;xs&quot;)) :: shapeless.HNil,List[String] :: shapeless.HNil,R] (54 ms, 1.83%)</title><rect x="540.5" y="69" width="21.7" height="15.0" fill="rgb(0,204,205)" rx="2" ry="2" />
<text text-anchor="" x="543.54" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.Nil.type] (33 ms, 1.12%)</title><rect x="295.9" y="101" width="13.2" height="15.0" fill="rgb(0,213,113)" rx="2" ry="2" />
<text text-anchor="" x="298.89" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Generic.Aux[scala.collection.immutable.::[String],V] (44 ms, 1.49%)</title><rect x="995.4" y="69" width="17.6" height="15.0" fill="rgb(0,206,94)" rx="2" ry="2" />
<text text-anchor="" x="998.40" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.DefaultSymbolicLabelling.Aux[Bar,K] (10 ms, 0.34%)</title><rect x="100.9" y="69" width="4.0" height="15.0" fill="rgb(0,196,128)" rx="2" ry="2" />
<text text-anchor="" x="103.89" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;Qux&quot;)] (17 ms, 0.58%)</title><rect x="636.6" y="37" width="6.8" height="15.0" fill="rgb(0,200,182)" rx="2" ry="2" />
<text text-anchor="" x="639.64" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[String]] (17 ms, 0.58%)</title><rect x="1140.3" y="53" width="6.9" height="15.0" fill="rgb(0,208,175)" rx="2" ry="2" />
<text text-anchor="" x="1143.35" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[String]] (13 ms, 0.44%)</title><rect x="1154.8" y="69" width="5.2" height="15.0" fill="rgb(0,201,202)" rx="2" ry="2" />
<text text-anchor="" x="1157.76" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]] (2 ms, 0.07%)</title><rect x="363.2" y="53" width="0.8" height="15.0" fill="rgb(0,209,102)" rx="2" ry="2" />
<text text-anchor="" x="366.16" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.decoding.DerivedDecoder[Foo] (45 ms, 1.53%)</title><rect x="112.9" y="101" width="18.0" height="15.0" fill="rgb(0,231,28)" rx="2" ry="2" />
<text text-anchor="" x="115.90" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.Decoder[scala.collection.immutable.::[String]]] (5 ms, 0.17%)</title><rect x="382.4" y="69" width="2.0" height="15.0" fill="rgb(0,203,145)" rx="2" ry="2" />
<text text-anchor="" x="385.38" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]] (1,889 ms, 64.10%)</title><rect x="433.6" y="117" width="756.4" height="15.0" fill="rgb(0,218,149)" rx="2" ry="2" />
<text text-anchor="" x="436.63" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[Foo]]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Decoder[Bar] (8 ms, 0.27%)</title><rect x="317.5" y="85" width="3.2" height="15.0" fill="rgb(0,200,166)" rx="2" ry="2" />
<text text-anchor="" x="320.51" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.encoding.ReprObjectEncoder[shapeless.HNil] (8 ms, 0.27%)</title><rect x="1186.8" y="101" width="3.2" height="15.0" fill="rgb(0,209,36)" rx="2" ry="2" />
<text text-anchor="" x="1189.80" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Encoder[String] (7 ms, 0.24%)</title><rect x="1118.7" y="69" width="2.8" height="15.0" fill="rgb(0,219,163)" rx="2" ry="2" />
<text text-anchor="" x="1121.73" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(&quot;Nil&quot;)) :: shapeless.HNil,scala.collection.immutable.Nil.type :+: shapeless.CNil] (11 ms, 0.37%)</title><rect x="896.9" y="53" width="4.4" height="15.0" fill="rgb(0,207,41)" rx="2" ry="2" />
<text text-anchor="" x="899.90" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil] (1 ms, 0.03%)</title><rect x="949.8" y="37" width="0.4" height="15.0" fill="rgb(0,211,152)" rx="2" ry="2" />
<text text-anchor="" x="952.76" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Encoder[String] (28 ms, 0.95%)</title><rect x="1135.9" y="69" width="11.3" height="15.0" fill="rgb(0,202,118)" rx="2" ry="2" />
<text text-anchor="" x="1138.95" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Encoder[Option[Double]] (16 ms, 0.54%)</title><rect x="1103.1" y="85" width="6.4" height="15.0" fill="rgb(0,234,72)" rx="2" ry="2" />
<text text-anchor="" x="1106.11" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.decoding.DerivedDecoder[String] (32 ms, 1.09%)</title><rect x="262.3" y="101" width="12.8" height="15.0" fill="rgb(0,201,61)" rx="2" ry="2" />
<text text-anchor="" x="265.26" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.encoding.ReprObjectEncoder[this.Out]] (4 ms, 0.14%)</title><rect x="901.7" y="85" width="1.6" height="15.0" fill="rgb(0,237,26)" rx="2" ry="2" />
<text text-anchor="" x="904.71" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.Decoder[String]] (6 ms, 0.20%)</title><rect x="361.6" y="69" width="2.4" height="15.0" fill="rgb(0,208,11)" rx="2" ry="2" />
<text text-anchor="" x="364.56" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Decoder[String] (14 ms, 0.48%)</title><rect x="358.4" y="85" width="5.6" height="15.0" fill="rgb(0,230,23)" rx="2" ry="2" />
<text text-anchor="" x="361.35" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[List[String]]] (1 ms, 0.03%)</title><rect x="344.7" y="53" width="0.4" height="15.0" fill="rgb(0,195,92)" rx="2" ry="2" />
<text text-anchor="" x="347.74" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[String]] (2 ms, 0.07%)</title><rect x="356.4" y="37" width="0.8" height="15.0" fill="rgb(0,234,205)" rx="2" ry="2" />
<text text-anchor="" x="359.35" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Encoder[scala.collection.immutable.Nil.type] (20 ms, 0.68%)</title><rect x="1178.8" y="85" width="8.0" height="15.0" fill="rgb(0,208,160)" rx="2" ry="2" />
<text text-anchor="" x="1181.79" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]] (1 ms, 0.03%)</title><rect x="308.7" y="85" width="0.4" height="15.0" fill="rgb(0,214,199)" rx="2" ry="2" />
<text text-anchor="" x="311.70" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.LabelledGeneric.Aux[scala.collection.immutable.::[String],R] (49 ms, 1.66%)</title><rect x="275.5" y="85" width="19.6" height="15.0" fill="rgb(0,221,52)" rx="2" ry="2" />
<text text-anchor="" x="278.47" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.Decoder[List[String]]] (3 ms, 0.10%)</title><rect x="357.2" y="69" width="1.2" height="15.0" fill="rgb(0,206,136)" rx="2" ry="2" />
<text text-anchor="" x="360.15" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil] (1 ms, 0.03%)</title><rect x="1023.0" y="37" width="0.4" height="15.0" fill="rgb(0,205,192)" rx="2" ry="2" />
<text text-anchor="" x="1026.03" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String(&quot;Bar&quot;)) :: (Symbol @@ String(&quot;Qux&quot;)) :: shapeless.HNil,Bar :+: Qux :+: shapeless.CNil,R] (46 ms, 1.56%)</title><rect x="625.4" y="69" width="18.4" height="15.0" fill="rgb(0,220,82)" rx="2" ry="2" />
<text text-anchor="" x="628.43" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.decoding.ReprDecoder[shapeless.HNil] (1 ms, 0.03%)</title><rect x="388.4" y="101" width="0.4" height="15.0" fill="rgb(0,231,147)" rx="2" ry="2" />
<text text-anchor="" x="391.38" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Witness.Aux[Symbol @@ String(&quot;i&quot;)] (3 ms, 0.10%)</title><rect x="259.1" y="53" width="1.2" height="15.0" fill="rgb(0,210,167)" rx="2" ry="2" />
<text text-anchor="" x="262.05" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Generic.Aux[scala.collection.immutable.Nil.type,V] (34 ms, 1.15%)</title><rect x="1040.6" y="69" width="13.7" height="15.0" fill="rgb(0,217,11)" rx="2" ry="2" />
<text text-anchor="" x="1043.65" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.Encoder[Int] (7 ms, 0.24%)</title><rect x="1100.3" y="85" width="2.8" height="15.0" fill="rgb(0,228,16)" rx="2" ry="2" />
<text text-anchor="" x="1103.31" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[List[String]]] (1 ms, 0.03%)</title><rect x="358.0" y="53" width="0.4" height="15.0" fill="rgb(0,230,35)" rx="2" ry="2" />
<text text-anchor="" x="360.95" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.DefaultSymbolicLabelling.Aux[List[String],K] (73 ms, 2.48%)</title><rect x="133.3" y="69" width="29.3" height="15.0" fill="rgb(0,194,141)" rx="2" ry="2" />
<text text-anchor="" x="136.33" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sh..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]]] (3 ms, 0.10%)</title><rect x="383.2" y="53" width="1.2" height="15.0" fill="rgb(0,216,83)" rx="2" ry="2" />
<text text-anchor="" x="386.18" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.decoding.DerivedDecoder[scala.collection.immutable.::[String]] (52 ms, 1.76%)</title><rect x="275.1" y="101" width="20.8" height="15.0" fill="rgb(0,211,119)" rx="2" ry="2" />
<text text-anchor="" x="278.07" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedObjectEncoder[String]] (5 ms, 0.17%)</title><rect x="1158.0" y="53" width="2.0" height="15.0" fill="rgb(0,192,39)" rx="2" ry="2" />
<text text-anchor="" x="1160.97" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.function.FnFromProduct.Aux[P =&gt; A,String] (6 ms, 0.20%)</title><rect x="272.7" y="85" width="2.4" height="15.0" fill="rgb(0,233,149)" rx="2" ry="2" />
<text text-anchor="" x="275.67" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String(&quot;xs&quot;),List[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]] (1 ms, 0.03%)</title><rect x="112.5" y="85" width="0.4" height="15.0" fill="rgb(0,205,186)" rx="2" ry="2" />
<text text-anchor="" x="115.50" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.generic.decoding.ReprDecoder[scala.collection.immutable.::[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;::&quot;)],scala.collection.immutable.::[String]] :+: scala.collection.immutable.Nil.type with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;Nil&quot;)],scala.collection.immutable.Nil.type] :+: shapeless.CNil] (61 ms, 2.07%)</title><rect x="364.0" y="101" width="24.4" height="15.0" fill="rgb(0,201,185)" rx="2" ry="2" />
<text text-anchor="" x="366.96" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >i..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.circe.export.Exported[io.circe.Decoder[scala.collection.immutable.Nil.type]] (3 ms, 0.10%)</title><rect x="387.2" y="69" width="1.2" height="15.0" fill="rgb(0,231,129)" rx="2" ry="2" />
<text text-anchor="" x="390.18" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>shapeless.ops.hlist.ZipWithKeys.Aux[shapeless.HNil,shapeless.HNil,R] (1 ms, 0.03%)</title><rect x="308.3" y="69" width="0.4" height="15.0" fill="rgb(0,216,84)" rx="2" ry="2" />
<text text-anchor="" x="311.30" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
