<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: implicit&#45;searches&#45;1510254997317 Pages: 1 -->
<svg width="11077pt" height="60339pt"
 viewBox="0.00 0.00 11077.41 60338.74" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 60334.7401)">
<title>implicit&#45;searches&#45;1510254997317</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-60334.7401 11073.4099,-60334.7401 11073.4099,4 -4,4"/>
<!-- scalaz.Equal[Int =&gt; monocle.Arities] -->
<g id="node1" class="node">
<title>scalaz.Equal[Int =&gt; monocle.Arities]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-15857.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="4483.753" y="-15861.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int =&gt; monocle.Arities]</text>
<text text-anchor="middle" x="4586.253" y="-15846.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int] -->
<g id="node1190" class="node">
<title>org.scalacheck.Arbitrary[Int]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="7046.014" cy="-13322.8701" rx="123.9879" ry="26.7407"/>
<text text-anchor="start" x="6966.514" y="-13326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Int]</text>
<text text-anchor="middle" x="7046.014" y="-13311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">519 times = 2217ms</text>
</g>
<!-- scalaz.Equal[Int =&gt; monocle.Arities]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge434" class="edge">
<title>scalaz.Equal[Int =&gt; monocle.Arities]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4722.0809,-15871.1727C4894.9499,-15884.7443 5179.5931,-15894.7171 5249.5191,-15821.8701 5272.6428,-15797.7804 5234.1715,-15244.7427 5257.5191,-15220.8701 5351.5164,-15124.759 6373.0619,-15274.3586 6466.6717,-15177.8701 6481.372,-15162.7177 6464.1293,-13676.1607 6474.6717,-13657.8701 6578.5855,-13477.5841 6821.1013,-13384.7822 6954.3291,-13345.8712"/>
<polygon fill="#000000" stroke="#000000" points="6955.4813,-13349.1817 6964.122,-13343.0507 6953.5439,-13342.4552 6955.4813,-13349.1817"/>
</g>
<!-- scalaz.Equal[monocle.Arities] -->
<g id="node1454" class="node">
<title>scalaz.Equal[monocle.Arities]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-15865.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="5779.0954" y="-15869.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Arities]</text>
<text text-anchor="middle" x="5862.0954" y="-15854.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 6ms</text>
</g>
<!-- scalaz.Equal[Int =&gt; monocle.Arities]&#45;&gt;scalaz.Equal[monocle.Arities] -->
<g id="edge86" class="edge">
<title>scalaz.Equal[Int =&gt; monocle.Arities]&#45;&gt;scalaz.Equal[monocle.Arities]</title>
<path fill="none" stroke="#000000" d="M4742.6963,-15858.851C4993.9372,-15860.4264 5483.3936,-15863.4955 5723.0847,-15864.9984"/>
<polygon fill="#000000" stroke="#000000" points="5723.2354,-15868.4993 5733.2571,-15865.0622 5723.2793,-15861.4995 5723.2354,-15868.4993"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Float :: Long :: Double :: shapeless.HNil,Boolean :: Int :: shapeless.HNil,HListSpec.this.H] -->
<g id="node2" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Float :: Long :: Double :: shapeless.HNil,Boolean :: Int :: shapeless.HNil,HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-23601.8701" rx="540.4593" ry="26.7407"/>
<text text-anchor="start" x="7822.6985" y="-23605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Char :: Float :: Long :: Double :: shapeless.HNil,Boolean :: Int :: shapeless.HNil,HListSpec.this.H]</text>
<text text-anchor="middle" x="8196.6985" y="-23590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Int :: shapeless.HNil,HListSpec.this.H] -->
<g id="node564" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Int :: shapeless.HNil,HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="9347.3831" cy="-23601.8701" rx="540.4593" ry="26.7407"/>
<text text-anchor="start" x="8973.3831" y="-23605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Int :: shapeless.HNil,HListSpec.this.H]</text>
<text text-anchor="middle" x="9347.3831" y="-23590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Float :: Long :: Double :: shapeless.HNil,Boolean :: Int :: shapeless.HNil,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Int :: shapeless.HNil,HListSpec.this.H] -->
<g id="edge219" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Float :: Long :: Double :: shapeless.HNil,Boolean :: Int :: shapeless.HNil,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Int :: shapeless.HNil,HListSpec.this.H]</title>
<path fill="none" stroke="#000000" d="M8737.0843,-23601.8701C8756.9319,-23601.8701 8776.8351,-23601.8701 8796.6991,-23601.8701"/>
<polygon fill="#000000" stroke="#000000" points="8796.7634,-23605.3702 8806.7633,-23601.8701 8796.7633,-23598.3702 8796.7634,-23605.3702"/>
</g>
<!-- scalaz.Choice[monocle.Traversal] -->
<g id="node3" class="node">
<title>scalaz.Choice[monocle.Traversal]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-23673.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="559.1596" y="-23677.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Choice[monocle.Traversal]</text>
<text text-anchor="middle" x="652.6596" y="-23662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Traverse[List] -->
<g id="node4" class="node">
<title>scalaz.Traverse[List]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-23745.8701" rx="92.7622" ry="26.7407"/>
<text text-anchor="start" x="1804.534" y="-23749.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Traverse[List]</text>
<text text-anchor="middle" x="1862.034" y="-23734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit] =&gt; ?{def shouldEqual: ?} -->
<g id="node5" class="node">
<title>monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-26481.8701" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="412.1596" y="-26485.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-26470.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalactic.Prettifier -->
<g id="node1095" class="node">
<title>org.scalactic.Prettifier</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-25401.8701" rx="96.7474" ry="26.7407"/>
<text text-anchor="start" x="1801.534" y="-25405.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Prettifier</text>
<text text-anchor="middle" x="1862.034" y="-25390.6701" font-family="Times,serif" font-size="14.00" fill="#000000">417 times = 214ms</text>
</g>
<!-- monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge755" class="edge">
<title>monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M971.8945,-26493.1381C1108.5231,-26492.1486 1249.4166,-26481.5445 1305.3191,-26445.8701 1689.9771,-26200.3989 1826.2633,-25594.8123 1855.5821,-25438.9358"/>
<polygon fill="#000000" stroke="#000000" points="1859.0587,-25439.3828 1857.4354,-25428.9131 1852.1754,-25438.11 1859.0587,-25439.3828"/>
</g>
<!-- org.scalactic.source.Position -->
<g id="node1308" class="node">
<title>org.scalactic.source.Position</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="1862.034" cy="-25329.8701" rx="121.7449" ry="26.7407"/>
<text text-anchor="start" x="1784.034" y="-25333.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.source.Position</text>
<text text-anchor="middle" x="1862.034" y="-25318.6701" font-family="Times,serif" font-size="14.00" fill="#000000">544 times = 850ms</text>
</g>
<!-- monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1" class="edge">
<title>monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M892.5886,-26501.5036C1054.993,-26508.8834 1249.7211,-26504.1852 1305.3191,-26445.8701 1326.021,-26424.1564 1292.7305,-25387.6911 1313.3191,-25365.8701 1432.4848,-25239.5708 1659.3102,-25274.5686 1780.6568,-25305.4182"/>
<polygon fill="#000000" stroke="#000000" points="1780.0775,-25308.8837 1790.636,-25308.0065 1781.835,-25302.1079 1780.0775,-25308.8837"/>
</g>
<!-- shapeless.Generic.Aux[(String, String),SGen] -->
<g id="node6" class="node">
<title>shapeless.Generic.Aux[(String, String),SGen]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-27165.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="6921.014" y="-27169.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(String, String),SGen]</text>
<text text-anchor="middle" x="7046.014" y="-27154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- scala.reflect.ClassTag[Unit \/ Int =&gt; Unit \/ Int] -->
<g id="node7" class="node">
<title>scala.reflect.ClassTag[Unit \/ Int =&gt; Unit \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-9613.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="5735.5954" y="-9617.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Unit / Int =&gt; Unit / Int]</text>
<text text-anchor="middle" x="5862.0954" y="-9602.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Option[scalaz.Cofree[Option,Int]])) =&gt; (Int, Option[scalaz.Cofree[Option,Int]])] -->
<g id="node8" class="node">
<title>org.scalacheck.Arbitrary[((Int, Option[scalaz.Cofree[Option,Int]])) =&gt; (Int, Option[scalaz.Cofree[Option,Int]])]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-10601.8701" rx="442.7977" ry="26.7407"/>
<text text-anchor="start" x="1557.034" y="-10605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Int, Option[scalaz.Cofree[Option,Int]])) =&gt; (Int, Option[scalaz.Cofree[Option,Int]])]</text>
<text text-anchor="middle" x="1862.034" y="-10590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 25ms</text>
</g>
<!-- scala.reflect.ClassTag[((Int, Option[scalaz.Cofree[Option,Int]])) =&gt; (Int, Option[scalaz.Cofree[Option,Int]])] -->
<g id="node340" class="node">
<title>scala.reflect.ClassTag[((Int, Option[scalaz.Cofree[Option,Int]])) =&gt; (Int, Option[scalaz.Cofree[Option,Int]])]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-10042.8701" rx="432.0845" ry="26.7407"/>
<text text-anchor="start" x="2869.3678" y="-10046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Int, Option[scalaz.Cofree[Option,Int]])) =&gt; (Int, Option[scalaz.Cofree[Option,Int]])]</text>
<text text-anchor="middle" x="3166.8678" y="-10031.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Option[scalaz.Cofree[Option,Int]])) =&gt; (Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;scala.reflect.ClassTag[((Int, Option[scalaz.Cofree[Option,Int]])) =&gt; (Int, Option[scalaz.Cofree[Option,Int]])] -->
<g id="edge707" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Option[scalaz.Cofree[Option,Int]])) =&gt; (Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;scala.reflect.ClassTag[((Int, Option[scalaz.Cofree[Option,Int]])) =&gt; (Int, Option[scalaz.Cofree[Option,Int]])]</title>
<path fill="none" stroke="#000000" d="M1879.8858,-10574.8056C1941.502,-10484.1031 2155.9603,-10190.3264 2418.7488,-10078.8701 2599.288,-10002.2981 2826.7506,-10003.4516 2983.1924,-10017.3268"/>
<polygon fill="#000000" stroke="#000000" points="2983.1161,-10020.8343 2993.393,-10018.2585 2983.7528,-10013.8634 2983.1161,-10020.8343"/>
</g>
<!-- org.scalacheck.Cogen[(Int, Option[scalaz.Cofree[Option,Int]])] -->
<g id="node678" class="node">
<title>org.scalacheck.Cogen[(Int, Option[scalaz.Cofree[Option,Int]])]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-10601.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="2993.8678" y="-10605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Int, Option[scalaz.Cofree[Option,Int]])]</text>
<text text-anchor="middle" x="3166.8678" y="-10590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Option[scalaz.Cofree[Option,Int]])) =&gt; (Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;org.scalacheck.Cogen[(Int, Option[scalaz.Cofree[Option,Int]])] -->
<g id="edge650" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Option[scalaz.Cofree[Option,Int]])) =&gt; (Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;org.scalacheck.Cogen[(Int, Option[scalaz.Cofree[Option,Int]])]</title>
<path fill="none" stroke="#000000" d="M2304.7014,-10601.8701C2502.5291,-10601.8701 2729.1498,-10601.8701 2900.3902,-10601.8701"/>
<polygon fill="#000000" stroke="#000000" points="2900.5571,-10605.3702 2910.5571,-10601.8701 2900.5571,-10598.3702 2900.5571,-10605.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Option[scalaz.Cofree[Option,Int]])] -->
<g id="node1334" class="node">
<title>org.scalacheck.Arbitrary[(Int, Option[scalaz.Cofree[Option,Int]])]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-12950.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="2986.3678" y="-12954.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Option[scalaz.Cofree[Option,Int]])]</text>
<text text-anchor="middle" x="3166.8678" y="-12939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Option[scalaz.Cofree[Option,Int]])) =&gt; (Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;org.scalacheck.Arbitrary[(Int, Option[scalaz.Cofree[Option,Int]])] -->
<g id="edge81" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Option[scalaz.Cofree[Option,Int]])) =&gt; (Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;org.scalacheck.Arbitrary[(Int, Option[scalaz.Cofree[Option,Int]])]</title>
<path fill="none" stroke="#000000" d="M1865.7841,-10628.7727C1896.9508,-10848.8877 2119.3443,-12353.6155 2418.7488,-12679.8701 2561.3817,-12835.2939 2800.0529,-12901.7224 2969.4326,-12930.0252"/>
<polygon fill="#000000" stroke="#000000" points="2969.0364,-12933.5069 2979.4711,-12931.6716 2970.1694,-12926.5992 2969.0364,-12933.5069"/>
</g>
<!-- scala.reflect.ClassTag[Int] -->
<g id="node9" class="node">
<title>scala.reflect.ClassTag[Int]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-13322.8701" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="8124.6985" y="-13326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Int]</text>
<text text-anchor="middle" x="8196.6985" y="-13311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">519 times = 334ms</text>
</g>
<!-- scalaz.Equal[monocle.Quintary] -->
<g id="node10" class="node">
<title>scalaz.Equal[monocle.Quintary]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-10739.8701" rx="136.4432" ry="26.7407"/>
<text text-anchor="start" x="5773.5954" y="-10743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Quintary]</text>
<text text-anchor="middle" x="5862.0954" y="-10728.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Float :: Long :: Double :: shapeless.HNil,Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H] -->
<g id="node11" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Float :: Long :: Double :: shapeless.HNil,Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-23601.8701" rx="540.4593" ry="26.7407"/>
<text text-anchor="start" x="6672.014" y="-23605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Float :: Long :: Double :: shapeless.HNil,Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H]</text>
<text text-anchor="middle" x="7046.014" y="-23590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Float :: Long :: Double :: shapeless.HNil,Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Float :: Long :: Double :: shapeless.HNil,Boolean :: Int :: shapeless.HNil,HListSpec.this.H] -->
<g id="edge636" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Float :: Long :: Double :: shapeless.HNil,Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Float :: Long :: Double :: shapeless.HNil,Boolean :: Int :: shapeless.HNil,HListSpec.this.H]</title>
<path fill="none" stroke="#000000" d="M7586.3998,-23601.8701C7606.2473,-23601.8701 7626.1506,-23601.8701 7646.0146,-23601.8701"/>
<polygon fill="#000000" stroke="#000000" points="7646.0788,-23605.3702 7656.0788,-23601.8701 7646.0787,-23598.3702 7646.0788,-23605.3702"/>
</g>
<!-- scala.reflect.ClassTag[B] -->
<g id="node12" class="node">
<title>scala.reflect.ClassTag[B]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-28709.8701" rx="108.789" ry="26.7407"/>
<text text-anchor="start" x="8127.6985" y="-28713.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[B]</text>
<text text-anchor="middle" x="8196.6985" y="-28698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[HListSpec.this.H] -->
<g id="node13" class="node">
<title>org.scalacheck.Arbitrary[HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-28209.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="1743.034" y="-28213.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[HListSpec.this.H]</text>
<text text-anchor="middle" x="1862.034" y="-28198.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Boolean)) =&gt; (Int, Boolean)] -->
<g id="node14" class="node">
<title>org.scalacheck.Arbitrary[((Int, Boolean)) =&gt; (Int, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-14578.8701" rx="244.818" ry="26.7407"/>
<text text-anchor="start" x="4421.253" y="-14582.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Int, Boolean)) =&gt; (Int, Boolean)]</text>
<text text-anchor="middle" x="4586.253" y="-14567.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 110ms</text>
</g>
<!-- scala.reflect.ClassTag[((Int, Boolean)) =&gt; (Int, Boolean)] -->
<g id="node781" class="node">
<title>scala.reflect.ClassTag[((Int, Boolean)) =&gt; (Int, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-14667.8701" rx="234.1047" ry="26.7407"/>
<text text-anchor="start" x="5704.5954" y="-14671.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Int, Boolean)) =&gt; (Int, Boolean)]</text>
<text text-anchor="middle" x="5862.0954" y="-14656.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Boolean)) =&gt; (Int, Boolean)]&#45;&gt;scala.reflect.ClassTag[((Int, Boolean)) =&gt; (Int, Boolean)] -->
<g id="edge1171" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Boolean)) =&gt; (Int, Boolean)]&#45;&gt;scala.reflect.ClassTag[((Int, Boolean)) =&gt; (Int, Boolean)]</title>
<path fill="none" stroke="#000000" d="M4688.6828,-14554.4125C4828.3075,-14527.2633 5080.3248,-14500.9496 5249.5191,-14614.8701 5256.4457,-14619.5338 5250.6048,-14627.1881 5257.5191,-14631.8701 5317.6206,-14672.5668 5488.7358,-14679.8383 5633.6443,-14677.9007"/>
<polygon fill="#000000" stroke="#000000" points="5634.084,-14681.3946 5644.0306,-14677.7456 5633.9794,-14674.3954 5634.084,-14681.3946"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Boolean)] -->
<g id="node832" class="node">
<title>org.scalacheck.Arbitrary[(Int, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-14595.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="5752.0954" y="-14599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Boolean)]</text>
<text text-anchor="middle" x="5862.0954" y="-14584.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 114ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Boolean)) =&gt; (Int, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[(Int, Boolean)] -->
<g id="edge212" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Boolean)) =&gt; (Int, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[(Int, Boolean)]</title>
<path fill="none" stroke="#000000" d="M4829.2322,-14582.1076C5079.3406,-14585.4402 5462.9834,-14590.5521 5685.5398,-14593.5175"/>
<polygon fill="#000000" stroke="#000000" points="5685.6404,-14597.0191 5695.6862,-14593.6527 5685.7337,-14590.0197 5685.6404,-14597.0191"/>
</g>
<!-- org.scalacheck.Cogen[(Int, Boolean)] -->
<g id="node844" class="node">
<title>org.scalacheck.Cogen[(Int, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-9829.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="5759.5954" y="-9833.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Int, Boolean)]</text>
<text text-anchor="middle" x="5862.0954" y="-9818.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 27ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Boolean)) =&gt; (Int, Boolean)]&#45;&gt;org.scalacheck.Cogen[(Int, Boolean)] -->
<g id="edge143" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Boolean)) =&gt; (Int, Boolean)]&#45;&gt;org.scalacheck.Cogen[(Int, Boolean)]</title>
<path fill="none" stroke="#000000" d="M4830.956,-14577.793C4996.7407,-14571.2538 5195.1758,-14550.0696 5249.5191,-14487.8701 5270.6374,-14463.6988 5235.4876,-9889.212 5257.5191,-9865.8701 5317.5039,-9802.3175 5554.4879,-9806.1184 5713.3232,-9816.5999"/>
<polygon fill="#000000" stroke="#000000" points="5713.4564,-9820.1168 5723.6697,-9817.2993 5713.9285,-9813.1327 5713.4564,-9820.1168"/>
</g>
<!-- monocle.function.At[scalaz.ISet[Int],Int,Boolean] -->
<g id="node15" class="node">
<title>monocle.function.At[scalaz.ISet[Int],Int,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-21357.8701" rx="204.2078" ry="26.7407"/>
<text text-anchor="start" x="5725.5954" y="-21361.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[scalaz.ISet[Int],Int,Boolean]</text>
<text text-anchor="middle" x="5862.0954" y="-21346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Order[Int] -->
<g id="node1141" class="node">
<title>scalaz.Order[Int]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-21031.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="6999.014" y="-21035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[Int]</text>
<text text-anchor="middle" x="7046.014" y="-21020.6701" font-family="Times,serif" font-size="14.00" fill="#000000">84 times = 29ms</text>
</g>
<!-- monocle.function.At[scalaz.ISet[Int],Int,Boolean]&#45;&gt;scalaz.Order[Int] -->
<g id="edge357" class="edge">
<title>monocle.function.At[scalaz.ISet[Int],Int,Boolean]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M6062.0002,-21363.6295C6181.3429,-21362.3319 6334.8457,-21352.2839 6466.6717,-21316.8701 6679.7739,-21259.6221 6907.7081,-21121.8957 7001.6556,-21061.3116"/>
<polygon fill="#000000" stroke="#000000" points="7003.5685,-21064.2427 7010.058,-21055.8679 6999.7624,-21058.3678 7003.5685,-21064.2427"/>
</g>
<!-- scala.reflect.ClassTag[HListSpec.this.H =&gt; HListSpec.this.H] -->
<g id="node16" class="node">
<title>scala.reflect.ClassTag[HListSpec.this.H =&gt; HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-28137.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="1692.034" y="-28141.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[HListSpec.this.H =&gt; HListSpec.this.H]</text>
<text text-anchor="middle" x="1862.034" y="-28126.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Plated[scala.collection.immutable.Stream[Int]] -->
<g id="node17" class="node">
<title>monocle.function.Plated[scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-28209.8701" rx="263.5019" ry="26.7407"/>
<text text-anchor="start" x="474.1596" y="-28213.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Plated[scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-28198.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.FilterIndex[Stream[Int],Int,Int] -->
<g id="node18" class="node">
<title>monocle.function.FilterIndex[Stream[Int],Int,Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-28281.8701" rx="202.4653" ry="26.7407"/>
<text text-anchor="start" x="517.6596" y="-28285.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[Stream[Int],Int,Int]</text>
<text text-anchor="middle" x="652.6596" y="-28270.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- AtSpec.this.PropertyCheckConfigurable -->
<g id="node19" class="node">
<title>AtSpec.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-28353.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="542.6596" y="-28357.6701" font-family="Times,serif" font-size="14.00" fill="#000000">AtSpec.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="652.6596" y="-28342.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Reverse[Vector[Int],Vector[Int]] -->
<g id="node20" class="node">
<title>monocle.function.Reverse[Vector[Int],Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-28425.8701" rx="207.7788" ry="26.7407"/>
<text text-anchor="start" x="513.6596" y="-28429.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[Vector[Int],Vector[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-28414.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Vector[Int],Vector[Int]] -->
<g id="node80" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[Vector[Int],Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-28479.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="1707.034" y="-28483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[Vector[Int],Vector[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-28468.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Reverse[Vector[Int],Vector[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Vector[Int],Vector[Int]] -->
<g id="edge206" class="edge">
<title>monocle.function.Reverse[Vector[Int],Vector[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Vector[Int],Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M849.3209,-28434.6512C1064.9172,-28444.2779 1410.2309,-28459.6965 1636.6109,-28469.8046"/>
<polygon fill="#000000" stroke="#000000" points="1636.4812,-28473.3023 1646.6274,-28470.2519 1636.7935,-28466.3092 1636.4812,-28473.3023"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[Vector[Int],Vector[Int]] -->
<g id="node112" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[Vector[Int],Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-28407.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="1705.534" y="-28411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[Vector[Int],Vector[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-28396.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- monocle.function.Reverse[Vector[Int],Vector[Int]]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[Vector[Int],Vector[Int]] -->
<g id="edge603" class="edge">
<title>monocle.function.Reverse[Vector[Int],Vector[Int]]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[Vector[Int],Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M859.1843,-28422.7962C1070.3039,-28419.654 1397.9902,-28414.7768 1620.8793,-28411.4593"/>
<polygon fill="#000000" stroke="#000000" points="1621.1345,-28414.956 1631.0813,-28411.3075 1621.0303,-28407.9568 1621.1345,-28414.956"/>
</g>
<!-- monocle.function.Plated[Vector[Int]] -->
<g id="node21" class="node">
<title>monocle.function.Plated[Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-28533.8701" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="550.6596" y="-28537.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Plated[Vector[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-28522.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Bar1] -->
<g id="node22" class="node">
<title>scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Bar1]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-28551.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="2998.3678" y="-28555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Bar1]</text>
<text text-anchor="middle" x="3166.8678" y="-28540.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- (Int, Option[Int]) =:= (Int, Option[Int]) -->
<g id="node23" class="node">
<title>(Int, Option[Int]) =:= (Int, Option[Int])</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-28695.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="545.6596" y="-28699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Int, Option[Int]) =:= (Int, Option[Int])</text>
<text text-anchor="middle" x="652.6596" y="-28684.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[A =&gt; A] -->
<g id="node24" class="node">
<title>scala.reflect.ClassTag[A =&gt; A]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-27785.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="6960.014" y="-27789.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[A =&gt; A]</text>
<text text-anchor="middle" x="7046.014" y="-27774.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._2.N,Boolean] -->
<g id="node25" class="node">
<title>shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._2.N,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-28767.8701" rx="386.5749" ry="26.7407"/>
<text text-anchor="start" x="1596.534" y="-28771.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._2.N,Boolean]</text>
<text text-anchor="middle" x="1862.034" y="-28756.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[String]] -->
<g id="node26" class="node">
<title>org.scalacheck.Arbitrary[Option[String]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-6645.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="5750.5954" y="-6649.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Option[String]]</text>
<text text-anchor="middle" x="5862.0954" y="-6634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 30ms</text>
</g>
<!-- org.scalacheck.Arbitrary[String] -->
<g id="node713" class="node">
<title>org.scalacheck.Arbitrary[String]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="7046.014" cy="-8107.8701" rx="136.4432" ry="26.7407"/>
<text text-anchor="start" x="6957.514" y="-8111.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[String]</text>
<text text-anchor="middle" x="7046.014" y="-8096.6701" font-family="Times,serif" font-size="14.00" fill="#000000">153 times = 1363ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[String]]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge296" class="edge">
<title>org.scalacheck.Arbitrary[Option[String]]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6009.6659,-6632.7299C6168.4527,-6622.2408 6406.3857,-6618.3132 6466.6717,-6681.8701 6478.1418,-6693.9625 6465.2554,-7868.1179 6474.6717,-7881.8701 6571.9017,-8023.8703 6773.5057,-8076.6498 6909.3075,-8096.2667"/>
<polygon fill="#000000" stroke="#000000" points="6908.9875,-8099.756 6919.3766,-8097.678 6909.9592,-8092.8238 6908.9875,-8099.756"/>
</g>
<!-- scalaz.Category[monocle.Fold] -->
<g id="node27" class="node">
<title>scalaz.Category[monocle.Fold]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-28839.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="566.6596" y="-28843.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Category[monocle.Fold]</text>
<text text-anchor="middle" x="652.6596" y="-28828.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[((Int, scalaz.IList[Int])) =&gt; (Int, scalaz.IList[Int])] -->
<g id="node28" class="node">
<title>scala.reflect.ClassTag[((Int, scalaz.IList[Int])) =&gt; (Int, scalaz.IList[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-13477.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="4387.753" y="-13481.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Int, scalaz.IList[Int])) =&gt; (Int, scalaz.IList[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-13466.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Index[Map[Int,String],Int,String] -->
<g id="node29" class="node">
<title>monocle.function.Index[Map[Int,String],Int,String]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-28911.8701" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="511.6596" y="-28915.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[Map[Int,String],Int,String]</text>
<text text-anchor="middle" x="652.6596" y="-28900.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[Option[scalaz.Cofree[Option,A]]] -->
<g id="node30" class="node">
<title>org.scalacheck.Cogen[Option[scalaz.Cofree[Option,A]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-27421.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="4431.753" y="-27425.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Option[scalaz.Cofree[Option,A]]]</text>
<text text-anchor="middle" x="4586.253" y="-27410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 7ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.Cofree[Option,A]] -->
<g id="node590" class="node">
<title>org.scalacheck.Cogen[scalaz.Cofree[Option,A]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-27421.8701" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="5731.0954" y="-27425.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[scalaz.Cofree[Option,A]]</text>
<text text-anchor="middle" x="5862.0954" y="-27410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Cogen[Option[scalaz.Cofree[Option,A]]]&#45;&gt;org.scalacheck.Cogen[scalaz.Cofree[Option,A]] -->
<g id="edge519" class="edge">
<title>org.scalacheck.Cogen[Option[scalaz.Cofree[Option,A]]]&#45;&gt;org.scalacheck.Cogen[scalaz.Cofree[Option,A]]</title>
<path fill="none" stroke="#000000" d="M4816.1904,-27421.8701C5055.0077,-27421.8701 5425.2617,-27421.8701 5655.1815,-27421.8701"/>
<polygon fill="#000000" stroke="#000000" points="5655.3418,-27425.3702 5665.3417,-27421.8701 5655.3417,-27418.3702 5655.3418,-27425.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[V] -->
<g id="node31" class="node">
<title>org.scalacheck.Arbitrary[V]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-29163.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="3089.8678" y="-29167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[V]</text>
<text text-anchor="middle" x="3166.8678" y="-29152.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- scala.reflect.ClassTag[V] -->
<g id="node628" class="node">
<title>scala.reflect.ClassTag[V]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-29163.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="4516.753" y="-29167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[V]</text>
<text text-anchor="middle" x="4586.253" y="-29152.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[V]&#45;&gt;scala.reflect.ClassTag[V] -->
<g id="edge397" class="edge">
<title>org.scalacheck.Arbitrary[V]&#45;&gt;scala.reflect.ClassTag[V]</title>
<path fill="none" stroke="#000000" d="M3287.2715,-29163.8701C3555.2587,-29163.8701 4198.3789,-29163.8701 4466.1165,-29163.8701"/>
<polygon fill="#000000" stroke="#000000" points="4466.2569,-29167.3702 4476.2569,-29163.8701 4466.2568,-29160.3702 4466.2569,-29167.3702"/>
</g>
<!-- scala.languageFeature.postfixOps -->
<g id="node32" class="node">
<title>scala.languageFeature.postfixOps</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-29271.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="560.6596" y="-29275.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.languageFeature.postfixOps</text>
<text text-anchor="middle" x="652.6596" y="-29260.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Seq[?T] -->
<g id="node33" class="node">
<title>((Nothing, Nothing)) =&gt; Seq[?T]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-29343.8701" rx="140.0143" ry="26.7407"/>
<text text-anchor="start" x="561.6596" y="-29347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Seq[?T]</text>
<text text-anchor="middle" x="652.6596" y="-29332.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Functor[F$macro$2] -->
<g id="node34" class="node">
<title>scalaz.Functor[F$macro$2]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-29415.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-29419.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$2]</text>
<text text-anchor="middle" x="652.6596" y="-29404.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Integral[String] -->
<g id="node35" class="node">
<title>Integral[String]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-170.8701" rx="71.3357" ry="26.7407"/>
<text text-anchor="start" x="8154.1985" y="-174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[String]</text>
<text text-anchor="middle" x="8196.6985" y="-159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.Foo.type =&gt; ?{def q_=: ?} -->
<g id="node36" class="node">
<title>monocle.Foo.type =&gt; ?{def q_=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-29487.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="553.1596" y="-29491.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Foo.type =&gt; ?{def q_=: ?}</text>
<text text-anchor="middle" x="652.6596" y="-29476.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.H,Out0] -->
<g id="node37" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.H,Out0]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-29559.8701" rx="309.0113" ry="26.7407"/>
<text text-anchor="start" x="1651.534" y="-29563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.H,Out0]</text>
<text text-anchor="middle" x="1862.034" y="-29548.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Out] -->
<g id="node408" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-29559.8701" rx="488.7216" ry="26.7407"/>
<text text-anchor="start" x="2829.3678" y="-29563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="3166.8678" y="-29548.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.H,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Out] -->
<g id="edge562" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.H,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M2171.2614,-29559.8701C2319.4494,-29559.8701 2500.66,-29559.8701 2667.672,-29559.8701"/>
<polygon fill="#000000" stroke="#000000" points="2668.1432,-29563.3702 2678.1431,-29559.8701 2668.1431,-29556.3702 2668.1432,-29563.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(monocle.function.CList, Char)] -->
<g id="node38" class="node">
<title>org.scalacheck.Arbitrary[(monocle.function.CList, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-2457.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="5704.0954" y="-2461.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(monocle.function.CList, Char)]</text>
<text text-anchor="middle" x="5862.0954" y="-2446.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- scala.reflect.ClassTag[(monocle.function.CList, Char)] -->
<g id="node339" class="node">
<title>scala.reflect.ClassTag[(monocle.function.CList, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-2493.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="6895.514" y="-2497.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(monocle.function.CList, Char)]</text>
<text text-anchor="middle" x="7046.014" y="-2482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(monocle.function.CList, Char)]&#45;&gt;scala.reflect.ClassTag[(monocle.function.CList, Char)] -->
<g id="edge715" class="edge">
<title>org.scalacheck.Arbitrary[(monocle.function.CList, Char)]&#45;&gt;scala.reflect.ClassTag[(monocle.function.CList, Char)]</title>
<path fill="none" stroke="#000000" d="M6089.3159,-2464.7793C6298.9342,-2471.1532 6608.5398,-2480.5676 6818.3112,-2486.9462"/>
<polygon fill="#000000" stroke="#000000" points="6818.4346,-2490.4515 6828.5364,-2487.2571 6818.6475,-2483.4547 6818.4346,-2490.4515"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.CList] -->
<g id="node431" class="node">
<title>org.scalacheck.Arbitrary[monocle.function.CList]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-2421.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="6909.014" y="-2425.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.function.CList]</text>
<text text-anchor="middle" x="7046.014" y="-2410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 41ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(monocle.function.CList, Char)]&#45;&gt;org.scalacheck.Arbitrary[monocle.function.CList] -->
<g id="edge937" class="edge">
<title>org.scalacheck.Arbitrary[(monocle.function.CList, Char)]&#45;&gt;org.scalacheck.Arbitrary[monocle.function.CList]</title>
<path fill="none" stroke="#000000" d="M6089.3159,-2450.9609C6304.8808,-2444.4061 6626.1866,-2434.636 6835.9185,-2428.2585"/>
<polygon fill="#000000" stroke="#000000" points="6836.2433,-2431.7504 6846.1323,-2427.948 6836.0305,-2424.7536 6836.2433,-2431.7504"/>
</g>
<!-- org.scalacheck.Arbitrary[Char] -->
<g id="node847" class="node">
<title>org.scalacheck.Arbitrary[Char]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-4807.8701" rx="131.5437" ry="26.7407"/>
<text text-anchor="start" x="6961.014" y="-4811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Char]</text>
<text text-anchor="middle" x="7046.014" y="-4796.6701" font-family="Times,serif" font-size="14.00" fill="#000000">116 times = 460ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(monocle.function.CList, Char)]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge840" class="edge">
<title>org.scalacheck.Arbitrary[(monocle.function.CList, Char)]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M6052.7937,-2442.138C6208.5925,-2433.9979 6411.7235,-2435.7573 6466.6717,-2493.8701 6488.4092,-2516.8594 6452.9739,-4748.8432 6474.6717,-4771.8701 6532.5553,-4833.2991 6765.1291,-4829.0627 6915.1113,-4819.2542"/>
<polygon fill="#000000" stroke="#000000" points="6915.5724,-4822.7312 6925.3158,-4818.57 6915.104,-4815.7469 6915.5724,-4822.7312"/>
</g>
<!-- org.scalacheck.Arbitrary[A] -->
<g id="node39" class="node">
<title>org.scalacheck.Arbitrary[A]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-28195.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="6969.014" y="-28199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[A]</text>
<text text-anchor="middle" x="7046.014" y="-28184.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 11ms</text>
</g>
<!-- scala.reflect.ClassTag[A] -->
<g id="node79" class="node">
<title>scala.reflect.ClassTag[A]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-28195.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="8127.1985" y="-28199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[A]</text>
<text text-anchor="middle" x="8196.6985" y="-28184.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[A]&#45;&gt;scala.reflect.ClassTag[A] -->
<g id="edge1055" class="edge">
<title>org.scalacheck.Arbitrary[A]&#45;&gt;scala.reflect.ClassTag[A]</title>
<path fill="none" stroke="#000000" d="M7166.4413,-28195.8701C7387.5533,-28195.8701 7855.7852,-28195.8701 8076.6298,-28195.8701"/>
<polygon fill="#000000" stroke="#000000" points="8076.9573,-28199.3702 8086.9572,-28195.8701 8076.9572,-28192.3702 8076.9573,-28199.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.Quintary] -->
<g id="node40" class="node">
<title>org.scalacheck.Arbitrary[monocle.Quintary]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-16445.8701" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="5740.5954" y="-16449.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.Quintary]</text>
<text text-anchor="middle" x="5862.0954" y="-16434.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scala.reflect.ClassTag[monocle.Quintary] -->
<g id="node1061" class="node">
<title>scala.reflect.ClassTag[monocle.Quintary]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-16445.8701" rx="172.5681" ry="26.7407"/>
<text text-anchor="start" x="6932.014" y="-16449.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[monocle.Quintary]</text>
<text text-anchor="middle" x="7046.014" y="-16434.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.Quintary]&#45;&gt;scala.reflect.ClassTag[monocle.Quintary] -->
<g id="edge491" class="edge">
<title>org.scalacheck.Arbitrary[monocle.Quintary]&#45;&gt;scala.reflect.ClassTag[monocle.Quintary]</title>
<path fill="none" stroke="#000000" d="M6045.4595,-16445.8701C6267.9884,-16445.8701 6640.9397,-16445.8701 6863.2141,-16445.8701"/>
<polygon fill="#000000" stroke="#000000" points="6863.3549,-16449.3702 6873.3548,-16445.8701 6863.3548,-16442.3702 6863.3549,-16449.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar] -->
<g id="node41" class="node">
<title>org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-1737.8701" rx="239.9186" ry="26.7407"/>
<text text-anchor="start" x="5700.5954" y="-1741.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar]</text>
<text text-anchor="middle" x="5862.0954" y="-1726.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 7ms</text>
</g>
<!-- eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="node1255" class="node">
<title>eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-1989.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="6874.514" y="-1993.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</text>
<text text-anchor="middle" x="7046.014" y="-1978.6701" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge541" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M6058.9794,-1722.5188C6213.3503,-1715.2449 6411.0664,-1718.0432 6466.6717,-1773.8701 6489.2889,-1796.5774 6452.8147,-1894.4301 6474.6717,-1917.8701 6586.2255,-2037.5024 6788.5612,-2033.6273 6920.0735,-2015.2494"/>
<polygon fill="#000000" stroke="#000000" points="6920.8084,-2018.6796 6930.205,-2013.7854 6919.8072,-2011.7516 6920.8084,-2018.6796"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Char),L1] -->
<g id="node42" class="node">
<title>shapeless.Generic.Aux[(Int, Char),L1]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-29775.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="3061.3678" y="-29779.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Char),L1]</text>
<text text-anchor="middle" x="3166.8678" y="-29764.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scala.reflect.ClassTag[scalaz.IList[Char] =&gt; scalaz.IList[Char]] -->
<g id="node43" class="node">
<title>scala.reflect.ClassTag[scalaz.IList[Char] =&gt; scalaz.IList[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-3795.8701" rx="257.2738" ry="26.7407"/>
<text text-anchor="start" x="5688.0954" y="-3799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scalaz.IList[Char] =&gt; scalaz.IList[Char]]</text>
<text text-anchor="middle" x="5862.0954" y="-3784.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 5ms</text>
</g>
<!-- org.scalactic.Equality[monocle.Point] -->
<g id="node44" class="node">
<title>org.scalactic.Equality[monocle.Point]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-30045.8701" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="549.1596" y="-30049.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[monocle.Point]</text>
<text text-anchor="middle" x="652.6596" y="-30034.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- scalaz.Equal[monocle.Point] -->
<g id="node476" class="node">
<title>scalaz.Equal[monocle.Point]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-30045.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="1783.534" y="-30049.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Point]</text>
<text text-anchor="middle" x="1862.034" y="-30034.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalactic.Equality[monocle.Point]&#45;&gt;scalaz.Equal[monocle.Point] -->
<g id="edge784" class="edge">
<title>org.scalactic.Equality[monocle.Point]&#45;&gt;scalaz.Equal[monocle.Point]</title>
<path fill="none" stroke="#000000" d="M810.4538,-30045.8701C1050.9099,-30045.8701 1504.75,-30045.8701 1729.3051,-30045.8701"/>
<polygon fill="#000000" stroke="#000000" points="1729.4949,-30049.3702 1739.4948,-30045.8701 1729.4948,-30042.3702 1729.4949,-30049.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[String,String] -->
<g id="node45" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[String,String]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-30207.8701" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="1733.034" y="-30211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[String,String]</text>
<text text-anchor="middle" x="1862.034" y="-30196.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.Generic.Aux[String,L1] -->
<g id="node881" class="node">
<title>shapeless.Generic.Aux[String,L1]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-30207.8701" rx="142.6713" ry="26.7407"/>
<text text-anchor="start" x="3073.8678" y="-30211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[String,L1]</text>
<text text-anchor="middle" x="3166.8678" y="-30196.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[String,String]&#45;&gt;shapeless.Generic.Aux[String,L1] -->
<g id="edge167" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[String,String]&#45;&gt;shapeless.Generic.Aux[String,L1]</title>
<path fill="none" stroke="#000000" d="M2055.9718,-30207.8701C2316.8526,-30207.8701 2775.4999,-30207.8701 3013.6476,-30207.8701"/>
<polygon fill="#000000" stroke="#000000" points="3013.7718,-30211.3702 3023.7718,-30207.8701 3013.7717,-30204.3702 3013.7718,-30211.3702"/>
</g>
<!-- monocle.function.Each[Either[Unit,Int],Int] -->
<g id="node46" class="node">
<title>monocle.function.Each[Either[Unit,Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-30279.8701" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="532.6596" y="-30283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Either[Unit,Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-30268.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- shapeless.Generic.Aux[Either[Unit,Int],SGen] -->
<g id="node1049" class="node">
<title>shapeless.Generic.Aux[Either[Unit,Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-30279.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="1735.534" y="-30283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Either[Unit,Int],SGen]</text>
<text text-anchor="middle" x="1862.034" y="-30268.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- monocle.function.Each[Either[Unit,Int],Int]&#45;&gt;shapeless.Generic.Aux[Either[Unit,Int],SGen] -->
<g id="edge594" class="edge">
<title>monocle.function.Each[Either[Unit,Int],Int]&#45;&gt;shapeless.Generic.Aux[Either[Unit,Int],SGen]</title>
<path fill="none" stroke="#000000" d="M833.7151,-30279.8701C1055.7699,-30279.8701 1430.993,-30279.8701 1661.563,-30279.8701"/>
<polygon fill="#000000" stroke="#000000" points="1661.7493,-30283.3702 1671.7492,-30279.8701 1661.7492,-30276.3702 1661.7493,-30283.3702"/>
</g>
<!-- monocle.function.Cons1[(Int, Char),Int,Char] -->
<g id="node47" class="node">
<title>monocle.function.Cons1[(Int, Char),Int,Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-30351.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="527.6596" y="-30355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons1[(Int, Char),Int,Char]</text>
<text text-anchor="middle" x="652.6596" y="-30340.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.IsHCons.Aux[(Int, Char),Int,Char] -->
<g id="node1224" class="node">
<title>shapeless.ops.hlist.IsHCons.Aux[(Int, Char),Int,Char]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-30351.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="1714.534" y="-30355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.IsHCons.Aux[(Int, Char),Int,Char]</text>
<text text-anchor="middle" x="1862.034" y="-30340.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Cons1[(Int, Char),Int,Char]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[(Int, Char),Int,Char] -->
<g id="edge713" class="edge">
<title>monocle.function.Cons1[(Int, Char),Int,Char]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[(Int, Char),Int,Char]</title>
<path fill="none" stroke="#000000" d="M840.9604,-30351.8701C1054.3835,-30351.8701 1402.3335,-30351.8701 1631.7423,-30351.8701"/>
<polygon fill="#000000" stroke="#000000" points="1631.8942,-30355.3702 1641.8942,-30351.8701 1631.8942,-30348.3702 1631.8942,-30355.3702"/>
</g>
<!-- scala.reflect.ClassTag[Either[String,Int]] -->
<g id="node48" class="node">
<title>scala.reflect.ClassTag[Either[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-8461.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="5750.5954" y="-8465.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Either[String,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-8450.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- scala.reflect.ClassTag[scalaz.Validation[String,Int] =&gt; scalaz.Validation[String,Int]] -->
<g id="node49" class="node">
<title>scala.reflect.ClassTag[scalaz.Validation[String,Int] =&gt; scalaz.Validation[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-8389.8701" rx="337.9941" ry="26.7407"/>
<text text-anchor="start" x="5631.0954" y="-8393.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scalaz.Validation[String,Int] =&gt; scalaz.Validation[String,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-8378.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Snoc[String,Char] -->
<g id="node50" class="node">
<title>monocle.function.Snoc[String,Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-30423.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="553.1596" y="-30427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc[String,Char]</text>
<text text-anchor="middle" x="652.6596" y="-30412.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[List[String]] -->
<g id="node51" class="node">
<title>scalaz.Equal[List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-23313.8701" rx="111.0315" ry="26.7407"/>
<text text-anchor="start" x="5791.5954" y="-23317.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[List[String]]</text>
<text text-anchor="middle" x="5862.0954" y="-23302.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Order[String] -->
<g id="node52" class="node">
<title>scalaz.Order[String]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-21971.8701" rx="89.6056" ry="26.7407"/>
<text text-anchor="start" x="6990.514" y="-21975.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[String]</text>
<text text-anchor="middle" x="7046.014" y="-21960.6701" font-family="Times,serif" font-size="14.00" fill="#000000">26 times = 5ms</text>
</g>
<!-- scalaz.Equal[List[String]]&#45;&gt;scalaz.Order[String] -->
<g id="edge1028" class="edge">
<title>scalaz.Equal[List[String]]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M5966.4182,-23323.0599C6120.2367,-23334.1406 6397.2086,-23343.8659 6466.6717,-23277.8701 6478.3426,-23266.7817 6470.3446,-23221.3761 6474.6717,-23205.8701 6614.6925,-22704.1072 6937.8038,-22150.5406 7024.3557,-22007.2486"/>
<polygon fill="#000000" stroke="#000000" points="7027.5231,-22008.775 7029.7102,-21998.4084 7021.5357,-22005.1485 7027.5231,-22008.775"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char),(Char, Int)] -->
<g id="node53" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char),(Char, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-29847.8701" rx="305.4403" ry="26.7407"/>
<text text-anchor="start" x="2958.8678" y="-29851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char),(Char, Int)]</text>
<text text-anchor="middle" x="3166.8678" y="-29836.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[Int =&gt; monocle.Unary] -->
<g id="node54" class="node">
<title>scalaz.Equal[Int =&gt; monocle.Unary]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-16517.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="5761.0954" y="-16521.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int =&gt; monocle.Unary]</text>
<text text-anchor="middle" x="5862.0954" y="-16506.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- scalaz.Equal[monocle.Unary] -->
<g id="node1118" class="node">
<title>scalaz.Equal[monocle.Unary]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-16553.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="6964.514" y="-16557.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Unary]</text>
<text text-anchor="middle" x="7046.014" y="-16542.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scalaz.Equal[Int =&gt; monocle.Unary]&#45;&gt;scalaz.Equal[monocle.Unary] -->
<g id="edge667" class="edge">
<title>scalaz.Equal[Int =&gt; monocle.Unary]&#45;&gt;scalaz.Equal[monocle.Unary]</title>
<path fill="none" stroke="#000000" d="M6014.1464,-16522.4935C6246.845,-16529.5693 6687.6782,-16542.974 6910.2242,-16549.741"/>
<polygon fill="#000000" stroke="#000000" points="6910.2273,-16553.2426 6920.3291,-16550.0483 6910.4401,-16546.2459 6910.2273,-16553.2426"/>
</g>
<!-- scalaz.Equal[Int =&gt; monocle.Unary]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge694" class="edge">
<title>scalaz.Equal[Int =&gt; monocle.Unary]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M5998.7611,-16530.308C6157.3733,-16541.359 6405.1084,-16547.0231 6466.6717,-16481.8701 6480.1407,-16467.6157 6464.8991,-13674.8728 6474.6717,-13657.8701 6578.3663,-13477.4579 6820.9728,-13384.7083 6954.2726,-13345.8387"/>
<polygon fill="#000000" stroke="#000000" points="6955.4275,-13349.1486 6964.0709,-13343.0213 6953.4931,-13342.4212 6955.4275,-13349.1486"/>
</g>
<!-- shapeless.Generic.Aux[scalaz.Tree[Int],SGen] -->
<g id="node55" class="node">
<title>shapeless.Generic.Aux[scalaz.Tree[Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-30495.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="1735.534" y="-30499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scalaz.Tree[Int],SGen]</text>
<text text-anchor="middle" x="1862.034" y="-30484.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P) -->
<g id="node56" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-30567.8701" rx="304.1118" ry="26.7407"/>
<text text-anchor="start" x="445.6596" y="-30571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-30556.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Tupler[HListSpec.this.HTail] -->
<g id="node57" class="node">
<title>shapeless.ops.hlist.Tupler[HListSpec.this.HTail]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-30639.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="520.1596" y="-30643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Tupler[HListSpec.this.HTail]</text>
<text text-anchor="middle" x="652.6596" y="-30628.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- Stream[Stream[Int]] =&gt; ?{def ===: ?} -->
<g id="node58" class="node">
<title>Stream[Stream[Int]] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-30711.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="545.6596" y="-30715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Stream[Stream[Int]] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="652.6596" y="-30700.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Snoc1[scalaz.NonEmptyList[Int],scalaz.IList[Int],Int] -->
<g id="node59" class="node">
<title>monocle.function.Snoc1[scalaz.NonEmptyList[Int],scalaz.IList[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-30783.8701" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="455.6596" y="-30787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc1[scalaz.NonEmptyList[Int],scalaz.IList[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-30772.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.Init.Aux[scalaz.NonEmptyList[Int],scalaz.IList[Int]] -->
<g id="node1227" class="node">
<title>shapeless.ops.hlist.Init.Aux[scalaz.NonEmptyList[Int],scalaz.IList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-30783.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="1666.534" y="-30787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init.Aux[scalaz.NonEmptyList[Int],scalaz.IList[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-30772.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Snoc1[scalaz.NonEmptyList[Int],scalaz.IList[Int],Int]&#45;&gt;shapeless.ops.hlist.Init.Aux[scalaz.NonEmptyList[Int],scalaz.IList[Int]] -->
<g id="edge695" class="edge">
<title>monocle.function.Snoc1[scalaz.NonEmptyList[Int],scalaz.IList[Int],Int]&#45;&gt;shapeless.ops.hlist.Init.Aux[scalaz.NonEmptyList[Int],scalaz.IList[Int]]</title>
<path fill="none" stroke="#000000" d="M942.7194,-30783.8701C1130.5753,-30783.8701 1374.5861,-30783.8701 1564.0022,-30783.8701"/>
<polygon fill="#000000" stroke="#000000" points="1564.1166,-30787.3702 1574.1166,-30783.8701 1564.1165,-30780.3702 1564.1166,-30787.3702"/>
</g>
<!-- org.scalacheck.Cogen[(Char, monocle.function.CList)] -->
<g id="node60" class="node">
<title>org.scalacheck.Cogen[(Char, monocle.function.CList)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-2889.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="5711.5954" y="-2893.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Char, monocle.function.CList)]</text>
<text text-anchor="middle" x="5862.0954" y="-2878.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- org.scalacheck.Cogen[Char] -->
<g id="node487" class="node">
<title>org.scalacheck.Cogen[Char]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-3253.8701" rx="120.8306" ry="26.7407"/>
<text text-anchor="start" x="6968.514" y="-3257.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Char]</text>
<text text-anchor="middle" x="7046.014" y="-3242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">56 times = 96ms</text>
</g>
<!-- org.scalacheck.Cogen[(Char, monocle.function.CList)]&#45;&gt;org.scalacheck.Cogen[Char] -->
<g id="edge160" class="edge">
<title>org.scalacheck.Cogen[(Char, monocle.function.CList)]&#45;&gt;org.scalacheck.Cogen[Char]</title>
<path fill="none" stroke="#000000" d="M6068.2772,-2879.262C6187.0469,-2878.7653 6337.8528,-2887.8045 6466.6717,-2925.8701 6687.0215,-2990.9827 6914.5016,-3152.7585 7005.1644,-3221.8083"/>
<polygon fill="#000000" stroke="#000000" points="7003.183,-3224.6992 7013.2511,-3227.9983 7007.4378,-3219.1407 7003.183,-3224.6992"/>
</g>
<!-- org.scalacheck.Cogen[monocle.function.CList] -->
<g id="node502" class="node">
<title>org.scalacheck.Cogen[monocle.function.CList]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-2673.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="6916.514" y="-2677.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[monocle.function.CList]</text>
<text text-anchor="middle" x="7046.014" y="-2662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 13ms</text>
</g>
<!-- org.scalacheck.Cogen[(Char, monocle.function.CList)]&#45;&gt;org.scalacheck.Cogen[monocle.function.CList] -->
<g id="edge931" class="edge">
<title>org.scalacheck.Cogen[(Char, monocle.function.CList)]&#45;&gt;org.scalacheck.Cogen[monocle.function.CList]</title>
<path fill="none" stroke="#000000" d="M6050.2716,-2904.5544C6205.6254,-2912.1565 6409.5244,-2910.1968 6466.6717,-2853.8701 6483.8114,-2836.9765 6458.0977,-2763.3189 6474.6717,-2745.8701 6589.5047,-2624.9753 6797.2098,-2631.0435 6928.0388,-2649.9576"/>
<polygon fill="#000000" stroke="#000000" points="6927.6972,-2653.4453 6938.1044,-2651.4599 6928.7306,-2646.522 6927.6972,-2653.4453"/>
</g>
<!-- org.scalacheck.Arbitrary[java.net.URL =&gt; java.net.URL] -->
<g id="node61" class="node">
<title>org.scalacheck.Arbitrary[java.net.URL =&gt; java.net.URL]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-30927.8701" rx="234.1047" ry="26.7407"/>
<text text-anchor="start" x="495.1596" y="-30931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[java.net.URL =&gt; java.net.URL]</text>
<text text-anchor="middle" x="652.6596" y="-30916.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- scala.reflect.ClassTag[java.net.URL =&gt; java.net.URL] -->
<g id="node446" class="node">
<title>scala.reflect.ClassTag[java.net.URL =&gt; java.net.URL]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-30999.8701" rx="223.3915" ry="26.7407"/>
<text text-anchor="start" x="1712.034" y="-31003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[java.net.URL =&gt; java.net.URL]</text>
<text text-anchor="middle" x="1862.034" y="-30988.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[java.net.URL =&gt; java.net.URL]&#45;&gt;scala.reflect.ClassTag[java.net.URL =&gt; java.net.URL] -->
<g id="edge1047" class="edge">
<title>org.scalacheck.Arbitrary[java.net.URL =&gt; java.net.URL]&#45;&gt;scala.reflect.ClassTag[java.net.URL =&gt; java.net.URL]</title>
<path fill="none" stroke="#000000" d="M865.4263,-30939.096C993.0125,-30945.9547 1158.4824,-30955.073 1305.3191,-30963.8701 1421.5735,-30970.8349 1551.4432,-30979.1995 1656.4886,-30986.1122"/>
<polygon fill="#000000" stroke="#000000" points="1656.367,-30989.6117 1666.5755,-30986.7765 1656.8271,-30982.6268 1656.367,-30989.6117"/>
</g>
<!-- org.scalacheck.Arbitrary[java.net.URL] -->
<g id="node1051" class="node">
<title>org.scalacheck.Arbitrary[java.net.URL]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-30927.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="1753.534" y="-30931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[java.net.URL]</text>
<text text-anchor="middle" x="1862.034" y="-30916.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[java.net.URL =&gt; java.net.URL]&#45;&gt;org.scalacheck.Arbitrary[java.net.URL] -->
<g id="edge438" class="edge">
<title>org.scalacheck.Arbitrary[java.net.URL =&gt; java.net.URL]&#45;&gt;org.scalacheck.Arbitrary[java.net.URL]</title>
<path fill="none" stroke="#000000" d="M886.9143,-30927.8701C1121.0466,-30927.8701 1475.7128,-30927.8701 1686.5922,-30927.8701"/>
<polygon fill="#000000" stroke="#000000" points="1686.8362,-30931.3702 1696.8362,-30927.8701 1686.8362,-30924.3702 1686.8362,-30931.3702"/>
</g>
<!-- org.scalacheck.Cogen[java.net.URL] -->
<g id="node1387" class="node">
<title>org.scalacheck.Cogen[java.net.URL]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-30855.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="1761.034" y="-30859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[java.net.URL]</text>
<text text-anchor="middle" x="1862.034" y="-30844.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[java.net.URL =&gt; java.net.URL]&#45;&gt;org.scalacheck.Cogen[java.net.URL] -->
<g id="edge14" class="edge">
<title>org.scalacheck.Arbitrary[java.net.URL =&gt; java.net.URL]&#45;&gt;org.scalacheck.Cogen[java.net.URL]</title>
<path fill="none" stroke="#000000" d="M860.5584,-30915.4928C1100.7158,-30901.1951 1490.3747,-30877.9968 1706.0158,-30865.1586"/>
<polygon fill="#000000" stroke="#000000" points="1706.3774,-30868.6434 1716.1516,-30864.5551 1705.9613,-30861.6557 1706.3774,-30868.6434"/>
</g>
<!-- scala.reflect.ClassTag[Option[Int] =&gt; Option[Int]] -->
<g id="node62" class="node">
<title>scala.reflect.ClassTag[Option[Int] =&gt; Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-14959.8701" rx="206.4504" ry="26.7407"/>
<text text-anchor="start" x="5724.0954" y="-14963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Option[Int] =&gt; Option[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-14948.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[(Boolean, String)] -->
<g id="node63" class="node">
<title>scala.reflect.ClassTag[(Boolean, String)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-6357.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="6934.514" y="-6361.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Boolean, String)]</text>
<text text-anchor="middle" x="7046.014" y="-6346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scalaz.Equal[Stream[Int]] -->
<g id="node64" class="node">
<title>scalaz.Equal[Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-22555.8701" rx="111.0315" ry="26.7407"/>
<text text-anchor="start" x="5791.5954" y="-22559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Stream[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-22544.6701" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 21ms</text>
</g>
<!-- scalaz.Equal[Int] -->
<g id="node407" class="node">
<title>scalaz.Equal[Int]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-21755.8701" rx="86.9483" ry="26.7407"/>
<text text-anchor="start" x="6992.514" y="-21759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int]</text>
<text text-anchor="middle" x="7046.014" y="-21744.6701" font-family="Times,serif" font-size="14.00" fill="#000000">339 times = 265ms</text>
</g>
<!-- scalaz.Equal[Stream[Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge204" class="edge">
<title>scalaz.Equal[Stream[Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5965.6457,-22565.7536C6120.2147,-22577.9582 6400.2615,-22589.3922 6466.6717,-22519.8701 6477.8781,-22508.1386 6464.9876,-21948.8865 6474.6717,-21935.8701 6584.8593,-21787.7669 6816.9205,-21758.5068 6948.8774,-21754.488"/>
<polygon fill="#000000" stroke="#000000" points="6949.0779,-21757.984 6958.983,-21754.2236 6948.8948,-21750.9864 6949.0779,-21757.984"/>
</g>
<!-- scalaz.Equal[scalaz.Cofree[Option,Int]] -->
<g id="node65" class="node">
<title>scalaz.Equal[scalaz.Cofree[Option,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-22665.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="5753.5954" y="-22669.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Cofree[Option,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-22654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 5ms</text>
</g>
<!-- scalaz.Equal[scalaz.Cofree[Option,Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge97" class="edge">
<title>scalaz.Equal[scalaz.Cofree[Option,Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M6010.408,-22677.6966C6169.2174,-22686.7155 6406.5492,-22688.4639 6466.6717,-22624.8701 6479.8209,-22610.9616 6463.2628,-21951.2383 6474.6717,-21935.8701 6584.7046,-21787.652 6816.8257,-21758.4363 6948.8338,-21754.4555"/>
<polygon fill="#000000" stroke="#000000" points="6949.0372,-21757.9516 6958.9433,-21754.1941 6948.8562,-21750.9539 6949.0372,-21757.9516"/>
</g>
<!-- monocle.Iso[MacroOutSideMonocleSpec.this.Example2,(Long, String)] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2,_$1] -->
<g id="node66" class="node">
<title>monocle.Iso[MacroOutSideMonocleSpec.this.Example2,(Long, String)] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2,_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-30999.8701" rx="548.0155" ry="26.7407"/>
<text text-anchor="start" x="273.1596" y="-31003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Iso[MacroOutSideMonocleSpec.this.Example2,(Long, String)] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2,_$1]</text>
<text text-anchor="middle" x="652.6596" y="-30988.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[scalaz.Tree[Int],Stream[scalaz.Tree[Int]]] -->
<g id="node67" class="node">
<title>org.scalacheck.util.Buildable[scalaz.Tree[Int],Stream[scalaz.Tree[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-9469.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="5666.5954" y="-9473.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[scalaz.Tree[Int],Stream[scalaz.Tree[Int]]]</text>
<text text-anchor="middle" x="5862.0954" y="-9458.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,scalaz.Tree[Int],Stream[scalaz.Tree[Int]]] -->
<g id="node104" class="node">
<title>scala.collection.generic.CanBuildFrom[F,scalaz.Tree[Int],Stream[scalaz.Tree[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-9469.8701" rx="334.423" ry="26.7407"/>
<text text-anchor="start" x="6817.514" y="-9473.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,scalaz.Tree[Int],Stream[scalaz.Tree[Int]]]</text>
<text text-anchor="middle" x="7046.014" y="-9458.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[scalaz.Tree[Int],Stream[scalaz.Tree[Int]]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,scalaz.Tree[Int],Stream[scalaz.Tree[Int]]] -->
<g id="edge1292" class="edge">
<title>org.scalacheck.util.Buildable[scalaz.Tree[Int],Stream[scalaz.Tree[Int]]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,scalaz.Tree[Int],Stream[scalaz.Tree[Int]]]</title>
<path fill="none" stroke="#000000" d="M6150.2006,-9469.8701C6316.3782,-9469.8701 6526.3871,-9469.8701 6701.2917,-9469.8701"/>
<polygon fill="#000000" stroke="#000000" points="6701.4375,-9473.3702 6711.4375,-9469.8701 6701.4375,-9466.3702 6701.4375,-9473.3702"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P) -->
<g id="node68" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-31071.8701" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="440.6596" y="-31075.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-31060.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Map[K,V]] -->
<g id="node69" class="node">
<title>scala.reflect.ClassTag[Map[K,V]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-28947.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="1768.534" y="-28951.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Map[K,V]]</text>
<text text-anchor="middle" x="1862.034" y="-28936.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Float] -->
<g id="node70" class="node">
<title>scala.reflect.ClassTag[Float]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-5555.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="8118.1985" y="-5559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Float]</text>
<text text-anchor="middle" x="8196.6985" y="-5544.6701" font-family="Times,serif" font-size="14.00" fill="#000000">24 times = 12ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int] -->
<g id="node71" class="node">
<title>monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-26985.8701" rx="263.5019" ry="26.7407"/>
<text text-anchor="start" x="4407.753" y="-26989.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int]</text>
<text text-anchor="middle" x="4586.253" y="-26974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 19ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int] -->
<g id="node434" class="node">
<title>monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-27021.8701" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="5698.5954" y="-27025.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int]</text>
<text text-anchor="middle" x="5862.0954" y="-27010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 16ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int] -->
<g id="edge347" class="edge">
<title>monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M4840.6077,-26993.0471C5066.3104,-26999.4157 5393.9054,-27008.6593 5616.8208,-27014.9492"/>
<polygon fill="#000000" stroke="#000000" points="5616.9293,-27018.4536 5627.0241,-27015.2371 5617.1268,-27011.4564 5616.9293,-27018.4536"/>
</g>
<!-- shapeless.Generic.Aux[Int :: Int :: Int :: Int :: shapeless.HNil,SGen] -->
<g id="node466" class="node">
<title>shapeless.Generic.Aux[Int :: Int :: Int :: Int :: shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-26949.8701" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="5677.0954" y="-26953.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Int :: Int :: Int :: Int :: shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="5862.0954" y="-26938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: Int :: Int :: Int :: shapeless.HNil,SGen] -->
<g id="edge836" class="edge">
<title>monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: Int :: Int :: Int :: shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M4840.6077,-26978.693C5057.2715,-26972.5795 5367.83,-26963.8166 5589.5488,-26957.5604"/>
<polygon fill="#000000" stroke="#000000" points="5589.8109,-26961.0545 5599.7082,-26957.2737 5589.6134,-26954.0573 5589.8109,-26961.0545"/>
</g>
<!-- scalaz.Equal[String \/ Int] -->
<g id="node72" class="node">
<title>scalaz.Equal[String \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-22043.8701" rx="108.375" ry="26.7407"/>
<text text-anchor="start" x="5793.5954" y="-22047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[String / Int]</text>
<text text-anchor="middle" x="5862.0954" y="-22032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 52ms</text>
</g>
<!-- scalaz.Equal[String \/ Int]&#45;&gt;scalaz.Order[String] -->
<g id="edge739" class="edge">
<title>scalaz.Equal[String \/ Int]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M5967.4932,-22037.6768C6088.1347,-22030.5686 6291.6626,-22018.5181 6466.6717,-22007.8701 6635.5912,-21997.5926 6832.193,-21985.3075 6947.4704,-21978.0713"/>
<polygon fill="#000000" stroke="#000000" points="6947.9218,-21981.5499 6957.6828,-21977.4301 6947.4831,-21974.5637 6947.9218,-21981.5499"/>
</g>
<!-- scalaz.Equal[String] -->
<g id="node367" class="node">
<title>scalaz.Equal[String]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-20167.8701" rx="89.6056" ry="26.7407"/>
<text text-anchor="start" x="6990.514" y="-20171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[String]</text>
<text text-anchor="middle" x="7046.014" y="-20156.6701" font-family="Times,serif" font-size="14.00" fill="#000000">115 times = 81ms</text>
</g>
<!-- scalaz.Equal[String \/ Int]&#45;&gt;scalaz.Equal[String] -->
<g id="edge259" class="edge">
<title>scalaz.Equal[String \/ Int]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M5963.1696,-22053.5993C6117.2599,-22065.9396 6400.1011,-22077.9654 6466.6717,-22007.8701 6476.3512,-21997.678 6470.438,-21009.2733 6474.6717,-20995.8701 6586.4065,-20642.1345 6906.0394,-20305.393 7011.6678,-20200.9561"/>
<polygon fill="#000000" stroke="#000000" points="7014.2251,-20203.35 7018.8974,-20193.841 7009.315,-20198.3609 7014.2251,-20203.35"/>
</g>
<!-- scalaz.Equal[String \/ Int]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge1091" class="edge">
<title>scalaz.Equal[String \/ Int]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5964.2113,-22052.9002C6117.5724,-22064.0454 6396.8751,-22074.1827 6466.6717,-22007.8701 6478.3426,-21996.7817 6464.4477,-21948.3051 6474.6717,-21935.8701 6591.2268,-21794.108 6818.5855,-21762.2563 6948.5994,-21756.1476"/>
<polygon fill="#000000" stroke="#000000" points="6949.1022,-21759.6294 6958.9439,-21755.7063 6948.8038,-21752.6358 6949.1022,-21759.6294"/>
</g>
<!-- org.scalacheck.Arbitrary[(String \/ Int, Boolean)] -->
<g id="node73" class="node">
<title>org.scalacheck.Arbitrary[(String \/ Int, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-7881.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="4453.753" y="-7885.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(String / Int, Boolean)]</text>
<text text-anchor="middle" x="4586.253" y="-7870.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Boolean] -->
<g id="node512" class="node">
<title>org.scalacheck.Arbitrary[Boolean]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="7046.014" cy="-6609.8701" rx="144.9138" ry="26.7407"/>
<text text-anchor="start" x="6951.514" y="-6613.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Boolean]</text>
<text text-anchor="middle" x="7046.014" y="-6598.6701" font-family="Times,serif" font-size="14.00" fill="#000000">101 times = 532ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String \/ Int, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge1020" class="edge">
<title>org.scalacheck.Arbitrary[(String \/ Int, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M4749.5667,-7897.2185C4923.6249,-7909.5366 5183.1659,-7914.9534 5249.5191,-7845.8701 5271.6495,-7822.829 5235.1745,-7293.7034 5257.5191,-7270.8701 5351.5453,-7174.7873 6372.6535,-7323.9607 6466.6717,-7227.8701 6489.2864,-7204.7569 6452.3756,-6669.2906 6474.6717,-6645.8701 6531.4453,-6586.2333 6754.0717,-6588.7138 6904.0751,-6597.8852"/>
<polygon fill="#000000" stroke="#000000" points="6904.0973,-6601.3934 6914.2971,-6598.5273 6904.5362,-6594.4072 6904.0973,-6601.3934"/>
</g>
<!-- org.scalacheck.Arbitrary[String \/ Int] -->
<g id="node845" class="node">
<title>org.scalacheck.Arbitrary[String \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-9325.8701" rx="154.7129" ry="26.7407"/>
<text text-anchor="start" x="5760.5954" y="-9329.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[String / Int]</text>
<text text-anchor="middle" x="5862.0954" y="-9314.6701" font-family="Times,serif" font-size="14.00" fill="#000000">15 times = 169ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String \/ Int, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[String \/ Int] -->
<g id="edge523" class="edge">
<title>org.scalacheck.Arbitrary[(String \/ Int, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[String \/ Int]</title>
<path fill="none" stroke="#000000" d="M4777.2266,-7874.3637C4950.5518,-7872.1697 5188.1382,-7882.2812 5249.5191,-7949.8701 5262.0314,-7963.6479 5244.7156,-9276.3625 5257.5191,-9289.8701 5317.7712,-9353.4354 5555.6292,-9349.5155 5714.4233,-9339.024"/>
<polygon fill="#000000" stroke="#000000" points="5715.0249,-9342.4914 5724.7657,-9338.3241 5714.5522,-9335.5074 5715.0249,-9342.4914"/>
</g>
<!-- scala.reflect.ClassTag[(String \/ Int, Boolean)] -->
<g id="node1457" class="node">
<title>scala.reflect.ClassTag[(String \/ Int, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-7881.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="5737.0954" y="-7885.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(String / Int, Boolean)]</text>
<text text-anchor="middle" x="5862.0954" y="-7870.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String \/ Int, Boolean)]&#45;&gt;scala.reflect.ClassTag[(String \/ Int, Boolean)] -->
<g id="edge510" class="edge">
<title>org.scalacheck.Arbitrary[(String \/ Int, Boolean)]&#45;&gt;scala.reflect.ClassTag[(String \/ Int, Boolean)]</title>
<path fill="none" stroke="#000000" d="M4785.253,-7881.8701C5024.7504,-7881.8701 5424.4624,-7881.8701 5663.6929,-7881.8701"/>
<polygon fill="#000000" stroke="#000000" points="5663.9013,-7885.3702 5673.9013,-7881.8701 5663.9012,-7878.3702 5663.9013,-7885.3702"/>
</g>
<!-- scala.reflect.ClassTag[List[Char]] -->
<g id="node74" class="node">
<title>scala.reflect.ClassTag[List[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-945.8701" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="6953.514" y="-949.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[List[Char]]</text>
<text text-anchor="middle" x="7046.014" y="-934.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- scala.collection.immutable.Stream[Int] =&gt; org.scalacheck.util.Pretty -->
<g id="node75" class="node">
<title>scala.collection.immutable.Stream[Int] =&gt; org.scalacheck.util.Pretty</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-31143.8701" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="464.6596" y="-31147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Stream[Int] =&gt; org.scalacheck.util.Pretty</text>
<text text-anchor="middle" x="652.6596" y="-31132.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 6ms</text>
</g>
<!-- scalaz.Equal[B] -->
<g id="node76" class="node">
<title>scalaz.Equal[B]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-31215.8701" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="609.1596" y="-31219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[B]</text>
<text text-anchor="middle" x="652.6596" y="-31204.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0,Char,(Char, Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="node77" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0,Char,(Char, Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-31215.8701" rx="629.1501" ry="26.7407"/>
<text text-anchor="start" x="4149.253" y="-31219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0,Char,(Char, Char :: Float :: Long :: Double :: shapeless.HNil)]</text>
<text text-anchor="middle" x="4586.253" y="-31204.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar =&gt; monocle.refined.LowerCaseChar] -->
<g id="node78" class="node">
<title>org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar =&gt; monocle.refined.LowerCaseChar]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-2097.8701" rx="385.2464" ry="26.7407"/>
<text text-anchor="start" x="4321.753" y="-2101.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar =&gt; monocle.refined.LowerCaseChar]</text>
<text text-anchor="middle" x="4586.253" y="-2086.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 21ms</text>
</g>
<!-- org.scalacheck.Cogen[monocle.refined.LowerCaseChar] -->
<g id="node173" class="node">
<title>org.scalacheck.Cogen[monocle.refined.LowerCaseChar]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-2241.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="5707.0954" y="-2245.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[monocle.refined.LowerCaseChar]</text>
<text text-anchor="middle" x="5862.0954" y="-2230.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar =&gt; monocle.refined.LowerCaseChar]&#45;&gt;org.scalacheck.Cogen[monocle.refined.LowerCaseChar] -->
<g id="edge605" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar =&gt; monocle.refined.LowerCaseChar]&#45;&gt;org.scalacheck.Cogen[monocle.refined.LowerCaseChar]</title>
<path fill="none" stroke="#000000" d="M4718.499,-2123.1603C4853.4992,-2148.0298 5069.3495,-2185.1829 5257.5191,-2205.8701 5380.5337,-2219.3942 5518.2278,-2228.0922 5631.1011,-2233.5432"/>
<polygon fill="#000000" stroke="#000000" points="5631.0965,-2237.0468 5641.2521,-2234.0279 5631.4304,-2230.0548 5631.0965,-2237.0468"/>
</g>
<!-- scala.reflect.ClassTag[monocle.refined.LowerCaseChar =&gt; monocle.refined.LowerCaseChar] -->
<g id="node373" class="node">
<title>scala.reflect.ClassTag[monocle.refined.LowerCaseChar =&gt; monocle.refined.LowerCaseChar]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-2097.8701" rx="374.5333" ry="26.7407"/>
<text text-anchor="start" x="5605.0954" y="-2101.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[monocle.refined.LowerCaseChar =&gt; monocle.refined.LowerCaseChar]</text>
<text text-anchor="middle" x="5862.0954" y="-2086.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar =&gt; monocle.refined.LowerCaseChar]&#45;&gt;scala.reflect.ClassTag[monocle.refined.LowerCaseChar =&gt; monocle.refined.LowerCaseChar] -->
<g id="edge1371" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar =&gt; monocle.refined.LowerCaseChar]&#45;&gt;scala.reflect.ClassTag[monocle.refined.LowerCaseChar =&gt; monocle.refined.LowerCaseChar]</title>
<path fill="none" stroke="#000000" d="M4971.6438,-2097.8701C5131.6958,-2097.8701 5317.0389,-2097.8701 5477.0541,-2097.8701"/>
<polygon fill="#000000" stroke="#000000" points="5477.0712,-2101.3702 5487.0711,-2097.8701 5477.0711,-2094.3702 5477.0712,-2101.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar] -->
<g id="node1476" class="node">
<title>org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-1809.8701" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="5699.5954" y="-1813.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar]</text>
<text text-anchor="middle" x="5862.0954" y="-1798.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 7ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar =&gt; monocle.refined.LowerCaseChar]&#45;&gt;org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar] -->
<g id="edge107" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar =&gt; monocle.refined.LowerCaseChar]&#45;&gt;org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar]</title>
<path fill="none" stroke="#000000" d="M4744.8953,-2122.3822C4898.2378,-2136.106 5125.0875,-2128.2316 5249.5191,-1989.8701 5270.9501,-1966.0399 5234.9019,-1868.5774 5257.5191,-1845.8701 5311.7936,-1791.3793 5501.4582,-1787.4092 5654.0559,-1794.0144"/>
<polygon fill="#000000" stroke="#000000" points="5653.9045,-1797.5111 5664.0519,-1794.4644 5654.2194,-1790.5181 5653.9045,-1797.5111"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Vector[Int],Vector[Int]] -->
<g id="node659" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Vector[Int],Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-28479.8701" rx="309.9257" ry="26.7407"/>
<text text-anchor="start" x="2955.8678" y="-28483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Vector[Int],Vector[Int]]</text>
<text text-anchor="middle" x="3166.8678" y="-28468.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Vector[Int],Vector[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Vector[Int],Vector[Int]] -->
<g id="edge1229" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[Vector[Int],Vector[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Vector[Int],Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M2092.6832,-28479.8701C2302.262,-28479.8701 2613.4667,-28479.8701 2847.0375,-28479.8701"/>
<polygon fill="#000000" stroke="#000000" points="2847.0537,-28483.3702 2857.0536,-28479.8701 2847.0536,-28476.3702 2847.0537,-28483.3702"/>
</g>
<!-- shapeless.ops.hlist.Init.Aux[scalaz.NonEmptyList[Char],scalaz.IList[Char]] -->
<g id="node81" class="node">
<title>shapeless.ops.hlist.Init.Aux[scalaz.NonEmptyList[Char],scalaz.IList[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-31359.8701" rx="304.1118" ry="26.7407"/>
<text text-anchor="start" x="1655.034" y="-31363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init.Aux[scalaz.NonEmptyList[Char],scalaz.IList[Char]]</text>
<text text-anchor="middle" x="1862.034" y="-31348.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[((Char, String)) =&gt; (Char, String)] -->
<g id="node82" class="node">
<title>scala.reflect.ClassTag[((Char, String)) =&gt; (Char, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-4735.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="5705.5954" y="-4739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Char, String)) =&gt; (Char, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-4724.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[(HListSpec.this.HInit, Double)] -->
<g id="node83" class="node">
<title>scala.reflect.ClassTag[(HListSpec.this.HInit, Double)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-801.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="6897.014" y="-805.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(HListSpec.this.HInit, Double)]</text>
<text text-anchor="middle" x="7046.014" y="-790.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scalaz.Equal[Int \&amp;/ String] -->
<g id="node84" class="node">
<title>scalaz.Equal[Int \&amp;/ String]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-21683.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="5788.0954" y="-21687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int &amp;/ String]</text>
<text text-anchor="middle" x="5862.0954" y="-21672.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Order[String] -->
<g id="edge54" class="edge">
<title>scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M5970.883,-21674.3615C6125.5366,-21663.4198 6397.8756,-21654.5079 6466.6717,-21719.8701 6478.3426,-21730.9584 6464.4477,-21779.435 6474.6717,-21791.8701 6590.4587,-21932.6978 6815.5933,-21965.0592 6946.0161,-21971.4683"/>
<polygon fill="#000000" stroke="#000000" points="6945.8658,-21974.965 6956.013,-21971.9179 6946.1803,-21967.9721 6945.8658,-21974.965"/>
</g>
<!-- scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Equal[String] -->
<g id="edge208" class="edge">
<title>scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M5977.4484,-21686.949C6134.5895,-21688.3896 6403.6632,-21680.1334 6466.6717,-21609.8701 6478.0594,-21597.1712 6469.4925,-21012.1217 6474.6717,-20995.8701 6587.4418,-20642.0157 6907.0816,-20304.7164 7012.1092,-20200.6217"/>
<polygon fill="#000000" stroke="#000000" points="7014.6339,-20203.0475 7019.2945,-20193.5328 7009.7177,-20198.0644 7014.6339,-20203.0475"/>
</g>
<!-- scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge871" class="edge">
<title>scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5974.6408,-21690.4845C6096.0575,-21697.6407 6295.0736,-21709.4296 6466.6717,-21719.8701 6637.0558,-21730.2367 6835.6043,-21742.6458 6950.4506,-21749.8559"/>
<polygon fill="#000000" stroke="#000000" points="6950.4176,-21753.3607 6960.6173,-21750.4943 6950.8564,-21746.3744 6950.4176,-21753.3607"/>
</g>
<!-- scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Order[Int] -->
<g id="edge952" class="edge">
<title>scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5960.149,-21698.2332C6084.4219,-21711.8698 6302.2333,-21720.2543 6466.6717,-21642.8701 6748.092,-21510.4345 6961.9138,-21176.0786 7026.1057,-21066.9281"/>
<polygon fill="#000000" stroke="#000000" points="7029.1434,-21068.6667 7031.1629,-21058.2661 7023.0983,-21065.1374 7029.1434,-21068.6667"/>
</g>
<!-- scala.reflect.ClassTag[scalaz.IList[Int] =&gt; scalaz.IList[Int]] -->
<g id="node85" class="node">
<title>scala.reflect.ClassTag[scalaz.IList[Int] =&gt; scalaz.IList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-13405.8701" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="5699.5954" y="-13409.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scalaz.IList[Int] =&gt; scalaz.IList[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-13394.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (=&gt; Float) =&gt; Int -->
<g id="node86" class="node">
<title>(=&gt; Float) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-31431.8701" rx="79.8062" ry="26.7407"/>
<text text-anchor="start" x="604.1596" y="-31435.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Float) =&gt; Int</text>
<text text-anchor="middle" x="652.6596" y="-31420.6701" font-family="Times,serif" font-size="14.00" fill="#000000">19 times = 2ms</text>
</g>
<!-- monocle.Iso[MacroOutSideMonocleSpec.this.ExampleType[Int],Option[Int]] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.ExampleType[Int],_$1] -->
<g id="node87" class="node">
<title>monocle.Iso[MacroOutSideMonocleSpec.this.ExampleType[Int],Option[Int]] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.ExampleType[Int],_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-31503.8701" rx="599.7531" ry="26.7407"/>
<text text-anchor="start" x="236.6596" y="-31507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Iso[MacroOutSideMonocleSpec.this.ExampleType[Int],Option[Int]] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.ExampleType[Int],_$1]</text>
<text text-anchor="middle" x="652.6596" y="-31492.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Stream[Int] =&gt; Traversable[Int] -->
<g id="node88" class="node">
<title>scala.collection.immutable.Stream[Int] =&gt; Traversable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-585.8701" rx="241.6612" ry="26.7407"/>
<text text-anchor="start" x="6883.014" y="-589.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Stream[Int] =&gt; Traversable[Int]</text>
<text text-anchor="middle" x="7046.014" y="-574.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 2ms</text>
</g>
<!-- scalaz.Equal[monocle.function.MMap[Int,String]] -->
<g id="node89" class="node">
<title>scalaz.Equal[monocle.function.MMap[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-31575.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="514.1596" y="-31579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.function.MMap[Int,String]]</text>
<text text-anchor="middle" x="652.6596" y="-31564.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- org.scalacheck.Cogen[(String, Int)] -->
<g id="node90" class="node">
<title>org.scalacheck.Cogen[(String, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-9181.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="5765.5954" y="-9185.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(String, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-9170.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Cogen[Int] -->
<g id="node664" class="node">
<title>org.scalacheck.Cogen[Int]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-10555.8701" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="6974.014" y="-10559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Int]</text>
<text text-anchor="middle" x="7046.014" y="-10544.6701" font-family="Times,serif" font-size="14.00" fill="#000000">178 times = 321ms</text>
</g>
<!-- org.scalacheck.Cogen[(String, Int)]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge895" class="edge">
<title>org.scalacheck.Cogen[(String, Int)]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M5994.206,-9169.7917C6152.5435,-9158.5815 6404.3832,-9152.2272 6466.6717,-9217.8701 6488.3738,-9240.7408 6456.398,-10327.1772 6474.6717,-10352.8701 6576.5285,-10496.0812 6788.5182,-10538.8382 6923.6794,-10551.2555"/>
<polygon fill="#000000" stroke="#000000" points="6923.4119,-10554.7454 6933.6793,-10552.1318 6924.0231,-10547.7721 6923.4119,-10554.7454"/>
</g>
<!-- org.scalacheck.Cogen[String] -->
<g id="node1185" class="node">
<title>org.scalacheck.Cogen[String]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-6069.8701" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="6965.014" y="-6073.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[String]</text>
<text text-anchor="middle" x="7046.014" y="-6058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">49 times = 130ms</text>
</g>
<!-- org.scalacheck.Cogen[(String, Int)]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge1304" class="edge">
<title>org.scalacheck.Cogen[(String, Int)]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M5994.2513,-9193.9914C6152.6357,-9205.246 6404.524,-9211.6462 6466.6717,-9145.8701 6480.4836,-9131.2518 6462.7555,-6266.0708 6474.6717,-6249.8701 6574.0129,-6114.8098 6774.8188,-6078.4725 6909.8979,-6070.0796"/>
<polygon fill="#000000" stroke="#000000" points="6910.1315,-6073.572 6919.9129,-6069.5009 6909.7276,-6066.5837 6910.1315,-6073.572"/>
</g>
<!-- org.scalacheck.Arbitrary[Option[Long]] -->
<g id="node91" class="node">
<title>org.scalacheck.Arbitrary[Option[Long]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-5383.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="5752.5954" y="-5387.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Option[Long]]</text>
<text text-anchor="middle" x="5862.0954" y="-5372.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Long] -->
<g id="node769" class="node">
<title>org.scalacheck.Arbitrary[Long]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-5464.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="6960.014" y="-5468.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Long]</text>
<text text-anchor="middle" x="7046.014" y="-5453.6701" font-family="Times,serif" font-size="14.00" fill="#000000">37 times = 140ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[Long]]&#45;&gt;org.scalacheck.Arbitrary[Long] -->
<g id="edge26" class="edge">
<title>org.scalacheck.Arbitrary[Option[Long]]&#45;&gt;org.scalacheck.Arbitrary[Long]</title>
<path fill="none" stroke="#000000" d="M5981.5646,-5365.1428C6108.6059,-5350.935 6312.1251,-5344.8693 6466.6717,-5419.8701 6471.4865,-5422.2067 6469.8609,-5426.5252 6474.6717,-5428.8701 6619.5728,-5499.499 6810.2011,-5495.0833 6930.4526,-5482.3629"/>
<polygon fill="#000000" stroke="#000000" points="6930.8649,-5485.8388 6940.4249,-5481.2719 6930.1035,-5478.8803 6930.8649,-5485.8388"/>
</g>
<!-- scala.reflect.ClassTag[((Char, Boolean, String, Long, Float)) =&gt; (Char, Boolean, String, Long, Float)] -->
<g id="node92" class="node">
<title>scala.reflect.ClassTag[((Char, Boolean, String, Long, Float)) =&gt; (Char, Boolean, String, Long, Float)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-4011.8701" rx="408.0012" ry="26.7407"/>
<text text-anchor="start" x="5581.5954" y="-4015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Char, Boolean, String, Long, Float)) =&gt; (Char, Boolean, String, Long, Float)]</text>
<text text-anchor="middle" x="5862.0954" y="-4000.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Prepend.Aux[Int :: shapeless.HNil,HListSpec.this.HTail,HListSpec.this.H] -->
<g id="node93" class="node">
<title>shapeless.ops.hlist.Prepend.Aux[Int :: shapeless.HNil,HListSpec.this.HTail,HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-31683.8701" rx="374.5333" ry="26.7407"/>
<text text-anchor="start" x="1605.034" y="-31687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Prepend.Aux[Int :: shapeless.HNil,HListSpec.this.HTail,HListSpec.this.H]</text>
<text text-anchor="middle" x="1862.034" y="-31672.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- shapeless.ops.hlist.Prepend[shapeless.HNil,HListSpec.this.HTail] -->
<g id="node723" class="node">
<title>shapeless.ops.hlist.Prepend[shapeless.HNil,HListSpec.this.HTail]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-31683.8701" rx="265.3302" ry="26.7407"/>
<text text-anchor="start" x="2987.3678" y="-31687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Prepend[shapeless.HNil,HListSpec.this.HTail]</text>
<text text-anchor="middle" x="3166.8678" y="-31672.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Prepend.Aux[Int :: shapeless.HNil,HListSpec.this.HTail,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Prepend[shapeless.HNil,HListSpec.this.HTail] -->
<g id="edge20" class="edge">
<title>shapeless.ops.hlist.Prepend.Aux[Int :: shapeless.HNil,HListSpec.this.HTail,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Prepend[shapeless.HNil,HListSpec.this.HTail]</title>
<path fill="none" stroke="#000000" d="M2236.8209,-31683.8701C2445.6135,-31683.8701 2701.0409,-31683.8701 2891.3497,-31683.8701"/>
<polygon fill="#000000" stroke="#000000" points="2891.5019,-31687.3702 2901.5019,-31683.8701 2891.5018,-31680.3702 2891.5019,-31687.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Boolean)] -->
<g id="node94" class="node">
<title>org.scalacheck.Arbitrary[(String, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-6429.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="5743.0954" y="-6433.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(String, Boolean)]</text>
<text text-anchor="middle" x="5862.0954" y="-6418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 40ms</text>
</g>
<!-- scala.reflect.ClassTag[(String, Boolean)] -->
<g id="node353" class="node">
<title>scala.reflect.ClassTag[(String, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-6429.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="6934.514" y="-6433.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(String, Boolean)]</text>
<text text-anchor="middle" x="7046.014" y="-6418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String, Boolean)]&#45;&gt;scala.reflect.ClassTag[(String, Boolean)] -->
<g id="edge23" class="edge">
<title>org.scalacheck.Arbitrary[(String, Boolean)]&#45;&gt;scala.reflect.ClassTag[(String, Boolean)]</title>
<path fill="none" stroke="#000000" d="M6041.9072,-6429.8701C6265.2032,-6429.8701 6643.8267,-6429.8701 6866.8308,-6429.8701"/>
<polygon fill="#000000" stroke="#000000" points="6867.0017,-6433.3702 6877.0017,-6429.8701 6867.0017,-6426.3702 6867.0017,-6433.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge34" class="edge">
<title>org.scalacheck.Arbitrary[(String, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6019.3244,-6416.8544C6177.2264,-6407.5684 6405.6397,-6405.7144 6466.6717,-6465.8701 6483.8114,-6482.7636 6457.5612,-6556.947 6474.6717,-6573.8701 6532.9984,-6631.5579 6753.684,-6629.8156 6903.0797,-6621.3018"/>
<polygon fill="#000000" stroke="#000000" points="6903.484,-6624.7842 6913.262,-6620.7049 6903.0742,-6617.7962 6903.484,-6624.7842"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge1134" class="edge">
<title>org.scalacheck.Arbitrary[(String, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6017.2407,-6416.2276C6175.9283,-6406.1122 6407.3672,-6403.2844 6466.6717,-6465.8701 6480.1991,-6480.1459 6463.5687,-7865.6369 6474.6717,-7881.8701 6571.8295,-8023.9197 6773.4523,-8076.6864 6909.2779,-8096.287"/>
<polygon fill="#000000" stroke="#000000" points="6908.96,-8099.7765 6919.3487,-8097.6971 6909.9307,-8092.8442 6908.96,-8099.7765"/>
</g>
<!-- monocle.function.Each[(String, String),String] -->
<g id="node95" class="node">
<title>monocle.function.Each[(String, String),String]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-27129.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="5734.0954" y="-27133.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[(String, String),String]</text>
<text text-anchor="middle" x="5862.0954" y="-27118.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 17ms</text>
</g>
<!-- monocle.function.Each[(String, String),String]&#45;&gt;shapeless.Generic.Aux[(String, String),SGen] -->
<g id="edge158" class="edge">
<title>monocle.function.Each[(String, String),String]&#45;&gt;shapeless.Generic.Aux[(String, String),SGen]</title>
<path fill="none" stroke="#000000" d="M6050.345,-27135.5943C6269.6161,-27142.2617 6630.0363,-27153.2212 6851.8209,-27159.9651"/>
<polygon fill="#000000" stroke="#000000" points="6851.8459,-27163.4674 6861.9477,-27160.2731 6852.0587,-27156.4706 6851.8459,-27163.4674"/>
</g>
<!-- monocle.function.Each[String :: String :: shapeless.HNil,String] -->
<g id="node798" class="node">
<title>monocle.function.Each[String :: String :: shapeless.HNil,String]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-27093.8701" rx="259.5164" ry="26.7407"/>
<text text-anchor="start" x="6870.514" y="-27097.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[String :: String :: shapeless.HNil,String]</text>
<text text-anchor="middle" x="7046.014" y="-27082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- monocle.function.Each[(String, String),String]&#45;&gt;monocle.function.Each[String :: String :: shapeless.HNil,String] -->
<g id="edge1113" class="edge">
<title>monocle.function.Each[(String, String),String]&#45;&gt;monocle.function.Each[String :: String :: shapeless.HNil,String]</title>
<path fill="none" stroke="#000000" d="M6050.345,-27124.1459C6249.2954,-27118.0963 6564.4454,-27108.5134 6786.8106,-27101.7518"/>
<polygon fill="#000000" stroke="#000000" points="6787.1079,-27105.2445 6796.9969,-27101.442 6786.8951,-27098.2477 6787.1079,-27105.2445"/>
</g>
<!-- org.scalacheck.Cogen[List[Int]] -->
<g id="node96" class="node">
<title>org.scalacheck.Cogen[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-10481.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="5775.0954" y="-10485.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[List[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-10470.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 33ms</text>
</g>
<!-- org.scalacheck.Cogen[List[Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge863" class="edge">
<title>org.scalacheck.Cogen[List[Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M5990.4842,-10489.8949C6221.0002,-10504.3031 6701.853,-10534.3585 6926.0832,-10548.3739"/>
<polygon fill="#000000" stroke="#000000" points="6926.0394,-10551.8779 6936.2383,-10549.0086 6926.4762,-10544.8915 6926.0394,-10551.8779"/>
</g>
<!-- org.scalacheck.Arbitrary[java.net.URI =&gt; java.net.URI] -->
<g id="node97" class="node">
<title>org.scalacheck.Arbitrary[java.net.URI =&gt; java.net.URI]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-31827.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="499.1596" y="-31831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[java.net.URI =&gt; java.net.URI]</text>
<text text-anchor="middle" x="652.6596" y="-31816.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Cogen[java.net.URI] -->
<g id="node137" class="node">
<title>org.scalacheck.Cogen[java.net.URI]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-31899.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="1762.534" y="-31903.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[java.net.URI]</text>
<text text-anchor="middle" x="1862.034" y="-31888.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[java.net.URI =&gt; java.net.URI]&#45;&gt;org.scalacheck.Cogen[java.net.URI] -->
<g id="edge732" class="edge">
<title>org.scalacheck.Arbitrary[java.net.URI =&gt; java.net.URI]&#45;&gt;org.scalacheck.Cogen[java.net.URI]</title>
<path fill="none" stroke="#000000" d="M861.379,-31838.8785C989.5,-31845.7612 1156.9248,-31854.9797 1305.3191,-31863.8701 1442.2198,-31872.0719 1598.0013,-31882.2146 1709.8913,-31889.6418"/>
<polygon fill="#000000" stroke="#000000" points="1709.6905,-31893.1361 1719.9005,-31890.3067 1710.1545,-31886.1515 1709.6905,-31893.1361"/>
</g>
<!-- org.scalacheck.Arbitrary[java.net.URI] -->
<g id="node1365" class="node">
<title>org.scalacheck.Arbitrary[java.net.URI]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-31827.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="1755.034" y="-31831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[java.net.URI]</text>
<text text-anchor="middle" x="1862.034" y="-31816.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[java.net.URI =&gt; java.net.URI]&#45;&gt;org.scalacheck.Arbitrary[java.net.URI] -->
<g id="edge196" class="edge">
<title>org.scalacheck.Arbitrary[java.net.URI =&gt; java.net.URI]&#45;&gt;org.scalacheck.Arbitrary[java.net.URI]</title>
<path fill="none" stroke="#000000" d="M881.1997,-31827.8701C1116.1233,-31827.8701 1476.6951,-31827.8701 1688.9892,-31827.8701"/>
<polygon fill="#000000" stroke="#000000" points="1689.299,-31831.3702 1699.299,-31827.8701 1689.299,-31824.3702 1689.299,-31831.3702"/>
</g>
<!-- scala.reflect.ClassTag[java.net.URI =&gt; java.net.URI] -->
<g id="node1426" class="node">
<title>scala.reflect.ClassTag[java.net.URI =&gt; java.net.URI]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-31755.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="1716.034" y="-31759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[java.net.URI =&gt; java.net.URI]</text>
<text text-anchor="middle" x="1862.034" y="-31744.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[java.net.URI =&gt; java.net.URI]&#45;&gt;scala.reflect.ClassTag[java.net.URI =&gt; java.net.URI] -->
<g id="edge775" class="edge">
<title>org.scalacheck.Arbitrary[java.net.URI =&gt; java.net.URI]&#45;&gt;scala.reflect.ClassTag[java.net.URI =&gt; java.net.URI]</title>
<path fill="none" stroke="#000000" d="M856.7875,-31815.7173C1078.9467,-31802.4911 1432.2111,-31781.4595 1655.3643,-31768.1741"/>
<polygon fill="#000000" stroke="#000000" points="1655.786,-31771.6553 1665.5603,-31767.5671 1655.3699,-31764.6677 1655.786,-31771.6553"/>
</g>
<!-- scala.reflect.ClassTag[Long] -->
<g id="node98" class="node">
<title>scala.reflect.ClassTag[Long]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-5464.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="8118.1985" y="-5468.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Long]</text>
<text text-anchor="middle" x="8196.6985" y="-5453.6701" font-family="Times,serif" font-size="14.00" fill="#000000">37 times = 19ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Int :: shapeless.HNil,Float :: Long :: Double :: shapeless.HNil,Out] -->
<g id="node99" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Int :: shapeless.HNil,Float :: Long :: Double :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-29559.8701" rx="488.7216" ry="26.7407"/>
<text text-anchor="start" x="5524.5954" y="-29563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Int :: shapeless.HNil,Float :: Long :: Double :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="5862.0954" y="-29548.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Float :: Char :: Boolean :: Int :: shapeless.HNil,Long :: Double :: shapeless.HNil,Out] -->
<g id="node100" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Float :: Char :: Boolean :: Int :: shapeless.HNil,Long :: Double :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-29559.8701" rx="488.7216" ry="26.7407"/>
<text text-anchor="start" x="6708.514" y="-29563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Float :: Char :: Boolean :: Int :: shapeless.HNil,Long :: Double :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="7046.014" y="-29548.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Int :: shapeless.HNil,Float :: Long :: Double :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Float :: Char :: Boolean :: Int :: shapeless.HNil,Long :: Double :: shapeless.HNil,Out] -->
<g id="edge879" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Int :: shapeless.HNil,Float :: Long :: Double :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Float :: Char :: Boolean :: Int :: shapeless.HNil,Long :: Double :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M6350.9033,-29559.8701C6415.5763,-29559.8701 6481.9443,-29559.8701 6546.7898,-29559.8701"/>
<polygon fill="#000000" stroke="#000000" points="6547.1836,-29563.3702 6557.1835,-29559.8701 6547.1835,-29556.3702 6547.1836,-29563.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Double :: shapeless.HNil,Out] -->
<g id="node263" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Double :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-29559.8701" rx="488.7216" ry="26.7407"/>
<text text-anchor="start" x="7859.1985" y="-29563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Double :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="8196.6985" y="-29548.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Float :: Char :: Boolean :: Int :: shapeless.HNil,Long :: Double :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Double :: shapeless.HNil,Out] -->
<g id="edge971" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Float :: Char :: Boolean :: Int :: shapeless.HNil,Long :: Double :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Double :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M7534.842,-29559.8701C7588.7214,-29559.8701 7643.6367,-29559.8701 7697.6393,-29559.8701"/>
<polygon fill="#000000" stroke="#000000" points="7697.7117,-29563.3702 7707.7117,-29559.8701 7697.7116,-29556.3702 7697.7117,-29563.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, List[Int])] -->
<g id="node101" class="node">
<title>org.scalacheck.Arbitrary[(Boolean, List[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-6827.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="4461.253" y="-6831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Boolean, List[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-6816.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 32ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, List[Int])]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge812" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, List[Int])]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M4760.0564,-6817.4899C4895.5491,-6809.6541 5088.4471,-6799.0595 5257.5191,-6791.8701 5324.6667,-6789.0147 6418.1487,-6800.3724 6466.6717,-6753.8701 6484.0467,-6737.2186 6457.5612,-6662.7932 6474.6717,-6645.8701 6532.9984,-6588.1822 6753.684,-6589.9245 6903.0797,-6598.4383"/>
<polygon fill="#000000" stroke="#000000" points="6903.0742,-6601.9439 6913.262,-6599.0353 6903.484,-6594.9559 6903.0742,-6601.9439"/>
</g>
<!-- scala.reflect.ClassTag[(Boolean, List[Int])] -->
<g id="node700" class="node">
<title>scala.reflect.ClassTag[(Boolean, List[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-6827.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="5744.5954" y="-6831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Boolean, List[Int])]</text>
<text text-anchor="middle" x="5862.0954" y="-6816.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, List[Int])]&#45;&gt;scala.reflect.ClassTag[(Boolean, List[Int])] -->
<g id="edge1153" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, List[Int])]&#45;&gt;scala.reflect.ClassTag[(Boolean, List[Int])]</title>
<path fill="none" stroke="#000000" d="M4774.5079,-6827.8701C5016.0696,-6827.8701 5432.6588,-6827.8701 5674.0967,-6827.8701"/>
<polygon fill="#000000" stroke="#000000" points="5674.391,-6831.3702 5684.391,-6827.8701 5674.3909,-6824.3702 5674.391,-6831.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Int]] -->
<g id="node1283" class="node">
<title>org.scalacheck.Arbitrary[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-8965.8701" rx="144.9138" ry="26.7407"/>
<text text-anchor="start" x="5767.5954" y="-8969.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[List[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-8954.6701" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 328ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, List[Int])]&#45;&gt;org.scalacheck.Arbitrary[List[Int]] -->
<g id="edge197" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, List[Int])]&#45;&gt;org.scalacheck.Arbitrary[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4680.0329,-6804.5613C4826.3606,-6774.4679 5106.9633,-6743.156 5249.5191,-6901.8701 5268.3408,-6922.8252 5238.1627,-8909.4078 5257.5191,-8929.8701 5318.6348,-8994.4774 5562.9619,-8989.4206 5721.6885,-8978.5557"/>
<polygon fill="#000000" stroke="#000000" points="5722.2859,-8982.0225 5732.0169,-8977.8323 5721.7968,-8975.0396 5722.2859,-8982.0225"/>
</g>
<!-- org.scalacheck.Arbitrary[Int \/ Boolean] -->
<g id="node102" class="node">
<title>org.scalacheck.Arbitrary[Int \/ Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-11907.8701" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="5754.5954" y="-11911.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Int / Boolean]</text>
<text text-anchor="middle" x="5862.0954" y="-11896.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 63ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int \/ Boolean]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge901" class="edge">
<title>org.scalacheck.Arbitrary[Int \/ Boolean]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6005.4553,-11920.7805C6164.2677,-11931.5302 6406.0078,-11936.155 6466.6717,-11871.8701 6479.1257,-11858.6727 6462.2405,-6659.0889 6474.6717,-6645.8701 6531.1217,-6585.8434 6754.1426,-6588.4738 6904.2708,-6597.7768"/>
<polygon fill="#000000" stroke="#000000" points="6904.2988,-6601.2855 6914.5009,-6598.4279 6904.7435,-6594.2997 6904.2988,-6601.2855"/>
</g>
<!-- scala.reflect.ClassTag[Int \/ Boolean] -->
<g id="node1058" class="node">
<title>scala.reflect.ClassTag[Int \/ Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-11907.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="6946.014" y="-11911.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Int / Boolean]</text>
<text text-anchor="middle" x="7046.014" y="-11896.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int \/ Boolean]&#45;&gt;scala.reflect.ClassTag[Int \/ Boolean] -->
<g id="edge553" class="edge">
<title>org.scalacheck.Arbitrary[Int \/ Boolean]&#45;&gt;scala.reflect.ClassTag[Int \/ Boolean]</title>
<path fill="none" stroke="#000000" d="M6025.4712,-11907.8701C6251.4687,-11907.8701 6657.098,-11907.8701 6882.937,-11907.8701"/>
<polygon fill="#000000" stroke="#000000" points="6883.2214,-11911.3702 6893.2213,-11907.8701 6883.2213,-11904.3702 6883.2214,-11911.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Int \/ Boolean]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge66" class="edge">
<title>org.scalacheck.Arbitrary[Int \/ Boolean]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6005.7414,-11895.0002C6164.4947,-11884.3284 6405.8604,-11879.8151 6466.6717,-11943.8701 6486.9832,-11965.265 6459.6084,-12980.5048 6474.6717,-13005.8701 6578.0093,-13179.8806 6814.8075,-13265.314 6948.8547,-13301.1164"/>
<polygon fill="#000000" stroke="#000000" points="6948.1602,-13304.5527 6958.7216,-13303.7116 6949.9408,-13297.7829 6948.1602,-13304.5527"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Int :: shapeless.HNil,Char :: Float :: Long :: Double :: shapeless.HNil,Out] -->
<g id="node103" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Int :: shapeless.HNil,Char :: Float :: Long :: Double :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-29559.8701" rx="488.7216" ry="26.7407"/>
<text text-anchor="start" x="4248.753" y="-29563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Int :: shapeless.HNil,Char :: Float :: Long :: Double :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="4586.253" y="-29548.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Int :: shapeless.HNil,Char :: Float :: Long :: Double :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Int :: shapeless.HNil,Float :: Long :: Double :: shapeless.HNil,Out] -->
<g id="edge981" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Int :: shapeless.HNil,Char :: Float :: Long :: Double :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Int :: shapeless.HNil,Float :: Long :: Double :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M5074.9666,-29559.8701C5169.4415,-29559.8701 5268.5419,-29559.8701 5363.333,-29559.8701"/>
<polygon fill="#000000" stroke="#000000" points="5363.3802,-29563.3702 5373.3802,-29559.8701 5363.3801,-29556.3702 5363.3802,-29563.3702"/>
</g>
<!-- scala.reflect.ClassTag[Double] -->
<g id="node105" class="node">
<title>scala.reflect.ClassTag[Double]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-1737.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="8112.1985" y="-1741.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Double]</text>
<text text-anchor="middle" x="8196.6985" y="-1726.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 8ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[Int] =&gt; List[Int]] -->
<g id="node106" class="node">
<title>org.scalacheck.Arbitrary[List[Int] =&gt; List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-8965.8701" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="4457.253" y="-8969.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[List[Int] =&gt; List[Int]]</text>
<text text-anchor="middle" x="4586.253" y="-8954.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 100ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[Int] =&gt; List[Int]]&#45;&gt;org.scalacheck.Cogen[List[Int]] -->
<g id="edge1201" class="edge">
<title>org.scalacheck.Arbitrary[List[Int] =&gt; List[Int]]&#45;&gt;org.scalacheck.Cogen[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4775.9487,-8960.2062C4930.3968,-8966.9895 5140.1293,-9004.5668 5249.5191,-9146.8701 5260.1932,-9160.7558 5245.8698,-10394.7918 5257.5191,-10407.8701 5383.3457,-10549.1315 5628.5569,-10529.098 5764.8483,-10504.217"/>
<polygon fill="#000000" stroke="#000000" points="5765.686,-10507.6211 5774.8722,-10502.3424 5764.3992,-10500.7404 5765.686,-10507.6211"/>
</g>
<!-- scala.reflect.ClassTag[List[Int] =&gt; List[Int]] -->
<g id="node749" class="node">
<title>scala.reflect.ClassTag[List[Int] =&gt; List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-8893.8701" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="5740.5954" y="-8897.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[List[Int] =&gt; List[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-8882.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[Int] =&gt; List[Int]]&#45;&gt;scala.reflect.ClassTag[List[Int] =&gt; List[Int]] -->
<g id="edge61" class="edge">
<title>org.scalacheck.Arbitrary[List[Int] =&gt; List[Int]]&#45;&gt;scala.reflect.ClassTag[List[Int] =&gt; List[Int]]</title>
<path fill="none" stroke="#000000" d="M4766.0068,-8955.726C5008.4552,-8942.0438 5437.8224,-8917.8132 5680.9722,-8904.0914"/>
<polygon fill="#000000" stroke="#000000" points="5681.1882,-8907.5849 5690.9751,-8903.5269 5680.7937,-8900.596 5681.1882,-8907.5849"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Int] =&gt; List[Int]]&#45;&gt;org.scalacheck.Arbitrary[List[Int]] -->
<g id="edge804" class="edge">
<title>org.scalacheck.Arbitrary[List[Int] =&gt; List[Int]]&#45;&gt;org.scalacheck.Arbitrary[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4780.026,-8965.8701C5033.658,-8965.8701 5473.2496,-8965.8701 5706.4231,-8965.8701"/>
<polygon fill="#000000" stroke="#000000" points="5706.6842,-8969.3702 5716.6842,-8965.8701 5706.6842,-8962.3702 5706.6842,-8969.3702"/>
</g>
<!-- org.scalacheck.Cogen[scalaz.Validation[String,Int]] -->
<g id="node107" class="node">
<title>org.scalacheck.Cogen[scalaz.Validation[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-8025.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="5720.5954" y="-8029.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[scalaz.Validation[String,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-8014.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.Validation[String,Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge1119" class="edge">
<title>org.scalacheck.Cogen[scalaz.Validation[String,Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M6072.6455,-8023.1494C6225.9749,-8026.2032 6415.4083,-8042.1562 6466.6717,-8099.8701 6487.4523,-8123.2655 6456.5799,-10327.3384 6474.6717,-10352.8701 6576.3521,-10496.3639 6788.6538,-10539.0243 6923.8846,-10551.3471"/>
<polygon fill="#000000" stroke="#000000" points="6923.6239,-10554.8376 6933.8894,-10552.2164 6924.2299,-10547.8638 6923.6239,-10554.8376"/>
</g>
<!-- org.scalacheck.Cogen[scalaz.Validation[String,Int]]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge1120" class="edge">
<title>org.scalacheck.Cogen[scalaz.Validation[String,Int]]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M6038.3293,-8040.7983C6195.7375,-8049.7733 6409.9752,-8049.7666 6466.6717,-7989.8701 6483.285,-7972.3191 6460.3346,-6269.3248 6474.6717,-6249.8701 6574.1368,-6114.901 6774.9106,-6078.5401 6909.9489,-6070.1171"/>
<polygon fill="#000000" stroke="#000000" points="6910.1804,-6073.6097 6919.9608,-6069.5361 6909.7748,-6066.6214 6910.1804,-6073.6097"/>
</g>
<!-- org.scalactic.Equality[List[List[Int]]] -->
<g id="node108" class="node">
<title>org.scalactic.Equality[List[List[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-21285.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="3065.8678" y="-21289.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[List[List[Int]]]</text>
<text text-anchor="middle" x="3166.8678" y="-21274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 29ms</text>
</g>
<!-- scalaz.Equal[List[List[Int]]] -->
<g id="node867" class="node">
<title>scalaz.Equal[List[List[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-21285.8701" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="4509.753" y="-21289.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[List[List[Int]]]</text>
<text text-anchor="middle" x="4586.253" y="-21274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 25ms</text>
</g>
<!-- org.scalactic.Equality[List[List[Int]]]&#45;&gt;scalaz.Equal[List[List[Int]]] -->
<g id="edge877" class="edge">
<title>org.scalactic.Equality[List[List[Int]]]&#45;&gt;scalaz.Equal[List[List[Int]]]</title>
<path fill="none" stroke="#000000" d="M3321.1301,-21285.8701C3602.4528,-21285.8701 4193.9642,-21285.8701 4456.2618,-21285.8701"/>
<polygon fill="#000000" stroke="#000000" points="4456.5967,-21289.3702 4466.5967,-21285.8701 4456.5967,-21282.3702 4456.5967,-21289.3702"/>
</g>
<!-- scalaz.Equal[CoproductSpec.this.IB] -->
<g id="node109" class="node">
<title>scalaz.Equal[CoproductSpec.this.IB]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-31899.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="551.6596" y="-31903.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[CoproductSpec.this.IB]</text>
<text text-anchor="middle" x="652.6596" y="-31888.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[(Boolean, String \/ Int)] -->
<g id="node110" class="node">
<title>scala.reflect.ClassTag[(Boolean, String \/ Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-7047.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="5737.0954" y="-7051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Boolean, String / Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-7036.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,SGen] -->
<g id="node111" class="node">
<title>shapeless.Generic.Aux[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-26985.8701" rx="315.2393" ry="26.7407"/>
<text text-anchor="start" x="2951.8678" y="-26989.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="3166.8678" y="-26974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.Generic.Aux[Vector[Int],L1] -->
<g id="node916" class="node">
<title>shapeless.Generic.Aux[Vector[Int],L1]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-28407.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="3059.8678" y="-28411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Vector[Int],L1]</text>
<text text-anchor="middle" x="3166.8678" y="-28396.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[Vector[Int],Vector[Int]]&#45;&gt;shapeless.Generic.Aux[Vector[Int],L1] -->
<g id="edge43" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[Vector[Int],Vector[Int]]&#45;&gt;shapeless.Generic.Aux[Vector[Int],L1]</title>
<path fill="none" stroke="#000000" d="M2094.9359,-28407.8701C2352.917,-28407.8701 2762.8609,-28407.8701 2993.8607,-28407.8701"/>
<polygon fill="#000000" stroke="#000000" points="2994.0433,-28411.3702 3004.0433,-28407.8701 2994.0432,-28404.3702 2994.0433,-28411.3702"/>
</g>
<!-- Stream[Int] =&gt; Traversable[Int] -->
<g id="node113" class="node">
<title>Stream[Int] =&gt; Traversable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-11509.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="6958.514" y="-11513.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Stream[Int] =&gt; Traversable[Int]</text>
<text text-anchor="middle" x="7046.014" y="-11498.6701" font-family="Times,serif" font-size="14.00" fill="#000000">17 times = 7ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop -->
<g id="node114" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-31971.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="505.1596" y="-31975.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop</text>
<text text-anchor="middle" x="652.6596" y="-31960.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Each[String :: shapeless.HNil,String] -->
<g id="node115" class="node">
<title>monocle.function.Each[String :: shapeless.HNil,String]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-27093.8701" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="8045.1985" y="-27097.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[String :: shapeless.HNil,String]</text>
<text text-anchor="middle" x="8196.6985" y="-27082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- monocle.function.Each[shapeless.HNil,String] -->
<g id="node681" class="node">
<title>monocle.function.Each[shapeless.HNil,String]</title>
<ellipse fill="none" stroke="#000000" cx="9347.3831" cy="-27093.8701" rx="191.752" ry="26.7407"/>
<text text-anchor="start" x="9219.8831" y="-27097.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[shapeless.HNil,String]</text>
<text text-anchor="middle" x="9347.3831" y="-27082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.function.Each[String :: shapeless.HNil,String]&#45;&gt;monocle.function.Each[shapeless.HNil,String] -->
<g id="edge914" class="edge">
<title>monocle.function.Each[String :: shapeless.HNil,String]&#45;&gt;monocle.function.Each[shapeless.HNil,String]</title>
<path fill="none" stroke="#000000" d="M8422.321,-27093.8701C8632.595,-27093.8701 8943.2898,-27093.8701 9145.5394,-27093.8701"/>
<polygon fill="#000000" stroke="#000000" points="9145.6887,-27097.3702 9155.6887,-27093.8701 9145.6887,-27090.3702 9145.6887,-27097.3702"/>
</g>
<!-- shapeless.Generic.Aux[String :: shapeless.HNil,SGen] -->
<g id="node1340" class="node">
<title>shapeless.Generic.Aux[String :: shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="9347.3831" cy="-27021.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="9198.3831" y="-27025.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[String :: shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="9347.3831" y="-27010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.function.Each[String :: shapeless.HNil,String]&#45;&gt;shapeless.Generic.Aux[String :: shapeless.HNil,SGen] -->
<g id="edge1327" class="edge">
<title>monocle.function.Each[String :: shapeless.HNil,String]&#45;&gt;shapeless.Generic.Aux[String :: shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M8396.4753,-27081.3697C8604.4832,-27068.3544 8928.806,-27048.061 9139.7033,-27034.8649"/>
<polygon fill="#000000" stroke="#000000" points="9140.2108,-27038.3401 9149.9727,-27034.2223 9139.7736,-27031.3537 9140.2108,-27038.3401"/>
</g>
<!-- org.scalactic.Equality[(Int, Stream[Int])] -->
<g id="node116" class="node">
<title>org.scalactic.Equality[(Int, Stream[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-22601.8701" rx="168.0831" ry="26.7407"/>
<text text-anchor="start" x="3055.8678" y="-22605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(Int, Stream[Int])]</text>
<text text-anchor="middle" x="3166.8678" y="-22590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[(Int, Stream[Int])] -->
<g id="node231" class="node">
<title>scalaz.Equal[(Int, Stream[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-22601.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="4500.253" y="-22605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, Stream[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-22590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[(Int, Stream[Int])]&#45;&gt;scalaz.Equal[(Int, Stream[Int])] -->
<g id="edge70" class="edge">
<title>org.scalactic.Equality[(Int, Stream[Int])]&#45;&gt;scalaz.Equal[(Int, Stream[Int])]</title>
<path fill="none" stroke="#000000" d="M3335.2638,-22601.8701C3617.113,-22601.8701 4179.3948,-22601.8701 4443.2761,-22601.8701"/>
<polygon fill="#000000" stroke="#000000" points="4443.3063,-22605.3702 4453.3063,-22601.8701 4443.3063,-22598.3702 4443.3063,-22605.3702"/>
</g>
<!-- org.scalacheck.Cogen[(Int, scalaz.IList[Int])] -->
<g id="node117" class="node">
<title>org.scalacheck.Cogen[(Int, scalaz.IList[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-11988.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="4462.753" y="-11992.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Int, scalaz.IList[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-11977.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Cogen[(Int, scalaz.IList[Int])]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge898" class="edge">
<title>org.scalacheck.Cogen[(Int, scalaz.IList[Int])]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M4741.7702,-12003.6604C4915.7746,-12016.3616 5182.1749,-12023.0003 5249.5191,-11952.8701 5271.9934,-11929.4661 5234.8465,-11392.0819 5257.5191,-11368.8701 5351.4613,-11272.6938 6347.4745,-11386.0554 6466.6717,-11323.8701 6788.1355,-11156.162 6981.0123,-10720.5914 7032.2128,-10592.0726"/>
<polygon fill="#000000" stroke="#000000" points="7035.5107,-10593.2501 7035.9257,-10582.6634 7028.9993,-10590.6807 7035.5107,-10593.2501"/>
</g>
<!-- org.scalacheck.Cogen[scalaz.IList[Int]] -->
<g id="node973" class="node">
<title>org.scalacheck.Cogen[scalaz.IList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-11653.8701" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="5754.5954" y="-11657.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[scalaz.IList[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-11642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 6ms</text>
</g>
<!-- org.scalacheck.Cogen[(Int, scalaz.IList[Int])]&#45;&gt;org.scalacheck.Cogen[scalaz.IList[Int]] -->
<g id="edge220" class="edge">
<title>org.scalacheck.Cogen[(Int, scalaz.IList[Int])]&#45;&gt;org.scalacheck.Cogen[scalaz.IList[Int]]</title>
<path fill="none" stroke="#000000" d="M4742.3327,-12003.5115C4916.1512,-12015.9812 5181.6715,-12022.312 5249.5191,-11952.8701 5269.5624,-11932.3558 5237.6147,-11715.519 5257.5191,-11694.8701 5316.9951,-11633.1694 5545.6377,-11633.3974 5704.0365,-11641.7195"/>
<polygon fill="#000000" stroke="#000000" points="5704.1912,-11645.2329 5714.3658,-11642.2788 5704.5697,-11638.2431 5704.1912,-11645.2329"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Float :: Long :: Double :: shapeless.HNil,Boolean :: Int :: shapeless.HNil,Out] -->
<g id="node118" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Float :: Long :: Double :: shapeless.HNil,Boolean :: Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-32043.8701" rx="488.7216" ry="26.7407"/>
<text text-anchor="start" x="6708.514" y="-32047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Char :: Float :: Long :: Double :: shapeless.HNil,Boolean :: Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="7046.014" y="-32032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Int :: shapeless.HNil,Out] -->
<g id="node988" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-32043.8701" rx="488.7216" ry="26.7407"/>
<text text-anchor="start" x="7859.1985" y="-32047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="8196.6985" y="-32032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Float :: Long :: Double :: shapeless.HNil,Boolean :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Int :: shapeless.HNil,Out] -->
<g id="edge662" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Float :: Long :: Double :: shapeless.HNil,Boolean :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M7534.842,-32043.8701C7588.7214,-32043.8701 7643.6367,-32043.8701 7697.6393,-32043.8701"/>
<polygon fill="#000000" stroke="#000000" points="7697.7117,-32047.3702 7707.7117,-32043.8701 7697.7116,-32040.3702 7697.7117,-32047.3702"/>
</g>
<!-- scalaz.Equal[scalaz.Maybe[Long]] -->
<g id="node119" class="node">
<title>scalaz.Equal[scalaz.Maybe[Long]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-17885.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="5767.0954" y="-17889.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Maybe[Long]]</text>
<text text-anchor="middle" x="5862.0954" y="-17874.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Order[Long] -->
<g id="node144" class="node">
<title>scalaz.Order[Long]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-17885.8701" rx="86.0347" ry="26.7407"/>
<text text-anchor="start" x="6993.014" y="-17889.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[Long]</text>
<text text-anchor="middle" x="7046.014" y="-17874.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[scalaz.Maybe[Long]]&#45;&gt;scalaz.Order[Long] -->
<g id="edge1143" class="edge">
<title>scalaz.Equal[scalaz.Maybe[Long]]&#45;&gt;scalaz.Order[Long]</title>
<path fill="none" stroke="#000000" d="M6007.8603,-17885.8701C6253.1099,-17885.8701 6741.7665,-17885.8701 6949.244,-17885.8701"/>
<polygon fill="#000000" stroke="#000000" points="6949.5089,-17889.3702 6959.5089,-17885.8701 6949.5088,-17882.3702 6949.5089,-17889.3702"/>
</g>
<!-- scalaz.Equal[Long] -->
<g id="node1407" class="node">
<title>scalaz.Equal[Long]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-18833.8701" rx="86.0347" ry="26.7407"/>
<text text-anchor="start" x="6993.014" y="-18837.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Long]</text>
<text text-anchor="middle" x="7046.014" y="-18822.6701" font-family="Times,serif" font-size="14.00" fill="#000000">25 times = 10ms</text>
</g>
<!-- scalaz.Equal[scalaz.Maybe[Long]]&#45;&gt;scalaz.Equal[Long] -->
<g id="edge574" class="edge">
<title>scalaz.Equal[scalaz.Maybe[Long]]&#45;&gt;scalaz.Equal[Long]</title>
<path fill="none" stroke="#000000" d="M5992.7845,-17873.9313C6150.9887,-17862.7046 6404.064,-17856.168 6466.6717,-17921.8701 6480.2972,-17936.169 6463.1653,-18616.8166 6474.6717,-18632.8701 6583.7023,-18784.9868 6817.3062,-18822.7427 6949.5554,-18831.6277"/>
<polygon fill="#000000" stroke="#000000" points="6949.4811,-18835.1299 6959.6811,-18832.2649 6949.9207,-18828.1437 6949.4811,-18835.1299"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.ISet[Int]] -->
<g id="node120" class="node">
<title>org.scalacheck.Arbitrary[scalaz.ISet[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-16877.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="5749.0954" y="-16881.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.ISet[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-16866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 9ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.ISet[Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge1374" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.ISet[Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M6011.1471,-16864.5887C6169.9734,-16854.1286 6406.7009,-16850.3768 6466.6717,-16913.8701 6482.3599,-16930.4797 6467.8497,-20182.065 6474.6717,-20203.8701 6585.6927,-20558.7239 6907.1831,-20895.998 7012.3103,-20999.5265"/>
<polygon fill="#000000" stroke="#000000" points="7009.9083,-21002.0731 7019.4997,-21006.5737 7014.8083,-20997.0741 7009.9083,-21002.0731"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.ISet[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1251" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.ISet[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6011.1462,-16891.1505C6169.9716,-16901.6098 6406.6983,-16905.3609 6466.6717,-16841.8701 6481.8551,-16825.7962 6463.6564,-13677.0421 6474.6717,-13657.8701 6578.3374,-13477.4413 6820.9559,-13384.6986 6954.2652,-13345.8345"/>
<polygon fill="#000000" stroke="#000000" points="6955.4204,-13349.1442 6964.0641,-13343.0174 6953.4864,-13342.4167 6955.4204,-13349.1442"/>
</g>
<!-- org.scalacheck.Arbitrary[((Char, scalaz.IList[Char])) =&gt; (Char, scalaz.IList[Char])] -->
<g id="node121" class="node">
<title>org.scalacheck.Arbitrary[((Char, scalaz.IList[Char])) =&gt; (Char, scalaz.IList[Char])]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-3243.8701" rx="334.423" ry="26.7407"/>
<text text-anchor="start" x="2938.3678" y="-3247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Char, scalaz.IList[Char])) =&gt; (Char, scalaz.IList[Char])]</text>
<text text-anchor="middle" x="3166.8678" y="-3232.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 80ms</text>
</g>
<!-- scala.reflect.ClassTag[((Char, scalaz.IList[Char])) =&gt; (Char, scalaz.IList[Char])] -->
<g id="node614" class="node">
<title>scala.reflect.ClassTag[((Char, scalaz.IList[Char])) =&gt; (Char, scalaz.IList[Char])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-3243.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="4365.253" y="-3247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Char, scalaz.IList[Char])) =&gt; (Char, scalaz.IList[Char])]</text>
<text text-anchor="middle" x="4586.253" y="-3232.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Char, scalaz.IList[Char])) =&gt; (Char, scalaz.IList[Char])]&#45;&gt;scala.reflect.ClassTag[((Char, scalaz.IList[Char])) =&gt; (Char, scalaz.IList[Char])] -->
<g id="edge57" class="edge">
<title>org.scalacheck.Arbitrary[((Char, scalaz.IList[Char])) =&gt; (Char, scalaz.IList[Char])]&#45;&gt;scala.reflect.ClassTag[((Char, scalaz.IList[Char])) =&gt; (Char, scalaz.IList[Char])]</title>
<path fill="none" stroke="#000000" d="M3501.4449,-3243.8701C3727.8726,-3243.8701 4025.7909,-3243.8701 4252.1241,-3243.8701"/>
<polygon fill="#000000" stroke="#000000" points="4252.1704,-3247.3702 4262.1703,-3243.8701 4252.1703,-3240.3702 4252.1704,-3247.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, scalaz.IList[Char])] -->
<g id="node760" class="node">
<title>org.scalacheck.Arbitrary[(Char, scalaz.IList[Char])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-4011.8701" rx="212.2642" ry="26.7407"/>
<text text-anchor="start" x="4444.253" y="-4015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Char, scalaz.IList[Char])]</text>
<text text-anchor="middle" x="4586.253" y="-4000.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 43ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Char, scalaz.IList[Char])) =&gt; (Char, scalaz.IList[Char])]&#45;&gt;org.scalacheck.Arbitrary[(Char, scalaz.IList[Char])] -->
<g id="edge1018" class="edge">
<title>org.scalacheck.Arbitrary[((Char, scalaz.IList[Char])) =&gt; (Char, scalaz.IList[Char])]&#45;&gt;org.scalacheck.Arbitrary[(Char, scalaz.IList[Char])]</title>
<path fill="none" stroke="#000000" d="M3192.9406,-3270.7007C3284.265,-3363.1328 3601.6106,-3671.4483 3922.9868,-3831.8701 4090.5723,-3915.5239 4302.0345,-3964.2679 4440.5448,-3989.4601"/>
<polygon fill="#000000" stroke="#000000" points="4439.9277,-3992.9052 4450.3898,-3991.2334 4441.1687,-3986.016 4439.9277,-3992.9052"/>
</g>
<!-- org.scalacheck.Cogen[(Char, scalaz.IList[Char])] -->
<g id="node1287" class="node">
<title>org.scalacheck.Cogen[(Char, scalaz.IList[Char])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-3171.8701" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="4451.753" y="-3175.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Char, scalaz.IList[Char])]</text>
<text text-anchor="middle" x="4586.253" y="-3160.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 22ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Char, scalaz.IList[Char])) =&gt; (Char, scalaz.IList[Char])]&#45;&gt;org.scalacheck.Cogen[(Char, scalaz.IList[Char])] -->
<g id="edge555" class="edge">
<title>org.scalacheck.Arbitrary[((Char, scalaz.IList[Char])) =&gt; (Char, scalaz.IList[Char])]&#45;&gt;org.scalacheck.Cogen[(Char, scalaz.IList[Char])]</title>
<path fill="none" stroke="#000000" d="M3449.8395,-3229.516C3727.4332,-3215.4347 4143.5696,-3194.3257 4387.7334,-3181.9402"/>
<polygon fill="#000000" stroke="#000000" points="4387.9769,-3185.4324 4397.7867,-3181.4302 4387.6222,-3178.4414 4387.9769,-3185.4324"/>
</g>
<!-- org.scalacheck.Arbitrary[Int \/ String] -->
<g id="node122" class="node">
<title>org.scalacheck.Arbitrary[Int \/ String]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-9973.8701" rx="154.7129" ry="26.7407"/>
<text text-anchor="start" x="5760.5954" y="-9977.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Int / String]</text>
<text text-anchor="middle" x="5862.0954" y="-9962.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 12ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int \/ String]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge744" class="edge">
<title>org.scalacheck.Arbitrary[Int \/ String]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M5999.4398,-9986.338C6158.0603,-9997.3384 6405.1403,-10002.8723 6466.6717,-9937.8701 6483.1707,-9920.4404 6459.2217,-8228.236 6474.6717,-8209.8701 6583.8781,-8080.0524 6796.5641,-8076.8712 6929.3834,-8089.9063"/>
<polygon fill="#000000" stroke="#000000" points="6929.2928,-8093.4154 6939.5982,-8090.9562 6930.0085,-8086.4521 6929.2928,-8093.4154"/>
</g>
<!-- org.scalacheck.Arbitrary[Int \/ String]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge133" class="edge">
<title>org.scalacheck.Arbitrary[Int \/ String]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M5999.4612,-9961.3818C6158.103,-9950.3613 6405.204,-9944.8076 6466.6717,-10009.8701 6480.9598,-10024.9937 6464.0917,-12987.9553 6474.6717,-13005.8701 6577.5859,-13180.1314 6814.5508,-13265.4659 6948.738,-13301.1855"/>
<polygon fill="#000000" stroke="#000000" points="6948.0547,-13304.6245 6958.6153,-13303.7745 6949.8296,-13297.8533 6948.0547,-13304.6245"/>
</g>
<!-- scala.reflect.ClassTag[(((Int, Char, Boolean, String, Long), Float)) =&gt; ((Int, Char, Boolean, String, Long), Float)] -->
<g id="node123" class="node">
<title>scala.reflect.ClassTag[(((Int, Char, Boolean, String, Long), Float)) =&gt; ((Int, Char, Boolean, String, Long), Float)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-4627.8701" rx="452.5967" ry="26.7407"/>
<text text-anchor="start" x="4274.253" y="-4631.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(((Int, Char, Boolean, String, Long), Float)) =&gt; ((Int, Char, Boolean, String, Long), Float)]</text>
<text text-anchor="middle" x="4586.253" y="-4616.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scalaz.Tree[Int] =&gt; scalaz.Tree[Int]] -->
<g id="node124" class="node">
<title>scala.reflect.ClassTag[scalaz.Tree[Int] =&gt; scalaz.Tree[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-11251.8701" rx="240.3326" ry="26.7407"/>
<text text-anchor="start" x="5700.0954" y="-11255.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scalaz.Tree[Int] =&gt; scalaz.Tree[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-11240.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Tupler[Char :: Int :: shapeless.HNil] -->
<g id="node125" class="node">
<title>shapeless.ops.hlist.Tupler[Char :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-29703.8701" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="3015.3678" y="-29707.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Tupler[Char :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="3166.8678" y="-29692.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[C] -->
<g id="node126" class="node">
<title>scala.reflect.ClassTag[C]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-32115.8701" rx="108.789" ry="26.7407"/>
<text text-anchor="start" x="1793.034" y="-32119.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[C]</text>
<text text-anchor="middle" x="1862.034" y="-32104.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.IList[Char] =&gt; scalaz.IList[Char]] -->
<g id="node127" class="node">
<title>org.scalacheck.Arbitrary[scalaz.IList[Char] =&gt; scalaz.IList[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-3795.8701" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="4404.753" y="-3799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.IList[Char] =&gt; scalaz.IList[Char]]</text>
<text text-anchor="middle" x="4586.253" y="-3784.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 72ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.IList[Char] =&gt; scalaz.IList[Char]]&#45;&gt;scala.reflect.ClassTag[scalaz.IList[Char] =&gt; scalaz.IList[Char]] -->
<g id="edge121" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.IList[Char] =&gt; scalaz.IList[Char]]&#45;&gt;scala.reflect.ClassTag[scalaz.IList[Char] =&gt; scalaz.IList[Char]]</title>
<path fill="none" stroke="#000000" d="M4854.489,-3795.8701C5071.9504,-3795.8701 5376.9298,-3795.8701 5594.2786,-3795.8701"/>
<polygon fill="#000000" stroke="#000000" points="5594.5617,-3799.3702 5604.5616,-3795.8701 5594.5616,-3792.3702 5594.5617,-3799.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.IList[Char]] -->
<g id="node195" class="node">
<title>org.scalacheck.Arbitrary[scalaz.IList[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-4155.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="5741.5954" y="-4159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.IList[Char]]</text>
<text text-anchor="middle" x="5862.0954" y="-4144.6701" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 85ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.IList[Char] =&gt; scalaz.IList[Char]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.IList[Char]] -->
<g id="edge589" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.IList[Char] =&gt; scalaz.IList[Char]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.IList[Char]]</title>
<path fill="none" stroke="#000000" d="M4853.7215,-3797.7354C4993.7235,-3813.8737 5155.194,-3859.3806 5249.5191,-3975.8701 5269.6876,-4000.7777 5234.9019,-4097.1627 5257.5191,-4119.8701 5316.6039,-4179.1903 5536.1411,-4178.6378 5693.636,-4169.748"/>
<polygon fill="#000000" stroke="#000000" points="5694.1376,-4173.2249 5703.9179,-4169.151 5693.7318,-4166.2367 5694.1376,-4173.2249"/>
</g>
<!-- org.scalacheck.Cogen[scalaz.IList[Char]] -->
<g id="node551" class="node">
<title>org.scalacheck.Cogen[scalaz.IList[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-3253.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="5749.0954" y="-3257.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[scalaz.IList[Char]]</text>
<text text-anchor="middle" x="5862.0954" y="-3242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 25ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.IList[Char] =&gt; scalaz.IList[Char]]&#45;&gt;org.scalacheck.Cogen[scalaz.IList[Char]] -->
<g id="edge1031" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.IList[Char] =&gt; scalaz.IList[Char]]&#45;&gt;org.scalacheck.Cogen[scalaz.IList[Char]]</title>
<path fill="none" stroke="#000000" d="M4695.8159,-3771.2909C4849.4255,-3730.4217 5124.033,-3632.5428 5249.5191,-3433.8701 5258.0766,-3420.3216 5246.2105,-3301.2237 5257.5191,-3289.8701 5317.5569,-3229.593 5543.2647,-3231.1357 5701.2074,-3240.4285"/>
<polygon fill="#000000" stroke="#000000" points="5701.3174,-3243.9415 5711.5103,-3241.0512 5701.7398,-3236.9542 5701.3174,-3243.9415"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Double :: shapeless.HNil,HListSpec.this.ReverseH] -->
<g id="node128" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Double :: shapeless.HNil,HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="9347.3831" cy="-23673.8701" rx="571.1846" ry="26.7407"/>
<text text-anchor="start" x="8951.3831" y="-23677.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Double :: shapeless.HNil,HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="9347.3831" y="-23662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Double :: Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,shapeless.HNil,HListSpec.this.ReverseH] -->
<g id="node1139" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Double :: Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,shapeless.HNil,HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="10498.0677" cy="-23673.8701" rx="571.1846" ry="26.7407"/>
<text text-anchor="start" x="10102.0677" y="-23677.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Double :: Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,shapeless.HNil,HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="10498.0677" y="-23662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Double :: shapeless.HNil,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,shapeless.HNil,HListSpec.this.ReverseH] -->
<g id="edge373" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Double :: shapeless.HNil,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,shapeless.HNil,HListSpec.this.ReverseH]</title>
<path fill="none" stroke="#000000" d="M9918.9329,-23673.8701C9919.0916,-23673.8701 9919.2503,-23673.8701 9919.409,-23673.8701"/>
<polygon fill="#000000" stroke="#000000" points="9916.5513,-23677.3702 9926.5512,-23673.8701 9916.5512,-23670.3702 9916.5513,-23677.3702"/>
</g>
<!-- scalaz.Equal[Option[Int]] -->
<g id="node129" class="node">
<title>scalaz.Equal[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-21573.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="5792.5954" y="-21577.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-21562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">44 times = 92ms</text>
</g>
<!-- scalaz.Equal[Option[Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge45" class="edge">
<title>scalaz.Equal[Option[Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5963.1824,-21584.2896C6083.4537,-21597.1376 6290.1831,-21620.6459 6466.6717,-21647.8701 6644.577,-21675.3128 6851.5889,-21716.0467 6963.6688,-21738.8405"/>
<polygon fill="#000000" stroke="#000000" points="6963.0566,-21742.2876 6973.554,-21740.8544 6964.4541,-21735.4285 6963.0566,-21742.2876"/>
</g>
<!-- scalaz.Equal[Option[Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge567" class="edge">
<title>scalaz.Equal[Option[Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5958.4563,-21586.7114C6081.419,-21599.0134 6298.3369,-21606.8093 6466.6717,-21537.8701 6724.8851,-21432.1222 6947.533,-21161.9169 7020.6599,-21066.1553"/>
<polygon fill="#000000" stroke="#000000" points="7023.6134,-21068.0529 7026.8693,-21057.9707 7018.0367,-21063.822 7023.6134,-21068.0529"/>
</g>
<!-- shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless._0] -->
<g id="node130" class="node">
<title>shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless._0]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-32259.8701" rx="309.9257" ry="26.7407"/>
<text text-anchor="start" x="5651.0954" y="-32263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless._0]</text>
<text text-anchor="middle" x="5862.0954" y="-32248.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Snoc1[(Int, Char, Boolean, String, Long, Float),(Int, Char, Boolean, String, Long),Float] -->
<g id="node131" class="node">
<title>monocle.function.Snoc1[(Int, Char, Boolean, String, Long, Float),(Int, Char, Boolean, String, Long),Float]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-32331.8701" rx="426.2708" ry="26.7407"/>
<text text-anchor="start" x="359.1596" y="-32335.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc1[(Int, Char, Boolean, String, Long, Float),(Int, Char, Boolean, String, Long),Float]</text>
<text text-anchor="middle" x="652.6596" y="-32320.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Init.Aux[(Int, Char, Boolean, String, Long, Float),(Int, Char, Boolean, String, Long)] -->
<g id="node1309" class="node">
<title>shapeless.ops.hlist.Init.Aux[(Int, Char, Boolean, String, Long, Float),(Int, Char, Boolean, String, Long)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-32331.8701" rx="415.5577" ry="26.7407"/>
<text text-anchor="start" x="1576.034" y="-32335.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init.Aux[(Int, Char, Boolean, String, Long, Float),(Int, Char, Boolean, String, Long)]</text>
<text text-anchor="middle" x="1862.034" y="-32320.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Snoc1[(Int, Char, Boolean, String, Long, Float),(Int, Char, Boolean, String, Long),Float]&#45;&gt;shapeless.ops.hlist.Init.Aux[(Int, Char, Boolean, String, Long, Float),(Int, Char, Boolean, String, Long)] -->
<g id="edge669" class="edge">
<title>monocle.function.Snoc1[(Int, Char, Boolean, String, Long, Float),(Int, Char, Boolean, String, Long),Float]&#45;&gt;shapeless.ops.hlist.Init.Aux[(Int, Char, Boolean, String, Long, Float),(Int, Char, Boolean, String, Long)]</title>
<path fill="none" stroke="#000000" d="M1079.4651,-32331.8701C1195.1625,-32331.8701 1320.397,-32331.8701 1436.0492,-32331.8701"/>
<polygon fill="#000000" stroke="#000000" points="1436.1367,-32335.3702 1446.1366,-32331.8701 1436.1366,-32328.3702 1436.1367,-32335.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int, List[Int])) =&gt; (Int, List[Int])] -->
<g id="node132" class="node">
<title>org.scalacheck.Arbitrary[((Int, List[Int])) =&gt; (Int, List[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-9546.8701" rx="244.818" ry="26.7407"/>
<text text-anchor="start" x="3001.8678" y="-9550.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Int, List[Int])) =&gt; (Int, List[Int])]</text>
<text text-anchor="middle" x="3166.8678" y="-9535.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 53ms</text>
</g>
<!-- scala.reflect.ClassTag[((Int, List[Int])) =&gt; (Int, List[Int])] -->
<g id="node133" class="node">
<title>scala.reflect.ClassTag[((Int, List[Int])) =&gt; (Int, List[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-9546.8701" rx="234.1047" ry="26.7407"/>
<text text-anchor="start" x="4428.753" y="-9550.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Int, List[Int])) =&gt; (Int, List[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-9535.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, List[Int])) =&gt; (Int, List[Int])]&#45;&gt;scala.reflect.ClassTag[((Int, List[Int])) =&gt; (Int, List[Int])] -->
<g id="edge207" class="edge">
<title>org.scalacheck.Arbitrary[((Int, List[Int])) =&gt; (Int, List[Int])]&#45;&gt;scala.reflect.ClassTag[((Int, List[Int])) =&gt; (Int, List[Int])]</title>
<path fill="none" stroke="#000000" d="M3411.6766,-9546.8701C3672.0812,-9546.8701 4081.5876,-9546.8701 4341.8407,-9546.8701"/>
<polygon fill="#000000" stroke="#000000" points="4342.1908,-9550.3702 4352.1908,-9546.8701 4342.1908,-9543.3702 4342.1908,-9550.3702"/>
</g>
<!-- org.scalacheck.Cogen[(Int, List[Int])] -->
<g id="node177" class="node">
<title>org.scalacheck.Cogen[(Int, List[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-10222.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="4483.753" y="-10226.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Int, List[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-10211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 13ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, List[Int])) =&gt; (Int, List[Int])]&#45;&gt;org.scalacheck.Cogen[(Int, List[Int])] -->
<g id="edge1127" class="edge">
<title>org.scalacheck.Arbitrary[((Int, List[Int])) =&gt; (Int, List[Int])]&#45;&gt;org.scalacheck.Cogen[(Int, List[Int])]</title>
<path fill="none" stroke="#000000" d="M3257.5276,-9571.937C3422.1809,-9622.8401 3766.9837,-9755.4023 3914.9868,-10006.8701 3925.1413,-10024.1233 3908.9003,-10172.6447 3922.9868,-10186.8701 3992.535,-10257.1038 4266.3426,-10249.4199 4439.6734,-10236.6766"/>
<polygon fill="#000000" stroke="#000000" points="4439.9414,-10240.1664 4449.652,-10235.9292 4439.4185,-10233.186 4439.9414,-10240.1664"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, List[Int])] -->
<g id="node1132" class="node">
<title>org.scalacheck.Arbitrary[(Int, List[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-9182.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="4476.253" y="-9186.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, List[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-9171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 32ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, List[Int])) =&gt; (Int, List[Int])]&#45;&gt;org.scalacheck.Arbitrary[(Int, List[Int])] -->
<g id="edge1166" class="edge">
<title>org.scalacheck.Arbitrary[((Int, List[Int])) =&gt; (Int, List[Int])]&#45;&gt;org.scalacheck.Arbitrary[(Int, List[Int])]</title>
<path fill="none" stroke="#000000" d="M3263.312,-9522.137C3521.5848,-9455.9032 4226.9226,-9275.02 4487.6583,-9208.1546"/>
<polygon fill="#000000" stroke="#000000" points="4488.6769,-9211.5067 4497.4939,-9205.6322 4486.9379,-9204.7261 4488.6769,-9211.5067"/>
</g>
<!-- org.scalactic.Equality[monocle.Iso[monocle.Nullary,Unit]] -->
<g id="node134" class="node">
<title>org.scalactic.Equality[monocle.Iso[monocle.Nullary,Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-16373.8701" rx="240.3326" ry="26.7407"/>
<text text-anchor="start" x="3004.8678" y="-16377.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[monocle.Iso[monocle.Nullary,Unit]]</text>
<text text-anchor="middle" x="3166.8678" y="-16362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- scalaz.Equal[monocle.Iso[monocle.Nullary,Unit]] -->
<g id="node914" class="node">
<title>scalaz.Equal[monocle.Iso[monocle.Nullary,Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-16373.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="4449.253" y="-16377.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Iso[monocle.Nullary,Unit]]</text>
<text text-anchor="middle" x="4586.253" y="-16362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- org.scalactic.Equality[monocle.Iso[monocle.Nullary,Unit]]&#45;&gt;scalaz.Equal[monocle.Iso[monocle.Nullary,Unit]] -->
<g id="edge835" class="edge">
<title>org.scalactic.Equality[monocle.Iso[monocle.Nullary,Unit]]&#45;&gt;scalaz.Equal[monocle.Iso[monocle.Nullary,Unit]]</title>
<path fill="none" stroke="#000000" d="M3407.6472,-16373.8701C3677.604,-16373.8701 4111.4065,-16373.8701 4370.6374,-16373.8701"/>
<polygon fill="#000000" stroke="#000000" points="4370.9329,-16377.3702 4380.9329,-16373.8701 4370.9329,-16370.3702 4370.9329,-16377.3702"/>
</g>
<!-- String =&gt; Int -->
<g id="node135" class="node">
<title>String =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-32403.8701" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="609.1596" y="-32407.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; Int</text>
<text text-anchor="middle" x="652.6596" y="-32392.6701" font-family="Times,serif" font-size="14.00" fill="#000000">17 times = 4ms</text>
</g>
<!-- scalaz.Equal[(Boolean, List[Int])] -->
<g id="node136" class="node">
<title>scalaz.Equal[(Boolean, List[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-18067.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="4494.253" y="-18071.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Boolean, List[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-18056.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scalaz.Equal[Boolean] -->
<g id="node504" class="node">
<title>scalaz.Equal[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-18596.8701" rx="98.0761" ry="26.7407"/>
<text text-anchor="start" x="6984.514" y="-18600.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Boolean]</text>
<text text-anchor="middle" x="7046.014" y="-18585.6701" font-family="Times,serif" font-size="14.00" fill="#000000">99 times = 101ms</text>
</g>
<!-- scalaz.Equal[(Boolean, List[Int])]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge394" class="edge">
<title>scalaz.Equal[(Boolean, List[Int])]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M4718.9414,-18058.3961C4854.2889,-18049.2406 5070.4065,-18036.0229 5257.5191,-18030.8701 5324.6688,-18029.0208 6418.4059,-17984.1484 6466.6717,-18030.8701 6486.3213,-18049.891 6460.462,-18253.5038 6474.6717,-18276.8701 6582.9083,-18454.8526 6828.889,-18541.9863 6959.9928,-18577.1428"/>
<polygon fill="#000000" stroke="#000000" points="6959.4389,-18580.6164 6970.0011,-18579.7853 6961.2259,-18573.8483 6959.4389,-18580.6164"/>
</g>
<!-- scalaz.Equal[List[Int]] -->
<g id="node1406" class="node">
<title>scalaz.Equal[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-21429.8701" rx="98.0761" ry="26.7407"/>
<text text-anchor="start" x="5800.5954" y="-21433.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[List[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-21418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">42 times = 78ms</text>
</g>
<!-- scalaz.Equal[(Boolean, List[Int])]&#45;&gt;scalaz.Equal[List[Int]] -->
<g id="edge698" class="edge">
<title>scalaz.Equal[(Boolean, List[Int])]&#45;&gt;scalaz.Equal[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4671.2873,-18046.3739C4814.9375,-18015.7647 5104.1802,-17979.8156 5249.5191,-18141.8701 5264.5974,-18158.6825 5242.0119,-21377.4525 5257.5191,-21393.8701 5323.6647,-21463.8988 5604.832,-21452.1258 5759.3413,-21439.7735"/>
<polygon fill="#000000" stroke="#000000" points="5759.6489,-21443.2601 5769.3318,-21438.9599 5759.0806,-21436.2832 5759.6489,-21443.2601"/>
</g>
<!-- (=&gt; monocle.Foo.type) =&gt; ?{def q_=: ?} -->
<g id="node138" class="node">
<title>(=&gt; monocle.Foo.type) =&gt; ?{def q_=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-32475.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="538.1596" y="-32479.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; monocle.Foo.type) =&gt; ?{def q_=: ?}</text>
<text text-anchor="middle" x="652.6596" y="-32464.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Vector[Int])] -->
<g id="node139" class="node">
<title>org.scalacheck.Arbitrary[(Int, Vector[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-14832.8701" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="4468.253" y="-14836.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Vector[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-14821.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Vector[Int]] -->
<g id="node1138" class="node">
<title>org.scalacheck.Arbitrary[Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-13113.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="5759.5954" y="-13117.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Vector[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-13102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">17 times = 63ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Vector[Int])]&#45;&gt;org.scalacheck.Arbitrary[Vector[Int]] -->
<g id="edge791" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Vector[Int])]&#45;&gt;org.scalacheck.Arbitrary[Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M4678.8248,-14855.9166C4824.7901,-14886.0598 5106.4945,-14917.9417 5249.5191,-14758.8701 5264.4607,-14742.252 5242.1535,-13166.0968 5257.5191,-13149.8701 5317.6068,-13086.4148 5554.56,-13090.1867 5713.3612,-13100.6358"/>
<polygon fill="#000000" stroke="#000000" points="5713.4926,-13104.1525 5723.7054,-13101.3331 5713.9635,-13097.1683 5713.4926,-13104.1525"/>
</g>
<!-- scala.reflect.ClassTag[(Int, Vector[Int])] -->
<g id="node1159" class="node">
<title>scala.reflect.ClassTag[(Int, Vector[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-14887.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="5751.5954" y="-14891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Vector[Int])]</text>
<text text-anchor="middle" x="5862.0954" y="-14876.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Vector[Int])]&#45;&gt;scala.reflect.ClassTag[(Int, Vector[Int])] -->
<g id="edge324" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Vector[Int])]&#45;&gt;scala.reflect.ClassTag[(Int, Vector[Int])]</title>
<path fill="none" stroke="#000000" d="M4757.6563,-14840.259C5001.48,-14850.77 5445.9055,-14869.9286 5690.0699,-14880.4542"/>
<polygon fill="#000000" stroke="#000000" points="5689.9653,-14883.9529 5700.1068,-14880.8869 5690.2668,-14876.9594 5689.9653,-14883.9529"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Vector[Int])]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge253" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Vector[Int])]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4764.5367,-14834.3454C5227.9869,-14837.7552 6436.8794,-14843.7573 6466.6717,-14813.8701 6478.0069,-14802.4987 6466.6423,-13671.7741 6474.6717,-13657.8701 6578.7348,-13477.6702 6821.1888,-13384.8327 6954.3676,-13345.8935"/>
<polygon fill="#000000" stroke="#000000" points="6955.518,-13349.2044 6964.1568,-13343.0708 6953.5786,-13342.4784 6955.518,-13349.2044"/>
</g>
<!-- org.scalactic.Equality[Stream[Stream[Int]]] -->
<g id="node140" class="node">
<title>org.scalactic.Equality[Stream[Stream[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-22457.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="3047.8678" y="-22461.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Stream[Stream[Int]]]</text>
<text text-anchor="middle" x="3166.8678" y="-22446.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[Stream[Stream[Int]]] -->
<g id="node767" class="node">
<title>scalaz.Equal[Stream[Stream[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-22457.8701" rx="144.9138" ry="26.7407"/>
<text text-anchor="start" x="4491.753" y="-22461.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Stream[Stream[Int]]]</text>
<text text-anchor="middle" x="4586.253" y="-22446.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[Stream[Stream[Int]]]&#45;&gt;scalaz.Equal[Stream[Stream[Int]]] -->
<g id="edge1355" class="edge">
<title>org.scalactic.Equality[Stream[Stream[Int]]]&#45;&gt;scalaz.Equal[Stream[Stream[Int]]]</title>
<path fill="none" stroke="#000000" d="M3346.6339,-22457.8701C3627.6086,-22457.8701 4166.0531,-22457.8701 4431.0868,-22457.8701"/>
<polygon fill="#000000" stroke="#000000" points="4431.1739,-22461.3702 4441.1739,-22457.8701 4431.1739,-22454.3702 4431.1739,-22461.3702"/>
</g>
<!-- scalaz.Choice[monocle.Fold] -->
<g id="node141" class="node">
<title>scalaz.Choice[monocle.Fold]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-32547.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="572.6596" y="-32551.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Choice[monocle.Fold]</text>
<text text-anchor="middle" x="652.6596" y="-32536.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- scala.reflect.ClassTag[Double =&gt; Double] -->
<g id="node142" class="node">
<title>scala.reflect.ClassTag[Double =&gt; Double]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-1809.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="6930.014" y="-1813.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Double =&gt; Double]</text>
<text text-anchor="middle" x="7046.014" y="-1798.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.languageFeature.higherKinds -->
<g id="node143" class="node">
<title>scala.languageFeature.higherKinds</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-32619.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="557.1596" y="-32623.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.languageFeature.higherKinds</text>
<text text-anchor="middle" x="652.6596" y="-32608.6701" font-family="Times,serif" font-size="14.00" fill="#000000">23 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.ReverseH,Out0] -->
<g id="node145" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.ReverseH,Out0]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-32043.8701" rx="340.2368" ry="26.7407"/>
<text text-anchor="start" x="1629.534" y="-32047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.ReverseH,Out0]</text>
<text text-anchor="middle" x="1862.034" y="-32032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Double :: shapeless.HNil,Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Out] -->
<g id="node808" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Double :: shapeless.HNil,Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-32043.8701" rx="488.7216" ry="26.7407"/>
<text text-anchor="start" x="2829.3678" y="-32047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Double :: shapeless.HNil,Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="3166.8678" y="-32032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.ReverseH,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: shapeless.HNil,Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Out] -->
<g id="edge1148" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.ReverseH,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: shapeless.HNil,Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M2202.3081,-32043.8701C2344.3583,-32043.8701 2512.2379,-32043.8701 2667.7899,-32043.8701"/>
<polygon fill="#000000" stroke="#000000" points="2668.0176,-32047.3702 2678.0176,-32043.8701 2668.0175,-32040.3702 2668.0176,-32047.3702"/>
</g>
<!-- scalaz.Equal[monocle.refined.UpperCaseChar] -->
<g id="node146" class="node">
<title>scalaz.Equal[monocle.refined.UpperCaseChar]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-32691.8701" rx="193.0803" ry="26.7407"/>
<text text-anchor="start" x="524.1596" y="-32695.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.refined.UpperCaseChar]</text>
<text text-anchor="middle" x="652.6596" y="-32680.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[Char] =&gt; List[Char]] -->
<g id="node147" class="node">
<title>org.scalacheck.Arbitrary[List[Char] =&gt; List[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-1665.8701" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="4446.253" y="-1669.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[List[Char] =&gt; List[Char]]</text>
<text text-anchor="middle" x="4586.253" y="-1654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- scala.reflect.ClassTag[List[Char] =&gt; List[Char]] -->
<g id="node849" class="node">
<title>scala.reflect.ClassTag[List[Char] =&gt; List[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-1665.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="5729.5954" y="-1669.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[List[Char] =&gt; List[Char]]</text>
<text text-anchor="middle" x="5862.0954" y="-1654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[Char] =&gt; List[Char]]&#45;&gt;scala.reflect.ClassTag[List[Char] =&gt; List[Char]] -->
<g id="edge1108" class="edge">
<title>org.scalacheck.Arbitrary[List[Char] =&gt; List[Char]]&#45;&gt;scala.reflect.ClassTag[List[Char] =&gt; List[Char]]</title>
<path fill="none" stroke="#000000" d="M4795.8606,-1665.8701C5032.8859,-1665.8701 5416.5352,-1665.8701 5653.2469,-1665.8701"/>
<polygon fill="#000000" stroke="#000000" points="5653.3552,-1669.3702 5663.3552,-1665.8701 5653.3551,-1662.3702 5653.3552,-1669.3702"/>
</g>
<!-- org.scalacheck.Cogen[List[Char]] -->
<g id="node1081" class="node">
<title>org.scalacheck.Cogen[List[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-2961.8701" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="5769.5954" y="-2965.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[List[Char]]</text>
<text text-anchor="middle" x="5862.0954" y="-2950.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[Char] =&gt; List[Char]]&#45;&gt;org.scalacheck.Cogen[List[Char]] -->
<g id="edge814" class="edge">
<title>org.scalacheck.Arbitrary[List[Char] =&gt; List[Char]]&#45;&gt;org.scalacheck.Cogen[List[Char]]</title>
<path fill="none" stroke="#000000" d="M4765.8748,-1679.7326C4922.4617,-1702.3918 5141.0098,-1761.8939 5249.5191,-1917.8701 5265.5098,-1940.8558 5238.2362,-2905.5668 5257.5191,-2925.8701 5319.0293,-2990.635 5565.1724,-2985.2929 5723.7934,-2974.3723"/>
<polygon fill="#000000" stroke="#000000" points="5724.3827,-2977.8396 5734.112,-2973.6456 5723.8908,-2970.8569 5724.3827,-2977.8396"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Char]] -->
<g id="node1355" class="node">
<title>org.scalacheck.Arbitrary[List[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-1089.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="5762.0954" y="-1093.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[List[Char]]</text>
<text text-anchor="middle" x="5862.0954" y="-1078.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 38ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[Char] =&gt; List[Char]]&#45;&gt;org.scalacheck.Arbitrary[List[Char]] -->
<g id="edge115" class="edge">
<title>org.scalacheck.Arbitrary[List[Char] =&gt; List[Char]]&#45;&gt;org.scalacheck.Arbitrary[List[Char]]</title>
<path fill="none" stroke="#000000" d="M4623.8309,-1639.2017C4723.0548,-1569.8068 5002.0189,-1381.2762 5257.5191,-1269.8701 5425.9977,-1196.4081 5633.4145,-1141.9047 5756.3039,-1113.0753"/>
<polygon fill="#000000" stroke="#000000" points="5757.1563,-1116.4705 5766.0994,-1110.7897 5755.5657,-1109.6536 5757.1563,-1116.4705"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Vector[Int])) =&gt; (Int, Vector[Int])] -->
<g id="node148" class="node">
<title>org.scalacheck.Arbitrary[((Int, Vector[Int])) =&gt; (Int, Vector[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-14832.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="2986.3678" y="-14836.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Int, Vector[Int])) =&gt; (Int, Vector[Int])]</text>
<text text-anchor="middle" x="3166.8678" y="-14821.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Vector[Int])) =&gt; (Int, Vector[Int])]&#45;&gt;org.scalacheck.Arbitrary[(Int, Vector[Int])] -->
<g id="edge923" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Vector[Int])) =&gt; (Int, Vector[Int])]&#45;&gt;org.scalacheck.Arbitrary[(Int, Vector[Int])]</title>
<path fill="none" stroke="#000000" d="M3433.8433,-14832.8701C3715.0282,-14832.8701 4150.5921,-14832.8701 4397.8738,-14832.8701"/>
<polygon fill="#000000" stroke="#000000" points="4398.0474,-14836.3702 4408.0473,-14832.8701 4398.0473,-14829.3702 4398.0474,-14836.3702"/>
</g>
<!-- org.scalacheck.Cogen[(Int, Vector[Int])] -->
<g id="node809" class="node">
<title>org.scalacheck.Cogen[(Int, Vector[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-12132.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="4475.753" y="-12136.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Int, Vector[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-12121.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Vector[Int])) =&gt; (Int, Vector[Int])]&#45;&gt;org.scalacheck.Cogen[(Int, Vector[Int])] -->
<g id="edge672" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Vector[Int])) =&gt; (Int, Vector[Int])]&#45;&gt;org.scalacheck.Cogen[(Int, Vector[Int])]</title>
<path fill="none" stroke="#000000" d="M3328.1516,-14854.2689C3502.8554,-14867.2878 3775.2637,-14855.9488 3914.9868,-14686.8701 3926.1258,-14673.3908 3910.9418,-12181.5462 3922.9868,-12168.8701 3990.2442,-12098.0886 4258.7353,-12105.1958 4432.8094,-12118.1191"/>
<polygon fill="#000000" stroke="#000000" points="4432.6026,-12121.6134 4442.8382,-12118.8778 4433.1307,-12114.6333 4432.6026,-12121.6134"/>
</g>
<!-- scala.reflect.ClassTag[((Int, Vector[Int])) =&gt; (Int, Vector[Int])] -->
<g id="node1452" class="node">
<title>scala.reflect.ClassTag[((Int, Vector[Int])) =&gt; (Int, Vector[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-15185.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="4413.253" y="-15189.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Int, Vector[Int])) =&gt; (Int, Vector[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-15174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Vector[Int])) =&gt; (Int, Vector[Int])]&#45;&gt;scala.reflect.ClassTag[((Int, Vector[Int])) =&gt; (Int, Vector[Int])] -->
<g id="edge79" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Vector[Int])) =&gt; (Int, Vector[Int])]&#45;&gt;scala.reflect.ClassTag[((Int, Vector[Int])) =&gt; (Int, Vector[Int])]</title>
<path fill="none" stroke="#000000" d="M3214.0319,-14859.458C3330.163,-14923.3789 3641.0112,-15085.1531 3922.9868,-15149.8701 4054.3075,-15180.0098 4203.9143,-15190.1371 4327.763,-15192.241"/>
<polygon fill="#000000" stroke="#000000" points="4327.7148,-15195.7406 4337.7674,-15192.3945 4327.8223,-15188.7414 4327.7148,-15195.7406"/>
</g>
<!-- scalaz.Equal[monocle.Binary] -->
<g id="node149" class="node">
<title>scalaz.Equal[monocle.Binary]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-17957.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="5779.0954" y="-17961.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Binary]</text>
<text text-anchor="middle" x="5862.0954" y="-17946.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scalaz.Order[Boolean] -->
<g id="node150" class="node">
<title>scalaz.Order[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-19176.8701" rx="98.0761" ry="26.7407"/>
<text text-anchor="start" x="6984.514" y="-19180.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[Boolean]</text>
<text text-anchor="middle" x="7046.014" y="-19165.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 3ms</text>
</g>
<!-- org.scalactic.Equality[monocle.Iso[monocle.Binary,(String, Int)]] -->
<g id="node151" class="node">
<title>org.scalactic.Equality[monocle.Iso[monocle.Binary,(String, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-16788.8701" rx="265.7444" ry="26.7407"/>
<text text-anchor="start" x="1682.034" y="-16792.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[monocle.Iso[monocle.Binary,(String, Int)]]</text>
<text text-anchor="middle" x="1862.034" y="-16777.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 34ms</text>
</g>
<!-- scalaz.Equal[monocle.Iso[monocle.Binary,(String, Int)]] -->
<g id="node1134" class="node">
<title>scalaz.Equal[monocle.Iso[monocle.Binary,(String, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-16788.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="3011.8678" y="-16792.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Iso[monocle.Binary,(String, Int)]]</text>
<text text-anchor="middle" x="3166.8678" y="-16777.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 33ms</text>
</g>
<!-- org.scalactic.Equality[monocle.Iso[monocle.Binary,(String, Int)]]&#45;&gt;scalaz.Equal[monocle.Iso[monocle.Binary,(String, Int)]] -->
<g id="edge563" class="edge">
<title>org.scalactic.Equality[monocle.Iso[monocle.Binary,(String, Int)]]&#45;&gt;scalaz.Equal[monocle.Iso[monocle.Binary,(String, Int)]]</title>
<path fill="none" stroke="#000000" d="M2128.053,-16788.8701C2362.1246,-16788.8701 2699.9327,-16788.8701 2926.1223,-16788.8701"/>
<polygon fill="#000000" stroke="#000000" points="2926.1354,-16792.3702 2936.1354,-16788.8701 2926.1353,-16785.3702 2926.1354,-16792.3702"/>
</g>
<!-- scalaz.Equal[A] -->
<g id="node152" class="node">
<title>scalaz.Equal[A]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-27921.8701" rx="73.5782" ry="26.7407"/>
<text text-anchor="start" x="4542.253" y="-27925.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[A]</text>
<text text-anchor="middle" x="4586.253" y="-27910.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 92ms</text>
</g>
<!-- scalaz.Equal[S =&gt; Option[A]] -->
<g id="node369" class="node">
<title>scalaz.Equal[S =&gt; Option[A]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-28057.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="5779.0954" y="-28061.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[S =&gt; Option[A]]</text>
<text text-anchor="middle" x="5862.0954" y="-28046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[A]&#45;&gt;scalaz.Equal[S =&gt; Option[A]] -->
<g id="edge1222" class="edge">
<title>scalaz.Equal[A]&#45;&gt;scalaz.Equal[S =&gt; Option[A]]</title>
<path fill="none" stroke="#000000" d="M4652.6989,-27933.7631C4772.9452,-27954.8393 5034.8532,-27998.7009 5257.5191,-28021.8701 5417.4782,-28038.5143 5602.1082,-28048.1205 5724.8303,-28053.1573"/>
<polygon fill="#000000" stroke="#000000" points="5724.8979,-28056.6628 5735.0317,-28053.5713 5725.1818,-28049.6686 5724.8979,-28056.6628"/>
</g>
<!-- scalaz.Equal[A1] -->
<g id="node535" class="node">
<title>scalaz.Equal[A1]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-27913.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="6999.014" y="-27917.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[A1]</text>
<text text-anchor="middle" x="7046.014" y="-27902.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- scalaz.Equal[A]&#45;&gt;scalaz.Equal[A1] -->
<g id="edge1126" class="edge">
<title>scalaz.Equal[A]&#45;&gt;scalaz.Equal[A1]</title>
<path fill="none" stroke="#000000" d="M4659.5347,-27919.1313C5016.4282,-27912.3764 6571.0683,-27907.2491 6958.375,-27911.4416"/>
<polygon fill="#000000" stroke="#000000" points="6958.3616,-27914.9416 6968.4007,-27911.5554 6958.4411,-27907.9421 6958.3616,-27914.9416"/>
</g>
<!-- scalaz.Equal[A2] -->
<g id="node555" class="node">
<title>scalaz.Equal[A2]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-27857.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="5815.0954" y="-27861.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[A2]</text>
<text text-anchor="middle" x="5862.0954" y="-27846.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[A]&#45;&gt;scalaz.Equal[A2] -->
<g id="edge878" class="edge">
<title>scalaz.Equal[A]&#45;&gt;scalaz.Equal[A2]</title>
<path fill="none" stroke="#000000" d="M4657.5816,-27914.9724C4875.9011,-27899.556 5534.6913,-27866.4027 5774.0033,-27858.6503"/>
<polygon fill="#000000" stroke="#000000" points="5774.1691,-27862.1469 5784.0533,-27858.332 5773.9475,-27855.1504 5774.1691,-27862.1469"/>
</g>
<!-- scalaz.Equal[S =&gt; A] -->
<g id="node1300" class="node">
<title>scalaz.Equal[S =&gt; A]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-28129.8701" rx="95.4188" ry="26.7407"/>
<text text-anchor="start" x="5802.5954" y="-28133.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[S =&gt; A]</text>
<text text-anchor="middle" x="5862.0954" y="-28118.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 57ms</text>
</g>
<!-- scalaz.Equal[A]&#45;&gt;scalaz.Equal[S =&gt; A] -->
<g id="edge242" class="edge">
<title>scalaz.Equal[A]&#45;&gt;scalaz.Equal[S =&gt; A]</title>
<path fill="none" stroke="#000000" d="M4641.1984,-27939.781C4754.8335,-27975.9663 5024.5555,-28057.4316 5257.5191,-28093.8701 5430.9349,-28120.9945 5635.259,-28128.0518 5756.4446,-28129.6792"/>
<polygon fill="#000000" stroke="#000000" points="5756.4226,-28133.1791 5766.4654,-28129.8039 5756.5098,-28126.1797 5756.4226,-28133.1791"/>
</g>
<!-- org.scalacheck.Cogen[(Int, HListSpec.this.HTail)] -->
<g id="node153" class="node">
<title>org.scalacheck.Cogen[(Int, HListSpec.this.HTail)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-9037.8701" rx="206.4504" ry="26.7407"/>
<text text-anchor="start" x="5724.0954" y="-9041.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Int, HListSpec.this.HTail)]</text>
<text text-anchor="middle" x="5862.0954" y="-9026.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Cogen[HListSpec.this.HTail] -->
<g id="node267" class="node">
<title>org.scalacheck.Cogen[HListSpec.this.HTail]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-9073.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="6924.014" y="-9077.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[HListSpec.this.HTail]</text>
<text text-anchor="middle" x="7046.014" y="-9062.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[(Int, HListSpec.this.HTail)]&#45;&gt;org.scalacheck.Cogen[HListSpec.this.HTail] -->
<g id="edge868" class="edge">
<title>org.scalacheck.Cogen[(Int, HListSpec.this.HTail)]&#45;&gt;org.scalacheck.Cogen[HListSpec.this.HTail]</title>
<path fill="none" stroke="#000000" d="M6063.2663,-9043.9872C6284.7761,-9050.7227 6638.2461,-9061.4709 6855.4376,-9068.0751"/>
<polygon fill="#000000" stroke="#000000" points="6855.5742,-9071.5808 6865.676,-9068.3864 6855.787,-9064.584 6855.5742,-9071.5808"/>
</g>
<!-- org.scalacheck.Cogen[(Int, HListSpec.this.HTail)]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge10" class="edge">
<title>org.scalacheck.Cogen[(Int, HListSpec.this.HTail)]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M6034.9298,-9023.1571C6192.6185,-9014.006 6409.5187,-9013.5914 6466.6717,-9073.8701 6478.8943,-9086.761 6464.3815,-10338.3898 6474.6717,-10352.8701 6576.4717,-10496.1216 6788.4787,-10538.8663 6923.6587,-10551.2702"/>
<polygon fill="#000000" stroke="#000000" points="6923.393,-10554.7602 6933.6601,-10552.1455 6924.0034,-10547.7869 6923.393,-10554.7602"/>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example] -->
<g id="node154" class="node">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-32763.8701" rx="276.4575" ry="26.7407"/>
<text text-anchor="start" x="465.1596" y="-32767.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example]</text>
<text text-anchor="middle" x="652.6596" y="-32752.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 14ms</text>
</g>
<!-- scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Example] -->
<g id="node496" class="node">
<title>scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Example]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-32763.8701" rx="265.7444" ry="26.7407"/>
<text text-anchor="start" x="1682.034" y="-32767.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Example]</text>
<text text-anchor="middle" x="1862.034" y="-32752.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Example] -->
<g id="edge426" class="edge">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Example]</title>
<path fill="none" stroke="#000000" d="M929.3562,-32763.8701C1126.0473,-32763.8701 1389.1259,-32763.8701 1585.7289,-32763.8701"/>
<polygon fill="#000000" stroke="#000000" points="1585.9229,-32767.3702 1595.9229,-32763.8701 1585.9228,-32760.3702 1585.9229,-32767.3702"/>
</g>
<!-- org.scalacheck.Cogen[monocle.refined.UpperCaseChar] -->
<g id="node155" class="node">
<title>org.scalacheck.Cogen[monocle.refined.UpperCaseChar]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-2025.8701" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="5708.0954" y="-2029.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[monocle.refined.UpperCaseChar]</text>
<text text-anchor="middle" x="5862.0954" y="-2014.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Cogen[monocle.refined.UpperCaseChar]&#45;&gt;org.scalacheck.Cogen[Char] -->
<g id="edge455" class="edge">
<title>org.scalacheck.Cogen[monocle.refined.UpperCaseChar]&#45;&gt;org.scalacheck.Cogen[Char]</title>
<path fill="none" stroke="#000000" d="M6049.6274,-2010.3947C6205.7496,-2002.1347 6411.1558,-2003.5712 6466.6717,-2061.8701 6481.1543,-2077.0787 6465.2587,-2799.0966 6474.6717,-2817.8701 6582.2919,-3032.5089 6850.9523,-3170.822 6977.7356,-3226.2758"/>
<polygon fill="#000000" stroke="#000000" points="6976.4154,-3229.5181 6986.9826,-3230.2832 6979.1989,-3223.0953 6976.4154,-3229.5181"/>
</g>
<!-- org.scalacheck.Cogen[monocle.refined.UpperCaseChar]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge187" class="edge">
<title>org.scalacheck.Cogen[monocle.refined.UpperCaseChar]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M6084.0866,-2019.1199C6285.0922,-2013.0078 6581.0913,-2004.0072 6791.5804,-1997.6067"/>
<polygon fill="#000000" stroke="#000000" points="6791.9635,-2001.0968 6801.8524,-1997.2944 6791.7506,-1994.1 6791.9635,-2001.0968"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,List[Int],List[Int]] -->
<g id="node156" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,List[Int],List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-32907.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="2971.3678" y="-32911.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,List[Int],List[Int]]</text>
<text text-anchor="middle" x="3166.8678" y="-32896.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[(Int, Int, Int, Int)] -->
<g id="node157" class="node">
<title>scalaz.Equal[(Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-22373.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="5777.5954" y="-22377.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-22362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[(Int, Int, Int, Int)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge677" class="edge">
<title>scalaz.Equal[(Int, Int, Int, Int)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5981.5263,-22384.917C6138.6054,-22396.5099 6402.2778,-22404.8644 6466.6717,-22337.8701 6482.1512,-22321.7654 6461.2826,-21953.7504 6474.6717,-21935.8701 6585.3179,-21788.1092 6817.2018,-21758.7167 6949.0068,-21754.5845"/>
<polygon fill="#000000" stroke="#000000" points="6949.1989,-21758.0807 6959.1005,-21754.3113 6949.0094,-21751.0833 6949.1989,-21758.0807"/>
</g>
<!-- shapeless.Generic.Aux[shapeless.HNil,SGen] -->
<g id="node158" class="node">
<title>shapeless.Generic.Aux[shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="10498.0677" cy="-26841.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="10373.0677" y="-26845.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="10498.0677" y="-26830.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- List[Int] \/ TraversalSpec.this.Location =&gt; ?{def shouldEqual: ?} -->
<g id="node159" class="node">
<title>List[Int] \/ TraversalSpec.this.Location =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-26409.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="475.1596" y="-26413.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Int] / TraversalSpec.this.Location =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-26398.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- List[Int] \/ TraversalSpec.this.Location =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge1269" class="edge">
<title>List[Int] \/ TraversalSpec.this.Location =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M895.3904,-26420.1441C1051.8897,-26422.3288 1238.2603,-26415.2502 1305.3191,-26373.8701 1670.9786,-26148.2318 1820.1511,-25588.0374 1854.1463,-25438.8588"/>
<polygon fill="#000000" stroke="#000000" points="1857.6204,-25439.3624 1856.3964,-25428.8385 1850.7904,-25437.8287 1857.6204,-25439.3624"/>
</g>
<!-- List[Int] \/ TraversalSpec.this.Location =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1117" class="edge">
<title>List[Int] \/ TraversalSpec.this.Location =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M851.7925,-26427.3673C1020.7107,-26437.2821 1244.957,-26437.1486 1305.3191,-26373.8701 1324.6463,-26353.6091 1294.0976,-25386.2314 1313.3191,-25365.8701 1432.5182,-25239.6023 1659.3296,-25274.5868 1780.6652,-25305.4261"/>
<polygon fill="#000000" stroke="#000000" points="1780.0851,-25308.8914 1790.6435,-25308.0136 1781.8421,-25302.1155 1780.0851,-25308.8914"/>
</g>
<!-- monocle.function.At[Map[K,V],K,Option[V]] -->
<g id="node160" class="node">
<title>monocle.function.At[Map[K,V],K,Option[V]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-32943.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="525.6596" y="-32947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[Map[K,V],K,Option[V]]</text>
<text text-anchor="middle" x="652.6596" y="-32932.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- a2.type =&gt; ?{def ::: ?} -->
<g id="node161" class="node">
<title>a2.type =&gt; ?{def ::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-33015.8701" rx="100.3184" ry="26.7407"/>
<text text-anchor="start" x="589.6596" y="-33019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">a2.type =&gt; ?{def ::: ?}</text>
<text text-anchor="middle" x="652.6596" y="-33004.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Cons[List[Int],Int] -->
<g id="node162" class="node">
<title>monocle.function.Cons[List[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-33087.8701" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="552.1596" y="-33091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons[List[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-33076.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P) -->
<g id="node163" class="node">
<title>((Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-33159.8701" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="440.6596" y="-33163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-33148.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0] -->
<g id="node164" class="node">
<title>shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-33267.8701" rx="381.2612" ry="26.7407"/>
<text text-anchor="start" x="2905.3678" y="-33271.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0]</text>
<text text-anchor="middle" x="3166.8678" y="-33256.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Double] -->
<g id="node165" class="node">
<title>org.scalacheck.Arbitrary[Double]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-1737.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="6954.014" y="-1741.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Double]</text>
<text text-anchor="middle" x="7046.014" y="-1726.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 57ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Double]&#45;&gt;scala.reflect.ClassTag[Double] -->
<g id="edge327" class="edge">
<title>org.scalacheck.Arbitrary[Double]&#45;&gt;scala.reflect.ClassTag[Double]</title>
<path fill="none" stroke="#000000" d="M7187.6871,-1737.8701C7409.1023,-1737.8701 7834.6428,-1737.8701 8055.6645,-1737.8701"/>
<polygon fill="#000000" stroke="#000000" points="8055.709,-1741.3702 8065.709,-1737.8701 8055.709,-1734.3702 8055.709,-1741.3702"/>
</g>
<!-- a2.tail.type =&gt; ?{def :+: ?} -->
<g id="node166" class="node">
<title>a2.tail.type =&gt; ?{def :+: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-33303.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-33307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">a2.tail.type =&gt; ?{def :+: ?}</text>
<text text-anchor="middle" x="652.6596" y="-33292.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- HListSpec.this.Example =&gt; ?{def ===: ?} -->
<g id="node167" class="node">
<title>HListSpec.this.Example =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-33375.8701" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="534.6596" y="-33379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">HListSpec.this.Example =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="652.6596" y="-33364.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.ExampleType[Int]] -->
<g id="node168" class="node">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.ExampleType[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-15649.8701" rx="313.4968" ry="26.7407"/>
<text text-anchor="start" x="5648.5954" y="-15653.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.ExampleType[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-15638.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.ExampleType[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1301" class="edge">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.ExampleType[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6098.0534,-15667.5961C6245.6448,-15672.8932 6416.9006,-15666.4771 6466.6717,-15613.8701 6485.3423,-15594.1356 6461.1192,-13681.4151 6474.6717,-13657.8701 6578.4797,-13477.5231 6821.0393,-13384.7465 6954.3018,-13345.8556"/>
<polygon fill="#000000" stroke="#000000" points="6955.4554,-13349.1657 6964.0973,-13343.0365 6953.5194,-13342.4387 6955.4554,-13349.1657"/>
</g>
<!-- scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.ExampleType[Int]] -->
<g id="node1409" class="node">
<title>scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.ExampleType[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-15649.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="6840.014" y="-15653.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.ExampleType[Int]]</text>
<text text-anchor="middle" x="7046.014" y="-15638.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.ExampleType[Int]]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.ExampleType[Int]] -->
<g id="edge496" class="edge">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.ExampleType[Int]]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.ExampleType[Int]]</title>
<path fill="none" stroke="#000000" d="M6175.4799,-15649.8701C6347.7662,-15649.8701 6560.8346,-15649.8701 6733.0539,-15649.8701"/>
<polygon fill="#000000" stroke="#000000" points="6733.2966,-15653.3702 6743.2966,-15649.8701 6733.2966,-15646.3702 6733.2966,-15653.3702"/>
</g>
<!-- scala.reflect.ClassTag[monocle.refined.EndsWithString[String(&#39;world&#39;)] =&gt; monocle.refined.EndsWithString[String(&#39;world&#39;)]] -->
<g id="node169" class="node">
<title>scala.reflect.ClassTag[monocle.refined.EndsWithString[String(&#39;world&#39;)] =&gt; monocle.refined.EndsWithString[String(&#39;world&#39;)]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-3397.8701" rx="497.6064" ry="26.7407"/>
<text text-anchor="start" x="5518.0954" y="-3401.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[monocle.refined.EndsWithString[String(&#39;world&#39;)] =&gt; monocle.refined.EndsWithString[String(&#39;world&#39;)]]</text>
<text text-anchor="middle" x="5862.0954" y="-3386.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.Generic.Aux[Stream[Int],L1] -->
<g id="node170" class="node">
<title>shapeless.Generic.Aux[Stream[Int],L1]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-33438.8701" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="3058.8678" y="-33442.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Stream[Int],L1]</text>
<text text-anchor="middle" x="3166.8678" y="-33427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 21ms</text>
</g>
<!-- monocle.function.Snoc[Vector[Int],Int] -->
<g id="node171" class="node">
<title>monocle.function.Snoc[Vector[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-33555.8701" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="544.6596" y="-33559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc[Vector[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-33544.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Category[monocle.Iso] -->
<g id="node172" class="node">
<title>scalaz.Category[monocle.Iso]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-33645.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="571.1596" y="-33649.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Category[monocle.Iso]</text>
<text text-anchor="middle" x="652.6596" y="-33634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[monocle.refined.LowerCaseChar]&#45;&gt;org.scalacheck.Cogen[Char] -->
<g id="edge838" class="edge">
<title>org.scalacheck.Cogen[monocle.refined.LowerCaseChar]&#45;&gt;org.scalacheck.Cogen[Char]</title>
<path fill="none" stroke="#000000" d="M6050.7154,-2226.3914C6206.6556,-2218.2367 6411.1688,-2219.8313 6466.6717,-2277.8701 6477.04,-2288.712 6467.9194,-2804.474 6474.6717,-2817.8701 6582.7458,-3032.2807 6851.1777,-3170.7087 6977.8196,-3226.2335"/>
<polygon fill="#000000" stroke="#000000" points="6976.4896,-3229.4717 6987.0561,-3230.2462 6979.2789,-3223.0514 6976.4896,-3229.4717"/>
</g>
<!-- org.scalacheck.Cogen[monocle.refined.LowerCaseChar]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge232" class="edge">
<title>org.scalacheck.Cogen[monocle.refined.LowerCaseChar]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M6092.1077,-2244.1658C6205.881,-2241.2666 6344.6339,-2231.6486 6466.6717,-2205.8701 6661.6493,-2164.6841 6878.5088,-2069.6404 6982.9764,-2020.5118"/>
<polygon fill="#000000" stroke="#000000" points="6984.5766,-2023.6269 6992.1244,-2016.1918 6981.5874,-2017.2971 6984.5766,-2023.6269"/>
</g>
<!-- org.scalacheck.Arbitrary[((Stream[Int], Int)) =&gt; (Stream[Int], Int)] -->
<g id="node174" class="node">
<title>org.scalacheck.Arbitrary[((Stream[Int], Int)) =&gt; (Stream[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-10980.8701" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="2983.8678" y="-10984.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Stream[Int], Int)) =&gt; (Stream[Int], Int)]</text>
<text text-anchor="middle" x="3166.8678" y="-10969.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 22ms</text>
</g>
<!-- org.scalacheck.Cogen[(Stream[Int], Int)] -->
<g id="node212" class="node">
<title>org.scalacheck.Cogen[(Stream[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-11052.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="4474.753" y="-11056.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Stream[Int], Int)]</text>
<text text-anchor="middle" x="4586.253" y="-11041.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Stream[Int], Int)) =&gt; (Stream[Int], Int)]&#45;&gt;org.scalacheck.Cogen[(Stream[Int], Int)] -->
<g id="edge1187" class="edge">
<title>org.scalacheck.Arbitrary[((Stream[Int], Int)) =&gt; (Stream[Int], Int)]&#45;&gt;org.scalacheck.Cogen[(Stream[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M3407.6472,-10993.0839C3693.5604,-11007.5872 4163.2605,-11031.4133 4414.705,-11044.1681"/>
<polygon fill="#000000" stroke="#000000" points="4414.8697,-11047.6808 4425.0342,-11044.692 4415.2244,-11040.6898 4414.8697,-11047.6808"/>
</g>
<!-- org.scalacheck.Arbitrary[(Stream[Int], Int)] -->
<g id="node1180" class="node">
<title>org.scalacheck.Arbitrary[(Stream[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-10908.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="4467.253" y="-10912.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Stream[Int], Int)]</text>
<text text-anchor="middle" x="4586.253" y="-10897.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Stream[Int], Int)) =&gt; (Stream[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[(Stream[Int], Int)] -->
<g id="edge515" class="edge">
<title>org.scalacheck.Arbitrary[((Stream[Int], Int)) =&gt; (Stream[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[(Stream[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M3407.6472,-10968.6562C3690.2872,-10954.319 4152.5302,-10930.8712 4405.9841,-10918.0144"/>
<polygon fill="#000000" stroke="#000000" points="4406.2198,-10921.5071 4416.0296,-10917.5048 4405.8651,-10914.516 4406.2198,-10921.5071"/>
</g>
<!-- scala.reflect.ClassTag[((Stream[Int], Int)) =&gt; (Stream[Int], Int)] -->
<g id="node1390" class="node">
<title>scala.reflect.ClassTag[((Stream[Int], Int)) =&gt; (Stream[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-10980.8701" rx="259.5164" ry="26.7407"/>
<text text-anchor="start" x="4410.753" y="-10984.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Stream[Int], Int)) =&gt; (Stream[Int], Int)]</text>
<text text-anchor="middle" x="4586.253" y="-10969.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Stream[Int], Int)) =&gt; (Stream[Int], Int)]&#45;&gt;scala.reflect.ClassTag[((Stream[Int], Int)) =&gt; (Stream[Int], Int)] -->
<g id="edge1142" class="edge">
<title>org.scalacheck.Arbitrary[((Stream[Int], Int)) =&gt; (Stream[Int], Int)]&#45;&gt;scala.reflect.ClassTag[((Stream[Int], Int)) =&gt; (Stream[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M3437.1843,-10980.8701C3689.592,-10980.8701 4064.2468,-10980.8701 4316.4792,-10980.8701"/>
<polygon fill="#000000" stroke="#000000" points="4316.5223,-10984.3702 4326.5223,-10980.8701 4316.5223,-10977.3702 4316.5223,-10984.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[A,B]] -->
<g id="node175" class="node">
<title>org.scalacheck.Arbitrary[Either[A,B]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-28493.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="4482.253" y="-28497.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Either[A,B]]</text>
<text text-anchor="middle" x="4586.253" y="-28482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 42ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[A,B]]&#45;&gt;org.scalacheck.Arbitrary[A] -->
<g id="edge461" class="edge">
<title>org.scalacheck.Arbitrary[Either[A,B]]&#45;&gt;org.scalacheck.Arbitrary[A]</title>
<path fill="none" stroke="#000000" d="M4655.6804,-28469.5349C4776.2897,-28428.5603 5033.1216,-28347.0278 5257.5191,-28313.8701 5324.0055,-28304.0458 6414.6482,-28318.4201 6466.6717,-28275.8701 6478.6881,-28266.0418 6462.8993,-28251.9892 6474.6717,-28241.8701 6608.7638,-28126.6089 6831.9643,-28149.1906 6955.973,-28173.7923"/>
<polygon fill="#000000" stroke="#000000" points="6955.3294,-28177.233 6965.8259,-28175.7928 6956.7223,-28170.373 6955.3294,-28177.233"/>
</g>
<!-- scala.reflect.ClassTag[Either[A,B]] -->
<g id="node463" class="node">
<title>scala.reflect.ClassTag[Either[A,B]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-28421.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="5765.5954" y="-28425.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Either[A,B]]</text>
<text text-anchor="middle" x="5862.0954" y="-28410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[A,B]]&#45;&gt;scala.reflect.ClassTag[Either[A,B]] -->
<g id="edge279" class="edge">
<title>org.scalacheck.Arbitrary[Either[A,B]]&#45;&gt;scala.reflect.ClassTag[Either[A,B]]</title>
<path fill="none" stroke="#000000" d="M4736.6744,-28485.3813C4981.902,-28471.5423 5465.0916,-28444.2743 5710.8507,-28430.4053"/>
<polygon fill="#000000" stroke="#000000" points="5711.1454,-28433.8943 5720.9323,-28429.8364 5710.7509,-28426.9054 5711.1454,-28433.8943"/>
</g>
<!-- org.scalacheck.Arbitrary[B] -->
<g id="node803" class="node">
<title>org.scalacheck.Arbitrary[B]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-28709.8701" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="6969.514" y="-28713.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[B]</text>
<text text-anchor="middle" x="7046.014" y="-28698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 13ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[A,B]]&#45;&gt;org.scalacheck.Arbitrary[B] -->
<g id="edge1043" class="edge">
<title>org.scalacheck.Arbitrary[Either[A,B]]&#45;&gt;org.scalacheck.Arbitrary[B]</title>
<path fill="none" stroke="#000000" d="M4654.6826,-28518.1441C4774.8262,-28559.4159 5032.3407,-28641.8949 5257.5191,-28673.8701 5876.29,-28761.7351 6627.418,-28733.7064 6920.4535,-28717.6945"/>
<polygon fill="#000000" stroke="#000000" points="6920.8915,-28721.1758 6930.6835,-28717.1302 6920.5059,-28714.1864 6920.8915,-28721.1758"/>
</g>
<!-- org.scalacheck.util.Buildable[(A, B),Either[A,B]] -->
<g id="node1025" class="node">
<title>org.scalacheck.util.Buildable[(A, B),Either[A,B]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-28493.8701" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="5726.5954" y="-28497.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(A, B),Either[A,B]]</text>
<text text-anchor="middle" x="5862.0954" y="-28482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[A,B]]&#45;&gt;org.scalacheck.util.Buildable[(A, B),Either[A,B]] -->
<g id="edge979" class="edge">
<title>org.scalacheck.Arbitrary[Either[A,B]]&#45;&gt;org.scalacheck.util.Buildable[(A, B),Either[A,B]]</title>
<path fill="none" stroke="#000000" d="M4744.9383,-28493.8701C4972.9894,-28493.8701 5393.9481,-28493.8701 5648.9402,-28493.8701"/>
<polygon fill="#000000" stroke="#000000" points="5649.0704,-28497.3702 5659.0704,-28493.8701 5649.0704,-28490.3702 5649.0704,-28497.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(A, B)] -->
<g id="node1069" class="node">
<title>org.scalacheck.Arbitrary[(A, B)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-28565.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="5772.5954" y="-28569.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(A, B)]</text>
<text text-anchor="middle" x="5862.0954" y="-28554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[A,B]]&#45;&gt;org.scalacheck.Arbitrary[(A, B)] -->
<g id="edge304" class="edge">
<title>org.scalacheck.Arbitrary[Either[A,B]]&#45;&gt;org.scalacheck.Arbitrary[(A, B)]</title>
<path fill="none" stroke="#000000" d="M4736.6744,-28502.3588C4984.7044,-28516.356 5476.166,-28544.0908 5719.1822,-28557.805"/>
<polygon fill="#000000" stroke="#000000" points="5719.3173,-28561.3181 5729.4987,-28558.3872 5719.7118,-28554.3292 5719.3173,-28561.3181"/>
</g>
<!-- shapeless.ops.hlist.Prepend[Boolean :: Char :: Float :: Long :: shapeless.HNil,Double :: shapeless.HNil] -->
<g id="node176" class="node">
<title>shapeless.ops.hlist.Prepend[Boolean :: Char :: Float :: Long :: shapeless.HNil,Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-33726.8701" rx="412.9007" ry="26.7407"/>
<text text-anchor="start" x="2882.8678" y="-33730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Prepend[Boolean :: Char :: Float :: Long :: shapeless.HNil,Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="3166.8678" y="-33715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- shapeless.ops.hlist.Prepend[Char :: Float :: Long :: shapeless.HNil,Double :: shapeless.HNil] -->
<g id="node233" class="node">
<title>shapeless.ops.hlist.Prepend[Char :: Float :: Long :: shapeless.HNil,Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-33726.8701" rx="370.5479" ry="26.7407"/>
<text text-anchor="start" x="4332.253" y="-33730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Prepend[Char :: Float :: Long :: shapeless.HNil,Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="4586.253" y="-33715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 30ms</text>
</g>
<!-- shapeless.ops.hlist.Prepend[Boolean :: Char :: Float :: Long :: shapeless.HNil,Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Prepend[Char :: Float :: Long :: shapeless.HNil,Double :: shapeless.HNil] -->
<g id="edge699" class="edge">
<title>shapeless.ops.hlist.Prepend[Boolean :: Char :: Float :: Long :: shapeless.HNil,Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Prepend[Char :: Float :: Long :: shapeless.HNil,Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M3580.2736,-33726.8701C3777.7543,-33726.8701 4012.5403,-33726.8701 4205.6031,-33726.8701"/>
<polygon fill="#000000" stroke="#000000" points="4205.6352,-33730.3702 4215.6351,-33726.8701 4205.6351,-33723.3702 4205.6352,-33730.3702"/>
</g>
<!-- org.scalacheck.Cogen[(Int, List[Int])]&#45;&gt;org.scalacheck.Cogen[List[Int]] -->
<g id="edge77" class="edge">
<title>org.scalacheck.Cogen[(Int, List[Int])]&#45;&gt;org.scalacheck.Cogen[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4722.8592,-10209.8057C4895.4667,-10196.6369 5178.6382,-10187.2556 5249.5191,-10258.8701 5263.7583,-10273.2566 5243.3773,-10426.3878 5257.5191,-10440.8701 5320.3594,-10505.2231 5568.9885,-10501.8992 5727.1738,-10492.5965"/>
<polygon fill="#000000" stroke="#000000" points="5727.6885,-10496.0719 5737.4594,-10491.9758 5727.2667,-10489.0847 5727.6885,-10496.0719"/>
</g>
<!-- org.scalacheck.Cogen[(Int, List[Int])]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge1150" class="edge">
<title>org.scalacheck.Cogen[(Int, List[Int])]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M4723.1247,-10209.8819C4895.6513,-10196.8427 5178.3423,-10187.6516 5249.5191,-10258.8701 5272.9591,-10282.3237 5233.8132,-10384.6852 5257.5191,-10407.8701 5305.5677,-10454.8625 6399.8661,-10438.5237 6466.6717,-10445.8701 6641.7635,-10465.1244 6843.1957,-10508.1858 6956.4699,-10534.3555"/>
<polygon fill="#000000" stroke="#000000" points="6955.9498,-10537.8277 6966.482,-10536.6777 6957.5314,-10531.0087 6955.9498,-10537.8277"/>
</g>
<!-- Option[Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node178" class="node">
<title>Option[Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-26337.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="548.6596" y="-26341.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-26326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 92ms</text>
</g>
<!-- Option[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge1309" class="edge">
<title>Option[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M804.9212,-26345.3879C970.9315,-26350.836 1223.8496,-26350.2598 1305.3191,-26301.8701 1652.0607,-26095.9187 1813.483,-25581.4565 1852.4588,-25438.967"/>
<polygon fill="#000000" stroke="#000000" points="1855.9278,-25439.5457 1855.1558,-25428.9791 1849.1699,-25437.7208 1855.9278,-25439.5457"/>
</g>
<!-- Option[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge777" class="edge">
<title>Option[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M790.4036,-26351.1944C960.9322,-26364.2789 1237.2492,-26373.1852 1305.3191,-26301.8701 1323.2716,-26283.0617 1295.4647,-25384.7717 1313.3191,-25365.8701 1432.5568,-25239.6387 1659.3519,-25274.6079 1780.6749,-25305.4353"/>
<polygon fill="#000000" stroke="#000000" points="1780.0938,-25308.9003 1790.6521,-25308.0217 1781.8504,-25302.1243 1780.0938,-25308.9003"/>
</g>
<!-- org.scalacheck.Cogen[Boolean \/ Int] -->
<g id="node179" class="node">
<title>org.scalacheck.Cogen[Boolean \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-7737.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="5762.0954" y="-7741.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Boolean / Int]</text>
<text text-anchor="middle" x="5862.0954" y="-7726.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 10ms</text>
</g>
<!-- org.scalacheck.Cogen[Boolean \/ Int]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge352" class="edge">
<title>org.scalacheck.Cogen[Boolean \/ Int]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M5997.713,-7725.5078C6156.2769,-7714.4119 6404.9643,-7708.5821 6466.6717,-7773.8701 6478.9739,-7786.8861 6464.3202,-10338.2548 6474.6717,-10352.8701 6576.3199,-10496.3867 6788.6314,-10539.0401 6923.873,-10551.3554"/>
<polygon fill="#000000" stroke="#000000" points="6923.6132,-10554.8459 6933.8785,-10552.224 6924.2188,-10547.8721 6923.6132,-10554.8459"/>
</g>
<!-- org.scalacheck.Cogen[Boolean] -->
<g id="node1250" class="node">
<title>org.scalacheck.Cogen[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-6681.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="6959.014" y="-6685.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Boolean]</text>
<text text-anchor="middle" x="7046.014" y="-6670.6701" font-family="Times,serif" font-size="14.00" fill="#000000">36 times = 72ms</text>
</g>
<!-- org.scalacheck.Cogen[Boolean \/ Int]&#45;&gt;org.scalacheck.Cogen[Boolean] -->
<g id="edge449" class="edge">
<title>org.scalacheck.Cogen[Boolean \/ Int]&#45;&gt;org.scalacheck.Cogen[Boolean]</title>
<path fill="none" stroke="#000000" d="M5998.2025,-7750.0835C6156.5904,-7760.9503 6404.4342,-7766.4706 6466.6717,-7701.8701 6480.5514,-7687.4634 6467.4774,-7360.5366 6474.6717,-7341.8701 6586.9978,-7050.4278 6888.757,-6800.4876 7002.1445,-6714.1119"/>
<polygon fill="#000000" stroke="#000000" points="7004.4392,-6716.7645 7010.2972,-6707.9365 7000.2126,-6711.1846 7004.4392,-6716.7645"/>
</g>
<!-- org.scalacheck.Cogen[Vector[Int]] -->
<g id="node180" class="node">
<title>org.scalacheck.Cogen[Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-11437.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="5767.0954" y="-11441.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Vector[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-11426.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 23ms</text>
</g>
<!-- org.scalacheck.Cogen[Vector[Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge1086" class="edge">
<title>org.scalacheck.Cogen[Vector[Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M5966.0861,-11456.7531C6093.1095,-11474.2775 6310.3446,-11485.8888 6466.6717,-11396.8701 6803.3612,-11205.146 6987.3942,-10727.9133 7034.0526,-10592.3226"/>
<polygon fill="#000000" stroke="#000000" points="7037.3867,-10593.3893 7037.2976,-10582.7948 7030.7605,-10591.1324 7037.3867,-10593.3893"/>
</g>
<!-- shapeless.ops.hlist.IsHCons.Aux[HListSpec.this.H,Int,HListSpec.this.HTail] -->
<g id="node181" class="node">
<title>shapeless.ops.hlist.IsHCons.Aux[HListSpec.this.H,Int,HListSpec.this.HTail]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-31611.8701" rx="308.0972" ry="26.7407"/>
<text text-anchor="start" x="1652.034" y="-31615.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.IsHCons.Aux[HListSpec.this.H,Int,HListSpec.this.HTail]</text>
<text text-anchor="middle" x="1862.034" y="-31600.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Int)] -->
<g id="node182" class="node">
<title>org.scalacheck.Arbitrary[(Char, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-14451.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="5761.0954" y="-14455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Char, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-14440.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 18ms</text>
</g>
<!-- scala.reflect.ClassTag[(Char, Int)] -->
<g id="node627" class="node">
<title>scala.reflect.ClassTag[(Char, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-14451.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="6952.514" y="-14455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Char, Int)]</text>
<text text-anchor="middle" x="7046.014" y="-14440.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Int)]&#45;&gt;scala.reflect.ClassTag[(Char, Int)] -->
<g id="edge588" class="edge">
<title>org.scalacheck.Arbitrary[(Char, Int)]&#45;&gt;scala.reflect.ClassTag[(Char, Int)]</title>
<path fill="none" stroke="#000000" d="M6016.2648,-14451.8701C6243.2279,-14451.8701 6664.8574,-14451.8701 6891.8293,-14451.8701"/>
<polygon fill="#000000" stroke="#000000" points="6892.1552,-14455.3702 6902.1552,-14451.8701 6892.1551,-14448.3702 6892.1552,-14455.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Int)]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge1333" class="edge">
<title>org.scalacheck.Arbitrary[(Char, Int)]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M5998.7829,-14464.3286C6157.4168,-14475.4 6405.1735,-14481.0845 6466.6717,-14415.8701 6489.4741,-14391.6897 6451.911,-4868.0897 6474.6717,-4843.8701 6532.4731,-4782.3636 6765.0738,-4786.6253 6915.0834,-4796.4597"/>
<polygon fill="#000000" stroke="#000000" points="6915.0775,-4799.9671 6925.2897,-4797.1456 6915.547,-4792.9828 6915.0775,-4799.9671"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge284" class="edge">
<title>org.scalacheck.Arbitrary[(Char, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M5999.0259,-14464.2525C6157.5687,-14475.2081 6404.9027,-14480.7373 6466.6717,-14415.8701 6481.1924,-14400.621 6464.1084,-13676.0855 6474.6717,-13657.8701 6579.062,-13477.8596 6821.3806,-13384.9437 6954.4519,-13345.9422"/>
<polygon fill="#000000" stroke="#000000" points="6955.5983,-13349.2542 6964.2331,-13343.115 6953.6545,-13342.5295 6955.5983,-13349.2542"/>
</g>
<!-- shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._0.N,Boolean] -->
<g id="node183" class="node">
<title>shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._0.N,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-33870.8701" rx="391.9745" ry="26.7407"/>
<text text-anchor="start" x="1593.034" y="-33874.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._0.N,Boolean]</text>
<text text-anchor="middle" x="1862.034" y="-33859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.reflect.ClassTag[K] -->
<g id="node184" class="node">
<title>scala.reflect.ClassTag[K]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-29235.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="4516.753" y="-29239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[K]</text>
<text text-anchor="middle" x="4586.253" y="-29224.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- scalaz.Equal[ProductSpec.this.Person] -->
<g id="node185" class="node">
<title>scalaz.Equal[ProductSpec.this.Person]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-33960.8701" rx="159.6125" ry="26.7407"/>
<text text-anchor="start" x="547.6596" y="-33964.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[ProductSpec.this.Person]</text>
<text text-anchor="middle" x="652.6596" y="-33949.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Reverse[scalaz.Tree[Int],scalaz.Tree[Int]] -->
<g id="node186" class="node">
<title>monocle.function.Reverse[scalaz.Tree[Int],scalaz.Tree[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-34041.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="488.6596" y="-34045.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[scalaz.Tree[Int],scalaz.Tree[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-34030.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[scalaz.Tree[Int],scalaz.Tree[Int]] -->
<g id="node797" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[scalaz.Tree[Int],scalaz.Tree[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-34050.8701" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="1680.534" y="-34054.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[scalaz.Tree[Int],scalaz.Tree[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-34039.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- monocle.function.Reverse[scalaz.Tree[Int],scalaz.Tree[Int]]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[scalaz.Tree[Int],scalaz.Tree[Int]] -->
<g id="edge361" class="edge">
<title>monocle.function.Reverse[scalaz.Tree[Int],scalaz.Tree[Int]]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[scalaz.Tree[Int],scalaz.Tree[Int]]</title>
<path fill="none" stroke="#000000" d="M895.5765,-34043.6778C1094.6419,-34045.1592 1376.4253,-34047.2562 1584.3905,-34048.8039"/>
<polygon fill="#000000" stroke="#000000" points="1584.5223,-34052.3049 1594.5481,-34048.8795 1584.5744,-34045.305 1584.5223,-34052.3049"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[scalaz.Tree[Int],scalaz.Tree[Int]] -->
<g id="node1075" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[scalaz.Tree[Int],scalaz.Tree[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-33978.8701" rx="265.3302" ry="26.7407"/>
<text text-anchor="start" x="1682.534" y="-33982.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[scalaz.Tree[Int],scalaz.Tree[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-33967.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.function.Reverse[scalaz.Tree[Int],scalaz.Tree[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[scalaz.Tree[Int],scalaz.Tree[Int]] -->
<g id="edge282" class="edge">
<title>monocle.function.Reverse[scalaz.Tree[Int],scalaz.Tree[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[scalaz.Tree[Int],scalaz.Tree[Int]]</title>
<path fill="none" stroke="#000000" d="M872.7202,-34030.4064C1082.4198,-34019.4825 1397.6291,-34003.0623 1615.645,-33991.7052"/>
<polygon fill="#000000" stroke="#000000" points="1616.148,-33995.1838 1625.9524,-33991.1683 1615.7838,-33988.1933 1616.148,-33995.1838"/>
</g>
<!-- monocle.function.Empty[scalaz.Maybe[Int]] -->
<g id="node187" class="node">
<title>monocle.function.Empty[scalaz.Maybe[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-34113.8701" rx="184.6098" ry="26.7407"/>
<text text-anchor="start" x="530.1596" y="-34117.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[scalaz.Maybe[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-34102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P) -->
<g id="node188" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-34185.8701" rx="289.4135" ry="26.7407"/>
<text text-anchor="start" x="456.1596" y="-34189.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-34174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P) -->
<g id="node189" class="node">
<title>((Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-34257.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="470.6596" y="-34261.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-34246.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.Cofree[Option,Int]] -->
<g id="node190" class="node">
<title>org.scalacheck.Cogen[scalaz.Cofree[Option,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-10667.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="5728.0954" y="-10671.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[scalaz.Cofree[Option,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-10656.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.Cofree[Option,Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge74" class="edge">
<title>org.scalacheck.Cogen[scalaz.Cofree[Option,Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M6048.5337,-10657.8454C6168.1566,-10650.7665 6326.7268,-10640.1808 6466.6717,-10626.8701 6631.5914,-10611.1839 6822.1428,-10586.5768 6938.3297,-10570.8401"/>
<polygon fill="#000000" stroke="#000000" points="6938.8584,-10574.3005 6948.2967,-10569.4871 6937.9168,-10567.3641 6938.8584,-10574.3005"/>
</g>
<!-- scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Foo] -->
<g id="node191" class="node">
<title>scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Foo]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-34329.8701" rx="246.1463" ry="26.7407"/>
<text text-anchor="start" x="1696.034" y="-34333.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Foo]</text>
<text text-anchor="middle" x="1862.034" y="-34318.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Each[monocle.function.CList,Char] -->
<g id="node192" class="node">
<title>monocle.function.Each[monocle.function.CList,Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-34401.8701" rx="220.7347" ry="26.7407"/>
<text text-anchor="start" x="504.6596" y="-34405.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[monocle.function.CList,Char]</text>
<text text-anchor="middle" x="652.6596" y="-34390.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; String -->
<g id="node193" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-34473.8701" rx="205.5364" ry="26.7407"/>
<text text-anchor="start" x="515.1596" y="-34477.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; String</text>
<text text-anchor="middle" x="652.6596" y="-34462.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Tree[Int] =&gt; scalaz.Tree[Int]] -->
<g id="node194" class="node">
<title>org.scalacheck.Arbitrary[scalaz.Tree[Int] =&gt; scalaz.Tree[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-11628.8701" rx="251.0458" ry="26.7407"/>
<text text-anchor="start" x="4416.753" y="-11632.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.Tree[Int] =&gt; scalaz.Tree[Int]]</text>
<text text-anchor="middle" x="4586.253" y="-11617.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 27ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Tree[Int] =&gt; scalaz.Tree[Int]]&#45;&gt;scala.reflect.ClassTag[scalaz.Tree[Int] =&gt; scalaz.Tree[Int]] -->
<g id="edge1044" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Tree[Int] =&gt; scalaz.Tree[Int]]&#45;&gt;scala.reflect.ClassTag[scalaz.Tree[Int] =&gt; scalaz.Tree[Int]]</title>
<path fill="none" stroke="#000000" d="M4779.6147,-11646.0453C4951.982,-11656.6003 5186.4962,-11657.6544 5249.5191,-11592.8701 5272.7705,-11568.9687 5234.4294,-11316.9276 5257.5191,-11292.8701 5310.1259,-11238.0581 5495.8123,-11232.0438 5647.6703,-11237.2123"/>
<polygon fill="#000000" stroke="#000000" points="5647.9633,-11240.725 5658.0824,-11237.5858 5648.2144,-11233.7295 5647.9633,-11240.725"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Tree[Int]] -->
<g id="node433" class="node">
<title>org.scalacheck.Arbitrary[scalaz.Tree[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-12419.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="5747.5954" y="-12423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.Tree[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-12408.6701" font-family="Times,serif" font-size="14.00" fill="#000000">15 times = 50ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Tree[Int] =&gt; scalaz.Tree[Int]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.Tree[Int]] -->
<g id="edge535" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Tree[Int] =&gt; scalaz.Tree[Int]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.Tree[Int]]</title>
<path fill="none" stroke="#000000" d="M4778.6041,-11611.5531C4951.2481,-11600.7696 5186.8492,-11599.4444 5249.5191,-11664.8701 5263.2394,-11679.1936 5243.8958,-12364.4543 5257.5191,-12378.8701 5389.1665,-12518.175 5639.6445,-12479.9644 5773.1356,-12446.3508"/>
<polygon fill="#000000" stroke="#000000" points="5774.1164,-12449.7126 5782.9339,-12443.8387 5772.378,-12442.9319 5774.1164,-12449.7126"/>
</g>
<!-- org.scalacheck.Cogen[scalaz.Tree[Int]] -->
<g id="node1420" class="node">
<title>org.scalacheck.Cogen[scalaz.Tree[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-11179.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="5755.0954" y="-11183.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[scalaz.Tree[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-11168.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 8ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Tree[Int] =&gt; scalaz.Tree[Int]]&#45;&gt;org.scalacheck.Cogen[scalaz.Tree[Int]] -->
<g id="edge1297" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Tree[Int] =&gt; scalaz.Tree[Int]]&#45;&gt;org.scalacheck.Cogen[scalaz.Tree[Int]]</title>
<path fill="none" stroke="#000000" d="M4779.2819,-11646.0971C4951.7447,-11656.7313 5186.6227,-11657.8775 5249.5191,-11592.8701 5264.0859,-11577.8143 5242.9919,-11230.964 5257.5191,-11215.8701 5317.4514,-11153.5999 5549.7142,-11156.4585 5708.2697,-11166.4785"/>
<polygon fill="#000000" stroke="#000000" points="5708.3988,-11169.9941 5718.6043,-11167.1483 5708.8516,-11163.0088 5708.3988,-11169.9941"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.IList[Char]]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge1345" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.IList[Char]]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M6023.0656,-4143.3754C6181.5244,-4135.0274 6408.0589,-4135.0159 6466.6717,-4196.8701 6488.6462,-4220.0598 6452.6417,-4748.733 6474.6717,-4771.8701 6532.8321,-4832.9533 6765.0092,-4828.8655 6914.896,-4819.1726"/>
<polygon fill="#000000" stroke="#000000" points="6915.3479,-4822.6504 6925.0944,-4818.4963 6914.8847,-4815.6657 6915.3479,-4822.6504"/>
</g>
<!-- monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)] =&gt; ?{def shouldEqual: ?} -->
<g id="node196" class="node">
<title>monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-26265.8701" rx="381.2612" ry="26.7407"/>
<text text-anchor="start" x="391.1596" y="-26269.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-26254.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge544" class="edge">
<title>monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M1017.6254,-26273.6539C1138.0958,-26270.3087 1254.329,-26258.8611 1305.3191,-26229.8701 1633.6956,-26043.1676 1806.5909,-25573.7325 1850.6171,-25438.7203"/>
<polygon fill="#000000" stroke="#000000" points="1854.0586,-25439.4516 1853.7961,-25428.8601 1847.3963,-25437.3036 1854.0586,-25439.4516"/>
</g>
<!-- monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge748" class="edge">
<title>monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M905.0533,-26286.0127C1064.7961,-26292.5624 1251.0878,-26286.6463 1305.3191,-26229.8701 1321.897,-26212.5142 1296.8318,-25383.3119 1313.3191,-25365.8701 1432.6017,-25239.6811 1659.3779,-25274.6325 1780.6862,-25305.446"/>
<polygon fill="#000000" stroke="#000000" points="1780.1039,-25308.9106 1790.6622,-25308.0312 1781.86,-25302.1345 1780.1039,-25308.9106"/>
</g>
<!-- scala.reflect.ClassTag[Vector[Int] =&gt; Vector[Int]] -->
<g id="node197" class="node">
<title>scala.reflect.ClassTag[Vector[Int] =&gt; Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-12643.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="5725.0954" y="-12647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Vector[Int] =&gt; Vector[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-12632.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 3ms</text>
</g>
<!-- org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)] -->
<g id="node198" class="node">
<title>org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-5565.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="5704.0954" y="-5569.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)]</text>
<text text-anchor="middle" x="5862.0954" y="-5554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 16ms</text>
</g>
<!-- org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Cogen[Char] -->
<g id="edge869" class="edge">
<title>org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Cogen[Char]</title>
<path fill="none" stroke="#000000" d="M6096.1337,-5568.0242C6244.7582,-5563.8168 6417.9955,-5546.6666 6466.6717,-5491.8701 6486.9829,-5469.005 6453.6964,-3312.1274 6474.6717,-3289.8701 6600.1046,-3156.7703 6840.421,-3196.4177 6965.6505,-3229.2378"/>
<polygon fill="#000000" stroke="#000000" points="6965.0023,-3232.6873 6975.5668,-3231.8856 6966.8082,-3225.9242 6965.0023,-3232.6873"/>
</g>
<!-- org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge993" class="edge">
<title>org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M6052.436,-5550.1333C6208.3016,-5541.9543 6411.7315,-5543.6593 6466.6717,-5601.8701 6477.9946,-5613.867 6465.1466,-10339.4013 6474.6717,-10352.8701 6576.2181,-10496.4587 6788.5607,-10539.0902 6923.8361,-10551.3815"/>
<polygon fill="#000000" stroke="#000000" points="6923.5795,-10554.8722 6933.8442,-10552.2483 6924.1836,-10547.8983 6923.5795,-10554.8722"/>
</g>
<!-- org.scalacheck.Cogen[Long] -->
<g id="node921" class="node">
<title>org.scalacheck.Cogen[Long]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-4409.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="6967.514" y="-4413.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Long]</text>
<text text-anchor="middle" x="7046.014" y="-4398.6701" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 28ms</text>
</g>
<!-- org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Cogen[Long] -->
<g id="edge1131" class="edge">
<title>org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Cogen[Long]</title>
<path fill="none" stroke="#000000" d="M6096.4386,-5567.9262C6244.9294,-5563.6601 6417.8856,-5546.4802 6466.6717,-5491.8701 6482.6617,-5473.9712 6460.9661,-4647.573 6474.6717,-4627.8701 6574.5535,-4484.2814 6782.5095,-4435.2196 6918.0662,-4418.4874"/>
<polygon fill="#000000" stroke="#000000" points="6918.5888,-4421.9499 6928.1043,-4417.2909 6917.7603,-4414.9991 6918.5888,-4421.9499"/>
</g>
<!-- org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge1063" class="edge">
<title>org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M6054.6199,-5550.4814C6209.8062,-5542.772 6411.0333,-5544.968 6466.6717,-5601.8701 6483.4622,-5619.0419 6461.1863,-5797.9971 6474.6717,-5817.8701 6577.1897,-5968.9463 6792.0846,-6030.3088 6927.1345,-6054.6131"/>
<polygon fill="#000000" stroke="#000000" points="6926.6653,-6058.0842 6937.1203,-6056.369 6927.8776,-6051.19 6926.6653,-6058.0842"/>
</g>
<!-- org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Cogen[Boolean] -->
<g id="edge40" class="edge">
<title>org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Cogen[Boolean]</title>
<path fill="none" stroke="#000000" d="M6053.1183,-5550.1744C6208.8284,-5542.0935 6411.6482,-5543.9191 6466.6717,-5601.8701 6486.6403,-5622.9011 6454.7394,-6624.8046 6474.6717,-6645.8701 6599.5412,-6777.8382 6837.3995,-6739.6956 6963.216,-6707.0928"/>
<polygon fill="#000000" stroke="#000000" points="6964.412,-6710.397 6973.1868,-6704.4597 6962.6246,-6703.629 6964.412,-6710.397"/>
</g>
<!-- (=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P) -->
<g id="node199" class="node">
<title>(=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-34545.8701" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="430.1596" y="-34549.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-34534.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Long,(Long, Float :: Long :: Double :: shapeless.HNil)] -->
<g id="node200" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Long,(Long, Float :: Long :: Double :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-34653.8701" rx="589.0399" ry="26.7407"/>
<text text-anchor="start" x="5453.5954" y="-34657.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Long,(Long, Float :: Long :: Double :: shapeless.HNil)]</text>
<text text-anchor="middle" x="5862.0954" y="-34642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Long :: Double :: shapeless.HNil,shapeless._0,Long,(Long, Long :: Double :: shapeless.HNil)] -->
<g id="node1239" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Long :: Double :: shapeless.HNil,shapeless._0,Long,(Long, Long :: Double :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-34653.8701" rx="514.1333" ry="26.7407"/>
<text text-anchor="start" x="6690.514" y="-34657.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Long :: Double :: shapeless.HNil,shapeless._0,Long,(Long, Long :: Double :: shapeless.HNil)]</text>
<text text-anchor="middle" x="7046.014" y="-34642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Long,(Long, Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Long :: Double :: shapeless.HNil,shapeless._0,Long,(Long, Long :: Double :: shapeless.HNil)] -->
<g id="edge582" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Long,(Long, Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Long :: Double :: shapeless.HNil,shapeless._0,Long,(Long, Long :: Double :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M6451.4533,-34653.8701C6474.8113,-34653.8701 6498.1747,-34653.8701 6521.398,-34653.8701"/>
<polygon fill="#000000" stroke="#000000" points="6521.6982,-34657.3702 6531.6982,-34653.8701 6521.6982,-34650.3702 6521.6982,-34657.3702"/>
</g>
<!-- shapeless.Generic.Aux[scalaz.Validation[Unit,Int],SGen] -->
<g id="node201" class="node">
<title>shapeless.Generic.Aux[scalaz.Validation[Unit,Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-34725.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="1705.534" y="-34729.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scalaz.Validation[Unit,Int],SGen]</text>
<text text-anchor="middle" x="1862.034" y="-34714.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- scalaz.Equal[(Int, IsoSpec.this.IntWrapper)] -->
<g id="node202" class="node">
<title>scalaz.Equal[(Int, IsoSpec.this.IntWrapper)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-18465.8701" rx="182.3671" ry="26.7407"/>
<text text-anchor="start" x="5741.0954" y="-18469.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, IsoSpec.this.IntWrapper)]</text>
<text text-anchor="middle" x="5862.0954" y="-18454.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[(Int, IsoSpec.this.IntWrapper)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge1042" class="edge">
<title>scalaz.Equal[(Int, IsoSpec.this.IntWrapper)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M6043.9218,-18468.2844C6184.302,-18480.9246 6370.3283,-18523.4701 6466.6717,-18653.8701 6476.6334,-18667.3532 6468.9522,-21052.1119 6474.6717,-21067.8701 6584.876,-21371.4991 6893.2944,-21636.0057 7004.9787,-21724.4503"/>
<polygon fill="#000000" stroke="#000000" points="7002.9658,-21727.3201 7012.9876,-21730.7573 7007.2966,-21721.8207 7002.9658,-21727.3201"/>
</g>
<!-- scalaz.Equal[IsoSpec.this.IntWrapper] -->
<g id="node1213" class="node">
<title>scalaz.Equal[IsoSpec.this.IntWrapper]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-17561.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="6940.514" y="-17565.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[IsoSpec.this.IntWrapper]</text>
<text text-anchor="middle" x="7046.014" y="-17550.6701" font-family="Times,serif" font-size="14.00" fill="#000000">15 times = 25ms</text>
</g>
<!-- scalaz.Equal[(Int, IsoSpec.this.IntWrapper)]&#45;&gt;scalaz.Equal[IsoSpec.this.IntWrapper] -->
<g id="edge378" class="edge">
<title>scalaz.Equal[(Int, IsoSpec.this.IntWrapper)]&#45;&gt;scalaz.Equal[IsoSpec.this.IntWrapper]</title>
<path fill="none" stroke="#000000" d="M6019.3491,-18479.5812C6177.9067,-18489.5244 6407.4525,-18491.9928 6466.6717,-18429.8701 6479.8591,-18416.0361 6463.2792,-17757.2159 6474.6717,-17741.8701 6566.3543,-17618.3728 6742.7958,-17577.4924 6875.4616,-17564.9885"/>
<polygon fill="#000000" stroke="#000000" points="6876.091,-17568.4463 6885.7389,-17564.0681 6875.4665,-17561.4742 6876.091,-17568.4463"/>
</g>
<!-- monocle.function.Possible[scalaz.Maybe[Int],Int] -->
<g id="node203" class="node">
<title>monocle.function.Possible[scalaz.Maybe[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-34797.8701" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="516.6596" y="-34801.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Possible[scalaz.Maybe[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-34786.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[monocle.function.CList] -->
<g id="node204" class="node">
<title>scalaz.Equal[monocle.function.CList]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-34869.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="548.6596" y="-34873.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.function.CList]</text>
<text text-anchor="middle" x="652.6596" y="-34858.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, scalaz.IList[Int])] -->
<g id="node205" class="node">
<title>scala.reflect.ClassTag[(Int, scalaz.IList[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-13947.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="5738.5954" y="-13951.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, scalaz.IList[Int])]</text>
<text text-anchor="middle" x="5862.0954" y="-13936.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Stream[Int]] -->
<g id="node206" class="node">
<title>scala.reflect.ClassTag[Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-11437.8701" rx="147.1565" ry="26.7407"/>
<text text-anchor="start" x="6950.014" y="-11441.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Stream[Int]]</text>
<text text-anchor="middle" x="7046.014" y="-11426.6701" font-family="Times,serif" font-size="14.00" fill="#000000">17 times = 12ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)] =&gt; monocle.refined.EndsWithString[String(&#39;world&#39;)]] -->
<g id="node207" class="node">
<title>org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)] =&gt; monocle.refined.EndsWithString[String(&#39;world&#39;)]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-3397.8701" rx="508.3196" ry="26.7407"/>
<text text-anchor="start" x="4234.753" y="-3401.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)] =&gt; monocle.refined.EndsWithString[String(&#39;world&#39;)]]</text>
<text text-anchor="middle" x="4586.253" y="-3386.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)] =&gt; monocle.refined.EndsWithString[String(&#39;world&#39;)]]&#45;&gt;scala.reflect.ClassTag[monocle.refined.EndsWithString[String(&#39;world&#39;)] =&gt; monocle.refined.EndsWithString[String(&#39;world&#39;)]] -->
<g id="edge1193" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)] =&gt; monocle.refined.EndsWithString[String(&#39;world&#39;)]]&#45;&gt;scala.reflect.ClassTag[monocle.refined.EndsWithString[String(&#39;world&#39;)] =&gt; monocle.refined.EndsWithString[String(&#39;world&#39;)]]</title>
<path fill="none" stroke="#000000" d="M5095.0827,-3397.8701C5180.3421,-3397.8701 5268.8122,-3397.8701 5354.0518,-3397.8701"/>
<polygon fill="#000000" stroke="#000000" points="5354.1611,-3401.3702 5364.1611,-3397.8701 5354.161,-3394.3702 5354.1611,-3401.3702"/>
</g>
<!-- org.scalacheck.Cogen[monocle.refined.EndsWithString[String(&#39;world&#39;)]] -->
<g id="node409" class="node">
<title>org.scalacheck.Cogen[monocle.refined.EndsWithString[String(&#39;world&#39;)]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-3469.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="5663.5954" y="-3473.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[monocle.refined.EndsWithString[String(&#39;world&#39;)]]</text>
<text text-anchor="middle" x="5862.0954" y="-3458.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)] =&gt; monocle.refined.EndsWithString[String(&#39;world&#39;)]]&#45;&gt;org.scalacheck.Cogen[monocle.refined.EndsWithString[String(&#39;world&#39;)]] -->
<g id="edge1045" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)] =&gt; monocle.refined.EndsWithString[String(&#39;world&#39;)]]&#45;&gt;org.scalacheck.Cogen[monocle.refined.EndsWithString[String(&#39;world&#39;)]]</title>
<path fill="none" stroke="#000000" d="M4934.0396,-3417.4968C5145.2654,-3429.417 5410.4181,-3444.3804 5603.1601,-3455.2575"/>
<polygon fill="#000000" stroke="#000000" points="5602.966,-3458.752 5613.1474,-3455.8211 5603.3605,-3451.7631 5602.966,-3458.752"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)]] -->
<g id="node1205" class="node">
<title>org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-2313.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="5656.0954" y="-2317.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)]]</text>
<text text-anchor="middle" x="5862.0954" y="-2302.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 11ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)] =&gt; monocle.refined.EndsWithString[String(&#39;world&#39;)]]&#45;&gt;org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)]] -->
<g id="edge484" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)] =&gt; monocle.refined.EndsWithString[String(&#39;world&#39;)]]&#45;&gt;org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)]]</title>
<path fill="none" stroke="#000000" d="M4674.333,-3424.362C4818.1826,-3461.5532 5102.2301,-3508.47 5249.5191,-3351.8701 5268.5889,-3331.5948 5238.3505,-2370.052 5257.5191,-2349.8701 5306.8917,-2297.8874 5475.2134,-2291.0702 5621.7504,-2296.0509"/>
<polygon fill="#000000" stroke="#000000" points="5621.6959,-2299.5511 5631.8152,-2296.4125 5621.9473,-2292.5556 5621.6959,-2299.5511"/>
</g>
<!-- Option[String] =&gt; ?{def shouldEqual: ?} -->
<g id="node208" class="node">
<title>Option[String] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-26193.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="539.6596" y="-26197.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[String] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-26182.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 10ms</text>
</g>
<!-- Option[String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge313" class="edge">
<title>Option[String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M818.554,-26200.536C983.8374,-26204.3957 1224.3332,-26201.6493 1305.3191,-26157.8701 1615.5954,-25990.1414 1799.1006,-25565.814 1848.4588,-25438.5197"/>
<polygon fill="#000000" stroke="#000000" points="1851.8574,-25439.4325 1852.1736,-25428.8423 1845.3223,-25436.9239 1851.8574,-25439.4325"/>
</g>
<!-- Option[String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge258" class="edge">
<title>Option[String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M798.9361,-26207.8228C969.9833,-26220.5171 1238.3211,-26227.9531 1305.3191,-26157.8701 1320.5223,-26141.9668 1298.1989,-25381.8522 1313.3191,-25365.8701 1432.6548,-25239.7314 1659.4087,-25274.6616 1780.6995,-25305.4586"/>
<polygon fill="#000000" stroke="#000000" points="1780.1159,-25308.9229 1790.6741,-25308.0425 1781.8713,-25302.1465 1780.1159,-25308.9229"/>
</g>
<!-- monocle.function.Snoc1[monocle.function.CNel,scalaz.IList[Char],Char] -->
<g id="node209" class="node">
<title>monocle.function.Snoc1[monocle.function.CNel,scalaz.IList[Char],Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-34941.8701" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="451.1596" y="-34945.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc1[monocle.function.CNel,scalaz.IList[Char],Char]</text>
<text text-anchor="middle" x="652.6596" y="-34930.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, (Char, Boolean, String, Long, Float))) =&gt; (Int, (Char, Boolean, String, Long, Float))] -->
<g id="node210" class="node">
<title>org.scalacheck.Arbitrary[((Int, (Char, Boolean, String, Long, Float))) =&gt; (Int, (Char, Boolean, String, Long, Float))]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-6645.8701" rx="463.3099" ry="26.7407"/>
<text text-anchor="start" x="2847.3678" y="-6649.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Int, (Char, Boolean, String, Long, Float))) =&gt; (Int, (Char, Boolean, String, Long, Float))]</text>
<text text-anchor="middle" x="3166.8678" y="-6634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 48ms</text>
</g>
<!-- scala.reflect.ClassTag[((Int, (Char, Boolean, String, Long, Float))) =&gt; (Int, (Char, Boolean, String, Long, Float))] -->
<g id="node259" class="node">
<title>scala.reflect.ClassTag[((Int, (Char, Boolean, String, Long, Float))) =&gt; (Int, (Char, Boolean, String, Long, Float))]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-6573.8701" rx="452.5967" ry="26.7407"/>
<text text-anchor="start" x="4274.253" y="-6577.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Int, (Char, Boolean, String, Long, Float))) =&gt; (Int, (Char, Boolean, String, Long, Float))]</text>
<text text-anchor="middle" x="4586.253" y="-6562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, (Char, Boolean, String, Long, Float))) =&gt; (Int, (Char, Boolean, String, Long, Float))]&#45;&gt;scala.reflect.ClassTag[((Int, (Char, Boolean, String, Long, Float))) =&gt; (Int, (Char, Boolean, String, Long, Float))] -->
<g id="edge849" class="edge">
<title>org.scalacheck.Arbitrary[((Int, (Char, Boolean, String, Long, Float))) =&gt; (Int, (Char, Boolean, String, Long, Float))]&#45;&gt;scala.reflect.ClassTag[((Int, (Char, Boolean, String, Long, Float))) =&gt; (Int, (Char, Boolean, String, Long, Float))]</title>
<path fill="none" stroke="#000000" d="M3515.9064,-6628.1647C3733.6714,-6617.1183 4013.1388,-6602.942 4231.8977,-6591.8451"/>
<polygon fill="#000000" stroke="#000000" points="4232.131,-6595.3379 4241.9408,-6591.3357 4231.7763,-6588.3469 4232.131,-6595.3379"/>
</g>
<!-- org.scalacheck.Cogen[(Int, (Char, Boolean, String, Long, Float))] -->
<g id="node334" class="node">
<title>org.scalacheck.Cogen[(Int, (Char, Boolean, String, Long, Float))]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-6645.8701" rx="265.7444" ry="26.7407"/>
<text text-anchor="start" x="4406.253" y="-6649.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Int, (Char, Boolean, String, Long, Float))]</text>
<text text-anchor="middle" x="4586.253" y="-6634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, (Char, Boolean, String, Long, Float))) =&gt; (Int, (Char, Boolean, String, Long, Float))]&#45;&gt;org.scalacheck.Cogen[(Int, (Char, Boolean, String, Long, Float))] -->
<g id="edge116" class="edge">
<title>org.scalacheck.Arbitrary[((Int, (Char, Boolean, String, Long, Float))) =&gt; (Int, (Char, Boolean, String, Long, Float))]&#45;&gt;org.scalacheck.Cogen[(Int, (Char, Boolean, String, Long, Float))]</title>
<path fill="none" stroke="#000000" d="M3630.1544,-6645.8701C3854.8546,-6645.8701 4117.1811,-6645.8701 4310.1568,-6645.8701"/>
<polygon fill="#000000" stroke="#000000" points="4310.1592,-6649.3702 4320.1591,-6645.8701 4310.1591,-6642.3702 4310.1592,-6649.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, (Char, Boolean, String, Long, Float))] -->
<g id="node1475" class="node">
<title>org.scalacheck.Arbitrary[(Int, (Char, Boolean, String, Long, Float))]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-6717.8701" rx="276.4575" ry="26.7407"/>
<text text-anchor="start" x="4398.753" y="-6721.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, (Char, Boolean, String, Long, Float))]</text>
<text text-anchor="middle" x="4586.253" y="-6706.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 29ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, (Char, Boolean, String, Long, Float))) =&gt; (Int, (Char, Boolean, String, Long, Float))]&#45;&gt;org.scalacheck.Arbitrary[(Int, (Char, Boolean, String, Long, Float))] -->
<g id="edge916" class="edge">
<title>org.scalacheck.Arbitrary[((Int, (Char, Boolean, String, Long, Float))) =&gt; (Int, (Char, Boolean, String, Long, Float))]&#45;&gt;org.scalacheck.Arbitrary[(Int, (Char, Boolean, String, Long, Float))]</title>
<path fill="none" stroke="#000000" d="M3515.9064,-6663.5755C3768.2549,-6676.3761 4103.4599,-6693.3798 4331.038,-6704.924"/>
<polygon fill="#000000" stroke="#000000" points="4330.9512,-6708.424 4341.1157,-6705.4352 4331.3059,-6701.433 4330.9512,-6708.424"/>
</g>
<!-- scalaz.Equal[(Int, GetterSpec.this.Bar)] -->
<g id="node211" class="node">
<title>scalaz.Equal[(Int, GetterSpec.this.Bar)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-23241.8701" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="5754.0954" y="-23245.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, GetterSpec.this.Bar)]</text>
<text text-anchor="middle" x="5862.0954" y="-23230.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- scalaz.Equal[(Int, GetterSpec.this.Bar)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge126" class="edge">
<title>scalaz.Equal[(Int, GetterSpec.this.Bar)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M6006.11,-23254.777C6164.8809,-23265.4442 6405.9452,-23269.9148 6466.6717,-23205.8701 6478.8085,-23193.07 6464.1951,-21950.061 6474.6717,-21935.8701 6584.3859,-21787.2584 6816.903,-21758.2176 6948.9946,-21754.3653"/>
<polygon fill="#000000" stroke="#000000" points="6949.2001,-21757.8614 6959.11,-21754.1138 6949.0261,-21750.8635 6949.2001,-21757.8614"/>
</g>
<!-- scalaz.Equal[GetterSpec.this.Bar] -->
<g id="node483" class="node">
<title>scalaz.Equal[GetterSpec.this.Bar]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-23241.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="6954.014" y="-23245.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[GetterSpec.this.Bar]</text>
<text text-anchor="middle" x="7046.014" y="-23230.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- scalaz.Equal[(Int, GetterSpec.this.Bar)]&#45;&gt;scalaz.Equal[GetterSpec.this.Bar] -->
<g id="edge1081" class="edge">
<title>scalaz.Equal[(Int, GetterSpec.this.Bar)]&#45;&gt;scalaz.Equal[GetterSpec.this.Bar]</title>
<path fill="none" stroke="#000000" d="M6026.4031,-23241.8701C6256.4299,-23241.8701 6671.2329,-23241.8701 6894.2891,-23241.8701"/>
<polygon fill="#000000" stroke="#000000" points="6894.4366,-23245.3702 6904.4366,-23241.8701 6894.4366,-23238.3702 6894.4366,-23245.3702"/>
</g>
<!-- org.scalacheck.Cogen[(Stream[Int], Int)]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge1271" class="edge">
<title>org.scalacheck.Cogen[(Stream[Int], Int)]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M4734.6066,-11065.8125C4907.0433,-11077.366 5177.2608,-11083.5306 5249.5191,-11016.8701 5268.9689,-10998.927 5237.866,-10975.5901 5257.5191,-10957.8701 5307.4339,-10912.8648 6402.39,-10939.4868 6466.6717,-10919.8701 6695.5566,-10850.0215 6922.9833,-10664.6834 7009.4985,-10588.8833"/>
<polygon fill="#000000" stroke="#000000" points="7011.9954,-10591.3481 7017.1849,-10582.1113 7007.3679,-10586.0958 7011.9954,-10591.3481"/>
</g>
<!-- org.scalacheck.Cogen[Stream[Int]] -->
<g id="node1078" class="node">
<title>org.scalacheck.Cogen[Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-10993.8701" rx="147.1565" ry="26.7407"/>
<text text-anchor="start" x="5766.0954" y="-10997.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Stream[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-10982.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 11ms</text>
</g>
<!-- org.scalacheck.Cogen[(Stream[Int], Int)]&#45;&gt;org.scalacheck.Cogen[Stream[Int]] -->
<g id="edge988" class="edge">
<title>org.scalacheck.Cogen[(Stream[Int], Int)]&#45;&gt;org.scalacheck.Cogen[Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4748.8108,-11045.3527C4996.8805,-11033.881 5466.5965,-11012.1595 5708.932,-11000.9529"/>
<polygon fill="#000000" stroke="#000000" points="5709.4047,-11004.4349 5719.2323,-11000.4766 5709.0813,-10997.4424 5709.4047,-11004.4349"/>
</g>
<!-- monocle.function.At[Map[Int,String],Int,Option[String]] -->
<g id="node213" class="node">
<title>monocle.function.At[Map[Int,String],Int,Option[String]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-35013.8701" rx="231.4481" ry="26.7407"/>
<text text-anchor="start" x="497.1596" y="-35017.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[Map[Int,String],Int,Option[String]]</text>
<text text-anchor="middle" x="652.6596" y="-35002.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil] -->
<g id="node214" class="node">
<title>org.scalactic.Equality[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-35085.8701" rx="330.4379" ry="26.7407"/>
<text text-anchor="start" x="427.1596" y="-35089.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="652.6596" y="-35074.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil] -->
<g id="node1149" class="node">
<title>scalaz.Equal[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-35085.8701" rx="295.6413" ry="26.7407"/>
<text text-anchor="start" x="1661.034" y="-35089.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="1862.034" y="-35074.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]&#45;&gt;scalaz.Equal[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil] -->
<g id="edge813" class="edge">
<title>org.scalactic.Equality[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]&#45;&gt;scalaz.Equal[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M983.1264,-35085.8701C1161.9267,-35085.8701 1381.3098,-35085.8701 1556.1643,-35085.8701"/>
<polygon fill="#000000" stroke="#000000" points="1556.2966,-35089.3702 1566.2965,-35085.8701 1556.2965,-35082.3702 1556.2966,-35089.3702"/>
</g>
<!-- scalaz.Equal[(Char, Int)] -->
<g id="node215" class="node">
<title>scalaz.Equal[(Char, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-20383.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="5794.0954" y="-20387.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Char, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-20372.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[(Char, Int)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge1104" class="edge">
<title>scalaz.Equal[(Char, Int)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5962.505,-20374.2262C6116.403,-20361.9166 6399.8549,-20349.8275 6466.6717,-20419.8701 6479.0971,-20432.8953 6468.4537,-21050.9767 6474.6717,-21067.8701 6586.246,-21370.9984 6893.8076,-21635.8181 7005.1229,-21724.3976"/>
<polygon fill="#000000" stroke="#000000" points="7003.0914,-21727.2533 7013.105,-21730.7144 7007.4354,-21721.7642 7003.0914,-21727.2533"/>
</g>
<!-- scalaz.Equal[Char] -->
<g id="node1123" class="node">
<title>scalaz.Equal[Char]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-19519.8701" rx="84.7059" ry="26.7407"/>
<text text-anchor="start" x="6994.014" y="-19523.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Char]</text>
<text text-anchor="middle" x="7046.014" y="-19508.6701" font-family="Times,serif" font-size="14.00" fill="#000000">60 times = 26ms</text>
</g>
<!-- scalaz.Equal[(Char, Int)]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge65" class="edge">
<title>scalaz.Equal[(Char, Int)]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M5962.499,-20393.5082C6116.3887,-20405.8099 6399.8295,-20417.8883 6466.6717,-20347.8701 6478.4114,-20335.5725 6464.9153,-19749.7935 6474.6717,-19735.8701 6583.6515,-19580.3448 6819.7548,-19536.711 6951.7922,-19524.5307"/>
<polygon fill="#000000" stroke="#000000" points="6952.2412,-19528.0048 6961.8958,-19523.6413 6951.6273,-19521.0318 6952.2412,-19528.0048"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int]] -->
<g id="node216" class="node">
<title>org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-13041.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="5719.0954" y="-13045.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-13030.6701" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 41ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge832" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6072.3683,-13036.957C6189.7843,-13038.5389 6337.9245,-13047.7546 6466.6717,-13077.8701 6669.8082,-13125.386 6892.3859,-13238.4182 6992.2695,-13292.7255"/>
<polygon fill="#000000" stroke="#000000" points="6990.8071,-13295.9147 7001.2611,-13297.6362 6994.1623,-13289.7712 6990.8071,-13295.9147"/>
</g>
<!-- org.scalactic.Equality[Option[List[Unit]]] -->
<g id="node217" class="node">
<title>org.scalactic.Equality[Option[List[Unit]]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-16716.8701" rx="172.5681" ry="26.7407"/>
<text text-anchor="start" x="3052.8678" y="-16720.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[List[Unit]]]</text>
<text text-anchor="middle" x="3166.8678" y="-16705.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 14ms</text>
</g>
<!-- scalaz.Equal[Option[List[Unit]]] -->
<g id="node1315" class="node">
<title>scalaz.Equal[Option[List[Unit]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-16805.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="4497.253" y="-16809.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[List[Unit]]]</text>
<text text-anchor="middle" x="4586.253" y="-16794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 12ms</text>
</g>
<!-- org.scalactic.Equality[Option[List[Unit]]]&#45;&gt;scalaz.Equal[Option[List[Unit]]] -->
<g id="edge1000" class="edge">
<title>org.scalactic.Equality[Option[List[Unit]]]&#45;&gt;scalaz.Equal[Option[List[Unit]]]</title>
<path fill="none" stroke="#000000" d="M3256.5669,-16693.8432C3406.8486,-16660.7865 3712.8702,-16617.6826 3914.9868,-16752.8701 3921.9277,-16757.5125 3916.0602,-16765.2063 3922.9868,-16769.8701 4005.2459,-16825.256 4276.3402,-16822.4714 4445.4149,-16814.6785"/>
<polygon fill="#000000" stroke="#000000" points="4445.8229,-16818.1632 4455.6465,-16814.1951 4445.4924,-16811.171 4445.8229,-16818.1632"/>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Foo] -->
<g id="node218" class="node">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Foo]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-34329.8701" rx="256.8596" ry="26.7407"/>
<text text-anchor="start" x="479.1596" y="-34333.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Foo]</text>
<text text-anchor="middle" x="652.6596" y="-34318.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Foo]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Foo] -->
<g id="edge683" class="edge">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Foo]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Foo]</title>
<path fill="none" stroke="#000000" d="M909.5066,-34329.8701C1114.7011,-34329.8701 1400.8716,-34329.8701 1605.8827,-34329.8701"/>
<polygon fill="#000000" stroke="#000000" points="1605.8893,-34333.3702 1615.8892,-34329.8701 1605.8892,-34326.3702 1605.8893,-34333.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]] -->
<g id="node219" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-35157.8701" rx="424.0283" ry="26.7407"/>
<text text-anchor="start" x="2874.8678" y="-35161.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="3166.8678" y="-35146.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Map[Int,String]] -->
<g id="node220" class="node">
<title>org.scalacheck.Arbitrary[Map[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-10117.8701" rx="173.8966" ry="26.7407"/>
<text text-anchor="start" x="5747.0954" y="-10121.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Map[Int,String]]</text>
<text text-anchor="middle" x="5862.0954" y="-10106.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 45ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Map[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge665" class="edge">
<title>org.scalacheck.Arbitrary[Map[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6013.2811,-10131.272C6172.0661,-10141.6051 6406.9134,-10145.0216 6466.6717,-10081.8701 6484.5423,-10062.9847 6457.9378,-8229.7695 6474.6717,-8209.8701 6583.855,-8080.0329 6796.5483,-8076.8578 6929.3753,-8089.8995"/>
<polygon fill="#000000" stroke="#000000" points="6929.2851,-8093.4086 6939.5907,-8090.9499 6930.0012,-8086.4453 6929.2851,-8093.4086"/>
</g>
<!-- org.scalacheck.Arbitrary[Map[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge472" class="edge">
<title>org.scalacheck.Arbitrary[Map[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6012.9386,-10104.4751C6171.7438,-10094.1092 6406.9147,-10090.6269 6466.6717,-10153.8701 6480.274,-10168.2659 6464.5991,-12988.817 6474.6717,-13005.8701 6577.5977,-13180.1244 6814.558,-13265.4617 6948.7413,-13301.1835"/>
<polygon fill="#000000" stroke="#000000" points="6948.0576,-13304.6225 6958.6183,-13303.7728 6949.8327,-13297.8513 6948.0576,-13304.6225"/>
</g>
<!-- scala.reflect.ClassTag[BigDecimal] -->
<g id="node221" class="node">
<title>scala.reflect.ClassTag[BigDecimal]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-35301.8701" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="1764.534" y="-35305.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[BigDecimal]</text>
<text text-anchor="middle" x="1862.034" y="-35290.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scalaz.Equal[Int ==&gt;&gt; Char] -->
<g id="node222" class="node">
<title>scalaz.Equal[Int ==&gt;&gt; Char]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-19951.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="5782.0954" y="-19955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int ==&gt;&gt; Char]</text>
<text text-anchor="middle" x="5862.0954" y="-19940.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[Int ==&gt;&gt; Char]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge410" class="edge">
<title>scalaz.Equal[Int ==&gt;&gt; Char]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5976.3513,-19941.107C6132.8689,-19929.1843 6401.9735,-19919.7123 6466.6717,-19987.8701 6476.9989,-19998.7495 6469.525,-21053.7802 6474.6717,-21067.8701 6585.4972,-21371.2729 6893.5271,-21635.9209 7005.0441,-21724.4265"/>
<polygon fill="#000000" stroke="#000000" points="7003.0227,-21727.2899 7013.0408,-21730.7379 7007.3595,-21721.7951 7003.0227,-21727.2899"/>
</g>
<!-- scalaz.Order[Char] -->
<g id="node1026" class="node">
<title>scalaz.Order[Char]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-19771.8701" rx="84.7059" ry="26.7407"/>
<text text-anchor="start" x="6994.014" y="-19775.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[Char]</text>
<text text-anchor="middle" x="7046.014" y="-19760.6701" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 1ms</text>
</g>
<!-- scalaz.Equal[Int ==&gt;&gt; Char]&#45;&gt;scalaz.Order[Char] -->
<g id="edge174" class="edge">
<title>scalaz.Equal[Int ==&gt;&gt; Char]&#45;&gt;scalaz.Order[Char]</title>
<path fill="none" stroke="#000000" d="M5986.692,-19951.1306C6109.4248,-19948.8351 6301.9237,-19941.0302 6466.6717,-19915.8701 6653.2036,-19887.3831 6867.4452,-19826.5806 6975.6346,-19793.8366"/>
<polygon fill="#000000" stroke="#000000" points="6976.9022,-19797.1096 6985.453,-19790.8538 6974.8674,-19790.4118 6976.9022,-19797.1096"/>
</g>
<!-- scalaz.Equal[Int ==&gt;&gt; Char]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge973" class="edge">
<title>scalaz.Equal[Int ==&gt;&gt; Char]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M5976.9938,-19962.3754C6133.2406,-19973.8637 6400.8618,-19982.6786 6466.6717,-19915.8701 6480.7208,-19901.6078 6462.9277,-19752.0833 6474.6717,-19735.8701 6585.9238,-19582.281 6820.5717,-19537.8695 6951.9124,-19525.0506"/>
<polygon fill="#000000" stroke="#000000" points="6952.332,-19528.5267 6961.9631,-19524.1117 6951.6809,-19521.5571 6952.332,-19528.5267"/>
</g>
<!-- scalaz.Equal[Int ==&gt;&gt; Char]&#45;&gt;scalaz.Order[Int] -->
<g id="edge1105" class="edge">
<title>scalaz.Equal[Int ==&gt;&gt; Char]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5976.7336,-19941.3221C6133.0154,-19929.7416 6401.0634,-19920.7716 6466.6717,-19987.8701 6483.4622,-20005.0419 6467.1053,-20181.0766 6474.6717,-20203.8701 6591.8127,-20556.7509 6909.2443,-20895.3335 7012.8309,-20999.3587"/>
<polygon fill="#000000" stroke="#000000" points="7010.3674,-21001.845 7019.9139,-21006.4401 7015.3167,-20996.8947 7010.3674,-21001.845"/>
</g>
<!-- (=&gt; monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]) =&gt; monocle.Iso[monocle.Quintary,_$1] -->
<g id="node223" class="node">
<title>(=&gt; monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]) =&gt; monocle.Iso[monocle.Quintary,_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-35373.8701" rx="457.4962" ry="26.7407"/>
<text text-anchor="start" x="337.1596" y="-35377.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]) =&gt; monocle.Iso[monocle.Quintary,_$1]</text>
<text text-anchor="middle" x="652.6596" y="-35362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper \/ Boolean] -->
<g id="node224" class="node">
<title>org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper \/ Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-5239.8701" rx="246.5607" ry="26.7407"/>
<text text-anchor="start" x="5695.5954" y="-5243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper / Boolean]</text>
<text text-anchor="middle" x="5862.0954" y="-5228.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 23ms</text>
</g>
<!-- scala.reflect.ClassTag[IsoSpec.this.IntWrapper \/ Boolean] -->
<g id="node335" class="node">
<title>scala.reflect.ClassTag[IsoSpec.this.IntWrapper \/ Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-5239.8701" rx="236.3475" ry="26.7407"/>
<text text-anchor="start" x="6887.014" y="-5243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[IsoSpec.this.IntWrapper / Boolean]</text>
<text text-anchor="middle" x="7046.014" y="-5228.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper \/ Boolean]&#45;&gt;scala.reflect.ClassTag[IsoSpec.this.IntWrapper \/ Boolean] -->
<g id="edge733" class="edge">
<title>org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper \/ Boolean]&#45;&gt;scala.reflect.ClassTag[IsoSpec.this.IntWrapper \/ Boolean]</title>
<path fill="none" stroke="#000000" d="M6109.2024,-5239.8701C6311.8253,-5239.8701 6597.216,-5239.8701 6799.6391,-5239.8701"/>
<polygon fill="#000000" stroke="#000000" points="6799.8192,-5243.3702 6809.8192,-5239.8701 6799.8191,-5236.3702 6799.8192,-5243.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper \/ Boolean]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge1151" class="edge">
<title>org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper \/ Boolean]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6060.0855,-5223.8012C6214.8361,-5216.1262 6412.5055,-5218.7363 6466.6717,-5275.8701 6479.0752,-5288.9531 6462.2908,-6560.7656 6474.6717,-6573.8701 6531.2605,-6633.7658 6754.2405,-6631.174 6904.3225,-6621.9146"/>
<polygon fill="#000000" stroke="#000000" points="6904.7909,-6625.3921 6914.5494,-6621.2665 6904.3481,-6618.4061 6904.7909,-6625.3921"/>
</g>
<!-- org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper] -->
<g id="node739" class="node">
<title>org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-5023.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="6907.514" y="-5027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper]</text>
<text text-anchor="middle" x="7046.014" y="-5012.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 102ms</text>
</g>
<!-- org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper \/ Boolean]&#45;&gt;org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper] -->
<g id="edge559" class="edge">
<title>org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper \/ Boolean]&#45;&gt;org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper]</title>
<path fill="none" stroke="#000000" d="M6063.6272,-5255.4367C6217.2937,-5262.4339 6411.6229,-5259.1382 6466.6717,-5203.8701 6489.2889,-5181.1627 6452.0937,-5082.6164 6474.6717,-5059.8701 6526.7225,-5007.4312 6711.0343,-5003.7607 6856.4185,-5009.8988"/>
<polygon fill="#000000" stroke="#000000" points="6856.6721,-5013.4133 6866.8166,-5010.3572 6856.9804,-5006.4201 6856.6721,-5013.4133"/>
</g>
<!-- org.scalatest.enablers.CheckerAsserting[org.scalatest.Assertion] -->
<g id="node225" class="node">
<title>org.scalatest.enablers.CheckerAsserting[org.scalatest.Assertion]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-35445.8701" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="478.1596" y="-35449.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalatest.enablers.CheckerAsserting[org.scalatest.Assertion]</text>
<text text-anchor="middle" x="652.6596" y="-35434.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int \&amp;/ String] -->
<g id="node226" class="node">
<title>org.scalacheck.Arbitrary[Int \&amp;/ String]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-10045.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="5755.0954" y="-10049.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Int &amp;/ String]</text>
<text text-anchor="middle" x="5862.0954" y="-10034.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int \&amp;/ String]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge413" class="edge">
<title>org.scalacheck.Arbitrary[Int \&amp;/ String]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6005.0682,-10058.7253C6163.8439,-10069.4626 6405.8691,-10074.1143 6466.6717,-10009.8701 6483.8565,-9991.7126 6458.5797,-8229.0028 6474.6717,-8209.8701 6583.8661,-8080.0423 6796.5559,-8076.8642 6929.3792,-8089.9028"/>
<polygon fill="#000000" stroke="#000000" points="6929.2888,-8093.4119 6939.5943,-8090.9529 6930.0047,-8086.4486 6929.2888,-8093.4119"/>
</g>
<!-- org.scalacheck.Arbitrary[Int \&amp;/ String]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge719" class="edge">
<title>org.scalacheck.Arbitrary[Int \&amp;/ String]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6005.0875,-10032.9965C6163.8815,-10022.2419 6405.924,-10017.5739 6466.6717,-10081.8701 6480.6169,-10096.6298 6464.3454,-12988.3862 6474.6717,-13005.8701 6577.5916,-13180.128 6814.5543,-13265.4639 6948.7396,-13301.1845"/>
<polygon fill="#000000" stroke="#000000" points="6948.0561,-13304.6235 6958.6168,-13303.7737 6949.8311,-13297.8523 6948.0561,-13304.6235"/>
</g>
<!-- org.scalacheck.Cogen[Stream[scalaz.Tree[Int]]] -->
<g id="node227" class="node">
<title>org.scalacheck.Cogen[Stream[scalaz.Tree[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-10764.8701" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="4455.253" y="-10768.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Stream[scalaz.Tree[Int]]]</text>
<text text-anchor="middle" x="4586.253" y="-10753.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Cogen[Stream[scalaz.Tree[Int]]]&#45;&gt;org.scalacheck.Cogen[scalaz.Tree[Int]] -->
<g id="edge409" class="edge">
<title>org.scalacheck.Cogen[Stream[scalaz.Tree[Int]]]&#45;&gt;org.scalacheck.Cogen[scalaz.Tree[Int]]</title>
<path fill="none" stroke="#000000" d="M4749.2998,-10749.7808C4923.1179,-10737.6956 5182.4439,-10732.4875 5249.5191,-10800.8701 5267.3474,-10819.0459 5241.4851,-11010.0933 5257.5191,-11029.8701 5362.0222,-11158.7673 5558.4513,-11187.0358 5699.0644,-11188.9983"/>
<polygon fill="#000000" stroke="#000000" points="5699.0567,-11192.4983 5709.0901,-11189.0952 5699.1244,-11185.4986 5699.0567,-11192.4983"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int]] -->
<g id="node228" class="node">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-11844.8701" rx="218.492" ry="26.7407"/>
<text text-anchor="start" x="4439.753" y="-11848.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int]]</text>
<text text-anchor="middle" x="4586.253" y="-11833.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 30ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Stream[Int]] -->
<g id="node516" class="node">
<title>org.scalacheck.Arbitrary[Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-11509.8701" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="5758.5954" y="-11513.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Stream[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-11498.6701" font-family="Times,serif" font-size="14.00" fill="#000000">17 times = 151ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int]]&#45;&gt;org.scalacheck.Arbitrary[Stream[Int]] -->
<g id="edge235" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int]]&#45;&gt;org.scalacheck.Arbitrary[Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4762.0611,-11860.8789C4935.6052,-11872.3609 5184.2097,-11875.7536 5249.5191,-11808.8701 5269.9443,-11787.9526 5237.1489,-11566.8411 5257.5191,-11545.8701 5318.1402,-11483.4608 5553.0359,-11486.6963 5711.5528,-11496.785"/>
<polygon fill="#000000" stroke="#000000" points="5711.6742,-11500.3003 5721.8809,-11497.4588 5712.13,-11493.3151 5711.6742,-11500.3003"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge592" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4761.1009,-11828.706C4934.8975,-11816.9664 5184.6655,-11813.2445 5249.5191,-11880.8701 5261.9405,-11893.8223 5244.9508,-12514.0603 5257.5191,-12526.8701 5351.6572,-12622.8172 6372.2579,-12469.1942 6466.6717,-12564.8701 6483.8833,-12582.3117 6462.0482,-12984.8678 6474.6717,-13005.8701 6579.0019,-13179.4488 6815.6892,-13265.0973 6949.3827,-13301.0384"/>
<polygon fill="#000000" stroke="#000000" points="6948.6598,-13304.4675 6959.2226,-13303.6439 6950.4516,-13297.7007 6948.6598,-13304.4675"/>
</g>
<!-- scalaz.Compose[monocle.Traversal] -->
<g id="node229" class="node">
<title>scalaz.Compose[monocle.Traversal]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-35517.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="552.6596" y="-35521.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Compose[monocle.Traversal]</text>
<text text-anchor="middle" x="652.6596" y="-35506.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.CList =&gt; monocle.function.CList] -->
<g id="node230" class="node">
<title>org.scalacheck.Arbitrary[monocle.function.CList =&gt; monocle.function.CList]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-1881.8701" rx="313.4968" ry="26.7407"/>
<text text-anchor="start" x="5648.5954" y="-1885.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.function.CList =&gt; monocle.function.CList]</text>
<text text-anchor="middle" x="5862.0954" y="-1870.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 23ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.CList =&gt; monocle.function.CList]&#45;&gt;org.scalacheck.Arbitrary[monocle.function.CList] -->
<g id="edge1168" class="edge">
<title>org.scalacheck.Arbitrary[monocle.function.CList =&gt; monocle.function.CList]&#45;&gt;org.scalacheck.Arbitrary[monocle.function.CList]</title>
<path fill="none" stroke="#000000" d="M6099.792,-1864.3318C6246.8061,-1859.2783 6416.7062,-1865.9025 6466.6717,-1917.8701 6481.9227,-1933.7321 6460.461,-2297.0697 6474.6717,-2313.8701 6573.394,-2430.5823 6755.2357,-2447.0077 6887.3198,-2440.9527"/>
<polygon fill="#000000" stroke="#000000" points="6887.7292,-2444.4365 6897.5394,-2440.4351 6887.3751,-2437.4455 6887.7292,-2444.4365"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.CList =&gt; monocle.function.CList]&#45;&gt;org.scalacheck.Cogen[monocle.function.CList] -->
<g id="edge1010" class="edge">
<title>org.scalacheck.Arbitrary[monocle.function.CList =&gt; monocle.function.CList]&#45;&gt;org.scalacheck.Cogen[monocle.function.CList]</title>
<path fill="none" stroke="#000000" d="M6098.7389,-1864.2276C6246.0957,-1859.0321 6416.8069,-1865.5332 6466.6717,-1917.8701 6480.4686,-1932.3509 6460.8998,-2623.3654 6474.6717,-2637.8701 6597.3929,-2767.1207 6828.5397,-2732.9563 6955.9884,-2700.8981"/>
<polygon fill="#000000" stroke="#000000" points="6956.9168,-2704.2734 6965.7344,-2698.3997 6955.1785,-2697.4926 6956.9168,-2704.2734"/>
</g>
<!-- scala.reflect.ClassTag[monocle.function.CList =&gt; monocle.function.CList] -->
<g id="node889" class="node">
<title>scala.reflect.ClassTag[monocle.function.CList =&gt; monocle.function.CList]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-1881.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="6840.014" y="-1885.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[monocle.function.CList =&gt; monocle.function.CList]</text>
<text text-anchor="middle" x="7046.014" y="-1870.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.CList =&gt; monocle.function.CList]&#45;&gt;scala.reflect.ClassTag[monocle.function.CList =&gt; monocle.function.CList] -->
<g id="edge424" class="edge">
<title>org.scalacheck.Arbitrary[monocle.function.CList =&gt; monocle.function.CList]&#45;&gt;scala.reflect.ClassTag[monocle.function.CList =&gt; monocle.function.CList]</title>
<path fill="none" stroke="#000000" d="M6175.4799,-1881.8701C6347.7662,-1881.8701 6560.8346,-1881.8701 6733.0539,-1881.8701"/>
<polygon fill="#000000" stroke="#000000" points="6733.2966,-1885.3702 6743.2966,-1881.8701 6733.2966,-1878.3702 6733.2966,-1885.3702"/>
</g>
<!-- scalaz.Equal[(Int, Stream[Int])]&#45;&gt;scalaz.Equal[Stream[Int]] -->
<g id="edge1220" class="edge">
<title>scalaz.Equal[(Int, Stream[Int])]&#45;&gt;scalaz.Equal[Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4717.3893,-22597.142C4965.9477,-22588.1803 5502.1788,-22568.8467 5741.9631,-22560.2014"/>
<polygon fill="#000000" stroke="#000000" points="5742.243,-22563.6937 5752.1103,-22559.8355 5741.9907,-22556.6982 5742.243,-22563.6937"/>
</g>
<!-- scalaz.Equal[(Int, Stream[Int])]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge614" class="edge">
<title>scalaz.Equal[(Int, Stream[Int])]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4717.5795,-22606.1541C5134.548,-22619.1105 6404.7626,-22653.3549 6466.6717,-22591.8701 6479.602,-22579.0284 6463.8049,-21950.4991 6474.6717,-21935.8701 6584.7479,-21787.6842 6816.8522,-21758.4561 6948.846,-21754.4646"/>
<polygon fill="#000000" stroke="#000000" points="6949.0486,-21757.9606 6958.9544,-21754.2024 6948.867,-21750.963 6949.0486,-21757.9606"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int),SGen] -->
<g id="node232" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int),SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-27021.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="1710.034" y="-27025.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int),SGen]</text>
<text text-anchor="middle" x="1862.034" y="-27010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.hlist.Prepend[Float :: Long :: shapeless.HNil,Double :: shapeless.HNil] -->
<g id="node830" class="node">
<title>shapeless.ops.hlist.Prepend[Float :: Long :: shapeless.HNil,Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-33726.8701" rx="340.651" ry="26.7407"/>
<text text-anchor="start" x="5629.0954" y="-33730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Prepend[Float :: Long :: shapeless.HNil,Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="5862.0954" y="-33715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 22ms</text>
</g>
<!-- shapeless.ops.hlist.Prepend[Char :: Float :: Long :: shapeless.HNil,Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Prepend[Float :: Long :: shapeless.HNil,Double :: shapeless.HNil] -->
<g id="edge591" class="edge">
<title>shapeless.ops.hlist.Prepend[Char :: Float :: Long :: shapeless.HNil,Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Prepend[Float :: Long :: shapeless.HNil,Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M4956.9933,-33726.8701C5131.6536,-33726.8701 5338.9293,-33726.8701 5511.026,-33726.8701"/>
<polygon fill="#000000" stroke="#000000" points="5511.2683,-33730.3702 5521.2682,-33726.8701 5511.2682,-33723.3702 5511.2683,-33730.3702"/>
</g>
<!-- scalaz.Equal[MacroOutSideMonocleSpec.this.EmptyCase] -->
<g id="node234" class="node">
<title>scalaz.Equal[MacroOutSideMonocleSpec.this.EmptyCase]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-35589.8701" rx="239.9186" ry="26.7407"/>
<text text-anchor="start" x="491.1596" y="-35593.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[MacroOutSideMonocleSpec.this.EmptyCase]</text>
<text text-anchor="middle" x="652.6596" y="-35578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Option[Long] =&gt; ?{def shouldEqual: ?} -->
<g id="node235" class="node">
<title>Option[Long] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-26121.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="542.1596" y="-26125.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Long] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-26110.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Option[Long] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge341" class="edge">
<title>Option[Long] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M764.7479,-26141.9075C900.6663,-26160.5283 1132.9336,-26173.7327 1305.3191,-26085.8701 1597.8883,-25936.7515 1790.9833,-25557.4105 1845.9332,-25438.2586"/>
<polygon fill="#000000" stroke="#000000" points="1849.2654,-25439.3874 1850.2391,-25428.8374 1842.8989,-25436.4775 1849.2654,-25439.3874"/>
</g>
<!-- Option[Long] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge25" class="edge">
<title>Option[Long] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M796.6779,-26135.6443C967.6004,-26148.4279 1237.9915,-26156.2267 1305.3191,-26085.8701 1319.1476,-26071.4194 1299.566,-25380.3925 1313.3191,-25365.8701 1432.7185,-25239.7916 1659.4455,-25274.6965 1780.7155,-25305.4738"/>
<polygon fill="#000000" stroke="#000000" points="1780.1303,-25308.9376 1790.6884,-25308.056 1781.8849,-25302.161 1780.1303,-25308.9376"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(A, B),Either[A,B]] -->
<g id="node236" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(A, B),Either[A,B]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-28493.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="6877.514" y="-28497.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(A, B),Either[A,B]]</text>
<text text-anchor="middle" x="7046.014" y="-28482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[Option[(Char, Boolean, String, Int, Double)]] -->
<g id="node237" class="node">
<title>scalaz.Equal[Option[(Char, Boolean, String, Int, Double)]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-19087.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="4425.253" y="-19091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[(Char, Boolean, String, Int, Double)]]</text>
<text text-anchor="middle" x="4586.253" y="-19076.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Int, Double)] -->
<g id="node688" class="node">
<title>scalaz.Equal[(Char, Boolean, String, Int, Double)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-19087.8701" rx="206.4504" ry="26.7407"/>
<text text-anchor="start" x="5724.0954" y="-19091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Char, Boolean, String, Int, Double)]</text>
<text text-anchor="middle" x="5862.0954" y="-19076.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 13ms</text>
</g>
<!-- scalaz.Equal[Option[(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[(Char, Boolean, String, Int, Double)] -->
<g id="edge476" class="edge">
<title>scalaz.Equal[Option[(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[(Char, Boolean, String, Int, Double)]</title>
<path fill="none" stroke="#000000" d="M4825.4804,-19087.8701C5061.1672,-19087.8701 5418.0456,-19087.8701 5645.553,-19087.8701"/>
<polygon fill="#000000" stroke="#000000" points="5645.613,-19091.3702 5655.6129,-19087.8701 5645.6129,-19084.3702 5645.613,-19091.3702"/>
</g>
<!-- shapeless.Generic.Aux[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,SGen] -->
<g id="node238" class="node">
<title>shapeless.Generic.Aux[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-26913.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="4386.253" y="-26917.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="4586.253" y="-26902.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[monocle.Arities =&gt; Option[Unit]] -->
<g id="node239" class="node">
<title>scalaz.Equal[monocle.Arities =&gt; Option[Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-16589.8701" rx="195.3231" ry="26.7407"/>
<text text-anchor="start" x="4456.253" y="-16593.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Arities =&gt; Option[Unit]]</text>
<text text-anchor="middle" x="4586.253" y="-16578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.Arities] -->
<g id="node587" class="node">
<title>org.scalacheck.Arbitrary[monocle.Arities]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-17021.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="5746.0954" y="-17025.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.Arities]</text>
<text text-anchor="middle" x="5862.0954" y="-17010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- scalaz.Equal[monocle.Arities =&gt; Option[Unit]]&#45;&gt;org.scalacheck.Arbitrary[monocle.Arities] -->
<g id="edge1154" class="edge">
<title>scalaz.Equal[monocle.Arities =&gt; Option[Unit]]&#45;&gt;org.scalacheck.Arbitrary[monocle.Arities]</title>
<path fill="none" stroke="#000000" d="M4747.8924,-16574.7344C4921.8602,-16562.4302 5182.679,-16556.8558 5249.5191,-16625.8701 5263.4366,-16640.2402 5243.6394,-16971.4634 5257.5191,-16985.8701 5316.3671,-17046.9525 5541.1558,-17045.3436 5699.3594,-17035.8009"/>
<polygon fill="#000000" stroke="#000000" points="5699.9168,-17039.2731 5709.6812,-17035.1614 5699.4839,-17032.2865 5699.9168,-17039.2731"/>
</g>
<!-- scalaz.Equal[Option[Unit]] -->
<g id="node1112" class="node">
<title>scalaz.Equal[Option[Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-16733.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="5788.0954" y="-16737.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[Unit]]</text>
<text text-anchor="middle" x="5862.0954" y="-16722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- scalaz.Equal[monocle.Arities =&gt; Option[Unit]]&#45;&gt;scalaz.Equal[Option[Unit]] -->
<g id="edge599" class="edge">
<title>scalaz.Equal[monocle.Arities =&gt; Option[Unit]]&#45;&gt;scalaz.Equal[Option[Unit]]</title>
<path fill="none" stroke="#000000" d="M4751.4932,-16575.5359C4924.44,-16564.4622 5180.3222,-16560.472 5249.5191,-16625.8701 5272.919,-16647.9853 5234.1773,-16675.6934 5257.5191,-16697.8701 5324.8372,-16761.8279 5587.0461,-16754.669 5743.1801,-16744.0804"/>
<polygon fill="#000000" stroke="#000000" points="5743.5737,-16747.5616 5753.3078,-16743.3787 5743.0898,-16740.5783 5743.5737,-16747.5616"/>
</g>
<!-- shapeless.Generic.Aux[Int :: shapeless.HNil,SGen] -->
<g id="node240" class="node">
<title>shapeless.Generic.Aux[Int :: shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="9347.3831" cy="-26949.8701" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="9207.3831" y="-26953.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Int :: shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="9347.3831" y="-26938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[scalaz.IList[Char],scalaz.IList[Char]] -->
<g id="node241" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[scalaz.IList[Char],scalaz.IList[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-35697.8701" rx="282.2713" ry="26.7407"/>
<text text-anchor="start" x="1670.534" y="-35701.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[scalaz.IList[Char],scalaz.IList[Char]]</text>
<text text-anchor="middle" x="1862.034" y="-35686.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.IList[Char],scalaz.IList[Char]] -->
<g id="node308" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.IList[Char],scalaz.IList[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-35697.8701" rx="362.0773" ry="26.7407"/>
<text text-anchor="start" x="2918.8678" y="-35701.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.IList[Char],scalaz.IList[Char]]</text>
<text text-anchor="middle" x="3166.8678" y="-35686.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[scalaz.IList[Char],scalaz.IList[Char]]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.IList[Char],scalaz.IList[Char]] -->
<g id="edge1106" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[scalaz.IList[Char],scalaz.IList[Char]]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.IList[Char],scalaz.IList[Char]]</title>
<path fill="none" stroke="#000000" d="M2144.3599,-35697.8701C2334.6727,-35697.8701 2587.7656,-35697.8701 2794.5322,-35697.8701"/>
<polygon fill="#000000" stroke="#000000" points="2794.6532,-35701.3702 2804.6532,-35697.8701 2794.6532,-35694.3702 2794.6532,-35701.3702"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Int,scala.collection.immutable.Stream[Int]] -->
<g id="node242" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Int,scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-513.8701" rx="340.651" ry="26.7407"/>
<text text-anchor="start" x="7963.6985" y="-517.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Int,scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="8196.6985" y="-502.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Order[Stream[Int]] -->
<g id="node243" class="node">
<title>scalaz.Order[Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-22483.8701" rx="111.0315" ry="26.7407"/>
<text text-anchor="start" x="5791.5954" y="-22487.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[Stream[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-22472.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[(Long, String)] -->
<g id="node244" class="node">
<title>scalaz.Equal[(Long, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-18905.8701" rx="121.7449" ry="26.7407"/>
<text text-anchor="start" x="5784.0954" y="-18909.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Long, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-18894.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[(Long, String)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge867" class="edge">
<title>scalaz.Equal[(Long, String)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M5974.0442,-18895.2982C6130.192,-18883.3144 6401.5942,-18873.4382 6466.6717,-18941.8701 6483.2497,-18959.3025 6462.9512,-19786.8618 6474.6717,-19807.8701 6582.3929,-20000.9527 6841.4602,-20104.9244 6970.432,-20146.2935"/>
<polygon fill="#000000" stroke="#000000" points="6969.6521,-20149.7177 6980.2421,-20149.3998 6971.7652,-20143.0443 6969.6521,-20149.7177"/>
</g>
<!-- scalaz.Equal[(Long, String)]&#45;&gt;scalaz.Equal[Long] -->
<g id="edge104" class="edge">
<title>scalaz.Equal[(Long, String)]&#45;&gt;scalaz.Equal[Long]</title>
<path fill="none" stroke="#000000" d="M5979.6972,-18898.9575C6101.5298,-18891.7752 6297.435,-18880.1668 6466.6717,-18869.8701 6637.2999,-18859.4886 6836.1733,-18847.0588 6950.9437,-18839.8532"/>
<polygon fill="#000000" stroke="#000000" points="6951.3415,-18843.3352 6961.1024,-18839.2153 6950.9027,-18836.349 6951.3415,-18843.3352"/>
</g>
<!-- List[Char] =&gt; Traversable[Char] -->
<g id="node245" class="node">
<title>List[Char] =&gt; Traversable[Char]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-1089.8701" rx="138.6859" ry="26.7407"/>
<text text-anchor="start" x="6956.014" y="-1093.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Char] =&gt; Traversable[Char]</text>
<text text-anchor="middle" x="7046.014" y="-1078.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 1ms</text>
</g>
<!-- (K, V) &lt;:&lt; (T, U) -->
<g id="node246" class="node">
<title>(K, V) &lt;:&lt; (T, U)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-35733.8701" rx="81.135" ry="26.7407"/>
<text text-anchor="start" x="603.1596" y="-35737.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(K, V) &lt;:&lt; (T, U)</text>
<text text-anchor="middle" x="652.6596" y="-35722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="node247" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: shapeless.HNil,shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-30063.8701" rx="346.4646" ry="26.7407"/>
<text text-anchor="start" x="6809.014" y="-30067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: shapeless.HNil,shapeless.HNil,Out]</text>
<text text-anchor="middle" x="7046.014" y="-30052.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Id.Id[IsoSpec.this.IntWrapper] =&gt; ?{def shouldEqual: ?} -->
<g id="node248" class="node">
<title>scalaz.Id.Id[IsoSpec.this.IntWrapper] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-26049.8701" rx="259.5164" ry="26.7407"/>
<text text-anchor="start" x="477.1596" y="-26053.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Id.Id[IsoSpec.this.IntWrapper] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-26038.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Id.Id[IsoSpec.this.IntWrapper] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge834" class="edge">
<title>scalaz.Id.Id[IsoSpec.this.IntWrapper] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M797.469,-26072.1763C935.0663,-26086.5824 1144.2916,-26090.4444 1305.3191,-26013.8701 1580.7179,-25882.9082 1782.2308,-25548.2307 1842.9891,-25437.8152"/>
<polygon fill="#000000" stroke="#000000" points="1846.2221,-25439.1974 1847.9413,-25428.7429 1840.0779,-25435.8435 1846.2221,-25439.1974"/>
</g>
<!-- scalaz.Id.Id[IsoSpec.this.IntWrapper] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge223" class="edge">
<title>scalaz.Id.Id[IsoSpec.this.IntWrapper] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M850.905,-26067.2559C1019.8719,-26077.1764 1244.7195,-26077.1178 1305.3191,-26013.8701 1317.773,-26000.872 1300.9331,-25378.9328 1313.3191,-25365.8701 1432.7963,-25239.8654 1659.4906,-25274.7392 1780.7351,-25305.4923"/>
<polygon fill="#000000" stroke="#000000" points="1780.1478,-25308.9555 1790.7058,-25308.0725 1781.9016,-25302.1788 1780.1478,-25308.9555"/>
</g>
<!-- scalaz.Arrow[monocle.Getter] -->
<g id="node249" class="node">
<title>scalaz.Arrow[monocle.Getter]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-35805.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="569.6596" y="-35809.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Arrow[monocle.Getter]</text>
<text text-anchor="middle" x="652.6596" y="-35794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalactic.Equality[IsoSpec.this.IntWrapper] -->
<g id="node250" class="node">
<title>org.scalactic.Equality[IsoSpec.this.IntWrapper]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-17453.8701" rx="195.3231" ry="26.7407"/>
<text text-anchor="start" x="5732.0954" y="-17457.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[IsoSpec.this.IntWrapper]</text>
<text text-anchor="middle" x="5862.0954" y="-17442.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 5ms</text>
</g>
<!-- org.scalactic.Equality[IsoSpec.this.IntWrapper]&#45;&gt;scalaz.Equal[IsoSpec.this.IntWrapper] -->
<g id="edge531" class="edge">
<title>org.scalactic.Equality[IsoSpec.this.IntWrapper]&#45;&gt;scalaz.Equal[IsoSpec.this.IntWrapper]</title>
<path fill="none" stroke="#000000" d="M6048.5547,-17461.8776C6168.1859,-17467.7797 6326.7575,-17477.0236 6466.6717,-17489.8701 6620.5208,-17503.996 6796.5586,-17526.8271 6913.8144,-17542.9882"/>
<polygon fill="#000000" stroke="#000000" points="6913.5301,-17546.4821 6923.9151,-17544.3839 6914.4883,-17539.548 6913.5301,-17546.4821"/>
</g>
<!-- (=&gt; monocle.Iso[monocle.Binary,(String, Int)]) =&gt; monocle.Iso[monocle.Binary,_$1] -->
<g id="node251" class="node">
<title>(=&gt; monocle.Iso[monocle.Binary,(String, Int)]) =&gt; monocle.Iso[monocle.Binary,_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-35877.8701" rx="347.379" ry="26.7407"/>
<text text-anchor="start" x="415.1596" y="-35881.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; monocle.Iso[monocle.Binary,(String, Int)]) =&gt; monocle.Iso[monocle.Binary,_$1]</text>
<text text-anchor="middle" x="652.6596" y="-35866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.Raw] -->
<g id="node252" class="node">
<title>org.scalacheck.Arbitrary[monocle.function.Raw]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-35949.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="518.6596" y="-35953.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.function.Raw]</text>
<text text-anchor="middle" x="652.6596" y="-35938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 29ms</text>
</g>
<!-- scala.reflect.ClassTag[monocle.function.Raw] -->
<g id="node995" class="node">
<title>scala.reflect.ClassTag[monocle.function.Raw]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-35949.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="1735.534" y="-35953.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[monocle.function.Raw]</text>
<text text-anchor="middle" x="1862.034" y="-35938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.Raw]&#45;&gt;scala.reflect.ClassTag[monocle.function.Raw] -->
<g id="edge277" class="edge">
<title>org.scalacheck.Arbitrary[monocle.function.Raw]&#45;&gt;scala.reflect.ClassTag[monocle.function.Raw]</title>
<path fill="none" stroke="#000000" d="M853.7207,-35949.8701C1077.6367,-35949.8701 1437.4467,-35949.8701 1661.2503,-35949.8701"/>
<polygon fill="#000000" stroke="#000000" points="1661.4721,-35953.3702 1671.4721,-35949.8701 1661.4721,-35946.3702 1661.4721,-35953.3702"/>
</g>
<!-- scalaz.Equal[(Int, String)] -->
<g id="node253" class="node">
<title>scalaz.Equal[(Int, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-20887.8701" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="5791.0954" y="-20891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-20876.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 10ms</text>
</g>
<!-- scalaz.Equal[(Int, String)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge516" class="edge">
<title>scalaz.Equal[(Int, String)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M5952.7757,-20903.6287C6076.1985,-20920.5427 6300.6894,-20934.8852 6466.6717,-20851.8701 6765.4798,-20702.4227 6970.5559,-20322.5908 7028.9651,-20203.8865"/>
<polygon fill="#000000" stroke="#000000" points="7032.146,-20205.3487 7033.3867,-20194.8268 7025.8552,-20202.2784 7032.146,-20205.3487"/>
</g>
<!-- scalaz.Equal[(Int, String)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge1348" class="edge">
<title>scalaz.Equal[(Int, String)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5966.5604,-20878.2336C6120.9194,-20866.5248 6399.0086,-20855.9373 6466.6717,-20923.8701 6477.9803,-20935.2237 6468.8133,-21052.9547 6474.6717,-21067.8701 6592.8984,-21368.8731 6896.96,-21635.5142 7006.1932,-21724.4499"/>
<polygon fill="#000000" stroke="#000000" points="7004.0481,-21727.2165 7014.0219,-21730.7906 7008.4538,-21721.7768 7004.0481,-21727.2165"/>
</g>
<!-- org.scalacheck.Arbitrary[(List[Int], Int)] -->
<g id="node254" class="node">
<title>org.scalacheck.Arbitrary[(List[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-10078.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="4476.253" y="-10082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(List[Int], Int)]</text>
<text text-anchor="middle" x="4586.253" y="-10067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- scala.reflect.ClassTag[(List[Int], Int)] -->
<g id="node800" class="node">
<title>scala.reflect.ClassTag[(List[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-10299.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="5759.5954" y="-10303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(List[Int], Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-10288.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(List[Int], Int)]&#45;&gt;scala.reflect.ClassTag[(List[Int], Int)] -->
<g id="edge543" class="edge">
<title>org.scalacheck.Arbitrary[(List[Int], Int)]&#45;&gt;scala.reflect.ClassTag[(List[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M4730.5803,-10065.3455C4903.6595,-10052.6388 5179.2961,-10044.7365 5249.5191,-10114.8701 5272.1959,-10137.5179 5234.9956,-10236.0698 5257.5191,-10258.8701 5318.3795,-10320.4783 5551.0047,-10319.8023 5709.2976,-10311.4725"/>
<polygon fill="#000000" stroke="#000000" points="5709.8181,-10314.9495 5719.614,-10310.9133 5709.4392,-10307.9597 5709.8181,-10314.9495"/>
</g>
<!-- org.scalacheck.Arbitrary[(List[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1165" class="edge">
<title>org.scalacheck.Arbitrary[(List[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4729.286,-10064.9114C4902.8585,-10051.5231 5180.8913,-10042.6766 5249.5191,-10114.8701 5270.8203,-10137.2779 5236.0096,-12318.6621 5257.5191,-12340.8701 5351.0484,-12437.4367 6372.696,-12287.7379 6466.6717,-12383.8701 6478.7506,-12396.2261 6465.8093,-12991.0367 6474.6717,-13005.8701 6578.5435,-13179.7235 6815.4118,-13265.2636 6949.2568,-13301.1139"/>
<polygon fill="#000000" stroke="#000000" points="6948.546,-13304.546 6959.108,-13303.7126 6950.3315,-13297.7776 6948.546,-13304.546"/>
</g>
<!-- org.scalacheck.Arbitrary[(List[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[List[Int]] -->
<g id="edge1176" class="edge">
<title>org.scalacheck.Arbitrary[(List[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4729.2392,-10092.7841C4902.7625,-10106.1256 5180.7438,-10114.9229 5249.5191,-10042.8701 5269.4856,-10021.9521 5237.6076,-9022.8404 5257.5191,-9001.8701 5318.7555,-8937.3771 5563.0438,-8942.3972 5721.7302,-8953.2239"/>
<polygon fill="#000000" stroke="#000000" points="5721.8364,-8956.7398 5732.0559,-8953.9448 5722.324,-8949.7568 5721.8364,-8956.7398"/>
</g>
<!-- shapeless.ops.hlist.Init[Long :: Double :: shapeless.HNil] -->
<g id="node255" class="node">
<title>shapeless.ops.hlist.Init[Long :: Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-33654.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="6889.514" y="-33658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init[Long :: Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="7046.014" y="-33643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 11ms</text>
</g>
<!-- shapeless.ops.hlist.Init[Double :: shapeless.HNil] -->
<g id="node1289" class="node">
<title>shapeless.ops.hlist.Init[Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-33654.8701" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="8062.1985" y="-33658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init[Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="8196.6985" y="-33643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 7ms</text>
</g>
<!-- shapeless.ops.hlist.Init[Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Init[Double :: shapeless.HNil] -->
<g id="edge864" class="edge">
<title>shapeless.ops.hlist.Init[Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Init[Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M7278.8722,-33654.8701C7485.5293,-33654.8701 7784.8741,-33654.8701 7984.9031,-33654.8701"/>
<polygon fill="#000000" stroke="#000000" points="7984.9479,-33658.3702 7994.9478,-33654.8701 7984.9478,-33651.3702 7984.9479,-33658.3702"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(K, V),List[(K, V)]] -->
<g id="node256" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(K, V),List[(K, V)]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-29307.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="2996.8678" y="-29311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(K, V),List[(K, V)]]</text>
<text text-anchor="middle" x="3166.8678" y="-29296.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.Witness.Aux[Int(63)] -->
<g id="node257" class="node">
<title>shapeless.Witness.Aux[Int(63)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-1665.8701" rx="133.7865" ry="26.7407"/>
<text text-anchor="start" x="6959.514" y="-1669.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Witness.Aux[Int(63)]</text>
<text text-anchor="middle" x="7046.014" y="-1654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.function.FilterIndex[List[A],Int,A] -->
<g id="node258" class="node">
<title>monocle.function.FilterIndex[List[A],Int,A]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-36021.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="532.1596" y="-36025.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[List[A],Int,A]</text>
<text text-anchor="middle" x="652.6596" y="-36010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._4.N,Float] -->
<g id="node260" class="node">
<title>shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._4.N,Float]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-36093.8701" rx="379.0185" ry="26.7407"/>
<text text-anchor="start" x="1602.034" y="-36097.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._4.N,Float]</text>
<text text-anchor="middle" x="1862.034" y="-36082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]] -->
<g id="node261" class="node">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-621.8701" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="5683.0954" y="-625.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-610.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 54ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;scala.collection.immutable.Stream[Int] =&gt; Traversable[Int] -->
<g id="edge1146" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;scala.collection.immutable.Stream[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M6115.7124,-614.1582C6318.809,-607.9825 6601.9008,-599.3744 6802.3287,-593.2799"/>
<polygon fill="#000000" stroke="#000000" points="6802.519,-596.7758 6812.408,-592.9734 6802.3062,-589.7791 6802.519,-596.7758"/>
</g>
<!-- scala.reflect.ClassTag[scala.collection.immutable.Stream[Int]] -->
<g id="node501" class="node">
<title>scala.reflect.ClassTag[scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-657.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="6874.514" y="-661.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="7046.014" y="-646.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Stream[Int]] -->
<g id="edge1090" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M6115.7124,-629.5819C6315.3016,-635.6509 6592.1469,-644.0691 6791.8715,-650.1422"/>
<polygon fill="#000000" stroke="#000000" points="6791.8182,-653.6421 6801.92,-650.4478 6792.0311,-646.6454 6791.8182,-653.6421"/>
</g>
<!-- org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]] -->
<g id="node1174" class="node">
<title>org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-513.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="6846.014" y="-517.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="7046.014" y="-502.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 13ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]] -->
<g id="edge873" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M6023.0682,-600.5398C6146.4709,-584.7731 6321.097,-563.7235 6474.6717,-549.8701 6573.9792,-540.9119 6683.1976,-533.4461 6779.3073,-527.6788"/>
<polygon fill="#000000" stroke="#000000" points="6779.6871,-531.1625 6789.4608,-527.0729 6779.2701,-524.1749 6779.6871,-531.1625"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge749" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6113.9161,-613.6465C6240.4391,-624.1363 6384.0475,-661.325 6466.6717,-765.8701 6479.8479,-782.5419 6463.8842,-12987.5618 6474.6717,-13005.8701 6577.4102,-13180.235 6814.4443,-13265.5288 6948.6896,-13301.214"/>
<polygon fill="#000000" stroke="#000000" points="6948.0109,-13304.6542 6958.5712,-13303.8005 6949.7834,-13297.8823 6948.0109,-13304.6542"/>
</g>
<!-- scala.reflect.ClassTag[(K, V)] -->
<g id="node262" class="node">
<title>scala.reflect.ClassTag[(K, V)]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-29091.8701" rx="127.9727" ry="26.7407"/>
<text text-anchor="start" x="3084.3678" y="-29095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(K, V)]</text>
<text text-anchor="middle" x="3166.8678" y="-29080.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Double :: Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="node757" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Double :: Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="9347.3831" cy="-29559.8701" rx="488.7216" ry="26.7407"/>
<text text-anchor="start" x="9009.8831" y="-29563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Double :: Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,shapeless.HNil,Out]</text>
<text text-anchor="middle" x="9347.3831" y="-29548.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Double :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="edge809" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Double :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M8685.5266,-29559.8701C8739.406,-29559.8701 8794.3212,-29559.8701 8848.3238,-29559.8701"/>
<polygon fill="#000000" stroke="#000000" points="8848.3962,-29563.3702 8858.3962,-29559.8701 8848.3962,-29556.3702 8848.3962,-29563.3702"/>
</g>
<!-- (Char, Boolean, String, Int, Double) &lt;~&lt; (Char, Boolean, String, Int, Double) -->
<g id="node264" class="node">
<title>(Char, Boolean, String, Int, Double) &lt;~&lt; (Char, Boolean, String, Int, Double)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-36165.8701" rx="313.9108" ry="26.7407"/>
<text text-anchor="start" x="438.6596" y="-36169.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Char, Boolean, String, Int, Double) &lt;~&lt; (Char, Boolean, String, Int, Double)</text>
<text text-anchor="middle" x="652.6596" y="-36154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scalaz.Equal[monocle.refined.StartsWithString[String(&#39;hello&#39;)]] -->
<g id="node265" class="node">
<title>scalaz.Equal[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-36237.8701" rx="255.0313" ry="26.7407"/>
<text text-anchor="start" x="480.1596" y="-36241.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]</text>
<text text-anchor="middle" x="652.6596" y="-36226.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P) -->
<g id="node266" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-36309.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="470.6596" y="-36313.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-36298.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Cons1[(Int, Char, Boolean, String, Long, Float),Int,(Char, Boolean, String, Long, Float)] -->
<g id="node268" class="node">
<title>monocle.function.Cons1[(Int, Char, Boolean, String, Long, Float),Int,(Char, Boolean, String, Long, Float)]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-36381.8701" rx="427.185" ry="26.7407"/>
<text text-anchor="start" x="358.6596" y="-36385.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons1[(Int, Char, Boolean, String, Long, Float),Int,(Char, Boolean, String, Long, Float)]</text>
<text text-anchor="middle" x="652.6596" y="-36370.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.IsHCons.Aux[(Int, Char, Boolean, String, Long, Float),Int,(Char, Boolean, String, Long, Float)] -->
<g id="node1442" class="node">
<title>shapeless.ops.hlist.IsHCons.Aux[(Int, Char, Boolean, String, Long, Float),Int,(Char, Boolean, String, Long, Float)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-36381.8701" rx="458.4105" ry="26.7407"/>
<text text-anchor="start" x="1546.034" y="-36385.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.IsHCons.Aux[(Int, Char, Boolean, String, Long, Float),Int,(Char, Boolean, String, Long, Float)]</text>
<text text-anchor="middle" x="1862.034" y="-36370.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Cons1[(Int, Char, Boolean, String, Long, Float),Int,(Char, Boolean, String, Long, Float)]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[(Int, Char, Boolean, String, Long, Float),Int,(Char, Boolean, String, Long, Float)] -->
<g id="edge991" class="edge">
<title>monocle.function.Cons1[(Int, Char, Boolean, String, Long, Float),Int,(Char, Boolean, String, Long, Float)]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[(Int, Char, Boolean, String, Long, Float),Int,(Char, Boolean, String, Long, Float)]</title>
<path fill="none" stroke="#000000" d="M1079.8905,-36381.8701C1181.3662,-36381.8701 1290.1575,-36381.8701 1393.3721,-36381.8701"/>
<polygon fill="#000000" stroke="#000000" points="1393.6642,-36385.3702 1403.6642,-36381.8701 1393.6641,-36378.3702 1393.6642,-36385.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(31)]] -->
<g id="node269" class="node">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(31)]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-1305.8701" rx="240.3326" ry="26.7407"/>
<text text-anchor="start" x="5700.0954" y="-1309.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(31)]]</text>
<text text-anchor="middle" x="5862.0954" y="-1294.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- shapeless.Witness.Aux[Int(0)] -->
<g id="node494" class="node">
<title>shapeless.Witness.Aux[Int(0)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-1521.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="6963.014" y="-1525.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Witness.Aux[Int(0)]</text>
<text text-anchor="middle" x="7046.014" y="-1510.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 11ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(31)]]&#45;&gt;shapeless.Witness.Aux[Int(0)] -->
<g id="edge47" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(31)]]&#45;&gt;shapeless.Witness.Aux[Int(0)]</title>
<path fill="none" stroke="#000000" d="M5944.9305,-1280.6298C6075.83,-1246.4502 6329.6759,-1204.3283 6466.6717,-1341.8701 6489.2889,-1364.5774 6452.0937,-1463.1237 6474.6717,-1485.8701 6534.2606,-1545.9033 6767.193,-1542.0197 6916.6137,-1532.6757"/>
<polygon fill="#000000" stroke="#000000" points="6917.0226,-1536.1567 6926.778,-1532.0236 6916.5744,-1529.1711 6917.0226,-1536.1567"/>
</g>
<!-- org.scalacheck.Gen.Choose[Int] -->
<g id="node813" class="node">
<title>org.scalacheck.Gen.Choose[Int]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-1449.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="6958.514" y="-1453.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Gen.Choose[Int]</text>
<text text-anchor="middle" x="7046.014" y="-1438.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(31)]]&#45;&gt;org.scalacheck.Gen.Choose[Int] -->
<g id="edge1245" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(31)]]&#45;&gt;org.scalacheck.Gen.Choose[Int]</title>
<path fill="none" stroke="#000000" d="M5947.2432,-1280.7188C6077.8347,-1247.9405 6327.0786,-1209.2447 6466.6717,-1341.8701 6490.0135,-1364.0467 6451.3682,-1391.6532 6474.6717,-1413.8701 6534.9705,-1471.3573 6761.3194,-1468.9896 6910.3745,-1460.508"/>
<polygon fill="#000000" stroke="#000000" points="6910.7452,-1463.9924 6920.5237,-1459.9143 6910.3363,-1457.0043 6910.7452,-1463.9924"/>
</g>
<!-- Numeric[Int] -->
<g id="node891" class="node">
<title>Numeric[Int]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-1377.8701" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="7006.014" y="-1381.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Numeric[Int]</text>
<text text-anchor="middle" x="7046.014" y="-1366.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(31)]]&#45;&gt;Numeric[Int] -->
<g id="edge1191" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(31)]]&#45;&gt;Numeric[Int]</title>
<path fill="none" stroke="#000000" d="M6075.0972,-1318.4187C6190.9121,-1325.2757 6336.6612,-1333.9599 6466.6717,-1341.8701 6646.3949,-1352.8049 6857.4545,-1366.0123 6968.5625,-1372.9935"/>
<polygon fill="#000000" stroke="#000000" points="6968.4723,-1376.4946 6978.6722,-1373.6288 6968.9114,-1369.5084 6968.4723,-1376.4946"/>
</g>
<!-- shapeless.Witness.Aux[Int(31)] -->
<g id="node1168" class="node">
<title>shapeless.Witness.Aux[Int(31)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-1161.8701" rx="133.7865" ry="26.7407"/>
<text text-anchor="start" x="6959.514" y="-1165.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Witness.Aux[Int(31)]</text>
<text text-anchor="middle" x="7046.014" y="-1150.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(31)]]&#45;&gt;shapeless.Witness.Aux[Int(31)] -->
<g id="edge887" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(31)]]&#45;&gt;shapeless.Witness.Aux[Int(31)]</title>
<path fill="none" stroke="#000000" d="M5974.7192,-1282.1209C6097.1805,-1257.2114 6298.9483,-1218.8303 6474.6717,-1197.8701 6620.3101,-1180.4984 6787.8998,-1171.1918 6903.736,-1166.4247"/>
<polygon fill="#000000" stroke="#000000" points="6903.8808,-1169.9218 6913.7307,-1166.0193 6903.5971,-1162.9275 6903.8808,-1169.9218"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(31)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge1332" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(31)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M5943.4733,-1280.5416C6074.6749,-1245.3528 6331.8405,-1200.7478 6466.6717,-1341.8701 6488.7797,-1365.0095 6453.3379,-1894.015 6474.6717,-1917.8701 6584.8492,-2041.0683 6790.9906,-2035.1759 6923.2073,-2015.5429"/>
<polygon fill="#000000" stroke="#000000" points="6924.0331,-2018.9573 6933.3873,-2013.9825 6922.9725,-2012.0381 6924.0331,-2018.9573"/>
</g>
<!-- scalaz.Functor[F$macro$107] -->
<g id="node270" class="node">
<title>scalaz.Functor[F$macro$107]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-36453.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="570.6596" y="-36457.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$107]</text>
<text text-anchor="middle" x="652.6596" y="-36442.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Char,(Char, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="node271" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Char,(Char, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-31215.8701" rx="729.0542" ry="26.7407"/>
<text text-anchor="start" x="2659.3678" y="-31219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Char,(Char, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]</text>
<text text-anchor="middle" x="3166.8678" y="-31204.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Char,(Char, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0,Char,(Char, Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="edge1289" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Char,(Char, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0,Char,(Char, Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M3896.0505,-31215.8701C3912.8773,-31215.8701 3929.6896,-31215.8701 3946.4493,-31215.8701"/>
<polygon fill="#000000" stroke="#000000" points="3946.8775,-31219.3702 3956.8775,-31215.8701 3946.8774,-31212.3702 3946.8775,-31219.3702"/>
</g>
<!-- Option[Nothing] =&gt; ?{def shouldEqual: ?} -->
<g id="node272" class="node">
<title>Option[Nothing] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-25977.8701" rx="178.7961" ry="26.7407"/>
<text text-anchor="start" x="534.1596" y="-25981.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Nothing] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-25966.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- Option[Nothing] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge262" class="edge">
<title>Option[Nothing] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M782.018,-25996.5016C918.2778,-26010.3775 1136.1297,-26015.9348 1305.3191,-25941.8701 1564.2462,-25828.5215 1772.8595,-25537.9826 1839.578,-25437.0496"/>
<polygon fill="#000000" stroke="#000000" points="1842.6682,-25438.7198 1845.2286,-25428.439 1836.8159,-25434.8792 1842.6682,-25438.7198"/>
</g>
<!-- Option[Nothing] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge306" class="edge">
<title>Option[Nothing] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M804.1763,-25992.1677C975.3694,-26004.576 1238.876,-26011.1096 1305.3191,-25941.8701 1327.4776,-25918.779 1291.2811,-25389.0762 1313.3191,-25365.8701 1432.8935,-25239.9576 1659.5468,-25274.7926 1780.7595,-25305.5155"/>
<polygon fill="#000000" stroke="#000000" points="1780.1697,-25308.978 1790.7276,-25308.0932 1781.9223,-25302.201 1780.1697,-25308.978"/>
</g>
<!-- scalaz.Equal[List[TraversalSpec.this.Location]] -->
<g id="node273" class="node">
<title>scalaz.Equal[List[TraversalSpec.this.Location]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-18285.8701" rx="195.3231" ry="26.7407"/>
<text text-anchor="start" x="4456.253" y="-18289.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[List[TraversalSpec.this.Location]]</text>
<text text-anchor="middle" x="4586.253" y="-18274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scalaz.Order[TraversalSpec.this.Location] -->
<g id="node321" class="node">
<title>scalaz.Order[TraversalSpec.this.Location]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-18249.8701" rx="173.8966" ry="26.7407"/>
<text text-anchor="start" x="5747.0954" y="-18253.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[TraversalSpec.this.Location]</text>
<text text-anchor="middle" x="5862.0954" y="-18238.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scalaz.Equal[List[TraversalSpec.this.Location]]&#45;&gt;scalaz.Order[TraversalSpec.this.Location] -->
<g id="edge616" class="edge">
<title>scalaz.Equal[List[TraversalSpec.this.Location]]&#45;&gt;scalaz.Order[TraversalSpec.this.Location]</title>
<path fill="none" stroke="#000000" d="M4777.6045,-18280.4708C5021.8316,-18273.5795 5441.2843,-18261.7439 5680.6564,-18254.9897"/>
<polygon fill="#000000" stroke="#000000" points="5680.9614,-18258.4825 5690.8586,-18254.7018 5680.7638,-18251.4853 5680.9614,-18258.4825"/>
</g>
<!-- scalaz.Equal[TraversalSpec.this.Location] -->
<g id="node734" class="node">
<title>scalaz.Equal[TraversalSpec.this.Location]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-18321.8701" rx="173.8966" ry="26.7407"/>
<text text-anchor="start" x="5747.0954" y="-18325.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[TraversalSpec.this.Location]</text>
<text text-anchor="middle" x="5862.0954" y="-18310.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 2ms</text>
</g>
<!-- scalaz.Equal[List[TraversalSpec.this.Location]]&#45;&gt;scalaz.Equal[TraversalSpec.this.Location] -->
<g id="edge959" class="edge">
<title>scalaz.Equal[List[TraversalSpec.this.Location]]&#45;&gt;scalaz.Equal[TraversalSpec.this.Location]</title>
<path fill="none" stroke="#000000" d="M4777.6045,-18291.2694C5021.8316,-18298.1606 5441.2843,-18309.9962 5680.6564,-18316.7505"/>
<polygon fill="#000000" stroke="#000000" points="5680.7638,-18320.2548 5690.8586,-18317.0383 5680.9614,-18313.2576 5680.7638,-18320.2548"/>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; String -->
<g id="node274" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-36525.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="541.1596" y="-36529.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; String</text>
<text text-anchor="middle" x="652.6596" y="-36514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.EmptyCase] -->
<g id="node275" class="node">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.EmptyCase]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-36597.8701" rx="286.2565" ry="26.7407"/>
<text text-anchor="start" x="458.1596" y="-36601.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.EmptyCase]</text>
<text text-anchor="middle" x="652.6596" y="-36586.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 8ms</text>
</g>
<!-- scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.EmptyCase] -->
<g id="node461" class="node">
<title>scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.EmptyCase]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-36597.8701" rx="275.5435" ry="26.7407"/>
<text text-anchor="start" x="1675.034" y="-36601.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.EmptyCase]</text>
<text text-anchor="middle" x="1862.034" y="-36586.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.EmptyCase]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.EmptyCase] -->
<g id="edge218" class="edge">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.EmptyCase]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.EmptyCase]</title>
<path fill="none" stroke="#000000" d="M939.2644,-36597.8701C1131.4903,-36597.8701 1383.6684,-36597.8701 1575.8142,-36597.8701"/>
<polygon fill="#000000" stroke="#000000" points="1576.0698,-36601.3702 1586.0698,-36597.8701 1576.0698,-36594.3702 1576.0698,-36601.3702"/>
</g>
<!-- shapeless.Generic.Aux[(Int,),L1] -->
<g id="node276" class="node">
<title>shapeless.Generic.Aux[(Int,),L1]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-36867.8701" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="3076.3678" y="-36871.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int,),L1]</text>
<text text-anchor="middle" x="3166.8678" y="-36856.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- monocle.function.Each[scalaz.Validation[Unit,Int],Int] -->
<g id="node277" class="node">
<title>monocle.function.Each[scalaz.Validation[Unit,Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-34725.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="502.1596" y="-34729.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[scalaz.Validation[Unit,Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-34714.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- monocle.function.Each[scalaz.Validation[Unit,Int],Int]&#45;&gt;shapeless.Generic.Aux[scalaz.Validation[Unit,Int],SGen] -->
<g id="edge518" class="edge">
<title>monocle.function.Each[scalaz.Validation[Unit,Int],Int]&#45;&gt;shapeless.Generic.Aux[scalaz.Validation[Unit,Int],SGen]</title>
<path fill="none" stroke="#000000" d="M876.9459,-34725.8701C1087.7036,-34725.8701 1402.2732,-34725.8701 1618.9454,-34725.8701"/>
<polygon fill="#000000" stroke="#000000" points="1619.1884,-34729.3702 1629.1883,-34725.8701 1619.1883,-34722.3702 1619.1884,-34729.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]] =&gt; Option[scalaz.Cofree[Option,Int]]] -->
<g id="node278" class="node">
<title>org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]] =&gt; Option[scalaz.Cofree[Option,Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-11124.8701" rx="391.9745" ry="26.7407"/>
<text text-anchor="start" x="2897.8678" y="-11128.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]] =&gt; Option[scalaz.Cofree[Option,Int]]]</text>
<text text-anchor="middle" x="3166.8678" y="-11113.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- scala.reflect.ClassTag[Option[scalaz.Cofree[Option,Int]] =&gt; Option[scalaz.Cofree[Option,Int]]] -->
<g id="node310" class="node">
<title>scala.reflect.ClassTag[Option[scalaz.Cofree[Option,Int]] =&gt; Option[scalaz.Cofree[Option,Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-11124.8701" rx="381.2612" ry="26.7407"/>
<text text-anchor="start" x="4324.753" y="-11128.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Option[scalaz.Cofree[Option,Int]] =&gt; Option[scalaz.Cofree[Option,Int]]]</text>
<text text-anchor="middle" x="4586.253" y="-11113.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]] =&gt; Option[scalaz.Cofree[Option,Int]]]&#45;&gt;scala.reflect.ClassTag[Option[scalaz.Cofree[Option,Int]] =&gt; Option[scalaz.Cofree[Option,Int]]] -->
<g id="edge422" class="edge">
<title>org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]] =&gt; Option[scalaz.Cofree[Option,Int]]]&#45;&gt;scala.reflect.ClassTag[Option[scalaz.Cofree[Option,Int]] =&gt; Option[scalaz.Cofree[Option,Int]]]</title>
<path fill="none" stroke="#000000" d="M3558.9487,-11124.8701C3757.0477,-11124.8701 3996.7432,-11124.8701 4194.7598,-11124.8701"/>
<polygon fill="#000000" stroke="#000000" points="4195.0503,-11128.3702 4205.0502,-11124.8701 4195.0502,-11121.3702 4195.0503,-11128.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]]] -->
<g id="node864" class="node">
<title>org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-13185.8701" rx="243.9037" ry="26.7407"/>
<text text-anchor="start" x="4421.753" y="-13189.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]]]</text>
<text text-anchor="middle" x="4586.253" y="-13174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 14ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]] =&gt; Option[scalaz.Cofree[Option,Int]]]&#45;&gt;org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]]] -->
<g id="edge1341" class="edge">
<title>org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]] =&gt; Option[scalaz.Cofree[Option,Int]]]&#45;&gt;org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]]]</title>
<path fill="none" stroke="#000000" d="M3456.8503,-11143.0038C3619.7892,-11169.7971 3810.8125,-11232.5422 3914.9868,-11376.8701 3929.399,-11396.8373 3906.0122,-13132.03 3922.9868,-13149.8701 4070.92,-13305.3463 4354.2798,-13253.8002 4497.9936,-13214.0591"/>
<polygon fill="#000000" stroke="#000000" points="4498.9936,-13217.4137 4507.6754,-13211.341 4497.1016,-13210.6743 4498.9936,-13217.4137"/>
</g>
<!-- org.scalacheck.Cogen[Option[scalaz.Cofree[Option,Int]]] -->
<g id="node1087" class="node">
<title>org.scalacheck.Cogen[Option[scalaz.Cofree[Option,Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-10620.8701" rx="233.1906" ry="26.7407"/>
<text text-anchor="start" x="4429.253" y="-10624.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Option[scalaz.Cofree[Option,Int]]]</text>
<text text-anchor="middle" x="4586.253" y="-10609.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 9ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]] =&gt; Option[scalaz.Cofree[Option,Int]]]&#45;&gt;org.scalacheck.Cogen[Option[scalaz.Cofree[Option,Int]]] -->
<g id="edge1035" class="edge">
<title>org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]] =&gt; Option[scalaz.Cofree[Option,Int]]]&#45;&gt;org.scalacheck.Cogen[Option[scalaz.Cofree[Option,Int]]]</title>
<path fill="none" stroke="#000000" d="M3294.4341,-11150.3129C3464.4159,-11175.921 3761.5325,-11190.1404 3914.9868,-11016.8701 3928.2501,-11001.894 3909.0693,-10671.2402 3922.9868,-10656.8701 3985.8174,-10591.9956 4220.0529,-10593.0298 4392.4298,-10603.6074"/>
<polygon fill="#000000" stroke="#000000" points="4392.4558,-10607.1159 4402.6558,-10604.2505 4392.8952,-10600.1297 4392.4558,-10607.1159"/>
</g>
<!-- List[Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node279" class="node">
<title>List[Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-25905.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="557.1596" y="-25909.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-25894.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 44ms</text>
</g>
<!-- List[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge368" class="edge">
<title>List[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M772.6939,-25921.3403C907.411,-25933.7681 1130.0426,-25939.2831 1305.3191,-25869.8701 1548.0865,-25773.7293 1761.9138,-25527.5302 1835.1445,-25436.4381"/>
<polygon fill="#000000" stroke="#000000" points="1838.0827,-25438.3677 1841.5885,-25428.3696 1832.613,-25433.9992 1838.0827,-25438.3677"/>
</g>
<!-- List[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge727" class="edge">
<title>List[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M781.9504,-25918.4685C951.5665,-25931.8048 1235.8578,-25942.1113 1305.3191,-25869.8701 1324.7284,-25849.684 1294.0152,-25386.1569 1313.3191,-25365.8701 1432.8583,-25240.2444 1659.0134,-25274.7685 1780.3044,-25305.4222"/>
<polygon fill="#000000" stroke="#000000" points="1779.7232,-25308.8868 1790.2804,-25307.9947 1781.4711,-25302.1085 1779.7232,-25308.8868"/>
</g>
<!-- org.scalacheck.Arbitrary[((String, Int)) =&gt; (String, Int)] -->
<g id="node280" class="node">
<title>org.scalacheck.Arbitrary[((String, Int)) =&gt; (String, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-12825.8701" rx="227.8769" ry="26.7407"/>
<text text-anchor="start" x="4433.253" y="-12829.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((String, Int)) =&gt; (String, Int)]</text>
<text text-anchor="middle" x="4586.253" y="-12814.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((String, Int)) =&gt; (String, Int)]&#45;&gt;org.scalacheck.Cogen[(String, Int)] -->
<g id="edge64" class="edge">
<title>org.scalacheck.Arbitrary[((String, Int)) =&gt; (String, Int)]&#45;&gt;org.scalacheck.Cogen[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M4808.9436,-12831.5634C4978.4616,-12830.5386 5192.1344,-12815.8672 5249.5191,-12751.8701 5265.9031,-12733.5982 5240.6689,-9235.7129 5257.5191,-9217.8701 5318.3156,-9153.4919 5560.8084,-9158.242 5719.5988,-9169.0254"/>
<polygon fill="#000000" stroke="#000000" points="5719.7156,-9172.5419 5729.9342,-9169.7438 5720.201,-9165.5587 5719.7156,-9172.5419"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Int)] -->
<g id="node667" class="node">
<title>org.scalacheck.Arbitrary[(String, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-15031.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="5758.0954" y="-15035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(String, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-15020.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 17ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((String, Int)) =&gt; (String, Int)]&#45;&gt;org.scalacheck.Arbitrary[(String, Int)] -->
<g id="edge27" class="edge">
<title>org.scalacheck.Arbitrary[((String, Int)) =&gt; (String, Int)]&#45;&gt;org.scalacheck.Arbitrary[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M4664.2905,-12800.5452C4804.3943,-12760.54 5098.0489,-12702.5548 5249.5191,-12861.8701 5269.9416,-12883.3503 5237.1531,-14974.3363 5257.5191,-14995.8701 5317.3912,-15059.1752 5553.1394,-15055.6009 5711.9425,-15045.2101"/>
<polygon fill="#000000" stroke="#000000" points="5712.5452,-15048.6776 5722.2886,-15044.5165 5712.0768,-15041.6933 5712.5452,-15048.6776"/>
</g>
<!-- scala.reflect.ClassTag[((String, Int)) =&gt; (String, Int)] -->
<g id="node1257" class="node">
<title>scala.reflect.ClassTag[((String, Int)) =&gt; (String, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-12825.8701" rx="217.1636" ry="26.7407"/>
<text text-anchor="start" x="5716.5954" y="-12829.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((String, Int)) =&gt; (String, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-12814.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((String, Int)) =&gt; (String, Int)]&#45;&gt;scala.reflect.ClassTag[((String, Int)) =&gt; (String, Int)] -->
<g id="edge1232" class="edge">
<title>org.scalacheck.Arbitrary[((String, Int)) =&gt; (String, Int)]&#45;&gt;scala.reflect.ClassTag[((String, Int)) =&gt; (String, Int)]</title>
<path fill="none" stroke="#000000" d="M4813.9802,-12825.8701C5045.7528,-12825.8701 5402.9678,-12825.8701 5634.6417,-12825.8701"/>
<polygon fill="#000000" stroke="#000000" points="5634.89,-12829.3702 5644.89,-12825.8701 5634.8899,-12822.3702 5634.89,-12829.3702"/>
</g>
<!-- monocle.function.Empty[monocle.function.CList] -->
<g id="node281" class="node">
<title>monocle.function.Empty[monocle.function.CList]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-36795.8701" rx="206.4504" ry="26.7407"/>
<text text-anchor="start" x="514.6596" y="-36799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[monocle.function.CList]</text>
<text text-anchor="middle" x="652.6596" y="-36784.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.HNil,HListSpec.this.H] -->
<g id="node282" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.HNil,HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="10498.0677" cy="-23601.8701" rx="540.4593" ry="26.7407"/>
<text text-anchor="start" x="10124.0677" y="-23605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.HNil,HListSpec.this.H]</text>
<text text-anchor="middle" x="10498.0677" y="-23590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[scalaz.Validation[Unit,Int]] -->
<g id="node283" class="node">
<title>scalaz.Equal[scalaz.Validation[Unit,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-17309.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="5750.5954" y="-17313.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Validation[Unit,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-17298.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- scalaz.Equal[scalaz.Validation[Unit,Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge634" class="edge">
<title>scalaz.Equal[scalaz.Validation[Unit,Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M6009.7184,-17296.6802C6168.5531,-17286.1459 6406.5294,-17282.1772 6466.6717,-17345.8701 6475.5445,-17355.2666 6470.2695,-21055.7193 6474.6717,-21067.8701 6584.6992,-21371.5632 6893.2281,-21636.0297 7004.96,-21724.457"/>
<polygon fill="#000000" stroke="#000000" points="7002.9495,-21727.3287 7012.9724,-21730.7628 7007.2787,-21721.8279 7002.9495,-21727.3287"/>
</g>
<!-- scalaz.Equal[Unit] -->
<g id="node879" class="node">
<title>scalaz.Equal[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-17165.8701" rx="83.3772" ry="26.7407"/>
<text text-anchor="start" x="6995.014" y="-17169.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Unit]</text>
<text text-anchor="middle" x="7046.014" y="-17154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">28 times = 24ms</text>
</g>
<!-- scalaz.Equal[scalaz.Validation[Unit,Int]]&#45;&gt;scalaz.Equal[Unit] -->
<g id="edge673" class="edge">
<title>scalaz.Equal[scalaz.Validation[Unit,Int]]&#45;&gt;scalaz.Equal[Unit]</title>
<path fill="none" stroke="#000000" d="M6012.7663,-17322.0859C6170.4555,-17331.2997 6403.7357,-17333.6646 6466.6717,-17273.8701 6490.0135,-17251.6934 6451.3682,-17224.087 6474.6717,-17201.8701 6609.885,-17072.9614 6854.5565,-17113.9449 6975.0538,-17144.8329"/>
<polygon fill="#000000" stroke="#000000" points="6974.3566,-17148.2681 6984.9166,-17147.41 6976.1263,-17141.4955 6974.3566,-17148.2681"/>
</g>
<!-- scalaz.Order[Unit] -->
<g id="node1243" class="node">
<title>scalaz.Order[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-17237.8701" rx="83.3772" ry="26.7407"/>
<text text-anchor="start" x="6995.014" y="-17241.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[Unit]</text>
<text text-anchor="middle" x="7046.014" y="-17226.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 1ms</text>
</g>
<!-- scalaz.Equal[scalaz.Validation[Unit,Int]]&#45;&gt;scalaz.Order[Unit] -->
<g id="edge890" class="edge">
<title>scalaz.Equal[scalaz.Validation[Unit,Int]]&#45;&gt;scalaz.Order[Unit]</title>
<path fill="none" stroke="#000000" d="M6020.8993,-17300.5263C6142.8399,-17293.3243 6315.4082,-17283.0733 6466.6717,-17273.8701 6638.7645,-17263.3995 6839.5895,-17250.8452 6953.8805,-17243.6688"/>
<polygon fill="#000000" stroke="#000000" points="6954.2282,-17247.154 6963.9891,-17243.034 6953.7894,-17240.1678 6954.2282,-17247.154"/>
</g>
<!-- scala.reflect.ClassTag[monocle.refined.StartsWithString[String(&#39;hello&#39;)] =&gt; monocle.refined.StartsWithString[String(&#39;hello&#39;)]] -->
<g id="node284" class="node">
<title>scala.reflect.ClassTag[monocle.refined.StartsWithString[String(&#39;hello&#39;)] =&gt; monocle.refined.StartsWithString[String(&#39;hello&#39;)]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-3033.8701" rx="497.1922" ry="26.7407"/>
<text text-anchor="start" x="5518.5954" y="-3037.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[monocle.refined.StartsWithString[String(&#39;hello&#39;)] =&gt; monocle.refined.StartsWithString[String(&#39;hello&#39;)]]</text>
<text text-anchor="middle" x="5862.0954" y="-3022.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Seq[?T] -->
<g id="node285" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Seq[?T]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-36867.8701" rx="176.5537" ry="26.7407"/>
<text text-anchor="start" x="535.6596" y="-36871.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Seq[?T]</text>
<text text-anchor="middle" x="652.6596" y="-36856.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 46ms</text>
</g>
<!-- scala.reflect.ClassTag[((monocle.function.CList, Char)) =&gt; (monocle.function.CList, Char)] -->
<g id="node286" class="node">
<title>scala.reflect.ClassTag[((monocle.function.CList, Char)) =&gt; (monocle.function.CList, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-2529.8701" rx="369.6338" ry="26.7407"/>
<text text-anchor="start" x="5608.5954" y="-2533.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((monocle.function.CList, Char)) =&gt; (monocle.function.CList, Char)]</text>
<text text-anchor="middle" x="5862.0954" y="-2518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P) -->
<g id="node287" class="node">
<title>((Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-36939.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="485.6596" y="-36943.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-36928.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any, Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P) -->
<g id="node288" class="node">
<title>((Any, Any, Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-37011.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="505.1596" y="-37015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-37000.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Boolean =&gt; org.scalacheck.Prop -->
<g id="node289" class="node">
<title>Boolean =&gt; org.scalacheck.Prop</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-37083.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="563.1596" y="-37087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean =&gt; org.scalacheck.Prop</text>
<text text-anchor="middle" x="652.6596" y="-37072.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 9ms</text>
</g>
<!-- scalaz.Category[monocle.Optional] -->
<g id="node290" class="node">
<title>scalaz.Category[monocle.Optional]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-37155.8701" rx="148.4848" ry="26.7407"/>
<text text-anchor="start" x="555.6596" y="-37159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Category[monocle.Optional]</text>
<text text-anchor="middle" x="652.6596" y="-37144.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[(scalaz.IList[Char], Char)] -->
<g id="node291" class="node">
<title>org.scalacheck.Cogen[(scalaz.IList[Char], Char)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-3315.8701" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="4451.753" y="-3319.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(scalaz.IList[Char], Char)]</text>
<text text-anchor="middle" x="4586.253" y="-3304.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Cogen[(scalaz.IList[Char], Char)]&#45;&gt;org.scalacheck.Cogen[Char] -->
<g id="edge124" class="edge">
<title>org.scalacheck.Cogen[(scalaz.IList[Char], Char)]&#45;&gt;org.scalacheck.Cogen[Char]</title>
<path fill="none" stroke="#000000" d="M4756.4,-3330.291C4929.0468,-3340.9106 5180.4338,-3344.0168 5249.5191,-3279.8701 5269.8796,-3260.965 5236.6536,-3236.2162 5257.5191,-3217.8701 5358.4148,-3129.1567 6332.3861,-3213.7019 6466.6717,-3217.8701 6623.8805,-3222.7498 6804.7392,-3235.0606 6921.9759,-3243.9277"/>
<polygon fill="#000000" stroke="#000000" points="6921.8261,-3247.4263 6932.0625,-3244.694 6922.3564,-3240.4465 6921.8261,-3247.4263"/>
</g>
<!-- org.scalacheck.Cogen[(scalaz.IList[Char], Char)]&#45;&gt;org.scalacheck.Cogen[scalaz.IList[Char]] -->
<g id="edge364" class="edge">
<title>org.scalacheck.Cogen[(scalaz.IList[Char], Char)]&#45;&gt;org.scalacheck.Cogen[scalaz.IList[Char]]</title>
<path fill="none" stroke="#000000" d="M4775.8818,-3306.655C5022.4121,-3294.6748 5449.563,-3273.9172 5688.1413,-3262.3234"/>
<polygon fill="#000000" stroke="#000000" points="5688.4857,-3265.8109 5698.304,-3261.8296 5688.1459,-3258.8192 5688.4857,-3265.8109"/>
</g>
<!-- monocle.function.At[Int ==&gt;&gt; String,Int,Option[String]] -->
<g id="node292" class="node">
<title>monocle.function.At[Int ==&gt;&gt; String,Int,Option[String]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-21103.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="5705.5954" y="-21107.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[Int ==&gt;&gt; String,Int,Option[String]]</text>
<text text-anchor="middle" x="5862.0954" y="-21092.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.At[Int ==&gt;&gt; String,Int,Option[String]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge581" class="edge">
<title>monocle.function.At[Int ==&gt;&gt; String,Int,Option[String]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M6069.5112,-21091.6521C6186.2016,-21084.745 6334.5621,-21075.9079 6466.6717,-21067.8701 6641.4497,-21057.2361 6845.8634,-21044.4529 6959.1666,-21037.3369"/>
<polygon fill="#000000" stroke="#000000" points="6959.4123,-21040.8284 6969.1732,-21036.7083 6958.9734,-21033.8422 6959.4123,-21040.8284"/>
</g>
<!-- monocle.function.Field5[(Int, Char, Boolean, String, Long, Float),Long] -->
<g id="node293" class="node">
<title>monocle.function.Field5[(Int, Char, Boolean, String, Long, Float),Long]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-37227.8701" rx="292.9846" ry="26.7407"/>
<text text-anchor="start" x="453.6596" y="-37231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field5[(Int, Char, Boolean, String, Long, Float),Long]</text>
<text text-anchor="middle" x="652.6596" y="-37216.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._4.N,Long] -->
<g id="node479" class="node">
<title>shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._4.N,Long]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-37227.8701" rx="374.5333" ry="26.7407"/>
<text text-anchor="start" x="1605.034" y="-37231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._4.N,Long]</text>
<text text-anchor="middle" x="1862.034" y="-37216.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Field5[(Int, Char, Boolean, String, Long, Float),Long]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._4.N,Long] -->
<g id="edge674" class="edge">
<title>monocle.function.Field5[(Int, Char, Boolean, String, Long, Float),Long]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._4.N,Long]</title>
<path fill="none" stroke="#000000" d="M945.4154,-37227.8701C1105.1146,-37227.8701 1304.7869,-37227.8701 1476.9673,-37227.8701"/>
<polygon fill="#000000" stroke="#000000" points="1477.2237,-37231.3702 1487.2237,-37227.8701 1477.2237,-37224.3702 1477.2237,-37231.3702"/>
</g>
<!-- scala.reflect.ClassTag[IsoSpec.this.AnObject.type] -->
<g id="node294" class="node">
<title>scala.reflect.ClassTag[IsoSpec.this.AnObject.type]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-37299.8701" rx="207.7788" ry="26.7407"/>
<text text-anchor="start" x="1723.034" y="-37303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[IsoSpec.this.AnObject.type]</text>
<text text-anchor="middle" x="1862.034" y="-37288.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[((Int, Char, Boolean, String, Long), Float)] -->
<g id="node295" class="node">
<title>scala.reflect.ClassTag[((Int, Char, Boolean, String, Long), Float)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-5095.8701" rx="265.7444" ry="26.7407"/>
<text text-anchor="start" x="5682.0954" y="-5099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Int, Char, Boolean, String, Long), Float)]</text>
<text text-anchor="middle" x="5862.0954" y="-5084.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.OneAnd[Stream,Int]] -->
<g id="node296" class="node">
<title>org.scalacheck.Cogen[scalaz.OneAnd[Stream,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-11268.8701" rx="207.7788" ry="26.7407"/>
<text text-anchor="start" x="4447.253" y="-11272.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[scalaz.OneAnd[Stream,Int]]</text>
<text text-anchor="middle" x="4586.253" y="-11257.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.OneAnd[Stream,Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge1281" class="edge">
<title>org.scalacheck.Cogen[scalaz.OneAnd[Stream,Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M4756.6096,-11284.2788C4930.1296,-11295.8188 5182.8979,-11299.776 5249.5191,-11232.8701 5262.0787,-11220.2568 5244.8423,-11085.3655 5257.5191,-11072.8701 5353.2617,-10978.4974 6340.8843,-11077.3079 6466.6717,-11029.8701 6718.9674,-10934.7224 6942.8673,-10682.4341 7018.6656,-10590.2332"/>
<polygon fill="#000000" stroke="#000000" points="7021.5048,-10592.29 7025.1207,-10582.3313 7016.0837,-10587.8615 7021.5048,-10592.29"/>
</g>
<!-- org.scalacheck.Cogen[scalaz.OneAnd[Stream,Int]]&#45;&gt;org.scalacheck.Cogen[Stream[Int]] -->
<g id="edge1178" class="edge">
<title>org.scalacheck.Cogen[scalaz.OneAnd[Stream,Int]]&#45;&gt;org.scalacheck.Cogen[Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4756.3372,-11284.3761C4929.9749,-11296.0419 5183.1684,-11300.1455 5249.5191,-11232.8701 5264.98,-11217.1936 5242.1643,-11050.6504 5257.5191,-11034.8701 5318.8992,-10971.7891 5558.3259,-10973.654 5716.8277,-10982.5144"/>
<polygon fill="#000000" stroke="#000000" points="5716.9638,-10986.0279 5727.1482,-10983.1075 5717.3655,-10979.0394 5716.9638,-10986.0279"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Long :: Double :: shapeless.HNil,Float :: Char :: Boolean :: Int :: shapeless.HNil,Out] -->
<g id="node297" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Long :: Double :: shapeless.HNil,Float :: Char :: Boolean :: Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-32043.8701" rx="488.7216" ry="26.7407"/>
<text text-anchor="start" x="4248.753" y="-32047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Long :: Double :: shapeless.HNil,Float :: Char :: Boolean :: Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="4586.253" y="-32032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Float :: Long :: Double :: shapeless.HNil,Char :: Boolean :: Int :: shapeless.HNil,Out] -->
<g id="node549" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Float :: Long :: Double :: shapeless.HNil,Char :: Boolean :: Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-32043.8701" rx="488.7216" ry="26.7407"/>
<text text-anchor="start" x="5524.5954" y="-32047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Float :: Long :: Double :: shapeless.HNil,Char :: Boolean :: Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="5862.0954" y="-32032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Long :: Double :: shapeless.HNil,Float :: Char :: Boolean :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Float :: Long :: Double :: shapeless.HNil,Char :: Boolean :: Int :: shapeless.HNil,Out] -->
<g id="edge249" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Long :: Double :: shapeless.HNil,Float :: Char :: Boolean :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Float :: Long :: Double :: shapeless.HNil,Char :: Boolean :: Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M5074.9666,-32043.8701C5169.4415,-32043.8701 5268.5419,-32043.8701 5363.333,-32043.8701"/>
<polygon fill="#000000" stroke="#000000" points="5363.3802,-32047.3702 5373.3802,-32043.8701 5363.3801,-32040.3702 5363.3802,-32047.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(15)]] -->
<g id="node298" class="node">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(15)]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-1377.8701" rx="240.3326" ry="26.7407"/>
<text text-anchor="start" x="5700.0954" y="-1381.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(15)]]</text>
<text text-anchor="middle" x="5862.0954" y="-1366.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(15)]]&#45;&gt;shapeless.Witness.Aux[Int(0)] -->
<g id="edge608" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(15)]]&#45;&gt;shapeless.Witness.Aux[Int(0)]</title>
<path fill="none" stroke="#000000" d="M6063.2175,-1363.103C6216.3567,-1356.6063 6410.1674,-1360.1862 6466.6717,-1413.8701 6490.0135,-1436.0467 6451.3682,-1463.6532 6474.6717,-1485.8701 6535.7177,-1544.0696 6766.9541,-1540.9218 6915.8792,-1532.19"/>
<polygon fill="#000000" stroke="#000000" points="6916.2398,-1535.6747 6926.0113,-1531.5799 6915.819,-1528.6874 6916.2398,-1535.6747"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(15)]]&#45;&gt;org.scalacheck.Gen.Choose[Int] -->
<g id="edge376" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(15)]]&#45;&gt;org.scalacheck.Gen.Choose[Int]</title>
<path fill="none" stroke="#000000" d="M6075.0972,-1390.4187C6190.9121,-1397.2757 6336.6612,-1405.9599 6466.6717,-1413.8701 6617.1906,-1423.028 6789.6894,-1433.78 6907.0445,-1441.1335"/>
<polygon fill="#000000" stroke="#000000" points="6906.9639,-1444.6352 6917.1632,-1441.7677 6907.4018,-1437.6489 6906.9639,-1444.6352"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(15)]]&#45;&gt;Numeric[Int] -->
<g id="edge671" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(15)]]&#45;&gt;Numeric[Int]</title>
<path fill="none" stroke="#000000" d="M6102.749,-1377.8701C6372.5033,-1377.8701 6794.7608,-1377.8701 6967.9362,-1377.8701"/>
<polygon fill="#000000" stroke="#000000" points="6967.9857,-1381.3702 6977.9857,-1377.8701 6967.9856,-1374.3702 6967.9857,-1381.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(15)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge388" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(15)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M6056.8498,-1362.0909C6211.9606,-1354.3119 6411.8653,-1356.6202 6466.6717,-1413.8701 6486.0368,-1434.0985 6455.9833,-1897.0148 6474.6717,-1917.8701 6584.8901,-2040.8683 6790.7734,-2035.107 6922.9609,-2015.545"/>
<polygon fill="#000000" stroke="#000000" points="6923.7825,-2018.9602 6933.1392,-2013.9901 6922.7253,-2012.0405 6923.7825,-2018.9602"/>
</g>
<!-- shapeless.Witness.Aux[Int(15)] -->
<g id="node1331" class="node">
<title>shapeless.Witness.Aux[Int(15)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-1305.8701" rx="133.7865" ry="26.7407"/>
<text text-anchor="start" x="6959.514" y="-1309.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Witness.Aux[Int(15)]</text>
<text text-anchor="middle" x="7046.014" y="-1294.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(15)]]&#45;&gt;shapeless.Witness.Aux[Int(15)] -->
<g id="edge848" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(15)]]&#45;&gt;shapeless.Witness.Aux[Int(15)]</title>
<path fill="none" stroke="#000000" d="M6075.0972,-1365.3214C6190.9121,-1358.4644 6336.6612,-1349.7802 6466.6717,-1341.8701 6617.6793,-1332.6824 6790.8097,-1321.8903 6908.1858,-1314.5351"/>
<polygon fill="#000000" stroke="#000000" points="6908.5434,-1318.0197 6918.3048,-1313.9009 6908.1054,-1311.0334 6908.5434,-1318.0197"/>
</g>
<!-- org.scalactic.Equality[List[Int] \/ TraversalSpec.this.Location] -->
<g id="node299" class="node">
<title>org.scalactic.Equality[List[Int] \/ TraversalSpec.this.Location]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-20491.8701" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="2998.8678" y="-20495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[List[Int] / TraversalSpec.this.Location]</text>
<text text-anchor="middle" x="3166.8678" y="-20480.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- scalaz.Equal[List[Int] \/ TraversalSpec.this.Location] -->
<g id="node1238" class="node">
<title>scalaz.Equal[List[Int] \/ TraversalSpec.this.Location]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-20491.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="4443.253" y="-20495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[List[Int] / TraversalSpec.this.Location]</text>
<text text-anchor="middle" x="4586.253" y="-20480.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalactic.Equality[List[Int] \/ TraversalSpec.this.Location]&#45;&gt;scalaz.Equal[List[Int] \/ TraversalSpec.this.Location] -->
<g id="edge16" class="edge">
<title>org.scalactic.Equality[List[Int] \/ TraversalSpec.this.Location]&#45;&gt;scalaz.Equal[List[Int] \/ TraversalSpec.this.Location]</title>
<path fill="none" stroke="#000000" d="M3416.1367,-20491.8701C3683.7465,-20491.8701 4105.0323,-20491.8701 4362.3953,-20491.8701"/>
<polygon fill="#000000" stroke="#000000" points="4362.6217,-20495.3702 4372.6217,-20491.8701 4362.6217,-20488.3702 4362.6217,-20495.3702"/>
</g>
<!-- org.scalacheck.Cogen[(A, Option[scalaz.Cofree[Option,A]])] -->
<g id="node300" class="node">
<title>org.scalacheck.Cogen[(A, Option[scalaz.Cofree[Option,A]])]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-27393.8701" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="2999.3678" y="-27397.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(A, Option[scalaz.Cofree[Option,A]])]</text>
<text text-anchor="middle" x="3166.8678" y="-27382.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 17ms</text>
</g>
<!-- org.scalacheck.Cogen[(A, Option[scalaz.Cofree[Option,A]])]&#45;&gt;org.scalacheck.Cogen[Option[scalaz.Cofree[Option,A]]] -->
<g id="edge246" class="edge">
<title>org.scalacheck.Cogen[(A, Option[scalaz.Cofree[Option,A]])]&#45;&gt;org.scalacheck.Cogen[Option[scalaz.Cofree[Option,A]]]</title>
<path fill="none" stroke="#000000" d="M3411.2726,-27398.6914C3674.1519,-27403.8772 4089.3182,-27412.0671 4349.2827,-27417.1954"/>
<polygon fill="#000000" stroke="#000000" points="4349.5509,-27420.7013 4359.618,-27417.3993 4349.6891,-27413.7026 4349.5509,-27420.7013"/>
</g>
<!-- org.scalacheck.Cogen[A] -->
<g id="node332" class="node">
<title>org.scalacheck.Cogen[A]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-27493.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="6976.514" y="-27497.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[A]</text>
<text text-anchor="middle" x="7046.014" y="-27482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[(A, Option[scalaz.Cofree[Option,A]])]&#45;&gt;org.scalacheck.Cogen[A] -->
<g id="edge617" class="edge">
<title>org.scalacheck.Cogen[(A, Option[scalaz.Cofree[Option,A]])]&#45;&gt;org.scalacheck.Cogen[A]</title>
<path fill="none" stroke="#000000" d="M3413.3232,-27390.6043C3561.1206,-27388.8099 3752.8201,-27386.7702 3922.9868,-27385.8701 4488.2422,-27382.8798 5903.8068,-27333.854 6466.6717,-27385.8701 6642.9506,-27402.1605 6845.5985,-27445.7672 6958.4414,-27472.3227"/>
<polygon fill="#000000" stroke="#000000" points="6957.873,-27475.7847 6968.41,-27474.6793 6959.4834,-27468.9725 6957.873,-27475.7847"/>
</g>
<!-- scala.reflect.ClassTag[((Char, monocle.function.CList)) =&gt; (Char, monocle.function.CList)] -->
<g id="node301" class="node">
<title>scala.reflect.ClassTag[((Char, monocle.function.CList)) =&gt; (Char, monocle.function.CList)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-2745.8701" rx="369.6338" ry="26.7407"/>
<text text-anchor="start" x="5608.5954" y="-2749.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Char, monocle.function.CList)) =&gt; (Char, monocle.function.CList)]</text>
<text text-anchor="middle" x="5862.0954" y="-2734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[K] -->
<g id="node302" class="node">
<title>org.scalacheck.Arbitrary[K]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-29235.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="3089.8678" y="-29239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[K]</text>
<text text-anchor="middle" x="3166.8678" y="-29224.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 30ms</text>
</g>
<!-- org.scalacheck.Arbitrary[K]&#45;&gt;scala.reflect.ClassTag[K] -->
<g id="edge1097" class="edge">
<title>org.scalacheck.Arbitrary[K]&#45;&gt;scala.reflect.ClassTag[K]</title>
<path fill="none" stroke="#000000" d="M3287.2715,-29235.8701C3555.2587,-29235.8701 4198.3789,-29235.8701 4466.1165,-29235.8701"/>
<polygon fill="#000000" stroke="#000000" points="4466.2569,-29239.3702 4476.2569,-29235.8701 4466.2568,-29232.3702 4466.2569,-29239.3702"/>
</g>
<!-- scalaz.Functor[F$macro$14] -->
<g id="node303" class="node">
<title>scalaz.Functor[F$macro$14]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-37371.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="574.1596" y="-37375.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$14]</text>
<text text-anchor="middle" x="652.6596" y="-37360.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[(Int, Stream[Int])] -->
<g id="node304" class="node">
<title>org.scalacheck.Cogen[(Int, Stream[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-11340.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="4474.753" y="-11344.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Int, Stream[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-11329.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Cogen[(Int, Stream[Int])]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge263" class="edge">
<title>org.scalacheck.Cogen[(Int, Stream[Int])]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M4731.4978,-11354.6116C4904.7897,-11367.4521 5179.9,-11375.4008 5249.5191,-11304.8701 5264.6746,-11289.5161 5242.2335,-11126.0944 5257.5191,-11110.8701 5352.7755,-11015.9953 6341.7947,-11115.6771 6466.6717,-11065.8701 6726.7342,-10962.1444 6948.2128,-10687.9956 7020.8473,-10590.716"/>
<polygon fill="#000000" stroke="#000000" points="7023.8684,-10592.5179 7027.0141,-10582.4008 7018.2459,-10588.3481 7023.8684,-10592.5179"/>
</g>
<!-- org.scalacheck.Cogen[(Int, Stream[Int])]&#45;&gt;org.scalacheck.Cogen[Stream[Int]] -->
<g id="edge722" class="edge">
<title>org.scalacheck.Cogen[(Int, Stream[Int])]&#45;&gt;org.scalacheck.Cogen[Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4731.5749,-11354.6876C4904.9462,-11367.6062 5180.1383,-11375.6352 5249.5191,-11304.8701 5267.5766,-11286.4523 5240.1716,-11091.958 5257.5191,-11072.8701 5382.4512,-10935.4036 5620.1879,-10949.2778 5757.3741,-10971.6036"/>
<polygon fill="#000000" stroke="#000000" points="5757.0408,-10975.0963 5767.4811,-10973.2933 5758.1952,-10968.1922 5757.0408,-10975.0963"/>
</g>
<!-- shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._2.N,Int] -->
<g id="node305" class="node">
<title>shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._2.N,Int]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-37443.8701" rx="370.5479" ry="26.7407"/>
<text text-anchor="start" x="1608.034" y="-37447.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._2.N,Int]</text>
<text text-anchor="middle" x="1862.034" y="-37432.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1 =&gt; MacroOutSideMonocleSpec.this.Bar1] -->
<g id="node306" class="node">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1 =&gt; MacroOutSideMonocleSpec.this.Bar1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-28623.8701" rx="424.9424" ry="26.7407"/>
<text text-anchor="start" x="360.1596" y="-28627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1 =&gt; MacroOutSideMonocleSpec.this.Bar1]</text>
<text text-anchor="middle" x="652.6596" y="-28612.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Cogen[MacroOutSideMonocleSpec.this.Bar1] -->
<g id="node506" class="node">
<title>org.scalacheck.Cogen[MacroOutSideMonocleSpec.this.Bar1]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-28695.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="1693.534" y="-28699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[MacroOutSideMonocleSpec.this.Bar1]</text>
<text text-anchor="middle" x="1862.034" y="-28684.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1 =&gt; MacroOutSideMonocleSpec.this.Bar1]&#45;&gt;org.scalacheck.Cogen[MacroOutSideMonocleSpec.this.Bar1] -->
<g id="edge962" class="edge">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1 =&gt; MacroOutSideMonocleSpec.this.Bar1]&#45;&gt;org.scalacheck.Cogen[MacroOutSideMonocleSpec.this.Bar1]</title>
<path fill="none" stroke="#000000" d="M977.6145,-28641.1865C1082.2484,-28646.925 1198.6961,-28653.4822 1305.3191,-28659.8701 1415.4916,-28666.4706 1537.892,-28674.3281 1639.8037,-28681.0157"/>
<polygon fill="#000000" stroke="#000000" points="1639.7073,-28684.5168 1649.9152,-28681.6798 1640.1661,-28677.5319 1639.7073,-28684.5168"/>
</g>
<!-- scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Bar1 =&gt; MacroOutSideMonocleSpec.this.Bar1] -->
<g id="node710" class="node">
<title>scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Bar1 =&gt; MacroOutSideMonocleSpec.this.Bar1]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-28623.8701" rx="414.2292" ry="26.7407"/>
<text text-anchor="start" x="1577.034" y="-28627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Bar1 =&gt; MacroOutSideMonocleSpec.this.Bar1]</text>
<text text-anchor="middle" x="1862.034" y="-28612.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1 =&gt; MacroOutSideMonocleSpec.this.Bar1]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Bar1 =&gt; MacroOutSideMonocleSpec.this.Bar1] -->
<g id="edge1157" class="edge">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1 =&gt; MacroOutSideMonocleSpec.this.Bar1]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Bar1 =&gt; MacroOutSideMonocleSpec.this.Bar1]</title>
<path fill="none" stroke="#000000" d="M1077.7642,-28623.8701C1194.3825,-28623.8701 1320.8014,-28623.8701 1437.3937,-28623.8701"/>
<polygon fill="#000000" stroke="#000000" points="1437.5627,-28627.3702 1447.5627,-28623.8701 1437.5627,-28620.3702 1437.5627,-28627.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1] -->
<g id="node1410" class="node">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-28551.8701" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="1686.034" y="-28555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1]</text>
<text text-anchor="middle" x="1862.034" y="-28540.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 14ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1 =&gt; MacroOutSideMonocleSpec.this.Bar1]&#45;&gt;org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1] -->
<g id="edge217" class="edge">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1 =&gt; MacroOutSideMonocleSpec.this.Bar1]&#45;&gt;org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1]</title>
<path fill="none" stroke="#000000" d="M962.1408,-28605.4451C1168.9177,-28593.1347 1436.7227,-28577.1909 1626.2595,-28565.9069"/>
<polygon fill="#000000" stroke="#000000" points="1626.5832,-28569.3939 1636.3575,-28565.3057 1626.1672,-28562.4063 1626.5832,-28569.3939"/>
</g>
<!-- org.scalacheck.Cogen[Byte] -->
<g id="node307" class="node">
<title>org.scalacheck.Cogen[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-37659.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="1785.034" y="-37663.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Byte]</text>
<text text-anchor="middle" x="1862.034" y="-37648.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar2] -->
<g id="node309" class="node">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar2]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-37731.8701" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="476.6596" y="-37735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar2]</text>
<text text-anchor="middle" x="652.6596" y="-37720.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Bar2] -->
<g id="node363" class="node">
<title>scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Bar2]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-37731.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="1693.534" y="-37735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Bar2]</text>
<text text-anchor="middle" x="1862.034" y="-37720.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar2]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Bar2] -->
<g id="edge419" class="edge">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar2]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Bar2]</title>
<path fill="none" stroke="#000000" d="M913.2151,-37731.8701C1116.852,-37731.8701 1398.543,-37731.8701 1602.037,-37731.8701"/>
<polygon fill="#000000" stroke="#000000" points="1602.2755,-37735.3702 1612.2755,-37731.8701 1602.2754,-37728.3702 1602.2755,-37735.3702"/>
</g>
<!-- org.scalactic.Equality[monocle.Arities] -->
<g id="node311" class="node">
<title>org.scalactic.Equality[monocle.Arities]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-15929.8701" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="4478.753" y="-15933.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[monocle.Arities]</text>
<text text-anchor="middle" x="4586.253" y="-15918.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 4ms</text>
</g>
<!-- org.scalactic.Equality[monocle.Arities]&#45;&gt;scalaz.Equal[monocle.Arities] -->
<g id="edge1021" class="edge">
<title>org.scalactic.Equality[monocle.Arities]&#45;&gt;scalaz.Equal[monocle.Arities]</title>
<path fill="none" stroke="#000000" d="M4742.6963,-15922.0224C4995.2491,-15909.3536 5488.5119,-15884.6101 5726.8192,-15872.6559"/>
<polygon fill="#000000" stroke="#000000" points="5727.1167,-15876.1455 5736.9287,-15872.1488 5726.7659,-15869.1543 5727.1167,-15876.1455"/>
</g>
<!-- scala.reflect.ClassTag[String] -->
<g id="node312" class="node">
<title>scala.reflect.ClassTag[String]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-8107.8701" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="8115.6985" y="-8111.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[String]</text>
<text text-anchor="middle" x="8196.6985" y="-8096.6701" font-family="Times,serif" font-size="14.00" fill="#000000">153 times = 138ms</text>
</g>
<!-- monocle.function.FilterIndex[Vector[Int],Int,Int] -->
<g id="node313" class="node">
<title>monocle.function.FilterIndex[Vector[Int],Int,Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-37803.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="518.6596" y="-37807.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[Vector[Int],Int,Int]</text>
<text text-anchor="middle" x="652.6596" y="-37792.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Cons1[HListSpec.this.H,Int,HListSpec.this.HTail] -->
<g id="node314" class="node">
<title>monocle.function.Cons1[HListSpec.this.H,Int,HListSpec.this.HTail]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-31647.8701" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="464.6596" y="-31651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons1[HListSpec.this.H,Int,HListSpec.this.HTail]</text>
<text text-anchor="middle" x="652.6596" y="-31636.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- monocle.function.Cons1[HListSpec.this.H,Int,HListSpec.this.HTail]&#45;&gt;shapeless.ops.hlist.Prepend.Aux[Int :: shapeless.HNil,HListSpec.this.HTail,HListSpec.this.H] -->
<g id="edge146" class="edge">
<title>monocle.function.Cons1[HListSpec.this.H,Int,HListSpec.this.HTail]&#45;&gt;shapeless.ops.hlist.Prepend.Aux[Int :: shapeless.HNil,HListSpec.this.HTail,HListSpec.this.H]</title>
<path fill="none" stroke="#000000" d="M917.688,-31655.7593C1090.2349,-31660.8956 1317.3939,-31667.6575 1505.6771,-31673.2622"/>
<polygon fill="#000000" stroke="#000000" points="1505.6462,-31676.7628 1515.7459,-31673.5619 1505.8545,-31669.7659 1505.6462,-31676.7628"/>
</g>
<!-- monocle.function.Cons1[HListSpec.this.H,Int,HListSpec.this.HTail]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[HListSpec.this.H,Int,HListSpec.this.HTail] -->
<g id="edge969" class="edge">
<title>monocle.function.Cons1[HListSpec.this.H,Int,HListSpec.this.HTail]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[HListSpec.this.H,Int,HListSpec.this.HTail]</title>
<path fill="none" stroke="#000000" d="M917.688,-31639.9808C1107.1483,-31634.3411 1362.4517,-31626.7413 1559.8362,-31620.8657"/>
<polygon fill="#000000" stroke="#000000" points="1560.1874,-31624.3569 1570.0788,-31620.5608 1559.979,-31617.36 1560.1874,-31624.3569"/>
</g>
<!-- scala.reflect.ClassTag[scalaz.Tree[A]] -->
<g id="node315" class="node">
<title>scala.reflect.ClassTag[scalaz.Tree[A]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-27985.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="6941.514" y="-27989.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scalaz.Tree[A]]</text>
<text text-anchor="middle" x="7046.014" y="-27974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[monocle.function.CNel] -->
<g id="node316" class="node">
<title>scala.reflect.ClassTag[monocle.function.CNel]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-37875.8701" rx="193.0803" ry="26.7407"/>
<text text-anchor="start" x="1733.534" y="-37879.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[monocle.function.CNel]</text>
<text text-anchor="middle" x="1862.034" y="-37864.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Seq[?T] -->
<g id="node317" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Seq[?T]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-37947.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="525.6596" y="-37951.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Seq[?T]</text>
<text text-anchor="middle" x="652.6596" y="-37936.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Int,List[Int]] -->
<g id="node318" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Int,List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-9001.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="8047.6985" y="-9005.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Int,List[Int]]</text>
<text text-anchor="middle" x="8196.6985" y="-8990.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)] =&gt; monocle.refined.StartsWithString[String(&#39;hello&#39;)]] -->
<g id="node319" class="node">
<title>org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)] =&gt; monocle.refined.StartsWithString[String(&#39;hello&#39;)]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-3033.8701" rx="507.9054" ry="26.7407"/>
<text text-anchor="start" x="4235.253" y="-3037.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)] =&gt; monocle.refined.StartsWithString[String(&#39;hello&#39;)]]</text>
<text text-anchor="middle" x="4586.253" y="-3022.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 17ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)] =&gt; monocle.refined.StartsWithString[String(&#39;hello&#39;)]]&#45;&gt;scala.reflect.ClassTag[monocle.refined.StartsWithString[String(&#39;hello&#39;)] =&gt; monocle.refined.StartsWithString[String(&#39;hello&#39;)]] -->
<g id="edge1194" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)] =&gt; monocle.refined.StartsWithString[String(&#39;hello&#39;)]]&#45;&gt;scala.reflect.ClassTag[monocle.refined.StartsWithString[String(&#39;hello&#39;)] =&gt; monocle.refined.StartsWithString[String(&#39;hello&#39;)]]</title>
<path fill="none" stroke="#000000" d="M5094.1656,-3033.8701C5179.8929,-3033.8701 5268.8915,-3033.8701 5354.6079,-3033.8701"/>
<polygon fill="#000000" stroke="#000000" points="5354.7737,-3037.3702 5364.7736,-3033.8701 5354.7736,-3030.3702 5354.7737,-3037.3702"/>
</g>
<!-- org.scalacheck.Cogen[monocle.refined.StartsWithString[String(&#39;hello&#39;)]] -->
<g id="node620" class="node">
<title>org.scalacheck.Cogen[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-3105.8701" rx="291.1561" ry="26.7407"/>
<text text-anchor="start" x="5664.0954" y="-3109.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]</text>
<text text-anchor="middle" x="5862.0954" y="-3094.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)] =&gt; monocle.refined.StartsWithString[String(&#39;hello&#39;)]]&#45;&gt;org.scalacheck.Cogen[monocle.refined.StartsWithString[String(&#39;hello&#39;)]] -->
<g id="edge354" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)] =&gt; monocle.refined.StartsWithString[String(&#39;hello&#39;)]]&#45;&gt;org.scalacheck.Cogen[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]</title>
<path fill="none" stroke="#000000" d="M4933.6184,-3053.473C5145.0322,-3065.4038 5410.59,-3080.3901 5603.487,-3091.2759"/>
<polygon fill="#000000" stroke="#000000" points="5603.3008,-3094.7709 5613.4822,-3091.84 5603.6953,-3087.782 5603.3008,-3094.7709"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)]] -->
<g id="node1310" class="node">
<title>org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-2169.8701" rx="301.8692" ry="26.7407"/>
<text text-anchor="start" x="5656.5954" y="-2173.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]</text>
<text text-anchor="middle" x="5862.0954" y="-2158.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 10ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)] =&gt; monocle.refined.StartsWithString[String(&#39;hello&#39;)]]&#45;&gt;org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)]] -->
<g id="edge312" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)] =&gt; monocle.refined.StartsWithString[String(&#39;hello&#39;)]]&#45;&gt;org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]</title>
<path fill="none" stroke="#000000" d="M4823.9122,-3010.0521C4972.5859,-2981.5354 5153.5275,-2918.9805 5249.5191,-2781.8701 5258.6963,-2768.7617 5246.4651,-2217.4398 5257.5191,-2205.8701 5307.0006,-2154.0798 5475.0551,-2147.2189 5621.457,-2152.1333"/>
<polygon fill="#000000" stroke="#000000" points="5621.3947,-2155.6332 5631.5126,-2152.4903 5621.6431,-2148.6376 5621.3947,-2155.6332"/>
</g>
<!-- monocle.function.Snoc[List[Int],Int] -->
<g id="node320" class="node">
<title>monocle.function.Snoc[List[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-38019.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="552.6596" y="-38023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc[List[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-38008.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scalaz.OneAnd[List,A]] -->
<g id="node322" class="node">
<title>scala.reflect.ClassTag[scalaz.OneAnd[List,A]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-28239.8701" rx="191.752" ry="26.7407"/>
<text text-anchor="start" x="5734.5954" y="-28243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scalaz.OneAnd[List,A]]</text>
<text text-anchor="middle" x="5862.0954" y="-28228.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[(monocle.Example, Boolean)] -->
<g id="node323" class="node">
<title>scala.reflect.ClassTag[(monocle.Example, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-3867.8701" rx="216.2494" ry="26.7407"/>
<text text-anchor="start" x="6901.014" y="-3871.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(monocle.Example, Boolean)]</text>
<text text-anchor="middle" x="7046.014" y="-3856.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[UnsafeSelectSpec.this.Person] -->
<g id="node324" class="node">
<title>org.scalacheck.Arbitrary[UnsafeSelectSpec.this.Person]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-38091.8701" rx="226.9626" ry="26.7407"/>
<text text-anchor="start" x="500.1596" y="-38095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[UnsafeSelectSpec.this.Person]</text>
<text text-anchor="middle" x="652.6596" y="-38080.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Char, String)] -->
<g id="node325" class="node">
<title>org.scalacheck.Arbitrary[(Char, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-4807.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="5752.0954" y="-4811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Char, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-4796.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- scala.reflect.ClassTag[(Char, String)] -->
<g id="node423" class="node">
<title>scala.reflect.ClassTag[(Char, String)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-4735.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="6943.514" y="-4739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Char, String)]</text>
<text text-anchor="middle" x="7046.014" y="-4724.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Char, String)]&#45;&gt;scala.reflect.ClassTag[(Char, String)] -->
<g id="edge1133" class="edge">
<title>org.scalacheck.Arbitrary[(Char, String)]&#45;&gt;scala.reflect.ClassTag[(Char, String)]</title>
<path fill="none" stroke="#000000" d="M6018.9998,-4798.6385C6141.0433,-4791.431 6314.621,-4781.1212 6466.6717,-4771.8701 6609.6158,-4763.173 6772.3832,-4753.0383 6888.9178,-4745.742"/>
<polygon fill="#000000" stroke="#000000" points="6889.2261,-4749.2296 6898.9878,-4745.1114 6888.7885,-4742.2433 6889.2261,-4749.2296"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, String)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge161" class="edge">
<title>org.scalacheck.Arbitrary[(Char, String)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6007.9289,-4794.8043C6166.7546,-4784.1867 6406.2883,-4779.9529 6466.6717,-4843.8701 6481.1598,-4859.206 6462.7875,-7864.4384 6474.6717,-7881.8701 6571.6151,-8024.0661 6773.2938,-8076.7946 6909.19,-8096.347"/>
<polygon fill="#000000" stroke="#000000" points="6908.8783,-8099.8374 6919.2661,-8097.7535 6909.846,-8092.9046 6908.8783,-8099.8374"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, String)]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge897" class="edge">
<title>org.scalacheck.Arbitrary[(Char, String)]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M6029.211,-4807.8701C6263.2457,-4807.8701 6684.5331,-4807.8701 6904.1441,-4807.8701"/>
<polygon fill="#000000" stroke="#000000" points="6904.4478,-4811.3702 6914.4477,-4807.8701 6904.4477,-4804.3702 6904.4478,-4811.3702"/>
</g>
<!-- scalaz.Equal[monocle.Arities =&gt; Option[Int]] -->
<g id="node326" class="node">
<title>scalaz.Equal[monocle.Arities =&gt; Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-17021.8701" rx="188.5952" ry="26.7407"/>
<text text-anchor="start" x="4460.753" y="-17025.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Arities =&gt; Option[Int]]</text>
<text text-anchor="middle" x="4586.253" y="-17010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[monocle.Arities =&gt; Option[Int]]&#45;&gt;scalaz.Equal[Option[Int]] -->
<g id="edge448" class="edge">
<title>scalaz.Equal[monocle.Arities =&gt; Option[Int]]&#45;&gt;scalaz.Equal[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4616.6094,-17048.566C4728.3012,-17149.0852 5116.803,-17519.5795 5249.5191,-17921.8701 5253.4527,-17933.7936 5248.8988,-21528.7414 5257.5191,-21537.8701 5322.3316,-21606.5044 5593.6515,-21596.5694 5749.9064,-21584.5164"/>
<polygon fill="#000000" stroke="#000000" points="5750.3341,-21587.9937 5760.0289,-21583.7203 5749.7852,-21581.0152 5750.3341,-21587.9937"/>
</g>
<!-- scalaz.Equal[monocle.Arities =&gt; Option[Int]]&#45;&gt;org.scalacheck.Arbitrary[monocle.Arities] -->
<g id="edge1025" class="edge">
<title>scalaz.Equal[monocle.Arities =&gt; Option[Int]]&#45;&gt;org.scalacheck.Arbitrary[monocle.Arities]</title>
<path fill="none" stroke="#000000" d="M4775.1944,-17021.8701C5017.6151,-17021.8701 5435.4953,-17021.8701 5676.3582,-17021.8701"/>
<polygon fill="#000000" stroke="#000000" points="5676.6265,-17025.3702 5686.6265,-17021.8701 5676.6265,-17018.3702 5676.6265,-17025.3702"/>
</g>
<!-- shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2] -->
<g id="node327" class="node">
<title>shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-38199.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="5641.0954" y="-38203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2]</text>
<text text-anchor="middle" x="5862.0954" y="-38188.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.At[Long :: Double :: shapeless.HNil,shapeless.nat._1] -->
<g id="node1032" class="node">
<title>shapeless.ops.hlist.At[Long :: Double :: shapeless.HNil,shapeless.nat._1]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-38199.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="6846.014" y="-38203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Long :: Double :: shapeless.HNil,shapeless.nat._1]</text>
<text text-anchor="middle" x="7046.014" y="-38188.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2]&#45;&gt;shapeless.ops.hlist.At[Long :: Double :: shapeless.HNil,shapeless.nat._1] -->
<g id="edge440" class="edge">
<title>shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2]&#45;&gt;shapeless.ops.hlist.At[Long :: Double :: shapeless.HNil,shapeless.nat._1]</title>
<path fill="none" stroke="#000000" d="M6185.9977,-38199.8701C6359.1793,-38199.8701 6571.1648,-38199.8701 6741.3374,-38199.8701"/>
<polygon fill="#000000" stroke="#000000" points="6741.4567,-38203.3702 6751.4567,-38199.8701 6741.4566,-38196.3702 6741.4567,-38203.3702"/>
</g>
<!-- Option[Unit] =&gt; ?{def shouldEqual: ?} -->
<g id="node328" class="node">
<title>Option[Unit] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-25833.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="544.1596" y="-25837.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Unit] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-25822.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Option[Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge645" class="edge">
<title>Option[Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M792.2847,-25848.145C927.4693,-25856.935 1136.2199,-25857.058 1305.3191,-25797.8701 1532.7956,-25718.249 1749.8974,-25515.5395 1829.7815,-25435.302"/>
<polygon fill="#000000" stroke="#000000" points="1832.5331,-25437.4974 1837.0796,-25427.9277 1827.5577,-25432.5734 1832.5331,-25437.4974"/>
</g>
<!-- Option[Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge429" class="edge">
<title>Option[Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M795.1026,-25847.4518C965.8523,-25860.2177 1237.5345,-25868.1812 1305.3191,-25797.8701 1321.9793,-25780.5889 1296.7492,-25383.2377 1313.3191,-25365.8701 1433.0243,-25240.4026 1659.1099,-25274.8604 1780.3464,-25305.4623"/>
<polygon fill="#000000" stroke="#000000" points="1779.7609,-25308.9256 1790.3179,-25308.0304 1781.5068,-25302.1468 1779.7609,-25308.9256"/>
</g>
<!-- String =&gt; ?{def shouldEqual: ?} -->
<g id="node329" class="node">
<title>String =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-25761.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="563.1596" y="-25765.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-25750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 40ms</text>
</g>
<!-- String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge1204" class="edge">
<title>String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M780.1749,-25772.1822C913.9703,-25779.0335 1128.9414,-25778.712 1305.3191,-25725.8701 1518.0614,-25662.1334 1735.7614,-25502.3023 1822.6991,-25433.8252"/>
<polygon fill="#000000" stroke="#000000" points="1825.0327,-25436.4418 1830.6997,-25427.4899 1820.6871,-25430.954 1825.0327,-25436.4418"/>
</g>
<!-- String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge685" class="edge">
<title>String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M776.1696,-25773.9532C944.9608,-25787.4258 1234.8398,-25798.706 1305.3191,-25725.8701 1319.2303,-25711.4938 1299.483,-25380.3186 1313.3191,-25365.8701 1433.2563,-25240.6244 1659.2447,-25274.9893 1780.4051,-25305.5184"/>
<polygon fill="#000000" stroke="#000000" points="1779.8137,-25308.9801 1790.3702,-25308.0804 1781.5567,-25302.2006 1779.8137,-25308.9801"/>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example2] -->
<g id="node330" class="node">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example2]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-38271.8701" rx="281.357" ry="26.7407"/>
<text text-anchor="start" x="461.6596" y="-38275.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example2]</text>
<text text-anchor="middle" x="652.6596" y="-38260.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Example2] -->
<g id="node1175" class="node">
<title>scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Example2]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-38271.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="1678.534" y="-38275.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Example2]</text>
<text text-anchor="middle" x="1862.034" y="-38260.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example2]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Example2] -->
<g id="edge1170" class="edge">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example2]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Example2]</title>
<path fill="none" stroke="#000000" d="M934.2967,-38271.8701C1128.862,-38271.8701 1386.594,-38271.8701 1581.0235,-38271.8701"/>
<polygon fill="#000000" stroke="#000000" points="1581.1071,-38275.3702 1591.1071,-38271.8701 1581.1071,-38268.3702 1581.1071,-38275.3702"/>
</g>
<!-- scala.reflect.ClassTag[Unit] -->
<g id="node331" class="node">
<title>scala.reflect.ClassTag[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-15983.8701" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="8120.1985" y="-15987.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Unit]</text>
<text text-anchor="middle" x="8196.6985" y="-15972.6701" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 25ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P) -->
<g id="node333" class="node">
<title>(Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-38343.8701" rx="218.492" ry="26.7407"/>
<text text-anchor="start" x="506.1596" y="-38347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-38332.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[(Int, (Char, Boolean, String, Long, Float))]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge1082" class="edge">
<title>org.scalacheck.Cogen[(Int, (Char, Boolean, String, Long, Float))]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M4785.3617,-6628.0174C4957.446,-6617.5291 5187.9365,-6617.0011 5249.5191,-6681.8701 5266.4638,-6699.719 5240.372,-10208.2155 5257.5191,-10225.8701 5351.1702,-10322.2926 6368.8982,-10171.6303 6466.6717,-10263.8701 6481.1159,-10277.4967 6462.5042,-10337.177 6474.6717,-10352.8701 6582.0109,-10491.3106 6791.2313,-10535.5452 6924.517,-10549.5509"/>
<polygon fill="#000000" stroke="#000000" points="6924.4757,-10553.0644 6934.7763,-10550.5852 6925.1778,-10546.0997 6924.4757,-10553.0644"/>
</g>
<!-- org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)] -->
<g id="node1042" class="node">
<title>org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-4409.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="5698.0954" y="-4413.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)]</text>
<text text-anchor="middle" x="5862.0954" y="-4398.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 18ms</text>
</g>
<!-- org.scalacheck.Cogen[(Int, (Char, Boolean, String, Long, Float))]&#45;&gt;org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)] -->
<g id="edge839" class="edge">
<title>org.scalacheck.Cogen[(Int, (Char, Boolean, String, Long, Float))]&#45;&gt;org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)]</title>
<path fill="none" stroke="#000000" d="M4785.3399,-6663.702C4957.4093,-6674.1761 5187.8898,-6674.6947 5249.5191,-6609.8701 5270.2281,-6588.0874 5236.8674,-4467.7071 5257.5191,-4445.8701 5310.7177,-4389.6182 5502.7792,-4386.172 5656.3343,-4393.3925"/>
<polygon fill="#000000" stroke="#000000" points="5656.2324,-4396.8916 5666.3911,-4393.8831 5656.5736,-4389.8999 5656.2324,-4396.8916"/>
</g>
<!-- scalaz.Split[monocle.Getter] -->
<g id="node336" class="node">
<title>scalaz.Split[monocle.Getter]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-38415.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="574.1596" y="-38419.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Split[monocle.Getter]</text>
<text text-anchor="middle" x="652.6596" y="-38404.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[Option[Int]] -->
<g id="node337" class="node">
<title>scala.reflect.ClassTag[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-15141.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="6951.014" y="-15145.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Option[Int]]</text>
<text text-anchor="middle" x="7046.014" y="-15130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example,Int]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example,_$1] -->
<g id="node338" class="node">
<title>(=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example,Int]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example,_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-38487.8701" rx="514.5476" ry="26.7407"/>
<text text-anchor="start" x="296.6596" y="-38491.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example,Int]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example,_$1]</text>
<text text-anchor="middle" x="652.6596" y="-38476.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[((Char, Int)) =&gt; (Char, Int)] -->
<g id="node341" class="node">
<title>scala.reflect.ClassTag[((Char, Int)) =&gt; (Char, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-14523.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="5723.5954" y="-14527.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Char, Int)) =&gt; (Char, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-14512.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[String =&gt; String] -->
<g id="node342" class="node">
<title>scala.reflect.ClassTag[String =&gt; String]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-6285.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="6936.514" y="-6289.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[String =&gt; String]</text>
<text text-anchor="middle" x="7046.014" y="-6274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">25 times = 27ms</text>
</g>
<!-- x$3.type =&gt; ?{def reverse: ?} -->
<g id="node343" class="node">
<title>x$3.type =&gt; ?{def reverse: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-38559.8701" rx="127.9727" ry="26.7407"/>
<text text-anchor="start" x="570.1596" y="-38563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$3.type =&gt; ?{def reverse: ?}</text>
<text text-anchor="middle" x="652.6596" y="-38548.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Plated[Stream[Int]] -->
<g id="node344" class="node">
<title>monocle.function.Plated[Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-38631.8701" rx="156.9554" ry="26.7407"/>
<text text-anchor="start" x="549.6596" y="-38635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Plated[Stream[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-38620.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 2ms</text>
</g>
<!-- org.scalacheck.Cogen[Unit] -->
<g id="node345" class="node">
<title>org.scalacheck.Cogen[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-10316.8701" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="6969.514" y="-10320.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Unit]</text>
<text text-anchor="middle" x="7046.014" y="-10305.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 27ms</text>
</g>
<!-- scalaz.Equal[(Boolean, String \/ Int)] -->
<g id="node346" class="node">
<title>scalaz.Equal[(Boolean, String \/ Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-21141.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="4486.753" y="-21145.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Boolean, String / Int)]</text>
<text text-anchor="middle" x="4586.253" y="-21130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scalaz.Equal[(Boolean, String \/ Int)]&#45;&gt;scalaz.Equal[String \/ Int] -->
<g id="edge552" class="edge">
<title>scalaz.Equal[(Boolean, String \/ Int)]&#45;&gt;scalaz.Equal[String \/ Int]</title>
<path fill="none" stroke="#000000" d="M4719.1699,-21128.7626C4891.7761,-21115.0319 5179.3284,-21104.478 5249.5191,-21177.8701 5265.4551,-21194.5329 5241.6269,-21991.1654 5257.5191,-22007.8701 5322.7189,-22076.403 5594.9128,-22066.3848 5750.9305,-22054.3785"/>
<polygon fill="#000000" stroke="#000000" points="5751.3401,-22057.8572 5761.0357,-22053.5856 5750.7925,-22050.8786 5751.3401,-22057.8572"/>
</g>
<!-- scalaz.Equal[(Boolean, String \/ Int)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge620" class="edge">
<title>scalaz.Equal[(Boolean, String \/ Int)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M4718.8713,-21155.0138C4891.5149,-21168.8334 5179.5147,-21179.5393 5249.5191,-21105.8701 5261.4066,-21093.3603 5245.3789,-18633.1347 5257.5191,-18620.8701 5287.1755,-18590.9097 6554.0375,-18594.5126 6937.2995,-18596.2924"/>
<polygon fill="#000000" stroke="#000000" points="6937.5422,-18599.7935 6947.5586,-18596.3406 6937.5751,-18592.7936 6937.5422,-18599.7935"/>
</g>
<!-- shapeless.ops.hlist.Init[HListSpec.this.H] -->
<g id="node347" class="node">
<title>shapeless.ops.hlist.Init[HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-33582.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="1749.034" y="-33586.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init[HListSpec.this.H]</text>
<text text-anchor="middle" x="1862.034" y="-33571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.hlist.Init[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil] -->
<g id="node1376" class="node">
<title>shapeless.ops.hlist.Init[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-33654.8701" rx="334.423" ry="26.7407"/>
<text text-anchor="start" x="2938.3678" y="-33658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="3166.8678" y="-33643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 21ms</text>
</g>
<!-- shapeless.ops.hlist.Init[HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Init[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil] -->
<g id="edge537" class="edge">
<title>shapeless.ops.hlist.Init[HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Init[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2023.6688,-33591.789C2237.5126,-33603.5888 2618.0277,-33624.5854 2880.9689,-33639.0943"/>
<polygon fill="#000000" stroke="#000000" points="2880.8754,-33642.5944 2891.0531,-33639.6508 2881.2611,-33635.605 2880.8754,-33642.5944"/>
</g>
<!-- org.scalactic.Equality[String] -->
<g id="node348" class="node">
<title>org.scalactic.Equality[String]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-19735.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="5782.0954" y="-19739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[String]</text>
<text text-anchor="middle" x="5862.0954" y="-19724.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 27ms</text>
</g>
<!-- org.scalactic.Equality[String]&#45;&gt;scalaz.Equal[String] -->
<g id="edge122" class="edge">
<title>org.scalactic.Equality[String]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M5979.3779,-19726.775C6134.3169,-19717.399 6395.8982,-19711.553 6466.6717,-19771.8701 6479.1462,-19782.5015 6465.2339,-19794.4697 6474.6717,-19807.8701 6602.5144,-19989.3877 6853.8593,-20099.3499 6976.0331,-20144.2932"/>
<polygon fill="#000000" stroke="#000000" points="6975.0757,-20147.6693 6985.6697,-20147.8016 6977.4705,-20141.0917 6975.0757,-20147.6693"/>
</g>
<!-- monocle.function.Field2[HListSpec.this.H,Boolean] -->
<g id="node349" class="node">
<title>monocle.function.Field2[HListSpec.this.H,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-33231.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="509.6596" y="-33235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field2[HListSpec.this.H,Boolean]</text>
<text text-anchor="middle" x="652.6596" y="-33220.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._1.N,Boolean] -->
<g id="node523" class="node">
<title>shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._1.N,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-33267.8701" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="1660.534" y="-33271.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._1.N,Boolean]</text>
<text text-anchor="middle" x="1862.034" y="-33256.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- monocle.function.Field2[HListSpec.this.H,Boolean]&#45;&gt;shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._1.N,Boolean] -->
<g id="edge405" class="edge">
<title>monocle.function.Field2[HListSpec.this.H,Boolean]&#45;&gt;shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._1.N,Boolean]</title>
<path fill="none" stroke="#000000" d="M860.5584,-33238.0587C1056.2715,-33243.8846 1351.2719,-33252.666 1570.4652,-33259.1908"/>
<polygon fill="#000000" stroke="#000000" points="1570.4177,-33262.6908 1580.5175,-33259.49 1570.6261,-33255.6939 1570.4177,-33262.6908"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._1.N,Boolean,(Boolean, HListSpec.this.H)] -->
<g id="node848" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._1.N,Boolean,(Boolean, HListSpec.this.H)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-33195.8701" rx="439.2267" ry="26.7407"/>
<text text-anchor="start" x="1559.534" y="-33199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._1.N,Boolean,(Boolean, HListSpec.this.H)]</text>
<text text-anchor="middle" x="1862.034" y="-33184.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- monocle.function.Field2[HListSpec.this.H,Boolean]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._1.N,Boolean,(Boolean, HListSpec.this.H)] -->
<g id="edge1121" class="edge">
<title>monocle.function.Field2[HListSpec.this.H,Boolean]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._1.N,Boolean,(Boolean, HListSpec.this.H)]</title>
<path fill="none" stroke="#000000" d="M860.5584,-33225.6814C1024.1019,-33220.8132 1256.9752,-33213.8811 1457.0111,-33207.9266"/>
<polygon fill="#000000" stroke="#000000" points="1457.222,-33211.4219 1467.1134,-33207.6258 1457.0137,-33204.425 1457.222,-33211.4219"/>
</g>
<!-- scala.reflect.ClassTag[(Char, Boolean, String, Long, Float)] -->
<g id="node350" class="node">
<title>scala.reflect.ClassTag[(Char, Boolean, String, Long, Float)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-5637.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="6882.014" y="-5641.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Char, Boolean, String, Long, Float)]</text>
<text text-anchor="middle" x="7046.014" y="-5626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- scalaz.Functor[F$macro$6] -->
<g id="node351" class="node">
<title>scalaz.Functor[F$macro$6]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-38703.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-38707.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$6]</text>
<text text-anchor="middle" x="652.6596" y="-38692.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop -->
<g id="node352" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-38775.8701" rx="226.9626" ry="26.7407"/>
<text text-anchor="start" x="500.1596" y="-38779.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop</text>
<text text-anchor="middle" x="652.6596" y="-38764.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[HListSpec.this.ReverseH] -->
<g id="node354" class="node">
<title>org.scalacheck.Cogen[HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-38919.8701" rx="199.3083" ry="26.7407"/>
<text text-anchor="start" x="1729.034" y="-38923.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="1862.034" y="-38908.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Functor[F$macro$108] -->
<g id="node355" class="node">
<title>scalaz.Functor[F$macro$108]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-38955.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="570.6596" y="-38959.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$108]</text>
<text text-anchor="middle" x="652.6596" y="-38944.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Throwable =&gt; Throwable] -->
<g id="node356" class="node">
<title>org.scalacheck.Arbitrary[Throwable =&gt; Throwable]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-39063.8701" rx="212.6784" ry="26.7407"/>
<text text-anchor="start" x="510.1596" y="-39067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Throwable =&gt; Throwable]</text>
<text text-anchor="middle" x="652.6596" y="-39052.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- scala.reflect.ClassTag[Throwable =&gt; Throwable] -->
<g id="node774" class="node">
<title>scala.reflect.ClassTag[Throwable =&gt; Throwable]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-39135.8701" rx="202.4653" ry="26.7407"/>
<text text-anchor="start" x="1727.034" y="-39139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Throwable =&gt; Throwable]</text>
<text text-anchor="middle" x="1862.034" y="-39124.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Throwable =&gt; Throwable]&#45;&gt;scala.reflect.ClassTag[Throwable =&gt; Throwable] -->
<g id="edge513" class="edge">
<title>org.scalacheck.Arbitrary[Throwable =&gt; Throwable]&#45;&gt;scala.reflect.ClassTag[Throwable =&gt; Throwable]</title>
<path fill="none" stroke="#000000" d="M849.3948,-39074.2353C978.9371,-39081.1803 1152.2521,-39090.6997 1305.3191,-39099.8701 1426.9589,-39107.1576 1563.5046,-39115.9774 1670.9234,-39123.0632"/>
<polygon fill="#000000" stroke="#000000" points="1671.0175,-39126.577 1681.2264,-39123.7434 1671.4787,-39119.5922 1671.0175,-39126.577"/>
</g>
<!-- org.scalacheck.Cogen[Throwable] -->
<g id="node1088" class="node">
<title>org.scalacheck.Cogen[Throwable]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-39063.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="1768.534" y="-39067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Throwable]</text>
<text text-anchor="middle" x="1862.034" y="-39052.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Throwable =&gt; Throwable]&#45;&gt;org.scalacheck.Cogen[Throwable] -->
<g id="edge1030" class="edge">
<title>org.scalacheck.Arbitrary[Throwable =&gt; Throwable]&#45;&gt;org.scalacheck.Cogen[Throwable]</title>
<path fill="none" stroke="#000000" d="M865.7405,-39063.8701C1107.151,-39063.8701 1494.6897,-39063.8701 1708.3152,-39063.8701"/>
<polygon fill="#000000" stroke="#000000" points="1708.3551,-39067.3702 1718.3551,-39063.8701 1708.355,-39060.3702 1708.3551,-39067.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Throwable] -->
<g id="node1453" class="node">
<title>org.scalacheck.Arbitrary[Throwable]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-38991.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="1761.034" y="-38995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Throwable]</text>
<text text-anchor="middle" x="1862.034" y="-38980.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 8ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Throwable =&gt; Throwable]&#45;&gt;org.scalacheck.Arbitrary[Throwable] -->
<g id="edge1320" class="edge">
<title>org.scalacheck.Arbitrary[Throwable =&gt; Throwable]&#45;&gt;org.scalacheck.Arbitrary[Throwable]</title>
<path fill="none" stroke="#000000" d="M845.2912,-39052.4018C1083.7918,-39038.2026 1485.3986,-39014.293 1705.7332,-39001.1754"/>
<polygon fill="#000000" stroke="#000000" points="1705.9884,-39004.6665 1715.7627,-39000.5783 1705.5723,-38997.6789 1705.9884,-39004.6665"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: shapeless.HNil,Out] -->
<g id="node357" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-29631.8701" rx="346.4646" ry="26.7407"/>
<text text-anchor="start" x="5625.0954" y="-29635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="5862.0954" y="-29620.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="node1414" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-29631.8701" rx="346.4646" ry="26.7407"/>
<text text-anchor="start" x="6809.014" y="-29635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,shapeless.HNil,Out]</text>
<text text-anchor="middle" x="7046.014" y="-29620.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="edge504" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M6208.9118,-29631.8701C6359.9114,-29631.8701 6536.7583,-29631.8701 6688.9024,-29631.8701"/>
<polygon fill="#000000" stroke="#000000" points="6689.3502,-29635.3702 6699.3501,-29631.8701 6689.3501,-29628.3702 6689.3502,-29635.3702"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Char,List[Char]] -->
<g id="node358" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Char,List[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-1017.8701" rx="237.6758" ry="26.7407"/>
<text text-anchor="start" x="8036.6985" y="-1021.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Char,List[Char]]</text>
<text text-anchor="middle" x="8196.6985" y="-1006.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[scalaz.IList[Char],scalaz.IList[Char]] -->
<g id="node359" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[scalaz.IList[Char],scalaz.IList[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-35625.8701" rx="284.9281" ry="26.7407"/>
<text text-anchor="start" x="1668.534" y="-35629.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[scalaz.IList[Char],scalaz.IList[Char]]</text>
<text text-anchor="middle" x="1862.034" y="-35614.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 21ms</text>
</g>
<!-- shapeless.Generic.Aux[scalaz.IList[Char],L1] -->
<g id="node518" class="node">
<title>shapeless.Generic.Aux[scalaz.IList[Char],L1]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-35625.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="3041.8678" y="-35629.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scalaz.IList[Char],L1]</text>
<text text-anchor="middle" x="3166.8678" y="-35614.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[scalaz.IList[Char],scalaz.IList[Char]]&#45;&gt;shapeless.Generic.Aux[scalaz.IList[Char],L1] -->
<g id="edge78" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[scalaz.IList[Char],scalaz.IList[Char]]&#45;&gt;shapeless.Generic.Aux[scalaz.IList[Char],L1]</title>
<path fill="none" stroke="#000000" d="M2147.1757,-35625.8701C2395.5914,-35625.8701 2749.3745,-35625.8701 2968.2131,-35625.8701"/>
<polygon fill="#000000" stroke="#000000" points="2968.5311,-35629.3702 2978.531,-35625.8701 2968.531,-35622.3702 2968.5311,-35629.3702"/>
</g>
<!-- scalaz.Functor[List] -->
<g id="node360" class="node">
<title>scalaz.Functor[List]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-39135.8701" rx="88.2768" ry="26.7407"/>
<text text-anchor="start" x="598.1596" y="-39139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[List]</text>
<text text-anchor="middle" x="652.6596" y="-39124.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Last[Double :: shapeless.HNil] -->
<g id="node361" class="node">
<title>shapeless.ops.hlist.Last[Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-33798.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="8059.6985" y="-33802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Last[Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="8196.6985" y="-33787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Last[shapeless.HNil] -->
<g id="node683" class="node">
<title>shapeless.ops.hlist.Last[shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="9347.3831" cy="-33798.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="9237.8831" y="-33802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Last[shapeless.HNil]</text>
<text text-anchor="middle" x="9347.3831" y="-33787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Last[Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Last[shapeless.HNil] -->
<g id="edge437" class="edge">
<title>shapeless.ops.hlist.Last[Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Last[shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M8402.0861,-33798.8701C8620.9855,-33798.8701 8963.95,-33798.8701 9171.0392,-33798.8701"/>
<polygon fill="#000000" stroke="#000000" points="9171.1034,-33802.3702 9181.1034,-33798.8701 9171.1033,-33795.3702 9171.1034,-33802.3702"/>
</g>
<!-- org.scalactic.Equality[Option[Int]] -->
<g id="node362" class="node">
<title>org.scalactic.Equality[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-21717.8701" rx="144.9138" ry="26.7407"/>
<text text-anchor="start" x="4491.753" y="-21721.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[Int]]</text>
<text text-anchor="middle" x="4586.253" y="-21706.6701" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 102ms</text>
</g>
<!-- org.scalactic.Equality[Option[Int]]&#45;&gt;scalaz.Equal[Option[Int]] -->
<g id="edge1228" class="edge">
<title>org.scalactic.Equality[Option[Int]]&#45;&gt;scalaz.Equal[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4660.9334,-21741.0009C4797.564,-21778.1911 5088.5058,-21832.8014 5249.5191,-21681.8701 5271.3987,-21661.3605 5235.7784,-21635.5267 5257.5191,-21614.8701 5325.4771,-21550.3007 5591.8037,-21555.761 5747.3804,-21565.041"/>
<polygon fill="#000000" stroke="#000000" points="5747.2697,-21568.5407 5757.4646,-21565.6571 5747.6966,-21561.5537 5747.2697,-21568.5407"/>
</g>
<!-- scalaz.Equal[Map[Int,Char]] -->
<g id="node364" class="node">
<title>scalaz.Equal[Map[Int,Char]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-19879.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="5783.5954" y="-19883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Map[Int,Char]]</text>
<text text-anchor="middle" x="5862.0954" y="-19868.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[Map[Int,Char]]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge655" class="edge">
<title>scalaz.Equal[Map[Int,Char]]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M5975.4152,-19890.0114C6131.1472,-19901.2224 6399.6956,-19909.8844 6466.6717,-19843.8701 6483.8114,-19826.9765 6460.268,-19755.1494 6474.6717,-19735.8701 6588.1016,-19584.0435 6821.6127,-19538.931 6952.2599,-19525.5301"/>
<polygon fill="#000000" stroke="#000000" points="6952.6484,-19529.0088 6962.2574,-19524.546 6951.9626,-19522.0425 6952.6484,-19529.0088"/>
</g>
<!-- scalaz.Equal[Map[Int,Char]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge52" class="edge">
<title>scalaz.Equal[Map[Int,Char]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5974.8538,-19869.3862C6130.9466,-19857.6361 6401.1,-19848.1857 6466.6717,-19915.8701 6477.8089,-19927.3661 6469.6993,-20188.6558 6474.6717,-20203.8701 6590.1795,-20557.2889 6908.6943,-20895.5147 7012.692,-20999.4045"/>
<polygon fill="#000000" stroke="#000000" points="7010.2447,-21001.9068 7019.8034,-21006.4766 7015.1807,-20996.9433 7010.2447,-21001.9068"/>
</g>
<!-- scalaz.Equal[monocle.Iso[monocle.Unary,Int]] -->
<g id="node365" class="node">
<title>scalaz.Equal[monocle.Iso[monocle.Unary,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-16877.8701" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="4457.253" y="-16881.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Iso[monocle.Unary,Int]]</text>
<text text-anchor="middle" x="4586.253" y="-16866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- scalaz.Equal[monocle.Iso[monocle.Unary,Int]]&#45;&gt;scalaz.Equal[Int =&gt; monocle.Unary] -->
<g id="edge789" class="edge">
<title>scalaz.Equal[monocle.Iso[monocle.Unary,Int]]&#45;&gt;scalaz.Equal[Int =&gt; monocle.Unary]</title>
<path fill="none" stroke="#000000" d="M4747.0403,-16892.8827C4920.9437,-16905.1634 5182.3871,-16910.8018 5249.5191,-16841.8701 5271.8539,-16818.9365 5235.2446,-16576.8622 5257.5191,-16553.8701 5318.4157,-16491.0114 5555.7618,-16494.6806 5714.3261,-16504.9352"/>
<polygon fill="#000000" stroke="#000000" points="5714.4443,-16508.4506 5724.6538,-16505.6195 5714.9072,-16501.4659 5714.4443,-16508.4506"/>
</g>
<!-- scalaz.Equal[monocle.Unary =&gt; Int] -->
<g id="node740" class="node">
<title>scalaz.Equal[monocle.Unary =&gt; Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-18977.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="5761.0954" y="-18981.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Unary =&gt; Int]</text>
<text text-anchor="middle" x="5862.0954" y="-18966.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- scalaz.Equal[monocle.Iso[monocle.Unary,Int]]&#45;&gt;scalaz.Equal[monocle.Unary =&gt; Int] -->
<g id="edge803" class="edge">
<title>scalaz.Equal[monocle.Iso[monocle.Unary,Int]]&#45;&gt;scalaz.Equal[monocle.Unary =&gt; Int]</title>
<path fill="none" stroke="#000000" d="M4746.1677,-16862.6531C4920.3417,-16850.0501 5183.064,-16843.9868 5249.5191,-16913.8701 5268.9292,-16934.2814 5238.1627,-18921.4078 5257.5191,-18941.8701 5317.751,-19005.5431 5555.9336,-19001.5522 5714.7494,-18991.0232"/>
<polygon fill="#000000" stroke="#000000" points="5715.3529,-18994.4904 5725.0928,-18990.3209 5714.8787,-18987.5065 5715.3529,-18994.4904"/>
</g>
<!-- scala.reflect.ClassTag[(String, String)] -->
<g id="node366" class="node">
<title>scala.reflect.ClassTag[(String, String)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-8317.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="6940.514" y="-8321.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(String, String)]</text>
<text text-anchor="middle" x="7046.014" y="-8306.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example2Type[Int]] -->
<g id="node368" class="node">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example2Type[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-15577.8701" rx="317.4819" ry="26.7407"/>
<text text-anchor="start" x="5645.5954" y="-15581.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example2Type[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-15566.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Example2Type[Int]] -->
<g id="node580" class="node">
<title>scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Example2Type[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-15577.8701" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="6837.014" y="-15581.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Example2Type[Int]]</text>
<text text-anchor="middle" x="7046.014" y="-15566.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example2Type[Int]]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Example2Type[Int]] -->
<g id="edge1184" class="edge">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example2Type[Int]]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Example2Type[Int]]</title>
<path fill="none" stroke="#000000" d="M6179.753,-15577.8701C6349.9072,-15577.8701 6558.8819,-15577.8701 6728.9463,-15577.8701"/>
<polygon fill="#000000" stroke="#000000" points="6729.0626,-15581.3702 6739.0626,-15577.8701 6729.0625,-15574.3702 6729.0626,-15581.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example2Type[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge444" class="edge">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Example2Type[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6100.0611,-15595.665C6247.1926,-15600.8304 6417.1223,-15594.2345 6466.6717,-15541.8701 6484.6566,-15522.8634 6461.6162,-13680.5474 6474.6717,-13657.8701 6578.4938,-13477.5313 6821.0475,-13384.7513 6954.3055,-13345.8576"/>
<polygon fill="#000000" stroke="#000000" points="6955.4588,-13349.1679 6964.1006,-13343.0384 6953.5226,-13342.4409 6955.4588,-13349.1679"/>
</g>
<!-- scala.reflect.ClassTag[Int =&gt; Boolean] -->
<g id="node370" class="node">
<title>scala.reflect.ClassTag[Int =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-9253.8701" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="6939.514" y="-9257.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Int =&gt; Boolean]</text>
<text text-anchor="middle" x="7046.014" y="-9242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 7ms</text>
</g>
<!-- scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Quintary] -->
<g id="node371" class="node">
<title>scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Quintary]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-9716.8701" rx="299.6267" ry="26.7407"/>
<text text-anchor="start" x="4382.253" y="-9720.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Quintary]</text>
<text text-anchor="middle" x="4586.253" y="-9705.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 39ms</text>
</g>
<!-- scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Quintary]&#45;&gt;scalaz.Equal[monocle.Quintary] -->
<g id="edge1359" class="edge">
<title>scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Quintary]&#45;&gt;scalaz.Equal[monocle.Quintary]</title>
<path fill="none" stroke="#000000" d="M4666.7123,-9690.9062C4807.6638,-9651.0458 5098.574,-9594.8465 5249.5191,-9752.8701 5267.7664,-9771.9731 5239.322,-10684.7192 5257.5191,-10703.8701 5319.6205,-10769.2264 5569.8062,-10763.177 5728.229,-10752.0595"/>
<polygon fill="#000000" stroke="#000000" points="5728.8045,-10755.5273 5738.5283,-10751.3205 5728.3035,-10748.5452 5728.8045,-10755.5273"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)] -->
<g id="node965" class="node">
<title>org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-7377.8701" rx="253.2885" ry="26.7407"/>
<text text-anchor="start" x="5691.0954" y="-7381.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]</text>
<text text-anchor="middle" x="5862.0954" y="-7366.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 100ms</text>
</g>
<!-- scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Quintary]&#45;&gt;org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)] -->
<g id="edge778" class="edge">
<title>scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Quintary]&#45;&gt;org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]</title>
<path fill="none" stroke="#000000" d="M4782.6496,-9737.2052C4935.4229,-9740.9439 5139.3598,-9717.0051 5249.5191,-9582.8701 5268.6384,-9559.5896 5236.8198,-7435.7576 5257.5191,-7413.8701 5310.0547,-7358.3188 5498.0149,-7354.2658 5650.5774,-7361.1276"/>
<polygon fill="#000000" stroke="#000000" points="5650.4208,-7364.624 5660.5734,-7361.5949 5650.7478,-7357.6316 5650.4208,-7364.624"/>
</g>
<!-- scalaz.Equal[List[Char]] -->
<g id="node372" class="node">
<title>scalaz.Equal[List[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-19447.8701" rx="106.1321" ry="26.7407"/>
<text text-anchor="start" x="5795.0954" y="-19451.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[List[Char]]</text>
<text text-anchor="middle" x="5862.0954" y="-19436.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[List[Char]]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge843" class="edge">
<title>scalaz.Equal[List[Char]]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M5965.6009,-19453.9518C6085.9979,-19461.045 6290.7442,-19473.1662 6466.6717,-19483.8701 6638.0322,-19494.2961 6837.8809,-19506.7881 6952.4167,-19513.9794"/>
<polygon fill="#000000" stroke="#000000" points="6952.3512,-19517.4821 6962.5509,-19514.6158 6952.79,-19510.4958 6952.3512,-19517.4821"/>
</g>
<!-- scalaz.Order[String \/ Int] -->
<g id="node374" class="node">
<title>scalaz.Order[String \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-23169.8701" rx="108.375" ry="26.7407"/>
<text text-anchor="start" x="5793.5954" y="-23173.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[String / Int]</text>
<text text-anchor="middle" x="5862.0954" y="-23158.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Order[String \/ Int]&#45;&gt;scalaz.Order[String] -->
<g id="edge1337" class="edge">
<title>scalaz.Order[String \/ Int]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M5967.5473,-23175.9459C6118.6724,-23182.6133 6387.3883,-23186.2552 6466.6717,-23133.8701 6887.6473,-22855.7178 7015.3643,-22175.6248 7040.8122,-22009.1182"/>
<polygon fill="#000000" stroke="#000000" points="7044.3222,-22009.3113 7042.3425,-21998.9031 7037.3994,-22008.2742 7044.3222,-22009.3113"/>
</g>
<!-- scala.reflect.ClassTag[(Int, Int)] -->
<g id="node375" class="node">
<title>scala.reflect.ClassTag[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-15361.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="6958.514" y="-15365.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int)]</text>
<text text-anchor="middle" x="7046.014" y="-15350.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$4.type =&gt; ?{def tupled: ?} -->
<g id="node376" class="node">
<title>x$4.type =&gt; ?{def tupled: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-39207.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="572.6596" y="-39211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$4.type =&gt; ?{def tupled: ?}</text>
<text text-anchor="middle" x="652.6596" y="-39196.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[HListSpec.this.H,L1] -->
<g id="node377" class="node">
<title>shapeless.Generic.Aux[HListSpec.this.H,L1]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-23529.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="3043.3678" y="-23533.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[HListSpec.this.H,L1]</text>
<text text-anchor="middle" x="3166.8678" y="-23518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[(Boolean, monocle.Example)] -->
<g id="node378" class="node">
<title>scalaz.Equal[(Boolean, monocle.Example)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-17741.8701" rx="180.1247" ry="26.7407"/>
<text text-anchor="start" x="5742.5954" y="-17745.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Boolean, monocle.Example)]</text>
<text text-anchor="middle" x="5862.0954" y="-17730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[(Boolean, monocle.Example)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge670" class="edge">
<title>scalaz.Equal[(Boolean, monocle.Example)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M6017.8409,-17728.3015C6176.4003,-17718.3258 6407.1341,-17715.6879 6466.6717,-17777.8701 6485.8463,-17797.8964 6460.4612,-18253.0629 6474.6717,-18276.8701 6581.3672,-18455.6194 6827.7253,-18542.3745 6959.3738,-18577.2879"/>
<polygon fill="#000000" stroke="#000000" points="6958.8651,-18580.7723 6969.4249,-18579.9117 6960.6333,-18573.9993 6958.8651,-18580.7723"/>
</g>
<!-- scalaz.Equal[monocle.Example] -->
<g id="node1463" class="node">
<title>scalaz.Equal[monocle.Example]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-17777.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="6957.014" y="-17781.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Example]</text>
<text text-anchor="middle" x="7046.014" y="-17766.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 9ms</text>
</g>
<!-- scalaz.Equal[(Boolean, monocle.Example)]&#45;&gt;scalaz.Equal[monocle.Example] -->
<g id="edge782" class="edge">
<title>scalaz.Equal[(Boolean, monocle.Example)]&#45;&gt;scalaz.Equal[monocle.Example]</title>
<path fill="none" stroke="#000000" d="M6039.0201,-17747.2499C6273.4057,-17754.377 6682.5152,-17766.817 6900.1395,-17773.4344"/>
<polygon fill="#000000" stroke="#000000" points="6900.2546,-17776.9394 6910.3564,-17773.745 6900.4674,-17769.9426 6900.2546,-17776.9394"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Char, Int),(Int, Char)] -->
<g id="node379" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[(Char, Int),(Int, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-29937.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="1708.534" y="-29941.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[(Char, Int),(Int, Char)]</text>
<text text-anchor="middle" x="1862.034" y="-29926.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Char :: Int :: shapeless.HNil,L2] -->
<g id="node389" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[Char :: Int :: shapeless.HNil,L2]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-30063.8701" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="2988.8678" y="-30067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[Char :: Int :: shapeless.HNil,L2]</text>
<text text-anchor="middle" x="3166.8678" y="-30052.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Char, Int),(Int, Char)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Char :: Int :: shapeless.HNil,L2] -->
<g id="edge787" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Char, Int),(Int, Char)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Char :: Int :: shapeless.HNil,L2]</title>
<path fill="none" stroke="#000000" d="M2027.7789,-29919.3709C2145.6727,-29915.0974 2301.8254,-29928.514 2410.7488,-30009.8701 2417.7629,-30015.1089 2411.525,-30022.9245 2418.7488,-30027.8701 2499.8486,-30083.3924 2746.0375,-30085.8952 2934.0629,-30078.6347"/>
<polygon fill="#000000" stroke="#000000" points="2934.2455,-30082.1303 2944.0985,-30078.2358 2933.9674,-30075.1358 2934.2455,-30082.1303"/>
</g>
<!-- shapeless.Generic.Aux[(Char, Int),L1] -->
<g id="node706" class="node">
<title>shapeless.Generic.Aux[(Char, Int),L1]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-29991.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="3061.3678" y="-29995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Char, Int),L1]</text>
<text text-anchor="middle" x="3166.8678" y="-29980.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Char, Int),(Int, Char)]&#45;&gt;shapeless.Generic.Aux[(Char, Int),L1] -->
<g id="edge164" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Char, Int),(Int, Char)]&#45;&gt;shapeless.Generic.Aux[(Char, Int),L1]</title>
<path fill="none" stroke="#000000" d="M2077.5008,-29946.7871C2336.7148,-29957.5145 2766.242,-29975.2903 3001.0325,-29985.007"/>
<polygon fill="#000000" stroke="#000000" points="3000.8919,-29988.5041 3011.0281,-29985.4207 3001.1814,-29981.5101 3000.8919,-29988.5041"/>
</g>
<!-- shapeless.ops.hlist.Tupler[Int :: Char :: shapeless.HNil] -->
<g id="node1437" class="node">
<title>shapeless.ops.hlist.Tupler[Int :: Char :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-29919.8701" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="3015.3678" y="-29923.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Tupler[Int :: Char :: shapeless.HNil]</text>
<text text-anchor="middle" x="3166.8678" y="-29908.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Char, Int),(Int, Char)]&#45;&gt;shapeless.ops.hlist.Tupler[Int :: Char :: shapeless.HNil] -->
<g id="edge336" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Char, Int),(Int, Char)]&#45;&gt;shapeless.ops.hlist.Tupler[Int :: Char :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2088.9459,-29934.7398C2325.168,-29931.4812 2693.3844,-29926.4017 2932.3819,-29923.1048"/>
<polygon fill="#000000" stroke="#000000" points="2932.6489,-29926.6015 2942.5997,-29922.9638 2932.5523,-29919.6022 2932.6489,-29926.6015"/>
</g>
<!-- org.scalacheck.Cogen[Stream[scalaz.Tree[A]]] -->
<g id="node380" class="node">
<title>org.scalacheck.Cogen[Stream[scalaz.Tree[A]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-27275.8701" rx="193.0803" ry="26.7407"/>
<text text-anchor="start" x="4457.753" y="-27279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Stream[scalaz.Tree[A]]]</text>
<text text-anchor="middle" x="4586.253" y="-27264.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.Tree[A]] -->
<g id="node697" class="node">
<title>org.scalacheck.Cogen[scalaz.Tree[A]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-27311.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="5757.5954" y="-27315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[scalaz.Tree[A]]</text>
<text text-anchor="middle" x="5862.0954" y="-27300.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Cogen[Stream[scalaz.Tree[A]]]&#45;&gt;org.scalacheck.Cogen[scalaz.Tree[A]] -->
<g id="edge805" class="edge">
<title>org.scalacheck.Cogen[Stream[scalaz.Tree[A]]]&#45;&gt;org.scalacheck.Cogen[scalaz.Tree[A]]</title>
<path fill="none" stroke="#000000" d="M4775.538,-27281.211C5024.374,-27288.2324 5457.6512,-27300.458 5694.9431,-27307.1536"/>
<polygon fill="#000000" stroke="#000000" points="5694.951,-27310.6551 5705.0457,-27307.4386 5695.1485,-27303.6579 5694.951,-27310.6551"/>
</g>
<!-- scalaz.Equal[scalaz.Cofree[Option,A]] -->
<g id="node381" class="node">
<title>scalaz.Equal[scalaz.Cofree[Option,A]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-27993.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="3061.3678" y="-27997.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Cofree[Option,A]]</text>
<text text-anchor="middle" x="3166.8678" y="-27982.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- scalaz.Equal[scalaz.Cofree[Option,A]]&#45;&gt;scalaz.Equal[A] -->
<g id="edge1358" class="edge">
<title>scalaz.Equal[scalaz.Cofree[Option,A]]&#45;&gt;scalaz.Equal[A]</title>
<path fill="none" stroke="#000000" d="M3321.6231,-27986.6716C3472.918,-27979.5754 3709.8015,-27968.3089 3914.9868,-27957.8701 4126.9158,-27947.0882 4376.4273,-27933.4614 4503.2238,-27926.47"/>
<polygon fill="#000000" stroke="#000000" points="4503.46,-27929.9623 4513.252,-27925.9167 4503.0744,-27922.973 4503.46,-27929.9623"/>
</g>
<!-- scalaz.Equal[Option[Nothing]] -->
<g id="node382" class="node">
<title>scalaz.Equal[Option[Nothing]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-27921.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="3082.3678" y="-27925.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[Nothing]]</text>
<text text-anchor="middle" x="3166.8678" y="-27910.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 110ms</text>
</g>
<!-- scalaz.Equal[Option[Nothing]]&#45;&gt;scalaz.Equal[A] -->
<g id="edge190" class="edge">
<title>scalaz.Equal[Option[Nothing]]&#45;&gt;scalaz.Equal[A]</title>
<path fill="none" stroke="#000000" d="M3297.856,-27921.8701C3585.2571,-27921.8701 4264.4428,-27921.8701 4502.2484,-27921.8701"/>
<polygon fill="#000000" stroke="#000000" points="4502.5588,-27925.3702 4512.5588,-27921.8701 4502.5588,-27918.3702 4502.5588,-27925.3702"/>
</g>
<!-- scala.reflect.ClassTag[Boolean] -->
<g id="node383" class="node">
<title>scala.reflect.ClassTag[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-6609.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="8109.6985" y="-6613.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Boolean]</text>
<text text-anchor="middle" x="8196.6985" y="-6598.6701" font-family="Times,serif" font-size="14.00" fill="#000000">101 times = 76ms</text>
</g>
<!-- monocle.function.Each[(Int, Int, Int, Int),Int] -->
<g id="node384" class="node">
<title>monocle.function.Each[(Int, Int, Int, Int),Int]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-27057.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="3043.3678" y="-27061.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[(Int, Int, Int, Int),Int]</text>
<text text-anchor="middle" x="3166.8678" y="-27046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- monocle.function.Each[(Int, Int, Int, Int),Int]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int] -->
<g id="edge1256" class="edge">
<title>monocle.function.Each[(Int, Int, Int, Int),Int]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M3344.1121,-27049.6156C3495.708,-27042.4899 3719.7036,-27031.8051 3914.9868,-27021.8701 4057.1239,-27014.6388 4216.1662,-27006.1279 4343.7546,-26999.1974"/>
<polygon fill="#000000" stroke="#000000" points="4344.2549,-27002.6754 4354.0502,-26998.6378 4343.875,-26995.6858 4344.2549,-27002.6754"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int),SGen] -->
<g id="node1237" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int),SGen]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-27057.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="4456.753" y="-27061.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int),SGen]</text>
<text text-anchor="middle" x="4586.253" y="-27046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- monocle.function.Each[(Int, Int, Int, Int),Int]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int),SGen] -->
<g id="edge271" class="edge">
<title>monocle.function.Each[(Int, Int, Int, Int),Int]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int),SGen]</title>
<path fill="none" stroke="#000000" d="M3353.1569,-27057.8701C3619.1278,-27057.8701 4105.9358,-27057.8701 4381.6442,-27057.8701"/>
<polygon fill="#000000" stroke="#000000" points="4381.7682,-27061.3702 4391.7682,-27057.8701 4381.7682,-27054.3702 4381.7682,-27061.3702"/>
</g>
<!-- scala.reflect.ClassTag[T[A]] -->
<g id="node385" class="node">
<title>scala.reflect.ClassTag[T[A]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-39279.8701" rx="121.7449" ry="26.7407"/>
<text text-anchor="start" x="1784.034" y="-39283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[T[A]]</text>
<text text-anchor="middle" x="1862.034" y="-39268.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scalaz.Equal[(String \/ Int, Boolean)] -->
<g id="node386" class="node">
<title>scalaz.Equal[(String \/ Int, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-20997.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="4486.753" y="-21001.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(String / Int, Boolean)]</text>
<text text-anchor="middle" x="4586.253" y="-20986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scalaz.Equal[(String \/ Int, Boolean)]&#45;&gt;scalaz.Equal[String \/ Int] -->
<g id="edge366" class="edge">
<title>scalaz.Equal[(String \/ Int, Boolean)]&#45;&gt;scalaz.Equal[String \/ Int]</title>
<path fill="none" stroke="#000000" d="M4719.1852,-20984.748C4891.8088,-20971.0007 5179.3807,-20960.428 5249.5191,-21033.8701 5268.2058,-21053.4369 5238.8839,-21988.2542 5257.5191,-22007.8701 5322.6701,-22076.4494 5594.8837,-22066.4124 5750.9175,-22054.3908"/>
<polygon fill="#000000" stroke="#000000" points="5751.3286,-22057.8694 5761.0238,-22053.5969 5750.7804,-22050.8909 5751.3286,-22057.8694"/>
</g>
<!-- scalaz.Equal[(String \/ Int, Boolean)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge1183" class="edge">
<title>scalaz.Equal[(String \/ Int, Boolean)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M4718.8698,-21011.0124C4891.5116,-21024.8303 5179.5094,-21035.5342 5249.5191,-20961.8701 5272.2816,-20937.9194 5234.1157,-18606.1949 5257.5191,-18582.8701 5317.2163,-18523.3733 6562.4366,-18574.8826 6939.048,-18591.8888"/>
<polygon fill="#000000" stroke="#000000" points="6938.9809,-18595.3893 6949.129,-18592.3452 6939.2976,-18588.3964 6938.9809,-18595.3893"/>
</g>
<!-- monocle.function.At[Char,monocle.refined.ZeroTo[Int(15)],Boolean] -->
<g id="node387" class="node">
<title>monocle.function.At[Char,monocle.refined.ZeroTo[Int(15)],Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-39351.8701" rx="281.357" ry="26.7407"/>
<text text-anchor="start" x="461.6596" y="-39355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[Char,monocle.refined.ZeroTo[Int(15)],Boolean]</text>
<text text-anchor="middle" x="652.6596" y="-39340.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- None.type =&gt; org.scalacheck.Gen[Option[A]] -->
<g id="node388" class="node">
<title>None.type =&gt; org.scalacheck.Gen[Option[A]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-39423.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="526.1596" y="-39427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">None.type =&gt; org.scalacheck.Gen[Option[A]]</text>
<text text-anchor="middle" x="652.6596" y="-39412.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Char :: Int :: shapeless.HNil,Out0] -->
<g id="node1259" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Char :: Int :: shapeless.HNil,Out0]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-30063.8701" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="4345.753" y="-30067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Char :: Int :: shapeless.HNil,Out0]</text>
<text text-anchor="middle" x="4586.253" y="-30052.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Char :: Int :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Char :: Int :: shapeless.HNil,Out0] -->
<g id="edge1071" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[Char :: Int :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Char :: Int :: shapeless.HNil,Out0]</title>
<path fill="none" stroke="#000000" d="M3430.102,-30063.8701C3653.6387,-30063.8701 3976.6789,-30063.8701 4224.5025,-30063.8701"/>
<polygon fill="#000000" stroke="#000000" points="4224.7642,-30067.3702 4234.7642,-30063.8701 4224.7641,-30060.3702 4224.7642,-30067.3702"/>
</g>
<!-- List[scala.collection.immutable.Stream[Int]] =&gt; ?{def ===: ?} -->
<g id="node390" class="node">
<title>List[scala.collection.immutable.Stream[Int]] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-39495.8701" rx="256.8596" ry="26.7407"/>
<text text-anchor="start" x="479.1596" y="-39499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[scala.collection.immutable.Stream[Int]] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="652.6596" y="-39484.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; t.type) =&gt; ?{def #::: ?} -->
<g id="node391" class="node">
<title>(=&gt; t.type) =&gt; ?{def #::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-39567.8701" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="576.1596" y="-39571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; t.type) =&gt; ?{def #::: ?}</text>
<text text-anchor="middle" x="652.6596" y="-39556.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[BigInt] -->
<g id="node392" class="node">
<title>scalaz.Equal[BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-39639.8701" rx="90.5193" ry="26.7407"/>
<text text-anchor="start" x="596.6596" y="-39643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[BigInt]</text>
<text text-anchor="middle" x="652.6596" y="-39628.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[Int]] -->
<g id="node393" class="node">
<title>org.scalacheck.Arbitrary[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-15141.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="5759.5954" y="-15145.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Option[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-15130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 42ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[Int]]&#45;&gt;scala.reflect.ClassTag[Option[Int]] -->
<g id="edge1006" class="edge">
<title>org.scalacheck.Arbitrary[Option[Int]]&#45;&gt;scala.reflect.ClassTag[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M6018.3945,-15141.8701C6245.1365,-15141.8701 6662.91,-15141.8701 6889.6747,-15141.8701"/>
<polygon fill="#000000" stroke="#000000" points="6889.9936,-15145.3702 6899.9936,-15141.8701 6889.9936,-15138.3702 6889.9936,-15145.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Option[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge615" class="edge">
<title>org.scalacheck.Arbitrary[Option[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6003.724,-15153.3705C6162.5391,-15162.7781 6405.8868,-15165.5564 6466.6717,-15100.8701 6480.3962,-15086.2646 6464.6609,-13675.2328 6474.6717,-13657.8701 6578.6108,-13477.5987 6821.1161,-13384.7908 6954.3356,-13345.875"/>
<polygon fill="#000000" stroke="#000000" points="6955.4875,-13349.1856 6964.1279,-13343.0541 6953.5498,-13342.4591 6955.4875,-13349.1856"/>
</g>
<!-- java.util.UUID =&gt; org.scalacheck.Gen[java.util.UUID] -->
<g id="node394" class="node">
<title>java.util.UUID =&gt; org.scalacheck.Gen[java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-39711.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="500.6596" y="-39715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.UUID =&gt; org.scalacheck.Gen[java.util.UUID]</text>
<text text-anchor="middle" x="652.6596" y="-39700.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Functor[F$macro$9] -->
<g id="node395" class="node">
<title>scalaz.Functor[F$macro$9]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-39783.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-39787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$9]</text>
<text text-anchor="middle" x="652.6596" y="-39772.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(Int, String),monocle.function.MMap[Int,String]] -->
<g id="node396" class="node">
<title>org.scalacheck.util.Buildable[(Int, String),monocle.function.MMap[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-12123.8701" rx="318.8103" ry="26.7407"/>
<text text-anchor="start" x="5644.5954" y="-12127.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(Int, String),monocle.function.MMap[Int,String]]</text>
<text text-anchor="middle" x="5862.0954" y="-12112.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(Int, String),monocle.function.MMap[Int,String]] -->
<g id="node883" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(Int, String),monocle.function.MMap[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-12123.8701" rx="365.6484" ry="26.7407"/>
<text text-anchor="start" x="6795.514" y="-12127.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(Int, String),monocle.function.MMap[Int,String]]</text>
<text text-anchor="middle" x="7046.014" y="-12112.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(Int, String),monocle.function.MMap[Int,String]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Int, String),monocle.function.MMap[Int,String]] -->
<g id="edge735" class="edge">
<title>org.scalacheck.util.Buildable[(Int, String),monocle.function.MMap[Int,String]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Int, String),monocle.function.MMap[Int,String]]</title>
<path fill="none" stroke="#000000" d="M6181.311,-12123.8701C6331.9271,-12123.8701 6512.691,-12123.8701 6669.915,-12123.8701"/>
<polygon fill="#000000" stroke="#000000" points="6670.2365,-12127.3702 6680.2365,-12123.8701 6670.2365,-12120.3702 6670.2365,-12127.3702"/>
</g>
<!-- List[(K, V)] =&gt; Traversable[(K, V)] -->
<g id="node397" class="node">
<title>List[(K, V)] =&gt; Traversable[(K, V)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-29235.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="1762.534" y="-29239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[(K, V)] =&gt; Traversable[(K, V)]</text>
<text text-anchor="middle" x="1862.034" y="-29224.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._3.N,String] -->
<g id="node398" class="node">
<title>shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._3.N,String]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-39855.8701" rx="378.1044" ry="26.7407"/>
<text text-anchor="start" x="1602.534" y="-39859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._3.N,String]</text>
<text text-anchor="middle" x="1862.034" y="-39844.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Unzip[[β$1$]monocle.Getter[String,β$1$]] -->
<g id="node399" class="node">
<title>scalaz.Unzip[[β$1$]monocle.Getter[String,β$1$]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-39927.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="515.6596" y="-39931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Unzip[[β$1$]monocle.Getter[String,β$1$]]</text>
<text text-anchor="middle" x="652.6596" y="-39916.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[List[Int] \/ List[Int]] -->
<g id="node400" class="node">
<title>scalaz.Equal[List[Int] \/ List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-21213.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="4496.753" y="-21217.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[List[Int] / List[Int]]</text>
<text text-anchor="middle" x="4586.253" y="-21202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- scalaz.Order[List[Int]] -->
<g id="node1317" class="node">
<title>scalaz.Order[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-21247.8701" rx="98.0761" ry="26.7407"/>
<text text-anchor="start" x="5800.5954" y="-21251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[List[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-21236.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 16ms</text>
</g>
<!-- scalaz.Equal[List[Int] \/ List[Int]]&#45;&gt;scalaz.Order[List[Int]] -->
<g id="edge309" class="edge">
<title>scalaz.Equal[List[Int] \/ List[Int]]&#45;&gt;scalaz.Order[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4723.0931,-21217.5167C4978.3533,-21224.3192 5522.1969,-21238.8121 5753.9083,-21244.987"/>
<polygon fill="#000000" stroke="#000000" points="5753.9436,-21248.4891 5764.0333,-21245.2568 5754.1302,-21241.4915 5753.9436,-21248.4891"/>
</g>
<!-- scalaz.Equal[List[Int] \/ List[Int]]&#45;&gt;scalaz.Equal[List[Int]] -->
<g id="edge1051" class="edge">
<title>scalaz.Equal[List[Int] \/ List[Int]]&#45;&gt;scalaz.Equal[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4709.9935,-21201.9147C4880.9005,-21188.4106 5176.4402,-21176.8843 5249.5191,-21249.8701 5272.1959,-21272.5179 5234.9019,-21371.1627 5257.5191,-21393.8701 5325.3399,-21461.9611 5604.5681,-21451.1655 5758.7071,-21439.4247"/>
<polygon fill="#000000" stroke="#000000" points="5759.4311,-21442.879 5769.1298,-21438.6148 5758.8887,-21435.9001 5759.4311,-21442.879"/>
</g>
<!-- org.scalacheck.Cogen[(A, Stream[scalaz.Cofree[Stream,A]])] -->
<g id="node401" class="node">
<title>org.scalacheck.Cogen[(A, Stream[scalaz.Cofree[Stream,A]])]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-27520.8701" rx="250.1317" ry="26.7407"/>
<text text-anchor="start" x="2997.8678" y="-27524.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(A, Stream[scalaz.Cofree[Stream,A]])]</text>
<text text-anchor="middle" x="3166.8678" y="-27509.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 12ms</text>
</g>
<!-- org.scalacheck.Cogen[(A, Stream[scalaz.Cofree[Stream,A]])]&#45;&gt;org.scalacheck.Cogen[A] -->
<g id="edge702" class="edge">
<title>org.scalacheck.Cogen[(A, Stream[scalaz.Cofree[Stream,A]])]&#45;&gt;org.scalacheck.Cogen[A]</title>
<path fill="none" stroke="#000000" d="M3415.034,-27524.5674C3562.5973,-27526.5804 3753.4746,-27528.8613 3922.9868,-27529.8701 5053.4934,-27536.598 5336.6893,-27564.9445 6466.6717,-27529.8701 6628.2848,-27524.8536 6814.8915,-27511.9838 6931.6776,-27503.0755"/>
<polygon fill="#000000" stroke="#000000" points="6932.0054,-27506.5607 6941.7087,-27502.3069 6931.4706,-27499.5812 6932.0054,-27506.5607"/>
</g>
<!-- org.scalacheck.Cogen[Stream[scalaz.Cofree[Stream,A]]] -->
<g id="node1272" class="node">
<title>org.scalacheck.Cogen[Stream[scalaz.Cofree[Stream,A]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-27493.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="4430.253" y="-27497.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Stream[scalaz.Cofree[Stream,A]]]</text>
<text text-anchor="middle" x="4586.253" y="-27482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- org.scalacheck.Cogen[(A, Stream[scalaz.Cofree[Stream,A]])]&#45;&gt;org.scalacheck.Cogen[Stream[scalaz.Cofree[Stream,A]]] -->
<g id="edge811" class="edge">
<title>org.scalacheck.Cogen[(A, Stream[scalaz.Cofree[Stream,A]])]&#45;&gt;org.scalacheck.Cogen[Stream[scalaz.Cofree[Stream,A]]]</title>
<path fill="none" stroke="#000000" d="M3413.7004,-27516.1747C3675.9103,-27511.1869 4087.6293,-27503.355 4346.9379,-27498.4224"/>
<polygon fill="#000000" stroke="#000000" points="4347.3169,-27501.9159 4357.2485,-27498.2263 4347.1837,-27494.9172 4347.3169,-27501.9159"/>
</g>
<!-- org.scalacheck.Arbitrary[((Boolean, Int)) =&gt; (Boolean, Int)] -->
<g id="node402" class="node">
<title>org.scalacheck.Arbitrary[((Boolean, Int)) =&gt; (Boolean, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-12897.8701" rx="244.818" ry="26.7407"/>
<text text-anchor="start" x="4421.253" y="-12901.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Boolean, Int)) =&gt; (Boolean, Int)]</text>
<text text-anchor="middle" x="4586.253" y="-12886.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 101ms</text>
</g>
<!-- org.scalacheck.Cogen[(Boolean, Int)] -->
<g id="node635" class="node">
<title>org.scalacheck.Cogen[(Boolean, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-9757.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="5759.5954" y="-9761.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Boolean, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-9746.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 27ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Boolean, Int)) =&gt; (Boolean, Int)]&#45;&gt;org.scalacheck.Cogen[(Boolean, Int)] -->
<g id="edge35" class="edge">
<title>org.scalacheck.Arbitrary[((Boolean, Int)) =&gt; (Boolean, Int)]&#45;&gt;org.scalacheck.Cogen[(Boolean, Int)]</title>
<path fill="none" stroke="#000000" d="M4664.8604,-12923.3694C4805.2108,-12963.396 5098.3384,-13021.0627 5249.5191,-12861.8701 5264.1907,-12846.421 5242.8882,-9809.3576 5257.5191,-9793.8701 5317.5318,-9730.3438 5554.5074,-9734.1369 5713.3335,-9744.6096"/>
<polygon fill="#000000" stroke="#000000" points="5713.4662,-9748.1264 5723.6793,-9745.3084 5713.938,-9741.1423 5713.4662,-9748.1264"/>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, Int)] -->
<g id="node764" class="node">
<title>org.scalacheck.Arbitrary[(Boolean, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-12969.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="5752.0954" y="-12973.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Boolean, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-12958.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 119ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Boolean, Int)) =&gt; (Boolean, Int)]&#45;&gt;org.scalacheck.Arbitrary[(Boolean, Int)] -->
<g id="edge5" class="edge">
<title>org.scalacheck.Arbitrary[((Boolean, Int)) =&gt; (Boolean, Int)]&#45;&gt;org.scalacheck.Arbitrary[(Boolean, Int)]</title>
<path fill="none" stroke="#000000" d="M4804.1284,-12910.1655C5056.2404,-12924.393 5465.9203,-12947.5126 5694.4576,-12960.4097"/>
<polygon fill="#000000" stroke="#000000" points="5694.3475,-12963.909 5704.5289,-12960.9781 5694.742,-12956.9201 5694.3475,-12963.909"/>
</g>
<!-- scala.reflect.ClassTag[((Boolean, Int)) =&gt; (Boolean, Int)] -->
<g id="node1129" class="node">
<title>scala.reflect.ClassTag[((Boolean, Int)) =&gt; (Boolean, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-12897.8701" rx="234.1047" ry="26.7407"/>
<text text-anchor="start" x="5704.5954" y="-12901.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Boolean, Int)) =&gt; (Boolean, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-12886.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Boolean, Int)) =&gt; (Boolean, Int)]&#45;&gt;scala.reflect.ClassTag[((Boolean, Int)) =&gt; (Boolean, Int)] -->
<g id="edge668" class="edge">
<title>org.scalacheck.Arbitrary[((Boolean, Int)) =&gt; (Boolean, Int)]&#45;&gt;scala.reflect.ClassTag[((Boolean, Int)) =&gt; (Boolean, Int)]</title>
<path fill="none" stroke="#000000" d="M4831.1157,-12897.8701C5057.435,-12897.8701 5391.9113,-12897.8701 5617.9891,-12897.8701"/>
<polygon fill="#000000" stroke="#000000" points="5617.9993,-12901.3702 5627.9993,-12897.8701 5617.9993,-12894.3702 5617.9993,-12901.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.ExampleObject.type] -->
<g id="node403" class="node">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.ExampleObject.type]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-39999.8701" rx="321.053" ry="26.7407"/>
<text text-anchor="start" x="433.6596" y="-40003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.ExampleObject.type]</text>
<text text-anchor="middle" x="652.6596" y="-39988.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.ExampleObject.type] -->
<g id="node826" class="node">
<title>scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.ExampleObject.type]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-39999.8701" rx="310.3398" ry="26.7407"/>
<text text-anchor="start" x="1650.534" y="-40003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.ExampleObject.type]</text>
<text text-anchor="middle" x="1862.034" y="-39988.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.ExampleObject.type]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.ExampleObject.type] -->
<g id="edge1072" class="edge">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.ExampleObject.type]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.ExampleObject.type]</title>
<path fill="none" stroke="#000000" d="M973.971,-39999.8701C1149.4411,-39999.8701 1366.0498,-39999.8701 1541.412,-39999.8701"/>
<polygon fill="#000000" stroke="#000000" points="1541.5775,-40003.3702 1551.5775,-39999.8701 1541.5774,-39996.3702 1541.5775,-40003.3702"/>
</g>
<!-- monocle.function.Snoc[Stream[Int],Int] -->
<g id="node404" class="node">
<title>monocle.function.Snoc[Stream[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-40071.8701" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="543.6596" y="-40075.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc[Stream[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-40060.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[List[Int],List[Int]] -->
<g id="node405" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[List[Int],List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-32907.8701" rx="207.7788" ry="26.7407"/>
<text text-anchor="start" x="1723.034" y="-32911.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[List[Int],List[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-32896.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[List[Int],List[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,List[Int],List[Int]] -->
<g id="edge1263" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[List[Int],List[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,List[Int],List[Int]]</title>
<path fill="none" stroke="#000000" d="M2070.2316,-32907.8701C2285.8841,-32907.8701 2624.8531,-32907.8701 2868.8613,-32907.8701"/>
<polygon fill="#000000" stroke="#000000" points="2868.9529,-32911.3702 2878.9529,-32907.8701 2868.9528,-32904.3702 2868.9529,-32911.3702"/>
</g>
<!-- scala.reflect.ClassTag[(Stream[Int], Int)] -->
<g id="node406" class="node">
<title>scala.reflect.ClassTag[(Stream[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-10883.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="5750.5954" y="-10887.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Stream[Int], Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-10872.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Int :: shapeless.HNil,Char :: Float :: Long :: Double :: shapeless.HNil,Out] -->
<g id="edge904" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Int :: shapeless.HNil,Char :: Float :: Long :: Double :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M3655.8364,-29559.8701C3795.3024,-29559.8701 3947.3981,-29559.8701 4087.4434,-29559.8701"/>
<polygon fill="#000000" stroke="#000000" points="4087.5055,-29563.3702 4097.5055,-29559.8701 4087.5054,-29556.3702 4087.5055,-29563.3702"/>
</g>
<!-- org.scalacheck.Cogen[monocle.refined.EndsWithString[String(&#39;world&#39;)]]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge1115" class="edge">
<title>org.scalacheck.Cogen[monocle.refined.EndsWithString[String(&#39;world&#39;)]]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M6086.0654,-3452.5923C6236.2458,-3446.5174 6415.5627,-3451.8148 6466.6717,-3505.8701 6477.7024,-3517.5366 6465.8805,-5804.4351 6474.6717,-5817.8701 6574.4955,-5970.4239 6789.7156,-6031.295 6925.6482,-6055.1064"/>
<polygon fill="#000000" stroke="#000000" points="6925.2545,-6058.5898 6935.7013,-6056.8253 6926.4343,-6051.6899 6925.2545,-6058.5898"/>
</g>
<!-- org.scalacheck.Cogen[monocle.refined.EndsWithString[String(&#39;world&#39;)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge383" class="edge">
<title>org.scalacheck.Cogen[monocle.refined.EndsWithString[String(&#39;world&#39;)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M6086.4107,-3487.1139C6236.4839,-3493.1389 6415.5201,-3487.7945 6466.6717,-3433.8701 6478.0656,-3421.8585 6465.5841,-2255.7089 6474.6717,-2241.8701 6564.4387,-2105.1709 6746.798,-2042.0732 6881.4589,-2013.3018"/>
<polygon fill="#000000" stroke="#000000" points="6882.4056,-2016.6796 6891.4768,-2011.2057 6880.9719,-2009.828 6882.4056,-2016.6796"/>
</g>
<!-- scala.reflect.ClassTag[(Unit, Int)] -->
<g id="node410" class="node">
<title>scala.reflect.ClassTag[(Unit, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-16055.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="6954.014" y="-16059.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Unit, Int)]</text>
<text text-anchor="middle" x="7046.014" y="-16044.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String, Char)] -->
<g id="node411" class="node">
<title>org.scalacheck.Arbitrary[(String, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-4663.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="5752.0954" y="-4667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(String, Char)]</text>
<text text-anchor="middle" x="5862.0954" y="-4652.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String, Char)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge602" class="edge">
<title>org.scalacheck.Arbitrary[(String, Char)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6007.9303,-4650.803C6166.7572,-4640.1842 6406.2921,-4635.9493 6466.6717,-4699.8701 6481.8456,-4715.9338 6462.2253,-7863.6114 6474.6717,-7881.8701 6571.6067,-8024.0719 6773.2876,-8076.7989 6909.1865,-8096.3494"/>
<polygon fill="#000000" stroke="#000000" points="6908.875,-8099.8398 6919.2629,-8097.7557 6909.8427,-8092.907 6908.875,-8099.8398"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Char)]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge1339" class="edge">
<title>org.scalacheck.Arbitrary[(String, Char)]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M6011.336,-4651.7381C6169.0412,-4642.4553 6403.5451,-4639.8944 6466.6717,-4699.8701 6490.0135,-4722.0467 6451.3682,-4749.6532 6474.6717,-4771.8701 6535.3661,-4829.7344 6764.2961,-4826.956 6913.2978,-4818.3403"/>
<polygon fill="#000000" stroke="#000000" points="6913.6642,-4821.8248 6923.439,-4817.7378 6913.249,-4814.8371 6913.6642,-4821.8248"/>
</g>
<!-- scala.reflect.ClassTag[(String, Char)] -->
<g id="node894" class="node">
<title>scala.reflect.ClassTag[(String, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-4663.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="6943.514" y="-4667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(String, Char)]</text>
<text text-anchor="middle" x="7046.014" y="-4652.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String, Char)]&#45;&gt;scala.reflect.ClassTag[(String, Char)] -->
<g id="edge794" class="edge">
<title>org.scalacheck.Arbitrary[(String, Char)]&#45;&gt;scala.reflect.ClassTag[(String, Char)]</title>
<path fill="none" stroke="#000000" d="M6029.211,-4663.8701C6254.7302,-4663.8701 6654.1235,-4663.8701 6879.3898,-4663.8701"/>
<polygon fill="#000000" stroke="#000000" points="6879.6518,-4667.3702 6889.6518,-4663.8701 6879.6517,-4660.3702 6879.6518,-4667.3702"/>
</g>
<!-- shapeless.Generic.Aux[Int ==&gt;&gt; String,SGen] -->
<g id="node412" class="node">
<title>shapeless.Generic.Aux[Int ==&gt;&gt; String,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-40143.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="1734.034" y="-40147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Int ==&gt;&gt; String,SGen]</text>
<text text-anchor="middle" x="1862.034" y="-40132.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- monocle.Quintary =&gt; ?{def shouldEqual: ?} -->
<g id="node413" class="node">
<title>monocle.Quintary =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-25689.8701" rx="184.6098" ry="26.7407"/>
<text text-anchor="start" x="530.1596" y="-25693.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Quintary =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-25678.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.Quintary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge446" class="edge">
<title>monocle.Quintary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M829.7553,-25697.5743C962.5195,-25699.1679 1147.6954,-25692.4568 1305.3191,-25653.8701 1503.7302,-25605.2984 1718.602,-25487.2417 1812.9404,-25431.6954"/>
<polygon fill="#000000" stroke="#000000" points="1814.8646,-25434.6237 1821.689,-25426.5195 1811.3003,-25428.599 1814.8646,-25434.6237"/>
</g>
<!-- monocle.Quintary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge833" class="edge">
<title>monocle.Quintary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M808.5832,-25704.3324C979.7003,-25716.3692 1238.9905,-25722.0368 1305.3191,-25653.8701 1327.6438,-25630.9267 1291.1142,-25388.9293 1313.3191,-25365.8701 1433.4425,-25241.125 1658.8419,-25275.0916 1780.0063,-25305.4806"/>
<polygon fill="#000000" stroke="#000000" points="1779.4176,-25308.9427 1789.9732,-25308.0314 1781.1532,-25302.1613 1779.4176,-25308.9427"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[HListSpec.this.H,HListSpec.this.ReverseH] -->
<g id="node414" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[HListSpec.this.H,HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-23673.8701" rx="307.6829" ry="26.7407"/>
<text text-anchor="start" x="1652.534" y="-23677.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[HListSpec.this.H,HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="1862.034" y="-23662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.H,HListSpec.this.ReverseH] -->
<g id="node1422" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.H,HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-23673.8701" rx="387.489" ry="26.7407"/>
<text text-anchor="start" x="2900.8678" y="-23677.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.H,HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="3166.8678" y="-23662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[HListSpec.this.H,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.H,HListSpec.this.ReverseH] -->
<g id="edge401" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[HListSpec.this.H,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.H,HListSpec.this.ReverseH]</title>
<path fill="none" stroke="#000000" d="M2170.0219,-23673.8701C2349.0662,-23673.8701 2576.6303,-23673.8701 2769.1143,-23673.8701"/>
<polygon fill="#000000" stroke="#000000" points="2769.1222,-23677.3702 2779.1222,-23673.8701 2769.1222,-23670.3702 2769.1222,-23677.3702"/>
</g>
<!-- scala.reflect.ClassTag[List[(K, V)]] -->
<g id="node415" class="node">
<title>scala.reflect.ClassTag[List[(K, V)]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-29163.8701" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="1764.534" y="-29167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[List[(K, V)]]</text>
<text text-anchor="middle" x="1862.034" y="-29152.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.reflect.ClassTag[(scalaz.IList[Char], Char)] -->
<g id="node416" class="node">
<title>scala.reflect.ClassTag[(scalaz.IList[Char], Char)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-4481.8701" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="5727.5954" y="-4485.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(scalaz.IList[Char], Char)]</text>
<text text-anchor="middle" x="5862.0954" y="-4470.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[(String, String)] -->
<g id="node417" class="node">
<title>scalaz.Equal[(String, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-20167.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="5782.0954" y="-20171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(String, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-20156.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[(String, String)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge236" class="edge">
<title>scalaz.Equal[(String, String)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M5986.5578,-20167.8701C6222.5126,-20167.8701 6730.541,-20167.8701 6946.0684,-20167.8701"/>
<polygon fill="#000000" stroke="#000000" points="6946.1083,-20171.3702 6956.1082,-20167.8701 6946.1082,-20164.3702 6946.1083,-20171.3702"/>
</g>
<!-- org.scalacheck.Cogen[((Int, Char, Boolean, String, Long), Float)] -->
<g id="node418" class="node">
<title>org.scalacheck.Cogen[((Int, Char, Boolean, String, Long), Float)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-4699.8701" rx="265.7444" ry="26.7407"/>
<text text-anchor="start" x="4406.253" y="-4703.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[((Int, Char, Boolean, String, Long), Float)]</text>
<text text-anchor="middle" x="4586.253" y="-4688.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- org.scalacheck.Cogen[((Int, Char, Boolean, String, Long), Float)]&#45;&gt;org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)] -->
<g id="edge1319" class="edge">
<title>org.scalacheck.Cogen[((Int, Char, Boolean, String, Long), Float)]&#45;&gt;org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)]</title>
<path fill="none" stroke="#000000" d="M4786.0682,-4682.0869C4957.976,-4671.7302 5187.7667,-4671.3621 5249.5191,-4735.8701 5264.0416,-4751.0406 5243.5173,-5476.2176 5257.5191,-5491.8701 5305.2447,-5545.222 5471.5878,-5562.8397 5617.7347,-5567.5979"/>
<polygon fill="#000000" stroke="#000000" points="5617.6725,-5571.0975 5627.7751,-5567.9058 5617.8871,-5564.1008 5617.6725,-5571.0975"/>
</g>
<!-- org.scalacheck.Cogen[Float] -->
<g id="node927" class="node">
<title>org.scalacheck.Cogen[Float]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-3651.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="6967.514" y="-3655.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Float]</text>
<text text-anchor="middle" x="7046.014" y="-3640.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 18ms</text>
</g>
<!-- org.scalacheck.Cogen[((Int, Char, Boolean, String, Long), Float)]&#45;&gt;org.scalacheck.Cogen[Float] -->
<g id="edge742" class="edge">
<title>org.scalacheck.Cogen[((Int, Char, Boolean, String, Long), Float)]&#45;&gt;org.scalacheck.Cogen[Float]</title>
<path fill="none" stroke="#000000" d="M4785.688,-4717.6626C4957.6657,-4728.0674 5187.7939,-4728.5037 5249.5191,-4663.8701 5268.244,-4644.2629 5238.4627,-3707.1552 5257.5191,-3687.8701 5286.566,-3658.4746 6504.3313,-3653.0735 6913.501,-3652.0881"/>
<polygon fill="#000000" stroke="#000000" points="6913.6128,-3655.5879 6923.6045,-3652.0642 6913.5962,-3648.5879 6913.6128,-3655.5879"/>
</g>
<!-- scala.reflect.ClassTag[monocle.Binary] -->
<g id="node419" class="node">
<title>scala.reflect.ClassTag[monocle.Binary]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-16805.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="6937.514" y="-16809.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[monocle.Binary]</text>
<text text-anchor="middle" x="7046.014" y="-16794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCase,Unit]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCase,_$1] -->
<g id="node420" class="node">
<title>(=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCase,Unit]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCase,_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-40215.8701" rx="540.8734" ry="26.7407"/>
<text text-anchor="start" x="278.1596" y="-40219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCase,Unit]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCase,_$1]</text>
<text text-anchor="middle" x="652.6596" y="-40204.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[(Vector[Int], Int)] -->
<g id="node421" class="node">
<title>org.scalacheck.Cogen[(Vector[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-11412.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="4475.753" y="-11416.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Vector[Int], Int)]</text>
<text text-anchor="middle" x="4586.253" y="-11401.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Cogen[(Vector[Int], Int)]&#45;&gt;org.scalacheck.Cogen[Vector[Int]] -->
<g id="edge928" class="edge">
<title>org.scalacheck.Cogen[(Vector[Int], Int)]&#45;&gt;org.scalacheck.Cogen[Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M4752.7197,-11416.132C5000.9854,-11420.9967 5464.8704,-11430.0865 5706.6011,-11434.8232"/>
<polygon fill="#000000" stroke="#000000" points="5706.812,-11438.3279 5716.8787,-11435.0246 5706.9492,-11431.3292 5706.812,-11438.3279"/>
</g>
<!-- org.scalacheck.Cogen[(Vector[Int], Int)]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge1070" class="edge">
<title>org.scalacheck.Cogen[(Vector[Int], Int)]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M4730.4433,-11426.6046C4903.7479,-11439.5741 5179.9921,-11447.7947 5249.5191,-11376.8701 5267.6529,-11358.3717 5239.1982,-11162.1831 5257.5191,-11143.8701 5305.0565,-11096.3529 6404.6412,-11128.7527 6466.6717,-11102.8701 6735.2308,-10990.8121 6953.6283,-10693.5453 7022.9532,-10591.1315"/>
<polygon fill="#000000" stroke="#000000" points="7025.9584,-10592.9346 7028.6324,-10582.6827 7020.1489,-10589.0295 7025.9584,-10592.9346"/>
</g>
<!-- org.scalactic.Equality[monocle.Iso[monocle.Unary,Int]] -->
<g id="node422" class="node">
<title>org.scalactic.Equality[monocle.Iso[monocle.Unary,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-16932.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="3013.3678" y="-16936.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[monocle.Iso[monocle.Unary,Int]]</text>
<text text-anchor="middle" x="3166.8678" y="-16921.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 21ms</text>
</g>
<!-- org.scalactic.Equality[monocle.Iso[monocle.Unary,Int]]&#45;&gt;scalaz.Equal[monocle.Iso[monocle.Unary,Int]] -->
<g id="edge149" class="edge">
<title>org.scalactic.Equality[monocle.Iso[monocle.Unary,Int]]&#45;&gt;scalaz.Equal[monocle.Iso[monocle.Unary,Int]]</title>
<path fill="none" stroke="#000000" d="M3383.9869,-16924.4569C3657.9961,-16913.8392 4125.3132,-16895.7311 4389.3775,-16885.4988"/>
<polygon fill="#000000" stroke="#000000" points="4389.6053,-16888.9927 4399.4623,-16885.108 4389.3342,-16881.998 4389.6053,-16888.9927"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P) -->
<g id="node424" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-40287.8701" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="455.6596" y="-40291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-40276.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((monocle.function.CList, Char)) =&gt; (monocle.function.CList, Char)] -->
<g id="node425" class="node">
<title>org.scalacheck.Arbitrary[((monocle.function.CList, Char)) =&gt; (monocle.function.CList, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-2529.8701" rx="380.3469" ry="26.7407"/>
<text text-anchor="start" x="4325.253" y="-2533.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((monocle.function.CList, Char)) =&gt; (monocle.function.CList, Char)]</text>
<text text-anchor="middle" x="4586.253" y="-2518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 25ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((monocle.function.CList, Char)) =&gt; (monocle.function.CList, Char)]&#45;&gt;org.scalacheck.Arbitrary[(monocle.function.CList, Char)] -->
<g id="edge1118" class="edge">
<title>org.scalacheck.Arbitrary[((monocle.function.CList, Char)) =&gt; (monocle.function.CList, Char)]&#45;&gt;org.scalacheck.Arbitrary[(monocle.function.CList, Char)]</title>
<path fill="none" stroke="#000000" d="M4883.7711,-2513.0801C5115.4191,-2500.0075 5431.7592,-2482.1554 5641.2553,-2470.3328"/>
<polygon fill="#000000" stroke="#000000" points="5641.6745,-2473.8148 5651.4614,-2469.7568 5641.28,-2466.8259 5641.6745,-2473.8148"/>
</g>
<!-- org.scalacheck.Arbitrary[((monocle.function.CList, Char)) =&gt; (monocle.function.CList, Char)]&#45;&gt;scala.reflect.ClassTag[((monocle.function.CList, Char)) =&gt; (monocle.function.CList, Char)] -->
<g id="edge261" class="edge">
<title>org.scalacheck.Arbitrary[((monocle.function.CList, Char)) =&gt; (monocle.function.CList, Char)]&#45;&gt;scala.reflect.ClassTag[((monocle.function.CList, Char)) =&gt; (monocle.function.CList, Char)]</title>
<path fill="none" stroke="#000000" d="M4966.8879,-2529.8701C5129.625,-2529.8701 5319.198,-2529.8701 5481.8881,-2529.8701"/>
<polygon fill="#000000" stroke="#000000" points="5482.0711,-2533.3702 5492.0711,-2529.8701 5482.071,-2526.3702 5482.0711,-2533.3702"/>
</g>
<!-- org.scalacheck.Cogen[(monocle.function.CList, Char)] -->
<g id="node599" class="node">
<title>org.scalacheck.Cogen[(monocle.function.CList, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-2673.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="5711.5954" y="-2677.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(monocle.function.CList, Char)]</text>
<text text-anchor="middle" x="5862.0954" y="-2662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((monocle.function.CList, Char)) =&gt; (monocle.function.CList, Char)]&#45;&gt;org.scalacheck.Cogen[(monocle.function.CList, Char)] -->
<g id="edge358" class="edge">
<title>org.scalacheck.Arbitrary[((monocle.function.CList, Char)) =&gt; (monocle.function.CList, Char)]&#45;&gt;org.scalacheck.Cogen[(monocle.function.CList, Char)]</title>
<path fill="none" stroke="#000000" d="M4718.1835,-2555.1021C4853.1628,-2579.9719 5069.2028,-2617.1668 5257.5191,-2637.8701 5382.5628,-2651.6172 5522.7743,-2660.3778 5636.6661,-2665.8103"/>
<polygon fill="#000000" stroke="#000000" points="5636.7514,-2669.3181 5646.9052,-2666.2931 5637.0812,-2662.3258 5636.7514,-2669.3181"/>
</g>
<!-- shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1] -->
<g id="node426" class="node">
<title>shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-34581.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="5641.0954" y="-34585.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1]</text>
<text text-anchor="middle" x="5862.0954" y="-34570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.At[Long :: Double :: shapeless.HNil,shapeless._0] -->
<g id="node1157" class="node">
<title>shapeless.ops.hlist.At[Long :: Double :: shapeless.HNil,shapeless._0]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-34581.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="6856.514" y="-34585.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Long :: Double :: shapeless.HNil,shapeless._0]</text>
<text text-anchor="middle" x="7046.014" y="-34570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1]&#45;&gt;shapeless.ops.hlist.At[Long :: Double :: shapeless.HNil,shapeless._0] -->
<g id="edge1293" class="edge">
<title>shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1]&#45;&gt;shapeless.ops.hlist.At[Long :: Double :: shapeless.HNil,shapeless._0]</title>
<path fill="none" stroke="#000000" d="M6185.9977,-34581.8701C6364.2136,-34581.8701 6583.5223,-34581.8701 6756.07,-34581.8701"/>
<polygon fill="#000000" stroke="#000000" points="6756.3253,-34585.3702 6766.3253,-34581.8701 6756.3253,-34578.3702 6756.3253,-34585.3702"/>
</g>
<!-- scalaz.Functor[F$macro$19] -->
<g id="node427" class="node">
<title>scalaz.Functor[F$macro$19]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-40359.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="574.1596" y="-40363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$19]</text>
<text text-anchor="middle" x="652.6596" y="-40348.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit]] -->
<g id="node428" class="node">
<title>org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-16150.8701" rx="337.9941" ry="26.7407"/>
<text text-anchor="start" x="1631.034" y="-16154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit]]</text>
<text text-anchor="middle" x="1862.034" y="-16139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit]] -->
<g id="node876" class="node">
<title>scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-16150.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="2960.8678" y="-16154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit]]</text>
<text text-anchor="middle" x="3166.8678" y="-16139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit]]&#45;&gt;scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit]] -->
<g id="edge1368" class="edge">
<title>org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit]]&#45;&gt;scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit]]</title>
<path fill="none" stroke="#000000" d="M2200.1827,-16150.8701C2402.0631,-16150.8701 2656.6901,-16150.8701 2853.9331,-16150.8701"/>
<polygon fill="#000000" stroke="#000000" points="2854.1689,-16154.3702 2864.1689,-16150.8701 2854.1688,-16147.3702 2854.1689,-16154.3702"/>
</g>
<!-- monocle.Point =&gt; ?{def shouldEqual: ?} -->
<g id="node429" class="node">
<title>monocle.Point =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-25617.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="539.6596" y="-25621.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Point =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-25606.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- monocle.Point =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge1061" class="edge">
<title>monocle.Point =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M823.119,-25620.4069C955.6481,-25619.5145 1143.5463,-25611.9617 1305.3191,-25581.8701 1489.3755,-25547.6334 1696.9658,-25469.3969 1798.8049,-25428.2605"/>
<polygon fill="#000000" stroke="#000000" points="1800.3751,-25431.4006 1808.3259,-25424.3981 1797.7436,-25424.914 1800.3751,-25431.4006"/>
</g>
<!-- monocle.Point =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1058" class="edge">
<title>monocle.Point =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M799.7507,-25631.6031C970.5354,-25643.9441 1237.533,-25650.8932 1305.3191,-25581.8701 1322.1471,-25564.735 1296.5806,-25383.0925 1313.3191,-25365.8701 1434.0181,-25241.6819 1659.1774,-25275.4162 1780.1529,-25305.6225"/>
<polygon fill="#000000" stroke="#000000" points="1779.5494,-25309.0805 1790.104,-25308.158 1781.2779,-25302.2972 1779.5494,-25309.0805"/>
</g>
<!-- scalaz.Equal[Double] -->
<g id="node430" class="node">
<title>scalaz.Equal[Double]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-18240.8701" rx="94.5053" ry="26.7407"/>
<text text-anchor="start" x="6987.014" y="-18244.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Double]</text>
<text text-anchor="middle" x="7046.014" y="-18229.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 4ms</text>
</g>
<!-- scala.reflect.ClassTag[monocle.function.CList] -->
<g id="node959" class="node">
<title>scala.reflect.ClassTag[monocle.function.CList]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-2421.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="8067.1985" y="-2425.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[monocle.function.CList]</text>
<text text-anchor="middle" x="8196.6985" y="-2410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 7ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.CList]&#45;&gt;scala.reflect.ClassTag[monocle.function.CList] -->
<g id="edge1140" class="edge">
<title>org.scalacheck.Arbitrary[monocle.function.CList]&#45;&gt;scala.reflect.ClassTag[monocle.function.CList]</title>
<path fill="none" stroke="#000000" d="M7251.4016,-2421.8701C7460.6038,-2421.8701 7783.1228,-2421.8701 7992.0557,-2421.8701"/>
<polygon fill="#000000" stroke="#000000" points="7992.2285,-2425.3702 8002.2285,-2421.8701 7992.2284,-2418.3702 7992.2285,-2425.3702"/>
</g>
<!-- shapeless.ops.hlist.Init[Char :: Float :: Long :: Double :: shapeless.HNil] -->
<g id="node432" class="node">
<title>shapeless.ops.hlist.Init[Char :: Float :: Long :: Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-33654.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="4387.753" y="-33658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init[Char :: Float :: Long :: Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="4586.253" y="-33643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 18ms</text>
</g>
<!-- shapeless.ops.hlist.Init[Float :: Long :: Double :: shapeless.HNil] -->
<g id="node1432" class="node">
<title>shapeless.ops.hlist.Init[Float :: Long :: Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-33654.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="5684.5954" y="-33658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init[Float :: Long :: Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="5862.0954" y="-33643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 14ms</text>
</g>
<!-- shapeless.ops.hlist.Init[Char :: Float :: Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Init[Float :: Long :: Double :: shapeless.HNil] -->
<g id="edge769" class="edge">
<title>shapeless.ops.hlist.Init[Char :: Float :: Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Init[Float :: Long :: Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M4878.5569,-33654.8701C5092.3426,-33654.8701 5380.3109,-33654.8701 5589.3712,-33654.8701"/>
<polygon fill="#000000" stroke="#000000" points="5589.5786,-33658.3702 5599.5785,-33654.8701 5589.5785,-33651.3702 5589.5786,-33658.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Tree[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge826" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Tree[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6016.8564,-12407.7169C6175.5352,-12399.0547 6407.2661,-12398.2273 6466.6717,-12460.8701 6487.5084,-12482.8422 6459.1171,-12979.8894 6474.6717,-13005.8701 6578.7014,-13179.629 6815.5073,-13265.2064 6949.3002,-13301.0879"/>
<polygon fill="#000000" stroke="#000000" points="6948.5852,-13304.519 6959.1474,-13303.689 6950.3729,-13297.7511 6948.5852,-13304.519"/>
</g>
<!-- shapeless.Generic.Aux[Int :: Int :: Int :: shapeless.HNil,SGen] -->
<g id="node1398" class="node">
<title>shapeless.Generic.Aux[Int :: Int :: Int :: shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-27021.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="6876.014" y="-27025.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Int :: Int :: Int :: shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="7046.014" y="-27010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: Int :: Int :: shapeless.HNil,SGen] -->
<g id="edge1217" class="edge">
<title>monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: Int :: Int :: shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M6104.8938,-27021.8701C6302.5932,-27021.8701 6581.1518,-27021.8701 6783.8911,-27021.8701"/>
<polygon fill="#000000" stroke="#000000" points="6784.0934,-27025.3702 6794.0934,-27021.8701 6784.0933,-27018.3702 6784.0934,-27025.3702"/>
</g>
<!-- monocle.function.Each[Int :: Int :: shapeless.HNil,Int] -->
<g id="node1415" class="node">
<title>monocle.function.Each[Int :: Int :: shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-26949.8701" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="6897.514" y="-26953.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: Int :: shapeless.HNil,Int]</text>
<text text-anchor="middle" x="7046.014" y="-26938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 24ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: Int :: shapeless.HNil,Int] -->
<g id="edge325" class="edge">
<title>monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: Int :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M6076.5011,-27009.2383C6192.0884,-27002.3943 6337.1859,-26993.7483 6466.6717,-26985.8701 6590.1857,-26978.3552 6728.5,-26969.7669 6838.9999,-26962.8639"/>
<polygon fill="#000000" stroke="#000000" points="6839.504,-26966.3393 6849.2662,-26962.2224 6839.0674,-26959.353 6839.504,-26966.3393"/>
</g>
<!-- org.scalacheck.Arbitrary[Set[Int]] -->
<g id="node435" class="node">
<title>org.scalacheck.Arbitrary[Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-14163.8701" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="5769.5954" y="-14167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Set[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-14152.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 8ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Set[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge538" class="edge">
<title>org.scalacheck.Arbitrary[Set[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M5990.3269,-14175.5811C6148.2957,-14186.8503 6403.5565,-14193.7234 6466.6717,-14127.8701 6484.7416,-14109.0162 6461.4979,-13680.4186 6474.6717,-13657.8701 6579.7142,-13478.0769 6822.0477,-13385.0167 6954.8702,-13345.9505"/>
<polygon fill="#000000" stroke="#000000" points="6956.0034,-13349.2661 6964.6323,-13343.1185 6954.053,-13342.5433 6956.0034,-13349.2661"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[List,A]] -->
<g id="node436" class="node">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[List,A]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-28239.8701" rx="202.4653" ry="26.7407"/>
<text text-anchor="start" x="4451.253" y="-28243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.OneAnd[List,A]]</text>
<text text-anchor="middle" x="4586.253" y="-28228.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 26ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[List,A]]&#45;&gt;org.scalacheck.Arbitrary[A] -->
<g id="edge619" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[List,A]]&#45;&gt;org.scalacheck.Arbitrary[A]</title>
<path fill="none" stroke="#000000" d="M4767.0682,-28227.7618C4902.1226,-28219.3044 5091.2821,-28208.6966 5257.5191,-28203.8701 5878.0878,-28185.8525 6620.2746,-28191.0992 6915.5625,-28194.261"/>
<polygon fill="#000000" stroke="#000000" points="6915.8401,-28197.7641 6925.8774,-28194.3725 6915.9159,-28190.7645 6915.8401,-28197.7641"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[List,A]]&#45;&gt;scala.reflect.ClassTag[scalaz.OneAnd[List,A]] -->
<g id="edge288" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[List,A]]&#45;&gt;scala.reflect.ClassTag[scalaz.OneAnd[List,A]]</title>
<path fill="none" stroke="#000000" d="M4788.7663,-28239.8701C5027.4744,-28239.8701 5421.7642,-28239.8701 5660.2024,-28239.8701"/>
<polygon fill="#000000" stroke="#000000" points="5660.3795,-28243.3702 5670.3795,-28239.8701 5660.3794,-28236.3702 5660.3795,-28243.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[List[A]] -->
<g id="node685" class="node">
<title>org.scalacheck.Arbitrary[List[A]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-28349.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="5770.0954" y="-28353.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[List[A]]</text>
<text text-anchor="middle" x="5862.0954" y="-28338.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[List,A]]&#45;&gt;org.scalacheck.Arbitrary[List[A]] -->
<g id="edge195" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[List,A]]&#45;&gt;org.scalacheck.Arbitrary[List[A]]</title>
<path fill="none" stroke="#000000" d="M4756.0046,-28254.5056C5010.8826,-28276.4806 5487.6073,-28317.5826 5723.1213,-28337.888"/>
<polygon fill="#000000" stroke="#000000" points="5722.8553,-28341.378 5733.119,-28338.75 5723.4567,-28334.4039 5722.8553,-28341.378"/>
</g>
<!-- scalaz.Equal[IsoSpec.this.EmptyCaseType[Int]] -->
<g id="node437" class="node">
<title>scalaz.Equal[IsoSpec.this.EmptyCaseType[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-40431.8701" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="521.6596" y="-40435.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[IsoSpec.this.EmptyCaseType[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-40420.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.coproduct.Selector[CoproductSpec.this.IB,Boolean] -->
<g id="node438" class="node">
<title>shapeless.ops.coproduct.Selector[CoproductSpec.this.IB,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-40503.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="472.1596" y="-40507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Selector[CoproductSpec.this.IB,Boolean]</text>
<text text-anchor="middle" x="652.6596" y="-40492.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Boolean] -->
<g id="node1071" class="node">
<title>shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-40503.8701" rx="284.9281" ry="26.7407"/>
<text text-anchor="start" x="1668.534" y="-40507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Boolean]</text>
<text text-anchor="middle" x="1862.034" y="-40492.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.coproduct.Selector[CoproductSpec.this.IB,Boolean]&#45;&gt;shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Boolean] -->
<g id="edge1218" class="edge">
<title>shapeless.ops.coproduct.Selector[CoproductSpec.this.IB,Boolean]&#45;&gt;shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Boolean]</title>
<path fill="none" stroke="#000000" d="M919.5591,-40503.8701C1110.9989,-40503.8701 1368.9461,-40503.8701 1566.5872,-40503.8701"/>
<polygon fill="#000000" stroke="#000000" points="1566.841,-40507.3702 1576.841,-40503.8701 1566.841,-40500.3702 1566.841,-40507.3702"/>
</g>
<!-- Float =&gt; Int -->
<g id="node439" class="node">
<title>Float =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-40575.8701" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="609.1596" y="-40579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Float =&gt; Int</text>
<text text-anchor="middle" x="652.6596" y="-40564.6701" font-family="Times,serif" font-size="14.00" fill="#000000">19 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1] -->
<g id="node440" class="node">
<title>shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-32259.8701" rx="353.6068" ry="26.7407"/>
<text text-anchor="start" x="4344.253" y="-32263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1]</text>
<text text-anchor="middle" x="4586.253" y="-32248.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1]&#45;&gt;shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless._0] -->
<g id="edge1219" class="edge">
<title>shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1]&#45;&gt;shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless._0]</title>
<path fill="none" stroke="#000000" d="M4939.9519,-32259.8701C5128.5892,-32259.8701 5358.9057,-32259.8701 5542.1724,-32259.8701"/>
<polygon fill="#000000" stroke="#000000" points="5542.2398,-32263.3702 5552.2398,-32259.8701 5542.2397,-32256.3702 5542.2398,-32263.3702"/>
</g>
<!-- scala.reflect.ClassTag[IsoSpec.this.EmptyCaseType[Int]] -->
<g id="node441" class="node">
<title>scala.reflect.ClassTag[IsoSpec.this.EmptyCaseType[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-40647.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="1705.534" y="-40651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[IsoSpec.this.EmptyCaseType[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-40636.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Snoc1[scalaz.NonEmptyList[Char],scalaz.IList[Char],Char] -->
<g id="node442" class="node">
<title>monocle.function.Snoc1[scalaz.NonEmptyList[Char],scalaz.IList[Char],Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-31359.8701" rx="313.4968" ry="26.7407"/>
<text text-anchor="start" x="439.1596" y="-31363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc1[scalaz.NonEmptyList[Char],scalaz.IList[Char],Char]</text>
<text text-anchor="middle" x="652.6596" y="-31348.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- monocle.function.Snoc1[scalaz.NonEmptyList[Char],scalaz.IList[Char],Char]&#45;&gt;shapeless.ops.hlist.Init.Aux[scalaz.NonEmptyList[Char],scalaz.IList[Char]] -->
<g id="edge718" class="edge">
<title>monocle.function.Snoc1[scalaz.NonEmptyList[Char],scalaz.IList[Char],Char]&#45;&gt;shapeless.ops.hlist.Init.Aux[scalaz.NonEmptyList[Char],scalaz.IList[Char]]</title>
<path fill="none" stroke="#000000" d="M966.0699,-31359.8701C1145.003,-31359.8701 1368.6439,-31359.8701 1547.7263,-31359.8701"/>
<polygon fill="#000000" stroke="#000000" points="1547.8348,-31363.3702 1557.8348,-31359.8701 1547.8348,-31356.3702 1547.8348,-31363.3702"/>
</g>
<!-- monocle.function.Each[Stream[Int],Int] -->
<g id="node443" class="node">
<title>monocle.function.Each[Stream[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-40719.8701" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="543.6596" y="-40723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Stream[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-40708.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 21ms</text>
</g>
<!-- shapeless.Generic.Aux[Stream[Int],SGen] -->
<g id="node543" class="node">
<title>shapeless.Generic.Aux[Stream[Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-40719.8701" rx="174.8109" ry="26.7407"/>
<text text-anchor="start" x="1746.534" y="-40723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Stream[Int],SGen]</text>
<text text-anchor="middle" x="1862.034" y="-40708.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- monocle.function.Each[Stream[Int],Int]&#45;&gt;shapeless.Generic.Aux[Stream[Int],SGen] -->
<g id="edge176" class="edge">
<title>monocle.function.Each[Stream[Int],Int]&#45;&gt;shapeless.Generic.Aux[Stream[Int],SGen]</title>
<path fill="none" stroke="#000000" d="M818.2821,-40719.8701C1042.8177,-40719.8701 1442.5924,-40719.8701 1676.8253,-40719.8701"/>
<polygon fill="#000000" stroke="#000000" points="1677.161,-40723.3702 1687.1609,-40719.8701 1677.1609,-40716.3702 1677.161,-40723.3702"/>
</g>
<!-- scalaz.Equal[S] -->
<g id="node444" class="node">
<title>scalaz.Equal[S]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-40791.8701" rx="71.3357" ry="26.7407"/>
<text text-anchor="start" x="610.1596" y="-40795.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[S]</text>
<text text-anchor="middle" x="652.6596" y="-40780.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[scalaz.Cofree[Option,Int],SGen] -->
<g id="node445" class="node">
<title>shapeless.Generic.Aux[scalaz.Cofree[Option,Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-40899.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="1708.534" y="-40903.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scalaz.Cofree[Option,Int],SGen]</text>
<text text-anchor="middle" x="1862.034" y="-40888.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- monocle.function.Each[Boolean :: Boolean :: Boolean :: shapeless.HNil,Boolean] -->
<g id="node447" class="node">
<title>monocle.function.Each[Boolean :: Boolean :: Boolean :: shapeless.HNil,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-26805.8701" rx="327.2809" ry="26.7407"/>
<text text-anchor="start" x="5638.5954" y="-26809.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Boolean :: Boolean :: Boolean :: shapeless.HNil,Boolean]</text>
<text text-anchor="middle" x="5862.0954" y="-26794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- monocle.function.Each[Boolean :: Boolean :: shapeless.HNil,Boolean] -->
<g id="node1086" class="node">
<title>monocle.function.Each[Boolean :: Boolean :: shapeless.HNil,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-26805.8701" rx="284.9281" ry="26.7407"/>
<text text-anchor="start" x="6852.514" y="-26809.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Boolean :: Boolean :: shapeless.HNil,Boolean]</text>
<text text-anchor="middle" x="7046.014" y="-26794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- monocle.function.Each[Boolean :: Boolean :: Boolean :: shapeless.HNil,Boolean]&#45;&gt;monocle.function.Each[Boolean :: Boolean :: shapeless.HNil,Boolean] -->
<g id="edge179" class="edge">
<title>monocle.function.Each[Boolean :: Boolean :: Boolean :: shapeless.HNil,Boolean]&#45;&gt;monocle.function.Each[Boolean :: Boolean :: shapeless.HNil,Boolean]</title>
<path fill="none" stroke="#000000" d="M6189.5252,-26805.8701C6365.1637,-26805.8701 6579.9165,-26805.8701 6750.4432,-26805.8701"/>
<polygon fill="#000000" stroke="#000000" points="6750.5807,-26809.3702 6760.5807,-26805.8701 6750.5807,-26802.3702 6750.5807,-26809.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(scalaz.IList[Int], Int)] -->
<g id="node448" class="node">
<title>org.scalacheck.Arbitrary[(scalaz.IList[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-14722.8701" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="4455.253" y="-14726.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(scalaz.IList[Int], Int)]</text>
<text text-anchor="middle" x="4586.253" y="-14711.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- scala.reflect.ClassTag[(scalaz.IList[Int], Int)] -->
<g id="node1106" class="node">
<title>scala.reflect.ClassTag[(scalaz.IList[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-14777.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="5738.5954" y="-14781.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(scalaz.IList[Int], Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-14766.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(scalaz.IList[Int], Int)]&#45;&gt;scala.reflect.ClassTag[(scalaz.IList[Int], Int)] -->
<g id="edge1322" class="edge">
<title>org.scalacheck.Arbitrary[(scalaz.IList[Int], Int)]&#45;&gt;scala.reflect.ClassTag[(scalaz.IList[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M4773.8224,-14730.9559C5015.0371,-14741.3544 5431.5886,-14759.3114 5673.3646,-14769.7341"/>
<polygon fill="#000000" stroke="#000000" points="5673.5322,-14773.2445 5683.6737,-14770.1785 5673.8337,-14766.251 5673.5322,-14773.2445"/>
</g>
<!-- org.scalacheck.Arbitrary[(scalaz.IList[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1085" class="edge">
<title>org.scalacheck.Arbitrary[(scalaz.IList[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4782.5389,-14724.4751C5258.4807,-14727.8975 6437.2468,-14733.3673 6466.6717,-14703.8701 6476.9321,-14693.5845 6467.4017,-13670.4485 6474.6717,-13657.8701 6578.8004,-13477.7081 6821.2272,-13384.8549 6954.3845,-13345.9032"/>
<polygon fill="#000000" stroke="#000000" points="6955.5341,-13349.2144 6964.1721,-13343.0797 6953.5938,-13342.4887 6955.5341,-13349.2144"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.IList[Int]] -->
<g id="node1353" class="node">
<title>org.scalacheck.Arbitrary[scalaz.IList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-14091.8701" rx="173.8966" ry="26.7407"/>
<text text-anchor="start" x="5747.0954" y="-14095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.IList[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-14080.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 20ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(scalaz.IList[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[scalaz.IList[Int]] -->
<g id="edge1160" class="edge">
<title>org.scalacheck.Arbitrary[(scalaz.IList[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[scalaz.IList[Int]]</title>
<path fill="none" stroke="#000000" d="M4662.7558,-14747.6476C4802.0412,-14787.4104 5096.7104,-14845.9029 5249.5191,-14686.8701 5271.0383,-14664.4743 5236.0588,-14150.3222 5257.5191,-14127.8701 5316.2584,-14066.416 5542.0005,-14068.2327 5700.3391,-14077.9098"/>
<polygon fill="#000000" stroke="#000000" points="5700.469,-14081.4247 5710.6686,-14078.5579 5700.9075,-14074.4384 5700.469,-14081.4247"/>
</g>
<!-- monocle.function.Plated[scalaz.Tree[Int]] -->
<g id="node449" class="node">
<title>monocle.function.Plated[scalaz.Tree[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-40935.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="538.1596" y="-40939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Plated[scalaz.Tree[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-40924.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[A] =&gt; Traversable[A] -->
<g id="node450" class="node">
<title>List[A] =&gt; Traversable[A]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-28349.8701" rx="115.0173" ry="26.7407"/>
<text text-anchor="start" x="6972.514" y="-28353.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[A] =&gt; Traversable[A]</text>
<text text-anchor="middle" x="7046.014" y="-28338.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- eu.timepit.refined.api.Validate[String,eu.timepit.refined.string.EndsWith[String(&#39;world&#39;)]] -->
<g id="node451" class="node">
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.string.EndsWith[String(&#39;world&#39;)]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-2817.8701" rx="358.5063" ry="26.7407"/>
<text text-anchor="start" x="5616.5954" y="-2821.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.Validate[String,eu.timepit.refined.string.EndsWith[String(&#39;world&#39;)]]</text>
<text text-anchor="middle" x="5862.0954" y="-2806.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.Witness.Aux[String(&#39;world&#39;)] -->
<g id="node1225" class="node">
<title>shapeless.Witness.Aux[String(&#39;world&#39;)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-2781.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="6939.014" y="-2785.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Witness.Aux[String(&#39;world&#39;)]</text>
<text text-anchor="middle" x="7046.014" y="-2770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 9ms</text>
</g>
<!-- eu.timepit.refined.api.Validate[String,eu.timepit.refined.string.EndsWith[String(&#39;world&#39;)]]&#45;&gt;shapeless.Witness.Aux[String(&#39;world&#39;)] -->
<g id="edge885" class="edge">
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.string.EndsWith[String(&#39;world&#39;)]]&#45;&gt;shapeless.Witness.Aux[String(&#39;world&#39;)]</title>
<path fill="none" stroke="#000000" d="M6194.6391,-2807.7582C6416.2182,-2801.0206 6698.2475,-2792.4448 6875.5185,-2787.0544"/>
<polygon fill="#000000" stroke="#000000" points="6875.8338,-2790.5465 6885.7228,-2786.7441 6875.621,-2783.5498 6875.8338,-2790.5465"/>
</g>
<!-- monocle.function.Field3[HListSpec.this.H,Char] -->
<g id="node452" class="node">
<title>monocle.function.Field3[HListSpec.this.H,Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-31287.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="518.6596" y="-31291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field3[HListSpec.this.H,Char]</text>
<text text-anchor="middle" x="652.6596" y="-31276.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._2.N,Char] -->
<g id="node871" class="node">
<title>shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._2.N,Char]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-31287.8701" rx="282.6855" ry="26.7407"/>
<text text-anchor="start" x="1670.034" y="-31291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._2.N,Char]</text>
<text text-anchor="middle" x="1862.034" y="-31276.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- monocle.function.Field3[HListSpec.this.H,Char]&#45;&gt;shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._2.N,Char] -->
<g id="edge978" class="edge">
<title>monocle.function.Field3[HListSpec.this.H,Char]&#45;&gt;shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._2.N,Char]</title>
<path fill="none" stroke="#000000" d="M853.7207,-31287.8701C1048.8616,-31287.8701 1347.2139,-31287.8701 1568.8074,-31287.8701"/>
<polygon fill="#000000" stroke="#000000" points="1568.9697,-31291.3702 1578.9696,-31287.8701 1568.9696,-31284.3702 1568.9697,-31291.3702"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._2.N,Char,(Char, HListSpec.this.H)] -->
<g id="node913" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._2.N,Char,(Char, HListSpec.this.H)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-31215.8701" rx="412.9007" ry="26.7407"/>
<text text-anchor="start" x="1578.034" y="-31219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._2.N,Char,(Char, HListSpec.this.H)]</text>
<text text-anchor="middle" x="1862.034" y="-31204.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- monocle.function.Field3[HListSpec.this.H,Char]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._2.N,Char,(Char, HListSpec.this.H)] -->
<g id="edge1262" class="edge">
<title>monocle.function.Field3[HListSpec.this.H,Char]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._2.N,Char,(Char, HListSpec.this.H)]</title>
<path fill="none" stroke="#000000" d="M839.771,-31278.0203C970.2668,-31271.0355 1148.429,-31261.2694 1305.3191,-31251.8701 1388.9326,-31246.8607 1479.589,-31241.1274 1562.9871,-31235.7309"/>
<polygon fill="#000000" stroke="#000000" points="1563.3679,-31239.2136 1573.1207,-31235.0745 1562.9153,-31232.2283 1563.3679,-31239.2136"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(Unit, Int),Either[Unit,Int]] -->
<g id="node453" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(Unit, Int),Either[Unit,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-16229.8701" rx="278.7002" ry="26.7407"/>
<text text-anchor="start" x="6857.014" y="-16233.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(Unit, Int),Either[Unit,Int]]</text>
<text text-anchor="middle" x="7046.014" y="-16218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Each[scalaz.Maybe[Int],Int] -->
<g id="node454" class="node">
<title>monocle.function.Each[scalaz.Maybe[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-41007.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="525.6596" y="-41011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[scalaz.Maybe[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-40996.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- shapeless.Generic.Aux[scalaz.Maybe[Int],SGen] -->
<g id="node981" class="node">
<title>shapeless.Generic.Aux[scalaz.Maybe[Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-41007.8701" rx="200.2225" ry="26.7407"/>
<text text-anchor="start" x="1728.534" y="-41011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scalaz.Maybe[Int],SGen]</text>
<text text-anchor="middle" x="1862.034" y="-40996.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- monocle.function.Each[scalaz.Maybe[Int],Int]&#45;&gt;shapeless.Generic.Aux[scalaz.Maybe[Int],SGen] -->
<g id="edge418" class="edge">
<title>monocle.function.Each[scalaz.Maybe[Int],Int]&#45;&gt;shapeless.Generic.Aux[scalaz.Maybe[Int],SGen]</title>
<path fill="none" stroke="#000000" d="M843.6212,-41007.8701C1063.5815,-41007.8701 1423.8578,-41007.8701 1651.6883,-41007.8701"/>
<polygon fill="#000000" stroke="#000000" points="1651.7606,-41011.3702 1661.7606,-41007.8701 1651.7605,-41004.3702 1651.7606,-41011.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]]] -->
<g id="node455" class="node">
<title>org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-9788.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="4447.753" y="-9792.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]]]</text>
<text text-anchor="middle" x="4586.253" y="-9777.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 15ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]]]&#45;&gt;org.scalacheck.util.Buildable[scalaz.Tree[Int],Stream[scalaz.Tree[Int]]] -->
<g id="edge421" class="edge">
<title>org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]]]&#45;&gt;org.scalacheck.util.Buildable[scalaz.Tree[Int],Stream[scalaz.Tree[Int]]]</title>
<path fill="none" stroke="#000000" d="M4664.1217,-9813.8449C4803.6211,-9853.159 5095.8849,-9909.8979 5249.5191,-9752.8701 5268.7222,-9733.2428 5238.3676,-9525.5477 5257.5191,-9505.8701 5308.1494,-9453.8489 5480.0432,-9447.4716 5627.661,-9452.6345"/>
<polygon fill="#000000" stroke="#000000" points="5627.674,-9456.1372 5637.7962,-9453.0082 5627.932,-9449.142 5627.674,-9456.1372"/>
</g>
<!-- org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.Tree[Int]] -->
<g id="edge301" class="edge">
<title>org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.Tree[Int]]</title>
<path fill="none" stroke="#000000" d="M4790.4972,-9784.1601C4943.4281,-9792.831 5143.7549,-9832.6591 5249.5191,-9970.8701 5269.5232,-9997.0111 5235.7619,-12316.169 5257.5191,-12340.8701 5378.8485,-12478.6154 5613.2142,-12465.9968 5751.8062,-12443.5182"/>
<polygon fill="#000000" stroke="#000000" points="5752.7395,-12446.911 5762.0278,-12441.8143 5751.5884,-12440.0063 5752.7395,-12446.911"/>
</g>
<!-- Stream[scalaz.Tree[Int]] =&gt; Traversable[scalaz.Tree[Int]] -->
<g id="node633" class="node">
<title>Stream[scalaz.Tree[Int]] =&gt; Traversable[scalaz.Tree[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-9397.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="5704.0954" y="-9401.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Stream[scalaz.Tree[Int]] =&gt; Traversable[scalaz.Tree[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-9386.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]]]&#45;&gt;Stream[scalaz.Tree[Int]] =&gt; Traversable[scalaz.Tree[Int]] -->
<g id="edge891" class="edge">
<title>org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]]]&#45;&gt;Stream[scalaz.Tree[Int]] =&gt; Traversable[scalaz.Tree[Int]]</title>
<path fill="none" stroke="#000000" d="M4663.6854,-9813.7995C4803.147,-9853.2955 5096.2585,-9910.6647 5249.5191,-9752.8701 5261.8705,-9740.1532 5245.2011,-9446.6193 5257.5191,-9433.8701 5311.718,-9377.7738 5506.165,-9374.6078 5660.0909,-9381.8617"/>
<polygon fill="#000000" stroke="#000000" points="5660.0102,-9385.3619 5670.1692,-9382.3541 5660.3519,-9378.3702 5660.0102,-9385.3619"/>
</g>
<!-- scala.reflect.ClassTag[Stream[scalaz.Tree[Int]]] -->
<g id="node1117" class="node">
<title>scala.reflect.ClassTag[Stream[scalaz.Tree[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-9541.8701" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="5731.0954" y="-9545.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Stream[scalaz.Tree[Int]]]</text>
<text text-anchor="middle" x="5862.0954" y="-9530.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]]]&#45;&gt;scala.reflect.ClassTag[Stream[scalaz.Tree[Int]]] -->
<g id="edge663" class="edge">
<title>org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]]]&#45;&gt;scala.reflect.ClassTag[Stream[scalaz.Tree[Int]]]</title>
<path fill="none" stroke="#000000" d="M4664.466,-9813.7971C4803.8538,-9852.7814 5095.0466,-9908.6676 5249.5191,-9752.8701 5263.2239,-9739.0477 5243.8507,-9591.7283 5257.5191,-9577.8701 5315.0928,-9519.4967 5526.8815,-9518.8837 5683.629,-9527.3204"/>
<polygon fill="#000000" stroke="#000000" points="5683.6933,-9530.8293 5693.8718,-9527.8887 5684.0811,-9523.84 5683.6933,-9530.8293"/>
</g>
<!-- scalaz.Equal[Int ==&gt;&gt; String] -->
<g id="node456" class="node">
<title>scalaz.Equal[Int ==&gt;&gt; String]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-21755.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="5779.0954" y="-21759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int ==&gt;&gt; String]</text>
<text text-anchor="middle" x="5862.0954" y="-21744.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 14ms</text>
</g>
<!-- scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Order[String] -->
<g id="edge285" class="edge">
<title>scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M5990.8419,-21754.5738C6113.9769,-21755.4374 6304.3978,-21762.281 6466.6717,-21791.8701 6659.0869,-21826.955 6877.1994,-21905.8558 6982.4775,-21946.5424"/>
<polygon fill="#000000" stroke="#000000" points="6981.4143,-21949.8841 6992.0032,-21950.2387 6983.9466,-21943.3582 6981.4143,-21949.8841"/>
</g>
<!-- scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Equal[String] -->
<g id="edge990" class="edge">
<title>scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M5979.6166,-21766.8498C6136.5471,-21778.6127 6402.3028,-21787.4341 6466.6717,-21719.8701 6480.5448,-21705.3083 6468.5837,-21015.0388 6474.6717,-20995.8701 6587.0916,-20641.9042 6906.963,-20304.6787 7012.0791,-20200.6121"/>
<polygon fill="#000000" stroke="#000000" points="7014.6045,-20203.0372 7019.2705,-20193.5252 7009.6911,-20198.0514 7014.6045,-20203.0372"/>
</g>
<!-- scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge927" class="edge">
<title>scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5991.0492,-21755.8701C6229.8579,-21755.8701 6735.9476,-21755.8701 6948.6376,-21755.8701"/>
<polygon fill="#000000" stroke="#000000" points="6948.8488,-21759.3702 6958.8488,-21755.8701 6948.8488,-21752.3702 6948.8488,-21759.3702"/>
</g>
<!-- scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Order[Int] -->
<g id="edge453" class="edge">
<title>scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5961.9026,-21772.9195C6087.052,-21789.3292 6304.8028,-21801.119 6466.6717,-21719.8701 6766.6224,-21569.312 6971.2787,-21186.6077 7029.2252,-21067.6869"/>
<polygon fill="#000000" stroke="#000000" points="7032.4092,-21069.1422 7033.6092,-21058.6155 7026.1066,-21066.0962 7032.4092,-21069.1422"/>
</g>
<!-- shapeless.Generic.Aux[Unit \/ Int,SGen] -->
<g id="node457" class="node">
<title>shapeless.Generic.Aux[Unit \/ Int,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-41079.8701" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="1753.034" y="-41083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Unit / Int,SGen]</text>
<text text-anchor="middle" x="1862.034" y="-41068.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[HListSpec.this.ReverseH,HListSpec.this.H] -->
<g id="node458" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[HListSpec.this.ReverseH,HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-23601.8701" rx="307.6829" ry="26.7407"/>
<text text-anchor="start" x="1652.534" y="-23605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[HListSpec.this.ReverseH,HListSpec.this.H]</text>
<text text-anchor="middle" x="1862.034" y="-23590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.ReverseH,HListSpec.this.H] -->
<g id="node1045" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.ReverseH,HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-23601.8701" rx="387.489" ry="26.7407"/>
<text text-anchor="start" x="2900.8678" y="-23605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.ReverseH,HListSpec.this.H]</text>
<text text-anchor="middle" x="3166.8678" y="-23590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[HListSpec.this.ReverseH,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.ReverseH,HListSpec.this.H] -->
<g id="edge1266" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[HListSpec.this.ReverseH,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.ReverseH,HListSpec.this.H]</title>
<path fill="none" stroke="#000000" d="M2170.0219,-23601.8701C2349.0662,-23601.8701 2576.6303,-23601.8701 2769.1143,-23601.8701"/>
<polygon fill="#000000" stroke="#000000" points="2769.1222,-23605.3702 2779.1222,-23601.8701 2769.1222,-23598.3702 2769.1222,-23605.3702"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._4.N,Long,(Long, HListSpec.this.H)] -->
<g id="node459" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._4.N,Long,(Long, HListSpec.this.H)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-34653.8701" rx="415.5577" ry="26.7407"/>
<text text-anchor="start" x="1576.034" y="-34657.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._4.N,Long,(Long, HListSpec.this.H)]</text>
<text text-anchor="middle" x="1862.034" y="-34642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3,Long,(Long, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="node1143" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3,Long,(Long, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-34653.8701" rx="731.7111" ry="26.7407"/>
<text text-anchor="start" x="2657.3678" y="-34657.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3,Long,(Long, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]</text>
<text text-anchor="middle" x="3166.8678" y="-34642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._4.N,Long,(Long, HListSpec.this.H)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3,Long,(Long, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="edge853" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._4.N,Long,(Long, HListSpec.this.H)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3,Long,(Long, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M2278.0303,-34653.8701C2325.409,-34653.8701 2374.7114,-34653.8701 2424.731,-34653.8701"/>
<polygon fill="#000000" stroke="#000000" points="2424.7441,-34657.3702 2434.7441,-34653.8701 2424.744,-34650.3702 2424.7441,-34657.3702"/>
</g>
<!-- (Long, String) =:= (Long, String) -->
<g id="node460" class="node">
<title>(Long, String) =:= (Long, String)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-41151.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="560.6596" y="-41155.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Long, String) =:= (Long, String)</text>
<text text-anchor="middle" x="652.6596" y="-41140.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Each[scalaz.Cofree[Option,Int],Int] -->
<g id="node462" class="node">
<title>monocle.function.Each[scalaz.Cofree[Option,Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-40863.8701" rx="219.4064" ry="26.7407"/>
<text text-anchor="start" x="505.6596" y="-40867.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[scalaz.Cofree[Option,Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-40852.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 21ms</text>
</g>
<!-- monocle.function.Each[scalaz.Cofree[Option,Int],Int]&#45;&gt;shapeless.Generic.Aux[scalaz.Cofree[Option,Int],SGen] -->
<g id="edge456" class="edge">
<title>monocle.function.Each[scalaz.Cofree[Option,Int],Int]&#45;&gt;shapeless.Generic.Aux[scalaz.Cofree[Option,Int],SGen]</title>
<path fill="none" stroke="#000000" d="M865.7405,-40870.2129C1080.0631,-40876.5928 1409.5607,-40886.4011 1630.2878,-40892.9716"/>
<polygon fill="#000000" stroke="#000000" points="1630.2875,-40896.473 1640.3872,-40893.2722 1630.4958,-40889.4761 1630.2875,-40896.473"/>
</g>
<!-- scalaz.Traverse[Option] -->
<g id="node663" class="node">
<title>scalaz.Traverse[Option]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-40827.8701" rx="103.8894" ry="26.7407"/>
<text text-anchor="start" x="1796.534" y="-40831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Traverse[Option]</text>
<text text-anchor="middle" x="1862.034" y="-40816.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Each[scalaz.Cofree[Option,Int],Int]&#45;&gt;scalaz.Traverse[Option] -->
<g id="edge1282" class="edge">
<title>monocle.function.Each[scalaz.Cofree[Option,Int],Int]&#45;&gt;scalaz.Traverse[Option]</title>
<path fill="none" stroke="#000000" d="M865.7405,-40857.5272C1123.2451,-40849.8619 1547.0114,-40837.2475 1748.6268,-40831.2459"/>
<polygon fill="#000000" stroke="#000000" points="1748.7545,-40834.7437 1758.6459,-40830.9477 1748.5462,-40827.7468 1748.7545,-40834.7437"/>
</g>
<!-- scala.reflect.ClassTag[(Vector[Int], Int)] -->
<g id="node464" class="node">
<title>scala.reflect.ClassTag[(Vector[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-13185.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="5751.5954" y="-13189.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Vector[Int], Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-13174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Snoc1[HListSpec.this.H,HListSpec.this.HInit,Double] -->
<g id="node465" class="node">
<title>monocle.function.Snoc1[HListSpec.this.H,HListSpec.this.HInit,Double]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-33726.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="454.1596" y="-33730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc1[HListSpec.this.H,HListSpec.this.HInit,Double]</text>
<text text-anchor="middle" x="652.6596" y="-33715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 47ms</text>
</g>
<!-- shapeless.ops.hlist.Last.Aux[HListSpec.this.H,Double] -->
<g id="node964" class="node">
<title>shapeless.ops.hlist.Last.Aux[HListSpec.this.H,Double]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-33798.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="1711.534" y="-33802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Last.Aux[HListSpec.this.H,Double]</text>
<text text-anchor="middle" x="1862.034" y="-33787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- monocle.function.Snoc1[HListSpec.this.H,HListSpec.this.HInit,Double]&#45;&gt;shapeless.ops.hlist.Last.Aux[HListSpec.this.H,Double] -->
<g id="edge88" class="edge">
<title>monocle.function.Snoc1[HListSpec.this.H,HListSpec.this.HInit,Double]&#45;&gt;shapeless.ops.hlist.Last.Aux[HListSpec.this.H,Double]</title>
<path fill="none" stroke="#000000" d="M898.123,-33741.4837C1119.2327,-33754.6474 1440.8633,-33773.7957 1650.7547,-33786.2916"/>
<polygon fill="#000000" stroke="#000000" points="1650.7858,-33789.7995 1660.9761,-33786.9001 1651.2018,-33782.8119 1650.7858,-33789.7995"/>
</g>
<!-- shapeless.ops.hlist.Prepend.Aux[HListSpec.this.HInit,Double :: shapeless.HNil,HListSpec.this.H] -->
<g id="node990" class="node">
<title>shapeless.ops.hlist.Prepend.Aux[HListSpec.this.HInit,Double :: shapeless.HNil,HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-33726.8701" rx="389.7317" ry="26.7407"/>
<text text-anchor="start" x="1594.534" y="-33730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Prepend.Aux[HListSpec.this.HInit,Double :: shapeless.HNil,HListSpec.this.H]</text>
<text text-anchor="middle" x="1862.034" y="-33715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 27ms</text>
</g>
<!-- monocle.function.Snoc1[HListSpec.this.H,HListSpec.this.HInit,Double]&#45;&gt;shapeless.ops.hlist.Prepend.Aux[HListSpec.this.HInit,Double :: shapeless.HNil,HListSpec.this.H] -->
<g id="edge229" class="edge">
<title>monocle.function.Snoc1[HListSpec.this.H,HListSpec.this.HInit,Double]&#45;&gt;shapeless.ops.hlist.Prepend.Aux[HListSpec.this.HInit,Double :: shapeless.HNil,HListSpec.this.H]</title>
<path fill="none" stroke="#000000" d="M945.0298,-33726.8701C1100.267,-33726.8701 1293.3567,-33726.8701 1462.2571,-33726.8701"/>
<polygon fill="#000000" stroke="#000000" points="1462.3215,-33730.3702 1472.3215,-33726.8701 1462.3214,-33723.3702 1462.3215,-33730.3702"/>
</g>
<!-- shapeless.ops.hlist.Init.Aux[HListSpec.this.H,HListSpec.this.HInit] -->
<g id="node1440" class="node">
<title>shapeless.ops.hlist.Init.Aux[HListSpec.this.H,HListSpec.this.HInit]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-33654.8701" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="1677.034" y="-33658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init.Aux[HListSpec.this.H,HListSpec.this.HInit]</text>
<text text-anchor="middle" x="1862.034" y="-33643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- monocle.function.Snoc1[HListSpec.this.H,HListSpec.this.HInit,Double]&#45;&gt;shapeless.ops.hlist.Init.Aux[HListSpec.this.H,HListSpec.this.HInit] -->
<g id="edge1040" class="edge">
<title>monocle.function.Snoc1[HListSpec.this.H,HListSpec.this.HInit,Double]&#45;&gt;shapeless.ops.hlist.Init.Aux[HListSpec.this.H,HListSpec.this.HInit]</title>
<path fill="none" stroke="#000000" d="M898.123,-33712.2564C1108.1093,-33699.7549 1408.757,-33681.8559 1618.2562,-33669.3833"/>
<polygon fill="#000000" stroke="#000000" points="1618.7008,-33672.8632 1628.475,-33668.775 1618.2847,-33665.8755 1618.7008,-33672.8632"/>
</g>
<!-- monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)] =&gt; monocle.Iso[monocle.Quintary,_$1] -->
<g id="node467" class="node">
<title>monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)] =&gt; monocle.Iso[monocle.Quintary,_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-41223.8701" rx="436.0699" ry="26.7407"/>
<text text-anchor="start" x="352.1596" y="-41227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)] =&gt; monocle.Iso[monocle.Quintary,_$1]</text>
<text text-anchor="middle" x="652.6596" y="-41212.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Int] \/ List[Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node468" class="node">
<title>List[Int] \/ List[Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-25545.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="529.1596" y="-25549.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Int] / List[Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-25534.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- List[Int] \/ List[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge1347" class="edge">
<title>List[Int] \/ List[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M837.1711,-25542.4024C968.2079,-25538.3049 1148.0751,-25529.3665 1305.3191,-25509.8701 1474.6807,-25488.8711 1669.9285,-25446.7944 1778.3599,-25421.8109"/>
<polygon fill="#000000" stroke="#000000" points="1779.3035,-25425.1852 1788.2579,-25419.5222 1777.7264,-25418.3651 1779.3035,-25425.1852"/>
</g>
<!-- List[Int] \/ List[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1195" class="edge">
<title>List[Int] \/ List[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M810.5456,-25560.1584C981.366,-25571.7765 1238.3529,-25576.8098 1305.3191,-25509.8701 1327.9859,-25487.2122 1290.7706,-25388.6456 1313.3191,-25365.8701 1434.8337,-25243.1323 1658.6391,-25275.8919 1779.4717,-25305.6678"/>
<polygon fill="#000000" stroke="#000000" points="1778.862,-25309.1234 1789.4137,-25308.1685 1780.5695,-25302.3349 1778.862,-25309.1234"/>
</g>
<!-- shapeless.Generic.Aux[Int :: Int :: shapeless.HNil,SGen] -->
<g id="node469" class="node">
<title>shapeless.Generic.Aux[Int :: Int :: shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-26949.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="8041.6985" y="-26953.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Int :: Int :: shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="8196.6985" y="-26938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.function.Empty[Int ==&gt;&gt; String] -->
<g id="node470" class="node">
<title>monocle.function.Empty[Int ==&gt;&gt; String]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-41295.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="535.1596" y="-41299.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[Int ==&gt;&gt; String]</text>
<text text-anchor="middle" x="652.6596" y="-41284.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[Option[Long]] -->
<g id="node471" class="node">
<title>scalaz.Equal[Option[Long]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-18177.8701" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="5785.5954" y="-18181.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[Long]]</text>
<text text-anchor="middle" x="5862.0954" y="-18166.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scalaz.Equal[Option[Long]]&#45;&gt;scalaz.Equal[Long] -->
<g id="edge15" class="edge">
<title>scalaz.Equal[Option[Long]]&#45;&gt;scalaz.Equal[Long]</title>
<path fill="none" stroke="#000000" d="M5972.6541,-18167.4833C6128.4796,-18155.561 6401.0757,-18145.57 6466.6717,-18213.8701 6482.7988,-18230.662 6461.0343,-18614.0001 6474.6717,-18632.8701 6584.2978,-18784.5582 6817.669,-18822.4815 6949.7213,-18831.5083"/>
<polygon fill="#000000" stroke="#000000" points="6949.6282,-18835.0095 6959.8317,-18832.1565 6950.0762,-18828.0238 6949.6282,-18835.0095"/>
</g>
<!-- scalaz.Equal[MacroOutSideMonocleSpec.this.Example2Type[Int]] -->
<g id="node472" class="node">
<title>scalaz.Equal[MacroOutSideMonocleSpec.this.Example2Type[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-21880.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="4402.753" y="-21884.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[MacroOutSideMonocleSpec.this.Example2Type[Int]]</text>
<text text-anchor="middle" x="4586.253" y="-21869.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[MacroOutSideMonocleSpec.this.Example2Type[Int]]&#45;&gt;scalaz.Equal[Option[Int]] -->
<g id="edge1180" class="edge">
<title>scalaz.Equal[MacroOutSideMonocleSpec.this.Example2Type[Int]]&#45;&gt;scalaz.Equal[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4763.4274,-21901.2076C4916.4261,-21907.8886 5131.0092,-21889.1134 5249.5191,-21753.8701 5269.91,-21730.6 5235.7533,-21636.8595 5257.5191,-21614.8701 5323.6458,-21548.0639 5592.0489,-21554.5478 5748.1074,-21564.5542"/>
<polygon fill="#000000" stroke="#000000" points="5748.0132,-21568.0555 5758.2209,-21565.2177 5748.4714,-21561.0705 5748.0132,-21568.0555"/>
</g>
<!-- scalaz.Equal[MacroOutSideMonocleSpec.this.Example2Type[Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge872" class="edge">
<title>scalaz.Equal[MacroOutSideMonocleSpec.this.Example2Type[Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4767.3198,-21860.887C4919.6076,-21855.1201 5130.931,-21875.0438 5249.5191,-22007.8701 5265.104,-22025.3262 5240.3551,-22096.964 5257.5191,-22112.8701 5306.7904,-22158.5301 6418.1112,-22159.2853 6466.6717,-22112.8701 6480.9031,-22099.2673 6462.6734,-21951.478 6474.6717,-21935.8701 6587.0214,-21789.7198 6817.7068,-21759.6637 6948.9901,-21755.0013"/>
<polygon fill="#000000" stroke="#000000" points="6949.1587,-21758.4978 6959.0445,-21754.687 6948.94,-21751.5012 6949.1587,-21758.4978"/>
</g>
<!-- monocle.function.At[Byte,monocle.refined.ZeroTo[Int(7)],Boolean] -->
<g id="node473" class="node">
<title>monocle.function.At[Byte,monocle.refined.ZeroTo[Int(7)],Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-41367.8701" rx="275.5435" ry="26.7407"/>
<text text-anchor="start" x="465.6596" y="-41371.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[Byte,monocle.refined.ZeroTo[Int(7)],Boolean]</text>
<text text-anchor="middle" x="652.6596" y="-41356.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Id.Id[Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node474" class="node">
<title>scalaz.Id.Id[Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-25473.8701" rx="176.1392" ry="26.7407"/>
<text text-anchor="start" x="536.1596" y="-25477.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Id.Id[Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-25462.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scalaz.Id.Id[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge600" class="edge">
<title>scalaz.Id.Id[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M819.3405,-25465.112C951.2325,-25458.0766 1140.0747,-25447.77 1305.3191,-25437.8701 1462.8251,-25428.4338 1645.3231,-25416.4283 1757.2168,-25408.9451"/>
<polygon fill="#000000" stroke="#000000" points="1757.743,-25412.4178 1767.4869,-25408.2577 1757.2755,-25405.4334 1757.743,-25412.4178"/>
</g>
<!-- scalaz.Id.Id[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge213" class="edge">
<title>scalaz.Id.Id[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M805.6938,-25487.2045C975.8599,-25498.3946 1235.9656,-25503.4739 1305.3191,-25437.8701 1328.7093,-25415.7445 1290.0444,-25388.1171 1313.3191,-25365.8701 1437.5009,-25247.1714 1658.2086,-25277.5522 1778.3932,-25306.0822"/>
<polygon fill="#000000" stroke="#000000" points="1777.7434,-25309.526 1788.2865,-25308.4806 1779.3927,-25302.7231 1777.7434,-25309.526"/>
</g>
<!-- org.scalacheck.Cogen[scalaz.NonEmptyList[Int]] -->
<g id="node475" class="node">
<title>org.scalacheck.Cogen[scalaz.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-11835.8701" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="5726.5954" y="-11839.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[scalaz.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-11824.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.NonEmptyList[Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge362" class="edge">
<title>org.scalacheck.Cogen[scalaz.NonEmptyList[Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M6033.253,-11850.3226C6190.9263,-11859.4275 6408.9206,-11859.9412 6466.6717,-11799.8701 6481.9989,-11783.9271 6467.9875,-11422.9513 6474.6717,-11401.8701 6588.5795,-11042.6183 6907.4669,-10696.4687 7012.2071,-10589.5311"/>
<polygon fill="#000000" stroke="#000000" points="7014.8542,-10591.8312 7019.3725,-10582.2481 7009.8643,-10586.9218 7014.8542,-10591.8312"/>
</g>
<!-- scala.reflect.ClassTag[(Int, List[Int])] -->
<g id="node477" class="node">
<title>scala.reflect.ClassTag[(Int, List[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-9109.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="5759.5954" y="-9113.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, List[Int])]</text>
<text text-anchor="middle" x="5862.0954" y="-9098.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- monocle.function.Possible[Option[A],A] -->
<g id="node478" class="node">
<title>monocle.function.Possible[Option[A],A]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-41439.8701" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="540.6596" y="-41443.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Possible[Option[A],A]</text>
<text text-anchor="middle" x="652.6596" y="-41428.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Field1[(Int,),Int] -->
<g id="node480" class="node">
<title>monocle.function.Field1[(Int,),Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-41511.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="557.6596" y="-41515.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field1[(Int,),Int]</text>
<text text-anchor="middle" x="652.6596" y="-41500.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[(Int,),shapeless.nat._0.N,Int] -->
<g id="node735" class="node">
<title>shapeless.ops.hlist.At.Aux[(Int,),shapeless.nat._0.N,Int]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-41511.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="1708.534" y="-41515.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(Int,),shapeless.nat._0.N,Int]</text>
<text text-anchor="middle" x="1862.034" y="-41500.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Field1[(Int,),Int]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int,),shapeless.nat._0.N,Int] -->
<g id="edge144" class="edge">
<title>monocle.function.Field1[(Int,),Int]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int,),shapeless.nat._0.N,Int]</title>
<path fill="none" stroke="#000000" d="M798.5384,-41511.8701C1003.1767,-41511.8701 1377.8844,-41511.8701 1623.4372,-41511.8701"/>
<polygon fill="#000000" stroke="#000000" points="1623.5731,-41515.3702 1633.573,-41511.8701 1623.573,-41508.3702 1623.5731,-41515.3702"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P) -->
<g id="node481" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-41583.8701" rx="282.6855" ry="26.7407"/>
<text text-anchor="start" x="460.6596" y="-41587.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-41572.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[List[Int],L1] -->
<g id="node482" class="node">
<title>shapeless.Generic.Aux[List[Int],L1]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-32835.8701" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="3067.8678" y="-32839.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[List[Int],L1]</text>
<text text-anchor="middle" x="3166.8678" y="-32824.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 63ms</text>
</g>
<!-- scalaz.Equal[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil] -->
<g id="node484" class="node">
<title>scalaz.Equal[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-41655.8701" rx="316.5678" ry="26.7407"/>
<text text-anchor="start" x="1646.034" y="-41659.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="1862.034" y="-41644.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Each[List[Int],Int] -->
<g id="node485" class="node">
<title>monocle.function.Each[List[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-26733.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="6946.014" y="-26737.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[List[Int],Int]</text>
<text text-anchor="middle" x="7046.014" y="-26722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 126ms</text>
</g>
<!-- shapeless.Generic.Aux[List[Int],SGen] -->
<g id="node541" class="node">
<title>shapeless.Generic.Aux[List[Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-26733.8701" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="8090.1985" y="-26737.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[List[Int],SGen]</text>
<text text-anchor="middle" x="8196.6985" y="-26722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 70ms</text>
</g>
<!-- monocle.function.Each[List[Int],Int]&#45;&gt;shapeless.Generic.Aux[List[Int],SGen] -->
<g id="edge666" class="edge">
<title>monocle.function.Each[List[Int],Int]&#45;&gt;shapeless.Generic.Aux[List[Int],SGen]</title>
<path fill="none" stroke="#000000" d="M7198.816,-26733.8701C7412.709,-26733.8701 7800.2483,-26733.8701 8024.2336,-26733.8701"/>
<polygon fill="#000000" stroke="#000000" points="8024.444,-26737.3702 8034.444,-26733.8701 8024.444,-26730.3702 8024.444,-26737.3702"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalacheck.Prop -->
<g id="node486" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalacheck.Prop</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-41727.8701" rx="191.752" ry="26.7407"/>
<text text-anchor="start" x="525.1596" y="-41731.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalacheck.Prop</text>
<text text-anchor="middle" x="652.6596" y="-41716.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scalaz.OneAnd[Stream,Int] =&gt; scalaz.OneAnd[Stream,Int]] -->
<g id="node488" class="node">
<title>scala.reflect.ClassTag[scalaz.OneAnd[Stream,Int] =&gt; scalaz.OneAnd[Stream,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-11772.8701" rx="330.4379" ry="26.7407"/>
<text text-anchor="start" x="4360.753" y="-11776.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scalaz.OneAnd[Stream,Int] =&gt; scalaz.OneAnd[Stream,Int]]</text>
<text text-anchor="middle" x="4586.253" y="-11761.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[IsoSpec.this.IntWrapper] -->
<g id="node489" class="node">
<title>scala.reflect.ClassTag[IsoSpec.this.IntWrapper]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-5023.8701" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="8065.6985" y="-5027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[IsoSpec.this.IntWrapper]</text>
<text text-anchor="middle" x="8196.6985" y="-5012.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 22ms</text>
</g>
<!-- monocle.function.FilterIndex[List[Int],Int,Int] -->
<g id="node490" class="node">
<title>monocle.function.FilterIndex[List[Int],Int,Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-41799.8701" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="526.6596" y="-41803.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[List[Int],Int,Int]</text>
<text text-anchor="middle" x="652.6596" y="-41788.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Char, Int)) =&gt; (Char, Int)] -->
<g id="node491" class="node">
<title>org.scalacheck.Arbitrary[((Char, Int)) =&gt; (Char, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-14451.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="4440.253" y="-14455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Char, Int)) =&gt; (Char, Int)]</text>
<text text-anchor="middle" x="4586.253" y="-14440.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Char, Int)) =&gt; (Char, Int)]&#45;&gt;org.scalacheck.Arbitrary[(Char, Int)] -->
<g id="edge776" class="edge">
<title>org.scalacheck.Arbitrary[((Char, Int)) =&gt; (Char, Int)]&#45;&gt;org.scalacheck.Arbitrary[(Char, Int)]</title>
<path fill="none" stroke="#000000" d="M4804.1284,-14451.8701C5057.4677,-14451.8701 5469.9125,-14451.8701 5697.7822,-14451.8701"/>
<polygon fill="#000000" stroke="#000000" points="5697.8214,-14455.3702 5707.8214,-14451.8701 5697.8213,-14448.3702 5697.8214,-14455.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[((Char, Int)) =&gt; (Char, Int)]&#45;&gt;scala.reflect.ClassTag[((Char, Int)) =&gt; (Char, Int)] -->
<g id="edge1173" class="edge">
<title>org.scalacheck.Arbitrary[((Char, Int)) =&gt; (Char, Int)]&#45;&gt;scala.reflect.ClassTag[((Char, Int)) =&gt; (Char, Int)]</title>
<path fill="none" stroke="#000000" d="M4784.5531,-14463.0608C5023.2896,-14476.5335 5421.952,-14499.0313 5661.6443,-14512.5579"/>
<polygon fill="#000000" stroke="#000000" points="5661.6921,-14516.0661 5671.8735,-14513.1352 5662.0866,-14509.0772 5661.6921,-14516.0661"/>
</g>
<!-- org.scalacheck.Cogen[(Char, Int)] -->
<g id="node1070" class="node">
<title>org.scalacheck.Cogen[(Char, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-7521.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="5768.5954" y="-7525.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Char, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-7510.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Char, Int)) =&gt; (Char, Int)]&#45;&gt;org.scalacheck.Cogen[(Char, Int)] -->
<g id="edge850" class="edge">
<title>org.scalacheck.Arbitrary[((Char, Int)) =&gt; (Char, Int)]&#45;&gt;org.scalacheck.Cogen[(Char, Int)]</title>
<path fill="none" stroke="#000000" d="M4711.2731,-14473.9279C4864.3736,-14492.8884 5119.3426,-14496.775 5249.5191,-14343.8701 5264.7935,-14325.9289 5241.3506,-7575.0098 5257.5191,-7557.8701 5318.7219,-7492.9912 5564.3163,-7498.2923 5723.033,-7509.2499"/>
<polygon fill="#000000" stroke="#000000" points="5723.1371,-7512.7659 5733.3588,-7509.9792 5723.6303,-7505.7833 5723.1371,-7512.7659"/>
</g>
<!-- monocle.function.Possible[Either[Unit,Int],Int] -->
<g id="node492" class="node">
<title>monocle.function.Possible[Either[Unit,Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-41871.8701" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="523.6596" y="-41875.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Possible[Either[Unit,Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-41860.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[(Boolean, IsoSpec.this.IntWrapper)] -->
<g id="node493" class="node">
<title>scala.reflect.ClassTag[(Boolean, IsoSpec.this.IntWrapper)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-4951.8701" rx="239.9186" ry="26.7407"/>
<text text-anchor="start" x="6884.514" y="-4955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Boolean, IsoSpec.this.IntWrapper)]</text>
<text text-anchor="middle" x="7046.014" y="-4940.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Field6[(Int, Char, Boolean, String, Long, Float),Float] -->
<g id="node495" class="node">
<title>monocle.function.Field6[(Int, Char, Boolean, String, Long, Float),Float]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-41943.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="454.1596" y="-41947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field6[(Int, Char, Boolean, String, Long, Float),Float]</text>
<text text-anchor="middle" x="652.6596" y="-41932.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._5.N,Float] -->
<g id="node907" class="node">
<title>shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._5.N,Float]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-41943.8701" rx="374.5333" ry="26.7407"/>
<text text-anchor="start" x="1605.034" y="-41947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._5.N,Float]</text>
<text text-anchor="middle" x="1862.034" y="-41932.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Field6[(Int, Char, Boolean, String, Long, Float),Float]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._5.N,Float] -->
<g id="edge624" class="edge">
<title>monocle.function.Field6[(Int, Char, Boolean, String, Long, Float),Float]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._5.N,Float]</title>
<path fill="none" stroke="#000000" d="M945.0298,-41943.8701C1104.8015,-41943.8701 1304.6692,-41943.8701 1476.9943,-41943.8701"/>
<polygon fill="#000000" stroke="#000000" points="1476.9986,-41947.3702 1486.9986,-41943.8701 1476.9985,-41940.3702 1476.9986,-41947.3702"/>
</g>
<!-- org.scalacheck.util.Buildable[(Int, String),scala.collection.immutable.Map[Int,String]] -->
<g id="node497" class="node">
<title>org.scalacheck.util.Buildable[(Int, String),scala.collection.immutable.Map[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-26.8701" rx="345.5506" ry="26.7407"/>
<text text-anchor="start" x="5625.5954" y="-30.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(Int, String),scala.collection.immutable.Map[Int,String]]</text>
<text text-anchor="middle" x="5862.0954" y="-15.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(Int, String),scala.collection.immutable.Map[Int,String]] -->
<g id="node840" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(Int, String),scala.collection.immutable.Map[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-26.8701" rx="392.3885" ry="26.7407"/>
<text text-anchor="start" x="6776.514" y="-30.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(Int, String),scala.collection.immutable.Map[Int,String]]</text>
<text text-anchor="middle" x="7046.014" y="-15.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(Int, String),scala.collection.immutable.Map[Int,String]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Int, String),scala.collection.immutable.Map[Int,String]] -->
<g id="edge83" class="edge">
<title>org.scalacheck.util.Buildable[(Int, String),scala.collection.immutable.Map[Int,String]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Int, String),scala.collection.immutable.Map[Int,String]]</title>
<path fill="none" stroke="#000000" d="M6208.1147,-26.8701C6344.408,-26.8701 6501.8572,-26.8701 6643.2225,-26.8701"/>
<polygon fill="#000000" stroke="#000000" points="6643.3726,-30.3702 6653.3725,-26.8701 6643.3725,-23.3702 6643.3726,-30.3702"/>
</g>
<!-- monocle.function.Each[Int :: List[Int] :: shapeless.HNil,Int] -->
<g id="node498" class="node">
<title>monocle.function.Each[Int :: List[Int] :: shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-26661.8701" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="6882.514" y="-26665.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: List[Int] :: shapeless.HNil,Int]</text>
<text text-anchor="middle" x="7046.014" y="-26650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- shapeless.Generic.Aux[Int :: List[Int] :: shapeless.HNil,SGen] -->
<g id="node1015" class="node">
<title>shapeless.Generic.Aux[Int :: List[Int] :: shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-26661.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="8026.6985" y="-26665.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Int :: List[Int] :: shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="8196.6985" y="-26650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Each[Int :: List[Int] :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: List[Int] :: shapeless.HNil,SGen] -->
<g id="edge1276" class="edge">
<title>monocle.function.Each[Int :: List[Int] :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: List[Int] :: shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M7288.6385,-26661.8701C7478.0464,-26661.8701 7740.7535,-26661.8701 7934.8911,-26661.8701"/>
<polygon fill="#000000" stroke="#000000" points="7934.9546,-26665.3702 7944.9546,-26661.8701 7934.9545,-26658.3702 7934.9546,-26665.3702"/>
</g>
<!-- monocle.function.Each[List[Int] :: shapeless.HNil,Int] -->
<g id="node1121" class="node">
<title>monocle.function.Each[List[Int] :: shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-26589.8701" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="8048.1985" y="-26593.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[List[Int] :: shapeless.HNil,Int]</text>
<text text-anchor="middle" x="8196.6985" y="-26578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- monocle.function.Each[Int :: List[Int] :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[List[Int] :: shapeless.HNil,Int] -->
<g id="edge637" class="edge">
<title>monocle.function.Each[Int :: List[Int] :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[List[Int] :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M7257.4022,-26648.6432C7465.8726,-26635.5989 7782.5055,-26615.7867 7989.5086,-26602.8342"/>
<polygon fill="#000000" stroke="#000000" points="7989.828,-26606.3212 7999.5899,-26602.2034 7989.3908,-26599.3349 7989.828,-26606.3212"/>
</g>
<!-- org.scalacheck.Arbitrary[((Char, String)) =&gt; (Char, String)] -->
<g id="node499" class="node">
<title>org.scalacheck.Arbitrary[((Char, String)) =&gt; (Char, String)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-4771.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="4422.253" y="-4775.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Char, String)) =&gt; (Char, String)]</text>
<text text-anchor="middle" x="4586.253" y="-4760.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Char, String)) =&gt; (Char, String)]&#45;&gt;scala.reflect.ClassTag[((Char, String)) =&gt; (Char, String)] -->
<g id="edge435" class="edge">
<title>org.scalacheck.Arbitrary[((Char, String)) =&gt; (Char, String)]&#45;&gt;scala.reflect.ClassTag[((Char, String)) =&gt; (Char, String)]</title>
<path fill="none" stroke="#000000" d="M4822.1212,-4765.2146C5051.0626,-4758.7547 5396.6292,-4749.004 5625.7369,-4742.5393"/>
<polygon fill="#000000" stroke="#000000" points="5625.9796,-4746.0339 5635.8768,-4742.2532 5625.7821,-4739.0367 5625.9796,-4746.0339"/>
</g>
<!-- org.scalacheck.Arbitrary[((Char, String)) =&gt; (Char, String)]&#45;&gt;org.scalacheck.Arbitrary[(Char, String)] -->
<g id="edge918" class="edge">
<title>org.scalacheck.Arbitrary[((Char, String)) =&gt; (Char, String)]&#45;&gt;org.scalacheck.Arbitrary[(Char, String)]</title>
<path fill="none" stroke="#000000" d="M4822.1212,-4778.5255C5072.6705,-4785.5951 5462.8986,-4796.6061 5687.2996,-4802.9379"/>
<polygon fill="#000000" stroke="#000000" points="5687.4329,-4806.443 5697.5276,-4803.2265 5687.6304,-4799.4457 5687.4329,-4806.443"/>
</g>
<!-- org.scalacheck.Cogen[(Char, String)] -->
<g id="node932" class="node">
<title>org.scalacheck.Cogen[(Char, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-4591.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="5759.5954" y="-4595.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Char, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-4580.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Char, String)) =&gt; (Char, String)]&#45;&gt;org.scalacheck.Cogen[(Char, String)] -->
<g id="edge1349" class="edge">
<title>org.scalacheck.Arbitrary[((Char, String)) =&gt; (Char, String)]&#45;&gt;org.scalacheck.Cogen[(Char, String)]</title>
<path fill="none" stroke="#000000" d="M4667.3422,-4797.2708C4807.2978,-4835.5039 5094.0961,-4888.2587 5249.5191,-4735.8701 5266.7031,-4719.0216 5240.3794,-4644.7636 5257.5191,-4627.8701 5319.4382,-4566.8401 5553.6396,-4569.6354 5711.7061,-4579.2639"/>
<polygon fill="#000000" stroke="#000000" points="5711.8061,-4582.7769 5722.0049,-4579.9074 5712.2427,-4575.7905 5711.8061,-4582.7769"/>
</g>
<!-- scalaz.Equal[BigDecimal] -->
<g id="node500" class="node">
<title>scalaz.Equal[BigDecimal]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-42015.8701" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="580.6596" y="-42019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[BigDecimal]</text>
<text text-anchor="middle" x="652.6596" y="-42004.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Validation[String,Int] =&gt; scalaz.Validation[String,Int]] -->
<g id="node503" class="node">
<title>org.scalacheck.Arbitrary[scalaz.Validation[String,Int] =&gt; scalaz.Validation[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-8389.8701" rx="348.7073" ry="26.7407"/>
<text text-anchor="start" x="4347.753" y="-8393.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.Validation[String,Int] =&gt; scalaz.Validation[String,Int]]</text>
<text text-anchor="middle" x="4586.253" y="-8378.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Validation[String,Int] =&gt; scalaz.Validation[String,Int]]&#45;&gt;scala.reflect.ClassTag[scalaz.Validation[String,Int] =&gt; scalaz.Validation[String,Int]] -->
<g id="edge169" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Validation[String,Int] =&gt; scalaz.Validation[String,Int]]&#45;&gt;scala.reflect.ClassTag[scalaz.Validation[String,Int] =&gt; scalaz.Validation[String,Int]]</title>
<path fill="none" stroke="#000000" d="M4934.8825,-8389.8701C5114.9144,-8389.8701 5333.9465,-8389.8701 5513.9136,-8389.8701"/>
<polygon fill="#000000" stroke="#000000" points="5514.0783,-8393.3702 5524.0783,-8389.8701 5514.0782,-8386.3702 5514.0783,-8393.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Validation[String,Int] =&gt; scalaz.Validation[String,Int]]&#45;&gt;org.scalacheck.Cogen[scalaz.Validation[String,Int]] -->
<g id="edge1114" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Validation[String,Int] =&gt; scalaz.Validation[String,Int]]&#45;&gt;org.scalacheck.Cogen[scalaz.Validation[String,Int]]</title>
<path fill="none" stroke="#000000" d="M4930.9447,-8385.6712C5049.5323,-8365.751 5171.8812,-8320.9597 5249.5191,-8226.8701 5260.8479,-8213.1406 5245.0448,-8079.5678 5257.5191,-8066.8701 5313.0684,-8010.3256 5512.7035,-8006.1433 5667.548,-8012.2708"/>
<polygon fill="#000000" stroke="#000000" points="5667.5448,-8015.7736 5677.6806,-8012.6889 5667.8334,-8008.7795 5667.5448,-8015.7736"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Validation[String,Int]] -->
<g id="node1199" class="node">
<title>org.scalacheck.Arbitrary[scalaz.Validation[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-9901.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="5713.0954" y="-9905.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.Validation[String,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-9890.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 47ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Validation[String,Int] =&gt; scalaz.Validation[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.Validation[String,Int]] -->
<g id="edge1364" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Validation[String,Int] =&gt; scalaz.Validation[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.Validation[String,Int]]</title>
<path fill="none" stroke="#000000" d="M4667.3169,-8363.7045C4808.5487,-8323.7857 5098.9987,-8267.8399 5249.5191,-8425.8701 5263.3132,-8440.3523 5243.7631,-9851.3516 5257.5191,-9865.8701 5312.2295,-9923.6129 5513.4557,-9925.6758 5668.897,-9917.7052"/>
<polygon fill="#000000" stroke="#000000" points="5669.2667,-9921.1906 5679.0674,-9917.1662 5668.8961,-9914.2004 5669.2667,-9921.1906"/>
</g>
<!-- org.scalacheck.Arbitrary[Option[String] =&gt; Option[String]] -->
<g id="node505" class="node">
<title>org.scalacheck.Arbitrary[Option[String] =&gt; Option[String]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-6501.8701" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="4422.753" y="-6505.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Option[String] =&gt; Option[String]]</text>
<text text-anchor="middle" x="4586.253" y="-6490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 41ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[String] =&gt; Option[String]]&#45;&gt;org.scalacheck.Arbitrary[Option[String]] -->
<g id="edge1088" class="edge">
<title>org.scalacheck.Arbitrary[Option[String] =&gt; Option[String]]&#45;&gt;org.scalacheck.Arbitrary[Option[String]]</title>
<path fill="none" stroke="#000000" d="M4668.712,-6476.5455C4808.4858,-6439.2767 5092.0581,-6389.0535 5249.5191,-6537.8701 5272.919,-6559.9853 5234.1773,-6587.6934 5257.5191,-6609.8701 5319.103,-6668.38 5543.7902,-6667.3726 5701.1587,-6658.6697"/>
<polygon fill="#000000" stroke="#000000" points="5701.6394,-6662.1481 5711.4245,-6658.0859 5701.2419,-6655.1594 5701.6394,-6662.1481"/>
</g>
<!-- org.scalacheck.Cogen[Option[String]] -->
<g id="node607" class="node">
<title>org.scalacheck.Cogen[Option[String]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-6213.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="5758.0954" y="-6217.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Option[String]]</text>
<text text-anchor="middle" x="5862.0954" y="-6202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 12ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[String] =&gt; Option[String]]&#45;&gt;org.scalacheck.Cogen[Option[String]] -->
<g id="edge896" class="edge">
<title>org.scalacheck.Arbitrary[Option[String] =&gt; Option[String]]&#45;&gt;org.scalacheck.Cogen[Option[String]]</title>
<path fill="none" stroke="#000000" d="M4639.4067,-6475.5954C4750.8036,-6421.9674 5018.2526,-6300.6935 5257.5191,-6249.8701 5402.9522,-6218.9781 5572.1734,-6211.2291 5694.535,-6210.4819"/>
<polygon fill="#000000" stroke="#000000" points="5694.7582,-6213.981 5704.742,-6210.4351 5694.7261,-6206.9811 5694.7582,-6213.981"/>
</g>
<!-- scala.reflect.ClassTag[Option[String] =&gt; Option[String]] -->
<g id="node906" class="node">
<title>scala.reflect.ClassTag[Option[String] =&gt; Option[String]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-6501.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="5706.0954" y="-6505.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Option[String] =&gt; Option[String]]</text>
<text text-anchor="middle" x="5862.0954" y="-6490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[String] =&gt; Option[String]]&#45;&gt;scala.reflect.ClassTag[Option[String] =&gt; Option[String]] -->
<g id="edge451" class="edge">
<title>org.scalacheck.Arbitrary[Option[String] =&gt; Option[String]]&#45;&gt;scala.reflect.ClassTag[Option[String] =&gt; Option[String]]</title>
<path fill="none" stroke="#000000" d="M4828.8561,-6501.8701C5055.8906,-6501.8701 5393.1971,-6501.8701 5620.0506,-6501.8701"/>
<polygon fill="#000000" stroke="#000000" points="5620.094,-6505.3702 5630.094,-6501.8701 5620.0939,-6498.3702 5620.094,-6505.3702"/>
</g>
<!-- scalaz.Equal[MacroOutSideMonocleSpec.this.EmptyCaseType[Int]] -->
<g id="node507" class="node">
<title>scalaz.Equal[MacroOutSideMonocleSpec.this.EmptyCaseType[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-42087.8701" rx="276.4575" ry="26.7407"/>
<text text-anchor="start" x="465.1596" y="-42091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[MacroOutSideMonocleSpec.this.EmptyCaseType[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-42076.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[String =&gt; String] -->
<g id="node508" class="node">
<title>org.scalacheck.Arbitrary[String =&gt; String]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-6285.8701" rx="176.5537" ry="26.7407"/>
<text text-anchor="start" x="5745.0954" y="-6289.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[String =&gt; String]</text>
<text text-anchor="middle" x="5862.0954" y="-6274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">25 times = 299ms</text>
</g>
<!-- org.scalacheck.Arbitrary[String =&gt; String]&#45;&gt;scala.reflect.ClassTag[String =&gt; String] -->
<g id="edge355" class="edge">
<title>org.scalacheck.Arbitrary[String =&gt; String]&#45;&gt;scala.reflect.ClassTag[String =&gt; String]</title>
<path fill="none" stroke="#000000" d="M6039.0201,-6285.8701C6262.7257,-6285.8701 6645.5949,-6285.8701 6869.2326,-6285.8701"/>
<polygon fill="#000000" stroke="#000000" points="6869.4301,-6289.3702 6879.4301,-6285.8701 6869.43,-6282.3702 6869.4301,-6289.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[String =&gt; String]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge1265" class="edge">
<title>org.scalacheck.Arbitrary[String =&gt; String]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6015.0744,-6272.3609C6173.8195,-6262.1283 6407.1124,-6258.9826 6466.6717,-6321.8701 6481.5706,-6337.6015 6462.4443,-7863.983 6474.6717,-7881.8701 6571.7924,-8023.9451 6773.4249,-8076.7051 6909.2627,-8096.2974"/>
<polygon fill="#000000" stroke="#000000" points="6908.9459,-8099.7871 6919.3344,-8097.7068 6909.916,-8092.8546 6908.9459,-8099.7871"/>
</g>
<!-- org.scalacheck.Arbitrary[String =&gt; String]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge350" class="edge">
<title>org.scalacheck.Arbitrary[String =&gt; String]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M6039.0344,-6286.5473C6160.2859,-6284.2807 6324.3103,-6275.8282 6466.6717,-6249.8701 6655.7604,-6215.3916 6869.6656,-6138.5993 6976.9168,-6097.3417"/>
<polygon fill="#000000" stroke="#000000" points="6978.2651,-6100.573 6986.3326,-6093.7054 6975.7432,-6094.0431 6978.2651,-6100.573"/>
</g>
<!-- shapeless.ops.coproduct.Selector[shapeless.CNil,Boolean] -->
<g id="node509" class="node">
<title>shapeless.ops.coproduct.Selector[shapeless.CNil,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-40503.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="3007.3678" y="-40507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Selector[shapeless.CNil,Boolean]</text>
<text text-anchor="middle" x="3166.8678" y="-40492.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[(Int, Char)] -->
<g id="node510" class="node">
<title>org.scalacheck.Cogen[(Int, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-7449.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="5768.5954" y="-7453.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Int, Char)]</text>
<text text-anchor="middle" x="5862.0954" y="-7438.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 7ms</text>
</g>
<!-- org.scalacheck.Cogen[(Int, Char)]&#45;&gt;org.scalacheck.Cogen[Char] -->
<g id="edge248" class="edge">
<title>org.scalacheck.Cogen[(Int, Char)]&#45;&gt;org.scalacheck.Cogen[Char]</title>
<path fill="none" stroke="#000000" d="M5991.1663,-7461.7781C6149.3526,-7473.1759 6404.1451,-7480.1018 6466.6717,-7413.8701 6486.3316,-7393.0452 6455.0477,-3310.7289 6474.6717,-3289.8701 6599.9919,-3156.6642 6840.3576,-3196.358 6965.6237,-3229.2126"/>
<polygon fill="#000000" stroke="#000000" points="6964.9784,-3232.6629 6975.543,-3231.8632 6966.7856,-3225.9002 6964.9784,-3232.6629"/>
</g>
<!-- org.scalacheck.Cogen[(Int, Char)]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge498" class="edge">
<title>org.scalacheck.Cogen[(Int, Char)]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M5991.1575,-7437.9703C6149.3344,-7426.5814 6404.1169,-7419.6649 6466.6717,-7485.8701 6480.3454,-7500.3417 6463.1667,-10336.6209 6474.6717,-10352.8701 6576.2975,-10496.4025 6788.6158,-10539.0511 6923.8649,-10551.3611"/>
<polygon fill="#000000" stroke="#000000" points="6923.6058,-10554.8517 6933.871,-10552.2294 6924.211,-10547.8779 6923.6058,-10554.8517"/>
</g>
<!-- org.scalactic.Equality[PrismSpec.this.IntOrString] -->
<g id="node511" class="node">
<title>org.scalactic.Equality[PrismSpec.this.IntOrString]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-42231.8701" rx="205.5364" ry="26.7407"/>
<text text-anchor="start" x="1724.534" y="-42235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[PrismSpec.this.IntOrString]</text>
<text text-anchor="middle" x="1862.034" y="-42220.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 13ms</text>
</g>
<!-- scalaz.Equal[PrismSpec.this.IntOrString] -->
<g id="node935" class="node">
<title>scalaz.Equal[PrismSpec.this.IntOrString]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-42195.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="3053.8678" y="-42199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[PrismSpec.this.IntOrString]</text>
<text text-anchor="middle" x="3166.8678" y="-42184.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 8ms</text>
</g>
<!-- org.scalactic.Equality[PrismSpec.this.IntOrString]&#45;&gt;scalaz.Equal[PrismSpec.this.IntOrString] -->
<g id="edge1186" class="edge">
<title>org.scalactic.Equality[PrismSpec.this.IntOrString]&#45;&gt;scalaz.Equal[PrismSpec.this.IntOrString]</title>
<path fill="none" stroke="#000000" d="M2063.4113,-42226.3141C2316.2379,-42219.3387 2746.0497,-42207.4803 2987.8701,-42200.8086"/>
<polygon fill="#000000" stroke="#000000" points="2988.2733,-42204.2989 2998.1729,-42200.5243 2988.0801,-42197.3015 2988.2733,-42204.2989"/>
</g>
<!-- org.scalacheck.Arbitrary[Boolean]&#45;&gt;scala.reflect.ClassTag[Boolean] -->
<g id="edge697" class="edge">
<title>org.scalacheck.Arbitrary[Boolean]&#45;&gt;scala.reflect.ClassTag[Boolean]</title>
<path fill="none" stroke="#000000" d="M7191.166,-6609.8701C7412.3717,-6609.8701 7831.3901,-6609.8701 8052.2034,-6609.8701"/>
<polygon fill="#000000" stroke="#000000" points="8052.2429,-6613.3702 8062.2428,-6609.8701 8052.2428,-6606.3702 8052.2429,-6613.3702"/>
</g>
<!-- scalaz.Show[A] -->
<g id="node513" class="node">
<title>scalaz.Show[A]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-42231.8701" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="609.1596" y="-42235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Show[A]</text>
<text text-anchor="middle" x="652.6596" y="-42220.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil] -->
<g id="node514" class="node">
<title>org.scalactic.Equality[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-41655.8701" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="412.1596" y="-41659.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="652.6596" y="-41644.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]&#45;&gt;scalaz.Equal[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil] -->
<g id="edge919" class="edge">
<title>org.scalactic.Equality[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]&#45;&gt;scalaz.Equal[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M1004.4917,-41655.8701C1171.8393,-41655.8701 1370.701,-41655.8701 1534.772,-41655.8701"/>
<polygon fill="#000000" stroke="#000000" points="1535.0313,-41659.3702 1545.0312,-41655.8701 1535.0312,-41652.3702 1535.0313,-41659.3702"/>
</g>
<!-- Int :: HListSpec.this.HTail =&gt; ?{def ===: ?} -->
<g id="node515" class="node">
<title>Int :: HListSpec.this.HTail =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-42303.8701" rx="187.2667" ry="26.7407"/>
<text text-anchor="start" x="528.1596" y="-42307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int :: HListSpec.this.HTail =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="652.6596" y="-42292.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Stream[Int]]&#45;&gt;Stream[Int] =&gt; Traversable[Int] -->
<g id="edge783" class="edge">
<title>org.scalacheck.Arbitrary[Stream[Int]]&#45;&gt;Stream[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M6019.9226,-11509.8701C6250.7247,-11509.8701 6677.0961,-11509.8701 6900.6265,-11509.8701"/>
<polygon fill="#000000" stroke="#000000" points="6900.7879,-11513.3702 6910.7879,-11509.8701 6900.7879,-11506.3702 6900.7879,-11513.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Stream[Int]]&#45;&gt;scala.reflect.ClassTag[Stream[Int]] -->
<g id="edge1064" class="edge">
<title>org.scalacheck.Arbitrary[Stream[Int]]&#45;&gt;scala.reflect.ClassTag[Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M6011.1749,-11501.1005C6133.545,-11493.8763 6311.3413,-11483.3208 6466.6717,-11473.8701 6612.7923,-11464.9797 6779.627,-11454.5871 6896.6175,-11447.2598"/>
<polygon fill="#000000" stroke="#000000" points="6896.9565,-11450.7456 6906.7181,-11446.6271 6896.5188,-11443.7593 6896.9565,-11450.7456"/>
</g>
<!-- org.scalacheck.util.Buildable[Int,Stream[Int]] -->
<g id="node962" class="node">
<title>org.scalacheck.util.Buildable[Int,Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-11581.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="6921.014" y="-11585.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Int,Stream[Int]]</text>
<text text-anchor="middle" x="7046.014" y="-11570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">17 times = 19ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Stream[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Stream[Int]] -->
<g id="edge99" class="edge">
<title>org.scalacheck.Arbitrary[Stream[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M6011.1749,-11518.6396C6133.545,-11525.8638 6311.3413,-11536.4194 6466.6717,-11545.8701 6599.4639,-11553.9495 6749.3636,-11563.2696 6863.413,-11570.4021"/>
<polygon fill="#000000" stroke="#000000" points="6863.4409,-11573.9106 6873.64,-11571.0419 6863.878,-11566.9243 6863.4409,-11573.9106"/>
</g>
<!-- org.scalacheck.Arbitrary[Stream[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge767" class="edge">
<title>org.scalacheck.Arbitrary[Stream[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6001.5318,-11497.266C6160.215,-11486.3719 6405.3839,-11481.1802 6466.6717,-11545.8701 6480.6182,-11560.5907 6464.3355,-12988.4241 6474.6717,-13005.8701 6577.8306,-13179.9866 6814.6991,-13265.3782 6948.8055,-13301.1456"/>
<polygon fill="#000000" stroke="#000000" points="6948.1156,-13304.583 6958.6767,-13303.7382 6949.8939,-13297.8127 6948.1156,-13304.583"/>
</g>
<!-- scalaz.Equal[Set[Int]] -->
<g id="node517" class="node">
<title>scalaz.Equal[Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-20959.8701" rx="95.4188" ry="26.7407"/>
<text text-anchor="start" x="5802.5954" y="-20963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Set[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-20948.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scalaz.Equal[Set[Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge462" class="edge">
<title>scalaz.Equal[Set[Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5955.5715,-20965.3611C6074.371,-20972.3569 6285.759,-20984.8629 6466.6717,-20995.8701 6641.4497,-21006.504 6845.8634,-21019.2872 6959.1666,-21026.4032"/>
<polygon fill="#000000" stroke="#000000" points="6958.9734,-21029.8979 6969.1732,-21027.0318 6959.4123,-21022.9117 6958.9734,-21029.8979"/>
</g>
<!-- scalaz.Equal[Option[String]] -->
<g id="node519" class="node">
<title>scalaz.Equal[Option[String]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-20239.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="5783.5954" y="-20243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[String]]</text>
<text text-anchor="middle" x="5862.0954" y="-20228.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 13ms</text>
</g>
<!-- scalaz.Equal[Option[String]]&#45;&gt;scalaz.Equal[String] -->
<g id="edge168" class="edge">
<title>scalaz.Equal[Option[String]]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M5980.5484,-20232.9074C6102.4408,-20225.7212 6297.8286,-20214.1429 6466.6717,-20203.8701 6635.5912,-20193.5926 6832.193,-20181.3075 6947.4704,-20174.0713"/>
<polygon fill="#000000" stroke="#000000" points="6947.9218,-20177.5499 6957.6828,-20173.4301 6947.4831,-20170.5637 6947.9218,-20177.5499"/>
</g>
<!-- org.scalacheck.Shrink[Int] -->
<g id="node520" class="node">
<title>org.scalacheck.Shrink[Int]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-297.8701" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="6973.514" y="-301.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Int]</text>
<text text-anchor="middle" x="7046.014" y="-286.6701" font-family="Times,serif" font-size="14.00" fill="#000000">22 times = 95ms</text>
</g>
<!-- Integral[Int] -->
<g id="node640" class="node">
<title>Integral[Int]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-341.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="8149.6985" y="-345.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Int]</text>
<text text-anchor="middle" x="8196.6985" y="-330.6701" font-family="Times,serif" font-size="14.00" fill="#000000">22 times = 14ms</text>
</g>
<!-- org.scalacheck.Shrink[Int]&#45;&gt;Integral[Int] -->
<g id="edge1015" class="edge">
<title>org.scalacheck.Shrink[Int]&#45;&gt;Integral[Int]</title>
<path fill="none" stroke="#000000" d="M7158.4416,-302.1691C7387.2864,-310.9197 7902.9681,-330.6384 8109.118,-338.5211"/>
<polygon fill="#000000" stroke="#000000" points="8109.1646,-342.0254 8119.2911,-338.9101 8109.4322,-335.0305 8109.1646,-342.0254"/>
</g>
<!-- Fractional[Int] -->
<g id="node804" class="node">
<title>Fractional[Int]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-269.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="8149.6985" y="-273.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Int]</text>
<text text-anchor="middle" x="8196.6985" y="-258.6701" font-family="Times,serif" font-size="14.00" fill="#000000">22 times = 14ms</text>
</g>
<!-- org.scalacheck.Shrink[Int]&#45;&gt;Fractional[Int] -->
<g id="edge609" class="edge">
<title>org.scalacheck.Shrink[Int]&#45;&gt;Fractional[Int]</title>
<path fill="none" stroke="#000000" d="M7159.4952,-295.1087C7388.7998,-289.5289 7902.9895,-277.017 8108.9413,-272.0055"/>
<polygon fill="#000000" stroke="#000000" points="8109.1935,-275.5005 8119.1054,-271.7582 8109.0232,-268.5026 8109.1935,-275.5005"/>
</g>
<!-- shapeless.ops.hlist.IsHCons.Aux[scalaz.NonEmptyList[Int],Int,scalaz.IList[Int]] -->
<g id="node521" class="node">
<title>shapeless.ops.hlist.IsHCons.Aux[scalaz.NonEmptyList[Int],Int,scalaz.IList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-42375.8701" rx="321.9673" ry="26.7407"/>
<text text-anchor="start" x="1642.534" y="-42379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.IsHCons.Aux[scalaz.NonEmptyList[Int],Int,scalaz.IList[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-42364.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Field6[HListSpec.this.H,Double] -->
<g id="node522" class="node">
<title>monocle.function.Field6[HListSpec.this.H,Double]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-38163.8701" rx="210.0214" ry="26.7407"/>
<text text-anchor="start" x="512.1596" y="-38167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field6[HListSpec.this.H,Double]</text>
<text text-anchor="middle" x="652.6596" y="-38152.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 29ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._5.N,Double] -->
<g id="node557" class="node">
<title>shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._5.N,Double]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-38199.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="1663.534" y="-38203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._5.N,Double]</text>
<text text-anchor="middle" x="1862.034" y="-38188.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- monocle.function.Field6[HListSpec.this.H,Double]&#45;&gt;shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._5.N,Double] -->
<g id="edge528" class="edge">
<title>monocle.function.Field6[HListSpec.this.H,Double]&#45;&gt;shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._5.N,Double]</title>
<path fill="none" stroke="#000000" d="M857.4712,-38169.9668C1054.2063,-38175.8231 1353.2985,-38184.7263 1573.9972,-38191.2959"/>
<polygon fill="#000000" stroke="#000000" points="1574.0173,-38194.798 1584.117,-38191.5972 1574.2256,-38187.8011 1574.0173,-38194.798"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._5.N,Double,(Double, HListSpec.this.H)] -->
<g id="node748" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._5.N,Double,(Double, HListSpec.this.H)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-38127.8701" rx="432.0845" ry="26.7407"/>
<text text-anchor="start" x="1564.534" y="-38131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._5.N,Double,(Double, HListSpec.this.H)]</text>
<text text-anchor="middle" x="1862.034" y="-38116.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- monocle.function.Field6[HListSpec.this.H,Double]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._5.N,Double,(Double, HListSpec.this.H)] -->
<g id="edge870" class="edge">
<title>monocle.function.Field6[HListSpec.this.H,Double]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._5.N,Double,(Double, HListSpec.this.H)]</title>
<path fill="none" stroke="#000000" d="M857.4712,-38157.7733C1022.526,-38152.8601 1259.6268,-38145.8022 1462.0359,-38139.777"/>
<polygon fill="#000000" stroke="#000000" points="1462.3654,-38143.2688 1472.2568,-38139.4727 1462.1571,-38136.2719 1462.3654,-38143.2688"/>
</g>
<!-- shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._1.N,Boolean]&#45;&gt;shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0] -->
<g id="edge1167" class="edge">
<title>shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._1.N,Boolean]&#45;&gt;shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0]</title>
<path fill="none" stroke="#000000" d="M2158.5289,-33267.8701C2341.1858,-33267.8701 2577.4802,-33267.8701 2775.408,-33267.8701"/>
<polygon fill="#000000" stroke="#000000" points="2775.6969,-33271.3702 2785.6968,-33267.8701 2775.6968,-33264.3702 2775.6969,-33271.3702"/>
</g>
<!-- scala.reflect.ClassTag[String \/ Int =&gt; String \/ Int] -->
<g id="node524" class="node">
<title>scala.reflect.ClassTag[String \/ Int =&gt; String \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-8677.8701" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="5726.5954" y="-8681.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[String / Int =&gt; String / Int]</text>
<text text-anchor="middle" x="5862.0954" y="-8666.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._4.N,Long] -->
<g id="node525" class="node">
<title>shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._4.N,Long]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-34581.8701" rx="284.0141" ry="26.7407"/>
<text text-anchor="start" x="1669.034" y="-34585.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._4.N,Long]</text>
<text text-anchor="middle" x="1862.034" y="-34570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3] -->
<g id="node1223" class="node">
<title>shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-34581.8701" rx="395.9596" ry="26.7407"/>
<text text-anchor="start" x="2894.8678" y="-34585.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3]</text>
<text text-anchor="middle" x="3166.8678" y="-34570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._4.N,Long]&#45;&gt;shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3] -->
<g id="edge950" class="edge">
<title>shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._4.N,Long]&#45;&gt;shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3]</title>
<path fill="none" stroke="#000000" d="M2146.3703,-34581.8701C2326.189,-34581.8701 2561.4556,-34581.8701 2760.7716,-34581.8701"/>
<polygon fill="#000000" stroke="#000000" points="2760.8349,-34585.3702 2770.8349,-34581.8701 2760.8348,-34578.3702 2760.8349,-34585.3702"/>
</g>
<!-- monocle.function.FilterIndex[Int ==&gt;&gt; Char,Int,Char] -->
<g id="node526" class="node">
<title>monocle.function.FilterIndex[Int ==&gt;&gt; Char,Int,Char]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-20815.8701" rx="223.3915" ry="26.7407"/>
<text text-anchor="start" x="5712.0954" y="-20819.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[Int ==&gt;&gt; Char,Int,Char]</text>
<text text-anchor="middle" x="5862.0954" y="-20804.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.FilterIndex[Int ==&gt;&gt; Char,Int,Char]&#45;&gt;scalaz.Order[Int] -->
<g id="edge72" class="edge">
<title>monocle.function.FilterIndex[Int ==&gt;&gt; Char,Int,Char]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M6085.8033,-20816.3372C6200.4773,-20819.8147 6341.8954,-20829.1183 6466.6717,-20851.8701 6661.0965,-20887.3215 6881.7581,-20967.5087 6985.7389,-21007.8046"/>
<polygon fill="#000000" stroke="#000000" points="6984.5432,-21011.0949 6995.1318,-21011.4593 6987.0816,-21004.5714 6984.5432,-21011.0949"/>
</g>
<!-- (=&gt; scala.collection.immutable.Stream[Int]) =&gt; ?{def #:::: ?} -->
<g id="node527" class="node">
<title>(=&gt; scala.collection.immutable.Stream[Int]) =&gt; ?{def #:::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-42447.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="482.6596" y="-42451.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Stream[Int]) =&gt; ?{def #:::: ?}</text>
<text text-anchor="middle" x="652.6596" y="-42436.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int,),(Int,)] -->
<g id="node528" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[(Int,),(Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-36777.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="1738.534" y="-36781.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[(Int,),(Int,)]</text>
<text text-anchor="middle" x="1862.034" y="-36766.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 23ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int,),(Int,)]&#45;&gt;shapeless.Generic.Aux[(Int,),L1] -->
<g id="edge750" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int,),(Int,)]&#45;&gt;shapeless.Generic.Aux[(Int,),L1]</title>
<path fill="none" stroke="#000000" d="M2009.8507,-36794.1818C2121.9457,-36806.072 2279.8885,-36821.8005 2418.7488,-36831.8701 2626.9826,-36846.9703 2868.2979,-36857.2904 3019.2854,-36862.8864"/>
<polygon fill="#000000" stroke="#000000" points="3019.4264,-36866.3939 3029.5486,-36863.2647 3019.6843,-36859.3987 3019.4264,-36866.3939"/>
</g>
<!-- shapeless.ops.hlist.Tupler[Int :: shapeless.HNil] -->
<g id="node1363" class="node">
<title>shapeless.ops.hlist.Tupler[Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-36795.8701" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="3035.8678" y="-36799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Tupler[Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="3166.8678" y="-36784.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int,),(Int,)]&#45;&gt;shapeless.ops.hlist.Tupler[Int :: shapeless.HNil] -->
<g id="edge340" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int,),(Int,)]&#45;&gt;shapeless.ops.hlist.Tupler[Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2047.2533,-36780.4251C2288.6634,-36783.7554 2709.5809,-36789.5618 2960.8273,-36793.0278"/>
<polygon fill="#000000" stroke="#000000" points="2961.1291,-36796.5322 2971.1764,-36793.1705 2961.2257,-36789.5328 2961.1291,-36796.5322"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Int :: shapeless.HNil,L2] -->
<g id="node1473" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[Int :: shapeless.HNil,L2]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-36723.8701" rx="234.1047" ry="26.7407"/>
<text text-anchor="start" x="3009.3678" y="-36727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[Int :: shapeless.HNil,L2]</text>
<text text-anchor="middle" x="3166.8678" y="-36712.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int,),(Int,)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Int :: shapeless.HNil,L2] -->
<g id="edge289" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int,),(Int,)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Int :: shapeless.HNil,L2]</title>
<path fill="none" stroke="#000000" d="M2041.0707,-36770.4607C2273.8849,-36760.8258 2680.9012,-36743.9816 2936.5033,-36733.4036"/>
<polygon fill="#000000" stroke="#000000" points="2936.8191,-36736.8936 2946.6658,-36732.983 2936.5295,-36729.8996 2936.8191,-36736.8936"/>
</g>
<!-- scala.reflect.ClassTag[(IsoSpec.this.IntWrapper, Boolean)] -->
<g id="node529" class="node">
<title>scala.reflect.ClassTag[(IsoSpec.this.IntWrapper, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-4879.8701" rx="239.9186" ry="26.7407"/>
<text text-anchor="start" x="6884.514" y="-4883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(IsoSpec.this.IntWrapper, Boolean)]</text>
<text text-anchor="middle" x="7046.014" y="-4868.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Unit === Unit -->
<g id="node530" class="node">
<title>Unit === Unit</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-42519.8701" rx="68.6788" ry="26.7407"/>
<text text-anchor="start" x="612.1596" y="-42523.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit === Unit</text>
<text text-anchor="middle" x="652.6596" y="-42508.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- scalaz.Equal[Vector[Int]] -->
<g id="node531" class="node">
<title>scalaz.Equal[Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-22301.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="5792.5954" y="-22305.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Vector[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-22290.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 11ms</text>
</g>
<!-- scalaz.Equal[Vector[Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge454" class="edge">
<title>scalaz.Equal[Vector[Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5965.6144,-22310.7499C6120.1417,-22321.4797 6400.1336,-22330.3397 6466.6717,-22260.8701 6479.1646,-22247.8267 6463.812,-21950.3015 6474.6717,-21935.8701 6585.5895,-21788.4716 6817.097,-21758.9174 6948.8336,-21754.6669"/>
<polygon fill="#000000" stroke="#000000" points="6949.0245,-21758.163 6958.9226,-21754.3846 6948.8286,-21751.1658 6949.0245,-21758.163"/>
</g>
<!-- scala.reflect.ClassTag[(A, B)] -->
<g id="node532" class="node">
<title>scala.reflect.ClassTag[(A, B)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-28565.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="6964.014" y="-28569.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(A, B)]</text>
<text text-anchor="middle" x="7046.014" y="-28554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Int] =&gt; Traversable[Int] -->
<g id="node533" class="node">
<title>List[Int] =&gt; Traversable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-8929.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="6967.514" y="-8933.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Int] =&gt; Traversable[Int]</text>
<text text-anchor="middle" x="7046.014" y="-8918.6701" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 17ms</text>
</g>
<!-- org.scalactic.Equality[List[TraversalSpec.this.Location]] -->
<g id="node534" class="node">
<title>org.scalactic.Equality[List[TraversalSpec.this.Location]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-18285.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="3011.8678" y="-18289.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[List[TraversalSpec.this.Location]]</text>
<text text-anchor="middle" x="3166.8678" y="-18274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalactic.Equality[List[TraversalSpec.this.Location]]&#45;&gt;scalaz.Equal[List[TraversalSpec.this.Location]] -->
<g id="edge400" class="edge">
<title>org.scalactic.Equality[List[TraversalSpec.this.Location]]&#45;&gt;scalaz.Equal[List[TraversalSpec.this.Location]]</title>
<path fill="none" stroke="#000000" d="M3397.6798,-18285.8701C3670.2714,-18285.8701 4119.5483,-18285.8701 4380.6521,-18285.8701"/>
<polygon fill="#000000" stroke="#000000" points="4381.0153,-18289.3702 4391.0153,-18285.8701 4381.0153,-18282.3702 4381.0153,-18289.3702"/>
</g>
<!-- scalaz.Equal[A1]&#45;&gt;scalaz.Equal[A] -->
<g id="edge150" class="edge">
<title>scalaz.Equal[A1]&#45;&gt;scalaz.Equal[A]</title>
<path fill="none" stroke="#000000" d="M6968.4007,-27916.6896C6602.0718,-27923.4298 5048.0234,-27928.5124 4669.5888,-27924.251"/>
<polygon fill="#000000" stroke="#000000" points="4669.5754,-27920.7507 4659.5347,-27924.1321 4669.4926,-27927.7502 4669.5754,-27920.7507"/>
</g>
<!-- org.scalacheck.Cogen[List[A]] -->
<g id="node536" class="node">
<title>org.scalacheck.Cogen[List[A]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-27239.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="5777.5954" y="-27243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[List[A]]</text>
<text text-anchor="middle" x="5862.0954" y="-27228.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- org.scalacheck.Cogen[List[A]]&#45;&gt;org.scalacheck.Cogen[A] -->
<g id="edge19" class="edge">
<title>org.scalacheck.Cogen[List[A]]&#45;&gt;org.scalacheck.Cogen[A]</title>
<path fill="none" stroke="#000000" d="M5991.8542,-27236.4359C6115.3104,-27235.7805 6305.5924,-27241.5898 6466.6717,-27275.8701 6664.9243,-27318.0614 6885.5258,-27416.4179 6987.9285,-27465.276"/>
<polygon fill="#000000" stroke="#000000" points="6986.6386,-27468.539 6997.1692,-27469.7039 6989.6635,-27462.2263 6986.6386,-27468.539"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Double :: shapeless.HNil,shapeless._0,Double,(Double, Double :: shapeless.HNil)] -->
<g id="node537" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Double :: shapeless.HNil,shapeless._0,Double,(Double, Double :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-38127.8701" rx="468.2094" ry="26.7407"/>
<text text-anchor="start" x="7873.6985" y="-38131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Double :: shapeless.HNil,shapeless._0,Double,(Double, Double :: shapeless.HNil)]</text>
<text text-anchor="middle" x="8196.6985" y="-38116.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil =&gt; ?{def ===: ?} -->
<g id="node538" class="node">
<title>Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-42591.8701" rx="313.4968" ry="26.7407"/>
<text text-anchor="start" x="439.1596" y="-42595.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="652.6596" y="-42580.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Boolean)] -->
<g id="node539" class="node">
<title>scala.reflect.ClassTag[(Int, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-14595.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="6943.514" y="-14599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Boolean)]</text>
<text text-anchor="middle" x="7046.014" y="-14584.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 7ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,Int] =&gt; Either[String,Int]] -->
<g id="node540" class="node">
<title>org.scalacheck.Arbitrary[Either[String,Int] =&gt; Either[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-8461.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="2989.3678" y="-8465.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Either[String,Int] =&gt; Either[String,Int]]</text>
<text text-anchor="middle" x="3166.8678" y="-8450.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 24ms</text>
</g>
<!-- scala.reflect.ClassTag[Either[String,Int] =&gt; Either[String,Int]] -->
<g id="node1108" class="node">
<title>scala.reflect.ClassTag[Either[String,Int] =&gt; Either[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-8461.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="4416.253" y="-8465.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Either[String,Int] =&gt; Either[String,Int]]</text>
<text text-anchor="middle" x="4586.253" y="-8450.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,Int] =&gt; Either[String,Int]]&#45;&gt;scala.reflect.ClassTag[Either[String,Int] =&gt; Either[String,Int]] -->
<g id="edge820" class="edge">
<title>org.scalacheck.Arbitrary[Either[String,Int] =&gt; Either[String,Int]]&#45;&gt;scala.reflect.ClassTag[Either[String,Int] =&gt; Either[String,Int]]</title>
<path fill="none" stroke="#000000" d="M3429.2731,-8461.8701C3684.2521,-8461.8701 4069.2629,-8461.8701 4324.1418,-8461.8701"/>
<polygon fill="#000000" stroke="#000000" points="4324.2869,-8465.3702 4334.2868,-8461.8701 4324.2868,-8458.3702 4324.2869,-8465.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,Int]] -->
<g id="node1146" class="node">
<title>org.scalacheck.Arbitrary[Either[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-8533.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="4467.253" y="-8537.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Either[String,Int]]</text>
<text text-anchor="middle" x="4586.253" y="-8522.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 56ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,Int] =&gt; Either[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[Either[String,Int]] -->
<g id="edge756" class="edge">
<title>org.scalacheck.Arbitrary[Either[String,Int] =&gt; Either[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[Either[String,Int]]</title>
<path fill="none" stroke="#000000" d="M3402.0466,-8473.7998C3684.1673,-8488.1107 4150.9206,-8511.7873 4406.0428,-8524.7287"/>
<polygon fill="#000000" stroke="#000000" points="4405.9891,-8528.2304 4416.1536,-8525.2416 4406.3438,-8521.2394 4405.9891,-8528.2304"/>
</g>
<!-- org.scalacheck.Cogen[Either[String,Int]] -->
<g id="node1326" class="node">
<title>org.scalacheck.Cogen[Either[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-7953.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="5750.5954" y="-7957.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Either[String,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-7942.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,Int] =&gt; Either[String,Int]]&#45;&gt;org.scalacheck.Cogen[Either[String,Int]] -->
<g id="edge287" class="edge">
<title>org.scalacheck.Arbitrary[Either[String,Int] =&gt; Either[String,Int]]&#45;&gt;org.scalacheck.Cogen[Either[String,Int]]</title>
<path fill="none" stroke="#000000" d="M3217.4065,-8435.3849C3336.5527,-8374.2939 3645.8792,-8223.5078 3922.9868,-8154.8701 4210.5594,-8083.6402 5025.4003,-8215.6288 5249.5191,-8021.8701 5260.6092,-8012.2823 5246.2374,-7999.2315 5257.5191,-7989.8701 5322.099,-7936.282 5541.1888,-7935.5242 5697.0024,-7942.5492"/>
<polygon fill="#000000" stroke="#000000" points="5697.0198,-7946.0537 5707.1718,-7943.0227 5697.3455,-7939.0613 5697.0198,-7946.0537"/>
</g>
<!-- scala.reflect.ClassTag[monocle.Example] -->
<g id="node542" class="node">
<title>scala.reflect.ClassTag[monocle.Example]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-3795.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="8082.1985" y="-3799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[monocle.Example]</text>
<text text-anchor="middle" x="8196.6985" y="-3784.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 13ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char)] -->
<g id="node544" class="node">
<title>org.scalacheck.Arbitrary[(Int, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-14379.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="5761.0954" y="-14383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Char)]</text>
<text text-anchor="middle" x="5862.0954" y="-14368.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 64ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char)]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge772" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char)]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M5998.7829,-14392.3285C6157.4167,-14403.3999 6405.1733,-14409.0843 6466.6717,-14343.8701 6489.3027,-14319.8717 6452.0822,-4867.9075 6474.6717,-4843.8701 6532.4732,-4782.3638 6765.0739,-4786.6254 6915.0834,-4796.4597"/>
<polygon fill="#000000" stroke="#000000" points="6915.0776,-4799.9671 6925.2898,-4797.1457 6915.5471,-4792.9829 6915.0776,-4799.9671"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1373" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M5999.0139,-14392.241C6157.5446,-14403.1852 6404.8668,-14408.7031 6466.6717,-14343.8701 6479.821,-14330.0766 6465.1025,-13674.3502 6474.6717,-13657.8701 6579.1617,-13477.9174 6821.439,-13384.9776 6954.4776,-13345.9572"/>
<polygon fill="#000000" stroke="#000000" points="6955.6228,-13349.2695 6964.2564,-13343.1285 6953.6776,-13342.5451 6955.6228,-13349.2695"/>
</g>
<!-- scala.reflect.ClassTag[(Int, Char)] -->
<g id="node1471" class="node">
<title>scala.reflect.ClassTag[(Int, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-14379.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="6952.514" y="-14383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Char)]</text>
<text text-anchor="middle" x="7046.014" y="-14368.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char)]&#45;&gt;scala.reflect.ClassTag[(Int, Char)] -->
<g id="edge549" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char)]&#45;&gt;scala.reflect.ClassTag[(Int, Char)]</title>
<path fill="none" stroke="#000000" d="M6016.2648,-14379.8701C6243.2279,-14379.8701 6664.8574,-14379.8701 6891.8293,-14379.8701"/>
<polygon fill="#000000" stroke="#000000" points="6892.1552,-14383.3702 6902.1552,-14379.8701 6892.1551,-14376.3702 6892.1552,-14383.3702"/>
</g>
<!-- org.scalactic.Equality[List[Int] \/ List[Int]] -->
<g id="node545" class="node">
<title>org.scalactic.Equality[List[Int] \/ List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-21213.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="3052.3678" y="-21217.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[List[Int] / List[Int]]</text>
<text text-anchor="middle" x="3166.8678" y="-21202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalactic.Equality[List[Int] \/ List[Int]]&#45;&gt;scalaz.Equal[List[Int] \/ List[Int]] -->
<g id="edge1056" class="edge">
<title>org.scalactic.Equality[List[Int] \/ List[Int]]&#45;&gt;scalaz.Equal[List[Int] \/ List[Int]]</title>
<path fill="none" stroke="#000000" d="M3340.2022,-21213.8701C3621.8574,-21213.8701 4173.954,-21213.8701 4438.3099,-21213.8701"/>
<polygon fill="#000000" stroke="#000000" points="4438.3638,-21217.3702 4448.3637,-21213.8701 4438.3637,-21210.3702 4438.3638,-21217.3702"/>
</g>
<!-- scalaz.Equal[monocle.Arities =&gt; Option[(Char, Boolean, String, Int, Double)]] -->
<g id="node546" class="node">
<title>scalaz.Equal[monocle.Arities =&gt; Option[(Char, Boolean, String, Int, Double)]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-17059.8701" rx="318.3962" ry="26.7407"/>
<text text-anchor="start" x="2949.8678" y="-17063.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Arities =&gt; Option[(Char, Boolean, String, Int, Double)]]</text>
<text text-anchor="middle" x="3166.8678" y="-17048.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- scalaz.Equal[monocle.Arities =&gt; Option[(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[Option[(Char, Boolean, String, Int, Double)]] -->
<g id="edge483" class="edge">
<title>scalaz.Equal[monocle.Arities =&gt; Option[(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[Option[(Char, Boolean, String, Int, Double)]]</title>
<path fill="none" stroke="#000000" d="M3244.4888,-17033.7347C3397.8098,-16987.5819 3739.7904,-16912.7915 3914.9868,-17095.8701 3933.7695,-17115.4978 3904.2644,-19032.1847 3922.9868,-19051.8701 4070.9843,-19207.4796 4354.634,-19155.7495 4498.2692,-19115.9878"/>
<polygon fill="#000000" stroke="#000000" points="4499.2649,-19119.3436 4507.945,-19113.2686 4497.371,-19112.6047 4499.2649,-19119.3436"/>
</g>
<!-- scalaz.Equal[monocle.Arities =&gt; Option[(Char, Boolean, String, Int, Double)]]&#45;&gt;org.scalacheck.Arbitrary[monocle.Arities] -->
<g id="edge501" class="edge">
<title>scalaz.Equal[monocle.Arities =&gt; Option[(Char, Boolean, String, Int, Double)]]&#45;&gt;org.scalacheck.Arbitrary[monocle.Arities]</title>
<path fill="none" stroke="#000000" d="M3479.2146,-17065.186C3886.6412,-17070.8318 4621.568,-17076.6077 5249.5191,-17057.8701 5399.961,-17053.381 5570.9201,-17042.8825 5693.9324,-17034.3747"/>
<polygon fill="#000000" stroke="#000000" points="5694.4583,-17037.8467 5704.1917,-17033.6621 5693.9732,-17030.8635 5694.4583,-17037.8467"/>
</g>
<!-- scala.reflect.ClassTag[Boolean =&gt; Boolean] -->
<g id="node547" class="node">
<title>scala.reflect.ClassTag[Boolean =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-6537.8701" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="6924.514" y="-6541.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Boolean =&gt; Boolean]</text>
<text text-anchor="middle" x="7046.014" y="-6526.6701" font-family="Times,serif" font-size="14.00" fill="#000000">17 times = 15ms</text>
</g>
<!-- monocle.function.Empty[Option[Int]] -->
<g id="node548" class="node">
<title>monocle.function.Empty[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-42663.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="548.6596" y="-42667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[Option[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-42652.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Float :: Long :: Double :: shapeless.HNil,Char :: Boolean :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Float :: Long :: Double :: shapeless.HNil,Boolean :: Int :: shapeless.HNil,Out] -->
<g id="edge558" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Float :: Long :: Double :: shapeless.HNil,Char :: Boolean :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Float :: Long :: Double :: shapeless.HNil,Boolean :: Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M6350.9033,-32043.8701C6415.5763,-32043.8701 6481.9443,-32043.8701 6546.7898,-32043.8701"/>
<polygon fill="#000000" stroke="#000000" points="6547.1836,-32047.3702 6557.1835,-32043.8701 6547.1835,-32040.3702 6547.1836,-32047.3702"/>
</g>
<!-- shapeless.Generic.Aux[ProductSpec.this.Person,L] -->
<g id="node550" class="node">
<title>shapeless.Generic.Aux[ProductSpec.this.Person,L]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-42807.8701" rx="207.7788" ry="26.7407"/>
<text text-anchor="start" x="1723.034" y="-42811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[ProductSpec.this.Person,L]</text>
<text text-anchor="middle" x="1862.034" y="-42796.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.IList[Char]]&#45;&gt;org.scalacheck.Cogen[Char] -->
<g id="edge153" class="edge">
<title>org.scalacheck.Cogen[scalaz.IList[Char]]&#45;&gt;org.scalacheck.Cogen[Char]</title>
<path fill="none" stroke="#000000" d="M6033.2987,-3253.8701C6271.9774,-3253.8701 6699.5706,-3253.8701 6914.7355,-3253.8701"/>
<polygon fill="#000000" stroke="#000000" points="6914.8193,-3257.3702 6924.8193,-3253.8701 6914.8193,-3250.3702 6914.8193,-3257.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[HListSpec.this.H =&gt; HListSpec.this.H] -->
<g id="node552" class="node">
<title>org.scalacheck.Arbitrary[HListSpec.this.H =&gt; HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-28137.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="475.1596" y="-28141.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[HListSpec.this.H =&gt; HListSpec.this.H]</text>
<text text-anchor="middle" x="652.6596" y="-28126.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[HListSpec.this.H =&gt; HListSpec.this.H]&#45;&gt;org.scalacheck.Arbitrary[HListSpec.this.H] -->
<g id="edge308" class="edge">
<title>org.scalacheck.Arbitrary[HListSpec.this.H =&gt; HListSpec.this.H]&#45;&gt;org.scalacheck.Arbitrary[HListSpec.this.H]</title>
<path fill="none" stroke="#000000" d="M886.0382,-28150.2059C1010.5123,-28156.921 1166.2703,-28165.5396 1305.3191,-28173.8701 1433.4099,-28181.5441 1578.0296,-28190.9173 1687.7614,-28198.1754"/>
<polygon fill="#000000" stroke="#000000" points="1687.7255,-28201.6806 1697.9349,-28198.8489 1688.1879,-28194.6959 1687.7255,-28201.6806"/>
</g>
<!-- org.scalacheck.Arbitrary[HListSpec.this.H =&gt; HListSpec.this.H]&#45;&gt;scala.reflect.ClassTag[HListSpec.this.H =&gt; HListSpec.this.H] -->
<g id="edge1022" class="edge">
<title>org.scalacheck.Arbitrary[HListSpec.this.H =&gt; HListSpec.this.H]&#45;&gt;scala.reflect.ClassTag[HListSpec.this.H =&gt; HListSpec.this.H]</title>
<path fill="none" stroke="#000000" d="M915.0758,-28137.8701C1117.8912,-28137.8701 1397.3038,-28137.8701 1600.0183,-28137.8701"/>
<polygon fill="#000000" stroke="#000000" points="1600.2185,-28141.3702 1610.2185,-28137.8701 1600.2185,-28134.3702 1600.2185,-28141.3702"/>
</g>
<!-- org.scalacheck.Cogen[HListSpec.this.H] -->
<g id="node1187" class="node">
<title>org.scalacheck.Cogen[HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-28065.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="1750.534" y="-28069.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[HListSpec.this.H]</text>
<text text-anchor="middle" x="1862.034" y="-28054.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[HListSpec.this.H =&gt; HListSpec.this.H]&#45;&gt;org.scalacheck.Cogen[HListSpec.this.H] -->
<g id="edge1129" class="edge">
<title>org.scalacheck.Arbitrary[HListSpec.this.H =&gt; HListSpec.this.H]&#45;&gt;org.scalacheck.Cogen[HListSpec.this.H]</title>
<path fill="none" stroke="#000000" d="M879.7787,-28124.3485C1116.311,-28110.2666 1481.3343,-28088.535 1693.4336,-28075.9077"/>
<polygon fill="#000000" stroke="#000000" points="1693.6426,-28079.4015 1703.4169,-28075.3133 1693.2265,-28072.4139 1693.6426,-28079.4015"/>
</g>
<!-- org.scalacheck.Cogen[(Int, Option[Int])] -->
<g id="node553" class="node">
<title>org.scalacheck.Cogen[(Int, Option[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-11700.8701" rx="168.0831" ry="26.7407"/>
<text text-anchor="start" x="4475.253" y="-11704.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Int, Option[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-11689.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Cogen[(Int, Option[Int])]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge917" class="edge">
<title>org.scalacheck.Cogen[(Int, Option[Int])]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M4730.5617,-11714.7201C4903.9892,-11727.8094 5180.361,-11736.1544 5249.5191,-11664.8701 5262.4435,-11651.5484 5244.4709,-11344.0705 5257.5191,-11330.8701 5352.0262,-11235.2603 6346.7174,-11348.5643 6466.6717,-11287.8701 6778.8935,-11129.8927 6976.5493,-10717.729 7030.8068,-10592.4913"/>
<polygon fill="#000000" stroke="#000000" points="7034.1704,-10593.5283 7034.8988,-10582.9586 7027.738,-10590.7671 7034.1704,-10593.5283"/>
</g>
<!-- org.scalacheck.Cogen[Option[Int]] -->
<g id="node905" class="node">
<title>org.scalacheck.Cogen[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-11581.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="5767.0954" y="-11585.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Option[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-11570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 9ms</text>
</g>
<!-- org.scalacheck.Cogen[(Int, Option[Int])]&#45;&gt;org.scalacheck.Cogen[Option[Int]] -->
<g id="edge205" class="edge">
<title>org.scalacheck.Cogen[(Int, Option[Int])]&#45;&gt;org.scalacheck.Cogen[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4734.9903,-11713.4494C4907.0881,-11724.56 5176.2513,-11730.2031 5249.5191,-11664.8701 5265.3341,-11650.7678 5241.7412,-11632.0138 5257.5191,-11617.8701 5322.9745,-11559.1941 5560.8342,-11561.808 5717.9672,-11570.6808"/>
<polygon fill="#000000" stroke="#000000" points="5718.012,-11574.1892 5728.1978,-11571.2737 5718.4171,-11567.2009 5718.012,-11574.1892"/>
</g>
<!-- monocle.function.Each[(Int, Int, Int, Int, Int, Int),Int] -->
<g id="node554" class="node">
<title>monocle.function.Each[(Int, Int, Int, Int, Int, Int),Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-26985.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="506.6596" y="-26989.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[(Int, Int, Int, Int, Int, Int),Int]</text>
<text text-anchor="middle" x="652.6596" y="-26974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 32ms</text>
</g>
<!-- monocle.function.Each[(Int, Int, Int, Int, Int, Int),Int]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int),SGen] -->
<g id="edge571" class="edge">
<title>monocle.function.Each[(Int, Int, Int, Int, Int, Int),Int]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int),SGen]</title>
<path fill="none" stroke="#000000" d="M864.7004,-26992.182C1079.614,-26998.5794 1411.109,-27008.4472 1632.198,-27015.0284"/>
<polygon fill="#000000" stroke="#000000" points="1632.2132,-27018.5303 1642.3129,-27015.3295 1632.4215,-27011.5334 1632.2132,-27018.5303"/>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int] -->
<g id="node900" class="node">
<title>monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-26949.8701" rx="306.3546" ry="26.7407"/>
<text text-anchor="start" x="1653.534" y="-26953.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]</text>
<text text-anchor="middle" x="1862.034" y="-26938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 23ms</text>
</g>
<!-- monocle.function.Each[(Int, Int, Int, Int, Int, Int),Int]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int] -->
<g id="edge860" class="edge">
<title>monocle.function.Each[(Int, Int, Int, Int, Int, Int),Int]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M864.7004,-26979.5581C1057.7517,-26973.8115 1344.872,-26965.2647 1561.5379,-26958.8151"/>
<polygon fill="#000000" stroke="#000000" points="1561.91,-26962.3056 1571.8014,-26958.5095 1561.7016,-26955.3087 1561.91,-26962.3056"/>
</g>
<!-- scalaz.Equal[A2]&#45;&gt;scalaz.Equal[A] -->
<g id="edge345" class="edge">
<title>scalaz.Equal[A2]&#45;&gt;scalaz.Equal[A]</title>
<path fill="none" stroke="#000000" d="M5786.8996,-27865.0394C5563.4241,-27880.6645 4904.3239,-27913.7816 4670.059,-27921.2274"/>
<polygon fill="#000000" stroke="#000000" points="4669.7824,-27917.7342 4659.8956,-27921.5423 4669.9992,-27924.7308 4669.7824,-27917.7342"/>
</g>
<!-- scalaz.Equal[A2]&#45;&gt;scalaz.Equal[A1] -->
<g id="edge298" class="edge">
<title>scalaz.Equal[A2]&#45;&gt;scalaz.Equal[A1]</title>
<path fill="none" stroke="#000000" d="M5939.3189,-27861.5228C6150.4271,-27871.5083 6736.2201,-27899.2166 6958.7352,-27909.7417"/>
<polygon fill="#000000" stroke="#000000" points="6958.5806,-27913.2382 6968.7348,-27910.2147 6958.9114,-27906.246 6958.5806,-27913.2382"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P) -->
<g id="node556" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-42807.8701" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="501.1596" y="-42811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-42796.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._4] -->
<g id="node1036" class="node">
<title>shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._4]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-38199.8701" rx="395.9596" ry="26.7407"/>
<text text-anchor="start" x="2894.8678" y="-38203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._4]</text>
<text text-anchor="middle" x="3166.8678" y="-38188.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._5.N,Double]&#45;&gt;shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._4] -->
<g id="edge788" class="edge">
<title>shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._5.N,Double]&#45;&gt;shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._4]</title>
<path fill="none" stroke="#000000" d="M2154.4579,-38199.8701C2333.1687,-38199.8701 2564.3408,-38199.8701 2760.6577,-38199.8701"/>
<polygon fill="#000000" stroke="#000000" points="2760.8658,-38203.3702 2770.8657,-38199.8701 2760.8657,-38196.3702 2760.8658,-38203.3702"/>
</g>
<!-- shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1] -->
<g id="node558" class="node">
<title>shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-31287.8701" rx="395.9596" ry="26.7407"/>
<text text-anchor="start" x="2894.8678" y="-31291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1]</text>
<text text-anchor="middle" x="3166.8678" y="-31276.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0] -->
<g id="node1054" class="node">
<title>shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-31287.8701" rx="338.9084" ry="26.7407"/>
<text text-anchor="start" x="4354.753" y="-31291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0]</text>
<text text-anchor="middle" x="4586.253" y="-31276.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1]&#45;&gt;shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0] -->
<g id="edge264" class="edge">
<title>shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1]&#45;&gt;shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0]</title>
<path fill="none" stroke="#000000" d="M3563.1891,-31287.8701C3774.8177,-31287.8701 4032.9651,-31287.8701 4237.0004,-31287.8701"/>
<polygon fill="#000000" stroke="#000000" points="4237.2872,-31291.3702 4247.2871,-31287.8701 4237.2871,-31284.3702 4237.2872,-31291.3702"/>
</g>
<!-- scala.reflect.ClassTag[(Int, String)] -->
<g id="node559" class="node">
<title>scala.reflect.ClassTag[(Int, String)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-12195.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="6949.514" y="-12199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, String)]</text>
<text text-anchor="middle" x="7046.014" y="-12184.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- monocle.function.Plated[scalaz.IList[Char]] -->
<g id="node560" class="node">
<title>monocle.function.Plated[scalaz.IList[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-42879.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="532.1596" y="-42883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Plated[scalaz.IList[Char]]</text>
<text text-anchor="middle" x="652.6596" y="-42868.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P) -->
<g id="node561" class="node">
<title>(=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-42951.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="475.1596" y="-42955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-42940.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Reverse[(Int,),(Int,)] -->
<g id="node562" class="node">
<title>monocle.function.Reverse[(Int,),(Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-36723.8701" rx="161.441" ry="26.7407"/>
<text text-anchor="start" x="546.6596" y="-36727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[(Int,),(Int,)]</text>
<text text-anchor="middle" x="652.6596" y="-36712.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 27ms</text>
</g>
<!-- monocle.function.Reverse[(Int,),(Int,)]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[(Int,),(Int,)] -->
<g id="edge290" class="edge">
<title>monocle.function.Reverse[(Int,),(Int,)]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[(Int,),(Int,)]</title>
<path fill="none" stroke="#000000" d="M808.5969,-36730.8328C1030.3142,-36740.7328 1436.1109,-36758.8521 1674.1297,-36769.4799"/>
<polygon fill="#000000" stroke="#000000" points="1674.135,-36772.9835 1684.2812,-36769.9332 1674.4473,-36765.9905 1674.135,-36772.9835"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[(Int,),(Int,)] -->
<g id="node644" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[(Int,),(Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-36669.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="1740.034" y="-36673.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[(Int,),(Int,)]</text>
<text text-anchor="middle" x="1862.034" y="-36658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.function.Reverse[(Int,),(Int,)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[(Int,),(Int,)] -->
<g id="edge458" class="edge">
<title>monocle.function.Reverse[(Int,),(Int,)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[(Int,),(Int,)]</title>
<path fill="none" stroke="#000000" d="M808.5969,-36716.9073C1030.8648,-36706.9827 1438.1274,-36688.798 1675.8997,-36678.1812"/>
<polygon fill="#000000" stroke="#000000" points="1676.2057,-36681.6711 1686.0395,-36677.7284 1675.8933,-36674.6781 1676.2057,-36681.6711"/>
</g>
<!-- scalaz.Equal[scalaz.OneAnd[List,Int]] -->
<g id="node563" class="node">
<title>scalaz.Equal[scalaz.OneAnd[List,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-21357.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="4481.753" y="-21361.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.OneAnd[List,Int]]</text>
<text text-anchor="middle" x="4586.253" y="-21346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 15ms</text>
</g>
<!-- scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge712" class="edge">
<title>scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4723.9542,-21344.4048C4897.017,-21330.8891 5179.9025,-21321.2255 5249.5191,-21393.8701 5262.7045,-21407.629 5243.9655,-22066.4736 5257.5191,-22079.8701 5281.4072,-22103.4812 6442.2719,-22102.952 6466.6717,-22079.8701 6478.3129,-22068.8577 6464.8398,-21948.5241 6474.6717,-21935.8701 6587.6972,-21790.4022 6817.8537,-21760.0636 6948.9336,-21755.1766"/>
<polygon fill="#000000" stroke="#000000" points="6949.0939,-21758.6733 6958.9728,-21754.8449 6948.8627,-21751.6771 6949.0939,-21758.6733"/>
</g>
<!-- scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge522" class="edge">
<title>scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M4736.5044,-21348.8576C4872.5165,-21340.9265 5078.3903,-21329.4872 5257.5191,-21321.8701 5526.1096,-21310.4487 6204.3682,-21342.7613 6466.6717,-21283.8701 6674.7992,-21237.1422 6901.0497,-21115.9798 6997.7767,-21060.4418"/>
<polygon fill="#000000" stroke="#000000" points="6999.8158,-21063.3061 7006.7281,-21055.2767 6996.3173,-21057.243 6999.8158,-21063.3061"/>
</g>
<!-- scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Order[List[Int]] -->
<g id="edge151" class="edge">
<title>scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Order[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4730.4853,-21369.3559C4901.6504,-21379.7609 5173.4797,-21385.0887 5249.5191,-21321.8701 5261.1238,-21312.222 5245.9798,-21298.5961 5257.5191,-21288.8701 5330.4517,-21227.3978 5603.4014,-21232.4401 5756.4173,-21240.6108"/>
<polygon fill="#000000" stroke="#000000" points="5756.5945,-21244.1257 5766.771,-21241.1782 5756.9776,-21237.1362 5756.5945,-21244.1257"/>
</g>
<!-- scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Equal[List[Int]] -->
<g id="edge730" class="edge">
<title>scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Equal[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4738.0645,-21365.9163C4872.5068,-21373.0881 5074.0805,-21383.9539 5249.5191,-21393.8701 5427.2037,-21403.9132 5633.8419,-21416.1787 5755.9834,-21423.4895"/>
<polygon fill="#000000" stroke="#000000" points="5755.8903,-21426.9901 5766.0816,-21424.0942 5756.3087,-21420.0026 5755.8903,-21426.9901"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Int :: shapeless.HNil,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.HNil,HListSpec.this.H] -->
<g id="edge408" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Int :: shapeless.HNil,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.HNil,HListSpec.this.H]</title>
<path fill="none" stroke="#000000" d="M9887.7689,-23601.8701C9907.6165,-23601.8701 9927.5197,-23601.8701 9947.3837,-23601.8701"/>
<polygon fill="#000000" stroke="#000000" points="9947.4479,-23605.3702 9957.4479,-23601.8701 9947.4479,-23598.3702 9947.4479,-23605.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,String,String] -->
<g id="node565" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,String,String]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-30135.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="2983.3678" y="-30139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,String,String]</text>
<text text-anchor="middle" x="3166.8678" y="-30124.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[IsoSpec.this.AnObject.type] -->
<g id="node566" class="node">
<title>org.scalacheck.Arbitrary[IsoSpec.this.AnObject.type]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-37299.8701" rx="218.492" ry="26.7407"/>
<text text-anchor="start" x="506.1596" y="-37303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[IsoSpec.this.AnObject.type]</text>
<text text-anchor="middle" x="652.6596" y="-37288.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Arbitrary[IsoSpec.this.AnObject.type]&#45;&gt;scala.reflect.ClassTag[IsoSpec.this.AnObject.type] -->
<g id="edge725" class="edge">
<title>org.scalacheck.Arbitrary[IsoSpec.this.AnObject.type]&#45;&gt;scala.reflect.ClassTag[IsoSpec.this.AnObject.type]</title>
<path fill="none" stroke="#000000" d="M871.3179,-37299.8701C1090.3134,-37299.8701 1425.3956,-37299.8701 1644.1256,-37299.8701"/>
<polygon fill="#000000" stroke="#000000" points="1644.1276,-37303.3702 1654.1275,-37299.8701 1644.1275,-37296.3702 1644.1276,-37303.3702"/>
</g>
<!-- monocle.function.At[Set[Int],Int,Boolean] -->
<g id="node567" class="node">
<title>monocle.function.At[Set[Int],Int,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-43023.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="536.6596" y="-43027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[Set[Int],Int,Boolean]</text>
<text text-anchor="middle" x="652.6596" y="-43012.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- scala.reflect.ClassTag[Boolean \/ Int =&gt; Boolean \/ Int] -->
<g id="node568" class="node">
<title>scala.reflect.ClassTag[Boolean \/ Int =&gt; Boolean \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-7119.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="5714.5954" y="-7123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Boolean / Int =&gt; Boolean / Int]</text>
<text text-anchor="middle" x="5862.0954" y="-7108.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- shapeless.Generic.Aux[HListSpec.this.Example,HListSpec.this.H] -->
<g id="node569" class="node">
<title>shapeless.Generic.Aux[HListSpec.this.Example,HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-43095.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="470.6596" y="-43099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[HListSpec.this.Example,HListSpec.this.H]</text>
<text text-anchor="middle" x="652.6596" y="-43084.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 72ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.OneAnd[List,Int]] -->
<g id="node570" class="node">
<title>org.scalacheck.Cogen[scalaz.OneAnd[List,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-10510.8701" rx="195.3231" ry="26.7407"/>
<text text-anchor="start" x="4456.253" y="-10514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[scalaz.OneAnd[List,Int]]</text>
<text text-anchor="middle" x="4586.253" y="-10499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.OneAnd[List,Int]]&#45;&gt;org.scalacheck.Cogen[List[Int]] -->
<g id="edge128" class="edge">
<title>org.scalacheck.Cogen[scalaz.OneAnd[List,Int]]&#45;&gt;org.scalacheck.Cogen[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4778.9868,-10506.4892C5036.8156,-10500.6287 5488.1396,-10490.3701 5718.2865,-10485.1388"/>
<polygon fill="#000000" stroke="#000000" points="5718.4848,-10488.6353 5728.4027,-10484.9089 5718.3257,-10481.6371 5718.4848,-10488.6353"/>
</g>
<!-- org.scalacheck.Cogen[scalaz.OneAnd[List,Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge184" class="edge">
<title>org.scalacheck.Cogen[scalaz.OneAnd[List,Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M4757.5386,-10523.7626C4893.1097,-10533.3177 5087.2986,-10545.5648 5257.5191,-10550.8701 5883.22,-10570.3714 6632.6456,-10562.2578 6922.852,-10557.9298"/>
<polygon fill="#000000" stroke="#000000" points="6923.0347,-10561.4275 6932.9809,-10557.7775 6922.9294,-10554.4283 6923.0347,-10561.4275"/>
</g>
<!-- scalaz.Compose[monocle.Lens] -->
<g id="node571" class="node">
<title>scalaz.Compose[monocle.Lens]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-43167.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="565.1596" y="-43171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Compose[monocle.Lens]</text>
<text text-anchor="middle" x="652.6596" y="-43156.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[(Int, Char),shapeless.nat._0.N,Int] -->
<g id="node572" class="node">
<title>shapeless.ops.hlist.At.Aux[(Int, Char),shapeless.nat._0.N,Int]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-43239.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="1693.534" y="-43243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(Int, Char),shapeless.nat._0.N,Int]</text>
<text text-anchor="middle" x="1862.034" y="-43228.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Split[monocle.Iso] -->
<g id="node573" class="node">
<title>scalaz.Split[monocle.Iso]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-43311.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="583.1596" y="-43315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Split[monocle.Iso]</text>
<text text-anchor="middle" x="652.6596" y="-43300.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Reverse[scalaz.IList[Char],scalaz.IList[Char]] -->
<g id="node574" class="node">
<title>monocle.function.Reverse[scalaz.IList[Char],scalaz.IList[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-35661.8701" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="476.6596" y="-35665.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[scalaz.IList[Char],scalaz.IList[Char]]</text>
<text text-anchor="middle" x="652.6596" y="-35650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 27ms</text>
</g>
<!-- monocle.function.Reverse[scalaz.IList[Char],scalaz.IList[Char]]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[scalaz.IList[Char],scalaz.IList[Char]] -->
<g id="edge862" class="edge">
<title>monocle.function.Reverse[scalaz.IList[Char],scalaz.IList[Char]]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[scalaz.IList[Char],scalaz.IList[Char]]</title>
<path fill="none" stroke="#000000" d="M902.8759,-35669.3184C1100.9352,-35675.2141 1377.419,-35683.4443 1582.6828,-35689.5545"/>
<polygon fill="#000000" stroke="#000000" points="1582.61,-35693.0538 1592.7097,-35689.853 1582.8183,-35686.0569 1582.61,-35693.0538"/>
</g>
<!-- monocle.function.Reverse[scalaz.IList[Char],scalaz.IList[Char]]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[scalaz.IList[Char],scalaz.IList[Char]] -->
<g id="edge909" class="edge">
<title>monocle.function.Reverse[scalaz.IList[Char],scalaz.IList[Char]]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[scalaz.IList[Char],scalaz.IList[Char]]</title>
<path fill="none" stroke="#000000" d="M902.8759,-35654.4218C1100.0844,-35648.5514 1375.0451,-35640.3665 1580.0337,-35634.2645"/>
<polygon fill="#000000" stroke="#000000" points="1580.1568,-35637.7625 1590.0482,-35633.9664 1579.9484,-35630.7656 1580.1568,-35637.7625"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,A,List[A]] -->
<g id="node575" class="node">
<title>scala.collection.generic.CanBuildFrom[F,A,List[A]]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-28277.8701" rx="214.007" ry="26.7407"/>
<text text-anchor="start" x="8053.1985" y="-28281.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,A,List[A]]</text>
<text text-anchor="middle" x="8196.6985" y="-28266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Each[Int :: shapeless.HNil,Int] -->
<g id="node576" class="node">
<title>monocle.function.Each[Int :: shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-26877.8701" rx="200.2225" ry="26.7407"/>
<text text-anchor="start" x="8063.1985" y="-26881.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: shapeless.HNil,Int]</text>
<text text-anchor="middle" x="8196.6985" y="-26866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 17ms</text>
</g>
<!-- monocle.function.Each[Int :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: shapeless.HNil,SGen] -->
<g id="edge1128" class="edge">
<title>monocle.function.Each[Int :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M8378.393,-26889.2389C8588.1728,-26902.3652 8932.09,-26923.8846 9148.778,-26937.4431"/>
<polygon fill="#000000" stroke="#000000" points="9148.8002,-26940.9512 9158.9993,-26938.0826 9149.2374,-26933.9649 9148.8002,-26940.9512"/>
</g>
<!-- monocle.function.Each[shapeless.HNil,Int] -->
<g id="node1200" class="node">
<title>monocle.function.Each[shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="9347.3831" cy="-26877.8701" rx="178.7961" ry="26.7407"/>
<text text-anchor="start" x="9228.8831" y="-26881.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[shapeless.HNil,Int]</text>
<text text-anchor="middle" x="9347.3831" y="-26866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 8ms</text>
</g>
<!-- monocle.function.Each[Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[shapeless.HNil,Int] -->
<g id="edge892" class="edge">
<title>monocle.function.Each[Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M8397.1325,-26877.8701C8611.2651,-26877.8701 8948.1182,-26877.8701 9157.9361,-26877.8701"/>
<polygon fill="#000000" stroke="#000000" points="9158.1414,-26881.3702 9168.1414,-26877.8701 9158.1414,-26874.3702 9158.1414,-26881.3702"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalacheck.Prop -->
<g id="node577" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalacheck.Prop</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-43383.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="535.1596" y="-43387.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalacheck.Prop</text>
<text text-anchor="middle" x="652.6596" y="-43372.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, (Char, Boolean, String, Long, Float))] -->
<g id="node578" class="node">
<title>scala.reflect.ClassTag[(Int, (Char, Boolean, String, Long, Float))]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-6717.8701" rx="265.7444" ry="26.7407"/>
<text text-anchor="start" x="5682.0954" y="-6721.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, (Char, Boolean, String, Long, Float))]</text>
<text text-anchor="middle" x="5862.0954" y="-6706.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int] =&gt; scalaz.OneAnd[List,Int]] -->
<g id="node579" class="node">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int] =&gt; scalaz.OneAnd[List,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-10510.8701" rx="315.2393" ry="26.7407"/>
<text text-anchor="start" x="2951.8678" y="-10514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int] =&gt; scalaz.OneAnd[List,Int]]</text>
<text text-anchor="middle" x="3166.8678" y="-10499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 27ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int] =&gt; scalaz.OneAnd[List,Int]]&#45;&gt;org.scalacheck.Cogen[scalaz.OneAnd[List,Int]] -->
<g id="edge612" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int] =&gt; scalaz.OneAnd[List,Int]]&#45;&gt;org.scalacheck.Cogen[scalaz.OneAnd[List,Int]]</title>
<path fill="none" stroke="#000000" d="M3482.316,-10510.8701C3756.3988,-10510.8701 4145.3923,-10510.8701 4380.9505,-10510.8701"/>
<polygon fill="#000000" stroke="#000000" points="4381.0051,-10514.3702 4391.0051,-10510.8701 4381.005,-10507.3702 4381.0051,-10514.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int]] -->
<g id="node765" class="node">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-10836.8701" rx="205.5364" ry="26.7407"/>
<text text-anchor="start" x="4448.753" y="-10840.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int]]</text>
<text text-anchor="middle" x="4586.253" y="-10825.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 67ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int] =&gt; scalaz.OneAnd[List,Int]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int]] -->
<g id="edge134" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int] =&gt; scalaz.OneAnd[List,Int]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int]]</title>
<path fill="none" stroke="#000000" d="M3253.7243,-10485.0263C3410.9985,-10444.1955 3742.5934,-10386.5548 3914.9868,-10565.8701 3933.0937,-10584.704 3904.7002,-10782.2104 3922.9868,-10800.8701 3988.0619,-10867.2728 4234.2958,-10864.3085 4407.6611,-10853.0168"/>
<polygon fill="#000000" stroke="#000000" points="4407.9279,-10856.5069 4417.6733,-10852.3503 4407.4628,-10849.5224 4407.9279,-10856.5069"/>
</g>
<!-- scala.reflect.ClassTag[scalaz.OneAnd[List,Int] =&gt; scalaz.OneAnd[List,Int]] -->
<g id="node771" class="node">
<title>scala.reflect.ClassTag[scalaz.OneAnd[List,Int] =&gt; scalaz.OneAnd[List,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-10438.8701" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="4378.753" y="-10442.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scalaz.OneAnd[List,Int] =&gt; scalaz.OneAnd[List,Int]]</text>
<text text-anchor="middle" x="4586.253" y="-10427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int] =&gt; scalaz.OneAnd[List,Int]]&#45;&gt;scala.reflect.ClassTag[scalaz.OneAnd[List,Int] =&gt; scalaz.OneAnd[List,Int]] -->
<g id="edge768" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int] =&gt; scalaz.OneAnd[List,Int]]&#45;&gt;scala.reflect.ClassTag[scalaz.OneAnd[List,Int] =&gt; scalaz.OneAnd[List,Int]]</title>
<path fill="none" stroke="#000000" d="M3438.0217,-10497.1155C3688.9402,-10484.3873 4060.1426,-10465.5576 4312.0345,-10452.7801"/>
<polygon fill="#000000" stroke="#000000" points="4312.2559,-10456.2735 4322.0657,-10452.2713 4311.9012,-10449.2825 4312.2559,-10456.2735"/>
</g>
<!-- shapeless.ops.hlist.Reverse[HListSpec.this.H] -->
<g id="node581" class="node">
<title>shapeless.ops.hlist.Reverse[HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-29559.8701" rx="188.5952" ry="26.7407"/>
<text text-anchor="start" x="527.1596" y="-29563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse[HListSpec.this.H]</text>
<text text-anchor="middle" x="652.6596" y="-29548.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse[HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.H,Out0] -->
<g id="edge960" class="edge">
<title>shapeless.ops.hlist.Reverse[HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.H,Out0]</title>
<path fill="none" stroke="#000000" d="M841.6243,-29559.8701C1028.9101,-29559.8701 1319.319,-29559.8701 1542.5063,-29559.8701"/>
<polygon fill="#000000" stroke="#000000" points="1542.7488,-29563.3702 1552.7488,-29559.8701 1542.7488,-29556.3702 1542.7488,-29563.3702"/>
</g>
<!-- scalaz.Equal[monocle.Quintary =&gt; (Char, Boolean, String, Int, Double)] -->
<g id="node582" class="node">
<title>scalaz.Equal[monocle.Quintary =&gt; (Char, Boolean, String, Int, Double)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-16733.8701" rx="293.3986" ry="26.7407"/>
<text text-anchor="start" x="4386.753" y="-16737.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Quintary =&gt; (Char, Boolean, String, Int, Double)]</text>
<text text-anchor="middle" x="4586.253" y="-16722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- scalaz.Equal[monocle.Quintary =&gt; (Char, Boolean, String, Int, Double)]&#45;&gt;org.scalacheck.Arbitrary[monocle.Quintary] -->
<g id="edge657" class="edge">
<title>scalaz.Equal[monocle.Quintary =&gt; (Char, Boolean, String, Int, Double)]&#45;&gt;org.scalacheck.Arbitrary[monocle.Quintary]</title>
<path fill="none" stroke="#000000" d="M4801.6208,-16752.1676C4971.2339,-16761.3125 5188.8393,-16759.6028 5249.5191,-16697.8701 5266.3546,-16680.7424 5240.7287,-16499.0419 5257.5191,-16481.8701 5316.0533,-16422.0065 5535.725,-16422.6916 5693.4001,-16431.7593"/>
<polygon fill="#000000" stroke="#000000" points="5693.5047,-16435.2715 5703.6939,-16432.3681 5693.918,-16428.2837 5693.5047,-16435.2715"/>
</g>
<!-- scalaz.Equal[monocle.Quintary =&gt; (Char, Boolean, String, Int, Double)]&#45;&gt;scalaz.Equal[(Char, Boolean, String, Int, Double)] -->
<g id="edge320" class="edge">
<title>scalaz.Equal[monocle.Quintary =&gt; (Char, Boolean, String, Int, Double)]&#45;&gt;scalaz.Equal[(Char, Boolean, String, Int, Double)]</title>
<path fill="none" stroke="#000000" d="M4798.3426,-16715.2707C4968.822,-16705.5757 5189.4335,-16706.6608 5249.5191,-16769.8701 5270.9922,-16792.4594 5236.8213,-18990.5682 5257.5191,-19013.8701 5308.1893,-19070.9152 5493.8472,-19087.1615 5646.2043,-19090.4791"/>
<polygon fill="#000000" stroke="#000000" points="5646.5838,-19093.9873 5656.6517,-19090.6877 5646.7235,-19086.9887 5646.5838,-19093.9873"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Validation[Unit,Int]] -->
<g id="node583" class="node">
<title>org.scalacheck.Arbitrary[scalaz.Validation[Unit,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-15937.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="5717.5954" y="-15941.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.Validation[Unit,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-15926.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 15ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Validation[Unit,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1054" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Validation[Unit,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6040.9826,-15952.9609C6198.1466,-15961.7941 6410.3222,-15961.4616 6466.6717,-15901.8701 6477.3786,-15890.5472 6466.9013,-13671.378 6474.6717,-13657.8701 6578.4323,-13477.4959 6821.0115,-13384.7306 6954.2897,-13345.8485"/>
<polygon fill="#000000" stroke="#000000" points="6955.4437,-13349.1585 6964.0863,-13343.0302 6953.5084,-13342.4314 6955.4437,-13349.1585"/>
</g>
<!-- org.scalacheck.Arbitrary[Unit] -->
<g id="node1439" class="node">
<title>org.scalacheck.Arbitrary[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-15983.8701" rx="130.2154" ry="26.7407"/>
<text text-anchor="start" x="6962.014" y="-15987.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Unit]</text>
<text text-anchor="middle" x="7046.014" y="-15972.6701" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 158ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Validation[Unit,Int]]&#45;&gt;org.scalacheck.Arbitrary[Unit] -->
<g id="edge328" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Validation[Unit,Int]]&#45;&gt;org.scalacheck.Arbitrary[Unit]</title>
<path fill="none" stroke="#000000" d="M6068.3183,-15945.8826C6309.168,-15955.2406 6700.9138,-15970.4615 6907.8381,-15978.5014"/>
<polygon fill="#000000" stroke="#000000" points="6907.726,-15981.9996 6917.8544,-15978.8905 6907.9978,-15975.0048 6907.726,-15981.9996"/>
</g>
<!-- scalaz.Equal[Boolean \/ (String \/ Int)] -->
<g id="node584" class="node">
<title>scalaz.Equal[Boolean \/ (String \/ Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-19015.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="4485.253" y="-19019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Boolean / (String / Int)]</text>
<text text-anchor="middle" x="4586.253" y="-19004.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- scalaz.Equal[Boolean \/ (String \/ Int)]&#45;&gt;scalaz.Equal[String \/ Int] -->
<g id="edge280" class="edge">
<title>scalaz.Equal[Boolean \/ (String \/ Int)]&#45;&gt;scalaz.Equal[String \/ Int]</title>
<path fill="none" stroke="#000000" d="M4658.8733,-18992.0949C4796.7087,-18952.0591 5096.1466,-18890.3855 5249.5191,-19051.8701 5263.6558,-19066.7545 5243.4215,-21992.9486 5257.5191,-22007.8701 5322.481,-22076.6286 5594.7713,-22066.5189 5750.8674,-22054.4382"/>
<polygon fill="#000000" stroke="#000000" points="5751.2841,-22057.9163 5760.9778,-22053.6405 5750.7334,-22050.938 5751.2841,-22057.9163"/>
</g>
<!-- scalaz.Equal[Boolean \/ (String \/ Int)]&#45;&gt;scalaz.Order[Boolean] -->
<g id="edge520" class="edge">
<title>scalaz.Equal[Boolean \/ (String \/ Int)]&#45;&gt;scalaz.Order[Boolean]</title>
<path fill="none" stroke="#000000" d="M4740.472,-19014.9834C5127.7813,-19013.3745 6134.1283,-19013.1806 6466.6717,-19051.8701 6648.228,-19072.9931 6856.7726,-19124.9888 6967.432,-19154.8414"/>
<polygon fill="#000000" stroke="#000000" points="6966.6132,-19158.2457 6977.1806,-19157.4824 6968.4437,-19151.4892 6966.6132,-19158.2457"/>
</g>
<!-- scalaz.Equal[Boolean \/ (String \/ Int)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge557" class="edge">
<title>scalaz.Equal[Boolean \/ (String \/ Int)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M4646.7599,-18991.1309C4784.2129,-18931.1954 5118.2091,-18763.5941 5249.5191,-18501.8701 5260.2834,-18480.4148 5240.3892,-18086.6857 5257.5191,-18069.8701 5305.4568,-18022.8119 6418.2632,-18023.2963 6466.6717,-18069.8701 6483.2586,-18085.8283 6462.652,-18257.2406 6474.6717,-18276.8701 6583.4523,-18454.5206 6829.1983,-18541.7976 6960.1247,-18577.0623"/>
<polygon fill="#000000" stroke="#000000" points="6959.5561,-18580.5324 6970.1192,-18579.7132 6961.3508,-18573.7664 6959.5561,-18580.5324"/>
</g>
<!-- org.scalacheck.Cogen[HListSpec.this.HInit] -->
<g id="node585" class="node">
<title>org.scalacheck.Cogen[HListSpec.this.HInit]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-873.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="6925.514" y="-877.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[HListSpec.this.HInit]</text>
<text text-anchor="middle" x="7046.014" y="-862.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Order[K] -->
<g id="node586" class="node">
<title>scalaz.Order[K]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-43455.8701" rx="73.5782" ry="26.7407"/>
<text text-anchor="start" x="608.6596" y="-43459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[K]</text>
<text text-anchor="middle" x="652.6596" y="-43444.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0,Boolean,(Boolean, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="node588" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0,Boolean,(Boolean, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-33195.8701" rx="741.0958" ry="26.7407"/>
<text text-anchor="start" x="2650.8678" y="-33199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0,Boolean,(Boolean, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]</text>
<text text-anchor="middle" x="3166.8678" y="-33184.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Empty[Set[Int]] -->
<g id="node589" class="node">
<title>monocle.function.Empty[Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-43527.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="559.1596" y="-43531.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[Set[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-43516.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.Cofree[Option,A]]&#45;&gt;org.scalacheck.Cogen[A] -->
<g id="edge1259" class="edge">
<title>org.scalacheck.Cogen[scalaz.Cofree[Option,A]]&#45;&gt;org.scalacheck.Cogen[A]</title>
<path fill="none" stroke="#000000" d="M6042.6557,-27432.4994C6162.8236,-27439.6036 6324.198,-27449.2016 6466.6717,-27457.8701 6627.2089,-27467.6375 6812.7492,-27479.2183 6929.7218,-27486.5552"/>
<polygon fill="#000000" stroke="#000000" points="6929.5729,-27490.0526 6939.7725,-27487.1857 6930.0113,-27483.0663 6929.5729,-27490.0526"/>
</g>
<!-- org.scalacheck.Arbitrary[(Long, String)] -->
<g id="node591" class="node">
<title>org.scalacheck.Arbitrary[(Long, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-5455.8701" rx="168.0831" ry="26.7407"/>
<text text-anchor="start" x="5751.0954" y="-5459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Long, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-5444.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Long, String)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge1009" class="edge">
<title>org.scalacheck.Arbitrary[(Long, String)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6029.3167,-5452.5974C6188.0311,-5453.5042 6410.4534,-5466.5684 6466.6717,-5529.8701 6488.3636,-5554.2951 6456.26,-7854.8861 6474.6717,-7881.8701 6571.6697,-8024.0289 6773.3342,-8076.7671 6909.2124,-8096.3318"/>
<polygon fill="#000000" stroke="#000000" points="6908.8991,-8099.8219 6919.2872,-8097.7391 6909.8676,-8092.8892 6908.8991,-8099.8219"/>
</g>
<!-- org.scalacheck.Arbitrary[(Long, String)]&#45;&gt;org.scalacheck.Arbitrary[Long] -->
<g id="edge529" class="edge">
<title>org.scalacheck.Arbitrary[(Long, String)]&#45;&gt;org.scalacheck.Arbitrary[Long]</title>
<path fill="none" stroke="#000000" d="M6030.4648,-5457.15C6264.2375,-5458.9271 6683.0962,-5462.1112 6902.7095,-5463.7807"/>
<polygon fill="#000000" stroke="#000000" points="6902.9888,-5467.2828 6913.0151,-5463.859 6903.0421,-5460.283 6902.9888,-5467.2828"/>
</g>
<!-- scala.reflect.ClassTag[(Long, String)] -->
<g id="node1083" class="node">
<title>scala.reflect.ClassTag[(Long, String)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-5392.8701" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="6942.514" y="-5396.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Long, String)]</text>
<text text-anchor="middle" x="7046.014" y="-5381.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Long, String)]&#45;&gt;scala.reflect.ClassTag[(Long, String)] -->
<g id="edge73" class="edge">
<title>org.scalacheck.Arbitrary[(Long, String)]&#45;&gt;scala.reflect.ClassTag[(Long, String)]</title>
<path fill="none" stroke="#000000" d="M6021.7639,-5447.3736C6247.7215,-5435.3497 6658.4502,-5413.4935 6885.0899,-5401.4333"/>
<polygon fill="#000000" stroke="#000000" points="6885.6082,-5404.9108 6895.408,-5400.8843 6885.2361,-5397.9207 6885.6082,-5404.9108"/>
</g>
<!-- org.scalacheck.Arbitrary[Int ==&gt;&gt; Char] -->
<g id="node592" class="node">
<title>org.scalacheck.Arbitrary[Int ==&gt;&gt; Char]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-14019.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="5749.0954" y="-14023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Int ==&gt;&gt; Char]</text>
<text text-anchor="middle" x="5862.0954" y="-14008.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int ==&gt;&gt; Char]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge996" class="edge">
<title>org.scalacheck.Arbitrary[Int ==&gt;&gt; Char]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M6011.1654,-14033.1687C6170.0081,-14043.6442 6406.7503,-14047.4099 6466.6717,-13983.8701 6488.4455,-13960.7814 6452.9378,-4866.9962 6474.6717,-4843.8701 6532.4743,-4782.3647 6765.0746,-4786.6261 6915.0838,-4796.46"/>
<polygon fill="#000000" stroke="#000000" points="6915.0779,-4799.9675 6925.2901,-4797.146 6915.5474,-4792.9832 6915.0779,-4799.9675"/>
</g>
<!-- org.scalacheck.Arbitrary[Int ==&gt;&gt; Char]&#45;&gt;scalaz.Order[Int] -->
<g id="edge740" class="edge">
<title>org.scalacheck.Arbitrary[Int ==&gt;&gt; Char]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M6011.1604,-14006.5761C6169.9986,-13996.1048 6406.7368,-13992.3429 6466.6717,-14055.8701 6481.3211,-14071.3975 6468.3091,-20183.4931 6474.6717,-20203.8701 6585.4921,-20558.7866 6907.1156,-20896.0191 7012.2932,-20999.5319"/>
<polygon fill="#000000" stroke="#000000" points="7009.8932,-21002.0804 7019.4861,-21006.5779 7014.7917,-20997.0798 7009.8932,-21002.0804"/>
</g>
<!-- org.scalacheck.Arbitrary[Int ==&gt;&gt; Char]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge3" class="edge">
<title>org.scalacheck.Arbitrary[Int ==&gt;&gt; Char]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6011.6056,-14032.9511C6170.1947,-14043.154 6406.0942,-14046.6021 6466.6717,-13983.8701 6479.2563,-13970.8379 6465.474,-13673.4781 6474.6717,-13657.8701 6580.389,-13478.4729 6822.4426,-13385.2485 6955.0435,-13346.0522"/>
<polygon fill="#000000" stroke="#000000" points="6956.1686,-13349.3699 6964.7891,-13343.2105 6954.2091,-13342.6498 6956.1686,-13349.3699"/>
</g>
<!-- scalaz.Equal[Option[List[Int]]] -->
<g id="node593" class="node">
<title>scalaz.Equal[Option[List[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-21501.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="4501.753" y="-21505.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[List[Int]]]</text>
<text text-anchor="middle" x="4586.253" y="-21490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 9ms</text>
</g>
<!-- scalaz.Equal[Option[List[Int]]]&#45;&gt;scalaz.Equal[List[Int]] -->
<g id="edge844" class="edge">
<title>scalaz.Equal[Option[List[Int]]]&#45;&gt;scalaz.Equal[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4713.1059,-21495.154C4846.6037,-21488.0464 5062.8547,-21476.4207 5249.5191,-21465.8701 5427.2037,-21455.8269 5633.8419,-21443.5614 5755.9834,-21436.2506"/>
<polygon fill="#000000" stroke="#000000" points="5756.3087,-21439.7375 5766.0816,-21435.6459 5755.8903,-21432.75 5756.3087,-21439.7375"/>
</g>
<!-- org.scalacheck.Arbitrary[(((Int, Char, Boolean, String, Long), Float)) =&gt; ((Int, Char, Boolean, String, Long), Float)] -->
<g id="node594" class="node">
<title>org.scalacheck.Arbitrary[(((Int, Char, Boolean, String, Long), Float)) =&gt; ((Int, Char, Boolean, String, Long), Float)]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-4699.8701" rx="463.3099" ry="26.7407"/>
<text text-anchor="start" x="2847.3678" y="-4703.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(((Int, Char, Boolean, String, Long), Float)) =&gt; ((Int, Char, Boolean, String, Long), Float)]</text>
<text text-anchor="middle" x="3166.8678" y="-4688.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 39ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(((Int, Char, Boolean, String, Long), Float)) =&gt; ((Int, Char, Boolean, String, Long), Float)]&#45;&gt;scala.reflect.ClassTag[(((Int, Char, Boolean, String, Long), Float)) =&gt; ((Int, Char, Boolean, String, Long), Float)] -->
<g id="edge311" class="edge">
<title>org.scalacheck.Arbitrary[(((Int, Char, Boolean, String, Long), Float)) =&gt; ((Int, Char, Boolean, String, Long), Float)]&#45;&gt;scala.reflect.ClassTag[(((Int, Char, Boolean, String, Long), Float)) =&gt; ((Int, Char, Boolean, String, Long), Float)]</title>
<path fill="none" stroke="#000000" d="M3515.9064,-4682.1647C3733.6714,-4671.1183 4013.1388,-4656.942 4231.8977,-4645.8451"/>
<polygon fill="#000000" stroke="#000000" points="4232.131,-4649.3379 4241.9408,-4645.3357 4231.7763,-4642.3469 4232.131,-4649.3379"/>
</g>
<!-- org.scalacheck.Arbitrary[(((Int, Char, Boolean, String, Long), Float)) =&gt; ((Int, Char, Boolean, String, Long), Float)]&#45;&gt;org.scalacheck.Cogen[((Int, Char, Boolean, String, Long), Float)] -->
<g id="edge215" class="edge">
<title>org.scalacheck.Arbitrary[(((Int, Char, Boolean, String, Long), Float)) =&gt; ((Int, Char, Boolean, String, Long), Float)]&#45;&gt;org.scalacheck.Cogen[((Int, Char, Boolean, String, Long), Float)]</title>
<path fill="none" stroke="#000000" d="M3630.1544,-4699.8701C3854.8546,-4699.8701 4117.1811,-4699.8701 4310.1568,-4699.8701"/>
<polygon fill="#000000" stroke="#000000" points="4310.1592,-4703.3702 4320.1591,-4699.8701 4310.1591,-4696.3702 4310.1592,-4703.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long), Float)] -->
<g id="node1064" class="node">
<title>org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long), Float)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-5302.8701" rx="276.4575" ry="26.7407"/>
<text text-anchor="start" x="4398.753" y="-5306.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long), Float)]</text>
<text text-anchor="middle" x="4586.253" y="-5291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 23ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(((Int, Char, Boolean, String, Long), Float)) =&gt; ((Int, Char, Boolean, String, Long), Float)]&#45;&gt;org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long), Float)] -->
<g id="edge514" class="edge">
<title>org.scalacheck.Arbitrary[(((Int, Char, Boolean, String, Long), Float)) =&gt; ((Int, Char, Boolean, String, Long), Float)]&#45;&gt;org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long), Float)]</title>
<path fill="none" stroke="#000000" d="M3229.6885,-4726.5583C3461.7147,-4825.1304 4269.6387,-5168.3623 4515.0265,-5272.6108"/>
<polygon fill="#000000" stroke="#000000" points="4513.9851,-5275.9711 4524.5575,-5276.6599 4516.7222,-5269.5283 4513.9851,-5275.9711"/>
</g>
<!-- monocle.function.Field2[(Int, Char, Boolean, String, Long, Float),Char] -->
<g id="node595" class="node">
<title>monocle.function.Field2[(Int, Char, Boolean, String, Long, Float),Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-43599.8701" rx="291.1561" ry="26.7407"/>
<text text-anchor="start" x="454.6596" y="-43603.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field2[(Int, Char, Boolean, String, Long, Float),Char]</text>
<text text-anchor="middle" x="652.6596" y="-43588.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._1.N,Char] -->
<g id="node1040" class="node">
<title>shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._1.N,Char]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-43599.8701" rx="373.2048" ry="26.7407"/>
<text text-anchor="start" x="1606.034" y="-43603.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._1.N,Char]</text>
<text text-anchor="middle" x="1862.034" y="-43588.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Field2[(Int, Char, Boolean, String, Long, Float),Char]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._1.N,Char] -->
<g id="edge353" class="edge">
<title>monocle.function.Field2[(Int, Char, Boolean, String, Long, Float),Char]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._1.N,Char]</title>
<path fill="none" stroke="#000000" d="M944.259,-43599.8701C1104.6162,-43599.8701 1305.5388,-43599.8701 1478.4761,-43599.8701"/>
<polygon fill="#000000" stroke="#000000" points="1478.5155,-43603.3702 1488.5154,-43599.8701 1478.5154,-43596.3702 1478.5155,-43603.3702"/>
</g>
<!-- org.scalacheck.util.Buildable[(Unit, Int),Either[Unit,Int]] -->
<g id="node596" class="node">
<title>org.scalacheck.util.Buildable[(Unit, Int),Either[Unit,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-16229.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="5706.0954" y="-16233.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(Unit, Int),Either[Unit,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-16218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(Unit, Int),Either[Unit,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Unit, Int),Either[Unit,Int]] -->
<g id="edge214" class="edge">
<title>org.scalacheck.util.Buildable[(Unit, Int),Either[Unit,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Unit, Int),Either[Unit,Int]]</title>
<path fill="none" stroke="#000000" d="M6094.2343,-16229.8701C6284.0139,-16229.8701 6553.297,-16229.8701 6757.03,-16229.8701"/>
<polygon fill="#000000" stroke="#000000" points="6757.2914,-16233.3702 6767.2914,-16229.8701 6757.2913,-16226.3702 6757.2914,-16233.3702"/>
</g>
<!-- (=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2Type[Int],(Int, Option[Int])]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2Type[Int],_$1] -->
<g id="node597" class="node">
<title>(=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2Type[Int],(Int, Option[Int])]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2Type[Int],_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-43671.8701" rx="652.8192" ry="26.7407"/>
<text text-anchor="start" x="199.1596" y="-43675.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2Type[Int],(Int, Option[Int])]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2Type[Int],_$1]</text>
<text text-anchor="middle" x="652.6596" y="-43660.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Int, Int)) =&gt; ?{def shouldEqual: ?} -->
<g id="node598" class="node">
<title>((Int, Int)) =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-25401.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="551.6596" y="-25405.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Int)) =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-25390.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- ((Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge1321" class="edge">
<title>((Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M807.0561,-25401.8701C1056.0651,-25401.8701 1540.1028,-25401.8701 1754.9074,-25401.8701"/>
<polygon fill="#000000" stroke="#000000" points="1754.9307,-25405.3702 1764.9307,-25401.8701 1754.9306,-25398.3702 1754.9307,-25405.3702"/>
</g>
<!-- ((Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge716" class="edge">
<title>((Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M800.4314,-25394.1191C932.7289,-25387.0844 1132.0037,-25376.2535 1305.3191,-25365.8701 1453.0124,-25357.0217 1622.6806,-25345.9142 1735.5046,-25338.3947"/>
<polygon fill="#000000" stroke="#000000" points="1735.8177,-25341.8817 1745.5626,-25337.7238 1735.3518,-25334.8972 1735.8177,-25341.8817"/>
</g>
<!-- org.scalacheck.Cogen[(monocle.function.CList, Char)]&#45;&gt;org.scalacheck.Cogen[Char] -->
<g id="edge1302" class="edge">
<title>org.scalacheck.Cogen[(monocle.function.CList, Char)]&#45;&gt;org.scalacheck.Cogen[Char]</title>
<path fill="none" stroke="#000000" d="M6050.2716,-2659.1857C6205.6254,-2651.5836 6409.5244,-2653.5433 6466.6717,-2709.8701 6483.8114,-2726.7636 6463.2091,-2796.7095 6474.6717,-2817.8701 6589.2114,-3029.3158 6855.1144,-3169.5046 6979.5549,-3225.8846"/>
<polygon fill="#000000" stroke="#000000" points="6978.4312,-3229.2166 6988.9875,-3230.1201 6981.2987,-3222.8309 6978.4312,-3229.2166"/>
</g>
<!-- org.scalacheck.Cogen[(monocle.function.CList, Char)]&#45;&gt;org.scalacheck.Cogen[monocle.function.CList] -->
<g id="edge398" class="edge">
<title>org.scalacheck.Cogen[(monocle.function.CList, Char)]&#45;&gt;org.scalacheck.Cogen[monocle.function.CList]</title>
<path fill="none" stroke="#000000" d="M6086.5217,-2673.8701C6303.8935,-2673.8701 6630.6749,-2673.8701 6841.1634,-2673.8701"/>
<polygon fill="#000000" stroke="#000000" points="6841.4105,-2677.3702 6851.4105,-2673.8701 6841.4105,-2670.3702 6841.4105,-2677.3702"/>
</g>
<!-- PlatedSpec.this.PropertyCheckConfigurable -->
<g id="node600" class="node">
<title>PlatedSpec.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-43743.8701" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="532.6596" y="-43747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">PlatedSpec.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="652.6596" y="-43732.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 2ms</text>
</g>
<!-- scalaz.Equal[(Boolean, IsoSpec.this.IntWrapper)] -->
<g id="node601" class="node">
<title>scalaz.Equal[(Boolean, IsoSpec.this.IntWrapper)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-17525.8701" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="5726.0954" y="-17529.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Boolean, IsoSpec.this.IntWrapper)]</text>
<text text-anchor="middle" x="5862.0954" y="-17514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scalaz.Equal[(Boolean, IsoSpec.this.IntWrapper)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge460" class="edge">
<title>scalaz.Equal[(Boolean, IsoSpec.this.IntWrapper)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M6033.3697,-17511.3059C6191.1306,-17502.1171 6409.1888,-17501.5422 6466.6717,-17561.8701 6480.3734,-17576.2498 6464.5328,-18259.7904 6474.6717,-18276.8701 6580.9341,-18455.8772 6827.4786,-18542.5213 6959.2685,-18577.3506"/>
<polygon fill="#000000" stroke="#000000" points="6958.7714,-18580.8377 6969.3305,-18579.9679 6960.5337,-18574.0632 6958.7714,-18580.8377"/>
</g>
<!-- scalaz.Equal[(Boolean, IsoSpec.this.IntWrapper)]&#45;&gt;scalaz.Equal[IsoSpec.this.IntWrapper] -->
<g id="edge1077" class="edge">
<title>scalaz.Equal[(Boolean, IsoSpec.this.IntWrapper)]&#45;&gt;scalaz.Equal[IsoSpec.this.IntWrapper]</title>
<path fill="none" stroke="#000000" d="M6060.5903,-17531.9058C6289.5538,-17538.868 6662.0474,-17550.1946 6877.4994,-17556.7459"/>
<polygon fill="#000000" stroke="#000000" points="6877.5373,-17560.2486 6887.6391,-17557.0543 6877.7501,-17553.2519 6877.5373,-17560.2486"/>
</g>
<!-- monocle.function.Each[ProductSpec.this.Permissions,Boolean] -->
<g id="node602" class="node">
<title>monocle.function.Each[ProductSpec.this.Permissions,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-26769.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="4413.253" y="-26773.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[ProductSpec.this.Permissions,Boolean]</text>
<text text-anchor="middle" x="4586.253" y="-26758.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- monocle.function.Each[ProductSpec.this.Permissions,Boolean]&#45;&gt;monocle.function.Each[Boolean :: Boolean :: Boolean :: shapeless.HNil,Boolean] -->
<g id="edge171" class="edge">
<title>monocle.function.Each[ProductSpec.this.Permissions,Boolean]&#45;&gt;monocle.function.Each[Boolean :: Boolean :: Boolean :: shapeless.HNil,Boolean]</title>
<path fill="none" stroke="#000000" d="M4833.761,-26776.8539C5035.8226,-26782.5554 5322.7975,-26790.6529 5542.2656,-26796.8455"/>
<polygon fill="#000000" stroke="#000000" points="5542.2416,-26800.3462 5552.3364,-26797.1297 5542.4392,-26793.3489 5542.2416,-26800.3462"/>
</g>
<!-- shapeless.Generic.Aux[ProductSpec.this.Permissions,SGen] -->
<g id="node1296" class="node">
<title>shapeless.Generic.Aux[ProductSpec.this.Permissions,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-26733.8701" rx="243.9037" ry="26.7407"/>
<text text-anchor="start" x="5697.5954" y="-26737.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[ProductSpec.this.Permissions,SGen]</text>
<text text-anchor="middle" x="5862.0954" y="-26722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- monocle.function.Each[ProductSpec.this.Permissions,Boolean]&#45;&gt;shapeless.Generic.Aux[ProductSpec.this.Permissions,SGen] -->
<g id="edge1093" class="edge">
<title>monocle.function.Each[ProductSpec.this.Permissions,Boolean]&#45;&gt;shapeless.Generic.Aux[ProductSpec.this.Permissions,SGen]</title>
<path fill="none" stroke="#000000" d="M4833.761,-26762.8862C5059.1066,-26756.5277 5390.0622,-26747.1893 5615.2123,-26740.8363"/>
<polygon fill="#000000" stroke="#000000" points="5615.6205,-26744.3262 5625.5178,-26740.5455 5615.423,-26737.329 5615.6205,-26744.3262"/>
</g>
<!-- monocle.function.Cons[Stream[Int],Int] -->
<g id="node603" class="node">
<title>monocle.function.Cons[Stream[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-43815.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="543.1596" y="-43819.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons[Stream[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-43804.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(HListSpec.this.HInit, Double)] -->
<g id="node604" class="node">
<title>org.scalacheck.Arbitrary[(HListSpec.this.HInit, Double)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-801.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="5705.5954" y="-805.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(HListSpec.this.HInit, Double)]</text>
<text text-anchor="middle" x="5862.0954" y="-790.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 18ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(HListSpec.this.HInit, Double)]&#45;&gt;scala.reflect.ClassTag[(HListSpec.this.HInit, Double)] -->
<g id="edge8" class="edge">
<title>org.scalacheck.Arbitrary[(HListSpec.this.HInit, Double)]&#45;&gt;scala.reflect.ClassTag[(HListSpec.this.HInit, Double)]</title>
<path fill="none" stroke="#000000" d="M6094.9399,-801.8701C6302.8561,-801.8701 6605.7852,-801.8701 6813.5771,-801.8701"/>
<polygon fill="#000000" stroke="#000000" points="6813.7089,-805.3702 6823.7089,-801.8701 6813.7088,-798.3702 6813.7089,-805.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(HListSpec.this.HInit, Double)]&#45;&gt;org.scalacheck.Arbitrary[Double] -->
<g id="edge851" class="edge">
<title>org.scalacheck.Arbitrary[(HListSpec.this.HInit, Double)]&#45;&gt;org.scalacheck.Arbitrary[Double]</title>
<path fill="none" stroke="#000000" d="M5943.0176,-776.6135C6074.1613,-741.3023 6331.9864,-696.2456 6466.6717,-837.8701 6483.2116,-855.2621 6458.1619,-1684.4495 6474.6717,-1701.8701 6531.6873,-1762.0307 6756.9403,-1759.0798 6907.0031,-1749.7181"/>
<polygon fill="#000000" stroke="#000000" points="6907.4693,-1753.1955 6917.2251,-1749.0633 6907.0218,-1746.2098 6907.4693,-1753.1955"/>
</g>
<!-- org.scalacheck.Arbitrary[HListSpec.this.HInit] -->
<g id="node1178" class="node">
<title>org.scalacheck.Arbitrary[HListSpec.this.HInit]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-729.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="6918.014" y="-733.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[HListSpec.this.HInit]</text>
<text text-anchor="middle" x="7046.014" y="-718.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(HListSpec.this.HInit, Double)]&#45;&gt;org.scalacheck.Arbitrary[HListSpec.this.HInit] -->
<g id="edge980" class="edge">
<title>org.scalacheck.Arbitrary[(HListSpec.this.HInit, Double)]&#45;&gt;org.scalacheck.Arbitrary[HListSpec.this.HInit]</title>
<path fill="none" stroke="#000000" d="M6067.9801,-789.3492C6291.1214,-775.7788 6644.0726,-754.3141 6859.3849,-741.2199"/>
<polygon fill="#000000" stroke="#000000" points="6859.7637,-744.7034 6869.5328,-740.6028 6859.3387,-737.7163 6859.7637,-744.7034"/>
</g>
<!-- shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._3.N,Float] -->
<g id="node605" class="node">
<title>shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._3.N,Float]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-32259.8701" rx="283.5996" ry="26.7407"/>
<text text-anchor="start" x="1669.534" y="-32263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._3.N,Float]</text>
<text text-anchor="middle" x="1862.034" y="-32248.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2] -->
<g id="node1158" class="node">
<title>shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-32259.8701" rx="395.9596" ry="26.7407"/>
<text text-anchor="start" x="2894.8678" y="-32263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2]</text>
<text text-anchor="middle" x="3166.8678" y="-32248.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._3.N,Float]&#45;&gt;shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2] -->
<g id="edge372" class="edge">
<title>shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._3.N,Float]&#45;&gt;shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2]</title>
<path fill="none" stroke="#000000" d="M2145.9678,-32259.8701C2325.7666,-32259.8701 2561.1202,-32259.8701 2760.5344,-32259.8701"/>
<polygon fill="#000000" stroke="#000000" points="2760.6027,-32263.3702 2770.6026,-32259.8701 2760.6026,-32256.3702 2760.6027,-32263.3702"/>
</g>
<!-- shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._5.N,Double] -->
<g id="node606" class="node">
<title>shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._5.N,Double]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-43887.8701" rx="387.489" ry="26.7407"/>
<text text-anchor="start" x="1596.034" y="-43891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._5.N,Double]</text>
<text text-anchor="middle" x="1862.034" y="-43876.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Cogen[Option[String]]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge859" class="edge">
<title>org.scalacheck.Cogen[Option[String]]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M6018.847,-6209.9017C6141.1809,-6205.5107 6315.2092,-6196.4237 6466.6717,-6177.8701 6638.1245,-6156.8677 6835.406,-6116.5949 6949.8793,-6091.6035"/>
<polygon fill="#000000" stroke="#000000" points="6950.6551,-6095.0166 6959.6748,-6089.4582 6949.1575,-6088.1787 6950.6551,-6095.0166"/>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Seq[?T] -->
<g id="node608" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Seq[?T]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-43959.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="551.6596" y="-43963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Seq[?T]</text>
<text text-anchor="middle" x="652.6596" y="-43948.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Double =&gt; Double] -->
<g id="node609" class="node">
<title>org.scalacheck.Arbitrary[Double =&gt; Double]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-1593.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="5738.5954" y="-1597.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Double =&gt; Double]</text>
<text text-anchor="middle" x="5862.0954" y="-1582.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 22ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Double =&gt; Double]&#45;&gt;scala.reflect.ClassTag[Double =&gt; Double] -->
<g id="edge751" class="edge">
<title>org.scalacheck.Arbitrary[Double =&gt; Double]&#45;&gt;scala.reflect.ClassTag[Double =&gt; Double]</title>
<path fill="none" stroke="#000000" d="M6023.1943,-1580.4161C6181.127,-1571.1343 6406.6607,-1569.6199 6466.6717,-1629.8701 6489.2889,-1652.5774 6452.0937,-1751.1237 6474.6717,-1773.8701 6529.5551,-1829.1627 6731.4864,-1830.2345 6879.7803,-1822.7583"/>
<polygon fill="#000000" stroke="#000000" points="6880.1108,-1826.246 6889.915,-1822.23 6879.7463,-1819.2554 6880.1108,-1826.246"/>
</g>
<!-- org.scalacheck.Arbitrary[Double =&gt; Double]&#45;&gt;org.scalacheck.Arbitrary[Double] -->
<g id="edge815" class="edge">
<title>org.scalacheck.Arbitrary[Double =&gt; Double]&#45;&gt;org.scalacheck.Arbitrary[Double]</title>
<path fill="none" stroke="#000000" d="M6025.4549,-1580.9373C6182.6975,-1572.3588 6405.4032,-1571.6598 6466.6717,-1629.8701 6490.0135,-1652.0467 6451.3682,-1679.6532 6474.6717,-1701.8701 6534.2673,-1758.6869 6756.0627,-1757.0367 6905.1286,-1748.8021"/>
<polygon fill="#000000" stroke="#000000" points="6905.5007,-1752.2867 6915.2859,-1748.2247 6905.1033,-1745.298 6905.5007,-1752.2867"/>
</g>
<!-- org.scalacheck.Cogen[Double] -->
<g id="node1335" class="node">
<title>org.scalacheck.Cogen[Double]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-1233.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="6961.514" y="-1237.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Double]</text>
<text text-anchor="middle" x="7046.014" y="-1222.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 9ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Double =&gt; Double]&#45;&gt;org.scalacheck.Cogen[Double] -->
<g id="edge854" class="edge">
<title>org.scalacheck.Arbitrary[Double =&gt; Double]&#45;&gt;org.scalacheck.Cogen[Double]</title>
<path fill="none" stroke="#000000" d="M6022.4371,-1607.5934C6180.6986,-1617.2057 6407.3645,-1619.088 6466.6717,-1557.8701 6488.9462,-1534.8779 6452.4369,-1292.9006 6474.6717,-1269.8701 6533.2961,-1209.1476 6765.6277,-1213.153 6915.363,-1222.726"/>
<polygon fill="#000000" stroke="#000000" points="6915.3429,-1226.2321 6925.5505,-1223.394 6915.8009,-1219.2471 6915.3429,-1226.2321"/>
</g>
<!-- scala.reflect.ClassTag[Char] -->
<g id="node610" class="node">
<title>scala.reflect.ClassTag[Char]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-4807.8701" rx="120.8306" ry="26.7407"/>
<text text-anchor="start" x="8119.1985" y="-4811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Char]</text>
<text text-anchor="middle" x="8196.6985" y="-4796.6701" font-family="Times,serif" font-size="14.00" fill="#000000">116 times = 67ms</text>
</g>
<!-- monocle.function.Empty[Map[Int,String]] -->
<g id="node611" class="node">
<title>monocle.function.Empty[Map[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-44031.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="536.6596" y="-44035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[Map[Int,String]]</text>
<text text-anchor="middle" x="652.6596" y="-44020.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[scalaz.OneAnd[List,Int],SGen] -->
<g id="node612" class="node">
<title>shapeless.Generic.Aux[scalaz.OneAnd[List,Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-26589.8701" rx="222.9775" ry="26.7407"/>
<text text-anchor="start" x="6896.514" y="-26593.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scalaz.OneAnd[List,Int],SGen]</text>
<text text-anchor="middle" x="7046.014" y="-26578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[(Int, Char),(Char, Int)] -->
<g id="node613" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[(Int, Char),(Char, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-29847.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="1710.034" y="-29851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[(Int, Char),(Char, Int)]</text>
<text text-anchor="middle" x="1862.034" y="-29836.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[(Int, Char),(Char, Int)]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char),(Char, Int)] -->
<g id="edge468" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[(Int, Char),(Char, Int)]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char),(Char, Int)]</title>
<path fill="none" stroke="#000000" d="M2088.5734,-29847.8701C2299.3742,-29847.8701 2615.5218,-29847.8701 2851.0574,-29847.8701"/>
<polygon fill="#000000" stroke="#000000" points="2851.1563,-29851.3702 2861.1563,-29847.8701 2851.1563,-29844.3702 2851.1563,-29851.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Cofree[Stream,Int]] -->
<g id="node615" class="node">
<title>org.scalacheck.Arbitrary[scalaz.Cofree[Stream,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-13837.8701" rx="212.2642" ry="26.7407"/>
<text text-anchor="start" x="5720.0954" y="-13841.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.Cofree[Stream,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-13826.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Cofree[Stream,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge36" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Cofree[Stream,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6041.0367,-13852.3221C6197.6312,-13860.6331 6408.8867,-13859.8853 6466.6717,-13801.8701 6477.9803,-13790.5164 6466.3233,-13671.5483 6474.6717,-13657.8701 6583.2997,-13479.8917 6824.7097,-13385.966 6956.2851,-13346.3178"/>
<polygon fill="#000000" stroke="#000000" points="6957.3656,-13349.6481 6965.953,-13343.4427 6955.3702,-13342.9385 6957.3656,-13349.6481"/>
</g>
<!-- scalaz.Equal[A3] -->
<g id="node616" class="node">
<title>scalaz.Equal[A3]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-44103.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="605.6596" y="-44107.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[A3]</text>
<text text-anchor="middle" x="652.6596" y="-44092.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P) -->
<g id="node617" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-44175.8701" rx="239.9186" ry="26.7407"/>
<text text-anchor="start" x="491.1596" y="-44179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-44164.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char),(Char, Int)] -->
<g id="node618" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char),(Char, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-29739.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="1708.534" y="-29743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[(Int, Char),(Char, Int)]</text>
<text text-anchor="middle" x="1862.034" y="-29728.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char),(Char, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Char),L1] -->
<g id="edge1239" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char),(Char, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Char),L1]</title>
<path fill="none" stroke="#000000" d="M2084.4902,-29746.0076C2343.1583,-29753.1441 2764.3719,-29764.7653 2997.7501,-29771.2041"/>
<polygon fill="#000000" stroke="#000000" points="2997.94,-29774.7106 3008.0327,-29771.4878 2998.1331,-29767.7133 2997.94,-29774.7106"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char),(Char, Int)]&#45;&gt;shapeless.ops.hlist.Tupler[Char :: Int :: shapeless.HNil] -->
<g id="edge689" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char),(Char, Int)]&#45;&gt;shapeless.ops.hlist.Tupler[Char :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2084.4902,-29733.7326C2321.9443,-29727.1813 2696.3757,-29716.8508 2936.7335,-29710.2194"/>
<polygon fill="#000000" stroke="#000000" points="2937.1072,-29713.7105 2947.0068,-29709.936 2936.9141,-29706.7132 2937.1072,-29713.7105"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Int :: Char :: shapeless.HNil,L2] -->
<g id="node715" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[Int :: Char :: shapeless.HNil,L2]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-29631.8701" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="2988.8678" y="-29635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[Int :: Char :: shapeless.HNil,L2]</text>
<text text-anchor="middle" x="3166.8678" y="-29620.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char),(Char, Int)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Int :: Char :: shapeless.HNil,L2] -->
<g id="edge954" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char),(Char, Int)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Int :: Char :: shapeless.HNil,L2]</title>
<path fill="none" stroke="#000000" d="M2001.8309,-29718.6183C2114.2167,-29702.3004 2276.2887,-29680.4892 2418.7488,-29667.8701 2579.0738,-29653.6684 2759.2592,-29644.7839 2902.6179,-29639.3948"/>
<polygon fill="#000000" stroke="#000000" points="2903.0125,-29642.8826 2912.8753,-29639.0128 2902.752,-29635.8874 2903.0125,-29642.8826"/>
</g>
<!-- scalaz.Equal[MacroOutSideMonocleSpec.this.ExampleType[Int]] -->
<g id="node619" class="node">
<title>scalaz.Equal[MacroOutSideMonocleSpec.this.ExampleType[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-21645.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="4405.753" y="-21649.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[MacroOutSideMonocleSpec.this.ExampleType[Int]]</text>
<text text-anchor="middle" x="4586.253" y="-21634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[MacroOutSideMonocleSpec.this.ExampleType[Int]]&#45;&gt;scalaz.Equal[Option[Int]] -->
<g id="edge389" class="edge">
<title>scalaz.Equal[MacroOutSideMonocleSpec.this.ExampleType[Int]]&#45;&gt;scalaz.Equal[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4822.2488,-21633.3182C4948.9322,-21626.5154 5107.7578,-21617.8827 5249.5191,-21609.8701 5422.1603,-21600.112 5622.1347,-21588.2559 5745.381,-21580.8849"/>
<polygon fill="#000000" stroke="#000000" points="5745.818,-21584.3652 5755.5911,-21580.2741 5745.3999,-21577.3776 5745.818,-21584.3652"/>
</g>
<!-- org.scalacheck.Cogen[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge1080" class="edge">
<title>org.scalacheck.Cogen[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M6035.8538,-3084.272C6175.4217,-3077.7203 6364.432,-3095.3344 6466.6717,-3217.8701 6478.2391,-3231.7337 6464.7883,-5802.7596 6474.6717,-5817.8701 6574.4663,-5970.443 6789.6955,-6031.3081 6925.6379,-6055.1132"/>
<polygon fill="#000000" stroke="#000000" points="6925.245,-6058.5967 6935.6917,-6056.8316 6926.4244,-6051.6967 6925.245,-6058.5967"/>
</g>
<!-- org.scalacheck.Cogen[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge276" class="edge">
<title>org.scalacheck.Cogen[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M6086.3629,-3123.0685C6236.4127,-3129.0713 6415.4406,-3123.7189 6466.6717,-3069.8701 6482.5258,-3053.2058 6462.018,-2261.0777 6474.6717,-2241.8701 6564.6402,-2105.3035 6746.9636,-2042.1821 6881.5609,-2013.3689"/>
<polygon fill="#000000" stroke="#000000" points="6882.5049,-2016.7472 6891.5739,-2011.2696 6881.0685,-2009.8961 6882.5049,-2016.7472"/>
</g>
<!-- scalaz.Equal[scalaz.Cofree[Stream,A]] -->
<g id="node621" class="node">
<title>scalaz.Equal[scalaz.Cofree[Stream,A]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-27849.8701" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="3060.3678" y="-27853.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Cofree[Stream,A]]</text>
<text text-anchor="middle" x="3166.8678" y="-27838.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scalaz.Equal[scalaz.Cofree[Stream,A]]&#45;&gt;scalaz.Equal[A] -->
<g id="edge1214" class="edge">
<title>scalaz.Equal[scalaz.Cofree[Stream,A]]&#45;&gt;scalaz.Equal[A]</title>
<path fill="none" stroke="#000000" d="M3323.062,-27857.136C3474.417,-27864.236 3710.4508,-27875.4643 3914.9868,-27885.8701 4126.9158,-27896.6519 4376.4273,-27910.2788 4503.2238,-27917.2702"/>
<polygon fill="#000000" stroke="#000000" points="4503.0744,-27920.7671 4513.252,-27917.8234 4503.46,-27913.7778 4503.0744,-27920.7671"/>
</g>
<!-- scala.reflect.ClassTag[((Int, Char)) =&gt; (Int, Char)] -->
<g id="node622" class="node">
<title>scala.reflect.ClassTag[((Int, Char)) =&gt; (Int, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-14307.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="5723.5954" y="-14311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Int, Char)) =&gt; (Int, Char)]</text>
<text text-anchor="middle" x="5862.0954" y="-14296.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- monocle.function.FilterIndex[String,Int,Char] -->
<g id="node623" class="node">
<title>monocle.function.FilterIndex[String,Int,Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-44247.8701" rx="188.5952" ry="26.7407"/>
<text text-anchor="start" x="527.1596" y="-44251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[String,Int,Char]</text>
<text text-anchor="middle" x="652.6596" y="-44236.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[java.util.UUID =&gt; java.util.UUID] -->
<g id="node624" class="node">
<title>scala.reflect.ClassTag[java.util.UUID =&gt; java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-44391.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="1704.034" y="-44395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[java.util.UUID =&gt; java.util.UUID]</text>
<text text-anchor="middle" x="1862.034" y="-44380.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[A,scalaz.Tree[A]] -->
<g id="node625" class="node">
<title>org.scalacheck.util.Buildable[A,scalaz.Tree[A]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-28057.8701" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="6915.014" y="-28061.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[A,scalaz.Tree[A]]</text>
<text text-anchor="middle" x="7046.014" y="-28046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,A,scalaz.Tree[A]] -->
<g id="node1012" class="node">
<title>scala.collection.generic.CanBuildFrom[F,A,scalaz.Tree[A]]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-28057.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="8032.6985" y="-28061.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,A,scalaz.Tree[A]]</text>
<text text-anchor="middle" x="8196.6985" y="-28046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[A,scalaz.Tree[A]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,A,scalaz.Tree[A]] -->
<g id="edge1307" class="edge">
<title>org.scalacheck.util.Buildable[A,scalaz.Tree[A]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,A,scalaz.Tree[A]]</title>
<path fill="none" stroke="#000000" d="M7242.8428,-28057.8701C7436.2276,-28057.8701 7732.1775,-28057.8701 7943.0992,-28057.8701"/>
<polygon fill="#000000" stroke="#000000" points="7943.3929,-28061.3702 7953.3928,-28057.8701 7943.3928,-28054.3702 7943.3929,-28061.3702"/>
</g>
<!-- scala.reflect.ClassTag[Stream[Int] =&gt; Stream[Int]] -->
<g id="node626" class="node">
<title>scala.reflect.ClassTag[Stream[Int] =&gt; Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-10811.8701" rx="208.693" ry="26.7407"/>
<text text-anchor="start" x="5722.5954" y="-10815.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Stream[Int] =&gt; Stream[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-10800.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[CoproductSpec.this.IB] -->
<g id="node629" class="node">
<title>org.scalacheck.Arbitrary[CoproductSpec.this.IB]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-44463.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="518.6596" y="-44467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[CoproductSpec.this.IB]</text>
<text text-anchor="middle" x="652.6596" y="-44452.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.reflect.ClassTag[CoproductSpec.this.IB] -->
<g id="node1217" class="node">
<title>scala.reflect.ClassTag[CoproductSpec.this.IB]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-44463.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="1735.534" y="-44467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[CoproductSpec.this.IB]</text>
<text text-anchor="middle" x="1862.034" y="-44452.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[CoproductSpec.this.IB]&#45;&gt;scala.reflect.ClassTag[CoproductSpec.this.IB] -->
<g id="edge2" class="edge">
<title>org.scalacheck.Arbitrary[CoproductSpec.this.IB]&#45;&gt;scala.reflect.ClassTag[CoproductSpec.this.IB]</title>
<path fill="none" stroke="#000000" d="M853.7207,-44463.8701C1077.6367,-44463.8701 1437.4467,-44463.8701 1661.2503,-44463.8701"/>
<polygon fill="#000000" stroke="#000000" points="1661.4721,-44467.3702 1671.4721,-44463.8701 1661.4721,-44460.3702 1661.4721,-44467.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Long =&gt; Long] -->
<g id="node630" class="node">
<title>org.scalacheck.Arbitrary[Long =&gt; Long]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-3939.8701" rx="170.3255" ry="26.7407"/>
<text text-anchor="start" x="5749.5954" y="-3943.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Long =&gt; Long]</text>
<text text-anchor="middle" x="5862.0954" y="-3928.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 57ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Long =&gt; Long]&#45;&gt;org.scalacheck.Arbitrary[Long] -->
<g id="edge955" class="edge">
<title>org.scalacheck.Arbitrary[Long =&gt; Long]&#45;&gt;org.scalacheck.Arbitrary[Long]</title>
<path fill="none" stroke="#000000" d="M6010.7528,-3926.6463C6169.5486,-3916.199 6406.5582,-3912.4214 6466.6717,-3975.8701 6480.5515,-3990.5199 6460.8172,-5414.1963 6474.6717,-5428.8701 6532.4498,-5490.0648 6763.8333,-5486.0476 6913.8354,-5476.3189"/>
<polygon fill="#000000" stroke="#000000" points="6914.2976,-5479.796 6924.0432,-5475.64 6913.833,-5472.8114 6914.2976,-5479.796"/>
</g>
<!-- org.scalacheck.Arbitrary[Long =&gt; Long]&#45;&gt;org.scalacheck.Cogen[Long] -->
<g id="edge89" class="edge">
<title>org.scalacheck.Arbitrary[Long =&gt; Long]&#45;&gt;org.scalacheck.Cogen[Long]</title>
<path fill="none" stroke="#000000" d="M6006.6802,-3925.608C6132.2135,-3918.5117 6316.851,-3920.976 6466.6717,-3975.8701 6708.9326,-4064.6341 6935.2279,-4290.1544 7015.3548,-4375.9939"/>
<polygon fill="#000000" stroke="#000000" points="7012.8387,-4378.428 7022.2067,-4383.3768 7017.9695,-4373.6662 7012.8387,-4378.428"/>
</g>
<!-- scala.reflect.ClassTag[Long =&gt; Long] -->
<g id="node1186" class="node">
<title>scala.reflect.ClassTag[Long =&gt; Long]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-3939.8701" rx="159.6125" ry="26.7407"/>
<text text-anchor="start" x="6941.014" y="-3943.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Long =&gt; Long]</text>
<text text-anchor="middle" x="7046.014" y="-3928.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Long =&gt; Long]&#45;&gt;scala.reflect.ClassTag[Long =&gt; Long] -->
<g id="edge823" class="edge">
<title>org.scalacheck.Arbitrary[Long =&gt; Long]&#45;&gt;scala.reflect.ClassTag[Long =&gt; Long]</title>
<path fill="none" stroke="#000000" d="M6032.6674,-3939.8701C6257.5719,-3939.8701 6651.0011,-3939.8701 6875.7511,-3939.8701"/>
<polygon fill="#000000" stroke="#000000" points="6875.9932,-3943.3702 6885.9931,-3939.8701 6875.9931,-3936.3702 6875.9932,-3943.3702"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P) -->
<g id="node631" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-44535.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="526.1596" y="-44539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-44524.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductSpec.this.Permissions] -->
<g id="node632" class="node">
<title>org.scalacheck.Arbitrary[ProductSpec.this.Permissions]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-44607.8701" rx="226.9626" ry="26.7407"/>
<text text-anchor="start" x="500.1596" y="-44611.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductSpec.this.Permissions]</text>
<text text-anchor="middle" x="652.6596" y="-44596.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Functor[F$macro$15] -->
<g id="node634" class="node">
<title>scalaz.Functor[F$macro$15]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-44679.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="574.1596" y="-44683.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$15]</text>
<text text-anchor="middle" x="652.6596" y="-44668.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[(Boolean, Int)]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge391" class="edge">
<title>org.scalacheck.Cogen[(Boolean, Int)]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M6000.733,-9745.4067C6159.2991,-9734.5704 6405.008,-9729.3565 6466.6717,-9793.8701 6488.132,-9816.3222 6456.5786,-10327.6256 6474.6717,-10352.8701 6577.0478,-10495.7104 6788.8795,-10538.5802 6923.8679,-10551.1209"/>
<polygon fill="#000000" stroke="#000000" points="6923.5848,-10554.6094 6933.8549,-10552.0065 6924.2031,-10547.6368 6923.5848,-10554.6094"/>
</g>
<!-- org.scalacheck.Cogen[(Boolean, Int)]&#45;&gt;org.scalacheck.Cogen[Boolean] -->
<g id="edge977" class="edge">
<title>org.scalacheck.Cogen[(Boolean, Int)]&#45;&gt;org.scalacheck.Cogen[Boolean]</title>
<path fill="none" stroke="#000000" d="M6000.5032,-9770.4238C6159.1755,-9781.3887 6405.317,-9786.768 6466.6717,-9721.8701 6478.0262,-9709.8598 6468.8735,-7357.3475 6474.6717,-7341.8701 6584.245,-7049.3817 6887.6837,-6800.0797 7001.8306,-6713.9926"/>
<polygon fill="#000000" stroke="#000000" points="7004.1375,-6716.6375 7010.0386,-6707.8382 6999.9382,-6711.037 7004.1375,-6716.6375"/>
</g>
<!-- scalaz.Equal[Option[scalaz.Cofree[Option,Int]]] -->
<g id="node636" class="node">
<title>scalaz.Equal[Option[scalaz.Cofree[Option,Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-22673.8701" rx="197.0658" ry="26.7407"/>
<text text-anchor="start" x="4454.753" y="-22677.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[scalaz.Cofree[Option,Int]]]</text>
<text text-anchor="middle" x="4586.253" y="-22662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[Option[scalaz.Cofree[Option,Int]]]&#45;&gt;scalaz.Equal[scalaz.Cofree[Option,Int]] -->
<g id="edge293" class="edge">
<title>scalaz.Equal[Option[scalaz.Cofree[Option,Int]]]&#45;&gt;scalaz.Equal[scalaz.Cofree[Option,Int]]</title>
<path fill="none" stroke="#000000" d="M4783.5049,-22672.6332C5030.7102,-22671.0831 5450.568,-22668.4505 5686.9309,-22666.9684"/>
<polygon fill="#000000" stroke="#000000" points="5687.0234,-22670.468 5697.0013,-22666.9053 5686.9795,-22663.4681 5687.0234,-22670.468"/>
</g>
<!-- monocle.function.Field4[(Boolean, Char, Int, Long, Float, Double),Long] -->
<g id="node637" class="node">
<title>monocle.function.Field4[(Boolean, Char, Int, Long, Float, Double),Long]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-44751.8701" rx="297.884" ry="26.7407"/>
<text text-anchor="start" x="450.1596" y="-44755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field4[(Boolean, Char, Int, Long, Float, Double),Long]</text>
<text text-anchor="middle" x="652.6596" y="-44740.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._3.N,Long] -->
<g id="node650" class="node">
<title>shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._3.N,Long]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-44751.8701" rx="379.9328" ry="26.7407"/>
<text text-anchor="start" x="1601.534" y="-44755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._3.N,Long]</text>
<text text-anchor="middle" x="1862.034" y="-44740.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Field4[(Boolean, Char, Int, Long, Float, Double),Long]&#45;&gt;shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._3.N,Long] -->
<g id="edge245" class="edge">
<title>monocle.function.Field4[(Boolean, Char, Int, Long, Float, Double),Long]&#45;&gt;shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._3.N,Long]</title>
<path fill="none" stroke="#000000" d="M950.4424,-44751.8701C1107.8212,-44751.8701 1302.9412,-44751.8701 1472.2312,-44751.8701"/>
<polygon fill="#000000" stroke="#000000" points="1472.317,-44755.3702 1482.3169,-44751.8701 1472.3169,-44748.3702 1472.317,-44755.3702"/>
</g>
<!-- scalaz.Equal[IsoSpec.this.IntWrapper \/ Boolean] -->
<g id="node638" class="node">
<title>scalaz.Equal[IsoSpec.this.IntWrapper \/ Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-17381.8701" rx="200.2225" ry="26.7407"/>
<text text-anchor="start" x="5728.5954" y="-17385.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[IsoSpec.this.IntWrapper / Boolean]</text>
<text text-anchor="middle" x="5862.0954" y="-17370.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- scalaz.Equal[IsoSpec.this.IntWrapper \/ Boolean]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge385" class="edge">
<title>scalaz.Equal[IsoSpec.this.IntWrapper \/ Boolean]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M6031.1586,-17367.4137C6189.1063,-17358.083 6408.9737,-17357.2026 6466.6717,-17417.8701 6483.1163,-17435.161 6462.5104,-18256.3395 6474.6717,-18276.8701 6580.7662,-18455.9768 6827.383,-18542.578 6959.2276,-18577.3748"/>
<polygon fill="#000000" stroke="#000000" points="6958.7351,-18580.863 6969.2939,-18579.9896 6960.4951,-18574.0878 6958.7351,-18580.863"/>
</g>
<!-- scalaz.Equal[IsoSpec.this.IntWrapper \/ Boolean]&#45;&gt;scalaz.Equal[IsoSpec.this.IntWrapper] -->
<g id="edge799" class="edge">
<title>scalaz.Equal[IsoSpec.this.IntWrapper \/ Boolean]&#45;&gt;scalaz.Equal[IsoSpec.this.IntWrapper]</title>
<path fill="none" stroke="#000000" d="M6037.223,-17368.789C6193.2267,-17361.2129 6405.9525,-17362.2499 6466.6717,-17417.8701 6484.5622,-17434.2582 6457.5947,-17454.6359 6474.6717,-17471.8701 6589.2762,-17587.5293 6787.9201,-17592.7789 6918.1633,-17581.0839"/>
<polygon fill="#000000" stroke="#000000" points="6918.5736,-17584.5608 6928.2006,-17580.137 6917.9161,-17577.5918 6918.5736,-17584.5608"/>
</g>
<!-- scalaz.Order[IsoSpec.this.IntWrapper] -->
<g id="node1242" class="node">
<title>scalaz.Order[IsoSpec.this.IntWrapper]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-17435.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="6940.514" y="-17439.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[IsoSpec.this.IntWrapper]</text>
<text text-anchor="middle" x="7046.014" y="-17424.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scalaz.Equal[IsoSpec.this.IntWrapper \/ Boolean]&#45;&gt;scalaz.Order[IsoSpec.this.IntWrapper] -->
<g id="edge1354" class="edge">
<title>scalaz.Equal[IsoSpec.this.IntWrapper \/ Boolean]&#45;&gt;scalaz.Order[IsoSpec.this.IntWrapper]</title>
<path fill="none" stroke="#000000" d="M6051.6558,-17390.5161C6280.8979,-17400.9722 6663.0264,-17418.4015 6880.7668,-17428.3329"/>
<polygon fill="#000000" stroke="#000000" points="6880.8608,-17431.8408 6891.0099,-17428.8001 6881.1798,-17424.848 6880.8608,-17431.8408"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Stream[Int])] -->
<g id="node639" class="node">
<title>org.scalacheck.Arbitrary[(Int, Stream[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-12715.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="4467.253" y="-12719.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Stream[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-12704.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Stream[Int])]&#45;&gt;org.scalacheck.Arbitrary[Stream[Int]] -->
<g id="edge684" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Stream[Int])]&#45;&gt;org.scalacheck.Arbitrary[Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4661.5043,-12740.3628C4800.4042,-12780.3039 5096.7908,-12839.9778 5249.5191,-12679.8701 5271.2621,-12657.0766 5235.8361,-11568.7206 5257.5191,-11545.8701 5317.5401,-11482.6173 5553.5612,-11486.2143 5712.3329,-11496.5899"/>
<polygon fill="#000000" stroke="#000000" points="5712.465,-11500.1065 5722.6765,-11497.2825 5712.9327,-11493.1221 5712.465,-11500.1065"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Stream[Int])]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge338" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Stream[Int])]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4753.0998,-12725.8474C4888.8903,-12733.7197 5085.5321,-12744.5566 5257.5191,-12751.8701 5324.6667,-12754.7254 6419.0153,-12742.4799 6466.6717,-12789.8701 6483.7014,-12806.8046 6462.1056,-12985.4034 6474.6717,-13005.8701 6580.7083,-13178.574 6817.0007,-13264.6141 6950.1043,-13300.8399"/>
<polygon fill="#000000" stroke="#000000" points="6949.3343,-13304.257 6959.8996,-13303.4666 6951.1473,-13297.4959 6949.3343,-13304.257"/>
</g>
<!-- scala.reflect.ClassTag[(Int, Stream[Int])] -->
<g id="node1341" class="node">
<title>scala.reflect.ClassTag[(Int, Stream[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-12715.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="5750.5954" y="-12719.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Stream[Int])]</text>
<text text-anchor="middle" x="5862.0954" y="-12704.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Stream[Int])]&#45;&gt;scala.reflect.ClassTag[(Int, Stream[Int])] -->
<g id="edge910" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Stream[Int])]&#45;&gt;scala.reflect.ClassTag[(Int, Stream[Int])]</title>
<path fill="none" stroke="#000000" d="M4766.0068,-12715.8701C5009.0121,-12715.8701 5439.7958,-12715.8701 5682.6447,-12715.8701"/>
<polygon fill="#000000" stroke="#000000" points="5682.9918,-12719.3702 5692.9918,-12715.8701 5682.9918,-12712.3702 5682.9918,-12719.3702"/>
</g>
<!-- monocle.function.Each[scalaz.NonEmptyList[Int],Int] -->
<g id="node641" class="node">
<title>monocle.function.Each[scalaz.NonEmptyList[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-44823.8701" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="504.1596" y="-44827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[scalaz.NonEmptyList[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-44812.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- shapeless.Generic.Aux[scalaz.NonEmptyList[Int],SGen] -->
<g id="node901" class="node">
<title>shapeless.Generic.Aux[scalaz.NonEmptyList[Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-44823.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="1707.034" y="-44827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scalaz.NonEmptyList[Int],SGen]</text>
<text text-anchor="middle" x="1862.034" y="-44812.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- monocle.function.Each[scalaz.NonEmptyList[Int],Int]&#45;&gt;shapeless.Generic.Aux[scalaz.NonEmptyList[Int],SGen] -->
<g id="edge1324" class="edge">
<title>monocle.function.Each[scalaz.NonEmptyList[Int],Int]&#45;&gt;shapeless.Generic.Aux[scalaz.NonEmptyList[Int],SGen]</title>
<path fill="none" stroke="#000000" d="M874.1256,-44823.8701C1085.607,-44823.8701 1403.4614,-44823.8701 1621.166,-44823.8701"/>
<polygon fill="#000000" stroke="#000000" points="1621.4563,-44827.3702 1631.4563,-44823.8701 1621.4563,-44820.3702 1621.4563,-44827.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Boolean \/ IsoSpec.this.IntWrapper] -->
<g id="node642" class="node">
<title>org.scalacheck.Arbitrary[Boolean \/ IsoSpec.this.IntWrapper]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-5023.8701" rx="246.5607" ry="26.7407"/>
<text text-anchor="start" x="5695.5954" y="-5027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Boolean / IsoSpec.this.IntWrapper]</text>
<text text-anchor="middle" x="5862.0954" y="-5012.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 24ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Boolean \/ IsoSpec.this.IntWrapper]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge265" class="edge">
<title>org.scalacheck.Arbitrary[Boolean \/ IsoSpec.this.IntWrapper]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6060.0985,-5007.7889C6214.8569,-5000.1064 6412.5307,-5002.7125 6466.6717,-5059.8701 6481.1325,-5075.1365 6460.2373,-6558.5787 6474.6717,-6573.8701 6531.2342,-6633.7907 6754.2219,-6631.1916 6904.3127,-6621.9239"/>
<polygon fill="#000000" stroke="#000000" points="6904.7819,-6625.4013 6914.5402,-6621.2752 6904.3387,-6618.4153 6904.7819,-6625.4013"/>
</g>
<!-- org.scalacheck.Arbitrary[Boolean \/ IsoSpec.this.IntWrapper]&#45;&gt;org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper] -->
<g id="edge1076" class="edge">
<title>org.scalacheck.Arbitrary[Boolean \/ IsoSpec.this.IntWrapper]&#45;&gt;org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper]</title>
<path fill="none" stroke="#000000" d="M6109.2024,-5023.8701C6321.6565,-5023.8701 6625.105,-5023.8701 6828.4988,-5023.8701"/>
<polygon fill="#000000" stroke="#000000" points="6828.7133,-5027.3702 6838.7133,-5023.8701 6828.7132,-5020.3702 6828.7133,-5027.3702"/>
</g>
<!-- scala.reflect.ClassTag[Boolean \/ IsoSpec.this.IntWrapper] -->
<g id="node754" class="node">
<title>scala.reflect.ClassTag[Boolean \/ IsoSpec.this.IntWrapper]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-5095.8701" rx="236.3475" ry="26.7407"/>
<text text-anchor="start" x="6887.014" y="-5099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Boolean / IsoSpec.this.IntWrapper]</text>
<text text-anchor="middle" x="7046.014" y="-5084.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Boolean \/ IsoSpec.this.IntWrapper]&#45;&gt;scala.reflect.ClassTag[Boolean \/ IsoSpec.this.IntWrapper] -->
<g id="edge907" class="edge">
<title>org.scalacheck.Arbitrary[Boolean \/ IsoSpec.this.IntWrapper]&#45;&gt;scala.reflect.ClassTag[Boolean \/ IsoSpec.this.IntWrapper]</title>
<path fill="none" stroke="#000000" d="M6079.3175,-5036.6686C6194.4395,-5043.4859 6338.2355,-5052.0557 6466.6717,-5059.8701 6586.4059,-5067.155 6720.0484,-5075.4486 6828.7784,-5082.2378"/>
<polygon fill="#000000" stroke="#000000" points="6828.6888,-5085.7389 6838.8875,-5082.8692 6829.1252,-5078.7526 6828.6888,-5085.7389"/>
</g>
<!-- scala.collection.immutable.Stream[Int] =&gt; ?{def #::: ?} -->
<g id="node643" class="node">
<title>scala.collection.immutable.Stream[Int] =&gt; ?{def #::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-44895.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="499.1596" y="-44899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Stream[Int] =&gt; ?{def #::: ?}</text>
<text text-anchor="middle" x="652.6596" y="-44884.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int,),(Int,)] -->
<g id="node1089" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int,),(Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-36651.8701" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="2988.8678" y="-36655.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int,),(Int,)]</text>
<text text-anchor="middle" x="3166.8678" y="-36640.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[(Int,),(Int,)]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int,),(Int,)] -->
<g id="edge882" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[(Int,),(Int,)]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int,),(Int,)]</title>
<path fill="none" stroke="#000000" d="M2045.1835,-36667.3435C2266.5826,-36664.2894 2641.1094,-36659.1228 2895.9381,-36655.6075"/>
<polygon fill="#000000" stroke="#000000" points="2896.136,-36659.1052 2906.0867,-36655.4675 2896.0394,-36652.1059 2896.136,-36659.1052"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P) -->
<g id="node645" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-44967.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="500.6596" y="-44971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-44956.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[monocle.function.MMap[Int,String]] -->
<g id="node646" class="node">
<title>scala.reflect.ClassTag[monocle.function.MMap[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-12051.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="5698.0954" y="-12055.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[monocle.function.MMap[Int,String]]</text>
<text text-anchor="middle" x="5862.0954" y="-12040.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- scala.reflect.ClassTag[((Int, Char, Boolean, String, Long)) =&gt; (Int, Char, Boolean, String, Long)] -->
<g id="node647" class="node">
<title>scala.reflect.ClassTag[((Int, Char, Boolean, String, Long)) =&gt; (Int, Char, Boolean, String, Long)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-5853.8701" rx="389.7317" ry="26.7407"/>
<text text-anchor="start" x="5594.5954" y="-5857.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Int, Char, Boolean, String, Long)) =&gt; (Int, Char, Boolean, String, Long)]</text>
<text text-anchor="middle" x="5862.0954" y="-5842.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Monoid[M] -->
<g id="node648" class="node">
<title>scalaz.Monoid[M]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-45039.8701" rx="84.2917" ry="26.7407"/>
<text text-anchor="start" x="601.1596" y="-45043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Monoid[M]</text>
<text text-anchor="middle" x="652.6596" y="-45028.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- org.scalacheck.Cogen[(Long, String)] -->
<g id="node649" class="node">
<title>org.scalacheck.Cogen[(Long, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-5167.8701" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="5758.5954" y="-5171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Long, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-5156.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Cogen[(Long, String)]&#45;&gt;org.scalacheck.Cogen[Long] -->
<g id="edge1019" class="edge">
<title>org.scalacheck.Cogen[(Long, String)]&#45;&gt;org.scalacheck.Cogen[Long]</title>
<path fill="none" stroke="#000000" d="M6001.7679,-5180.3886C6160.3498,-5191.1599 6405.094,-5196.1931 6466.6717,-5131.8701 6486.0368,-5111.6416 6458.6046,-4650.8057 6474.6717,-4627.8701 6575.0277,-4484.6124 6782.8475,-4435.4556 6918.247,-4418.6135"/>
<polygon fill="#000000" stroke="#000000" points="6918.7622,-4422.0769 6928.2732,-4417.4088 6917.9271,-4415.1269 6918.7622,-4422.0769"/>
</g>
<!-- org.scalacheck.Cogen[(Long, String)]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge572" class="edge">
<title>org.scalacheck.Cogen[(Long, String)]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M6001.7993,-5155.3214C6160.4117,-5144.521 6405.1855,-5139.4596 6466.6717,-5203.8701 6478.4495,-5216.208 6465.264,-5803.642 6474.6717,-5817.8701 6575.2972,-5970.0549 6790.5275,-6031.0545 6926.2006,-6054.9892"/>
<polygon fill="#000000" stroke="#000000" points="6925.7848,-6058.4691 6936.2338,-6056.7173 6926.973,-6051.5706 6925.7848,-6058.4691"/>
</g>
<!-- shapeless.ops.hlist.Prepend[Long :: shapeless.HNil,Double :: shapeless.HNil] -->
<g id="node651" class="node">
<title>shapeless.ops.hlist.Prepend[Long :: shapeless.HNil,Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-33726.8701" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="6834.014" y="-33730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Prepend[Long :: shapeless.HNil,Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="7046.014" y="-33715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 13ms</text>
</g>
<!-- shapeless.ops.hlist.Prepend[shapeless.HNil,Double :: shapeless.HNil] -->
<g id="node733" class="node">
<title>shapeless.ops.hlist.Prepend[shapeless.HNil,Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-33726.8701" rx="280.0286" ry="26.7407"/>
<text text-anchor="start" x="8006.6985" y="-33730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Prepend[shapeless.HNil,Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="8196.6985" y="-33715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Prepend[Long :: shapeless.HNil,Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Prepend[shapeless.HNil,Double :: shapeless.HNil] -->
<g id="edge728" class="edge">
<title>shapeless.ops.hlist.Prepend[Long :: shapeless.HNil,Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Prepend[shapeless.HNil,Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M7357.4058,-33726.8701C7528.2983,-33726.8701 7738.8568,-33726.8701 7906.3229,-33726.8701"/>
<polygon fill="#000000" stroke="#000000" points="7906.5316,-33730.3702 7916.5315,-33726.8701 7906.5315,-33723.3702 7906.5316,-33730.3702"/>
</g>
<!-- scalaz.Equal[A4] -->
<g id="node652" class="node">
<title>scalaz.Equal[A4]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-45111.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="605.6596" y="-45115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[A4]</text>
<text text-anchor="middle" x="652.6596" y="-45100.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((String, Char)) =&gt; (String, Char)] -->
<g id="node653" class="node">
<title>org.scalacheck.Arbitrary[((String, Char)) =&gt; (String, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-4292.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="4422.253" y="-4296.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((String, Char)) =&gt; (String, Char)]</text>
<text text-anchor="middle" x="4586.253" y="-4281.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((String, Char)) =&gt; (String, Char)]&#45;&gt;org.scalacheck.Arbitrary[(String, Char)] -->
<g id="edge948" class="edge">
<title>org.scalacheck.Arbitrary[((String, Char)) =&gt; (String, Char)]&#45;&gt;org.scalacheck.Arbitrary[(String, Char)]</title>
<path fill="none" stroke="#000000" d="M4665.588,-4267.4216C4805.7652,-4227.9889 5096.8299,-4171.9272 5249.5191,-4328.8701 5272.6941,-4352.6907 5234.4067,-4603.9886 5257.5191,-4627.8701 5317.2209,-4689.5583 5546.7351,-4687.1975 5705.1418,-4677.397"/>
<polygon fill="#000000" stroke="#000000" points="5705.7123,-4680.8679 5715.4704,-4676.7413 5705.2687,-4673.882 5705.7123,-4680.8679"/>
</g>
<!-- scala.reflect.ClassTag[((String, Char)) =&gt; (String, Char)] -->
<g id="node1125" class="node">
<title>scala.reflect.ClassTag[((String, Char)) =&gt; (String, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-4265.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="5705.5954" y="-4269.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((String, Char)) =&gt; (String, Char)]</text>
<text text-anchor="middle" x="5862.0954" y="-4254.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((String, Char)) =&gt; (String, Char)]&#45;&gt;scala.reflect.ClassTag[((String, Char)) =&gt; (String, Char)] -->
<g id="edge1147" class="edge">
<title>org.scalacheck.Arbitrary[((String, Char)) =&gt; (String, Char)]&#45;&gt;scala.reflect.ClassTag[((String, Char)) =&gt; (String, Char)]</title>
<path fill="none" stroke="#000000" d="M4825.4804,-4287.8074C5053.5242,-4282.9814 5395.0271,-4275.7544 5623.0204,-4270.9295"/>
<polygon fill="#000000" stroke="#000000" points="5623.1889,-4274.4268 5633.1125,-4270.7159 5623.0407,-4267.4284 5623.1889,-4274.4268"/>
</g>
<!-- org.scalacheck.Cogen[(String, Char)] -->
<g id="node1364" class="node">
<title>org.scalacheck.Cogen[(String, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-4337.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="5759.5954" y="-4341.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(String, Char)]</text>
<text text-anchor="middle" x="5862.0954" y="-4326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((String, Char)) =&gt; (String, Char)]&#45;&gt;org.scalacheck.Cogen[(String, Char)] -->
<g id="edge1350" class="edge">
<title>org.scalacheck.Arbitrary[((String, Char)) =&gt; (String, Char)]&#45;&gt;org.scalacheck.Cogen[(String, Char)]</title>
<path fill="none" stroke="#000000" d="M4818.0381,-4301.0453C5072.5772,-4310.0231 5474.7967,-4324.2097 5698.4166,-4332.097"/>
<polygon fill="#000000" stroke="#000000" points="5698.4823,-4335.6014 5708.5995,-4332.4561 5698.7291,-4328.6057 5698.4823,-4335.6014"/>
</g>
<!-- org.scalacheck.Arbitrary[Map[Int,Char]] -->
<g id="node654" class="node">
<title>org.scalacheck.Arbitrary[Map[Int,Char]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-7593.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="5750.5954" y="-7597.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Map[Int,Char]]</text>
<text text-anchor="middle" x="5862.0954" y="-7582.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Map[Int,Char]]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge1267" class="edge">
<title>org.scalacheck.Arbitrary[Map[Int,Char]]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M6009.7092,-7607.0511C6168.5353,-7617.5775 6406.504,-7621.5389 6466.6717,-7557.8701 6479.6168,-7544.1717 6461.7503,-4857.5907 6474.6717,-4843.8701 6532.538,-4782.4247 6765.1174,-4786.6664 6915.1054,-4796.4804"/>
<polygon fill="#000000" stroke="#000000" points="6915.0984,-4799.9877 6925.3103,-4797.165 6915.567,-4793.0034 6915.0984,-4799.9877"/>
</g>
<!-- org.scalacheck.Arbitrary[Map[Int,Char]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1027" class="edge">
<title>org.scalacheck.Arbitrary[Map[Int,Char]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6009.7261,-7580.6729C6168.5678,-7570.132 6406.5504,-7566.1574 6466.6717,-7629.8701 6479.4829,-7643.4465 6465.1889,-12989.7914 6474.6717,-13005.8701 6577.4829,-13180.1922 6814.4884,-13265.5028 6948.7096,-13301.2022"/>
<polygon fill="#000000" stroke="#000000" points="6948.029,-13304.6419 6958.5895,-13303.7898 6949.8025,-13297.8703 6948.029,-13304.6419"/>
</g>
<!-- scalaz.Split[monocle.Lens] -->
<g id="node655" class="node">
<title>scalaz.Split[monocle.Lens]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-45183.8701" rx="116.8455" ry="26.7407"/>
<text text-anchor="start" x="578.1596" y="-45187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Split[monocle.Lens]</text>
<text text-anchor="middle" x="652.6596" y="-45172.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[(String, Int)] -->
<g id="node656" class="node">
<title>scala.reflect.ClassTag[(String, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-15031.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="6949.514" y="-15035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(String, Int)]</text>
<text text-anchor="middle" x="7046.014" y="-15020.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Boolean, String)) =&gt; (Boolean, String)] -->
<g id="node657" class="node">
<title>org.scalacheck.Arbitrary[((Boolean, String)) =&gt; (Boolean, String)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-5997.8701" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="4403.253" y="-6001.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Boolean, String)) =&gt; (Boolean, String)]</text>
<text text-anchor="middle" x="4586.253" y="-5986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 35ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, String)] -->
<g id="node933" class="node">
<title>org.scalacheck.Arbitrary[(Boolean, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-6357.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="5743.0954" y="-6361.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Boolean, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-6346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 38ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Boolean, String)) =&gt; (Boolean, String)]&#45;&gt;org.scalacheck.Arbitrary[(Boolean, String)] -->
<g id="edge1367" class="edge">
<title>org.scalacheck.Arbitrary[((Boolean, String)) =&gt; (Boolean, String)]&#45;&gt;org.scalacheck.Arbitrary[(Boolean, String)]</title>
<path fill="none" stroke="#000000" d="M4725.6369,-5974.8427C4879.0659,-5958.3595 5120.9665,-5960.2423 5249.5191,-6105.8701 5265.4129,-6123.875 5240.7287,-6304.6983 5257.5191,-6321.8701 5316.3231,-6382.0095 5537.753,-6381.0409 5695.576,-6371.855"/>
<polygon fill="#000000" stroke="#000000" points="5696.1041,-6375.3297 5705.8771,-6371.2386 5695.6859,-6368.3422 5696.1041,-6375.3297"/>
</g>
<!-- org.scalacheck.Cogen[(Boolean, String)] -->
<g id="node1270" class="node">
<title>org.scalacheck.Cogen[(Boolean, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-5997.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="5750.5954" y="-6001.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Boolean, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-5986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Boolean, String)) =&gt; (Boolean, String)]&#45;&gt;org.scalacheck.Cogen[(Boolean, String)] -->
<g id="edge1023" class="edge">
<title>org.scalacheck.Arbitrary[((Boolean, String)) =&gt; (Boolean, String)]&#45;&gt;org.scalacheck.Cogen[(Boolean, String)]</title>
<path fill="none" stroke="#000000" d="M4856.4363,-5997.8701C5105.358,-5997.8701 5467.7245,-5997.8701 5682.719,-5997.8701"/>
<polygon fill="#000000" stroke="#000000" points="5682.8444,-6001.3702 5692.8444,-5997.8701 5682.8443,-5994.3702 5682.8444,-6001.3702"/>
</g>
<!-- scala.reflect.ClassTag[((Boolean, String)) =&gt; (Boolean, String)] -->
<g id="node1448" class="node">
<title>scala.reflect.ClassTag[((Boolean, String)) =&gt; (Boolean, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-5925.8701" rx="259.5164" ry="26.7407"/>
<text text-anchor="start" x="5686.5954" y="-5929.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Boolean, String)) =&gt; (Boolean, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-5914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Boolean, String)) =&gt; (Boolean, String)]&#45;&gt;scala.reflect.ClassTag[((Boolean, String)) =&gt; (Boolean, String)] -->
<g id="edge488" class="edge">
<title>org.scalacheck.Arbitrary[((Boolean, String)) =&gt; (Boolean, String)]&#45;&gt;scala.reflect.ClassTag[((Boolean, String)) =&gt; (Boolean, String)]</title>
<path fill="none" stroke="#000000" d="M4821.3769,-5984.6012C5049.6871,-5971.7169 5394.4892,-5952.2586 5623.8529,-5939.3149"/>
<polygon fill="#000000" stroke="#000000" points="5624.218,-5942.7999 5634.0049,-5938.742 5623.8236,-5935.811 5624.218,-5942.7999"/>
</g>
<!-- org.scalacheck.Arbitrary[Int =&gt; Boolean] -->
<g id="node658" class="node">
<title>org.scalacheck.Arbitrary[Int =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-9253.8701" rx="172.5681" ry="26.7407"/>
<text text-anchor="start" x="5748.0954" y="-9257.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Int =&gt; Boolean]</text>
<text text-anchor="middle" x="5862.0954" y="-9242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 79ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int =&gt; Boolean]&#45;&gt;scala.reflect.ClassTag[Int =&gt; Boolean] -->
<g id="edge1094" class="edge">
<title>org.scalacheck.Arbitrary[Int =&gt; Boolean]&#45;&gt;scala.reflect.ClassTag[Int =&gt; Boolean]</title>
<path fill="none" stroke="#000000" d="M6034.8809,-9253.8701C6259.4291,-9253.8701 6649.2487,-9253.8701 6873.6098,-9253.8701"/>
<polygon fill="#000000" stroke="#000000" points="6873.8362,-9257.3702 6883.8362,-9253.8701 6873.8361,-9250.3702 6873.8362,-9257.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Int =&gt; Boolean]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge250" class="edge">
<title>org.scalacheck.Arbitrary[Int =&gt; Boolean]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6012.2159,-9267.2146C6171.0261,-9277.6138 6406.8148,-9281.1996 6466.6717,-9217.8701 6478.9406,-9204.8894 6462.4253,-6658.8719 6474.6717,-6645.8701 6531.169,-6585.888 6754.176,-6588.5053 6904.2884,-6597.7934"/>
<polygon fill="#000000" stroke="#000000" points="6904.3156,-6601.3021 6914.5175,-6598.4435 6904.7596,-6594.3162 6904.3156,-6601.3021"/>
</g>
<!-- org.scalacheck.Arbitrary[Int =&gt; Boolean]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge1210" class="edge">
<title>org.scalacheck.Arbitrary[Int =&gt; Boolean]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M6012.1638,-9240.5748C6170.9276,-9230.2196 6406.6751,-9226.6728 6466.6717,-9289.8701 6487.0023,-9311.2852 6457.5515,-10328.811 6474.6717,-10352.8701 6576.5627,-10496.0569 6788.542,-10538.8213 6923.6918,-10551.2467"/>
<polygon fill="#000000" stroke="#000000" points="6923.4233,-10554.7365 6933.6909,-10552.1236 6924.0349,-10547.7632 6923.4233,-10554.7365"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.Binary] -->
<g id="node660" class="node">
<title>org.scalacheck.Arbitrary[monocle.Binary]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-16805.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="5746.0954" y="-16809.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.Binary]</text>
<text text-anchor="middle" x="5862.0954" y="-16794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.Binary]&#45;&gt;scala.reflect.ClassTag[monocle.Binary] -->
<g id="edge797" class="edge">
<title>org.scalacheck.Arbitrary[monocle.Binary]&#45;&gt;scala.reflect.ClassTag[monocle.Binary]</title>
<path fill="none" stroke="#000000" d="M6037.7425,-16805.8701C6261.7625,-16805.8701 6646.8768,-16805.8701 6870.725,-16805.8701"/>
<polygon fill="#000000" stroke="#000000" points="6870.9307,-16809.3702 6880.9307,-16805.8701 6870.9307,-16802.3702 6870.9307,-16809.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Stream[Int] =&gt; Stream[Int]] -->
<g id="node661" class="node">
<title>org.scalacheck.Arbitrary[Stream[Int] =&gt; Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-10692.8701" rx="219.4064" ry="26.7407"/>
<text text-anchor="start" x="4439.253" y="-10696.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Stream[Int] =&gt; Stream[Int]]</text>
<text text-anchor="middle" x="4586.253" y="-10681.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 50ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Stream[Int] =&gt; Stream[Int]]&#45;&gt;org.scalacheck.Arbitrary[Stream[Int]] -->
<g id="edge731" class="edge">
<title>org.scalacheck.Arbitrary[Stream[Int] =&gt; Stream[Int]]&#45;&gt;org.scalacheck.Arbitrary[Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4761.5245,-10676.6575C4935.3223,-10664.9217 5184.771,-10661.2433 5249.5191,-10728.8701 5263.8315,-10743.8188 5243.246,-11458.8838 5257.5191,-11473.8701 5317.6121,-11536.9656 5553.2952,-11533.4531 5712.0249,-11523.1319"/>
<polygon fill="#000000" stroke="#000000" points="5712.621,-11526.6001 5722.3661,-11522.4429 5712.1555,-11519.6155 5712.621,-11526.6001"/>
</g>
<!-- org.scalacheck.Arbitrary[Stream[Int] =&gt; Stream[Int]]&#45;&gt;scala.reflect.ClassTag[Stream[Int] =&gt; Stream[Int]] -->
<g id="edge1294" class="edge">
<title>org.scalacheck.Arbitrary[Stream[Int] =&gt; Stream[Int]]&#45;&gt;scala.reflect.ClassTag[Stream[Int] =&gt; Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4770.2936,-10678.1787C4941.8049,-10668.7442 5181.0928,-10667.8542 5249.5191,-10728.8701 5265.3341,-10742.9723 5241.7412,-10761.7263 5257.5191,-10775.8701 5316.5583,-10828.7944 5515.8585,-10831.8556 5669.6697,-10825.4363"/>
<polygon fill="#000000" stroke="#000000" points="5669.8942,-10828.93 5679.7332,-10825.0002 5669.591,-10821.9365 5669.8942,-10828.93"/>
</g>
<!-- org.scalacheck.Arbitrary[Stream[Int] =&gt; Stream[Int]]&#45;&gt;org.scalacheck.Cogen[Stream[Int]] -->
<g id="edge569" class="edge">
<title>org.scalacheck.Arbitrary[Stream[Int] =&gt; Stream[Int]]&#45;&gt;org.scalacheck.Cogen[Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4763.1116,-10676.9338C4936.4738,-10665.6394 5183.9798,-10662.5154 5249.5191,-10728.8701 5264.4455,-10743.9822 5243.1117,-10904.2624 5257.5191,-10919.8701 5383.9975,-11056.885 5623.0876,-11040.2542 5759.6416,-11016.6359"/>
<polygon fill="#000000" stroke="#000000" points="5760.4626,-11020.045 5769.6974,-11014.852 5759.2397,-11013.1526 5760.4626,-11020.045"/>
</g>
<!-- org.scalacheck.Arbitrary[(monocle.Example, Boolean)] -->
<g id="node662" class="node">
<title>org.scalacheck.Arbitrary[(monocle.Example, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-3867.8701" rx="226.9626" ry="26.7407"/>
<text text-anchor="start" x="5709.5954" y="-3871.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(monocle.Example, Boolean)]</text>
<text text-anchor="middle" x="5862.0954" y="-3856.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(monocle.Example, Boolean)]&#45;&gt;scala.reflect.ClassTag[(monocle.Example, Boolean)] -->
<g id="edge431" class="edge">
<title>org.scalacheck.Arbitrary[(monocle.Example, Boolean)]&#45;&gt;scala.reflect.ClassTag[(monocle.Example, Boolean)]</title>
<path fill="none" stroke="#000000" d="M6089.3159,-3867.8701C6299.2645,-3867.8701 6609.516,-3867.8701 6819.3023,-3867.8701"/>
<polygon fill="#000000" stroke="#000000" points="6819.5278,-3871.3702 6829.5277,-3867.8701 6819.5277,-3864.3702 6819.5278,-3871.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(monocle.Example, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge546" class="edge">
<title>org.scalacheck.Arbitrary[(monocle.Example, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6047.8247,-3852.3953C6204.248,-3843.9553 6411.1516,-3845.1222 6466.6717,-3903.8701 6479.4073,-3917.346 6461.9594,-6560.3721 6474.6717,-6573.8701 6531.1656,-6633.8553 6754.1736,-6631.2371 6904.2871,-6621.948"/>
<polygon fill="#000000" stroke="#000000" points="6904.7585,-6625.4252 6914.5163,-6621.2978 6904.3144,-6618.4393 6904.7585,-6625.4252"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.Example] -->
<g id="node874" class="node">
<title>org.scalacheck.Arbitrary[monocle.Example]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-3795.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="6924.014" y="-3799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.Example]</text>
<text text-anchor="middle" x="7046.014" y="-3784.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 68ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(monocle.Example, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[monocle.Example] -->
<g id="edge982" class="edge">
<title>org.scalacheck.Arbitrary[(monocle.Example, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[monocle.Example]</title>
<path fill="none" stroke="#000000" d="M6065.3531,-3855.8982C6182.6634,-3848.9558 6332.9878,-3840.0037 6466.6717,-3831.8701 6600.6844,-3823.7164 6752.1206,-3814.2991 6866.5486,-3807.1419"/>
<polygon fill="#000000" stroke="#000000" points="6867.0447,-3810.6178 6876.8066,-3806.5001 6866.6076,-3803.6314 6867.0447,-3810.6178"/>
</g>
<!-- (=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P) -->
<g id="node665" class="node">
<title>(=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-45255.8701" rx="347.379" ry="26.7407"/>
<text text-anchor="start" x="415.1596" y="-45259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-45244.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((scalaz.IList[Int], Int)) =&gt; (scalaz.IList[Int], Int)] -->
<g id="node666" class="node">
<title>org.scalacheck.Arbitrary[((scalaz.IList[Int], Int)) =&gt; (scalaz.IList[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-14650.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="2960.8678" y="-14654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((scalaz.IList[Int], Int)) =&gt; (scalaz.IList[Int], Int)]</text>
<text text-anchor="middle" x="3166.8678" y="-14639.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 17ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((scalaz.IList[Int], Int)) =&gt; (scalaz.IList[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[(scalaz.IList[Int], Int)] -->
<g id="edge490" class="edge">
<title>org.scalacheck.Arbitrary[((scalaz.IList[Int], Int)) =&gt; (scalaz.IList[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[(scalaz.IList[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M3429.6875,-14664.2019C3708.3075,-14678.3352 4141.8503,-14700.3272 4391.4316,-14712.9875"/>
<polygon fill="#000000" stroke="#000000" points="4391.5387,-14716.4974 4401.7032,-14713.5086 4391.8934,-14709.5063 4391.5387,-14716.4974"/>
</g>
<!-- org.scalacheck.Cogen[(scalaz.IList[Int], Int)] -->
<g id="node1082" class="node">
<title>org.scalacheck.Cogen[(scalaz.IList[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-12060.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="4462.753" y="-12064.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(scalaz.IList[Int], Int)]</text>
<text text-anchor="middle" x="4586.253" y="-12049.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((scalaz.IList[Int], Int)) =&gt; (scalaz.IList[Int], Int)]&#45;&gt;org.scalacheck.Cogen[(scalaz.IList[Int], Int)] -->
<g id="edge159" class="edge">
<title>org.scalacheck.Arbitrary[((scalaz.IList[Int], Int)) =&gt; (scalaz.IList[Int], Int)]&#45;&gt;org.scalacheck.Cogen[(scalaz.IList[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M3193.7367,-14623.8066C3308.9879,-14505.5641 3762.5605,-14017.6586 3914.9868,-13513.8701 3920.6863,-13495.0325 3909.4124,-12111.1204 3922.9868,-12096.8701 3988.8198,-12027.7587 4246.8431,-12032.9733 4420.9794,-12045.2889"/>
<polygon fill="#000000" stroke="#000000" points="4420.7978,-12048.7848 4431.0238,-12046.0136 4421.3017,-12041.8029 4420.7978,-12048.7848"/>
</g>
<!-- scala.reflect.ClassTag[((scalaz.IList[Int], Int)) =&gt; (scalaz.IList[Int], Int)] -->
<g id="node1285" class="node">
<title>scala.reflect.ClassTag[((scalaz.IList[Int], Int)) =&gt; (scalaz.IList[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-14650.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="4387.753" y="-14654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((scalaz.IList[Int], Int)) =&gt; (scalaz.IList[Int], Int)]</text>
<text text-anchor="middle" x="4586.253" y="-14639.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((scalaz.IList[Int], Int)) =&gt; (scalaz.IList[Int], Int)]&#45;&gt;scala.reflect.ClassTag[((scalaz.IList[Int], Int)) =&gt; (scalaz.IList[Int], Int)] -->
<g id="edge935" class="edge">
<title>org.scalacheck.Arbitrary[((scalaz.IList[Int], Int)) =&gt; (scalaz.IList[Int], Int)]&#45;&gt;scala.reflect.ClassTag[((scalaz.IList[Int], Int)) =&gt; (scalaz.IList[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M3469.6206,-14650.8701C3709.7123,-14650.8701 4043.6545,-14650.8701 4283.6953,-14650.8701"/>
<polygon fill="#000000" stroke="#000000" points="4283.9802,-14654.3702 4293.9801,-14650.8701 4283.9801,-14647.3702 4283.9802,-14654.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Int)]&#45;&gt;scala.reflect.ClassTag[(String, Int)] -->
<g id="edge687" class="edge">
<title>org.scalacheck.Arbitrary[(String, Int)]&#45;&gt;scala.reflect.ClassTag[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M6020.5355,-15031.8701C6247.0378,-15031.8701 6660.9893,-15031.8701 6887.5209,-15031.8701"/>
<polygon fill="#000000" stroke="#000000" points="6887.8317,-15035.3702 6897.8316,-15031.8701 6887.8316,-15028.3702 6887.8317,-15035.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Int)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge688" class="edge">
<title>org.scalacheck.Arbitrary[(String, Int)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6001.9308,-15044.5434C6160.6707,-15055.4649 6405.5682,-15060.6437 6466.6717,-14995.8701 6482.8403,-14978.7303 6459.5346,-8227.9272 6474.6717,-8209.8701 6583.7329,-8079.7701 6796.7186,-8076.7378 6929.593,-8089.8686"/>
<polygon fill="#000000" stroke="#000000" points="6929.5044,-8093.3781 6939.8116,-8090.9258 6930.2249,-8086.4152 6929.5044,-8093.3781"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge759" class="edge">
<title>org.scalacheck.Arbitrary[(String, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6002.2289,-15044.5171C6160.9269,-15055.373 6405.4581,-15060.4492 6466.6717,-14995.8701 6479.4562,-14982.3827 6465.3858,-13673.9674 6474.6717,-13657.8701 6578.65,-13477.6213 6821.1391,-13384.8041 6954.3457,-13345.8808"/>
<polygon fill="#000000" stroke="#000000" points="6955.4972,-13349.1915 6964.137,-13343.0594 6953.5589,-13342.4652 6955.4972,-13349.1915"/>
</g>
<!-- scalaz.Equal[scalaz.Cofree[Stream,Int]] -->
<g id="node668" class="node">
<title>scalaz.Equal[scalaz.Cofree[Stream,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-22191.8701" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="5753.0954" y="-22195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Cofree[Stream,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-22180.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[scalaz.Cofree[Stream,Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge573" class="edge">
<title>scalaz.Equal[scalaz.Cofree[Stream,Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M6011.5422,-22203.4907C6170.0748,-22212.1819 6405.9238,-22213.5009 6466.6717,-22150.8701 6483.3155,-22133.7104 6460.178,-21954.8806 6474.6717,-21935.8701 6586.4378,-21789.273 6817.3478,-21759.3888 6948.8244,-21754.8744"/>
<polygon fill="#000000" stroke="#000000" points="6949.0036,-21758.3707 6958.8938,-21754.5716 6948.7931,-21751.3739 6949.0036,-21758.3707"/>
</g>
<!-- monocle.function.Field1[(Int, Char, Boolean, String, Long, Float),Int] -->
<g id="node669" class="node">
<title>monocle.function.Field1[(Int, Char, Boolean, String, Long, Float),Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-45327.8701" rx="283.5996" ry="26.7407"/>
<text text-anchor="start" x="460.1596" y="-45331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field1[(Int, Char, Boolean, String, Long, Float),Int]</text>
<text text-anchor="middle" x="652.6596" y="-45316.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._0.N,Int] -->
<g id="node744" class="node">
<title>shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._0.N,Int]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-45327.8701" rx="365.6484" ry="26.7407"/>
<text text-anchor="start" x="1611.534" y="-45331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._0.N,Int]</text>
<text text-anchor="middle" x="1862.034" y="-45316.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Field1[(Int, Char, Boolean, String, Long, Float),Int]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._0.N,Int] -->
<g id="edge48" class="edge">
<title>monocle.function.Field1[(Int, Char, Boolean, String, Long, Float),Int]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._0.N,Int]</title>
<path fill="none" stroke="#000000" d="M936.5861,-45327.8701C1100.6162,-45327.8701 1308.9651,-45327.8701 1486.4249,-45327.8701"/>
<polygon fill="#000000" stroke="#000000" points="1486.4562,-45331.3702 1496.4561,-45327.8701 1486.4561,-45324.3702 1486.4562,-45331.3702"/>
</g>
<!-- monocle.function.Each[Boolean :: shapeless.HNil,Boolean] -->
<g id="node670" class="node">
<title>monocle.function.Each[Boolean :: shapeless.HNil,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-26805.8701" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="8033.1985" y="-26809.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Boolean :: shapeless.HNil,Boolean]</text>
<text text-anchor="middle" x="8196.6985" y="-26794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- monocle.function.Each[shapeless.HNil,Boolean] -->
<g id="node1221" class="node">
<title>monocle.function.Each[shapeless.HNil,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="9347.3831" cy="-26805.8701" rx="200.2225" ry="26.7407"/>
<text text-anchor="start" x="9213.8831" y="-26809.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[shapeless.HNil,Boolean]</text>
<text text-anchor="middle" x="9347.3831" y="-26794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- monocle.function.Each[Boolean :: shapeless.HNil,Boolean]&#45;&gt;monocle.function.Each[shapeless.HNil,Boolean] -->
<g id="edge686" class="edge">
<title>monocle.function.Each[Boolean :: shapeless.HNil,Boolean]&#45;&gt;monocle.function.Each[shapeless.HNil,Boolean]</title>
<path fill="none" stroke="#000000" d="M8439.3231,-26805.8701C8646.0677,-26805.8701 8940.144,-26805.8701 9137.0524,-26805.8701"/>
<polygon fill="#000000" stroke="#000000" points="9137.2342,-26809.3702 9147.2342,-26805.8701 9137.2342,-26802.3702 9137.2342,-26809.3702"/>
</g>
<!-- org.scalacheck.Cogen[(A, Stream[scalaz.Tree[A]])] -->
<g id="node671" class="node">
<title>org.scalacheck.Cogen[(A, Stream[scalaz.Tree[A]])]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-27229.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="3025.3678" y="-27233.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(A, Stream[scalaz.Tree[A]])]</text>
<text text-anchor="middle" x="3166.8678" y="-27218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 13ms</text>
</g>
<!-- org.scalacheck.Cogen[(A, Stream[scalaz.Tree[A]])]&#45;&gt;org.scalacheck.Cogen[A] -->
<g id="edge11" class="edge">
<title>org.scalacheck.Cogen[(A, Stream[scalaz.Tree[A]])]&#45;&gt;org.scalacheck.Cogen[A]</title>
<path fill="none" stroke="#000000" d="M3370.6163,-27222.6336C4043.2048,-27199.5253 6166.9914,-27133.0533 6466.6717,-27203.8701 6681.889,-27254.7276 6908.2498,-27398.5223 7001.6918,-27462.5016"/>
<polygon fill="#000000" stroke="#000000" points="6999.8284,-27465.468 7010.0501,-27468.255 7003.7974,-27459.7019 6999.8284,-27465.468"/>
</g>
<!-- org.scalacheck.Cogen[(A, Stream[scalaz.Tree[A]])]&#45;&gt;org.scalacheck.Cogen[Stream[scalaz.Tree[A]]] -->
<g id="edge403" class="edge">
<title>org.scalacheck.Cogen[(A, Stream[scalaz.Tree[A]])]&#45;&gt;org.scalacheck.Cogen[Stream[scalaz.Tree[A]]]</title>
<path fill="none" stroke="#000000" d="M3371.7427,-27236.5097C3643.3806,-27245.3131 4119.5944,-27260.7464 4387.9072,-27269.442"/>
<polygon fill="#000000" stroke="#000000" points="4388.0453,-27272.9482 4398.1535,-27269.7741 4388.2722,-27265.9519 4388.0453,-27272.9482"/>
</g>
<!-- scala.reflect.ClassTag[Byte] -->
<g id="node672" class="node">
<title>scala.reflect.ClassTag[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-37587.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="3089.8678" y="-37591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Byte]</text>
<text text-anchor="middle" x="3166.8678" y="-37576.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 5ms</text>
</g>
<!-- scalaz.Unzip[[β$2$]monocle.Getter[String,β$2$]] -->
<g id="node673" class="node">
<title>scalaz.Unzip[[β$2$]monocle.Getter[String,β$2$]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-45399.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="515.6596" y="-45403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Unzip[[β$2$]monocle.Getter[String,β$2$]]</text>
<text text-anchor="middle" x="652.6596" y="-45388.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Int(1) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node674" class="node">
<title>Int(1) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-45471.8701" rx="97.6615" ry="26.7407"/>
<text text-anchor="start" x="591.6596" y="-45475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(1) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="652.6596" y="-45460.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Integral[scala.collection.immutable.Stream[Int]] -->
<g id="node675" class="node">
<title>Integral[scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-369.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="6913.514" y="-373.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="7046.014" y="-358.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Vector[Int], Int)) =&gt; (Vector[Int], Int)] -->
<g id="node676" class="node">
<title>org.scalacheck.Arbitrary[((Vector[Int], Int)) =&gt; (Vector[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-11412.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="2986.3678" y="-11416.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Vector[Int], Int)) =&gt; (Vector[Int], Int)]</text>
<text text-anchor="middle" x="3166.8678" y="-11401.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 17ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Vector[Int], Int)) =&gt; (Vector[Int], Int)]&#45;&gt;org.scalacheck.Cogen[(Vector[Int], Int)] -->
<g id="edge407" class="edge">
<title>org.scalacheck.Arbitrary[((Vector[Int], Int)) =&gt; (Vector[Int], Int)]&#45;&gt;org.scalacheck.Cogen[(Vector[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M3433.8433,-11412.8701C3719.0875,-11412.8701 4163.2004,-11412.8701 4408.4648,-11412.8701"/>
<polygon fill="#000000" stroke="#000000" points="4408.5483,-11416.3702 4418.5483,-11412.8701 4408.5483,-11409.3702 4408.5483,-11416.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Vector[Int], Int)] -->
<g id="node817" class="node">
<title>org.scalacheck.Arbitrary[(Vector[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-13113.8701" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="4468.253" y="-13117.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Vector[Int], Int)]</text>
<text text-anchor="middle" x="4586.253" y="-13102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Vector[Int], Int)) =&gt; (Vector[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[(Vector[Int], Int)] -->
<g id="edge68" class="edge">
<title>org.scalacheck.Arbitrary[((Vector[Int], Int)) =&gt; (Vector[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[(Vector[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M3338.4804,-11433.4607C3516.7407,-11464.9879 3787.1212,-11543.5622 3914.9868,-11736.8701 3933.3309,-11764.6028 3902.6991,-12907.5257 3922.9868,-12933.8701 4034.0247,-13078.0572 4248.1974,-13114.3265 4403.1918,-13120.0899"/>
<polygon fill="#000000" stroke="#000000" points="4403.203,-13123.5921 4413.3137,-13120.4262 4403.4355,-13116.596 4403.203,-13123.5921"/>
</g>
<!-- scala.reflect.ClassTag[((Vector[Int], Int)) =&gt; (Vector[Int], Int)] -->
<g id="node1244" class="node">
<title>scala.reflect.ClassTag[((Vector[Int], Int)) =&gt; (Vector[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-11196.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="4413.253" y="-11200.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Vector[Int], Int)) =&gt; (Vector[Int], Int)]</text>
<text text-anchor="middle" x="4586.253" y="-11185.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Vector[Int], Int)) =&gt; (Vector[Int], Int)]&#45;&gt;scala.reflect.ClassTag[((Vector[Int], Int)) =&gt; (Vector[Int], Int)] -->
<g id="edge194" class="edge">
<title>org.scalacheck.Arbitrary[((Vector[Int], Int)) =&gt; (Vector[Int], Int)]&#45;&gt;scala.reflect.ClassTag[((Vector[Int], Int)) =&gt; (Vector[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M3251.7964,-11387.3602C3390.6941,-11346.8436 3675.7652,-11268.7094 3922.9868,-11232.8701 4053.4191,-11213.9615 4199.5837,-11204.7608 4321.4382,-11200.3688"/>
<polygon fill="#000000" stroke="#000000" points="4321.7857,-11203.8588 4331.6565,-11200.0097 4321.5397,-11196.8631 4321.7857,-11203.8588"/>
</g>
<!-- monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)] =&gt; ?{def shouldEqual: ?} -->
<g id="node677" class="node">
<title>monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-25329.8701" rx="408.9155" ry="26.7407"/>
<text text-anchor="start" x="371.6596" y="-25333.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-25318.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge1244" class="edge">
<title>monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M970.5461,-25346.7991C1076.9855,-25352.6288 1196.289,-25359.338 1305.3191,-25365.8701 1462.8251,-25375.3063 1645.3231,-25387.3118 1757.2168,-25394.795"/>
<polygon fill="#000000" stroke="#000000" points="1757.2755,-25398.3067 1767.4869,-25395.4824 1757.743,-25391.3223 1757.2755,-25398.3067"/>
</g>
<!-- monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1311" class="edge">
<title>monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M1061.6769,-25329.8701C1294.3916,-25329.8701 1570.4423,-25329.8701 1730.0026,-25329.8701"/>
<polygon fill="#000000" stroke="#000000" points="1730.3424,-25333.3702 1740.3424,-25329.8701 1730.3424,-25326.3702 1730.3424,-25333.3702"/>
</g>
<!-- org.scalacheck.Cogen[(Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge1329" class="edge">
<title>org.scalacheck.Cogen[(Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M3415.021,-10595.2055C3562.5797,-10591.5134 3753.4569,-10587.2089 3922.9868,-10584.8701 5053.4206,-10569.2747 5336.2816,-10590.3655 6466.6717,-10571.8701 6624.5476,-10569.2869 6806.5639,-10563.8585 6923.8012,-10560.0437"/>
<polygon fill="#000000" stroke="#000000" points="6924.0044,-10563.539 6933.8848,-10559.7144 6923.7758,-10556.5428 6924.0044,-10563.539"/>
</g>
<!-- org.scalacheck.Cogen[(Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;org.scalacheck.Cogen[Option[scalaz.Cofree[Option,Int]]] -->
<g id="edge701" class="edge">
<title>org.scalacheck.Cogen[(Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;org.scalacheck.Cogen[Option[scalaz.Cofree[Option,Int]]]</title>
<path fill="none" stroke="#000000" d="M3421.0349,-10605.2724C3682.538,-10608.7729 4086.9496,-10614.1863 4344.005,-10617.6273"/>
<polygon fill="#000000" stroke="#000000" points="4344.182,-10621.1299 4354.228,-10617.7642 4344.2758,-10614.1305 4344.182,-10621.1299"/>
</g>
<!-- scalaz.Equal[((String, Int)) =&gt; monocle.Binary] -->
<g id="node679" class="node">
<title>scalaz.Equal[((String, Int)) =&gt; monocle.Binary]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-16661.8701" rx="197.0658" ry="26.7407"/>
<text text-anchor="start" x="4454.753" y="-16665.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[((String, Int)) =&gt; monocle.Binary]</text>
<text text-anchor="middle" x="4586.253" y="-16650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- scalaz.Equal[((String, Int)) =&gt; monocle.Binary]&#45;&gt;scalaz.Equal[monocle.Binary] -->
<g id="edge333" class="edge">
<title>scalaz.Equal[((String, Int)) =&gt; monocle.Binary]&#45;&gt;scalaz.Equal[monocle.Binary]</title>
<path fill="none" stroke="#000000" d="M4748.4831,-16646.5154C4922.631,-16634.0572 5183.272,-16628.3859 5249.5191,-16697.8701 5272.9812,-16722.4786 5234.1217,-17897.2 5257.5191,-17921.8701 5320.3557,-17988.1245 5576.2214,-17981.0478 5734.2656,-17969.6472"/>
<polygon fill="#000000" stroke="#000000" points="5734.8154,-17973.1162 5744.5312,-17968.8907 5734.301,-17966.1352 5734.8154,-17973.1162"/>
</g>
<!-- scalaz.Equal[((String, Int)) =&gt; monocle.Binary]&#45;&gt;org.scalacheck.Arbitrary[(String, Int)] -->
<g id="edge500" class="edge">
<title>scalaz.Equal[((String, Int)) =&gt; monocle.Binary]&#45;&gt;org.scalacheck.Arbitrary[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M4748.4993,-16677.2401C4922.6619,-16689.7124 5183.3162,-16695.3963 5249.5191,-16625.8701 5264.0773,-16610.5811 5243.4857,-15121.642 5257.5191,-15105.8701 5313.7479,-15042.6751 5535.8214,-15029.5659 5694.4893,-15028.6219"/>
<polygon fill="#000000" stroke="#000000" points="5694.8617,-15032.1204 5704.8464,-15028.5769 5694.8312,-15025.1204 5694.8617,-15032.1204"/>
</g>
<!-- scalaz.Equal[Map[Int,String]] -->
<g id="node680" class="node">
<title>scalaz.Equal[Map[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-20311.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="5780.0954" y="-20315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Map[Int,String]]</text>
<text text-anchor="middle" x="5862.0954" y="-20300.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 6ms</text>
</g>
<!-- scalaz.Equal[Map[Int,String]]&#45;&gt;scalaz.Equal[String] -->
<g id="edge597" class="edge">
<title>scalaz.Equal[Map[Int,String]]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M5988.726,-20308.9255C6111.3375,-20304.9916 6302.2937,-20296.0058 6466.6717,-20275.8701 6645.592,-20253.953 6852.64,-20211.0503 6964.3565,-20186.4279"/>
<polygon fill="#000000" stroke="#000000" points="6965.1993,-20189.8261 6974.2078,-20184.2495 6963.6879,-20182.9913 6965.1993,-20189.8261"/>
</g>
<!-- scalaz.Equal[Map[Int,String]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge680" class="edge">
<title>scalaz.Equal[Map[Int,String]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5961.321,-20294.9665C6086.3436,-20278.5973 6304.4511,-20266.7362 6466.6717,-20347.8701 6765.8186,-20497.4868 6971.0208,-20878.0109 7029.1632,-20996.2564"/>
<polygon fill="#000000" stroke="#000000" points="7026.0328,-20997.8225 7033.5623,-21005.2762 7032.3244,-20994.754 7026.0328,-20997.8225"/>
</g>
<!-- monocle.function.Each[shapeless.HNil,String]&#45;&gt;shapeless.Generic.Aux[shapeless.HNil,SGen] -->
<g id="edge758" class="edge">
<title>monocle.function.Each[shapeless.HNil,String]&#45;&gt;shapeless.Generic.Aux[shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M9538.7546,-27095.7711C9650.6282,-27093.4297 9793.9363,-27084.4548 9918.7254,-27057.8701 10114.1412,-27016.2392 10331.6575,-26920.959 10435.8311,-26872.0521"/>
<polygon fill="#000000" stroke="#000000" points="10437.397,-26875.1834 10444.9499,-26867.7534 10434.4121,-26868.8516 10437.397,-26875.1834"/>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int)] -->
<g id="node682" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-15289.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="6936.014" y="-15293.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="7046.014" y="-15278.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[java.util.UUID] -->
<g id="node684" class="node">
<title>org.scalacheck.Arbitrary[java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-44319.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="1749.034" y="-44323.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[java.util.UUID]</text>
<text text-anchor="middle" x="1862.034" y="-44308.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[A]]&#45;&gt;org.scalacheck.Arbitrary[A] -->
<g id="edge958" class="edge">
<title>org.scalacheck.Arbitrary[List[A]]&#45;&gt;org.scalacheck.Arbitrary[A]</title>
<path fill="none" stroke="#000000" d="M5993.8134,-28359.6716C6151.0773,-28368.2789 6401.1303,-28371.1433 6466.6717,-28308.8701 6488.4125,-28288.2134 6453.0618,-28262.6636 6474.6717,-28241.8701 6603.8324,-28117.5889 6834.0839,-28145.4241 6959.2291,-28172.843"/>
<polygon fill="#000000" stroke="#000000" points="6958.6379,-28176.2972 6969.161,-28175.0667 6960.1673,-28169.4663 6958.6379,-28176.2972"/>
</g>
<!-- org.scalacheck.Arbitrary[List[A]]&#45;&gt;List[A] =&gt; Traversable[A] -->
<g id="edge746" class="edge">
<title>org.scalacheck.Arbitrary[List[A]]&#45;&gt;List[A] =&gt; Traversable[A]</title>
<path fill="none" stroke="#000000" d="M6003.7277,-28349.8701C6236.9055,-28349.8701 6697.9076,-28349.8701 6920.2524,-28349.8701"/>
<polygon fill="#000000" stroke="#000000" points="6920.3335,-28353.3702 6930.3335,-28349.8701 6920.3334,-28346.3702 6920.3335,-28353.3702"/>
</g>
<!-- org.scalacheck.util.Buildable[A,List[A]] -->
<g id="node784" class="node">
<title>org.scalacheck.util.Buildable[A,List[A]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-28277.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="6935.514" y="-28281.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[A,List[A]]</text>
<text text-anchor="middle" x="7046.014" y="-28266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[A]]&#45;&gt;org.scalacheck.util.Buildable[A,List[A]] -->
<g id="edge1002" class="edge">
<title>org.scalacheck.Arbitrary[List[A]]&#45;&gt;org.scalacheck.util.Buildable[A,List[A]]</title>
<path fill="none" stroke="#000000" d="M5997.0411,-28341.6633C6214.6424,-28328.4299 6642.4989,-28302.4098 6878.9973,-28288.0272"/>
<polygon fill="#000000" stroke="#000000" points="6879.2995,-28291.5154 6889.0686,-28287.4147 6878.8745,-28284.5283 6879.2995,-28291.5154"/>
</g>
<!-- scala.reflect.ClassTag[List[A]] -->
<g id="node1417" class="node">
<title>scala.reflect.ClassTag[List[A]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-28421.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="6961.514" y="-28425.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[List[A]]</text>
<text text-anchor="middle" x="7046.014" y="-28410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[A]]&#45;&gt;scala.reflect.ClassTag[List[A]] -->
<g id="edge644" class="edge">
<title>org.scalacheck.Arbitrary[List[A]]&#45;&gt;scala.reflect.ClassTag[List[A]]</title>
<path fill="none" stroke="#000000" d="M5997.4667,-28357.8305C6119.9976,-28365.0598 6305.4377,-28376.0602 6466.6717,-28385.8701 6618.7789,-28395.1246 6793.3322,-28406.0071 6910.7409,-28413.3651"/>
<polygon fill="#000000" stroke="#000000" points="6910.6598,-28416.8668 6920.8592,-28413.9994 6911.0978,-28409.8805 6910.6598,-28416.8668"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.MMap[Int,String]] -->
<g id="node686" class="node">
<title>org.scalacheck.Arbitrary[monocle.function.MMap[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-12348.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="4414.753" y="-12352.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.function.MMap[Int,String]]</text>
<text text-anchor="middle" x="4586.253" y="-12337.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 76ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.MMap[Int,String]]&#45;&gt;org.scalacheck.util.Buildable[(Int, String),monocle.function.MMap[Int,String]] -->
<g id="edge6" class="edge">
<title>org.scalacheck.Arbitrary[monocle.function.MMap[Int,String]]&#45;&gt;org.scalacheck.util.Buildable[(Int, String),monocle.function.MMap[Int,String]]</title>
<path fill="none" stroke="#000000" d="M4666.8508,-12374.3872C4807.0279,-12413.1715 5095.4531,-12467.242 5249.5191,-12312.8701 5261.5444,-12300.8209 5245.5255,-12171.9508 5257.5191,-12159.8701 5306.2612,-12110.774 5464.639,-12102.6395 5607.0614,-12106.3281"/>
<polygon fill="#000000" stroke="#000000" points="5607.1926,-12109.833 5617.2865,-12106.6137 5607.3881,-12102.8358 5607.1926,-12109.833"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.MMap[Int,String]]&#45;&gt;scala.reflect.ClassTag[monocle.function.MMap[Int,String]] -->
<g id="edge1008" class="edge">
<title>org.scalacheck.Arbitrary[monocle.function.MMap[Int,String]]&#45;&gt;scala.reflect.ClassTag[monocle.function.MMap[Int,String]]</title>
<path fill="none" stroke="#000000" d="M4666.2812,-12374.4165C4806.5574,-12413.6231 5096.4445,-12468.8316 5249.5191,-12312.8701 5267.0419,-12295.0168 5240.0432,-12105.7693 5257.5191,-12087.8701 5311.2921,-12032.7944 5501.3072,-12028.9408 5654.138,-12035.7345"/>
<polygon fill="#000000" stroke="#000000" points="5653.9981,-12039.2317 5664.149,-12036.197 5654.3212,-12032.2391 5653.9981,-12039.2317"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.MMap[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge329" class="edge">
<title>org.scalacheck.Arbitrary[monocle.function.MMap[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M4665.1474,-12374.4581C4805.6226,-12414.4972 5098.49,-12472.0078 5249.5191,-12312.8701 5269.1334,-12292.2027 5237.6705,-8230.3124 5257.5191,-8209.8701 5304.3372,-8161.6516 6399.6314,-8176.6191 6466.6717,-8171.8701 6624.5814,-8160.684 6805.8435,-8139.2694 6922.9475,-8124.3048"/>
<polygon fill="#000000" stroke="#000000" points="6923.5474,-8127.7567 6933.0211,-8123.0132 6922.6571,-8120.8135 6923.5474,-8127.7567"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, String)] -->
<g id="node1130" class="node">
<title>org.scalacheck.Arbitrary[(Int, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-12195.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="5758.0954" y="-12199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-12184.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 28ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.MMap[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[(Int, String)] -->
<g id="edge856" class="edge">
<title>org.scalacheck.Arbitrary[monocle.function.MMap[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[(Int, String)]</title>
<path fill="none" stroke="#000000" d="M4834.9836,-12343.2922C4959.7609,-12338.4847 5113.0135,-12329.5339 5249.5191,-12312.8701 5430.2355,-12290.8092 5637.8322,-12247.2522 5759.0326,-12219.9552"/>
<polygon fill="#000000" stroke="#000000" points="5760.0642,-12223.3104 5769.0469,-12217.6924 5758.5214,-12216.4825 5760.0642,-12223.3104"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.MMap[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1067" class="edge">
<title>org.scalacheck.Arbitrary[monocle.function.MMap[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4821.963,-12358.9073C4963.6646,-12377.2323 5137.6379,-12423.3563 5249.5191,-12535.8701 5258.9467,-12545.3509 5247.0275,-12556.5821 5257.5191,-12564.8701 5363.0101,-12648.2036 6372.3488,-12512.0785 6466.6717,-12607.8701 6482.1885,-12623.6285 6463.2601,-12986.9261 6474.6717,-13005.8701 6579.1719,-13179.3465 6815.7921,-13265.0354 6949.4294,-13301.0103"/>
<polygon fill="#000000" stroke="#000000" points="6948.702,-13304.4383 6959.2651,-13303.6183 6950.4962,-13297.6721 6948.702,-13304.4383"/>
</g>
<!-- scalaz.Equal[(Int, Char)] -->
<g id="node687" class="node">
<title>scalaz.Equal[(Int, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-20023.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="5794.0954" y="-20027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, Char)]</text>
<text text-anchor="middle" x="5862.0954" y="-20012.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 5ms</text>
</g>
<!-- scalaz.Equal[(Int, Char)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge369" class="edge">
<title>scalaz.Equal[(Int, Char)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5962.5416,-20014.1914C6116.4897,-20001.834 6400.0095,-19989.6804 6466.6717,-20059.8701 6476.3131,-20070.0217 6469.8646,-21054.7207 6474.6717,-21067.8701 6585.5775,-21371.2436 6893.5572,-21635.9099 7005.0525,-21724.4234"/>
<polygon fill="#000000" stroke="#000000" points="7003.0301,-21727.286 7013.0477,-21730.7354 7007.3677,-21721.7918 7003.0301,-21727.286"/>
</g>
<!-- scalaz.Equal[(Int, Char)]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge763" class="edge">
<title>scalaz.Equal[(Int, Char)]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M5962.6583,-20033.3846C6116.4078,-20045.4739 6399.2248,-20057.2144 6466.6717,-19987.8701 6486.204,-19967.7883 6458.3822,-19758.6613 6474.6717,-19735.8701 6585.023,-19581.4737 6820.3037,-19537.3861 6951.9153,-19524.8335"/>
<polygon fill="#000000" stroke="#000000" points="6952.3456,-19528.3089 6961.9865,-19523.9153 6951.7099,-19521.3378 6952.3456,-19528.3089"/>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Int, Double)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge717" class="edge">
<title>scalaz.Equal[(Char, Boolean, String, Int, Double)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M6035.232,-19073.204C6192.8361,-19064.1247 6409.4002,-19063.7946 6466.6717,-19123.8701 6479.7829,-19137.6231 6465.3937,-19791.2879 6474.6717,-19807.8701 6582.63,-20000.8202 6841.5851,-20104.8546 6970.4814,-20146.2659"/>
<polygon fill="#000000" stroke="#000000" points="6969.6954,-20149.6884 6980.2857,-20149.3754 6971.8117,-20143.016 6969.6954,-20149.6884"/>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Int, Double)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge1190" class="edge">
<title>scalaz.Equal[(Char, Boolean, String, Int, Double)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M6034.9581,-19073.1302C6192.6678,-19063.9593 6409.5832,-19063.5303 6466.6717,-19123.8701 6475.9499,-19133.6766 6470.0607,-21055.1818 6474.6717,-21067.8701 6584.9977,-21371.455 6893.34,-21635.9891 7004.9915,-21724.4456"/>
<polygon fill="#000000" stroke="#000000" points="7002.9769,-21727.3142 7012.998,-21730.7536 7007.3089,-21721.8157 7002.9769,-21727.3142"/>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Int, Double)]&#45;&gt;scalaz.Equal[Double] -->
<g id="edge237" class="edge">
<title>scalaz.Equal[(Char, Boolean, String, Int, Double)]&#45;&gt;scalaz.Equal[Double]</title>
<path fill="none" stroke="#000000" d="M6067.7102,-19090.4831C6221.7203,-19087.5494 6414.4716,-19071.8101 6466.6717,-19013.8701 6483.5196,-18995.1696 6461.7533,-18582.4727 6474.6717,-18560.8701 6582.0102,-18381.3755 6830.1053,-18294.6086 6961.2404,-18259.9885"/>
<polygon fill="#000000" stroke="#000000" points="6962.4486,-18263.2909 6971.2468,-18257.3882 6960.6879,-18256.5159 6962.4486,-18263.2909"/>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Int, Double)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge100" class="edge">
<title>scalaz.Equal[(Char, Boolean, String, Int, Double)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M6067.8005,-19090.2014C6221.5734,-19087.0919 6413.9578,-19071.2534 6466.6717,-19013.8701 6482.919,-18996.1835 6460.4302,-18817.2083 6474.6717,-18797.8701 6582.3108,-18651.7093 6804.5809,-18611.2707 6937.9392,-18600.4335"/>
<polygon fill="#000000" stroke="#000000" points="6938.4755,-18603.9026 6948.1774,-18599.6454 6937.9382,-18596.9233 6938.4755,-18603.9026"/>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Int, Double)]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge1135" class="edge">
<title>scalaz.Equal[(Char, Boolean, String, Int, Double)]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M6039.0815,-19073.953C6195.5055,-19065.8807 6407.716,-19066.6668 6466.6717,-19123.8701 6480.9233,-19137.698 6463.7281,-19196.3002 6474.6717,-19212.8701 6589.5858,-19386.8627 6837.1959,-19469.7727 6965.4066,-19502.3307"/>
<polygon fill="#000000" stroke="#000000" points="6964.6292,-19505.744 6975.1795,-19504.7736 6966.3267,-19498.953 6964.6292,-19505.744"/>
</g>
<!-- org.scalactic.Equality[Boolean] -->
<g id="node689" class="node">
<title>org.scalactic.Equality[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-18105.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="5776.0954" y="-18109.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Boolean]</text>
<text text-anchor="middle" x="5862.0954" y="-18094.6701" font-family="Times,serif" font-size="14.00" fill="#000000">46 times = 108ms</text>
</g>
<!-- org.scalactic.Equality[Boolean]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge386" class="edge">
<title>org.scalactic.Equality[Boolean]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M5983.8204,-18095.0013C6140.7699,-18083.9348 6401.3458,-18076.5255 6466.6717,-18141.8701 6477.2954,-18152.4968 6466.6935,-18264.1367 6474.6717,-18276.8701 6585.3465,-18453.5102 6830.5592,-18541.2731 6960.8259,-18576.8599"/>
<polygon fill="#000000" stroke="#000000" points="6960.2026,-18580.3166 6970.7686,-18579.5357 6962.0218,-18573.5571 6960.2026,-18580.3166"/>
</g>
<!-- monocle.function.Reverse[HListSpec.this.H,HListSpec.this.ReverseH] -->
<g id="node690" class="node">
<title>monocle.function.Reverse[HListSpec.this.H,HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-23601.8701" rx="285.8424" ry="26.7407"/>
<text text-anchor="start" x="458.6596" y="-23605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[HListSpec.this.H,HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="652.6596" y="-23590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 26ms</text>
</g>
<!-- monocle.function.Reverse[HListSpec.this.H,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[HListSpec.this.H,HListSpec.this.ReverseH] -->
<g id="edge1372" class="edge">
<title>monocle.function.Reverse[HListSpec.this.H,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[HListSpec.this.H,HListSpec.this.ReverseH]</title>
<path fill="none" stroke="#000000" d="M901.7892,-23615.0568C1023.4895,-23621.6402 1172.0758,-23629.8874 1305.3191,-23637.8701 1404.0641,-23643.7859 1512.632,-23650.7116 1607.467,-23656.8997"/>
<polygon fill="#000000" stroke="#000000" points="1607.2759,-23660.3946 1617.4828,-23657.5538 1607.7322,-23653.4095 1607.2759,-23660.3946"/>
</g>
<!-- monocle.function.Reverse[HListSpec.this.H,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[HListSpec.this.ReverseH,HListSpec.this.H] -->
<g id="edge1288" class="edge">
<title>monocle.function.Reverse[HListSpec.this.H,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[HListSpec.this.ReverseH,HListSpec.this.H]</title>
<path fill="none" stroke="#000000" d="M938.4984,-23601.8701C1120.4957,-23601.8701 1356.4671,-23601.8701 1544.3267,-23601.8701"/>
<polygon fill="#000000" stroke="#000000" points="1544.3639,-23605.3702 1554.3638,-23601.8701 1544.3638,-23598.3702 1544.3639,-23605.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[HListSpec.this.H,HListSpec.this.ReverseH] -->
<g id="node1017" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[HListSpec.this.H,HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-23529.8701" rx="310.3398" ry="26.7407"/>
<text text-anchor="start" x="1650.534" y="-23533.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[HListSpec.this.H,HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="1862.034" y="-23518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- monocle.function.Reverse[HListSpec.this.H,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[HListSpec.this.H,HListSpec.this.ReverseH] -->
<g id="edge1312" class="edge">
<title>monocle.function.Reverse[HListSpec.this.H,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[HListSpec.this.H,HListSpec.this.ReverseH]</title>
<path fill="none" stroke="#000000" d="M894.1254,-23587.4944C1096.9589,-23575.4187 1386.4176,-23558.1858 1595.896,-23545.7146"/>
<polygon fill="#000000" stroke="#000000" points="1596.3486,-23549.1939 1606.1229,-23545.1057 1595.9325,-23542.2063 1596.3486,-23549.1939"/>
</g>
<!-- org.scalactic.Equality[monocle.Quintary] -->
<g id="node691" class="node">
<title>org.scalactic.Equality[monocle.Quintary]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-11556.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="4473.253" y="-11560.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[monocle.Quintary]</text>
<text text-anchor="middle" x="4586.253" y="-11545.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[monocle.Quintary]&#45;&gt;scalaz.Equal[monocle.Quintary] -->
<g id="edge1032" class="edge">
<title>org.scalactic.Equality[monocle.Quintary]&#45;&gt;scalaz.Equal[monocle.Quintary]</title>
<path fill="none" stroke="#000000" d="M4732.2276,-11570.9814C4905.9019,-11584.156 5181.0327,-11592.4014 5249.5191,-11520.8701 5263.8315,-11505.9213 5243.246,-10790.8563 5257.5191,-10775.8701 5319.6965,-10710.586 5569.8564,-10716.6108 5728.2538,-10727.7043"/>
<polygon fill="#000000" stroke="#000000" points="5728.327,-10731.2184 5738.5515,-10728.4416 5728.827,-10724.2363 5728.327,-10731.2184"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(String, Int),Either[String,Int]] -->
<g id="node692" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(String, Int),Either[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-8533.8701" rx="291.1561" ry="26.7407"/>
<text text-anchor="start" x="6848.014" y="-8537.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(String, Int),Either[String,Int]]</text>
<text text-anchor="middle" x="7046.014" y="-8522.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P) -->
<g id="node693" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-45543.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="481.1596" y="-45547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-45532.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[monocle.Unary] -->
<g id="node694" class="node">
<title>org.scalactic.Equality[monocle.Unary]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-16589.8701" rx="161.441" ry="26.7407"/>
<text text-anchor="start" x="5756.0954" y="-16593.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[monocle.Unary]</text>
<text text-anchor="middle" x="5862.0954" y="-16578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalactic.Equality[monocle.Unary]&#45;&gt;scalaz.Equal[monocle.Unary] -->
<g id="edge445" class="edge">
<title>org.scalactic.Equality[monocle.Unary]&#45;&gt;scalaz.Equal[monocle.Unary]</title>
<path fill="none" stroke="#000000" d="M6020.8422,-16585.043C6255.3573,-16577.9119 6690.3377,-16564.6853 6910.6369,-16557.9865"/>
<polygon fill="#000000" stroke="#000000" points="6910.7519,-16561.4848 6920.6408,-16557.6823 6910.539,-16554.488 6910.7519,-16561.4848"/>
</g>
<!-- IsoSpec.this.IntWrapper =&gt; ?{def shouldEqual: ?} -->
<g id="node695" class="node">
<title>IsoSpec.this.IntWrapper =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-25257.8701" rx="208.693" ry="26.7407"/>
<text text-anchor="start" x="513.1596" y="-25261.6701" font-family="Times,serif" font-size="14.00" fill="#000000">IsoSpec.this.IntWrapper =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-25246.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 9ms</text>
</g>
<!-- IsoSpec.this.IntWrapper =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge817" class="edge">
<title>IsoSpec.this.IntWrapper =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M827.3798,-25243.1753C997.173,-25233.0452 1238.8511,-25230.9957 1305.3191,-25293.8701 1328.7093,-25315.9956 1290.0444,-25343.623 1313.3191,-25365.8701 1440.0181,-25486.9747 1667.1958,-25452.8951 1785.5761,-25423.9265"/>
<polygon fill="#000000" stroke="#000000" points="1786.4433,-25427.3175 1795.2974,-25421.499 1784.7474,-25420.526 1786.4433,-25427.3175"/>
</g>
<!-- IsoSpec.this.IntWrapper =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1083" class="edge">
<title>IsoSpec.this.IntWrapper =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M845.811,-25268.0432C975.7288,-25275.0042 1150.8361,-25284.6149 1305.3191,-25293.8701 1453.0124,-25302.7185 1622.6806,-25313.8259 1735.5046,-25321.3455"/>
<polygon fill="#000000" stroke="#000000" points="1735.3518,-25324.8429 1745.5626,-25322.0163 1735.8177,-25317.8585 1735.3518,-25324.8429"/>
</g>
<!-- scalaz.Equal[IsoSpec.this.EmptyCase] -->
<g id="node696" class="node">
<title>scalaz.Equal[IsoSpec.this.EmptyCase]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-45615.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="547.1596" y="-45619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[IsoSpec.this.EmptyCase]</text>
<text text-anchor="middle" x="652.6596" y="-45604.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.Tree[A]]&#45;&gt;org.scalacheck.Cogen[A] -->
<g id="edge396" class="edge">
<title>org.scalacheck.Cogen[scalaz.Tree[A]]&#45;&gt;org.scalacheck.Cogen[A]</title>
<path fill="none" stroke="#000000" d="M6020.1222,-27315.2013C6142.5799,-27319.5614 6316.1756,-27329.6281 6466.6717,-27352.8701 6648.154,-27380.8974 6856.3097,-27437.7874 6967.0272,-27470.0809"/>
<polygon fill="#000000" stroke="#000000" points="6966.2016,-27473.486 6976.7822,-27472.9361 6968.1681,-27466.7679 6966.2016,-27473.486"/>
</g>
<!-- Null &lt;:&lt; String -->
<g id="node698" class="node">
<title>Null &lt;:&lt; String</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-45687.8701" rx="71.3357" ry="26.7407"/>
<text text-anchor="start" x="610.1596" y="-45691.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Null &lt;:&lt; String</text>
<text text-anchor="middle" x="652.6596" y="-45676.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2,(Long, String)]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2,_$1] -->
<g id="node699" class="node">
<title>(=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2,(Long, String)]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2,_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-45759.8701" rx="568.5277" ry="26.7407"/>
<text text-anchor="start" x="258.6596" y="-45763.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2,(Long, String)]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2,_$1]</text>
<text text-anchor="middle" x="652.6596" y="-45748.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[monocle.Unary] -->
<g id="node701" class="node">
<title>scala.reflect.ClassTag[monocle.Unary]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-18977.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="8089.6985" y="-18981.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[monocle.Unary]</text>
<text text-anchor="middle" x="8196.6985" y="-18966.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.util.Try[Int]] -->
<g id="node702" class="node">
<title>org.scalacheck.Arbitrary[scala.util.Try[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-23457.8701" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="5742.0954" y="-23461.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.util.Try[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-23446.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 51ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Int,scala.util.Try[Int]] -->
<g id="node787" class="node">
<title>org.scalacheck.util.Buildable[Int,scala.util.Try[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-23529.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="6904.514" y="-23533.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Int,scala.util.Try[Int]]</text>
<text text-anchor="middle" x="7046.014" y="-23518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.util.Try[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,scala.util.Try[Int]] -->
<g id="edge765" class="edge">
<title>org.scalacheck.Arbitrary[scala.util.Try[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,scala.util.Try[Int]]</title>
<path fill="none" stroke="#000000" d="M6029.8374,-23468.0713C6244.4102,-23481.1205 6615.6489,-23503.6974 6845.0856,-23517.6506"/>
<polygon fill="#000000" stroke="#000000" points="6845.0291,-23521.1535 6855.2232,-23518.2671 6845.4541,-23514.1664 6845.0291,-23521.1535"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.util.Try[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge495" class="edge">
<title>org.scalacheck.Arbitrary[scala.util.Try[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M5939.2168,-23482.1834C6069.2697,-23517.8153 6331.2326,-23565.496 6466.6717,-23421.8701 6478.3015,-23409.5373 6466.2393,-13672.5753 6474.6717,-13657.8701 6578.1846,-13477.3536 6820.8663,-13384.6472 6954.2258,-13345.8119"/>
<polygon fill="#000000" stroke="#000000" points="6955.383,-13349.1211 6964.0285,-13342.997 6953.4509,-13342.393 6955.383,-13349.1211"/>
</g>
<!-- scala.reflect.ClassTag[scala.util.Try[Int]] -->
<g id="node1192" class="node">
<title>scala.reflect.ClassTag[scala.util.Try[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-23457.8701" rx="170.3255" ry="26.7407"/>
<text text-anchor="start" x="6933.514" y="-23461.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.util.Try[Int]]</text>
<text text-anchor="middle" x="7046.014" y="-23446.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.util.Try[Int]]&#45;&gt;scala.reflect.ClassTag[scala.util.Try[Int]] -->
<g id="edge532" class="edge">
<title>org.scalacheck.Arbitrary[scala.util.Try[Int]]&#45;&gt;scala.reflect.ClassTag[scala.util.Try[Int]]</title>
<path fill="none" stroke="#000000" d="M6043.1959,-23457.8701C6266.1597,-23457.8701 6642.5735,-23457.8701 6865.341,-23457.8701"/>
<polygon fill="#000000" stroke="#000000" points="6865.5024,-23461.3702 6875.5024,-23457.8701 6865.5023,-23454.3702 6865.5024,-23461.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(K, V)] -->
<g id="node703" class="node">
<title>org.scalacheck.Arbitrary[(K, V)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-29091.8701" rx="138.6859" ry="26.7407"/>
<text text-anchor="start" x="1772.034" y="-29095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(K, V)]</text>
<text text-anchor="middle" x="1862.034" y="-29080.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(K, V)]&#45;&gt;org.scalacheck.Arbitrary[V] -->
<g id="edge138" class="edge">
<title>org.scalacheck.Arbitrary[(K, V)]&#45;&gt;org.scalacheck.Arbitrary[V]</title>
<path fill="none" stroke="#000000" d="M1992.7605,-29100.9343C2105.5565,-29108.6091 2272.8525,-29119.6431 2418.7488,-29127.8701 2636.2405,-29140.1342 2889.4517,-29151.7636 3038.4951,-29158.337"/>
<polygon fill="#000000" stroke="#000000" points="3038.4578,-29161.8387 3048.6022,-29158.7821 3038.7658,-29154.8455 3038.4578,-29161.8387"/>
</g>
<!-- org.scalacheck.Arbitrary[(K, V)]&#45;&gt;scala.reflect.ClassTag[(K, V)] -->
<g id="edge913" class="edge">
<title>org.scalacheck.Arbitrary[(K, V)]&#45;&gt;scala.reflect.ClassTag[(K, V)]</title>
<path fill="none" stroke="#000000" d="M2000.7471,-29091.8701C2251.5782,-29091.8701 2777.7394,-29091.8701 3028.3947,-29091.8701"/>
<polygon fill="#000000" stroke="#000000" points="3028.6577,-29095.3702 3038.6577,-29091.8701 3028.6577,-29088.3702 3028.6577,-29095.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(K, V)]&#45;&gt;org.scalacheck.Arbitrary[K] -->
<g id="edge654" class="edge">
<title>org.scalacheck.Arbitrary[(K, V)]&#45;&gt;org.scalacheck.Arbitrary[K]</title>
<path fill="none" stroke="#000000" d="M1991.4227,-29082.0645C2134.5825,-29074.2713 2352.7785,-29072.4593 2410.7488,-29127.8701 2434.0235,-29150.1171 2395.2811,-29177.8267 2418.7488,-29199.8701 2506.5794,-29282.3698 2859.363,-29264.282 3047.4194,-29248.0118"/>
<polygon fill="#000000" stroke="#000000" points="3047.9735,-29251.4767 3057.6294,-29247.1162 3047.3618,-29244.5035 3047.9735,-29251.4767"/>
</g>
<!-- monocle.function.Snoc1[(Int, Char),Int,Char] -->
<g id="node704" class="node">
<title>monocle.function.Snoc1[(Int, Char),Int,Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-45831.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="527.6596" y="-45835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc1[(Int, Char),Int,Char]</text>
<text text-anchor="middle" x="652.6596" y="-45820.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Init.Aux[(Int, Char),Int] -->
<g id="node1408" class="node">
<title>shapeless.ops.hlist.Init.Aux[(Int, Char),Int]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-45831.8701" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="1744.034" y="-45835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init.Aux[(Int, Char),Int]</text>
<text text-anchor="middle" x="1862.034" y="-45820.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Snoc1[(Int, Char),Int,Char]&#45;&gt;shapeless.ops.hlist.Init.Aux[(Int, Char),Int] -->
<g id="edge828" class="edge">
<title>monocle.function.Snoc1[(Int, Char),Int,Char]&#45;&gt;shapeless.ops.hlist.Init.Aux[(Int, Char),Int]</title>
<path fill="none" stroke="#000000" d="M840.9604,-45831.8701C1067.794,-45831.8701 1446.5918,-45831.8701 1673.5203,-45831.8701"/>
<polygon fill="#000000" stroke="#000000" points="1673.5393,-45835.3702 1683.5393,-45831.8701 1673.5393,-45828.3702 1673.5393,-45835.3702"/>
</g>
<!-- monocle.function.Each[Vector[Int],Int] -->
<g id="node705" class="node">
<title>monocle.function.Each[Vector[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-45903.8701" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="544.6596" y="-45907.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Vector[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-45892.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- shapeless.Generic.Aux[Vector[Int],SGen] -->
<g id="node1195" class="node">
<title>shapeless.Generic.Aux[Vector[Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-45903.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="1747.534" y="-45907.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Vector[Int],SGen]</text>
<text text-anchor="middle" x="1862.034" y="-45892.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- monocle.function.Each[Vector[Int],Int]&#45;&gt;shapeless.Generic.Aux[Vector[Int],SGen] -->
<g id="edge162" class="edge">
<title>monocle.function.Each[Vector[Int],Int]&#45;&gt;shapeless.Generic.Aux[Vector[Int],SGen]</title>
<path fill="none" stroke="#000000" d="M817.0198,-45903.8701C1041.8176,-45903.8701 1443.9445,-45903.8701 1678.3955,-45903.8701"/>
<polygon fill="#000000" stroke="#000000" points="1678.7394,-45907.3702 1688.7394,-45903.8701 1678.7394,-45900.3702 1678.7394,-45907.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[List[Int],List[Int]] -->
<g id="node707" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[List[Int],List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-32835.8701" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="1721.034" y="-32839.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[List[Int],List[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-32824.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 66ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[List[Int],List[Int]]&#45;&gt;shapeless.Generic.Aux[List[Int],L1] -->
<g id="edge199" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[List[Int],List[Int]]&#45;&gt;shapeless.Generic.Aux[List[Int],L1]</title>
<path fill="none" stroke="#000000" d="M2072.7654,-32835.8701C2332.9375,-32835.8701 2769.7785,-32835.8701 3005.0738,-32835.8701"/>
<polygon fill="#000000" stroke="#000000" points="3005.087,-32839.3702 3015.087,-32835.8701 3005.0869,-32832.3702 3005.087,-32839.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int, scalaz.IList[Int])) =&gt; (Int, scalaz.IList[Int])] -->
<g id="node708" class="node">
<title>org.scalacheck.Arbitrary[((Int, scalaz.IList[Int])) =&gt; (Int, scalaz.IList[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-13477.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="2960.8678" y="-13481.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Int, scalaz.IList[Int])) =&gt; (Int, scalaz.IList[Int])]</text>
<text text-anchor="middle" x="3166.8678" y="-13466.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, scalaz.IList[Int])) =&gt; (Int, scalaz.IList[Int])]&#45;&gt;scala.reflect.ClassTag[((Int, scalaz.IList[Int])) =&gt; (Int, scalaz.IList[Int])] -->
<g id="edge33" class="edge">
<title>org.scalacheck.Arbitrary[((Int, scalaz.IList[Int])) =&gt; (Int, scalaz.IList[Int])]&#45;&gt;scala.reflect.ClassTag[((Int, scalaz.IList[Int])) =&gt; (Int, scalaz.IList[Int])]</title>
<path fill="none" stroke="#000000" d="M3469.6206,-13477.8701C3709.7123,-13477.8701 4043.6545,-13477.8701 4283.6953,-13477.8701"/>
<polygon fill="#000000" stroke="#000000" points="4283.9802,-13481.3702 4293.9801,-13477.8701 4283.9801,-13474.3702 4283.9802,-13481.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int, scalaz.IList[Int])) =&gt; (Int, scalaz.IList[Int])]&#45;&gt;org.scalacheck.Cogen[(Int, scalaz.IList[Int])] -->
<g id="edge42" class="edge">
<title>org.scalacheck.Arbitrary[((Int, scalaz.IList[Int])) =&gt; (Int, scalaz.IList[Int])]&#45;&gt;org.scalacheck.Cogen[(Int, scalaz.IList[Int])]</title>
<path fill="none" stroke="#000000" d="M3455.9105,-13469.7193C3618.5175,-13448.4743 3809.5218,-13392.1186 3914.9868,-13250.8701 3925.1745,-13237.2257 3911.2366,-12037.1945 3922.9868,-12024.8701 3988.8502,-11955.7877 4246.8646,-11960.9938 4420.9907,-11973.2997"/>
<polygon fill="#000000" stroke="#000000" points="4420.8088,-11976.7956 4431.0346,-11974.0239 4421.3123,-11969.8137 4420.8088,-11976.7956"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, scalaz.IList[Int])] -->
<g id="node1203" class="node">
<title>org.scalacheck.Arbitrary[(Int, scalaz.IList[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-13919.8701" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="4455.253" y="-13923.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, scalaz.IList[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-13908.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, scalaz.IList[Int])) =&gt; (Int, scalaz.IList[Int])]&#45;&gt;org.scalacheck.Arbitrary[(Int, scalaz.IList[Int])] -->
<g id="edge1041" class="edge">
<title>org.scalacheck.Arbitrary[((Int, scalaz.IList[Int])) =&gt; (Int, scalaz.IList[Int])]&#45;&gt;org.scalacheck.Arbitrary[(Int, scalaz.IList[Int])]</title>
<path fill="none" stroke="#000000" d="M3250.0965,-13503.7877C3499.7604,-13581.5336 4240.8944,-13812.3246 4497.5685,-13892.2535"/>
<polygon fill="#000000" stroke="#000000" points="4496.639,-13895.6298 4507.2275,-13895.2613 4498.7203,-13888.9463 4496.639,-13895.6298"/>
</g>
<!-- shapeless.ops.hlist.Last[Float :: Long :: Double :: shapeless.HNil] -->
<g id="node709" class="node">
<title>shapeless.ops.hlist.Last[Float :: Long :: Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-33798.8701" rx="265.7444" ry="26.7407"/>
<text text-anchor="start" x="5682.0954" y="-33802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Last[Float :: Long :: Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="5862.0954" y="-33787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.Last[Long :: Double :: shapeless.HNil] -->
<g id="node952" class="node">
<title>shapeless.ops.hlist.Last[Long :: Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-33798.8701" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="6887.514" y="-33802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Last[Long :: Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="7046.014" y="-33787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Last[Float :: Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Last[Long :: Double :: shapeless.HNil] -->
<g id="edge566" class="edge">
<title>shapeless.ops.hlist.Last[Float :: Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Last[Long :: Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M6128.1587,-33798.8701C6329.5433,-33798.8701 6604.0345,-33798.8701 6800.2644,-33798.8701"/>
<polygon fill="#000000" stroke="#000000" points="6800.4282,-33802.3702 6810.4282,-33798.8701 6800.4282,-33795.3702 6800.4282,-33802.3702"/>
</g>
<!-- scalaz.Equal[(Int, Int, Int, Int, Int, Int)] -->
<g id="node711" class="node">
<title>scalaz.Equal[(Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-23025.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="5755.0954" y="-23029.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-23014.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scalaz.Equal[(Int, Int, Int, Int, Int, Int)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge1125" class="edge">
<title>scalaz.Equal[(Int, Int, Int, Int, Int, Int)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M6005.0326,-23038.6916C6163.7747,-23049.397 6405.7681,-23054.0186 6466.6717,-22989.8701 6486.8308,-22968.6369 6457.2668,-21959.4138 6474.6717,-21935.8701 6584.4818,-21787.3292 6816.9617,-21758.2609 6949.0216,-21754.3852"/>
<polygon fill="#000000" stroke="#000000" points="6949.2253,-21757.8813 6959.1345,-21754.1319 6949.05,-21750.8835 6949.2253,-21757.8813"/>
</g>
<!-- monocle.generic.internal.TupleGeneric[ProductSpec.this.Person] -->
<g id="node712" class="node">
<title>monocle.generic.internal.TupleGeneric[ProductSpec.this.Person]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-42735.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="475.1596" y="-42739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.generic.internal.TupleGeneric[ProductSpec.this.Person]</text>
<text text-anchor="middle" x="652.6596" y="-42724.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- monocle.generic.internal.TupleGeneric[ProductSpec.this.Person]&#45;&gt;shapeless.Generic.Aux[ProductSpec.this.Person,L] -->
<g id="edge521" class="edge">
<title>monocle.generic.internal.TupleGeneric[ProductSpec.this.Person]&#45;&gt;shapeless.Generic.Aux[ProductSpec.this.Person,L]</title>
<path fill="none" stroke="#000000" d="M886.0382,-42748.2059C1010.5123,-42754.921 1166.2703,-42763.5396 1305.3191,-42771.8701 1425.554,-42779.0734 1560.3525,-42787.7739 1667.1899,-42794.817"/>
<polygon fill="#000000" stroke="#000000" points="1667.2315,-42798.3273 1677.4403,-42795.4933 1667.6924,-42791.3425 1667.2315,-42798.3273"/>
</g>
<!-- shapeless.Generic.Aux[(String, Int),String :: Int :: shapeless.HNil] -->
<g id="node766" class="node">
<title>shapeless.Generic.Aux[(String, Int),String :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-42735.8701" rx="267.0729" ry="26.7407"/>
<text text-anchor="start" x="1681.034" y="-42739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(String, Int),String :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="1862.034" y="-42724.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- monocle.generic.internal.TupleGeneric[ProductSpec.this.Person]&#45;&gt;shapeless.Generic.Aux[(String, Int),String :: Int :: shapeless.HNil] -->
<g id="edge319" class="edge">
<title>monocle.generic.internal.TupleGeneric[ProductSpec.this.Person]&#45;&gt;shapeless.Generic.Aux[(String, Int),String :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M915.0758,-42735.8701C1112.7674,-42735.8701 1383.235,-42735.8701 1584.5103,-42735.8701"/>
<polygon fill="#000000" stroke="#000000" points="1584.6441,-42739.3702 1594.6441,-42735.8701 1584.6441,-42732.3702 1584.6441,-42739.3702"/>
</g>
<!-- shapeless.ops.hlist.Tupler.Aux[String :: Int :: shapeless.HNil,R] -->
<g id="node1307" class="node">
<title>shapeless.ops.hlist.Tupler.Aux[String :: Int :: shapeless.HNil,R]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-42663.8701" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="1687.534" y="-42667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Tupler.Aux[String :: Int :: shapeless.HNil,R]</text>
<text text-anchor="middle" x="1862.034" y="-42652.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.generic.internal.TupleGeneric[ProductSpec.this.Person]&#45;&gt;shapeless.ops.hlist.Tupler.Aux[String :: Int :: shapeless.HNil,R] -->
<g id="edge693" class="edge">
<title>monocle.generic.internal.TupleGeneric[ProductSpec.this.Person]&#45;&gt;shapeless.ops.hlist.Tupler.Aux[String :: Int :: shapeless.HNil,R]</title>
<path fill="none" stroke="#000000" d="M886.0382,-42723.5342C1010.5123,-42716.8191 1166.2703,-42708.2006 1305.3191,-42699.8701 1413.6203,-42693.3817 1533.7375,-42685.6786 1634.5931,-42679.0662"/>
<polygon fill="#000000" stroke="#000000" points="1634.854,-42682.5567 1644.6033,-42678.4093 1634.3955,-42675.5717 1634.854,-42682.5567"/>
</g>
<!-- org.scalacheck.Arbitrary[String]&#45;&gt;scala.reflect.ClassTag[String] -->
<g id="edge1242" class="edge">
<title>org.scalacheck.Arbitrary[String]&#45;&gt;scala.reflect.ClassTag[String]</title>
<path fill="none" stroke="#000000" d="M7182.5313,-8107.8701C7404.0098,-8107.8701 7839.0889,-8107.8701 8060.4162,-8107.8701"/>
<polygon fill="#000000" stroke="#000000" points="8060.4682,-8111.3702 8070.4682,-8107.8701 8060.4681,-8104.3702 8060.4682,-8111.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]] =&gt; Stream[scalaz.Tree[Int]]] -->
<g id="node714" class="node">
<title>org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]] =&gt; Stream[scalaz.Tree[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-10114.8701" rx="318.8103" ry="26.7407"/>
<text text-anchor="start" x="2949.3678" y="-10118.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]] =&gt; Stream[scalaz.Tree[Int]]]</text>
<text text-anchor="middle" x="3166.8678" y="-10103.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]] =&gt; Stream[scalaz.Tree[Int]]]&#45;&gt;org.scalacheck.Cogen[Stream[scalaz.Tree[Int]]] -->
<g id="edge1084" class="edge">
<title>org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]] =&gt; Stream[scalaz.Tree[Int]]]&#45;&gt;org.scalacheck.Cogen[Stream[scalaz.Tree[Int]]]</title>
<path fill="none" stroke="#000000" d="M3341.6616,-10092.3694C3516.1985,-10080.8456 3777.6735,-10095.4581 3914.9868,-10258.8701 3931.7871,-10278.8635 3904.8675,-10710.0637 3922.9868,-10728.8701 3988.3288,-10796.6894 4240.2767,-10792.6244 4414.1219,-10780.7943"/>
<polygon fill="#000000" stroke="#000000" points="4414.4227,-10784.2819 4424.156,-10780.097 4413.9374,-10777.2988 4414.4227,-10784.2819"/>
</g>
<!-- org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]] =&gt; Stream[scalaz.Tree[Int]]]&#45;&gt;org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]]] -->
<g id="edge202" class="edge">
<title>org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]] =&gt; Stream[scalaz.Tree[Int]]]&#45;&gt;org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]]]</title>
<path fill="none" stroke="#000000" d="M3246.9428,-10140.9664C3400.0128,-10185.2701 3734.9015,-10254.3583 3914.9868,-10078.8701 3932.2224,-10062.0744 3907.6966,-9989.4542 3922.9868,-9970.8701 4029.8718,-9840.9592 4219.9983,-9798.9157 4369.3705,-9787.3723"/>
<polygon fill="#000000" stroke="#000000" points="4369.8828,-9790.8443 4379.6009,-9786.6242 4369.3722,-9783.8629 4369.8828,-9790.8443"/>
</g>
<!-- scala.reflect.ClassTag[Stream[scalaz.Tree[Int]] =&gt; Stream[scalaz.Tree[Int]]] -->
<g id="node928" class="node">
<title>scala.reflect.ClassTag[Stream[scalaz.Tree[Int]] =&gt; Stream[scalaz.Tree[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-10006.8701" rx="308.0972" ry="26.7407"/>
<text text-anchor="start" x="4376.253" y="-10010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Stream[scalaz.Tree[Int]] =&gt; Stream[scalaz.Tree[Int]]]</text>
<text text-anchor="middle" x="4586.253" y="-9995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]] =&gt; Stream[scalaz.Tree[Int]]]&#45;&gt;scala.reflect.ClassTag[Stream[scalaz.Tree[Int]] =&gt; Stream[scalaz.Tree[Int]]] -->
<g id="edge630" class="edge">
<title>org.scalacheck.Arbitrary[Stream[scalaz.Tree[Int]] =&gt; Stream[scalaz.Tree[Int]]]&#45;&gt;scala.reflect.ClassTag[Stream[scalaz.Tree[Int]] =&gt; Stream[scalaz.Tree[Int]]]</title>
<path fill="none" stroke="#000000" d="M3253.03,-10140.7456C3405.8878,-10180.8533 3726.1653,-10237.9463 3914.9868,-10078.8701 3927.5217,-10068.3098 3910.4844,-10053.4687 3922.9868,-10042.8701 4080.8344,-9909.0577 4343.279,-9945.1491 4486.1304,-9978.7022"/>
<polygon fill="#000000" stroke="#000000" points="4485.6661,-9982.1898 4496.2059,-9981.1113 4487.294,-9975.3817 4485.6661,-9982.1898"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: shapeless.HNil,Out0] -->
<g id="node939" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: shapeless.HNil,Out0]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-29631.8701" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="4345.753" y="-29635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: shapeless.HNil,Out0]</text>
<text text-anchor="middle" x="4586.253" y="-29620.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Int :: Char :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: shapeless.HNil,Out0] -->
<g id="edge774" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[Int :: Char :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: shapeless.HNil,Out0]</title>
<path fill="none" stroke="#000000" d="M3430.102,-29631.8701C3653.6387,-29631.8701 3976.6789,-29631.8701 4224.5025,-29631.8701"/>
<polygon fill="#000000" stroke="#000000" points="4224.7642,-29635.3702 4234.7642,-29631.8701 4224.7641,-29628.3702 4224.7642,-29635.3702"/>
</g>
<!-- scalaz.Equal[scalaz.Maybe[Int]] -->
<g id="node716" class="node">
<title>scalaz.Equal[scalaz.Maybe[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-20671.8701" rx="136.4432" ry="26.7407"/>
<text text-anchor="start" x="5773.5954" y="-20675.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Maybe[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-20660.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 6ms</text>
</g>
<!-- scalaz.Equal[scalaz.Maybe[Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge49" class="edge">
<title>scalaz.Equal[scalaz.Maybe[Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5991.141,-20663.0993C6115.5219,-20658.4499 6307.7313,-20661.3565 6466.6717,-20707.8701 6687.6143,-20772.5285 6916.5093,-20933.5643 7006.4116,-21001.1947"/>
<polygon fill="#000000" stroke="#000000" points="7004.333,-21004.0108 7014.4206,-21007.2497 7008.5546,-20998.427 7004.333,-21004.0108"/>
</g>
<!-- org.scalacheck.Arbitrary[Boolean \/ Int =&gt; Boolean \/ Int] -->
<g id="node717" class="node">
<title>org.scalacheck.Arbitrary[Boolean \/ Int =&gt; Boolean \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-7665.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="4431.253" y="-7669.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Boolean / Int =&gt; Boolean / Int]</text>
<text text-anchor="middle" x="4586.253" y="-7654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 46ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Boolean \/ Int =&gt; Boolean \/ Int]&#45;&gt;org.scalacheck.Cogen[Boolean \/ Int] -->
<g id="edge900" class="edge">
<title>org.scalacheck.Arbitrary[Boolean \/ Int =&gt; Boolean \/ Int]&#45;&gt;org.scalacheck.Cogen[Boolean \/ Int]</title>
<path fill="none" stroke="#000000" d="M4794.0786,-7677.5983C5049.5966,-7692.0181 5477.4376,-7716.1625 5706.3731,-7729.0821"/>
<polygon fill="#000000" stroke="#000000" points="5706.2689,-7732.5817 5716.4502,-7729.6508 5706.6633,-7725.5928 5706.2689,-7732.5817"/>
</g>
<!-- org.scalacheck.Arbitrary[Boolean \/ Int =&gt; Boolean \/ Int]&#45;&gt;scala.reflect.ClassTag[Boolean \/ Int =&gt; Boolean \/ Int] -->
<g id="edge640" class="edge">
<title>org.scalacheck.Arbitrary[Boolean \/ Int =&gt; Boolean \/ Int]&#45;&gt;scala.reflect.ClassTag[Boolean \/ Int =&gt; Boolean \/ Int]</title>
<path fill="none" stroke="#000000" d="M4609.9635,-7638.9131C4690.1618,-7549.9253 4962.7667,-7265.001 5257.5191,-7155.8701 5391.1927,-7106.3779 5552.8286,-7099.2075 5675.3274,-7103.4147"/>
<polygon fill="#000000" stroke="#000000" points="5675.441,-7106.9212 5685.5643,-7103.7958 5675.7015,-7099.9261 5675.441,-7106.9212"/>
</g>
<!-- org.scalacheck.Arbitrary[Boolean \/ Int] -->
<g id="node1014" class="node">
<title>org.scalacheck.Arbitrary[Boolean \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-7665.8701" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="5754.5954" y="-7669.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Boolean / Int]</text>
<text text-anchor="middle" x="5862.0954" y="-7654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 57ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Boolean \/ Int =&gt; Boolean \/ Int]&#45;&gt;org.scalacheck.Arbitrary[Boolean \/ Int] -->
<g id="edge326" class="edge">
<title>org.scalacheck.Arbitrary[Boolean \/ Int =&gt; Boolean \/ Int]&#45;&gt;org.scalacheck.Arbitrary[Boolean \/ Int]</title>
<path fill="none" stroke="#000000" d="M4816.9289,-7665.8701C5067.5814,-7665.8701 5462.3857,-7665.8701 5688.1958,-7665.8701"/>
<polygon fill="#000000" stroke="#000000" points="5688.4866,-7669.3702 5698.4866,-7665.8701 5688.4865,-7662.3702 5688.4866,-7669.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, IsoSpec.this.IntWrapper)] -->
<g id="node718" class="node">
<title>org.scalacheck.Arbitrary[(Boolean, IsoSpec.this.IntWrapper)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-4951.8701" rx="250.1317" ry="26.7407"/>
<text text-anchor="start" x="5693.0954" y="-4955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Boolean, IsoSpec.this.IntWrapper)]</text>
<text text-anchor="middle" x="5862.0954" y="-4940.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 21ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, IsoSpec.this.IntWrapper)]&#45;&gt;scala.reflect.ClassTag[(Boolean, IsoSpec.this.IntWrapper)] -->
<g id="edge1314" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, IsoSpec.this.IntWrapper)]&#45;&gt;scala.reflect.ClassTag[(Boolean, IsoSpec.this.IntWrapper)]</title>
<path fill="none" stroke="#000000" d="M6112.4504,-4951.8701C6313.6493,-4951.8701 6594.8905,-4951.8701 6795.999,-4951.8701"/>
<polygon fill="#000000" stroke="#000000" points="6796.115,-4955.3702 6806.115,-4951.8701 6796.115,-4948.3702 6796.115,-4955.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, IsoSpec.this.IntWrapper)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge1295" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, IsoSpec.this.IntWrapper)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6062.042,-4935.6899C6216.5101,-4928.1237 6412.7634,-4930.9446 6466.6717,-4987.8701 6481.8183,-5003.8643 6459.5528,-6557.8497 6474.6717,-6573.8701 6531.227,-6633.7974 6754.2169,-6631.1963 6904.31,-6621.9264"/>
<polygon fill="#000000" stroke="#000000" points="6904.7794,-6625.4038 6914.5377,-6621.2775 6904.3362,-6618.4178 6904.7794,-6625.4038"/>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, IsoSpec.this.IntWrapper)]&#45;&gt;org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper] -->
<g id="edge792" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, IsoSpec.this.IntWrapper)]&#45;&gt;org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper]</title>
<path fill="none" stroke="#000000" d="M6081.7913,-4964.8151C6196.495,-4971.6084 6339.1538,-4980.1115 6466.6717,-4987.8701 6594.0936,-4995.6227 6737.2674,-5004.5178 6849.4037,-5011.5263"/>
<polygon fill="#000000" stroke="#000000" points="6849.2719,-5015.0248 6859.4708,-5012.1556 6849.7087,-5008.0384 6849.2719,-5015.0248"/>
</g>
<!-- scala.reflect.ClassTag[scalaz.NonEmptyList[Int] =&gt; scalaz.NonEmptyList[Int]] -->
<g id="node719" class="node">
<title>scala.reflect.ClassTag[scalaz.NonEmptyList[Int] =&gt; scalaz.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-11979.8701" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="5644.0954" y="-11983.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scalaz.NonEmptyList[Int] =&gt; scalaz.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-11968.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.FilterIndex[scalaz.NonEmptyList[Int],Int,Int] -->
<g id="node720" class="node">
<title>monocle.function.FilterIndex[scalaz.NonEmptyList[Int],Int,Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-45975.8701" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="478.1596" y="-45979.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[scalaz.NonEmptyList[Int],Int,Int]</text>
<text text-anchor="middle" x="652.6596" y="-45964.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Reverse[List[Int],List[Int]] -->
<g id="node721" class="node">
<title>monocle.function.Reverse[List[Int],List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-32871.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="529.1596" y="-32875.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[List[Int],List[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-32860.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 75ms</text>
</g>
<!-- monocle.function.Reverse[List[Int],List[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[List[Int],List[Int]] -->
<g id="edge127" class="edge">
<title>monocle.function.Reverse[List[Int],List[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[List[Int],List[Int]]</title>
<path fill="none" stroke="#000000" d="M835.0246,-32877.2986C1053.2469,-32883.7945 1418.038,-32894.6534 1649.0121,-32901.5289"/>
<polygon fill="#000000" stroke="#000000" points="1649.1238,-32905.0337 1659.2235,-32901.8329 1649.3321,-32898.0368 1649.1238,-32905.0337"/>
</g>
<!-- monocle.function.Reverse[List[Int],List[Int]]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[List[Int],List[Int]] -->
<g id="edge24" class="edge">
<title>monocle.function.Reverse[List[Int],List[Int]]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[List[Int],List[Int]]</title>
<path fill="none" stroke="#000000" d="M835.0246,-32866.4415C1052.4341,-32859.9698 1415.3228,-32849.1675 1646.4258,-32842.2882"/>
<polygon fill="#000000" stroke="#000000" points="1646.753,-32845.7801 1656.6444,-32841.984 1646.5446,-32838.7832 1646.753,-32845.7801"/>
</g>
<!-- scala.reflect.ClassTag[(Int, Option[Int])] -->
<g id="node722" class="node">
<title>scala.reflect.ClassTag[(Int, Option[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-15793.8701" rx="168.0831" ry="26.7407"/>
<text text-anchor="start" x="5751.0954" y="-15797.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Option[Int])]</text>
<text text-anchor="middle" x="5862.0954" y="-15782.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Possible[scalaz.Validation[Unit,Int],Int] -->
<g id="node724" class="node">
<title>monocle.function.Possible[scalaz.Validation[Unit,Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-46047.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="493.1596" y="-46051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Possible[scalaz.Validation[Unit,Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-46036.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Applicative[org.scalacheck.Gen] -->
<g id="node725" class="node">
<title>scalaz.Applicative[org.scalacheck.Gen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-46119.8701" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="1754.034" y="-46123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Applicative[org.scalacheck.Gen]</text>
<text text-anchor="middle" x="1862.034" y="-46108.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P) -->
<g id="node726" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-46191.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="511.1596" y="-46195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-46180.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Unit =&gt; Unit] -->
<g id="node727" class="node">
<title>org.scalacheck.Arbitrary[Unit =&gt; Unit]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-10189.8701" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="5754.0954" y="-10193.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Unit =&gt; Unit]</text>
<text text-anchor="middle" x="5862.0954" y="-10178.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 116ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Unit =&gt; Unit]&#45;&gt;org.scalacheck.Cogen[Unit] -->
<g id="edge183" class="edge">
<title>org.scalacheck.Arbitrary[Unit =&gt; Unit]&#45;&gt;org.scalacheck.Cogen[Unit]</title>
<path fill="none" stroke="#000000" d="M6020.2433,-10197.1424C6142.393,-10203.594 6315.5326,-10214.5536 6466.6717,-10230.8701 6633.2976,-10248.8584 6825.5144,-10279.3326 6941.2997,-10298.7584"/>
<polygon fill="#000000" stroke="#000000" points="6940.7842,-10302.2208 6951.2263,-10300.4282 6941.9455,-10295.3178 6940.7842,-10302.2208"/>
</g>
<!-- scala.reflect.ClassTag[Unit =&gt; Unit] -->
<g id="node751" class="node">
<title>scala.reflect.ClassTag[Unit =&gt; Unit]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-10189.8701" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="6945.514" y="-10193.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Unit =&gt; Unit]</text>
<text text-anchor="middle" x="7046.014" y="-10178.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 10ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Unit =&gt; Unit]&#45;&gt;scala.reflect.ClassTag[Unit =&gt; Unit] -->
<g id="edge1048" class="edge">
<title>org.scalacheck.Arbitrary[Unit =&gt; Unit]&#45;&gt;scala.reflect.ClassTag[Unit =&gt; Unit]</title>
<path fill="none" stroke="#000000" d="M6026.4031,-10189.8701C6252.3641,-10189.8701 6656.6273,-10189.8701 6882.2839,-10189.8701"/>
<polygon fill="#000000" stroke="#000000" points="6882.5607,-10193.3702 6892.5606,-10189.8701 6882.5606,-10186.3702 6882.5607,-10193.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Unit =&gt; Unit]&#45;&gt;org.scalacheck.Arbitrary[Unit] -->
<g id="edge188" class="edge">
<title>org.scalacheck.Arbitrary[Unit =&gt; Unit]&#45;&gt;org.scalacheck.Arbitrary[Unit]</title>
<path fill="none" stroke="#000000" d="M6024.8984,-10186.5528C6183.8948,-10187.2235 6409.9883,-10199.9208 6466.6717,-10263.8701 6479.1595,-10277.9586 6464.8996,-15669.7785 6474.6717,-15685.8701 6576.0779,-15852.8542 6804.9964,-15930.6897 6940.2757,-15963.2996"/>
<polygon fill="#000000" stroke="#000000" points="6939.7149,-15966.7635 6950.2524,-15965.6635 6941.3288,-15959.9521 6939.7149,-15966.7635"/>
</g>
<!-- shapeless.Generic.Aux[scala.util.Try[Int],SGen] -->
<g id="node728" class="node">
<title>shapeless.Generic.Aux[scala.util.Try[Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-46263.8701" rx="197.9798" ry="26.7407"/>
<text text-anchor="start" x="1730.034" y="-46267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scala.util.Try[Int],SGen]</text>
<text text-anchor="middle" x="1862.034" y="-46252.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- monocle.function.At[monocle.function.MMap[Int,String],Int,Option[String]] -->
<g id="node729" class="node">
<title>monocle.function.At[monocle.function.MMap[Int,String],Int,Option[String]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-46335.8701" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="440.6596" y="-46339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[monocle.function.MMap[Int,String],Int,Option[String]]</text>
<text text-anchor="middle" x="652.6596" y="-46324.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Plated[List[Int]] -->
<g id="node730" class="node">
<title>monocle.function.Plated[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-46407.8701" rx="144.5" ry="26.7407"/>
<text text-anchor="start" x="558.6596" y="-46411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Plated[List[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-46396.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[monocle.refined.EndsWithString[String(&#39;world&#39;)]] -->
<g id="node731" class="node">
<title>scalaz.Equal[monocle.refined.EndsWithString[String(&#39;world&#39;)]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-46479.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="479.6596" y="-46483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.refined.EndsWithString[String(&#39;world&#39;)]]</text>
<text text-anchor="middle" x="652.6596" y="-46468.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Choice[monocle.Lens] -->
<g id="node732" class="node">
<title>scalaz.Choice[monocle.Lens]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-46551.8701" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="571.6596" y="-46555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Choice[monocle.Lens]</text>
<text text-anchor="middle" x="652.6596" y="-46540.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[Option[scalaz.Cofree[Option,A]]] -->
<g id="node736" class="node">
<title>scalaz.Equal[Option[scalaz.Cofree[Option,A]]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-27993.8701" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="1733.034" y="-27997.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[scalaz.Cofree[Option,A]]]</text>
<text text-anchor="middle" x="1862.034" y="-27982.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- scalaz.Equal[Option[scalaz.Cofree[Option,A]]]&#45;&gt;scalaz.Equal[scalaz.Cofree[Option,A]] -->
<g id="edge492" class="edge">
<title>scalaz.Equal[Option[scalaz.Cofree[Option,A]]]&#45;&gt;scalaz.Equal[scalaz.Cofree[Option,A]]</title>
<path fill="none" stroke="#000000" d="M2055.9718,-27993.8701C2310.5537,-27993.8701 2753.4672,-27993.8701 2996.0177,-27993.8701"/>
<polygon fill="#000000" stroke="#000000" points="2996.3442,-27997.3702 3006.3442,-27993.8701 2996.3441,-27990.3702 2996.3442,-27997.3702"/>
</g>
<!-- scalaz.Equal[(Int, Option[Int])] -->
<g id="node737" class="node">
<title>scalaz.Equal[(Int, Option[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-22210.8701" rx="132.4583" ry="26.7407"/>
<text text-anchor="start" x="4500.753" y="-22214.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, Option[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-22199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[(Int, Option[Int])]&#45;&gt;scalaz.Equal[Option[Int]] -->
<g id="edge995" class="edge">
<title>scalaz.Equal[(Int, Option[Int])]&#45;&gt;scalaz.Equal[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4694.854,-22226.3097C4845.6711,-22240.8684 5115.108,-22240.5866 5249.5191,-22079.8701 5266.0946,-22060.0506 5239.7167,-21633.5952 5257.5191,-21614.8701 5322.3754,-21546.6523 5591.9649,-21553.7709 5748.3777,-21564.2365"/>
<polygon fill="#000000" stroke="#000000" points="5748.2977,-21567.7392 5758.5133,-21564.93 5748.7756,-21560.7555 5748.2977,-21567.7392"/>
</g>
<!-- scalaz.Equal[(Int, Option[Int])]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge482" class="edge">
<title>scalaz.Equal[(Int, Option[Int])]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4667.3233,-22189.5857C4808.2338,-22158.0303 5097.7611,-22118.2238 5249.5191,-22275.8701 5270.2075,-22297.3612 5235.8061,-22389.4147 5257.5191,-22409.8701 5306.414,-22455.9329 6418.7726,-22456.9676 6466.6717,-22409.8701 6485.4513,-22391.4047 6458.9173,-21956.9755 6474.6717,-21935.8701 6585.0945,-21787.9422 6817.0648,-21758.6143 6948.9438,-21754.5374"/>
<polygon fill="#000000" stroke="#000000" points="6949.14,-21758.0335 6959.0432,-21754.2685 6948.9536,-21751.036 6949.14,-21758.0335"/>
</g>
<!-- (=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P) -->
<g id="node738" class="node">
<title>(=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-46623.8701" rx="283.5996" ry="26.7407"/>
<text text-anchor="start" x="460.1596" y="-46627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-46612.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper]&#45;&gt;scala.reflect.ClassTag[IsoSpec.this.IntWrapper] -->
<g id="edge1340" class="edge">
<title>org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper]&#45;&gt;scala.reflect.ClassTag[IsoSpec.this.IntWrapper]</title>
<path fill="none" stroke="#000000" d="M7253.395,-5023.8701C7461.9376,-5023.8701 7781.6062,-5023.8701 7989.9307,-5023.8701"/>
<polygon fill="#000000" stroke="#000000" points="7990.0755,-5027.3702 8000.0754,-5023.8701 7990.0754,-5020.3702 7990.0755,-5027.3702"/>
</g>
<!-- scalaz.Equal[monocle.Unary =&gt; Int]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge1330" class="edge">
<title>scalaz.Equal[monocle.Unary =&gt; Int]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M6015.3594,-18974.5541C6174.6757,-18974.785 6408.7673,-18986.707 6466.6717,-19051.8701 6475.9712,-19062.3353 6469.8909,-21054.7115 6474.6717,-21067.8701 6584.9754,-21371.4631 6893.3316,-21635.9922 7004.9891,-21724.4465"/>
<polygon fill="#000000" stroke="#000000" points="7002.9749,-21727.3153 7012.9961,-21730.7543 7007.3067,-21721.8166 7002.9749,-21727.3153"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.Unary] -->
<g id="node1103" class="node">
<title>org.scalacheck.Arbitrary[monocle.Unary]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-18977.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="6931.514" y="-18981.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.Unary]</text>
<text text-anchor="middle" x="7046.014" y="-18966.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- scalaz.Equal[monocle.Unary =&gt; Int]&#45;&gt;org.scalacheck.Arbitrary[monocle.Unary] -->
<g id="edge506" class="edge">
<title>scalaz.Equal[monocle.Unary =&gt; Int]&#45;&gt;org.scalacheck.Arbitrary[monocle.Unary]</title>
<path fill="none" stroke="#000000" d="M6016.2648,-18977.8701C6233.7761,-18977.8701 6630.0778,-18977.8701 6862.4881,-18977.8701"/>
<polygon fill="#000000" stroke="#000000" points="6862.7436,-18981.3702 6872.7435,-18977.8701 6862.7435,-18974.3702 6862.7436,-18981.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Byte] -->
<g id="node741" class="node">
<title>org.scalacheck.Arbitrary[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-37587.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="1777.534" y="-37591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Byte]</text>
<text text-anchor="middle" x="1862.034" y="-37576.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 48ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Byte]&#45;&gt;scala.reflect.ClassTag[Byte] -->
<g id="edge781" class="edge">
<title>org.scalacheck.Arbitrary[Byte]&#45;&gt;scala.reflect.ClassTag[Byte]</title>
<path fill="none" stroke="#000000" d="M1993.1207,-37587.8701C2243.312,-37587.8701 2786.2066,-37587.8701 3036.1275,-37587.8701"/>
<polygon fill="#000000" stroke="#000000" points="3036.3498,-37591.3702 3046.3498,-37587.8701 3036.3497,-37584.3702 3036.3498,-37591.3702"/>
</g>
<!-- scala.collection.immutable.Map[Int,String] =&gt; ?{def should: ?} -->
<g id="node742" class="node">
<title>scala.collection.immutable.Map[Int,String] =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-25185.8701" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="476.6596" y="-25189.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[Int,String] =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="652.6596" y="-25174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.immutable.Map[Int,String] =&gt; ?{def should: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge821" class="edge">
<title>scala.collection.immutable.Map[Int,String] =&gt; ?{def should: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M854.3714,-25168.8806C1022.4258,-25159.6228 1243.8707,-25160.4459 1305.3191,-25221.8701 1327.9859,-25244.5279 1290.7706,-25343.0945 1313.3191,-25365.8701 1437.2836,-25491.0824 1667.7051,-25454.464 1786.6529,-25424.2763"/>
<polygon fill="#000000" stroke="#000000" points="1787.6116,-25427.6435 1796.4155,-25421.7493 1785.8574,-25420.8669 1787.6116,-25427.6435"/>
</g>
<!-- scala.collection.immutable.Map[Int,String] =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1211" class="edge">
<title>scala.collection.immutable.Map[Int,String] =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M906.7533,-25191.8295C1027.798,-25196.7239 1174.3997,-25205.6375 1305.3191,-25221.8701 1469.9433,-25242.2816 1659.0258,-25282.6083 1769.0595,-25307.7934"/>
<polygon fill="#000000" stroke="#000000" points="1768.6007,-25311.2791 1779.1305,-25310.1068 1770.1679,-25304.4568 1768.6007,-25311.2791"/>
</g>
<!-- Fractional[scala.collection.immutable.Map[Int,String]] -->
<g id="node743" class="node">
<title>Fractional[scala.collection.immutable.Map[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-314.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="5711.5954" y="-318.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[scala.collection.immutable.Map[Int,String]]</text>
<text text-anchor="middle" x="5862.0954" y="-303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[HListSpec.this.HInit] -->
<g id="node745" class="node">
<title>scalaz.Equal[HListSpec.this.HInit]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-16949.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="6951.014" y="-16953.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[HListSpec.this.HInit]</text>
<text text-anchor="middle" x="7046.014" y="-16938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[IsoSpec.this.IdWrapper[Int]] -->
<g id="node746" class="node">
<title>scalaz.Equal[IsoSpec.this.IdWrapper[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-22953.8701" rx="174.8109" ry="26.7407"/>
<text text-anchor="start" x="5746.5954" y="-22957.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[IsoSpec.this.IdWrapper[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-22942.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scalaz.Equal[IsoSpec.this.IdWrapper[Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge351" class="edge">
<title>scalaz.Equal[IsoSpec.this.IdWrapper[Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M6013.5953,-22967.2518C6172.3344,-22977.5281 6406.8365,-22980.8581 6466.6717,-22917.8701 6485.4593,-22898.0925 6458.4496,-21957.8011 6474.6717,-21935.8701 6584.5231,-21787.3598 6816.987,-21758.2797 6949.0332,-21754.3938"/>
<polygon fill="#000000" stroke="#000000" points="6949.2361,-21757.8899 6959.145,-21754.1397 6949.0602,-21750.8921 6949.2361,-21757.8899"/>
</g>
<!-- shapeless.ops.hlist.Last[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil] -->
<g id="node747" class="node">
<title>shapeless.ops.hlist.Last[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-33798.8701" rx="337.08" ry="26.7407"/>
<text text-anchor="start" x="2936.3678" y="-33802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Last[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="3166.8678" y="-33787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.Last[Char :: Float :: Long :: Double :: shapeless.HNil] -->
<g id="node1232" class="node">
<title>shapeless.ops.hlist.Last[Char :: Float :: Long :: Double :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-33798.8701" rx="294.7271" ry="26.7407"/>
<text text-anchor="start" x="4385.753" y="-33802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Last[Char :: Float :: Long :: Double :: shapeless.HNil]</text>
<text text-anchor="middle" x="4586.253" y="-33787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.Last[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Last[Char :: Float :: Long :: Double :: shapeless.HNil] -->
<g id="edge1249" class="edge">
<title>shapeless.ops.hlist.Last[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Last[Char :: Float :: Long :: Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M3504.5923,-33798.8701C3740.5035,-33798.8701 4052.8555,-33798.8701 4281.2352,-33798.8701"/>
<polygon fill="#000000" stroke="#000000" points="4281.3644,-33802.3702 4291.3644,-33798.8701 4281.3644,-33795.3702 4281.3644,-33802.3702"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._4,Double,(Double, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="node761" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._4,Double,(Double, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-38127.8701" rx="748.238" ry="26.7407"/>
<text text-anchor="start" x="2645.8678" y="-38131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._4,Double,(Double, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]</text>
<text text-anchor="middle" x="3166.8678" y="-38116.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._5.N,Double,(Double, HListSpec.this.H)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._4,Double,(Double, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="edge802" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._5.N,Double,(Double, HListSpec.this.H)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._4,Double,(Double, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M2294.2595,-38127.8701C2331.3795,-38127.8701 2369.5769,-38127.8701 2408.2867,-38127.8701"/>
<polygon fill="#000000" stroke="#000000" points="2408.6761,-38131.3702 2418.676,-38127.8701 2408.676,-38124.3702 2408.6761,-38131.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Int \/ Boolean =&gt; Int \/ Boolean] -->
<g id="node750" class="node">
<title>org.scalacheck.Arbitrary[Int \/ Boolean =&gt; Int \/ Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-12204.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="4431.253" y="-12208.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Int / Boolean =&gt; Int / Boolean]</text>
<text text-anchor="middle" x="4586.253" y="-12193.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 57ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int \/ Boolean =&gt; Int \/ Boolean]&#45;&gt;org.scalacheck.Arbitrary[Int \/ Boolean] -->
<g id="edge642" class="edge">
<title>org.scalacheck.Arbitrary[Int \/ Boolean =&gt; Int \/ Boolean]&#45;&gt;org.scalacheck.Arbitrary[Int \/ Boolean]</title>
<path fill="none" stroke="#000000" d="M4769.2577,-12221.2821C4942.3433,-12232.3172 5184.9471,-12234.6599 5249.5191,-12168.8701 5267.0419,-12151.0168 5240.0432,-11961.7693 5257.5191,-11943.8701 5317.761,-11882.1687 5548.9968,-11884.755 5707.3786,-11894.578"/>
<polygon fill="#000000" stroke="#000000" points="5707.5008,-11898.0928 5717.7029,-11895.2349 5707.9454,-11891.1069 5707.5008,-11898.0928"/>
</g>
<!-- scala.reflect.ClassTag[Int \/ Boolean =&gt; Int \/ Boolean] -->
<g id="node930" class="node">
<title>scala.reflect.ClassTag[Int \/ Boolean =&gt; Int \/ Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-11763.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="5714.5954" y="-11767.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Int / Boolean =&gt; Int / Boolean]</text>
<text text-anchor="middle" x="5862.0954" y="-11752.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int \/ Boolean =&gt; Int \/ Boolean]&#45;&gt;scala.reflect.ClassTag[Int \/ Boolean =&gt; Int \/ Boolean] -->
<g id="edge1074" class="edge">
<title>org.scalacheck.Arbitrary[Int \/ Boolean =&gt; Int \/ Boolean]&#45;&gt;scala.reflect.ClassTag[Int \/ Boolean =&gt; Int \/ Boolean]</title>
<path fill="none" stroke="#000000" d="M4768.2334,-12221.392C4941.5474,-12232.6403 5185.2543,-12235.2613 5249.5191,-12168.8701 5263.7803,-12154.1369 5243.2966,-11814.6406 5257.5191,-11799.8701 5312.7377,-11742.5238 5514.1603,-11740.4231 5669.5062,-11748.2761"/>
<polygon fill="#000000" stroke="#000000" points="5669.5008,-11751.7806 5679.6699,-11748.8073 5669.8662,-11744.7901 5669.5008,-11751.7806"/>
</g>
<!-- org.scalacheck.Cogen[Int \/ Boolean] -->
<g id="node1109" class="node">
<title>org.scalacheck.Cogen[Int \/ Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-9685.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="5762.0954" y="-9689.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Int / Boolean]</text>
<text text-anchor="middle" x="5862.0954" y="-9674.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 13ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int \/ Boolean =&gt; Int \/ Boolean]&#45;&gt;org.scalacheck.Cogen[Int \/ Boolean] -->
<g id="edge85" class="edge">
<title>org.scalacheck.Arbitrary[Int \/ Boolean =&gt; Int \/ Boolean]&#45;&gt;org.scalacheck.Cogen[Int \/ Boolean]</title>
<path fill="none" stroke="#000000" d="M4767.274,-12221.5585C4940.8642,-12233.0673 5185.7191,-12236.0067 5249.5191,-12168.8701 5272.9311,-12144.2337 5234.1719,-9746.5678 5257.5191,-9721.8701 5317.9062,-9657.9898 5557.3182,-9662.1977 5716.1378,-9672.8024"/>
<polygon fill="#000000" stroke="#000000" points="5716.2642,-9676.3191 5726.4797,-9673.5095 5716.7417,-9669.3355 5716.2642,-9676.3191"/>
</g>
<!-- ((Int, IsoSpec.this.IntWrapper)) =&gt; ?{def shouldEqual: ?} -->
<g id="node752" class="node">
<title>((Int, IsoSpec.this.IntWrapper)) =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-25113.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="493.1596" y="-25117.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, IsoSpec.this.IntWrapper)) =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-25102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- ((Int, IsoSpec.this.IntWrapper)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge165" class="edge">
<title>((Int, IsoSpec.this.IntWrapper)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M840.3629,-25097.4394C1010.0925,-25087.178 1242.7014,-25086.1097 1305.3191,-25149.8701 1322.1471,-25167.0051 1296.5806,-25348.6476 1313.3191,-25365.8701 1436.2833,-25492.3888 1667.6652,-25455.0022 1786.8524,-25424.4218"/>
<polygon fill="#000000" stroke="#000000" points="1787.8451,-25427.78 1796.6335,-25421.8627 1786.0732,-25421.008 1787.8451,-25427.78"/>
</g>
<!-- ((Int, IsoSpec.this.IntWrapper)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1004" class="edge">
<title>((Int, IsoSpec.this.IntWrapper)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M889.2733,-25112.3064C1013.9661,-25115.1504 1168.9279,-25124.4997 1305.3191,-25149.8701 1487.6242,-25183.7809 1693.0175,-25260.8583 1795.8693,-25302.2954"/>
<polygon fill="#000000" stroke="#000000" points="1794.6156,-25305.5637 1805.1983,-25306.0696 1797.2409,-25299.0746 1794.6156,-25305.5637"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Stream[Int],Stream[Int]] -->
<g id="node753" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[Stream[Int],Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-33510.8701" rx="233.1906" ry="26.7407"/>
<text text-anchor="start" x="1705.034" y="-33514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[Stream[Int],Stream[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-33499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Stream[Int],Stream[Int]] -->
<g id="node1076" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Stream[Int],Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-33510.8701" rx="313.4968" ry="26.7407"/>
<text text-anchor="start" x="2953.3678" y="-33514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Stream[Int],Stream[Int]]</text>
<text text-anchor="middle" x="3166.8678" y="-33499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Stream[Int],Stream[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Stream[Int],Stream[Int]] -->
<g id="edge260" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[Stream[Int],Stream[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Stream[Int],Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M2095.6885,-33510.8701C2304.0317,-33510.8701 2611.05,-33510.8701 2843.0469,-33510.8701"/>
<polygon fill="#000000" stroke="#000000" points="2843.3434,-33514.3702 2853.3433,-33510.8701 2843.3433,-33507.3702 2843.3434,-33514.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Cofree[Option,Int]] -->
<g id="node755" class="node">
<title>org.scalacheck.Arbitrary[scalaz.Cofree[Option,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-13295.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="5720.5954" y="-13299.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.Cofree[Option,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-13284.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 27ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Cofree[Option,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1253" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Cofree[Option,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6070.3516,-13300.6195C6313.239,-13306.1587 6707.5628,-13315.1515 6912.6114,-13319.8277"/>
<polygon fill="#000000" stroke="#000000" points="6912.7555,-13323.3318 6922.8327,-13320.0608 6912.9152,-13316.3337 6912.7555,-13323.3318"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="node756" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-36723.8701" rx="317.4819" ry="26.7407"/>
<text text-anchor="start" x="5645.5954" y="-36727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,shapeless.HNil,Out]</text>
<text text-anchor="middle" x="5862.0954" y="-36712.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int ==&gt;&gt; String] -->
<g id="node758" class="node">
<title>org.scalacheck.Arbitrary[Int ==&gt;&gt; String]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-14235.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="5746.0954" y="-14239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Int ==&gt;&gt; String]</text>
<text text-anchor="middle" x="5862.0954" y="-14224.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 38ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int ==&gt;&gt; String]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge155" class="edge">
<title>org.scalacheck.Arbitrary[Int ==&gt;&gt; String]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6014.0368,-14249.3519C6172.8415,-14259.6774 6407.0965,-14263.0137 6466.6717,-14199.8701 6480.9449,-14184.742 6461.309,-8225.8081 6474.6717,-8209.8701 6583.743,-8079.7786 6796.7255,-8076.7437 6929.5965,-8089.8716"/>
<polygon fill="#000000" stroke="#000000" points="6929.5078,-8093.381 6939.8149,-8090.9286 6930.2281,-8086.4182 6929.5078,-8093.381"/>
</g>
<!-- org.scalacheck.Arbitrary[Int ==&gt;&gt; String]&#45;&gt;scalaz.Order[Int] -->
<g id="edge286" class="edge">
<title>org.scalacheck.Arbitrary[Int ==&gt;&gt; String]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M6014.0367,-14222.3883C6172.8412,-14212.063 6407.0961,-14208.7268 6466.6717,-14271.8701 6480.8068,-14286.8516 6468.5322,-20184.2091 6474.6717,-20203.8701 6585.5005,-20558.784 6907.1184,-20896.0182 7012.2939,-20999.5317"/>
<polygon fill="#000000" stroke="#000000" points="7009.8939,-21002.0801 7019.4867,-21006.5778 7014.7924,-20997.0796 7009.8939,-21002.0801"/>
</g>
<!-- org.scalacheck.Arbitrary[Int ==&gt;&gt; String]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge509" class="edge">
<title>org.scalacheck.Arbitrary[Int ==&gt;&gt; String]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6014.5983,-14249.2465C6173.2502,-14259.4021 6406.7649,-14262.5175 6466.6717,-14199.8701 6477.0781,-14188.9876 6467.0907,-13670.8796 6474.6717,-13657.8701 6579.4403,-13478.0795 6821.6023,-13385.0726 6954.5494,-13345.9989"/>
<polygon fill="#000000" stroke="#000000" points="6955.6912,-13349.3121 6964.3213,-13343.1663 6953.7423,-13342.5889 6955.6912,-13349.3121"/>
</g>
<!-- org.scalacheck.Shrink[String] -->
<g id="node759" class="node">
<title>org.scalacheck.Shrink[String]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-170.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="6964.514" y="-174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[String]</text>
<text text-anchor="middle" x="7046.014" y="-159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Shrink[String]&#45;&gt;Integral[String] -->
<g id="edge711" class="edge">
<title>org.scalacheck.Shrink[String]&#45;&gt;Integral[String]</title>
<path fill="none" stroke="#000000" d="M7172.7248,-170.8701C7410.4315,-170.8701 7917.1022,-170.8701 8115.0537,-170.8701"/>
<polygon fill="#000000" stroke="#000000" points="8115.096,-174.3702 8125.096,-170.8701 8115.096,-167.3702 8115.096,-174.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, scalaz.IList[Char])]&#45;&gt;org.scalacheck.Arbitrary[scalaz.IList[Char]] -->
<g id="edge1073" class="edge">
<title>org.scalacheck.Arbitrary[(Char, scalaz.IList[Char])]&#45;&gt;org.scalacheck.Arbitrary[scalaz.IList[Char]]</title>
<path fill="none" stroke="#000000" d="M4703.0904,-4034.3104C4836.6333,-4059.109 5062.0163,-4098.3767 5257.5191,-4119.8701 5396.7926,-4135.1816 5554.8824,-4144.3072 5674.4646,-4149.538"/>
<polygon fill="#000000" stroke="#000000" points="5674.3154,-4153.0347 5684.4572,-4149.97 5674.6178,-4146.0413 5674.3154,-4153.0347"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, scalaz.IList[Char])]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge29" class="edge">
<title>org.scalacheck.Arbitrary[(Char, scalaz.IList[Char])]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M4658.5933,-4037.1937C4780.386,-4078.4778 5034.912,-4158.9769 5257.5191,-4191.8701 5324.0055,-4201.6943 6419.5457,-4181.9524 6466.6717,-4229.8701 6487.7877,-4251.3408 6453.8966,-4750.0694 6474.6717,-4771.8701 6532.8579,-4832.9287 6765.0266,-4828.8489 6914.9048,-4819.1642"/>
<polygon fill="#000000" stroke="#000000" points="6915.3559,-4822.642 6925.1026,-4818.4884 6914.893,-4815.6574 6915.3559,-4822.642"/>
</g>
<!-- scala.reflect.ClassTag[(Char, scalaz.IList[Char])] -->
<g id="node1369" class="node">
<title>scala.reflect.ClassTag[(Char, scalaz.IList[Char])]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-3541.8701" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="5727.5954" y="-3545.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Char, scalaz.IList[Char])]</text>
<text text-anchor="middle" x="5862.0954" y="-3530.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Char, scalaz.IList[Char])]&#45;&gt;scala.reflect.ClassTag[(Char, scalaz.IList[Char])] -->
<g id="edge842" class="edge">
<title>org.scalacheck.Arbitrary[(Char, scalaz.IList[Char])]&#45;&gt;scala.reflect.ClassTag[(Char, scalaz.IList[Char])]</title>
<path fill="none" stroke="#000000" d="M4796.0533,-4015.9983C4947.4835,-4006.5783 5143.2855,-3966.3356 5249.5191,-3831.8701 5267.0233,-3809.7141 5237.8345,-3598.1135 5257.5191,-3577.8701 5314.3632,-3519.4122 5524.2347,-3518.573 5680.8496,-3526.9935"/>
<polygon fill="#000000" stroke="#000000" points="5680.9079,-3530.5021 5691.0863,-3527.5611 5681.2954,-3523.5128 5680.9079,-3530.5021"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3,Double,(Double, Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="node788" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3,Double,(Double, Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-38127.8701" rx="663.0324" ry="26.7407"/>
<text text-anchor="start" x="4125.253" y="-38131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3,Double,(Double, Char :: Float :: Long :: Double :: shapeless.HNil)]</text>
<text text-anchor="middle" x="4586.253" y="-38116.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._4,Double,(Double, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3,Double,(Double, Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="edge145" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._4,Double,(Double, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3,Double,(Double, Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M3915.0084,-38127.8701C3915.17,-38127.8701 3915.3316,-38127.8701 3915.4931,-38127.8701"/>
<polygon fill="#000000" stroke="#000000" points="3912.7618,-38131.3702 3922.7618,-38127.8701 3912.7618,-38124.3702 3912.7618,-38131.3702"/>
</g>
<!-- scalaz.Equal[scalaz.IList[Char]] -->
<g id="node762" class="node">
<title>scalaz.Equal[scalaz.IList[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-19519.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="5774.5954" y="-19523.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.IList[Char]]</text>
<text text-anchor="middle" x="5862.0954" y="-19508.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 19ms</text>
</g>
<!-- scalaz.Equal[scalaz.IList[Char]]&#45;&gt;scalaz.Order[Char] -->
<g id="edge499" class="edge">
<title>scalaz.Equal[scalaz.IList[Char]]&#45;&gt;scalaz.Order[Char]</title>
<path fill="none" stroke="#000000" d="M5996.2926,-19516.5283C6119.8217,-19516.1142 6307.4696,-19522.2411 6466.6717,-19555.8701 6666.5455,-19598.0903 6889.4139,-19696.907 6990.6316,-19744.8409"/>
<polygon fill="#000000" stroke="#000000" points="6989.2172,-19748.0439 6999.7512,-19749.1782 6992.2238,-19741.7224 6989.2172,-19748.0439"/>
</g>
<!-- scalaz.Equal[scalaz.IList[Char]]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge922" class="edge">
<title>scalaz.Equal[scalaz.IList[Char]]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M5997.3291,-19519.8701C6239.5396,-19519.8701 6741.5889,-19519.8701 6951.027,-19519.8701"/>
<polygon fill="#000000" stroke="#000000" points="6951.0791,-19523.3702 6961.0791,-19519.8701 6951.0791,-19516.3702 6951.0791,-19523.3702"/>
</g>
<!-- scalaz.Compose[monocle.Fold] -->
<g id="node763" class="node">
<title>scalaz.Compose[monocle.Fold]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-46695.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="565.6596" y="-46699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Compose[monocle.Fold]</text>
<text text-anchor="middle" x="652.6596" y="-46684.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, Int)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge1175" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, Int)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6007.9446,-12982.9506C6166.7847,-12993.5819 6406.3318,-12997.8282 6466.6717,-12933.8701 6481.6545,-12917.9889 6459.7164,-6661.7771 6474.6717,-6645.8701 6531.1139,-6585.8361 6754.1372,-6588.4687 6904.2679,-6597.774"/>
<polygon fill="#000000" stroke="#000000" points="6904.296,-6601.2828 6914.4982,-6598.4253 6904.7408,-6594.297 6904.296,-6601.2828"/>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge676" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6019.0041,-12960.601C6142.942,-12957.6831 6319.0123,-12963.3984 6466.6717,-13005.8701 6684.6446,-13068.5663 6911.6907,-13223.66 7003.6262,-13290.912"/>
<polygon fill="#000000" stroke="#000000" points="7001.7068,-13293.845 7011.837,-13296.9483 7005.8531,-13288.2051 7001.7068,-13293.845"/>
</g>
<!-- scala.reflect.ClassTag[(Boolean, Int)] -->
<g id="node1338" class="node">
<title>scala.reflect.ClassTag[(Boolean, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-12969.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="6943.514" y="-12973.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Boolean, Int)]</text>
<text text-anchor="middle" x="7046.014" y="-12958.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 11ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, Int)]&#45;&gt;scala.reflect.ClassTag[(Boolean, Int)] -->
<g id="edge536" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, Int)]&#45;&gt;scala.reflect.ClassTag[(Boolean, Int)]</title>
<path fill="none" stroke="#000000" d="M6029.211,-12969.8701C6254.7302,-12969.8701 6654.1235,-12969.8701 6879.3898,-12969.8701"/>
<polygon fill="#000000" stroke="#000000" points="6879.6518,-12973.3702 6889.6518,-12969.8701 6879.6517,-12966.3702 6879.6518,-12973.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge723" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4753.23,-10821.162C4927.3477,-10808.9265 5183.9198,-10803.9633 5249.5191,-10872.8701 5264.679,-10888.7943 5242.1462,-12440.1515 5257.5191,-12455.8701 5351.4923,-12551.9559 6372.1993,-12393.275 6466.6717,-12488.8701 6486.8635,-12509.3018 6459.9062,-12981.2298 6474.6717,-13005.8701 6578.7704,-13179.5877 6815.5491,-13265.1814 6949.3191,-13301.0766"/>
<polygon fill="#000000" stroke="#000000" points="6948.6023,-13304.5072 6959.1647,-13303.6786 6950.391,-13297.7396 6948.6023,-13304.5072"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int]]&#45;&gt;org.scalacheck.Arbitrary[List[Int]] -->
<g id="edge411" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[List,Int]]&#45;&gt;org.scalacheck.Arbitrary[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4753.2379,-10852.5857C4927.3626,-10864.8278 5183.9407,-10869.7967 5249.5191,-10800.8701 5266.742,-10782.7678 5240.3438,-9020.0175 5257.5191,-9001.8701 5318.651,-8937.2781 5562.9729,-8942.33 5721.6941,-8953.1897"/>
<polygon fill="#000000" stroke="#000000" points="5721.8021,-8956.7058 5732.0221,-8953.9128 5722.291,-8949.7229 5721.8021,-8956.7058"/>
</g>
<!-- scalaz.Equal[Stream[Stream[Int]]]&#45;&gt;scalaz.Equal[Stream[Int]] -->
<g id="edge972" class="edge">
<title>scalaz.Equal[Stream[Stream[Int]]]&#45;&gt;scalaz.Equal[Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4667.2517,-22435.499C4803.2715,-22403.201 5079.3636,-22360.9203 5249.5191,-22493.8701 5259.0461,-22501.3139 5248.0118,-22512.4013 5257.5191,-22519.8701 5330.6397,-22577.3122 5591.3025,-22572.5661 5745.4649,-22564.1432"/>
<polygon fill="#000000" stroke="#000000" points="5745.6734,-22567.6371 5755.4622,-22563.5837 5745.2822,-22560.648 5745.6734,-22567.6371"/>
</g>
<!-- shapeless.ops.hlist.Init[shapeless.HNil] -->
<g id="node768" class="node">
<title>shapeless.ops.hlist.Init[shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="9347.3831" cy="-33654.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="9240.3831" y="-33658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init[shapeless.HNil]</text>
<text text-anchor="middle" x="9347.3831" y="-33643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Long]&#45;&gt;scala.reflect.ClassTag[Long] -->
<g id="edge1310" class="edge">
<title>org.scalacheck.Arbitrary[Long]&#45;&gt;scala.reflect.ClassTag[Long]</title>
<path fill="none" stroke="#000000" d="M7179.1362,-5464.8701C7400.8302,-5464.8701 7843.1096,-5464.8701 8064.3135,-5464.8701"/>
<polygon fill="#000000" stroke="#000000" points="8064.3545,-5468.3702 8074.3545,-5464.8701 8064.3544,-5461.3702 8064.3545,-5468.3702"/>
</g>
<!-- scalaz.Order[A] -->
<g id="node770" class="node">
<title>scalaz.Order[A]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-46767.8701" rx="73.5782" ry="26.7407"/>
<text text-anchor="start" x="608.6596" y="-46771.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[A]</text>
<text text-anchor="middle" x="652.6596" y="-46756.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Each[Map[Int,String],String] -->
<g id="node772" class="node">
<title>monocle.function.Each[Map[Int,String],String]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-46839.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="523.1596" y="-46843.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Map[Int,String],String]</text>
<text text-anchor="middle" x="652.6596" y="-46828.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- shapeless.Generic.Aux[Map[Int,String],SGen] -->
<g id="node1444" class="node">
<title>shapeless.Generic.Aux[Map[Int,String],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-46839.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="1735.034" y="-46843.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Map[Int,String],SGen]</text>
<text text-anchor="middle" x="1862.034" y="-46828.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- monocle.function.Each[Map[Int,String],String]&#45;&gt;shapeless.Generic.Aux[Map[Int,String],SGen] -->
<g id="edge556" class="edge">
<title>monocle.function.Each[Map[Int,String],String]&#45;&gt;shapeless.Generic.Aux[Map[Int,String],SGen]</title>
<path fill="none" stroke="#000000" d="M847.3022,-46839.8701C1070.4589,-46839.8701 1434.4843,-46839.8701 1660.4954,-46839.8701"/>
<polygon fill="#000000" stroke="#000000" points="1660.8175,-46843.3702 1670.8175,-46839.8701 1660.8174,-46836.3702 1660.8175,-46843.3702"/>
</g>
<!-- scalaz.Functor[F$macro$16] -->
<g id="node773" class="node">
<title>scalaz.Functor[F$macro$16]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-46911.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="574.1596" y="-46915.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$16]</text>
<text text-anchor="middle" x="652.6596" y="-46900.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[(Int, Boolean)] -->
<g id="node775" class="node">
<title>scalaz.Equal[(Int, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-19591.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="5785.0954" y="-19595.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, Boolean)]</text>
<text text-anchor="middle" x="5862.0954" y="-19580.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 12ms</text>
</g>
<!-- scalaz.Equal[(Int, Boolean)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge371" class="edge">
<title>scalaz.Equal[(Int, Boolean)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5972.7763,-19581.3667C6128.7545,-19569.2988 6401.5395,-19559.1277 6466.6717,-19627.8701 6480.4277,-19642.3885 6467.827,-21049.0775 6474.6717,-21067.8701 6585.2163,-21371.3754 6893.4219,-21635.9593 7005.0145,-21724.4373"/>
<polygon fill="#000000" stroke="#000000" points="7002.997,-21727.3036 7013.0167,-21730.7467 7007.3311,-21721.8067 7002.997,-21727.3036"/>
</g>
<!-- scalaz.Equal[(Int, Boolean)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge1037" class="edge">
<title>scalaz.Equal[(Int, Boolean)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M5973.0559,-19602.3555C6129.0311,-19614.3587 6401.4132,-19624.4019 6466.6717,-19555.8701 6481.1924,-19540.621 6462.4107,-18814.9889 6474.6717,-18797.8701 6580.4419,-18650.1935 6803.6298,-18610.295 6937.6044,-18599.9624"/>
<polygon fill="#000000" stroke="#000000" points="6938.1706,-18603.4305 6947.8901,-18599.2137 6937.6623,-18596.449 6938.1706,-18603.4305"/>
</g>
<!-- scala.collection.immutable.Stream[Int] =&gt; ?{def #:::: ?} -->
<g id="node776" class="node">
<title>scala.collection.immutable.Stream[Int] =&gt; ?{def #:::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-46983.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="497.6596" y="-46987.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Stream[Int] =&gt; ?{def #:::: ?}</text>
<text text-anchor="middle" x="652.6596" y="-46972.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; Double) =&gt; Int -->
<g id="node777" class="node">
<title>(=&gt; Double) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-47055.8701" rx="88.2768" ry="26.7407"/>
<text text-anchor="start" x="598.1596" y="-47059.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Double) =&gt; Int</text>
<text text-anchor="middle" x="652.6596" y="-47044.6701" font-family="Times,serif" font-size="14.00" fill="#000000">19 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[IsoSpec.this.EmptyCaseType[Int]] -->
<g id="node778" class="node">
<title>org.scalacheck.Arbitrary[IsoSpec.this.EmptyCaseType[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-40647.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="488.6596" y="-40651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[IsoSpec.this.EmptyCaseType[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-40636.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Arbitrary[IsoSpec.this.EmptyCaseType[Int]]&#45;&gt;scala.reflect.ClassTag[IsoSpec.this.EmptyCaseType[Int]] -->
<g id="edge62" class="edge">
<title>org.scalacheck.Arbitrary[IsoSpec.this.EmptyCaseType[Int]]&#45;&gt;scala.reflect.ClassTag[IsoSpec.this.EmptyCaseType[Int]]</title>
<path fill="none" stroke="#000000" d="M895.9397,-40647.8701C1106.2351,-40647.8701 1408.6451,-40647.8701 1618.8983,-40647.8701"/>
<polygon fill="#000000" stroke="#000000" points="1619.1534,-40651.3702 1629.1534,-40647.8701 1619.1533,-40644.3702 1619.1534,-40651.3702"/>
</g>
<!-- scalaz.Equal[Either[Unit,Int]] -->
<g id="node779" class="node">
<title>scalaz.Equal[Either[Unit,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-18393.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="5780.5954" y="-18397.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Either[Unit,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-18382.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 5ms</text>
</g>
<!-- scalaz.Equal[Either[Unit,Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge724" class="edge">
<title>scalaz.Equal[Either[Unit,Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5978.0385,-18382.943C6134.8387,-18371.0333 6402.3484,-18361.8097 6466.6717,-18429.8701 6479.2549,-18443.1843 6468.4239,-21050.6489 6474.6717,-21067.8701 6584.8333,-21371.5146 6893.2784,-21636.0115 7004.9742,-21724.4519"/>
<polygon fill="#000000" stroke="#000000" points="7002.9618,-21727.3222 7012.9839,-21730.7587 7007.2923,-21721.8224 7002.9618,-21727.3222"/>
</g>
<!-- scalaz.Equal[Either[Unit,Int]]&#45;&gt;scalaz.Equal[Unit] -->
<g id="edge824" class="edge">
<title>scalaz.Equal[Either[Unit,Int]]&#45;&gt;scalaz.Equal[Unit]</title>
<path fill="none" stroke="#000000" d="M5978.0018,-18404.7624C6134.7583,-18416.6307 6402.2163,-18425.8052 6466.6717,-18357.8701 6488.7738,-18334.5748 6452.6099,-17225.2035 6474.6717,-17201.8701 6604.0161,-17065.0709 6854.763,-17111.0078 6976.4335,-17144.1523"/>
<polygon fill="#000000" stroke="#000000" points="6975.8115,-17147.6119 6986.3832,-17146.913 6977.683,-17140.8667 6975.8115,-17147.6119"/>
</g>
<!-- scala.reflect.ClassTag[monocle.refined.UpperCaseChar =&gt; monocle.refined.UpperCaseChar] -->
<g id="node780" class="node">
<title>scala.reflect.ClassTag[monocle.refined.UpperCaseChar =&gt; monocle.refined.UpperCaseChar]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-1953.8701" rx="372.7906" ry="26.7407"/>
<text text-anchor="start" x="5606.5954" y="-1957.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[monocle.refined.UpperCaseChar =&gt; monocle.refined.UpperCaseChar]</text>
<text text-anchor="middle" x="5862.0954" y="-1942.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[monocle.function.CNel] -->
<g id="node782" class="node">
<title>scalaz.Equal[monocle.function.CNel]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-47127.8701" rx="156.9554" ry="26.7407"/>
<text text-anchor="start" x="549.6596" y="-47131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.function.CNel]</text>
<text text-anchor="middle" x="652.6596" y="-47116.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[CoproductSpec.this.IB,Int] -->
<g id="node783" class="node">
<title>shapeless.ops.coproduct.Inject[CoproductSpec.this.IB,Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-47199.8701" rx="236.3475" ry="26.7407"/>
<text text-anchor="start" x="493.6596" y="-47203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Inject[CoproductSpec.this.IB,Int]</text>
<text text-anchor="middle" x="652.6596" y="-47188.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.util.Buildable[A,List[A]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,A,List[A]] -->
<g id="edge60" class="edge">
<title>org.scalacheck.util.Buildable[A,List[A]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,A,List[A]]</title>
<path fill="none" stroke="#000000" d="M7213.6412,-28277.8701C7413.8422,-28277.8701 7749.5268,-28277.8701 7972.0516,-28277.8701"/>
<polygon fill="#000000" stroke="#000000" points="7972.2307,-28281.3702 7982.2307,-28277.8701 7972.2307,-28274.3702 7972.2307,-28281.3702"/>
</g>
<!-- monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)] =&gt; ?{def shouldEqual: ?} -->
<g id="node785" class="node">
<title>monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-25041.8701" rx="597.5105" ry="26.7407"/>
<text text-anchor="start" x="238.1596" y="-25045.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-25030.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge82" class="edge">
<title>monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M1245.2655,-25045.4943C1271.413,-25053.7322 1292.1622,-25064.3485 1305.3191,-25077.8701 1327.6438,-25100.8134 1291.1142,-25342.8108 1313.3191,-25365.8701 1435.8579,-25493.1234 1667.9488,-25455.2184 1787.187,-25424.4321"/>
<polygon fill="#000000" stroke="#000000" points="1788.1913,-25427.787 1796.9707,-25421.8563 1786.4091,-25421.0176 1788.1913,-25427.787"/>
</g>
<!-- monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1164" class="edge">
<title>monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M1181.8755,-25054.3491C1223.9222,-25060.4085 1265.4998,-25068.1222 1305.3191,-25077.8701 1502.7319,-25126.1973 1716.4402,-25243.3122 1811.5073,-25299.2016"/>
<polygon fill="#000000" stroke="#000000" points="1809.9423,-25302.3421 1820.3324,-25304.4148 1813.5026,-25296.3151 1809.9423,-25302.3421"/>
</g>
<!-- Boolean =&gt; ?{def shouldEqual: ?} -->
<g id="node786" class="node">
<title>Boolean =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-24969.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="557.1596" y="-24973.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-24958.6701" font-family="Times,serif" font-size="14.00" fill="#000000">46 times = 149ms</text>
</g>
<!-- Boolean =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge497" class="edge">
<title>Boolean =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M782.2445,-24957.3071C951.8268,-24944.0578 1235.6783,-24933.9006 1305.3191,-25005.8701 1319.2303,-25020.2463 1299.483,-25351.4215 1313.3191,-25365.8701 1435.5041,-25493.463 1667.7527,-25455.4067 1787.1055,-25424.5103"/>
<polygon fill="#000000" stroke="#000000" points="1788.1231,-25427.8617 1796.8988,-25421.9254 1786.3366,-25421.0935 1788.1231,-25427.8617"/>
</g>
<!-- Boolean =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge266" class="edge">
<title>Boolean =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M787.0475,-24959.2159C921.2464,-24952.7326 1131.9309,-24953.9237 1305.3191,-25005.8701 1517.5425,-25069.4512 1734.6995,-25228.6587 1822.0606,-25297.4122"/>
<polygon fill="#000000" stroke="#000000" points="1820.0913,-25300.3171 1830.1052,-25303.7772 1824.4347,-25294.8276 1820.0913,-25300.3171"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Int,scala.util.Try[Int]] -->
<g id="node880" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Int,scala.util.Try[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-23529.8701" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="8022.1985" y="-23533.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Int,scala.util.Try[Int]]</text>
<text text-anchor="middle" x="8196.6985" y="-23518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Int,scala.util.Try[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,scala.util.Try[Int]] -->
<g id="edge1029" class="edge">
<title>org.scalacheck.util.Buildable[Int,scala.util.Try[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,scala.util.Try[Int]]</title>
<path fill="none" stroke="#000000" d="M7257.7374,-23529.8701C7446.5215,-23529.8701 7723.8107,-23529.8701 7928.1385,-23529.8701"/>
<polygon fill="#000000" stroke="#000000" points="7928.4237,-23533.3702 7938.4236,-23529.8701 7928.4236,-23526.3702 7928.4237,-23533.3702"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Double,(Double, Float :: Long :: Double :: shapeless.HNil)] -->
<g id="node1349" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Double,(Double, Float :: Long :: Double :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-38127.8701" rx="604.6526" ry="26.7407"/>
<text text-anchor="start" x="5442.5954" y="-38131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Double,(Double, Float :: Long :: Double :: shapeless.HNil)]</text>
<text text-anchor="middle" x="5862.0954" y="-38116.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3,Double,(Double, Char :: Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Double,(Double, Float :: Long :: Double :: shapeless.HNil)] -->
<g id="edge374" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3,Double,(Double, Char :: Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Double,(Double, Float :: Long :: Double :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M5249.8655,-38127.8701C5250.017,-38127.8701 5250.1684,-38127.8701 5250.3199,-38127.8701"/>
<polygon fill="#000000" stroke="#000000" points="5247.1336,-38131.3702 5257.1335,-38127.8701 5247.1335,-38124.3702 5247.1336,-38131.3702"/>
</g>
<!-- scalaz.Functor[F$macro$5] -->
<g id="node789" class="node">
<title>scalaz.Functor[F$macro$5]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-47271.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-47275.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$5]</text>
<text text-anchor="middle" x="652.6596" y="-47260.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[MacroOutSideMonocleSpec.this.Example] -->
<g id="node790" class="node">
<title>scalaz.Equal[MacroOutSideMonocleSpec.this.Example]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-47343.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="498.1596" y="-47347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[MacroOutSideMonocleSpec.this.Example]</text>
<text text-anchor="middle" x="652.6596" y="-47332.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- scala.reflect.ClassTag[((List[Int], Int)) =&gt; (List[Int], Int)] -->
<g id="node791" class="node">
<title>scala.reflect.ClassTag[((List[Int], Int)) =&gt; (List[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-10294.8701" rx="234.1047" ry="26.7407"/>
<text text-anchor="start" x="4428.753" y="-10298.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((List[Int], Int)) =&gt; (List[Int], Int)]</text>
<text text-anchor="middle" x="4586.253" y="-10283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =:= Unit -->
<g id="node792" class="node">
<title>Unit =:= Unit</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-47415.8701" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="612.6596" y="-47419.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =:= Unit</text>
<text text-anchor="middle" x="652.6596" y="-47404.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Maybe[Int]] -->
<g id="node793" class="node">
<title>org.scalacheck.Arbitrary[scalaz.Maybe[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-13765.8701" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="5740.5954" y="-13769.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.Maybe[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-13754.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 23ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Maybe[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge111" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Maybe[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6023.2583,-13778.6822C6180.6158,-13787.3735 6405.1173,-13788.3519 6466.6717,-13729.8701 6478.3426,-13718.7817 6465.9091,-13671.3748 6474.6717,-13657.8701 6588.3577,-13482.6599 6828.3561,-13387.4319 6958.1836,-13346.8943"/>
<polygon fill="#000000" stroke="#000000" points="6959.5767,-13350.1274 6968.102,-13343.8369 6957.5146,-13343.438 6959.5767,-13350.1274"/>
</g>
<!-- org.scalacheck.Cogen[java.util.UUID] -->
<g id="node794" class="node">
<title>org.scalacheck.Cogen[java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-44247.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="1756.534" y="-44251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[java.util.UUID]</text>
<text text-anchor="middle" x="1862.034" y="-44236.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Long :: Double :: shapeless.HNil,Float :: Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H] -->
<g id="node795" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Long :: Double :: shapeless.HNil,Float :: Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-23601.8701" rx="540.4593" ry="26.7407"/>
<text text-anchor="start" x="5488.0954" y="-23605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Long :: Double :: shapeless.HNil,Float :: Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H]</text>
<text text-anchor="middle" x="5862.0954" y="-23590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Long :: Double :: shapeless.HNil,Float :: Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Float :: Long :: Double :: shapeless.HNil,Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H] -->
<g id="edge861" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Long :: Double :: shapeless.HNil,Float :: Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Float :: Long :: Double :: shapeless.HNil,Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H]</title>
<path fill="none" stroke="#000000" d="M6402.5187,-23601.8701C6433.4605,-23601.8701 6464.5916,-23601.8701 6495.5704,-23601.8701"/>
<polygon fill="#000000" stroke="#000000" points="6495.6226,-23605.3702 6505.6226,-23601.8701 6495.6226,-23598.3702 6495.6226,-23605.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(63)]] -->
<g id="node796" class="node">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(63)]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-1521.8701" rx="240.3326" ry="26.7407"/>
<text text-anchor="start" x="5700.0954" y="-1525.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(63)]]</text>
<text text-anchor="middle" x="5862.0954" y="-1510.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(63)]]&#45;&gt;shapeless.Witness.Aux[Int(63)] -->
<g id="edge1315" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(63)]]&#45;&gt;shapeless.Witness.Aux[Int(63)]</title>
<path fill="none" stroke="#000000" d="M6063.2175,-1507.103C6216.3567,-1500.6063 6410.1674,-1504.1862 6466.6717,-1557.8701 6490.0135,-1580.0467 6451.3682,-1607.6532 6474.6717,-1629.8701 6535.1463,-1687.5249 6762.6406,-1684.9753 6911.6763,-1676.4336"/>
<polygon fill="#000000" stroke="#000000" points="6912.0453,-1679.9181 6921.8222,-1675.836 6911.6337,-1672.9302 6912.0453,-1679.9181"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(63)]]&#45;&gt;shapeless.Witness.Aux[Int(0)] -->
<g id="edge1046" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(63)]]&#45;&gt;shapeless.Witness.Aux[Int(0)]</title>
<path fill="none" stroke="#000000" d="M6102.749,-1521.8701C6344.7703,-1521.8701 6709.5495,-1521.8701 6907.0629,-1521.8701"/>
<polygon fill="#000000" stroke="#000000" points="6907.2122,-1525.3702 6917.2122,-1521.8701 6907.2121,-1518.3702 6907.2122,-1525.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(63)]]&#45;&gt;org.scalacheck.Gen.Choose[Int] -->
<g id="edge1050" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(63)]]&#45;&gt;org.scalacheck.Gen.Choose[Int]</title>
<path fill="none" stroke="#000000" d="M6075.0972,-1509.3214C6190.9121,-1502.4644 6336.6612,-1493.7802 6466.6717,-1485.8701 6617.1906,-1476.7121 6789.6894,-1465.9601 6907.0445,-1458.6066"/>
<polygon fill="#000000" stroke="#000000" points="6907.4018,-1462.0912 6917.1632,-1457.9724 6906.9639,-1455.1049 6907.4018,-1462.0912"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(63)]]&#45;&gt;Numeric[Int] -->
<g id="edge1279" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(63)]]&#45;&gt;Numeric[Int]</title>
<path fill="none" stroke="#000000" d="M6063.2175,-1536.6371C6216.3567,-1543.1339 6410.1674,-1539.5539 6466.6717,-1485.8701 6490.0135,-1463.6934 6451.3682,-1436.087 6474.6717,-1413.8701 6543.7101,-1348.0507 6830.4208,-1360.6942 6969.5738,-1371.1418"/>
<polygon fill="#000000" stroke="#000000" points="6969.4995,-1374.6462 6979.7378,-1371.9207 6970.0345,-1367.6667 6969.4995,-1374.6462"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(63)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge344" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(63)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M6057.1437,-1506.16C6212.1428,-1498.4591 6411.7295,-1500.8417 6466.6717,-1557.8701 6480.5514,-1572.2767 6461.2741,-1903.0141 6474.6717,-1917.8701 6585.1167,-2040.337 6790.4432,-2034.8748 6922.5232,-2015.4987"/>
<polygon fill="#000000" stroke="#000000" points="6923.331,-2018.9164 6932.694,-2013.9581 6922.2826,-2011.9953 6923.331,-2018.9164"/>
</g>
<!-- shapeless.Generic.Aux[scalaz.Tree[Int],L1] -->
<g id="node1279" class="node">
<title>shapeless.Generic.Aux[scalaz.Tree[Int],L1]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-34050.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="3047.8678" y="-34054.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scalaz.Tree[Int],L1]</text>
<text text-anchor="middle" x="3166.8678" y="-34039.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[scalaz.Tree[Int],scalaz.Tree[Int]]&#45;&gt;shapeless.Generic.Aux[scalaz.Tree[Int],L1] -->
<g id="edge1285" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[scalaz.Tree[Int],scalaz.Tree[Int]]&#45;&gt;shapeless.Generic.Aux[scalaz.Tree[Int],L1]</title>
<path fill="none" stroke="#000000" d="M2130.4192,-34050.8701C2382.7681,-34050.8701 2754.1358,-34050.8701 2977.0696,-34050.8701"/>
<polygon fill="#000000" stroke="#000000" points="2977.2426,-34054.3702 2987.2425,-34050.8701 2977.2425,-34047.3702 2977.2426,-34054.3702"/>
</g>
<!-- monocle.function.Each[String :: String :: shapeless.HNil,String]&#45;&gt;monocle.function.Each[String :: shapeless.HNil,String] -->
<g id="edge189" class="edge">
<title>monocle.function.Each[String :: String :: shapeless.HNil,String]&#45;&gt;monocle.function.Each[String :: shapeless.HNil,String]</title>
<path fill="none" stroke="#000000" d="M7305.6848,-27093.8701C7502.3486,-27093.8701 7770.2838,-27093.8701 7960.8523,-27093.8701"/>
<polygon fill="#000000" stroke="#000000" points="7961.0065,-27097.3702 7971.0064,-27093.8701 7961.0064,-27090.3702 7961.0065,-27097.3702"/>
</g>
<!-- shapeless.Generic.Aux[String :: String :: shapeless.HNil,SGen] -->
<g id="node1291" class="node">
<title>shapeless.Generic.Aux[String :: String :: shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-27021.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="8023.6985" y="-27025.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[String :: String :: shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="8196.6985" y="-27010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Each[String :: String :: shapeless.HNil,String]&#45;&gt;shapeless.Generic.Aux[String :: String :: shapeless.HNil,SGen] -->
<g id="edge110" class="edge">
<title>monocle.function.Each[String :: String :: shapeless.HNil,String]&#45;&gt;shapeless.Generic.Aux[String :: String :: shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M7268.2184,-27079.9664C7468.9546,-27067.406 7763.2162,-27048.9937 7966.414,-27036.2793"/>
<polygon fill="#000000" stroke="#000000" points="7966.8645,-27039.758 7976.6263,-27035.6403 7966.4273,-27032.7717 7966.8645,-27039.758"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P) -->
<g id="node799" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-47487.8701" rx="325.0384" ry="26.7407"/>
<text text-anchor="start" x="430.6596" y="-47491.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-47476.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[TraversalSpec.this.Location] =&gt; ?{def shouldEqual: ?} -->
<g id="node801" class="node">
<title>List[TraversalSpec.this.Location] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-24897.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="488.6596" y="-24901.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[TraversalSpec.this.Location] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-24886.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- List[TraversalSpec.this.Location] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge752" class="edge">
<title>List[TraversalSpec.this.Location] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M842.6519,-24881.0594C1012.393,-24870.7258 1243.5401,-24869.7884 1305.3191,-24933.8701 1321.9793,-24951.1512 1296.7492,-25348.5025 1313.3191,-25365.8701 1435.2677,-25493.689 1667.6217,-25455.5319 1787.051,-25424.5624"/>
<polygon fill="#000000" stroke="#000000" points="1788.0775,-25427.9113 1796.8507,-25421.9714 1786.2882,-25421.1439 1788.0775,-25427.9113"/>
</g>
<!-- List[TraversalSpec.this.Location] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge830" class="edge">
<title>List[TraversalSpec.this.Location] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M841.9401,-24880.9725C975.2017,-24875.5692 1155.7674,-24881.5241 1305.3191,-24933.8701 1532.5244,-25013.3962 1749.3799,-25215.7176 1829.4953,-25296.1507"/>
<polygon fill="#000000" stroke="#000000" points="1827.2943,-25298.9022 1836.8173,-25303.5458 1832.2686,-25293.9771 1827.2943,-25298.9022"/>
</g>
<!-- shapeless.ops.hlist.At.Aux[(Int, Char),shapeless.nat._1.N,Char] -->
<g id="node802" class="node">
<title>shapeless.ops.hlist.At.Aux[(Int, Char),shapeless.nat._1.N,Char]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-47559.8701" rx="257.2738" ry="26.7407"/>
<text text-anchor="start" x="1688.034" y="-47563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(Int, Char),shapeless.nat._1.N,Char]</text>
<text text-anchor="middle" x="1862.034" y="-47548.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[B]&#45;&gt;scala.reflect.ClassTag[B] -->
<g id="edge1163" class="edge">
<title>org.scalacheck.Arbitrary[B]&#45;&gt;scala.reflect.ClassTag[B]</title>
<path fill="none" stroke="#000000" d="M7165.6312,-28709.8701C7386.6233,-28709.8701 7856.4314,-28709.8701 8077.2767,-28709.8701"/>
<polygon fill="#000000" stroke="#000000" points="8077.603,-28713.3702 8087.603,-28709.8701 8077.603,-28706.3702 8077.603,-28713.3702"/>
</g>
<!-- monocle.function.Each[List[Char],Char] -->
<g id="node805" class="node">
<title>monocle.function.Each[List[Char],Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-47631.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="541.1596" y="-47635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[List[Char],Char]</text>
<text text-anchor="middle" x="652.6596" y="-47620.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 189ms</text>
</g>
<!-- shapeless.Generic.Aux[List[Char],SGen] -->
<g id="node1222" class="node">
<title>shapeless.Generic.Aux[List[Char],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-47631.8701" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="1750.034" y="-47635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[List[Char],SGen]</text>
<text text-anchor="middle" x="1862.034" y="-47620.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 184ms</text>
</g>
<!-- monocle.function.Each[List[Char],Char]&#45;&gt;shapeless.Generic.Aux[List[Char],SGen] -->
<g id="edge796" class="edge">
<title>monocle.function.Each[List[Char],Char]&#45;&gt;shapeless.Generic.Aux[List[Char],SGen]</title>
<path fill="none" stroke="#000000" d="M821.7726,-47631.8701C1048.5967,-47631.8701 1449.651,-47631.8701 1681.9425,-47631.8701"/>
<polygon fill="#000000" stroke="#000000" points="1682.1894,-47635.3702 1692.1894,-47631.8701 1682.1893,-47628.3702 1682.1894,-47635.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[A \/ B] -->
<g id="node806" class="node">
<title>org.scalacheck.Arbitrary[A \/ B]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-28637.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="5775.0954" y="-28641.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[A / B]</text>
<text text-anchor="middle" x="5862.0954" y="-28626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- org.scalacheck.Arbitrary[A \/ B]&#45;&gt;org.scalacheck.Arbitrary[A] -->
<g id="edge1144" class="edge">
<title>org.scalacheck.Arbitrary[A \/ B]&#45;&gt;org.scalacheck.Arbitrary[A]</title>
<path fill="none" stroke="#000000" d="M5984.1798,-28649.0915C6141.5342,-28660.5554 6402.5648,-28668.411 6466.6717,-28601.8701 6480.5514,-28587.4634 6460.9431,-28256.4207 6474.6717,-28241.8701 6599.0097,-28110.087 6835.4821,-28142.4868 6961.6947,-28172.1911"/>
<polygon fill="#000000" stroke="#000000" points="6961.1607,-28175.6624 6971.7017,-28174.5952 6962.7959,-28168.856 6961.1607,-28175.6624"/>
</g>
<!-- org.scalacheck.Arbitrary[A \/ B]&#45;&gt;org.scalacheck.Arbitrary[B] -->
<g id="edge1296" class="edge">
<title>org.scalacheck.Arbitrary[A \/ B]&#45;&gt;org.scalacheck.Arbitrary[B]</title>
<path fill="none" stroke="#000000" d="M5990.7666,-28645.6952C6219.3513,-28659.5966 6693.4573,-28688.4293 6920.0717,-28702.2109"/>
<polygon fill="#000000" stroke="#000000" points="6920.1492,-28705.722 6930.3432,-28702.8355 6920.5742,-28698.7349 6920.1492,-28705.722"/>
</g>
<!-- scala.reflect.ClassTag[A \/ B] -->
<g id="node1128" class="node">
<title>scala.reflect.ClassTag[A \/ B]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-28637.8701" rx="123.9879" ry="26.7407"/>
<text text-anchor="start" x="6966.514" y="-28641.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[A / B]</text>
<text text-anchor="middle" x="7046.014" y="-28626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[A \/ B]&#45;&gt;scala.reflect.ClassTag[A \/ B] -->
<g id="edge1316" class="edge">
<title>org.scalacheck.Arbitrary[A \/ B]&#45;&gt;scala.reflect.ClassTag[A \/ B]</title>
<path fill="none" stroke="#000000" d="M5996.4657,-28637.8701C6224.3529,-28637.8701 6684.0211,-28637.8701 6911.8014,-28637.8701"/>
<polygon fill="#000000" stroke="#000000" points="6912.1379,-28641.3702 6922.1379,-28637.8701 6912.1378,-28634.3702 6912.1379,-28641.3702"/>
</g>
<!-- scalaz.Equal[Int \/ String] -->
<g id="node807" class="node">
<title>scalaz.Equal[Int \/ String]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-21827.8701" rx="108.375" ry="26.7407"/>
<text text-anchor="start" x="5793.5954" y="-21831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int / String]</text>
<text text-anchor="middle" x="5862.0954" y="-21816.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Order[String] -->
<g id="edge1300" class="edge">
<title>scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M5970.0347,-21830.2371C6091.2597,-21833.8377 6293.6835,-21842.6796 6466.6717,-21863.8701 6645.592,-21885.7872 6852.64,-21928.6898 6964.3565,-21953.3122"/>
<polygon fill="#000000" stroke="#000000" points="6963.6879,-21956.7489 6974.2078,-21955.4906 6965.1993,-21949.914 6963.6879,-21956.7489"/>
</g>
<!-- scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Equal[String] -->
<g id="edge1335" class="edge">
<title>scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M5963.1517,-21837.5823C6117.2175,-21849.8993 6400.0259,-21861.894 6466.6717,-21791.8701 6481.9163,-21775.8528 6467.9888,-21016.9482 6474.6717,-20995.8701 6586.9147,-20641.8481 6906.9031,-20304.6596 7012.0639,-20200.6072"/>
<polygon fill="#000000" stroke="#000000" points="7014.5897,-20203.0321 7019.2584,-20193.5213 7009.6777,-20198.0448 7014.5897,-20203.0321"/>
</g>
<!-- scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge349" class="edge">
<title>scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5967.4932,-21821.6768C6088.1347,-21814.5686 6291.6626,-21802.5181 6466.6717,-21791.8701 6637.0558,-21781.5035 6835.6043,-21769.0943 6950.4506,-21761.8842"/>
<polygon fill="#000000" stroke="#000000" points="6950.8564,-21765.3657 6960.6173,-21761.2458 6950.4176,-21758.3795 6950.8564,-21765.3657"/>
</g>
<!-- scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Order[Int] -->
<g id="edge1325" class="edge">
<title>scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5964.2113,-21836.9002C6117.5724,-21848.0454 6396.8751,-21858.1827 6466.6717,-21791.8701 6478.3426,-21780.7817 6468.3754,-21734.6861 6474.6717,-21719.8701 6601.3232,-21421.8433 6900.8377,-21152.7643 7007.4822,-21063.2821"/>
<polygon fill="#000000" stroke="#000000" points="7009.9846,-21065.7524 7015.4179,-21056.6568 7005.4984,-21060.3789 7009.9846,-21065.7524"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Double :: shapeless.HNil,Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: Double :: shapeless.HNil,Float :: Char :: Boolean :: Int :: shapeless.HNil,Out] -->
<g id="edge526" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Double :: shapeless.HNil,Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: Double :: shapeless.HNil,Float :: Char :: Boolean :: Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M3655.8364,-32043.8701C3795.3024,-32043.8701 3947.3981,-32043.8701 4087.4434,-32043.8701"/>
<polygon fill="#000000" stroke="#000000" points="4087.5055,-32047.3702 4097.5055,-32043.8701 4087.5054,-32040.3702 4087.5055,-32047.3702"/>
</g>
<!-- org.scalacheck.Cogen[(Int, Vector[Int])]&#45;&gt;org.scalacheck.Cogen[Vector[Int]] -->
<g id="edge132" class="edge">
<title>org.scalacheck.Cogen[(Int, Vector[Int])]&#45;&gt;org.scalacheck.Cogen[Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M4729.9341,-12146.7855C4903.4458,-12160.0352 5180.6581,-12168.6414 5249.5191,-12096.8701 5273.4832,-12071.8931 5233.6207,-11498.9098 5257.5191,-11473.8701 5318.8327,-11409.6282 5562.4504,-11414.4902 5721.0987,-11425.2318"/>
<polygon fill="#000000" stroke="#000000" points="5721.2049,-11428.7474 5731.4229,-11425.9472 5721.6888,-11421.7642 5721.2049,-11428.7474"/>
</g>
<!-- org.scalacheck.Cogen[(Int, Vector[Int])]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge994" class="edge">
<title>org.scalacheck.Cogen[(Int, Vector[Int])]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M4730.2102,-12146.7167C4903.6409,-12159.8486 5180.3918,-12168.2847 5249.5191,-12096.8701 5263.7803,-12082.1369 5243.0908,-11742.4396 5257.5191,-11727.8701 5352.102,-11632.3614 6371.7982,-11785.0901 6466.6717,-11689.8701 6477.9691,-11678.5314 6469.7755,-11417.109 6474.6717,-11401.8701 6589.9569,-11043.058 6907.9334,-10696.6176 7012.3256,-10589.5689"/>
<polygon fill="#000000" stroke="#000000" points="7014.9698,-10591.8713 7019.467,-10582.2782 7009.9691,-10586.9729 7014.9698,-10591.8713"/>
</g>
<!-- monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCaseType[Int],Unit] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCaseType[Int],_$1] -->
<g id="node810" class="node">
<title>monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCaseType[Int],Unit] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCaseType[Int],_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-47703.8701" rx="593.0253" ry="26.7407"/>
<text text-anchor="start" x="241.1596" y="-47707.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCaseType[Int],Unit] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCaseType[Int],_$1]</text>
<text text-anchor="middle" x="652.6596" y="-47692.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.At[Double :: shapeless.HNil,shapeless._0] -->
<g id="node811" class="node">
<title>shapeless.ops.hlist.At[Double :: shapeless.HNil,shapeless._0]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-38199.8701" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="8028.6985" y="-38203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Double :: shapeless.HNil,shapeless._0]</text>
<text text-anchor="middle" x="8196.6985" y="-38188.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[T[A]] -->
<g id="node812" class="node">
<title>org.scalacheck.Cogen[T[A]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-27713.8701" rx="121.7449" ry="26.7407"/>
<text text-anchor="start" x="6968.014" y="-27717.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[T[A]]</text>
<text text-anchor="middle" x="7046.014" y="-27702.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scalaz.Equal[scalaz.Either3[String,Int,Char]] -->
<g id="node814" class="node">
<title>scalaz.Equal[scalaz.Either3[String,Int,Char]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-20095.8701" rx="184.6098" ry="26.7407"/>
<text text-anchor="start" x="5739.5954" y="-20099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Either3[String,Int,Char]]</text>
<text text-anchor="middle" x="5862.0954" y="-20084.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 7ms</text>
</g>
<!-- scalaz.Equal[scalaz.Either3[String,Int,Char]]&#45;&gt;scalaz.Equal[String] -->
<g id="edge1227" class="edge">
<title>scalaz.Equal[scalaz.Either3[String,Int,Char]]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M6033.4442,-20105.9549C6154.4897,-20113.1081 6320.5247,-20122.9781 6466.6717,-20131.8701 6635.5912,-20142.1475 6832.193,-20154.4326 6947.4704,-20161.6688"/>
<polygon fill="#000000" stroke="#000000" points="6947.4831,-20165.1764 6957.6828,-20162.31 6947.9218,-20158.1902 6947.4831,-20165.1764"/>
</g>
<!-- scalaz.Equal[scalaz.Either3[String,Int,Char]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge1231" class="edge">
<title>scalaz.Equal[scalaz.Either3[String,Int,Char]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M6020.4808,-20082.0544C6179.0299,-20072.1386 6407.6841,-20069.7991 6466.6717,-20131.8701 6475.6274,-20141.2939 6470.2043,-21055.6613 6474.6717,-21067.8701 6585.6701,-21371.2097 6893.5919,-21635.8972 7005.0622,-21724.4198"/>
<polygon fill="#000000" stroke="#000000" points="7003.0386,-21727.2815 7013.0556,-21730.7325 7007.377,-21721.788 7003.0386,-21727.2815"/>
</g>
<!-- scalaz.Equal[scalaz.Either3[String,Int,Char]]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge7" class="edge">
<title>scalaz.Equal[scalaz.Either3[String,Int,Char]]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M6021.0126,-20109.5408C6179.368,-20119.2604 6407.2764,-20121.3685 6466.6717,-20059.8701 6479.1801,-20046.9187 6464.2536,-19750.5555 6474.6717,-19735.8701 6584.4781,-19581.0857 6819.9758,-19537.1526 6951.7673,-19524.7281"/>
<polygon fill="#000000" stroke="#000000" points="6952.2067,-19528.2028 6961.8524,-19523.8198 6951.5787,-19521.231 6952.2067,-19528.2028"/>
</g>
<!-- monocle.function.Index[String,Int,Char] -->
<g id="node815" class="node">
<title>monocle.function.Index[String,Int,Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-47775.8701" rx="168.0831" ry="26.7407"/>
<text text-anchor="start" x="541.6596" y="-47779.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[String,Int,Char]</text>
<text text-anchor="middle" x="652.6596" y="-47764.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P) -->
<g id="node816" class="node">
<title>(Any =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-47847.8701" rx="176.1392" ry="26.7407"/>
<text text-anchor="start" x="536.1596" y="-47851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-47836.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Vector[Int], Int)]&#45;&gt;scala.reflect.ClassTag[(Vector[Int], Int)] -->
<g id="edge1174" class="edge">
<title>org.scalacheck.Arbitrary[(Vector[Int], Int)]&#45;&gt;scala.reflect.ClassTag[(Vector[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M4754.5964,-13122.7987C4888.6698,-13129.9601 5081.1326,-13140.3525 5249.5191,-13149.8701 5400.176,-13158.3855 5571.6481,-13168.4987 5694.7805,-13175.8347"/>
<polygon fill="#000000" stroke="#000000" points="5694.8584,-13179.3455 5705.049,-13176.4467 5695.2749,-13172.3579 5694.8584,-13179.3455"/>
</g>
<!-- org.scalacheck.Arbitrary[(Vector[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[Vector[Int]] -->
<g id="edge653" class="edge">
<title>org.scalacheck.Arbitrary[(Vector[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M4764.6606,-13113.8701C5011.6726,-13113.8701 5454.5444,-13113.8701 5695.2607,-13113.8701"/>
<polygon fill="#000000" stroke="#000000" points="5695.5071,-13117.3702 5705.507,-13113.8701 5695.507,-13110.3702 5695.5071,-13117.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Vector[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge404" class="edge">
<title>org.scalacheck.Arbitrary[(Vector[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4664.5704,-13089.6572C4802.8132,-13052.299 5090.4866,-12999.5683 5249.5191,-13149.8701 5272.919,-13171.9853 5233.8685,-13200.023 5257.5191,-13221.8701 5306.8877,-13267.4738 6399.6274,-13255.1782 6466.6717,-13259.8701 6627.8711,-13271.151 6813.4379,-13292.8787 6930.2179,-13307.6264"/>
<polygon fill="#000000" stroke="#000000" points="6929.8905,-13311.1129 6940.2512,-13308.8977 6930.7705,-13304.1684 6929.8905,-13311.1129"/>
</g>
<!-- scalaz.Equal[A5] -->
<g id="node818" class="node">
<title>scalaz.Equal[A5]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-47919.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="605.6596" y="-47923.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[A5]</text>
<text text-anchor="middle" x="652.6596" y="-47908.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[scala.util.Try[Int]] -->
<g id="node819" class="node">
<title>scalaz.Equal[scala.util.Try[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-47991.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="565.6596" y="-47995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scala.util.Try[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-47980.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[S] -->
<g id="node820" class="node">
<title>scala.reflect.ClassTag[S]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-48063.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="1794.034" y="-48067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[S]</text>
<text text-anchor="middle" x="1862.034" y="-48052.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- monocle.function.Index[scalaz.OneAnd[List,Int],Int,Int] -->
<g id="node821" class="node">
<title>monocle.function.Index[scalaz.OneAnd[List,Int],Int,Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-48135.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="498.1596" y="-48139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[scalaz.OneAnd[List,Int],Int,Int]</text>
<text text-anchor="middle" x="652.6596" y="-48124.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Index[List[Int],Int,Int] -->
<g id="node931" class="node">
<title>monocle.function.Index[List[Int],Int,Int]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-48135.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="1750.534" y="-48139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[List[Int],Int,Int]</text>
<text text-anchor="middle" x="1862.034" y="-48124.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- monocle.function.Index[scalaz.OneAnd[List,Int],Int,Int]&#45;&gt;monocle.function.Index[List[Int],Int,Int] -->
<g id="edge961" class="edge">
<title>monocle.function.Index[scalaz.OneAnd[List,Int],Int,Int]&#45;&gt;monocle.function.Index[List[Int],Int,Int]</title>
<path fill="none" stroke="#000000" d="M882.6238,-48135.8701C1115.3224,-48135.8701 1470.2307,-48135.8701 1682.8459,-48135.8701"/>
<polygon fill="#000000" stroke="#000000" points="1682.8619,-48139.3702 1692.8618,-48135.8701 1682.8618,-48132.3702 1682.8619,-48139.3702"/>
</g>
<!-- monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCase,Unit] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCase,_$1] -->
<g id="node822" class="node">
<title>monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCase,Unit] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCase,_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-48207.8701" rx="520.3612" ry="26.7407"/>
<text text-anchor="start" x="292.6596" y="-48211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCase,Unit] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCase,_$1]</text>
<text text-anchor="middle" x="652.6596" y="-48196.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Functor[scalaz.Id.Id] -->
<g id="node823" class="node">
<title>scalaz.Functor[scalaz.Id.Id]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-48279.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-48283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[scalaz.Id.Id]</text>
<text text-anchor="middle" x="652.6596" y="-48268.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- monocle.function.Field5[HListSpec.this.H,Long] -->
<g id="node824" class="node">
<title>monocle.function.Field5[HListSpec.this.H,Long]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-34617.8701" rx="202.4653" ry="26.7407"/>
<text text-anchor="start" x="517.6596" y="-34621.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field5[HListSpec.this.H,Long]</text>
<text text-anchor="middle" x="652.6596" y="-34606.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 24ms</text>
</g>
<!-- monocle.function.Field5[HListSpec.this.H,Long]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._4.N,Long,(Long, HListSpec.this.H)] -->
<g id="edge1110" class="edge">
<title>monocle.function.Field5[HListSpec.this.H,Long]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._4.N,Long,(Long, HListSpec.this.H)]</title>
<path fill="none" stroke="#000000" d="M850.3331,-34623.7543C1018.8528,-34628.7707 1266.0922,-34636.1304 1473.972,-34642.3184"/>
<polygon fill="#000000" stroke="#000000" points="1474.0535,-34645.8223 1484.1533,-34642.6215 1474.2619,-34638.8254 1474.0535,-34645.8223"/>
</g>
<!-- monocle.function.Field5[HListSpec.this.H,Long]&#45;&gt;shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._4.N,Long] -->
<g id="edge1277" class="edge">
<title>monocle.function.Field5[HListSpec.this.H,Long]&#45;&gt;shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._4.N,Long]</title>
<path fill="none" stroke="#000000" d="M850.3331,-34611.9858C1048.866,-34606.076 1356.6551,-34596.9139 1580.629,-34590.2468"/>
<polygon fill="#000000" stroke="#000000" points="1581.0046,-34593.7372 1590.896,-34589.9411 1580.7962,-34586.7403 1581.0046,-34593.7372"/>
</g>
<!-- org.scalactic.Equality[Option[PrismSpec.this.IntOrString]] -->
<g id="node825" class="node">
<title>org.scalactic.Equality[Option[PrismSpec.this.IntOrString]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-42159.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="491.6596" y="-42163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[PrismSpec.this.IntOrString]]</text>
<text text-anchor="middle" x="652.6596" y="-42148.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 15ms</text>
</g>
<!-- scalaz.Equal[Option[PrismSpec.this.IntOrString]] -->
<g id="node1378" class="node">
<title>scalaz.Equal[Option[PrismSpec.this.IntOrString]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-42159.8701" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="1726.034" y="-42163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[PrismSpec.this.IntOrString]]</text>
<text text-anchor="middle" x="1862.034" y="-42148.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 10ms</text>
</g>
<!-- org.scalactic.Equality[Option[PrismSpec.this.IntOrString]]&#45;&gt;scalaz.Equal[Option[PrismSpec.this.IntOrString]] -->
<g id="edge379" class="edge">
<title>org.scalactic.Equality[Option[PrismSpec.this.IntOrString]]&#45;&gt;scalaz.Equal[Option[PrismSpec.this.IntOrString]]</title>
<path fill="none" stroke="#000000" d="M891.9542,-42159.8701C1112.3884,-42159.8701 1436.4705,-42159.8701 1648.3751,-42159.8701"/>
<polygon fill="#000000" stroke="#000000" points="1648.3802,-42163.3702 1658.3802,-42159.8701 1648.3802,-42156.3702 1648.3802,-42163.3702"/>
</g>
<!-- scalaz.Equal[List[scala.collection.immutable.Stream[Int]]] -->
<g id="node827" class="node">
<title>scalaz.Equal[List[scala.collection.immutable.Stream[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-22745.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="4425.253" y="-22749.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[List[scala.collection.immutable.Stream[Int]]]</text>
<text text-anchor="middle" x="4586.253" y="-22734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[scala.collection.immutable.Stream[Int]] -->
<g id="node1424" class="node">
<title>scalaz.Equal[scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-22737.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="5716.0954" y="-22741.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-22726.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[List[scala.collection.immutable.Stream[Int]]]&#45;&gt;scalaz.Equal[scala.collection.immutable.Stream[Int]] -->
<g id="edge661" class="edge">
<title>scalaz.Equal[List[scala.collection.immutable.Stream[Int]]]&#45;&gt;scalaz.Equal[scala.collection.immutable.Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4825.1064,-22744.3724C5056.9236,-22742.9188 5406.2421,-22740.7284 5634.2486,-22739.2987"/>
<polygon fill="#000000" stroke="#000000" points="5634.3583,-22742.7982 5644.3361,-22739.2355 5634.3144,-22735.7984 5634.3583,-22742.7982"/>
</g>
<!-- scalaz.Unzip[[β$0$]monocle.PLens[monocle.Point,monocle.Point,β$0$,β$0$]] -->
<g id="node828" class="node">
<title>scalaz.Unzip[[β$0$]monocle.PLens[monocle.Point,monocle.Point,β$0$,β$0$]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-48351.8701" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="434.6596" y="-48355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Unzip[[β$0$]monocle.PLens[monocle.Point,monocle.Point,β$0$,β$0$]]</text>
<text text-anchor="middle" x="652.6596" y="-48340.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(7)]] -->
<g id="node829" class="node">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(7)]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-1449.8701" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="5703.5954" y="-1453.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(7)]]</text>
<text text-anchor="middle" x="5862.0954" y="-1438.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 25ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(7)]]&#45;&gt;shapeless.Witness.Aux[Int(0)] -->
<g id="edge539" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(7)]]&#45;&gt;shapeless.Witness.Aux[Int(0)]</title>
<path fill="none" stroke="#000000" d="M6071.6004,-1462.2117C6187.969,-1469.1004 6335.3493,-1477.8801 6466.6717,-1485.8701 6619.5119,-1495.1692 6795.0152,-1506.112 6912.4344,-1513.4713"/>
<polygon fill="#000000" stroke="#000000" points="6912.3518,-1516.9729 6922.5512,-1514.1055 6912.7898,-1509.9866 6912.3518,-1516.9729"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(7)]]&#45;&gt;org.scalacheck.Gen.Choose[Int] -->
<g id="edge807" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(7)]]&#45;&gt;org.scalacheck.Gen.Choose[Int]</title>
<path fill="none" stroke="#000000" d="M6097.7695,-1449.8701C6337.2082,-1449.8701 6700.4898,-1449.8701 6900.7618,-1449.8701"/>
<polygon fill="#000000" stroke="#000000" points="6900.764,-1453.3702 6910.764,-1449.8701 6900.7639,-1446.3702 6900.764,-1453.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(7)]]&#45;&gt;Numeric[Int] -->
<g id="edge98" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(7)]]&#45;&gt;Numeric[Int]</title>
<path fill="none" stroke="#000000" d="M6071.6004,-1437.5284C6187.969,-1430.6398 6335.3493,-1421.86 6466.6717,-1413.8701 6646.3949,-1402.9352 6857.4545,-1389.7278 6968.5625,-1382.7466"/>
<polygon fill="#000000" stroke="#000000" points="6968.9114,-1386.2317 6978.6722,-1382.1113 6968.4723,-1379.2455 6968.9114,-1386.2317"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(7)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge91" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(7)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M6054.1155,-1434.2637C6209.5731,-1426.3465 6411.4711,-1428.3608 6466.6717,-1485.8701 6483.294,-1503.1876 6458.6288,-1900.0145 6474.6717,-1917.8701 6584.9713,-2040.6318 6790.5852,-2035.0119 6922.7298,-2015.5331"/>
<polygon fill="#000000" stroke="#000000" points="6923.5457,-2018.9494 6932.9052,-2013.9846 6922.4924,-2012.029 6923.5457,-2018.9494"/>
</g>
<!-- shapeless.Witness.Aux[Int(7)] -->
<g id="node1474" class="node">
<title>shapeless.Witness.Aux[Int(7)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-1593.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="6963.014" y="-1597.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Witness.Aux[Int(7)]</text>
<text text-anchor="middle" x="7046.014" y="-1582.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(7)]]&#45;&gt;shapeless.Witness.Aux[Int(7)] -->
<g id="edge629" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.ZeroTo[Int(7)]]&#45;&gt;shapeless.Witness.Aux[Int(7)]</title>
<path fill="none" stroke="#000000" d="M6059.7383,-1435.2527C6213.4073,-1428.5548 6409.7387,-1431.7788 6466.6717,-1485.8701 6490.0135,-1508.0467 6451.3682,-1535.6532 6474.6717,-1557.8701 6535.7177,-1616.0696 6766.9541,-1612.9218 6915.8792,-1604.19"/>
<polygon fill="#000000" stroke="#000000" points="6916.2398,-1607.6747 6926.0113,-1603.5799 6915.819,-1600.6874 6916.2398,-1607.6747"/>
</g>
<!-- shapeless.ops.hlist.Prepend[Float :: Long :: shapeless.HNil,Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Prepend[Long :: shapeless.HNil,Double :: shapeless.HNil] -->
<g id="edge63" class="edge">
<title>shapeless.ops.hlist.Prepend[Float :: Long :: shapeless.HNil,Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Prepend[Long :: shapeless.HNil,Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M6202.9454,-33726.8701C6367.21,-33726.8701 6563.1415,-33726.8701 6724.7613,-33726.8701"/>
<polygon fill="#000000" stroke="#000000" points="6724.8672,-33730.3702 6734.8672,-33726.8701 6724.8671,-33723.3702 6724.8672,-33730.3702"/>
</g>
<!-- scalaz.Equal[(String, Int)] -->
<g id="node831" class="node">
<title>scalaz.Equal[(String, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-20527.8701" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="5791.0954" y="-20531.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(String, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-20516.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- scalaz.Equal[(String, Int)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge1199" class="edge">
<title>scalaz.Equal[(String, Int)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M5969.1209,-20535.712C6091.9054,-20541.4826 6298.0183,-20541.2261 6466.6717,-20491.8701 6687.078,-20427.3686 6915.3982,-20266.957 7005.7545,-20199.0396"/>
<polygon fill="#000000" stroke="#000000" points="7007.9397,-20201.7753 7013.8091,-20192.9549 7003.7202,-20196.1899 7007.9397,-20201.7753"/>
</g>
<!-- scalaz.Equal[(String, Int)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge181" class="edge">
<title>scalaz.Equal[(String, Int)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5966.2617,-20517.9542C6120.9368,-20505.7921 6400.2768,-20494.5151 6466.6717,-20563.8701 6476.3543,-20573.9843 6469.8121,-21054.7387 6474.6717,-21067.8701 6586.7803,-21370.8012 6894.0078,-21635.7442 7005.1791,-21724.3768"/>
<polygon fill="#000000" stroke="#000000" points="7003.1405,-21727.2271 7013.1508,-21730.6975 7007.4896,-21721.742 7003.1405,-21727.2271"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge365" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6007.9476,-14608.9535C6166.7905,-14619.5873 6406.3402,-14623.8361 6466.6717,-14559.8701 6485.5262,-14539.8797 6455.8517,-6665.8929 6474.6717,-6645.8701 6531.106,-6585.8287 6754.1316,-6588.4635 6904.265,-6597.7713"/>
<polygon fill="#000000" stroke="#000000" points="6904.2932,-6601.2801 6914.4955,-6598.4228 6904.7381,-6594.2942 6904.2932,-6601.2801"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Boolean)]&#45;&gt;scala.reflect.ClassTag[(Int, Boolean)] -->
<g id="edge173" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Boolean)]&#45;&gt;scala.reflect.ClassTag[(Int, Boolean)]</title>
<path fill="none" stroke="#000000" d="M6029.211,-14595.8701C6254.7302,-14595.8701 6654.1235,-14595.8701 6879.3898,-14595.8701"/>
<polygon fill="#000000" stroke="#000000" points="6879.6518,-14599.3702 6889.6518,-14595.8701 6879.6517,-14592.3702 6879.6518,-14599.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge741" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6008.2132,-14608.8915C6166.9745,-14619.4288 6406.1346,-14623.551 6466.6717,-14559.8701 6483.9354,-14541.7098 6462.1201,-13679.5562 6474.6717,-13657.8701 6578.9103,-13477.7717 6821.2917,-13384.8922 6954.4128,-13345.9196"/>
<polygon fill="#000000" stroke="#000000" points="6955.5611,-13349.2311 6964.1977,-13343.0945 6953.6193,-13342.5058 6955.5611,-13349.2311"/>
</g>
<!-- org.scalactic.Equality[(Int, IsoSpec.this.IntWrapper)] -->
<g id="node833" class="node">
<title>org.scalactic.Equality[(Int, IsoSpec.this.IntWrapper)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-18465.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="4440.253" y="-18469.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(Int, IsoSpec.this.IntWrapper)]</text>
<text text-anchor="middle" x="4586.253" y="-18454.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalactic.Equality[(Int, IsoSpec.this.IntWrapper)]&#45;&gt;scalaz.Equal[(Int, IsoSpec.this.IntWrapper)] -->
<g id="edge281" class="edge">
<title>org.scalactic.Equality[(Int, IsoSpec.this.IntWrapper)]&#45;&gt;scalaz.Equal[(Int, IsoSpec.this.IntWrapper)]</title>
<path fill="none" stroke="#000000" d="M4804.1284,-18465.8701C5047.2114,-18465.8701 5436.7781,-18465.8701 5669.2219,-18465.8701"/>
<polygon fill="#000000" stroke="#000000" points="5669.4835,-18469.3702 5679.4834,-18465.8701 5669.4834,-18462.3702 5669.4835,-18469.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, monocle.Example)] -->
<g id="node834" class="node">
<title>org.scalacheck.Arbitrary[(Boolean, monocle.Example)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-3723.8701" rx="226.9626" ry="26.7407"/>
<text text-anchor="start" x="5709.5954" y="-3727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Boolean, monocle.Example)]</text>
<text text-anchor="middle" x="5862.0954" y="-3712.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, monocle.Example)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge1264" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, monocle.Example)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6047.8268,-3708.3933C6204.2516,-3699.9519 6411.1561,-3701.118 6466.6717,-3759.8701 6480.093,-3774.0738 6461.2749,-6559.6431 6474.6717,-6573.8701 6531.161,-6633.8596 6754.1704,-6631.2402 6904.2854,-6621.9496"/>
<polygon fill="#000000" stroke="#000000" points="6904.7569,-6625.4268 6914.5147,-6621.2993 6904.3127,-6618.4409 6904.7569,-6625.4268"/>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, monocle.Example)]&#45;&gt;org.scalacheck.Arbitrary[monocle.Example] -->
<g id="edge56" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, monocle.Example)]&#45;&gt;org.scalacheck.Arbitrary[monocle.Example]</title>
<path fill="none" stroke="#000000" d="M6065.3531,-3735.8419C6182.6634,-3742.7844 6332.9878,-3751.7364 6466.6717,-3759.8701 6600.6844,-3768.0237 6752.1206,-3777.441 6866.5486,-3784.5983"/>
<polygon fill="#000000" stroke="#000000" points="6866.6076,-3788.1087 6876.8066,-3785.24 6867.0447,-3781.1224 6866.6076,-3788.1087"/>
</g>
<!-- scala.reflect.ClassTag[(Boolean, monocle.Example)] -->
<g id="node1293" class="node">
<title>scala.reflect.ClassTag[(Boolean, monocle.Example)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-3723.8701" rx="216.2494" ry="26.7407"/>
<text text-anchor="start" x="6901.014" y="-3727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Boolean, monocle.Example)]</text>
<text text-anchor="middle" x="7046.014" y="-3712.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, monocle.Example)]&#45;&gt;scala.reflect.ClassTag[(Boolean, monocle.Example)] -->
<g id="edge152" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, monocle.Example)]&#45;&gt;scala.reflect.ClassTag[(Boolean, monocle.Example)]</title>
<path fill="none" stroke="#000000" d="M6089.3159,-3723.8701C6299.2645,-3723.8701 6609.516,-3723.8701 6819.3023,-3723.8701"/>
<polygon fill="#000000" stroke="#000000" points="6819.5278,-3727.3702 6829.5277,-3723.8701 6819.5277,-3720.3702 6819.5278,-3727.3702"/>
</g>
<!-- (=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCaseType[Int],Unit]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCaseType[Int],_$1] -->
<g id="node835" class="node">
<title>(=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCaseType[Int],Unit]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCaseType[Int],_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-48423.8701" rx="614.4516" ry="26.7407"/>
<text text-anchor="start" x="226.1596" y="-48427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCaseType[Int],Unit]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.EmptyCaseType[Int],_$1]</text>
<text text-anchor="middle" x="652.6596" y="-48412.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P) -->
<g id="node836" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-48495.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="525.6596" y="-48499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-48484.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[String,SGen] -->
<g id="node837" class="node">
<title>shapeless.Generic.Aux[String,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-48567.8701" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="1761.534" y="-48571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[String,SGen]</text>
<text text-anchor="middle" x="1862.034" y="-48556.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String, String)] -->
<g id="node838" class="node">
<title>org.scalacheck.Arbitrary[(String, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-8317.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="5749.0954" y="-8321.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(String, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-8306.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String, String)]&#45;&gt;scala.reflect.ClassTag[(String, String)] -->
<g id="edge247" class="edge">
<title>org.scalacheck.Arbitrary[(String, String)]&#45;&gt;scala.reflect.ClassTag[(String, String)]</title>
<path fill="none" stroke="#000000" d="M6033.2987,-8317.8701C6258.0582,-8317.8701 6650.3405,-8317.8701 6875.0039,-8317.8701"/>
<polygon fill="#000000" stroke="#000000" points="6875.2427,-8321.3702 6885.2427,-8317.8701 6875.2427,-8314.3702 6875.2427,-8321.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, String)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge884" class="edge">
<title>org.scalacheck.Arbitrary[(String, String)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6014.5601,-8330.1902C6172.219,-8339.3167 6403.9739,-8341.4383 6466.6717,-8281.8701 6478.3426,-8270.7817 6463.6702,-8221.6228 6474.6717,-8209.8701 6588.5064,-8088.2619 6793.5816,-8081.18 6924.584,-8091.4218"/>
<polygon fill="#000000" stroke="#000000" points="6924.4144,-8094.9196 6934.6689,-8092.2558 6924.9914,-8087.9435 6924.4144,-8094.9196"/>
</g>
<!-- monocle.Iso[MacroOutSideMonocleSpec.this.Example2Type[Int],(Int, Option[Int])] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2Type[Int],_$1] -->
<g id="node839" class="node">
<title>monocle.Iso[MacroOutSideMonocleSpec.this.Example2Type[Int],(Int, Option[Int])] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2Type[Int],_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-48639.8701" rx="631.3927" ry="26.7407"/>
<text text-anchor="start" x="214.1596" y="-48643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Iso[MacroOutSideMonocleSpec.this.Example2Type[Int],(Int, Option[Int])] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example2Type[Int],_$1]</text>
<text text-anchor="middle" x="652.6596" y="-48628.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop -->
<g id="node841" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-48711.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="515.6596" y="-48715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop</text>
<text text-anchor="middle" x="652.6596" y="-48700.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Cons[String,Char] -->
<g id="node842" class="node">
<title>monocle.function.Cons[String,Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-48783.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="552.6596" y="-48787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons[String,Char]</text>
<text text-anchor="middle" x="652.6596" y="-48772.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]] -->
<g id="node843" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-35229.8701" rx="347.379" ry="26.7407"/>
<text text-anchor="start" x="1624.534" y="-35233.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-35218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- shapeless.Generic.Aux[scalaz.NonEmptyList[Int],L1] -->
<g id="node940" class="node">
<title>shapeless.Generic.Aux[scalaz.NonEmptyList[Int],L1]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-35229.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="3019.3678" y="-35233.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scalaz.NonEmptyList[Int],L1]</text>
<text text-anchor="middle" x="3166.8678" y="-35218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]&#45;&gt;shapeless.Generic.Aux[scalaz.NonEmptyList[Int],L1] -->
<g id="edge905" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]&#45;&gt;shapeless.Generic.Aux[scalaz.NonEmptyList[Int],L1]</title>
<path fill="none" stroke="#000000" d="M2209.5633,-35229.8701C2439.7186,-35229.8701 2735.1821,-35229.8701 2936.5876,-35229.8701"/>
<polygon fill="#000000" stroke="#000000" points="2936.7067,-35233.3702 2946.7067,-35229.8701 2936.7067,-35226.3702 2936.7067,-35233.3702"/>
</g>
<!-- org.scalacheck.Cogen[(Int, Boolean)]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge321" class="edge">
<title>org.scalacheck.Cogen[(Int, Boolean)]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M6000.7098,-9817.4289C6159.2531,-9806.6144 6404.9398,-9801.4217 6466.6717,-9865.8701 6485.3892,-9885.4112 6458.8852,-10330.8931 6474.6717,-10352.8701 6577.1988,-10495.6021 6788.9846,-10538.5048 6923.9227,-10551.0816"/>
<polygon fill="#000000" stroke="#000000" points="6923.635,-10554.5697 6933.9059,-10551.9699 6924.2555,-10547.5972 6923.635,-10554.5697"/>
</g>
<!-- org.scalacheck.Cogen[(Int, Boolean)]&#45;&gt;org.scalacheck.Cogen[Boolean] -->
<g id="edge485" class="edge">
<title>org.scalacheck.Cogen[(Int, Boolean)]&#45;&gt;org.scalacheck.Cogen[Boolean]</title>
<path fill="none" stroke="#000000" d="M6000.5043,-9842.4249C6159.1777,-9853.3907 6405.3202,-9858.7711 6466.6717,-9793.8701 6478.3691,-9781.4959 6468.6989,-7357.816 6474.6717,-7341.8701 6584.2305,-7049.3763 6887.678,-6800.0776 7001.829,-6713.992"/>
<polygon fill="#000000" stroke="#000000" points="7004.136,-6716.6369 7010.0372,-6707.8377 6999.9367,-6711.0363 7004.136,-6716.6369"/>
</g>
<!-- org.scalacheck.Arbitrary[String \/ Int]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge1198" class="edge">
<title>org.scalacheck.Arbitrary[String \/ Int]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M5999.4094,-9338.3092C6157.9999,-9349.2811 6405.0501,-9354.7868 6466.6717,-9289.8701 6487.3261,-9268.1112 6455.327,-8232.8011 6474.6717,-8209.8701 6584.0583,-8080.2042 6796.6875,-8076.9751 6929.4468,-8089.9597"/>
<polygon fill="#000000" stroke="#000000" points="6929.3522,-8093.4683 6939.6569,-8091.0056 6930.0656,-8086.5047 6929.3522,-8093.4683"/>
</g>
<!-- org.scalacheck.Arbitrary[String \/ Int]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge647" class="edge">
<title>org.scalacheck.Arbitrary[String \/ Int]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M5999.4664,-9313.3769C6158.1133,-9302.3515 6405.2194,-9296.793 6466.6717,-9361.8701 6484.0457,-9380.2689 6461.8086,-12984.0775 6474.6717,-13005.8701 6577.5445,-13180.1558 6814.5258,-13265.4807 6948.7266,-13301.1922"/>
<polygon fill="#000000" stroke="#000000" points="6948.0444,-13304.6315 6958.605,-13303.7806 6949.8187,-13297.8601 6948.0444,-13304.6315"/>
</g>
<!-- org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)]] -->
<g id="node846" class="node">
<title>org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-17004.8701" rx="395.0455" ry="26.7407"/>
<text text-anchor="start" x="381.1596" y="-17008.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)]]</text>
<text text-anchor="middle" x="652.6596" y="-16993.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 28ms</text>
</g>
<!-- scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)]] -->
<g id="node1211" class="node">
<title>scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-17004.8701" rx="359.8347" ry="26.7407"/>
<text text-anchor="start" x="1615.534" y="-17008.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)]]</text>
<text text-anchor="middle" x="1862.034" y="-16993.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 27ms</text>
</g>
<!-- org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)]]&#45;&gt;scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)]] -->
<g id="edge1033" class="edge">
<title>org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)]]&#45;&gt;scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)]]</title>
<path fill="none" stroke="#000000" d="M1048.2355,-17004.8701C1190.9603,-17004.8701 1351.4106,-17004.8701 1491.8792,-17004.8701"/>
<polygon fill="#000000" stroke="#000000" points="1491.958,-17008.3702 1501.9579,-17004.8701 1491.9579,-17001.3702 1491.958,-17008.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Char]&#45;&gt;scala.reflect.ClassTag[Char] -->
<g id="edge801" class="edge">
<title>org.scalacheck.Arbitrary[Char]&#45;&gt;scala.reflect.ClassTag[Char]</title>
<path fill="none" stroke="#000000" d="M7177.7317,-4807.8701C7399.4131,-4807.8701 7844.4708,-4807.8701 8065.6809,-4807.8701"/>
<polygon fill="#000000" stroke="#000000" points="8065.7202,-4811.3702 8075.7202,-4807.8701 8065.7202,-4804.3702 8065.7202,-4811.3702"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._1.N,Boolean,(Boolean, HListSpec.this.H)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0,Boolean,(Boolean, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="edge827" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._1.N,Boolean,(Boolean, HListSpec.this.H)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless._0,Boolean,(Boolean, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M2301.5176,-33195.8701C2338.6235,-33195.8701 2376.7615,-33195.8701 2415.3735,-33195.8701"/>
<polygon fill="#000000" stroke="#000000" points="2415.7358,-33199.3702 2425.7358,-33195.8701 2415.7358,-33192.3702 2415.7358,-33199.3702"/>
</g>
<!-- org.scalacheck.Cogen[(String, Boolean)] -->
<g id="node850" class="node">
<title>org.scalacheck.Cogen[(String, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-6141.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="5750.5954" y="-6145.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(String, Boolean)]</text>
<text text-anchor="middle" x="5862.0954" y="-6130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- org.scalacheck.Cogen[(String, Boolean)]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge1254" class="edge">
<title>org.scalacheck.Cogen[(String, Boolean)]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M6020.8993,-6132.5263C6142.8399,-6125.3243 6315.4082,-6115.0733 6466.6717,-6105.8701 6620.6115,-6096.504 6797.5416,-6085.4706 6914.9596,-6078.1106"/>
<polygon fill="#000000" stroke="#000000" points="6915.3112,-6081.5955 6925.0726,-6077.4765 6914.8732,-6074.6092 6915.3112,-6081.5955"/>
</g>
<!-- org.scalacheck.Cogen[(String, Boolean)]&#45;&gt;org.scalacheck.Cogen[Boolean] -->
<g id="edge1132" class="edge">
<title>org.scalacheck.Cogen[(String, Boolean)]&#45;&gt;org.scalacheck.Cogen[Boolean]</title>
<path fill="none" stroke="#000000" d="M6009.9023,-6128.8218C6168.5787,-6118.4552 6406.1006,-6114.6758 6466.6717,-6177.8701 6484.6654,-6196.643 6456.7104,-6627.0661 6474.6717,-6645.8701 6599.9949,-6777.0731 6837.122,-6739.4587 6962.8659,-6707.0775"/>
<polygon fill="#000000" stroke="#000000" points="6964.0485,-6710.3857 6972.8323,-6704.4617 6962.2714,-6703.615 6964.0485,-6710.3857"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int, HListSpec.this.HTail)) =&gt; (Int, HListSpec.this.HTail)] -->
<g id="node851" class="node">
<title>org.scalacheck.Arbitrary[((Int, HListSpec.this.HTail)) =&gt; (Int, HListSpec.this.HTail)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-7809.8701" rx="344.2221" ry="26.7407"/>
<text text-anchor="start" x="4350.753" y="-7813.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Int, HListSpec.this.HTail)) =&gt; (Int, HListSpec.this.HTail)]</text>
<text text-anchor="middle" x="4586.253" y="-7798.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, HListSpec.this.HTail)) =&gt; (Int, HListSpec.this.HTail)]&#45;&gt;org.scalacheck.Cogen[(Int, HListSpec.this.HTail)] -->
<g id="edge84" class="edge">
<title>org.scalacheck.Arbitrary[((Int, HListSpec.this.HTail)) =&gt; (Int, HListSpec.this.HTail)]&#45;&gt;org.scalacheck.Cogen[(Int, HListSpec.this.HTail)]</title>
<path fill="none" stroke="#000000" d="M4667.2949,-7783.7255C4808.4925,-7743.8393 5098.8909,-7687.9426 5249.5191,-7845.8701 5271.6823,-7869.1072 5235.417,-8978.5748 5257.5191,-9001.8701 5313.4639,-9060.8351 5522.3417,-9061.7091 5679.027,-9053.1515"/>
<polygon fill="#000000" stroke="#000000" points="5679.4825,-9056.6314 5689.2699,-9052.5746 5679.0889,-9049.6425 5679.4825,-9056.6314"/>
</g>
<!-- scala.reflect.ClassTag[((Int, HListSpec.this.HTail)) =&gt; (Int, HListSpec.this.HTail)] -->
<g id="node937" class="node">
<title>scala.reflect.ClassTag[((Int, HListSpec.this.HTail)) =&gt; (Int, HListSpec.this.HTail)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-7191.8701" rx="333.509" ry="26.7407"/>
<text text-anchor="start" x="5634.0954" y="-7195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Int, HListSpec.this.HTail)) =&gt; (Int, HListSpec.this.HTail)]</text>
<text text-anchor="middle" x="5862.0954" y="-7180.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, HListSpec.this.HTail)) =&gt; (Int, HListSpec.this.HTail)]&#45;&gt;scala.reflect.ClassTag[((Int, HListSpec.this.HTail)) =&gt; (Int, HListSpec.this.HTail)] -->
<g id="edge216" class="edge">
<title>org.scalacheck.Arbitrary[((Int, HListSpec.this.HTail)) =&gt; (Int, HListSpec.this.HTail)]&#45;&gt;scala.reflect.ClassTag[((Int, HListSpec.this.HTail)) =&gt; (Int, HListSpec.this.HTail)]</title>
<path fill="none" stroke="#000000" d="M4733.8702,-7834.1874C4888.0605,-7850.1836 5124.5257,-7846.3475 5249.5191,-7701.8701 5266.569,-7682.1624 5239.565,-7251.7576 5257.5191,-7232.8701 5302.7747,-7185.2619 5447.7337,-7174.344 5584.3586,-7175.6498"/>
<polygon fill="#000000" stroke="#000000" points="5584.5578,-7179.1523 5594.5983,-7175.7704 5584.6403,-7172.1528 5584.5578,-7179.1523"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, HListSpec.this.HTail)] -->
<g id="node1183" class="node">
<title>org.scalacheck.Arbitrary[(Int, HListSpec.this.HTail)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-7809.8701" rx="217.1636" ry="26.7407"/>
<text text-anchor="start" x="5716.5954" y="-7813.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, HListSpec.this.HTail)]</text>
<text text-anchor="middle" x="5862.0954" y="-7798.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 18ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, HListSpec.this.HTail)) =&gt; (Int, HListSpec.this.HTail)]&#45;&gt;org.scalacheck.Arbitrary[(Int, HListSpec.this.HTail)] -->
<g id="edge1007" class="edge">
<title>org.scalacheck.Arbitrary[((Int, HListSpec.this.HTail)) =&gt; (Int, HListSpec.this.HTail)]&#45;&gt;org.scalacheck.Arbitrary[(Int, HListSpec.this.HTail)]</title>
<path fill="none" stroke="#000000" d="M4930.6737,-7809.8701C5154.0992,-7809.8701 5438.9482,-7809.8701 5634.4706,-7809.8701"/>
<polygon fill="#000000" stroke="#000000" points="5634.5875,-7813.3702 5644.5875,-7809.8701 5634.5874,-7806.3702 5634.5875,-7813.3702"/>
</g>
<!-- xs.type =&gt; ?{def #::: ?} -->
<g id="node852" class="node">
<title>xs.type =&gt; ?{def #::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-48855.8701" rx="104.8038" ry="26.7407"/>
<text text-anchor="start" x="586.6596" y="-48859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">xs.type =&gt; ?{def #::: ?}</text>
<text text-anchor="middle" x="652.6596" y="-48844.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Vector[Int] =&gt; Vector[Int]] -->
<g id="node853" class="node">
<title>org.scalacheck.Arbitrary[Vector[Int] =&gt; Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-12571.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="4441.753" y="-12575.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Vector[Int] =&gt; Vector[Int]]</text>
<text text-anchor="middle" x="4586.253" y="-12560.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 58ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Vector[Int] =&gt; Vector[Int]]&#45;&gt;org.scalacheck.Cogen[Vector[Int]] -->
<g id="edge239" class="edge">
<title>org.scalacheck.Arbitrary[Vector[Int] =&gt; Vector[Int]]&#45;&gt;org.scalacheck.Cogen[Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M4801.5391,-12574.0207C4952.9116,-12562.79 5146.2011,-12520.1071 5249.5191,-12384.8701 5264.8823,-12364.7605 5240.084,-11492.2123 5257.5191,-11473.8701 5318.7022,-11409.5039 5562.3616,-11414.4056 5721.0534,-11425.1886"/>
<polygon fill="#000000" stroke="#000000" points="5721.1617,-11428.7045 5731.3805,-11425.9067 5721.6474,-11421.7214 5721.1617,-11428.7045"/>
</g>
<!-- org.scalacheck.Arbitrary[Vector[Int] =&gt; Vector[Int]]&#45;&gt;scala.reflect.ClassTag[Vector[Int] =&gt; Vector[Int]] -->
<g id="edge780" class="edge">
<title>org.scalacheck.Arbitrary[Vector[Int] =&gt; Vector[Int]]&#45;&gt;scala.reflect.ClassTag[Vector[Int] =&gt; Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M4784.7104,-12582.4091C4916.5074,-12589.4655 5093.3658,-12599.0439 5249.5191,-12607.8701 5388.5373,-12615.7277 5545.2788,-12624.9457 5665.4097,-12632.0868"/>
<polygon fill="#000000" stroke="#000000" points="5665.2631,-12635.5842 5675.4533,-12632.6841 5665.6787,-12628.5965 5665.2631,-12635.5842"/>
</g>
<!-- org.scalacheck.Arbitrary[Vector[Int] =&gt; Vector[Int]]&#45;&gt;org.scalacheck.Arbitrary[Vector[Int]] -->
<g id="edge708" class="edge">
<title>org.scalacheck.Arbitrary[Vector[Int] =&gt; Vector[Int]]&#45;&gt;org.scalacheck.Arbitrary[Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M4664.0843,-12546.7425C4803.856,-12507.0552 5096.9952,-12449.5634 5249.5191,-12607.8701 5267.6385,-12626.6764 5239.4492,-13059.0162 5257.5191,-13077.8701 5317.9435,-13140.9158 5554.4789,-13137.3041 5713.1514,-13126.9932"/>
<polygon fill="#000000" stroke="#000000" points="5713.7422,-13130.4617 5723.4876,-13126.305 5713.2771,-13123.4771 5713.7422,-13130.4617"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Long :: Double :: shapeless.HNil,shapeless.nat._1,Double,(Double, Long :: Double :: shapeless.HNil)] -->
<g id="node854" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Long :: Double :: shapeless.HNil,shapeless.nat._1,Double,(Double, Long :: Double :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-38127.8701" rx="544.4444" ry="26.7407"/>
<text text-anchor="start" x="6669.014" y="-38131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Long :: Double :: shapeless.HNil,shapeless.nat._1,Double,(Double, Long :: Double :: shapeless.HNil)]</text>
<text text-anchor="middle" x="7046.014" y="-38116.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Long :: Double :: shapeless.HNil,shapeless.nat._1,Double,(Double, Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Double :: shapeless.HNil,shapeless._0,Double,(Double, Double :: shapeless.HNil)] -->
<g id="edge721" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Long :: Double :: shapeless.HNil,shapeless.nat._1,Double,(Double, Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Double :: shapeless.HNil,shapeless._0,Double,(Double, Double :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M7590.6076,-38127.8701C7633.2452,-38127.8701 7676.1086,-38127.8701 7718.2576,-38127.8701"/>
<polygon fill="#000000" stroke="#000000" points="7718.3805,-38131.3702 7728.3804,-38127.8701 7718.3804,-38124.3702 7718.3805,-38131.3702"/>
</g>
<!-- shapeless.ops.coproduct.Inject[CoproductSpec.this.IB,Boolean] -->
<g id="node855" class="node">
<title>shapeless.ops.coproduct.Inject[CoproductSpec.this.IB,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-48927.8701" rx="257.2738" ry="26.7407"/>
<text text-anchor="start" x="478.6596" y="-48931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Inject[CoproductSpec.this.IB,Boolean]</text>
<text text-anchor="middle" x="652.6596" y="-48916.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Boolean] -->
<g id="node1003" class="node">
<title>shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-48927.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="1675.534" y="-48931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Boolean]</text>
<text text-anchor="middle" x="1862.034" y="-48916.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[CoproductSpec.this.IB,Boolean]&#45;&gt;shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Boolean] -->
<g id="edge1169" class="edge">
<title>shapeless.ops.coproduct.Inject[CoproductSpec.this.IB,Boolean]&#45;&gt;shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Boolean]</title>
<path fill="none" stroke="#000000" d="M910.2469,-48927.8701C1105.8418,-48927.8701 1374.6973,-48927.8701 1576.7841,-48927.8701"/>
<polygon fill="#000000" stroke="#000000" points="1576.9611,-48931.3702 1586.9611,-48927.8701 1576.961,-48924.3702 1576.9611,-48931.3702"/>
</g>
<!-- scalaz.Functor[F$macro$18] -->
<g id="node856" class="node">
<title>scalaz.Functor[F$macro$18]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-48999.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="574.1596" y="-49003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$18]</text>
<text text-anchor="middle" x="652.6596" y="-48988.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[Option[Nothing]] -->
<g id="node857" class="node">
<title>org.scalactic.Equality[Option[Nothing]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-27921.8701" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="1753.034" y="-27925.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[Nothing]]</text>
<text text-anchor="middle" x="1862.034" y="-27910.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 112ms</text>
</g>
<!-- org.scalactic.Equality[Option[Nothing]]&#45;&gt;scalaz.Equal[Option[Nothing]] -->
<g id="edge852" class="edge">
<title>org.scalactic.Equality[Option[Nothing]]&#45;&gt;scalaz.Equal[Option[Nothing]]</title>
<path fill="none" stroke="#000000" d="M2027.623,-27921.8701C2286.5045,-27921.8701 2782.5659,-27921.8701 3025.6106,-27921.8701"/>
<polygon fill="#000000" stroke="#000000" points="3025.9255,-27925.3702 3035.9255,-27921.8701 3025.9255,-27918.3702 3025.9255,-27925.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[IsoSpec.this.IdWrapper[Int]] -->
<g id="node858" class="node">
<title>org.scalacheck.Arbitrary[IsoSpec.this.IdWrapper[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-15505.8701" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="5713.5954" y="-15509.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[IsoSpec.this.IdWrapper[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-15494.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- scala.reflect.ClassTag[IsoSpec.this.IdWrapper[Int]] -->
<g id="node993" class="node">
<title>scala.reflect.ClassTag[IsoSpec.this.IdWrapper[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-15505.8701" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="6905.014" y="-15509.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[IsoSpec.this.IdWrapper[Int]]</text>
<text text-anchor="middle" x="7046.014" y="-15494.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[IsoSpec.this.IdWrapper[Int]]&#45;&gt;scala.reflect.ClassTag[IsoSpec.this.IdWrapper[Int]] -->
<g id="edge406" class="edge">
<title>org.scalacheck.Arbitrary[IsoSpec.this.IdWrapper[Int]]&#45;&gt;scala.reflect.ClassTag[IsoSpec.this.IdWrapper[Int]]</title>
<path fill="none" stroke="#000000" d="M6083.7395,-15505.8701C6295.4885,-15505.8701 6612.8873,-15505.8701 6824.5697,-15505.8701"/>
<polygon fill="#000000" stroke="#000000" points="6824.884,-15509.3702 6834.884,-15505.8701 6824.884,-15502.3702 6824.884,-15509.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[IsoSpec.this.IdWrapper[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge855" class="edge">
<title>org.scalacheck.Arbitrary[IsoSpec.this.IdWrapper[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6044.3795,-15521.1395C6201.1788,-15529.7674 6410.7034,-15529.008 6466.6717,-15469.8701 6483.9708,-15451.5912 6462.1133,-13679.6797 6474.6717,-13657.8701 6578.509,-13477.54 6821.0564,-13384.7564 6954.3094,-13345.8599"/>
<polygon fill="#000000" stroke="#000000" points="6955.4626,-13349.1702 6964.1042,-13343.0405 6953.5262,-13342.4433 6955.4626,-13349.1702"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductSpec.this.Person] -->
<g id="node859" class="node">
<title>org.scalacheck.Arbitrary[ProductSpec.this.Person]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-49071.8701" rx="206.4504" ry="26.7407"/>
<text text-anchor="start" x="514.6596" y="-49075.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductSpec.this.Person]</text>
<text text-anchor="middle" x="652.6596" y="-49060.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[((scalaz.IList[Char], Char)) =&gt; (scalaz.IList[Char], Char)] -->
<g id="node860" class="node">
<title>scala.reflect.ClassTag[((scalaz.IList[Char], Char)) =&gt; (scalaz.IList[Char], Char)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-4436.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="4365.253" y="-4440.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((scalaz.IList[Char], Char)) =&gt; (scalaz.IList[Char], Char)]</text>
<text text-anchor="middle" x="4586.253" y="-4425.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[(List[Int], Int)] -->
<g id="node861" class="node">
<title>org.scalacheck.Cogen[(List[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-10366.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="4483.753" y="-10370.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(List[Int], Int)]</text>
<text text-anchor="middle" x="4586.253" y="-10355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Cogen[(List[Int], Int)]&#45;&gt;org.scalacheck.Cogen[List[Int]] -->
<g id="edge933" class="edge">
<title>org.scalacheck.Cogen[(List[Int], Int)]&#45;&gt;org.scalacheck.Cogen[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4727.4399,-10355.2225C4898.7102,-10344.3006 5173.9549,-10338.083 5249.5191,-10402.8701 5262.6217,-10414.1039 5244.4926,-10429.5481 5257.5191,-10440.8701 5324.7753,-10499.3257 5567.7633,-10498.3703 5724.454,-10491.0355"/>
<polygon fill="#000000" stroke="#000000" points="5724.8277,-10494.5217 5734.6474,-10490.5437 5724.4903,-10487.5298 5724.8277,-10494.5217"/>
</g>
<!-- org.scalacheck.Cogen[(List[Int], Int)]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge464" class="edge">
<title>org.scalacheck.Cogen[(List[Int], Int)]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M4723.6955,-10353.998C4896.1032,-10341.1763 5177.8841,-10332.3178 5249.5191,-10402.8701 5267.7707,-10420.8458 5238.9736,-10500.1977 5257.5191,-10517.8701 5272.6051,-10532.2458 6520.5004,-10549.2382 6922.6323,-10554.3454"/>
<polygon fill="#000000" stroke="#000000" points="6922.7963,-10557.8476 6932.8399,-10554.4748 6922.8851,-10550.8482 6922.7963,-10557.8476"/>
</g>
<!-- scalaz.Equal[monocle.Nullary] -->
<g id="node862" class="node">
<title>scalaz.Equal[monocle.Nullary]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-16337.8701" rx="131.5437" ry="26.7407"/>
<text text-anchor="start" x="6961.014" y="-16341.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Nullary]</text>
<text text-anchor="middle" x="7046.014" y="-16326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- monocle.Unary =&gt; ?{def shouldEqual: ?} -->
<g id="node863" class="node">
<title>monocle.Unary =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-24825.8701" rx="174.8109" ry="26.7407"/>
<text text-anchor="start" x="537.1596" y="-24829.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Unary =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-24814.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.Unary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge337" class="edge">
<title>monocle.Unary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M801.5033,-24811.7879C972.5912,-24799.2783 1238.4633,-24792.3385 1305.3191,-24861.8701 1324.7284,-24882.0561 1294.0152,-25345.5832 1313.3191,-25365.8701 1435.2586,-25494.0183 1668.139,-25455.5205 1787.4825,-25424.4773"/>
<polygon fill="#000000" stroke="#000000" points="1788.5048,-25427.8272 1797.2734,-25421.8807 1786.7103,-25421.0611 1788.5048,-25427.8272"/>
</g>
<!-- monocle.Unary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge635" class="edge">
<title>monocle.Unary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M788.9029,-24808.9768C924.7604,-24797.6552 1136.9007,-24795.173 1305.3191,-24861.8701 1548.0865,-24958.0108 1761.9138,-25204.2099 1835.1445,-25295.302"/>
<polygon fill="#000000" stroke="#000000" points="1832.613,-25297.7409 1841.5885,-25303.3705 1838.0827,-25293.3725 1832.613,-25297.7409"/>
</g>
<!-- org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.Cofree[Option,Int]] -->
<g id="edge1209" class="edge">
<title>org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.Cofree[Option,Int]]</title>
<path fill="none" stroke="#000000" d="M4757.1576,-13205.0907C4892.7263,-13219.9377 5087.0938,-13240.3366 5257.5191,-13254.8701 5391.4561,-13266.2919 5542.3058,-13276.526 5659.8181,-13283.9126"/>
<polygon fill="#000000" stroke="#000000" points="5659.8075,-13287.4187 5670.0069,-13284.5512 5660.2454,-13280.4324 5659.8075,-13287.4187"/>
</g>
<!-- scala.reflect.ClassTag[Int \/ String =&gt; Int \/ String] -->
<g id="node865" class="node">
<title>scala.reflect.ClassTag[Int \/ String =&gt; Int \/ String]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-8821.8701" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="5726.5954" y="-8825.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Int / String =&gt; Int / String]</text>
<text text-anchor="middle" x="5862.0954" y="-8810.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Byte =&gt; Byte] -->
<g id="node866" class="node">
<title>org.scalacheck.Arbitrary[Byte =&gt; Byte]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-37587.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="543.1596" y="-37591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Byte =&gt; Byte]</text>
<text text-anchor="middle" x="652.6596" y="-37576.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 37ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Byte =&gt; Byte]&#45;&gt;org.scalacheck.Cogen[Byte] -->
<g id="edge13" class="edge">
<title>org.scalacheck.Arbitrary[Byte =&gt; Byte]&#45;&gt;org.scalacheck.Cogen[Byte]</title>
<path fill="none" stroke="#000000" d="M808.5969,-37597.1538C1050.7593,-37611.5709 1512.5152,-37639.0615 1735.4189,-37652.332"/>
<polygon fill="#000000" stroke="#000000" points="1735.3352,-37655.8332 1745.5256,-37652.9337 1735.7513,-37648.8455 1735.3352,-37655.8332"/>
</g>
<!-- org.scalacheck.Arbitrary[Byte =&gt; Byte]&#45;&gt;org.scalacheck.Arbitrary[Byte] -->
<g id="edge818" class="edge">
<title>org.scalacheck.Arbitrary[Byte =&gt; Byte]&#45;&gt;org.scalacheck.Arbitrary[Byte]</title>
<path fill="none" stroke="#000000" d="M818.9147,-37587.8701C1058.3497,-37587.8701 1496.1074,-37587.8701 1720.7755,-37587.8701"/>
<polygon fill="#000000" stroke="#000000" points="1720.982,-37591.3702 1730.982,-37587.8701 1720.982,-37584.3702 1720.982,-37591.3702"/>
</g>
<!-- scala.reflect.ClassTag[Byte =&gt; Byte] -->
<g id="node1044" class="node">
<title>scala.reflect.ClassTag[Byte =&gt; Byte]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-37515.8701" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="1760.034" y="-37519.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Byte =&gt; Byte]</text>
<text text-anchor="middle" x="1862.034" y="-37504.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Byte =&gt; Byte]&#45;&gt;scala.reflect.ClassTag[Byte =&gt; Byte] -->
<g id="edge310" class="edge">
<title>org.scalacheck.Arbitrary[Byte =&gt; Byte]&#45;&gt;scala.reflect.ClassTag[Byte =&gt; Byte]</title>
<path fill="none" stroke="#000000" d="M808.5969,-37578.5863C1040.0309,-37564.8079 1472.0323,-37539.0888 1704.4267,-37525.2532"/>
<polygon fill="#000000" stroke="#000000" points="1704.8833,-37528.7323 1714.6575,-37524.6441 1704.4672,-37521.7447 1704.8833,-37528.7323"/>
</g>
<!-- scalaz.Equal[List[List[Int]]]&#45;&gt;scalaz.Order[List[Int]] -->
<g id="edge1241" class="edge">
<title>scalaz.Equal[List[List[Int]]]&#45;&gt;scalaz.Order[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4704.8497,-21282.3377C4951.5151,-21274.991 5516.5766,-21258.1611 5753.9461,-21251.0912"/>
<polygon fill="#000000" stroke="#000000" points="5754.0784,-21254.5889 5763.9697,-21250.7927 5753.8699,-21247.592 5754.0784,-21254.5889"/>
</g>
<!-- scalaz.Equal[List[List[Int]]]&#45;&gt;scalaz.Equal[List[Int]] -->
<g id="edge30" class="edge">
<title>scalaz.Equal[List[List[Int]]]&#45;&gt;scalaz.Equal[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4696.5238,-21275.464C4864.3413,-21262.2451 5172.5172,-21249.0955 5249.5191,-21321.8701 5272.919,-21343.9853 5234.1773,-21371.6934 5257.5191,-21393.8701 5327.052,-21459.9322 5604.5113,-21450.1209 5758.2361,-21439.0265"/>
<polygon fill="#000000" stroke="#000000" points="5758.9168,-21442.4859 5768.6326,-21438.2606 5758.4024,-21435.5048 5758.9168,-21442.4859"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[Unit,Int]] -->
<g id="node868" class="node">
<title>org.scalacheck.Arbitrary[Either[Unit,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-16102.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="4471.753" y="-16106.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Either[Unit,Int]]</text>
<text text-anchor="middle" x="4586.253" y="-16091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 53ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[Unit,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Unit, Int),Either[Unit,Int]] -->
<g id="edge4" class="edge">
<title>org.scalacheck.Arbitrary[Either[Unit,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Unit, Int),Either[Unit,Int]]</title>
<path fill="none" stroke="#000000" d="M4707.5037,-16122.1059C4841.6928,-16142.74 5064.531,-16175.07 5257.5191,-16193.8701 5381.4537,-16205.9433 5520.1028,-16214.5503 5633.3306,-16220.3144"/>
<polygon fill="#000000" stroke="#000000" points="5633.3482,-16223.8197 5643.512,-16220.8286 5633.7013,-16216.8286 5633.3482,-16223.8197"/>
</g>
<!-- org.scalacheck.Arbitrary[(Unit, Int)] -->
<g id="node1145" class="node">
<title>org.scalacheck.Arbitrary[(Unit, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-16047.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="5762.5954" y="-16051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Unit, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-16036.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[Unit,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Unit, Int)] -->
<g id="edge21" class="edge">
<title>org.scalacheck.Arbitrary[Either[Unit,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Unit, Int)]</title>
<path fill="none" stroke="#000000" d="M4753.3747,-16095.6656C5000.8628,-16084.9967 5461.5885,-16065.1354 5703.8568,-16054.6915"/>
<polygon fill="#000000" stroke="#000000" points="5704.3198,-16058.1749 5714.1598,-16054.2474 5704.0183,-16051.1814 5704.3198,-16058.1749"/>
</g>
<!-- scala.reflect.ClassTag[Either[Unit,Int]] -->
<g id="node1173" class="node">
<title>scala.reflect.ClassTag[Either[Unit,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-16157.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="5755.0954" y="-16161.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Either[Unit,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-16146.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[Unit,Int]]&#45;&gt;scala.reflect.ClassTag[Either[Unit,Int]] -->
<g id="edge1234" class="edge">
<title>org.scalacheck.Arbitrary[Either[Unit,Int]]&#45;&gt;scala.reflect.ClassTag[Either[Unit,Int]]</title>
<path fill="none" stroke="#000000" d="M4753.3747,-16110.0745C4997.6528,-16120.605 5449.6728,-16140.091 5694.3206,-16150.6375"/>
<polygon fill="#000000" stroke="#000000" points="5694.2319,-16154.1368 5704.3734,-16151.0709 5694.5334,-16147.1433 5694.2319,-16154.1368"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[Unit,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge601" class="edge">
<title>org.scalacheck.Arbitrary[Either[Unit,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4673.5561,-16126.1492C4817.5896,-16158.6561 5103.5593,-16197.192 5249.5191,-16037.8701 5264.231,-16021.8114 5242.2962,-15269.4451 5257.5191,-15253.8701 5351.4782,-15157.7376 6372.9563,-15310.24 6466.6717,-15213.8701 6481.7384,-15198.3766 6463.8807,-13676.5946 6474.6717,-13657.8701 6578.5745,-13477.5777 6821.0948,-13384.7785 6954.3263,-13345.8696"/>
<polygon fill="#000000" stroke="#000000" points="6955.4786,-13349.1801 6964.1194,-13343.0492 6953.5414,-13342.4535 6955.4786,-13349.1801"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[Unit,Int]]&#45;&gt;org.scalacheck.Arbitrary[Unit] -->
<g id="edge646" class="edge">
<title>org.scalacheck.Arbitrary[Either[Unit,Int]]&#45;&gt;org.scalacheck.Arbitrary[Unit]</title>
<path fill="none" stroke="#000000" d="M4757.5774,-16107.1801C5209.4768,-16117.7492 6403.5298,-16140.1808 6466.6717,-16083.8701 6488.0657,-16064.7906 6453.789,-16039.5078 6474.6717,-16019.8701 6605.438,-15896.8995 6836.0693,-15929.5228 6960.5684,-15959.4027"/>
<polygon fill="#000000" stroke="#000000" points="6959.9001,-15962.8424 6970.4456,-15961.8211 6961.5649,-15956.0432 6959.9001,-15962.8424"/>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.EmptyCaseType[Int]] -->
<g id="node869" class="node">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.EmptyCaseType[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-49143.8701" rx="323.2957" ry="26.7407"/>
<text text-anchor="start" x="432.1596" y="-49147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.EmptyCaseType[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-49132.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 7ms</text>
</g>
<!-- scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.EmptyCaseType[Int]] -->
<g id="node1085" class="node">
<title>scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.EmptyCaseType[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-49143.8701" rx="312.5824" ry="26.7407"/>
<text text-anchor="start" x="1649.034" y="-49147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.EmptyCaseType[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-49132.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.EmptyCaseType[Int]]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.EmptyCaseType[Int]] -->
<g id="edge606" class="edge">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.EmptyCaseType[Int]]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.EmptyCaseType[Int]]</title>
<path fill="none" stroke="#000000" d="M975.9551,-49143.8701C1150.3801,-49143.8701 1365.0071,-49143.8701 1539.3396,-49143.8701"/>
<polygon fill="#000000" stroke="#000000" points="1539.4462,-49147.3702 1549.4462,-49143.8701 1539.4461,-49140.3702 1539.4462,-49147.3702"/>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int] -->
<g id="node870" class="node">
<title>monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-26913.8701" rx="284.9281" ry="26.7407"/>
<text text-anchor="start" x="2973.3678" y="-26917.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]</text>
<text text-anchor="middle" x="3166.8678" y="-26902.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int] -->
<g id="edge611" class="edge">
<title>monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M3422.2476,-26925.8111C3566.8412,-26932.6593 3751.0334,-26941.5289 3914.9868,-26949.8701 4057.1239,-26957.1013 4216.1662,-26965.6122 4343.7546,-26972.5427"/>
<polygon fill="#000000" stroke="#000000" points="4343.875,-26976.0544 4354.0502,-26973.1023 4344.2549,-26969.0647 4343.875,-26976.0544"/>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,SGen] -->
<g id="edge1130" class="edge">
<title>monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M3451.9678,-26913.8701C3692.4681,-26913.8701 4035.8411,-26913.8701 4281.6879,-26913.8701"/>
<polygon fill="#000000" stroke="#000000" points="4281.8545,-26917.3702 4291.8545,-26913.8701 4281.8544,-26910.3702 4281.8545,-26917.3702"/>
</g>
<!-- shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._2.N,Char]&#45;&gt;shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1] -->
<g id="edge359" class="edge">
<title>shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._2.N,Char]&#45;&gt;shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1]</title>
<path fill="none" stroke="#000000" d="M2145.1635,-31287.8701C2325.1061,-31287.8701 2560.9323,-31287.8701 2760.6736,-31287.8701"/>
<polygon fill="#000000" stroke="#000000" points="2760.7584,-31291.3702 2770.7583,-31287.8701 2760.7583,-31284.3702 2760.7584,-31291.3702"/>
</g>
<!-- scalaz.Foldable[List] -->
<g id="node872" class="node">
<title>scalaz.Foldable[List]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-49215.8701" rx="92.7622" ry="26.7407"/>
<text text-anchor="start" x="595.1596" y="-49219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Foldable[List]</text>
<text text-anchor="middle" x="652.6596" y="-49204.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 9ms</text>
</g>
<!-- monocle.function.Each[scalaz.Tree[Int],Int] -->
<g id="node873" class="node">
<title>monocle.function.Each[scalaz.Tree[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-30495.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="532.1596" y="-30499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[scalaz.Tree[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-30484.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- monocle.function.Each[scalaz.Tree[Int],Int]&#45;&gt;shapeless.Generic.Aux[scalaz.Tree[Int],SGen] -->
<g id="edge831" class="edge">
<title>monocle.function.Each[scalaz.Tree[Int],Int]&#45;&gt;shapeless.Generic.Aux[scalaz.Tree[Int],SGen]</title>
<path fill="none" stroke="#000000" d="M834.6969,-30495.8701C1056.8239,-30495.8701 1431.1622,-30495.8701 1661.406,-30495.8701"/>
<polygon fill="#000000" stroke="#000000" points="1661.578,-30499.3702 1671.578,-30495.8701 1661.578,-30492.3702 1661.578,-30499.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.Example]&#45;&gt;scala.reflect.ClassTag[monocle.Example] -->
<g id="edge481" class="edge">
<title>org.scalacheck.Arbitrary[monocle.Example]&#45;&gt;scala.reflect.ClassTag[monocle.Example]</title>
<path fill="none" stroke="#000000" d="M7229.9343,-3795.8701C7444.8625,-3795.8701 7798.3751,-3795.8701 8013.1452,-3795.8701"/>
<polygon fill="#000000" stroke="#000000" points="8013.2664,-3799.3702 8023.2664,-3795.8701 8013.2664,-3792.3702 8013.2664,-3799.3702"/>
</g>
<!-- scalaz.Unzip[[β$0$]monocle.PTraversal[List[(Int, String)],List[(Int, String)],β$0$,β$0$]] -->
<g id="node875" class="node">
<title>scalaz.Unzip[[β$0$]monocle.PTraversal[List[(Int, String)],List[(Int, String)],β$0$,β$0$]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-49287.8701" rx="357.5922" ry="26.7407"/>
<text text-anchor="start" x="407.6596" y="-49291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Unzip[[β$0$]monocle.PTraversal[List[(Int, String)],List[(Int, String)],β$0$,β$0$]]</text>
<text text-anchor="middle" x="652.6596" y="-49276.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit]]&#45;&gt;scalaz.Equal[monocle.Arities =&gt; Option[Unit]] -->
<g id="edge295" class="edge">
<title>scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit]]&#45;&gt;scalaz.Equal[monocle.Arities =&gt; Option[Unit]]</title>
<path fill="none" stroke="#000000" d="M3461.3769,-16144.6699C3621.1086,-16158.3021 3807.3594,-16205.1674 3914.9868,-16337.8701 3930.115,-16356.5229 3906.1513,-16536.7424 3922.9868,-16553.8701 3988.9542,-16620.9822 4240.3874,-16617.1546 4413.996,-16605.5622"/>
<polygon fill="#000000" stroke="#000000" points="4414.2781,-16609.0512 4424.0167,-16604.8788 4413.8017,-16602.0674 4414.2781,-16609.0512"/>
</g>
<!-- scalaz.Equal[Unit =&gt; monocle.Arities] -->
<g id="node1188" class="node">
<title>scalaz.Equal[Unit =&gt; monocle.Arities]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-16001.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="4479.253" y="-16005.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Unit =&gt; monocle.Arities]</text>
<text text-anchor="middle" x="4586.253" y="-15990.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit]]&#45;&gt;scalaz.Equal[Unit =&gt; monocle.Arities] -->
<g id="edge999" class="edge">
<title>scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Unit,Unit]]&#45;&gt;scalaz.Equal[Unit =&gt; monocle.Arities]</title>
<path fill="none" stroke="#000000" d="M3352.0733,-16129.6178C3505.1046,-16112.2205 3728.0779,-16087.2463 3922.9868,-16066.8701 4098.5419,-16048.5171 4300.4059,-16028.9548 4434.8777,-16016.1422"/>
<polygon fill="#000000" stroke="#000000" points="4435.222,-16019.6254 4444.8452,-16015.1931 4434.5584,-16012.6569 4435.222,-16019.6254"/>
</g>
<!-- monocle.function.Field3[(Int, Char, Boolean, String, Long, Float),Boolean] -->
<g id="node877" class="node">
<title>monocle.function.Field3[(Int, Char, Boolean, String, Long, Float),Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-28767.8701" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="445.1596" y="-28771.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field3[(Int, Char, Boolean, String, Long, Float),Boolean]</text>
<text text-anchor="middle" x="652.6596" y="-28756.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.function.Field3[(Int, Char, Boolean, String, Long, Float),Boolean]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._2.N,Boolean] -->
<g id="edge390" class="edge">
<title>monocle.function.Field3[(Int, Char, Boolean, String, Long, Float),Boolean]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._2.N,Boolean]</title>
<path fill="none" stroke="#000000" d="M957.4453,-28767.8701C1111.2271,-28767.8701 1299.6605,-28767.8701 1464.6629,-28767.8701"/>
<polygon fill="#000000" stroke="#000000" points="1464.9956,-28771.3702 1474.9956,-28767.8701 1464.9955,-28764.3702 1464.9956,-28771.3702"/>
</g>
<!-- scalaz.Equal[HListSpec.this.Example] -->
<g id="node878" class="node">
<title>scalaz.Equal[HListSpec.this.Example]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-49359.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="1756.534" y="-49363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[HListSpec.this.Example]</text>
<text text-anchor="middle" x="1862.034" y="-49348.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scalaz.Equal[HListSpec.this.HTail] -->
<g id="node882" class="node">
<title>scalaz.Equal[HListSpec.this.HTail]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-23385.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="6949.514" y="-23389.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[HListSpec.this.HTail]</text>
<text text-anchor="middle" x="7046.014" y="-23374.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[((Int,)) =&gt; (Int,)] -->
<g id="node884" class="node">
<title>scala.reflect.ClassTag[((Int,)) =&gt; (Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-13549.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="5753.5954" y="-13553.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Int,)) =&gt; (Int,)]</text>
<text text-anchor="middle" x="5862.0954" y="-13538.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[scalaz.Tree[Int]] -->
<g id="node885" class="node">
<title>scalaz.Equal[scalaz.Tree[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-21175.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="5780.5954" y="-21179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Tree[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-21164.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 9ms</text>
</g>
<!-- scalaz.Equal[scalaz.Tree[Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge363" class="edge">
<title>scalaz.Equal[scalaz.Tree[Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5988.1427,-21172.9442C6110.7313,-21169.0201 6302.0328,-21160.0377 6466.6717,-21139.8701 6649.105,-21117.5226 6860.7813,-21073.3575 6970.8257,-21048.999"/>
<polygon fill="#000000" stroke="#000000" points="6971.8276,-21052.3618 6980.8309,-21046.7769 6970.3099,-21045.5284 6971.8276,-21052.3618"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P) -->
<g id="node886" class="node">
<title>(Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-49431.8701" rx="197.0658" ry="26.7407"/>
<text text-anchor="start" x="521.1596" y="-49435.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-49420.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(String, Int),Either[String,Int]] -->
<g id="node887" class="node">
<title>org.scalacheck.util.Buildable[(String, Int),Either[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-8533.8701" rx="244.818" ry="26.7407"/>
<text text-anchor="start" x="5697.0954" y="-8537.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(String, Int),Either[String,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-8522.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(String, Int),Either[String,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(String, Int),Either[String,Int]] -->
<g id="edge299" class="edge">
<title>org.scalacheck.util.Buildable[(String, Int),Either[String,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(String, Int),Either[String,Int]]</title>
<path fill="none" stroke="#000000" d="M6107.045,-8533.8701C6292.0065,-8533.8701 6546.8337,-8533.8701 6744.3527,-8533.8701"/>
<polygon fill="#000000" stroke="#000000" points="6744.6029,-8537.3702 6754.6028,-8533.8701 6744.6028,-8530.3702 6744.6029,-8537.3702"/>
</g>
<!-- List[(Int, String)] =&gt; ?{def shouldEqual: ?} -->
<g id="node888" class="node">
<title>List[(Int, String)] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-24753.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="532.1596" y="-24757.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[(Int, String)] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-24742.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- List[(Int, String)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge118" class="edge">
<title>List[(Int, String)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M806.078,-24739.4351C977.3143,-24727.1169 1239.1215,-24720.8863 1305.3191,-24789.8701 1327.4776,-24812.9612 1291.2811,-25342.6639 1313.3191,-25365.8701 1435.1315,-25494.1392 1668.0687,-25455.5873 1787.4534,-25424.505"/>
<polygon fill="#000000" stroke="#000000" points="1788.4804,-25427.8536 1797.2477,-25421.9051 1786.6845,-25421.0879 1788.4804,-25427.8536"/>
</g>
<!-- List[(Int, String)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge177" class="edge">
<title>List[(Int, String)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M783.2761,-24735.1108C919.6159,-24721.3293 1136.6495,-24716.0328 1305.3191,-24789.8701 1563.9468,-24903.0876 1772.3771,-25193.086 1839.346,-25294.3397"/>
<polygon fill="#000000" stroke="#000000" points="1836.6061,-25296.5437 1845.0205,-25302.9817 1842.4574,-25292.7016 1836.6061,-25296.5437"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.Tree[Int],scalaz.Tree[Int]] -->
<g id="node890" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.Tree[Int],scalaz.Tree[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-33978.8701" rx="345.1362" ry="26.7407"/>
<text text-anchor="start" x="2930.8678" y="-33982.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.Tree[Int],scalaz.Tree[Int]]</text>
<text text-anchor="middle" x="3166.8678" y="-33967.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="node892" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="9347.3831" cy="-32043.8701" rx="488.7216" ry="26.7407"/>
<text text-anchor="start" x="9009.8831" y="-32047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.HNil,Out]</text>
<text text-anchor="middle" x="9347.3831" y="-32032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Map[K,V] =&gt; Traversable[(K, V)] -->
<g id="node893" class="node">
<title>Map[K,V] =&gt; Traversable[(K, V)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-28875.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="1766.534" y="-28879.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Map[K,V] =&gt; Traversable[(K, V)]</text>
<text text-anchor="middle" x="1862.034" y="-28864.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[Throwable] -->
<g id="node895" class="node">
<title>scalaz.Equal[Throwable]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-49503.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="584.6596" y="-49507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Throwable]</text>
<text text-anchor="middle" x="652.6596" y="-49492.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Each[String,Char] -->
<g id="node896" class="node">
<title>monocle.function.Each[String,Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-48567.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="553.1596" y="-48571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[String,Char]</text>
<text text-anchor="middle" x="652.6596" y="-48556.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Each[String,Char]&#45;&gt;shapeless.Generic.Aux[String,SGen] -->
<g id="edge547" class="edge">
<title>monocle.function.Each[String,Char]&#45;&gt;shapeless.Generic.Aux[String,SGen]</title>
<path fill="none" stroke="#000000" d="M804.9089,-48567.8701C1033.4506,-48567.8701 1463.389,-48567.8701 1698.412,-48567.8701"/>
<polygon fill="#000000" stroke="#000000" points="1698.4176,-48571.3702 1708.4175,-48567.8701 1698.4175,-48564.3702 1698.4176,-48571.3702"/>
</g>
<!-- monocle.function.Index[Map[K,V],K,V] -->
<g id="node897" class="node">
<title>monocle.function.Index[Map[K,V],K,V]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-49575.8701" rx="170.3255" ry="26.7407"/>
<text text-anchor="start" x="540.1596" y="-49579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[Map[K,V],K,V]</text>
<text text-anchor="middle" x="652.6596" y="-49564.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.IList[Int] =&gt; scalaz.IList[Int]] -->
<g id="node898" class="node">
<title>org.scalacheck.Arbitrary[scalaz.IList[Int] =&gt; scalaz.IList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-13405.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="4416.253" y="-13409.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.IList[Int] =&gt; scalaz.IList[Int]]</text>
<text text-anchor="middle" x="4586.253" y="-13394.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 17ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.IList[Int] =&gt; scalaz.IList[Int]]&#45;&gt;scala.reflect.ClassTag[scalaz.IList[Int] =&gt; scalaz.IList[Int]] -->
<g id="edge941" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.IList[Int] =&gt; scalaz.IList[Int]]&#45;&gt;scala.reflect.ClassTag[scalaz.IList[Int] =&gt; scalaz.IList[Int]]</title>
<path fill="none" stroke="#000000" d="M4838.3184,-13405.8701C5062.0027,-13405.8701 5387.0731,-13405.8701 5610.5884,-13405.8701"/>
<polygon fill="#000000" stroke="#000000" points="5610.8216,-13409.3702 5620.8216,-13405.8701 5610.8216,-13402.3702 5610.8216,-13409.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.IList[Int] =&gt; scalaz.IList[Int]]&#45;&gt;org.scalacheck.Cogen[scalaz.IList[Int]] -->
<g id="edge465" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.IList[Int] =&gt; scalaz.IList[Int]]&#45;&gt;org.scalacheck.Cogen[scalaz.IList[Int]]</title>
<path fill="none" stroke="#000000" d="M4838.2204,-13406.0524C4982.9842,-13391.4961 5154.4359,-13346.2292 5249.5191,-13221.8701 5262.1226,-13205.3859 5243.7251,-11743.3716 5257.5191,-11727.8701 5313.1489,-11665.3541 5531.0887,-11651.8542 5689.3742,-11650.6575"/>
<polygon fill="#000000" stroke="#000000" points="5689.7326,-11654.1555 5699.7116,-11650.5961 5689.6909,-11647.1557 5689.7326,-11654.1555"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.IList[Int] =&gt; scalaz.IList[Int]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.IList[Int]] -->
<g id="edge1014" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.IList[Int] =&gt; scalaz.IList[Int]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.IList[Int]]</title>
<path fill="none" stroke="#000000" d="M4778.9895,-13388.553C4951.5767,-13377.8118 5186.8395,-13376.5536 5249.5191,-13441.8701 5273.1394,-13466.484 5233.9635,-14031.1942 5257.5191,-14055.8701 5316.2191,-14117.3618 5541.9715,-14115.5352 5700.323,-14105.8457"/>
<polygon fill="#000000" stroke="#000000" points="5700.8926,-14109.3169 5710.6534,-14105.1967 5700.4536,-14102.3307 5700.8926,-14109.3169"/>
</g>
<!-- monocle.function.Each[Unit \/ Int,Int] -->
<g id="node899" class="node">
<title>monocle.function.Each[Unit \/ Int,Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-41079.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="550.1596" y="-41083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Unit / Int,Int]</text>
<text text-anchor="middle" x="652.6596" y="-41068.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- monocle.function.Each[Unit \/ Int,Int]&#45;&gt;shapeless.Generic.Aux[Unit \/ Int,SGen] -->
<g id="edge633" class="edge">
<title>monocle.function.Each[Unit \/ Int,Int]&#45;&gt;shapeless.Generic.Aux[Unit \/ Int,SGen]</title>
<path fill="none" stroke="#000000" d="M809.2149,-41079.8701C1034.8338,-41079.8701 1450.1446,-41079.8701 1686.094,-41079.8701"/>
<polygon fill="#000000" stroke="#000000" points="1686.1492,-41083.3702 1696.1491,-41079.8701 1686.1491,-41076.3702 1686.1492,-41083.3702"/>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,SGen] -->
<g id="edge192" class="edge">
<title>monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M2154.4579,-26957.938C2363.2953,-26963.6997 2643.7727,-26971.438 2856.5518,-26977.3085"/>
<polygon fill="#000000" stroke="#000000" points="2856.5397,-26980.8094 2866.6324,-26977.5866 2856.7328,-26973.8121 2856.5397,-26980.8094"/>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int] -->
<g id="edge382" class="edge">
<title>monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M2154.4579,-26941.8022C2372.0778,-26935.7981 2667.4898,-26927.6478 2883.0269,-26921.7011"/>
<polygon fill="#000000" stroke="#000000" points="2883.33,-26925.1942 2893.2296,-26921.4197 2883.1368,-26918.1969 2883.33,-26925.1942"/>
</g>
<!-- scalaz.Equal[Boolean \/ IsoSpec.this.IntWrapper] -->
<g id="node902" class="node">
<title>scalaz.Equal[Boolean \/ IsoSpec.this.IntWrapper]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-17597.8701" rx="200.2225" ry="26.7407"/>
<text text-anchor="start" x="5728.5954" y="-17601.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Boolean / IsoSpec.this.IntWrapper]</text>
<text text-anchor="middle" x="5862.0954" y="-17586.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- scalaz.Equal[Boolean \/ IsoSpec.this.IntWrapper]&#45;&gt;scalaz.Order[Boolean] -->
<g id="edge356" class="edge">
<title>scalaz.Equal[Boolean \/ IsoSpec.this.IntWrapper]&#45;&gt;scalaz.Order[Boolean]</title>
<path fill="none" stroke="#000000" d="M6030.8324,-17583.3923C6188.8417,-17574.0079 6409.0352,-17573.0536 6466.6717,-17633.8701 6479.8562,-17647.782 6463.0822,-18998.6039 6474.6717,-19013.8701 6582.5682,-19155.995 6805.5417,-19180.4698 6938.7943,-19181.3992"/>
<polygon fill="#000000" stroke="#000000" points="6939.0135,-19184.8997 6949.0226,-19181.4255 6939.0317,-19177.8997 6939.0135,-19184.8997"/>
</g>
<!-- scalaz.Equal[Boolean \/ IsoSpec.this.IntWrapper]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge540" class="edge">
<title>scalaz.Equal[Boolean \/ IsoSpec.this.IntWrapper]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M6031.118,-17583.4524C6189.0347,-17574.1513 6408.8788,-17573.2929 6466.6717,-17633.8701 6479.0019,-17646.7943 6465.5441,-18261.5158 6474.6717,-18276.8701 6581.0462,-18455.8106 6827.5425,-18542.4834 6959.2957,-18577.3344"/>
<polygon fill="#000000" stroke="#000000" points="6958.7957,-18580.8208 6969.3549,-18579.9534 6960.5595,-18574.0467 6958.7957,-18580.8208"/>
</g>
<!-- scalaz.Equal[Boolean \/ IsoSpec.this.IntWrapper]&#45;&gt;scalaz.Equal[IsoSpec.this.IntWrapper] -->
<g id="edge102" class="edge">
<title>scalaz.Equal[Boolean \/ IsoSpec.this.IntWrapper]&#45;&gt;scalaz.Equal[IsoSpec.this.IntWrapper]</title>
<path fill="none" stroke="#000000" d="M6057.5955,-17591.9254C6286.2976,-17584.9711 6661.1181,-17573.5738 6877.5103,-17566.9938"/>
<polygon fill="#000000" stroke="#000000" points="6877.8047,-17570.4866 6887.6937,-17566.6842 6877.5919,-17563.4898 6877.8047,-17570.4866"/>
</g>
<!-- scalaz.Equal[Boolean \/ IsoSpec.this.IntWrapper]&#45;&gt;scalaz.Order[IsoSpec.this.IntWrapper] -->
<g id="edge545" class="edge">
<title>scalaz.Equal[Boolean \/ IsoSpec.this.IntWrapper]&#45;&gt;scalaz.Order[IsoSpec.this.IntWrapper]</title>
<path fill="none" stroke="#000000" d="M6040.4457,-17610.1314C6195.4274,-17616.7816 6404.5511,-17614.8127 6466.6717,-17561.8701 6479.1462,-17551.2386 6462.726,-17537.0924 6474.6717,-17525.8701 6591.1744,-17416.4226 6783.7106,-17408.2902 6912.6716,-17417.7916"/>
<polygon fill="#000000" stroke="#000000" points="6912.7635,-17421.3095 6923.0062,-17418.6007 6913.3099,-17414.3308 6912.7635,-17421.3095"/>
</g>
<!-- scalaz.Compose[monocle.Iso] -->
<g id="node903" class="node">
<title>scalaz.Compose[monocle.Iso]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-49647.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="569.6596" y="-49651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Compose[monocle.Iso]</text>
<text text-anchor="middle" x="652.6596" y="-49636.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[HListSpec.this.ReverseH =&gt; HListSpec.this.ReverseH] -->
<g id="node904" class="node">
<title>org.scalacheck.Arbitrary[HListSpec.this.ReverseH =&gt; HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-38847.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="431.6596" y="-38851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[HListSpec.this.ReverseH =&gt; HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="652.6596" y="-38836.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[HListSpec.this.ReverseH =&gt; HListSpec.this.ReverseH]&#45;&gt;org.scalacheck.Cogen[HListSpec.this.ReverseH] -->
<g id="edge945" class="edge">
<title>org.scalacheck.Arbitrary[HListSpec.this.ReverseH =&gt; HListSpec.this.ReverseH]&#45;&gt;org.scalacheck.Cogen[HListSpec.this.ReverseH]</title>
<path fill="none" stroke="#000000" d="M915.8213,-38863.5374C1142.8548,-38877.0538 1465.4587,-38896.26 1669.1992,-38908.3897"/>
<polygon fill="#000000" stroke="#000000" points="1669.2247,-38911.8973 1679.4151,-38908.9979 1669.6408,-38904.9097 1669.2247,-38911.8973"/>
</g>
<!-- scala.reflect.ClassTag[HListSpec.this.ReverseH =&gt; HListSpec.this.ReverseH] -->
<g id="node1322" class="node">
<title>scala.reflect.ClassTag[HListSpec.this.ReverseH =&gt; HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-38847.8701" rx="313.4968" ry="26.7407"/>
<text text-anchor="start" x="1648.534" y="-38851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[HListSpec.this.ReverseH =&gt; HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="1862.034" y="-38836.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[HListSpec.this.ReverseH =&gt; HListSpec.this.ReverseH]&#45;&gt;scala.reflect.ClassTag[HListSpec.this.ReverseH =&gt; HListSpec.this.ReverseH] -->
<g id="edge109" class="edge">
<title>org.scalacheck.Arbitrary[HListSpec.this.ReverseH =&gt; HListSpec.this.ReverseH]&#45;&gt;scala.reflect.ClassTag[HListSpec.this.ReverseH =&gt; HListSpec.this.ReverseH]</title>
<path fill="none" stroke="#000000" d="M976.7497,-38847.8701C1150.7386,-38847.8701 1364.5514,-38847.8701 1538.4613,-38847.8701"/>
<polygon fill="#000000" stroke="#000000" points="1538.5438,-38851.3702 1548.5437,-38847.8701 1538.5437,-38844.3702 1538.5438,-38851.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[HListSpec.this.ReverseH] -->
<g id="node1368" class="node">
<title>org.scalacheck.Arbitrary[HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-38775.8701" rx="210.0214" ry="26.7407"/>
<text text-anchor="start" x="1721.534" y="-38779.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="1862.034" y="-38764.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[HListSpec.this.ReverseH =&gt; HListSpec.this.ReverseH]&#45;&gt;org.scalacheck.Arbitrary[HListSpec.this.ReverseH] -->
<g id="edge975" class="edge">
<title>org.scalacheck.Arbitrary[HListSpec.this.ReverseH =&gt; HListSpec.this.ReverseH]&#45;&gt;org.scalacheck.Arbitrary[HListSpec.this.ReverseH]</title>
<path fill="none" stroke="#000000" d="M925.7842,-38833.3825C1042.6891,-38827.0318 1180.7132,-38819.3353 1305.3191,-38811.8701 1424.9687,-38804.7018 1559.0403,-38796.0509 1665.6275,-38789.0261"/>
<polygon fill="#000000" stroke="#000000" points="1666.1072,-38792.5021 1675.8552,-38788.3515 1665.6464,-38785.5173 1666.1072,-38792.5021"/>
</g>
<!-- org.scalacheck.Cogen[Option[Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge926" class="edge">
<title>org.scalacheck.Cogen[Option[Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M5993.6998,-11593.4563C6151.5135,-11604.1574 6402.8114,-11609.9848 6466.6717,-11545.8701 6477.9803,-11534.5164 6469.5588,-11417.0572 6474.6717,-11401.8701 6595.0582,-11044.2806 6910.3374,-10696.3726 7013.107,-10589.3402"/>
<polygon fill="#000000" stroke="#000000" points="7015.7117,-10591.6813 7020.1336,-10582.0533 7010.6728,-10586.8224 7015.7117,-10591.6813"/>
</g>
<!-- org.scalacheck.Arbitrary[Option[scalaz.NonEmptyList[Int]]] -->
<g id="node908" class="node">
<title>org.scalacheck.Arbitrary[Option[scalaz.NonEmptyList[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-13549.8701" rx="246.1463" ry="26.7407"/>
<text text-anchor="start" x="4420.253" y="-13553.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Option[scalaz.NonEmptyList[Int]]]</text>
<text text-anchor="middle" x="4586.253" y="-13538.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[scalaz.NonEmptyList[Int]]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int]] -->
<g id="edge1060" class="edge">
<title>org.scalacheck.Arbitrary[Option[scalaz.NonEmptyList[Int]]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int]]</title>
<path fill="none" stroke="#000000" d="M4776.4434,-13566.9584C4949.1913,-13577.7861 5186.3658,-13579.3308 5249.5191,-13513.8701 5266.3397,-13496.435 5240.7444,-13095.3493 5257.5191,-13077.8701 5313.1765,-13019.8751 5518.0011,-13018.3128 5673.9634,-13026.4621"/>
<polygon fill="#000000" stroke="#000000" points="5673.9895,-13029.9685 5684.1636,-13027.0125 5674.3667,-13022.9787 5673.9895,-13029.9685"/>
</g>
<!-- scalaz.Unzip[[β$0$]monocle.Fold[List[(Int, String)],β$0$]] -->
<g id="node909" class="node">
<title>scalaz.Unzip[[β$0$]monocle.Fold[List[(Int, String)],β$0$]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-49719.8701" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="489.1596" y="-49723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Unzip[[β$0$]monocle.Fold[List[(Int, String)],β$0$]]</text>
<text text-anchor="middle" x="652.6596" y="-49708.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- h.type =&gt; ?{def init: ?} -->
<g id="node910" class="node">
<title>h.type =&gt; ?{def init: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-49791.8701" rx="103.4757" ry="26.7407"/>
<text text-anchor="start" x="587.6596" y="-49795.6701" font-family="Times,serif" font-size="14.00" fill="#000000">h.type =&gt; ?{def init: ?}</text>
<text text-anchor="middle" x="652.6596" y="-49780.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Functor[F$macro$11] -->
<g id="node911" class="node">
<title>scalaz.Functor[F$macro$11]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-49863.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="574.1596" y="-49867.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$11]</text>
<text text-anchor="middle" x="652.6596" y="-49852.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Field1[(Boolean, Char, Int, Long, Float, Double),Boolean] -->
<g id="node912" class="node">
<title>monocle.function.Field1[(Boolean, Char, Int, Long, Float, Double),Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-33870.8701" rx="309.0113" ry="26.7407"/>
<text text-anchor="start" x="442.1596" y="-33874.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field1[(Boolean, Char, Int, Long, Float, Double),Boolean]</text>
<text text-anchor="middle" x="652.6596" y="-33859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- monocle.function.Field1[(Boolean, Char, Int, Long, Float, Double),Boolean]&#45;&gt;shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._0.N,Boolean] -->
<g id="edge136" class="edge">
<title>monocle.function.Field1[(Boolean, Char, Int, Long, Float, Double),Boolean]&#45;&gt;shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._0.N,Boolean]</title>
<path fill="none" stroke="#000000" d="M961.7487,-33870.8701C1113.2401,-33870.8701 1297.5599,-33870.8701 1459.8702,-33870.8701"/>
<polygon fill="#000000" stroke="#000000" points="1460.0358,-33874.3702 1470.0357,-33870.8701 1460.0357,-33867.3702 1460.0358,-33874.3702"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._2.N,Char,(Char, HListSpec.this.H)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Char,(Char, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="edge511" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._2.N,Char,(Char, HListSpec.this.H)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Char,(Char, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M2275.3396,-31215.8701C2324.433,-31215.8701 2375.6228,-31215.8701 2427.5605,-31215.8701"/>
<polygon fill="#000000" stroke="#000000" points="2427.6115,-31219.3702 2437.6115,-31215.8701 2427.6115,-31212.3702 2427.6115,-31219.3702"/>
</g>
<!-- scalaz.Equal[Unit =&gt; monocle.Nullary] -->
<g id="node1358" class="node">
<title>scalaz.Equal[Unit =&gt; monocle.Nullary]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-16301.8701" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="5753.0954" y="-16305.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Unit =&gt; monocle.Nullary]</text>
<text text-anchor="middle" x="5862.0954" y="-16290.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- scalaz.Equal[monocle.Iso[monocle.Nullary,Unit]]&#45;&gt;scalaz.Equal[Unit =&gt; monocle.Nullary] -->
<g id="edge166" class="edge">
<title>scalaz.Equal[monocle.Iso[monocle.Nullary,Unit]]&#45;&gt;scalaz.Equal[Unit =&gt; monocle.Nullary]</title>
<path fill="none" stroke="#000000" d="M4774.851,-16363.2268C5023.6782,-16349.1847 5457.7897,-16324.6864 5695.2362,-16311.2865"/>
<polygon fill="#000000" stroke="#000000" points="5695.5582,-16314.774 5705.345,-16310.716 5695.1637,-16307.7851 5695.5582,-16314.774"/>
</g>
<!-- scalaz.Equal[monocle.Nullary =&gt; Unit] -->
<g id="node1436" class="node">
<title>scalaz.Equal[monocle.Nullary =&gt; Unit]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-16661.8701" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="5753.0954" y="-16665.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Nullary =&gt; Unit]</text>
<text text-anchor="middle" x="5862.0954" y="-16650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- scalaz.Equal[monocle.Iso[monocle.Nullary,Unit]]&#45;&gt;scalaz.Equal[monocle.Nullary =&gt; Unit] -->
<g id="edge380" class="edge">
<title>scalaz.Equal[monocle.Iso[monocle.Nullary,Unit]]&#45;&gt;scalaz.Equal[monocle.Nullary =&gt; Unit]</title>
<path fill="none" stroke="#000000" d="M4712.6062,-16352.6607C4864.6263,-16335.1795 5116.0184,-16333.4241 5249.5191,-16481.8701 5270.9501,-16505.7002 5234.9019,-16603.1627 5257.5191,-16625.8701 5318.0561,-16686.6482 5547.0295,-16684.5745 5705.1328,-16675.0782"/>
<polygon fill="#000000" stroke="#000000" points="5705.6762,-16678.5515 5715.4418,-16674.4426 5705.2453,-16671.5647 5705.6762,-16678.5515"/>
</g>
<!-- monocle.function.Reverse[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]] -->
<g id="node915" class="node">
<title>monocle.function.Reverse[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-35193.8701" rx="322.3814" ry="26.7407"/>
<text text-anchor="start" x="432.6596" y="-35197.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-35182.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- monocle.function.Reverse[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]] -->
<g id="edge745" class="edge">
<title>monocle.function.Reverse[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]</title>
<path fill="none" stroke="#000000" d="M956.6648,-35202.9195C1130.5764,-35208.0964 1348.9987,-35214.5983 1527.7317,-35219.9187"/>
<polygon fill="#000000" stroke="#000000" points="1527.7259,-35223.42 1537.8256,-35220.2192 1527.9342,-35216.4231 1527.7259,-35223.42"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]] -->
<g id="node963" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-35157.8701" rx="345.1362" ry="26.7407"/>
<text text-anchor="start" x="1626.034" y="-35161.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-35146.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Reverse[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]] -->
<g id="edge1123" class="edge">
<title>monocle.function.Reverse[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]</title>
<path fill="none" stroke="#000000" d="M956.6648,-35184.8206C1131.1773,-35179.6258 1350.5086,-35173.0969 1529.5829,-35167.7663"/>
<polygon fill="#000000" stroke="#000000" points="1529.8042,-35171.2613 1539.6956,-35167.4653 1529.5958,-35164.2644 1529.8042,-35171.2613"/>
</g>
<!-- scala.reflect.ClassTag[Boolean \/ Int] -->
<g id="node917" class="node">
<title>scala.reflect.ClassTag[Boolean \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-7665.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="6946.014" y="-7669.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Boolean / Int]</text>
<text text-anchor="middle" x="7046.014" y="-7654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scalaz.Equal[java.net.URL] -->
<g id="node918" class="node">
<title>scalaz.Equal[java.net.URL]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-49935.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-49939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[java.net.URL]</text>
<text text-anchor="middle" x="652.6596" y="-49924.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Cogen[String \/ Int] -->
<g id="node919" class="node">
<title>org.scalacheck.Cogen[String \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-8605.8701" rx="144.5" ry="26.7407"/>
<text text-anchor="start" x="5768.0954" y="-8609.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[String / Int]</text>
<text text-anchor="middle" x="5862.0954" y="-8594.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Cogen[String \/ Int]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge417" class="edge">
<title>org.scalacheck.Cogen[String \/ Int]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M5991.4804,-8593.9642C6149.6616,-8582.6096 6404.0997,-8575.7716 6466.6717,-8641.8701 6483.0088,-8659.1279 6460.9212,-10333.4881 6474.6717,-10352.8701 6576.4328,-10496.3067 6788.7098,-10538.9845 6923.9139,-10551.3264"/>
<polygon fill="#000000" stroke="#000000" points="6923.6507,-10554.8166 6933.9166,-10552.1971 6924.2578,-10547.843 6923.6507,-10554.8166"/>
</g>
<!-- org.scalacheck.Cogen[String \/ Int]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge1177" class="edge">
<title>org.scalacheck.Cogen[String \/ Int]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M5991.4932,-8617.788C6149.6878,-8629.1553 6404.1403,-8636.0069 6466.6717,-8569.8701 6488.8093,-8546.4561 6455.5705,-6275.8206 6474.6717,-6249.8701 6574.0592,-6114.8438 6774.8531,-6078.4978 6909.917,-6070.0936"/>
<polygon fill="#000000" stroke="#000000" points="6910.1498,-6073.5861 6919.9308,-6069.5141 6909.7453,-6066.5978 6910.1498,-6073.5861"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Int :: shapeless.HNil,Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH] -->
<g id="node920" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Int :: shapeless.HNil,Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-23673.8701" rx="571.1846" ry="26.7407"/>
<text text-anchor="start" x="6650.014" y="-23677.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Int :: shapeless.HNil,Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="7046.014" y="-23662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Float :: Char :: Boolean :: Int :: shapeless.HNil,Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH] -->
<g id="node1249" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Float :: Char :: Boolean :: Int :: shapeless.HNil,Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-23673.8701" rx="571.1846" ry="26.7407"/>
<text text-anchor="start" x="7800.6985" y="-23677.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Float :: Char :: Boolean :: Int :: shapeless.HNil,Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="8196.6985" y="-23662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Int :: shapeless.HNil,Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Float :: Char :: Boolean :: Int :: shapeless.HNil,Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH] -->
<g id="edge1351" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Int :: shapeless.HNil,Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Float :: Char :: Boolean :: Int :: shapeless.HNil,Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]</title>
<path fill="none" stroke="#000000" d="M7617.5638,-23673.8701C7617.7225,-23673.8701 7617.8812,-23673.8701 7618.0399,-23673.8701"/>
<polygon fill="#000000" stroke="#000000" points="7615.1822,-23677.3702 7625.1821,-23673.8701 7615.1821,-23670.3702 7615.1822,-23677.3702"/>
</g>
<!-- scalaz.Equal[String \/ Int \/ Boolean] -->
<g id="node922" class="node">
<title>scalaz.Equal[String \/ Int \/ Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-22043.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="4489.753" y="-22047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[String / Int / Boolean]</text>
<text text-anchor="middle" x="4586.253" y="-22032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- scalaz.Equal[String \/ Int \/ Boolean]&#45;&gt;scalaz.Equal[String \/ Int] -->
<g id="edge779" class="edge">
<title>scalaz.Equal[String \/ Int \/ Boolean]&#45;&gt;scalaz.Equal[String \/ Int]</title>
<path fill="none" stroke="#000000" d="M4734.1669,-22043.8701C4989.9269,-22043.8701 5509.8028,-22043.8701 5743.5606,-22043.8701"/>
<polygon fill="#000000" stroke="#000000" points="5743.7944,-22047.3702 5753.7943,-22043.8701 5743.7943,-22040.3702 5743.7944,-22047.3702"/>
</g>
<!-- scalaz.Equal[String \/ Int \/ Boolean]&#45;&gt;scalaz.Order[String \/ Int] -->
<g id="edge761" class="edge">
<title>scalaz.Equal[String \/ Int \/ Boolean]&#45;&gt;scalaz.Order[String \/ Int]</title>
<path fill="none" stroke="#000000" d="M4703.4174,-22027.4768C4855.8796,-22013.5673 5118.2556,-22016.4966 5249.5191,-22174.8701 5266.5188,-22195.3808 5239.1696,-23114.5575 5257.5191,-23133.8701 5322.6745,-23202.4453 5594.8863,-23192.4099 5750.9187,-23180.3897"/>
<polygon fill="#000000" stroke="#000000" points="5751.3297,-23183.8683 5761.0248,-23179.5959 5750.7815,-23176.8898 5751.3297,-23183.8683"/>
</g>
<!-- scalaz.Equal[String \/ Int \/ Boolean]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge1261" class="edge">
<title>scalaz.Equal[String \/ Int \/ Boolean]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M4700.8635,-22060.8954C4852.9778,-22076.1964 5117.662,-22075.9725 5249.5191,-21916.8701 5263.9784,-21899.4231 5241.6964,-18670.0907 5257.5191,-18653.8701 5280.9811,-18629.818 6433.0914,-18622.0238 6466.6717,-18620.8701 6631.3504,-18615.2121 6822.2893,-18606.9777 6938.5825,-18601.7747"/>
<polygon fill="#000000" stroke="#000000" points="6939.0721,-18605.2563 6948.9053,-18601.312 6938.7586,-18598.2634 6939.0721,-18605.2563"/>
</g>
<!-- scalaz.Equal[HListSpec.this.H] -->
<g id="node923" class="node">
<title>scalaz.Equal[HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-50007.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="566.6596" y="-50011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[HListSpec.this.H]</text>
<text text-anchor="middle" x="652.6596" y="-49996.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 4ms</text>
</g>
<!-- monocle.function.Field3[(Boolean, Char, Int, Long, Float, Double),Int] -->
<g id="node924" class="node">
<title>monocle.function.Field3[(Boolean, Char, Int, Long, Float, Double),Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-37443.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="457.1596" y="-37447.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field3[(Boolean, Char, Int, Long, Float, Double),Int]</text>
<text text-anchor="middle" x="652.6596" y="-37432.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Field3[(Boolean, Char, Int, Long, Float, Double),Int]&#45;&gt;shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._2.N,Int] -->
<g id="edge227" class="edge">
<title>monocle.function.Field3[(Boolean, Char, Int, Long, Float, Double),Int]&#45;&gt;shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._2.N,Int]</title>
<path fill="none" stroke="#000000" d="M940.7984,-37443.8701C1102.5396,-37443.8701 1306.3603,-37443.8701 1481.1394,-37443.8701"/>
<polygon fill="#000000" stroke="#000000" points="1481.2849,-37447.3702 1491.2849,-37443.8701 1481.2848,-37440.3702 1481.2849,-37447.3702"/>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; String -->
<g id="node925" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-50079.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="530.6596" y="-50083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; String</text>
<text text-anchor="middle" x="652.6596" y="-50068.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[monocle.refined.LowerCaseChar] -->
<g id="node926" class="node">
<title>scalaz.Equal[monocle.refined.LowerCaseChar]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-50151.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="523.1596" y="-50155.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.refined.LowerCaseChar]</text>
<text text-anchor="middle" x="652.6596" y="-50140.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P) -->
<g id="node929" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-50223.8701" rx="260.8448" ry="26.7407"/>
<text text-anchor="start" x="476.1596" y="-50227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-50212.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[(Char, String)]&#45;&gt;org.scalacheck.Cogen[Char] -->
<g id="edge679" class="edge">
<title>org.scalacheck.Cogen[(Char, String)]&#45;&gt;org.scalacheck.Cogen[Char]</title>
<path fill="none" stroke="#000000" d="M6017.5063,-4595.1538C6176.7425,-4594.7929 6408.9481,-4582.6633 6466.6717,-4517.8701 6489.3628,-4492.3999 6451.2408,-3314.6614 6474.6717,-3289.8701 6600.2962,-3156.9512 6840.5288,-3196.5194 6965.6959,-3229.2807"/>
<polygon fill="#000000" stroke="#000000" points="6965.043,-3232.7288 6975.6072,-3231.9238 6966.8468,-3225.9652 6965.043,-3232.7288"/>
</g>
<!-- org.scalacheck.Cogen[(Char, String)]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge934" class="edge">
<title>org.scalacheck.Cogen[(Char, String)]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M6000.4662,-4579.3513C6159.1022,-4568.4209 6405.208,-4563.0753 6466.6717,-4627.8701 6478.0466,-4639.8614 6465.5992,-5804.0545 6474.6717,-5817.8701 6574.7443,-5970.2609 6789.8862,-6031.1831 6925.736,-6055.0488"/>
<polygon fill="#000000" stroke="#000000" points="6925.3352,-6058.5311 6935.783,-6056.7718 6926.5184,-6051.6318 6925.3352,-6058.5311"/>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, String)]&#45;&gt;scala.reflect.ClassTag[(Boolean, String)] -->
<g id="edge845" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, String)]&#45;&gt;scala.reflect.ClassTag[(Boolean, String)]</title>
<path fill="none" stroke="#000000" d="M6041.9072,-6357.8701C6265.2032,-6357.8701 6643.8267,-6357.8701 6866.8308,-6357.8701"/>
<polygon fill="#000000" stroke="#000000" points="6867.0017,-6361.3702 6877.0017,-6357.8701 6867.0017,-6354.3702 6867.0017,-6361.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, String)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge275" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, String)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6018.5879,-6344.5666C6176.8234,-6334.9286 6406.3959,-6332.6796 6466.6717,-6393.8701 6480.7208,-6408.1323 6460.6472,-6559.5835 6474.6717,-6573.8701 6532.2255,-6632.4992 6753.7291,-6630.4166 6903.4194,-6621.5861"/>
<polygon fill="#000000" stroke="#000000" points="6903.8513,-6625.0664 6913.6211,-6620.9674 6903.4275,-6618.0793 6903.8513,-6625.0664"/>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, String)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge1182" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, String)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6017.244,-6344.2245C6175.9344,-6334.1063 6407.3758,-6331.2762 6466.6717,-6393.8701 6480.8849,-6408.8737 6463.0065,-7864.81 6474.6717,-7881.8701 6571.8101,-8023.933 6773.438,-8076.6962 6909.2699,-8096.2924"/>
<polygon fill="#000000" stroke="#000000" points="6908.9526,-8099.7821 6919.3412,-8097.7022 6909.923,-8092.8496 6908.9526,-8099.7821"/>
</g>
<!-- scalaz.Compose[monocle.Optional] -->
<g id="node934" class="node">
<title>scalaz.Compose[monocle.Optional]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-50295.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="554.6596" y="-50299.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Compose[monocle.Optional]</text>
<text text-anchor="middle" x="652.6596" y="-50284.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int,)] -->
<g id="node936" class="node">
<title>org.scalacheck.Arbitrary[(Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-13621.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="5776.0954" y="-13625.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int,)]</text>
<text text-anchor="middle" x="5862.0954" y="-13610.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 17ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int,)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1362" class="edge">
<title>org.scalacheck.Arbitrary[(Int,)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M5992.111,-13627.7014C6115.9562,-13630.0938 6306.6884,-13625.4975 6466.6717,-13585.8701 6673.5779,-13534.62 6897.748,-13411.1909 6995.584,-13353.5234"/>
<polygon fill="#000000" stroke="#000000" points="6997.5519,-13356.4258 7004.3732,-13348.3189 6993.9852,-13350.4025 6997.5519,-13356.4258"/>
</g>
<!-- org.scalacheck.util.Buildable[(K, V),Map[K,V]] -->
<g id="node938" class="node">
<title>org.scalacheck.util.Buildable[(K, V),Map[K,V]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-29019.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="1729.534" y="-29023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(K, V),Map[K,V]]</text>
<text text-anchor="middle" x="1862.034" y="-29008.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(K, V),Map[K,V]] -->
<g id="node1395" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(K, V),Map[K,V]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-29019.8701" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="3001.3678" y="-29023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(K, V),Map[K,V]]</text>
<text text-anchor="middle" x="3166.8678" y="-29008.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(K, V),Map[K,V]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(K, V),Map[K,V]] -->
<g id="edge865" class="edge">
<title>org.scalacheck.util.Buildable[(K, V),Map[K,V]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(K, V),Map[K,V]]</title>
<path fill="none" stroke="#000000" d="M2060.9199,-29019.8701C2288.5576,-29019.8701 2661.9916,-29019.8701 2911.0931,-29019.8701"/>
<polygon fill="#000000" stroke="#000000" points="2911.3795,-29023.3702 2921.3794,-29019.8701 2911.3794,-29016.3702 2911.3795,-29023.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: shapeless.HNil,Out] -->
<g id="edge241" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M4937.8372,-29631.8701C5114.4748,-29631.8701 5328.0711,-29631.8701 5505.4119,-29631.8701"/>
<polygon fill="#000000" stroke="#000000" points="5505.4307,-29635.3702 5515.4307,-29631.8701 5505.4306,-29628.3702 5505.4307,-29635.3702"/>
</g>
<!-- t.type =&gt; ?{def #::: ?} -->
<g id="node941" class="node">
<title>t.type =&gt; ?{def #::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-50367.8701" rx="98.9899" ry="26.7407"/>
<text text-anchor="start" x="590.6596" y="-50371.6701" font-family="Times,serif" font-size="14.00" fill="#000000">t.type =&gt; ?{def #::: ?}</text>
<text text-anchor="middle" x="652.6596" y="-50356.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Order[(Int, String)] -->
<g id="node942" class="node">
<title>scalaz.Order[(Int, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-20599.8701" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="5791.0954" y="-20603.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[(Int, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-20588.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Char, Boolean, String, Long)] -->
<g id="node943" class="node">
<title>scala.reflect.ClassTag[(Int, Char, Boolean, String, Long)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-5781.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="6888.014" y="-5785.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Char, Boolean, String, Long)]</text>
<text text-anchor="middle" x="7046.014" y="-5770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[String \/ Int \/ Boolean] -->
<g id="node944" class="node">
<title>org.scalacheck.Arbitrary[String \/ Int \/ Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-7985.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="4456.753" y="-7989.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[String / Int / Boolean]</text>
<text text-anchor="middle" x="4586.253" y="-7974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- org.scalacheck.Arbitrary[String \/ Int \/ Boolean]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge631" class="edge">
<title>org.scalacheck.Arbitrary[String \/ Int \/ Boolean]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M4773.4232,-7993.2318C4946.9694,-7995.5434 5187.457,-7985.719 5249.5191,-7917.8701 5260.9378,-7905.3866 5245.701,-7320.976 5257.5191,-7308.8701 5351.4342,-7212.6674 6372.7658,-7360.0817 6466.6717,-7263.8701 6478.6633,-7251.584 6462.8392,-6658.3093 6474.6717,-6645.8701 6531.4214,-6586.2105 6754.0549,-6588.6978 6904.0662,-6597.8767"/>
<polygon fill="#000000" stroke="#000000" points="6904.0888,-6601.385 6914.2887,-6598.5194 6904.5281,-6594.3988 6904.0888,-6601.385"/>
</g>
<!-- org.scalacheck.Arbitrary[String \/ Int \/ Boolean]&#45;&gt;org.scalacheck.Arbitrary[String \/ Int] -->
<g id="edge847" class="edge">
<title>org.scalacheck.Arbitrary[String \/ Int \/ Boolean]&#45;&gt;org.scalacheck.Arbitrary[String \/ Int]</title>
<path fill="none" stroke="#000000" d="M4768.2976,-7976.4185C4923.1268,-7979.4108 5137.633,-8011.943 5249.5191,-8154.8701 5268.9537,-8179.6964 5235.8171,-9266.9993 5257.5191,-9289.8701 5317.8054,-9353.4029 5555.6531,-9349.4928 5714.4358,-9339.0122"/>
<polygon fill="#000000" stroke="#000000" points="5715.0364,-9342.4796 5724.7775,-9338.313 5714.5642,-9335.4956 5715.0364,-9342.4796"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P) -->
<g id="node945" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-50439.8701" rx="176.5537" ry="26.7407"/>
<text text-anchor="start" x="535.6596" y="-50443.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-50428.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Char, monocle.function.CList)] -->
<g id="node946" class="node">
<title>org.scalacheck.Arbitrary[(Char, monocle.function.CList)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-2601.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="5704.0954" y="-2605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Char, monocle.function.CList)]</text>
<text text-anchor="middle" x="5862.0954" y="-2590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Char, monocle.function.CList)]&#45;&gt;org.scalacheck.Arbitrary[monocle.function.CList] -->
<g id="edge322" class="edge">
<title>org.scalacheck.Arbitrary[(Char, monocle.function.CList)]&#45;&gt;org.scalacheck.Arbitrary[monocle.function.CList]</title>
<path fill="none" stroke="#000000" d="M6057.1733,-2616.8843C6211.6053,-2624.0869 6410.3668,-2621.3664 6466.6717,-2565.8701 6483.8114,-2548.9765 6457.5612,-2474.7932 6474.6717,-2457.8701 6600.0145,-2333.9 6825.9573,-2364.441 6952.9153,-2394.8928"/>
<polygon fill="#000000" stroke="#000000" points="6952.0875,-2398.2934 6962.6328,-2397.2699 6953.7508,-2391.4939 6952.0875,-2398.2934"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, monocle.function.CList)]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge641" class="edge">
<title>org.scalacheck.Arbitrary[(Char, monocle.function.CList)]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M6052.7903,-2586.1412C6208.5869,-2578.0032 6411.7166,-2579.7638 6466.6717,-2637.8701 6487.0377,-2659.4038 6454.3429,-4750.3012 6474.6717,-4771.8701 6532.5626,-4833.2923 6765.134,-4829.0581 6915.1138,-4819.2518"/>
<polygon fill="#000000" stroke="#000000" points="6915.5746,-4822.7289 6925.3181,-4818.5678 6915.1064,-4815.7446 6915.5746,-4822.7289"/>
</g>
<!-- scala.reflect.ClassTag[(Char, monocle.function.CList)] -->
<g id="node1245" class="node">
<title>scala.reflect.ClassTag[(Char, monocle.function.CList)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-2601.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="6895.514" y="-2605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Char, monocle.function.CList)]</text>
<text text-anchor="middle" x="7046.014" y="-2590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Char, monocle.function.CList)]&#45;&gt;scala.reflect.ClassTag[(Char, monocle.function.CList)] -->
<g id="edge479" class="edge">
<title>org.scalacheck.Arbitrary[(Char, monocle.function.CList)]&#45;&gt;scala.reflect.ClassTag[(Char, monocle.function.CList)]</title>
<path fill="none" stroke="#000000" d="M6097.061,-2601.8701C6304.1982,-2601.8701 6604.4202,-2601.8701 6811.44,-2601.8701"/>
<polygon fill="#000000" stroke="#000000" points="6811.5355,-2605.3702 6821.5354,-2601.8701 6811.5354,-2598.3702 6811.5355,-2605.3702"/>
</g>
<!-- scala.reflect.ClassTag[List[Int]] -->
<g id="node947" class="node">
<title>scala.reflect.ClassTag[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-8857.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="6959.014" y="-8861.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[List[Int]]</text>
<text text-anchor="middle" x="7046.014" y="-8846.6701" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 25ms</text>
</g>
<!-- scalaz.Monoid[String] -->
<g id="node948" class="node">
<title>scalaz.Monoid[String]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-50511.8701" rx="98.0761" ry="26.7407"/>
<text text-anchor="start" x="591.1596" y="-50515.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Monoid[String]</text>
<text text-anchor="middle" x="652.6596" y="-50500.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Float] -->
<g id="node949" class="node">
<title>org.scalacheck.Arbitrary[Float]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-5555.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="6960.014" y="-5559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Float]</text>
<text text-anchor="middle" x="7046.014" y="-5544.6701" font-family="Times,serif" font-size="14.00" fill="#000000">24 times = 77ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Float]&#45;&gt;scala.reflect.ClassTag[Float] -->
<g id="edge1360" class="edge">
<title>org.scalacheck.Arbitrary[Float]&#45;&gt;scala.reflect.ClassTag[Float]</title>
<path fill="none" stroke="#000000" d="M7179.1362,-5555.8701C7400.8302,-5555.8701 7843.1096,-5555.8701 8064.3135,-5555.8701"/>
<polygon fill="#000000" stroke="#000000" points="8064.3545,-5559.3702 8074.3545,-5555.8701 8064.3544,-5552.3702 8064.3545,-5559.3702"/>
</g>
<!-- org.scalacheck.Cogen[(A, T[A])] -->
<g id="node950" class="node">
<title>org.scalacheck.Cogen[(A, T[A])]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-27713.8701" rx="140.0143" ry="26.7407"/>
<text text-anchor="start" x="5771.0954" y="-27717.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(A, T[A])]</text>
<text text-anchor="middle" x="5862.0954" y="-27702.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 9ms</text>
</g>
<!-- org.scalacheck.Cogen[(A, T[A])]&#45;&gt;org.scalacheck.Cogen[A] -->
<g id="edge1192" class="edge">
<title>org.scalacheck.Cogen[(A, T[A])]&#45;&gt;org.scalacheck.Cogen[A]</title>
<path fill="none" stroke="#000000" d="M6002.2164,-27713.5358C6125.4939,-27711.0707 6309.3252,-27702.1025 6466.6717,-27672.8701 6656.557,-27637.5924 6871.8234,-27560.9458 6978.5688,-27520.3427"/>
<polygon fill="#000000" stroke="#000000" points="6979.84,-27523.6039 6987.9337,-27516.767 6977.343,-27517.0643 6979.84,-27523.6039"/>
</g>
<!-- org.scalacheck.Cogen[(A, T[A])]&#45;&gt;org.scalacheck.Cogen[T[A]] -->
<g id="edge1066" class="edge">
<title>org.scalacheck.Cogen[(A, T[A])]&#45;&gt;org.scalacheck.Cogen[T[A]]</title>
<path fill="none" stroke="#000000" d="M6002.2632,-27713.8701C6232.7343,-27713.8701 6688.5751,-27713.8701 6913.7638,-27713.8701"/>
<polygon fill="#000000" stroke="#000000" points="6913.9818,-27717.3702 6923.9817,-27713.8701 6913.9817,-27710.3702 6913.9818,-27717.3702"/>
</g>
<!-- shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2] -->
<g id="node951" class="node">
<title>shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-34581.8701" rx="353.6068" ry="26.7407"/>
<text text-anchor="start" x="4344.253" y="-34585.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2]</text>
<text text-anchor="middle" x="4586.253" y="-34570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2]&#45;&gt;shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1] -->
<g id="edge93" class="edge">
<title>shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2]&#45;&gt;shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1]</title>
<path fill="none" stroke="#000000" d="M4939.9519,-34581.8701C5123.7004,-34581.8701 5346.9957,-34581.8701 5527.8303,-34581.8701"/>
<polygon fill="#000000" stroke="#000000" points="5528.0405,-34585.3702 5538.0405,-34581.8701 5528.0405,-34578.3702 5528.0405,-34585.3702"/>
</g>
<!-- shapeless.ops.hlist.Last[Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Last[Double :: shapeless.HNil] -->
<g id="edge1313" class="edge">
<title>shapeless.ops.hlist.Last[Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Last[Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M7281.6489,-33798.8701C7486.9443,-33798.8701 7782.1439,-33798.8701 7981.2506,-33798.8701"/>
<polygon fill="#000000" stroke="#000000" points="7981.2514,-33802.3702 7991.2514,-33798.8701 7981.2513,-33795.3702 7981.2514,-33802.3702"/>
</g>
<!-- monocle.function.Each[Option[Int],Int] -->
<g id="node953" class="node">
<title>monocle.function.Each[Option[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-50583.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="544.1596" y="-50587.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Option[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-50572.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- shapeless.Generic.Aux[Option[Int],SGen] -->
<g id="node1344" class="node">
<title>shapeless.Generic.Aux[Option[Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-50583.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="1747.534" y="-50587.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Option[Int],SGen]</text>
<text text-anchor="middle" x="1862.034" y="-50572.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- monocle.function.Each[Option[Int],Int]&#45;&gt;shapeless.Generic.Aux[Option[Int],SGen] -->
<g id="edge28" class="edge">
<title>monocle.function.Each[Option[Int],Int]&#45;&gt;shapeless.Generic.Aux[Option[Int],SGen]</title>
<path fill="none" stroke="#000000" d="M817.6505,-50583.8701C1042.4772,-50583.8701 1443.8356,-50583.8701 1678.1084,-50583.8701"/>
<polygon fill="#000000" stroke="#000000" points="1678.4448,-50587.3702 1688.4447,-50583.8701 1678.4447,-50580.3702 1678.4448,-50587.3702"/>
</g>
<!-- org.scalactic.Equality[HListSpec.this.Example] -->
<g id="node954" class="node">
<title>org.scalactic.Equality[HListSpec.this.Example]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-49359.8701" rx="195.3231" ry="26.7407"/>
<text text-anchor="start" x="522.6596" y="-49363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[HListSpec.this.Example]</text>
<text text-anchor="middle" x="652.6596" y="-49348.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[HListSpec.this.Example]&#45;&gt;scalaz.Equal[HListSpec.this.Example] -->
<g id="edge957" class="edge">
<title>org.scalactic.Equality[HListSpec.this.Example]&#45;&gt;scalaz.Equal[HListSpec.this.Example]</title>
<path fill="none" stroke="#000000" d="M847.9742,-49359.8701C1081.6336,-49359.8701 1469.0373,-49359.8701 1691.2562,-49359.8701"/>
<polygon fill="#000000" stroke="#000000" points="1691.3841,-49363.3702 1701.3841,-49359.8701 1691.3841,-49356.3702 1691.3841,-49363.3702"/>
</g>
<!-- org.scalactic.Equality[(Int, String)] -->
<g id="node955" class="node">
<title>org.scalactic.Equality[(Int, String)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-20853.8701" rx="147.1565" ry="26.7407"/>
<text text-anchor="start" x="4490.253" y="-20857.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(Int, String)]</text>
<text text-anchor="middle" x="4586.253" y="-20842.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 17ms</text>
</g>
<!-- org.scalactic.Equality[(Int, String)]&#45;&gt;scalaz.Equal[(Int, String)] -->
<g id="edge37" class="edge">
<title>org.scalactic.Equality[(Int, String)]&#45;&gt;scalaz.Equal[(Int, String)]</title>
<path fill="none" stroke="#000000" d="M4731.9867,-20857.7537C4985.822,-20864.5182 5504.4749,-20878.3398 5740.4005,-20884.627"/>
<polygon fill="#000000" stroke="#000000" points="5740.6435,-20888.1346 5750.7333,-20884.9024 5740.8301,-20881.1371 5740.6435,-20888.1346"/>
</g>
<!-- monocle.function.Index[Vector[Int],Int,Int] -->
<g id="node956" class="node">
<title>monocle.function.Index[Vector[Int],Int,Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-50655.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="533.6596" y="-50659.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[Vector[Int],Int,Int]</text>
<text text-anchor="middle" x="652.6596" y="-50644.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[scalaz.NonEmptyList[Int]] -->
<g id="node957" class="node">
<title>scalaz.Equal[scalaz.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-21501.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="5752.0954" y="-21505.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-21490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 8ms</text>
</g>
<!-- scalaz.Equal[scalaz.NonEmptyList[Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge664" class="edge">
<title>scalaz.Equal[scalaz.NonEmptyList[Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M6004.2063,-21515.9906C6129.7786,-21523.2586 6315.8637,-21521.1259 6466.6717,-21465.8701 6709.5053,-21376.8962 6936.2978,-21150.5187 7015.9206,-21065.1397"/>
<polygon fill="#000000" stroke="#000000" points="7018.4914,-21067.5148 7022.7241,-21057.8022 7013.3584,-21062.7553 7018.4914,-21067.5148"/>
</g>
<!-- org.scalactic.Equality[List[scala.collection.immutable.Stream[Int]]] -->
<g id="node958" class="node">
<title>org.scalactic.Equality[List[scala.collection.immutable.Stream[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-22745.8701" rx="273.8007" ry="26.7407"/>
<text text-anchor="start" x="2981.3678" y="-22749.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[List[scala.collection.immutable.Stream[Int]]]</text>
<text text-anchor="middle" x="3166.8678" y="-22734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalactic.Equality[List[scala.collection.immutable.Stream[Int]]]&#45;&gt;scalaz.Equal[List[scala.collection.immutable.Stream[Int]]] -->
<g id="edge316" class="edge">
<title>org.scalactic.Equality[List[scala.collection.immutable.Stream[Int]]]&#45;&gt;scalaz.Equal[List[scala.collection.immutable.Stream[Int]]]</title>
<path fill="none" stroke="#000000" d="M3440.5395,-22745.8701C3699.7667,-22745.8701 4085.7117,-22745.8701 4336.6952,-22745.8701"/>
<polygon fill="#000000" stroke="#000000" points="4337.0536,-22749.3702 4347.0536,-22745.8701 4337.0536,-22742.3702 4337.0536,-22749.3702"/>
</g>
<!-- scalaz.Unzip[[β$0$]monocle.POptional[List[(Int, String)],List[(Int, String)],β$0$,β$0$]] -->
<g id="node960" class="node">
<title>scalaz.Unzip[[β$0$]monocle.POptional[List[(Int, String)],List[(Int, String)],β$0$,β$0$]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-50727.8701" rx="355.8495" ry="26.7407"/>
<text text-anchor="start" x="409.1596" y="-50731.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Unzip[[β$0$]monocle.POptional[List[(Int, String)],List[(Int, String)],β$0$,β$0$]]</text>
<text text-anchor="middle" x="652.6596" y="-50716.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Field4[HListSpec.this.H,Float] -->
<g id="node961" class="node">
<title>monocle.function.Field4[HListSpec.this.H,Float]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-32223.8701" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="518.1596" y="-32227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field4[HListSpec.this.H,Float]</text>
<text text-anchor="middle" x="652.6596" y="-32212.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- monocle.function.Field4[HListSpec.this.H,Float]&#45;&gt;shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._3.N,Float] -->
<g id="edge46" class="edge">
<title>monocle.function.Field4[HListSpec.this.H,Float]&#45;&gt;shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._3.N,Float]</title>
<path fill="none" stroke="#000000" d="M849.6581,-32229.7342C1048.3203,-32235.6479 1356.8749,-32244.8328 1581.1458,-32251.5087"/>
<polygon fill="#000000" stroke="#000000" points="1581.3263,-32255.0156 1591.426,-32251.8147 1581.5346,-32248.0187 1581.3263,-32255.0156"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._3.N,Float,(Float, HListSpec.this.H)] -->
<g id="node1397" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._3.N,Float,(Float, HListSpec.this.H)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-32187.8701" rx="415.1434" ry="26.7407"/>
<text text-anchor="start" x="1576.534" y="-32191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._3.N,Float,(Float, HListSpec.this.H)]</text>
<text text-anchor="middle" x="1862.034" y="-32176.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- monocle.function.Field4[HListSpec.this.H,Float]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._3.N,Float,(Float, HListSpec.this.H)] -->
<g id="edge200" class="edge">
<title>monocle.function.Field4[HListSpec.this.H,Float]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._3.N,Float,(Float, HListSpec.this.H)]</title>
<path fill="none" stroke="#000000" d="M849.6581,-32218.0059C1018.3247,-32212.9851 1266.2041,-32205.6064 1474.4633,-32199.4071"/>
<polygon fill="#000000" stroke="#000000" points="1474.7715,-32202.8995 1484.6629,-32199.1034 1474.5632,-32195.9026 1474.7715,-32202.8995"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Int,Stream[Int]] -->
<g id="node1148" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Int,Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-11581.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="8038.6985" y="-11585.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Int,Stream[Int]]</text>
<text text-anchor="middle" x="8196.6985" y="-11570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Int,Stream[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,Stream[Int]] -->
<g id="edge1038" class="edge">
<title>org.scalacheck.util.Buildable[Int,Stream[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M7234.416,-11581.8701C7430.0998,-11581.8701 7737.0896,-11581.8701 7951.549,-11581.8701"/>
<polygon fill="#000000" stroke="#000000" points="7951.6906,-11585.3702 7961.6906,-11581.8701 7951.6906,-11578.3702 7951.6906,-11585.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]] -->
<g id="edge94" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.NonEmptyList[Int],scalaz.NonEmptyList[Int]]</title>
<path fill="none" stroke="#000000" d="M2207.4248,-35157.8701C2368.3435,-35157.8701 2561.5431,-35157.8701 2732.2648,-35157.8701"/>
<polygon fill="#000000" stroke="#000000" points="2732.4401,-35161.3702 2742.44,-35157.8701 2732.44,-35154.3702 2732.4401,-35161.3702"/>
</g>
<!-- shapeless.ops.hlist.Last.Aux[HListSpec.this.H,Double]&#45;&gt;shapeless.ops.hlist.Last[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil] -->
<g id="edge643" class="edge">
<title>shapeless.ops.hlist.Last.Aux[HListSpec.this.H,Double]&#45;&gt;shapeless.ops.hlist.Last[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2086.3429,-33798.8701C2287.7366,-33798.8701 2586.5736,-33798.8701 2818.9602,-33798.8701"/>
<polygon fill="#000000" stroke="#000000" points="2819.2798,-33802.3702 2829.2797,-33798.8701 2819.2797,-33795.3702 2819.2798,-33802.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]&#45;&gt;org.scalacheck.Arbitrary[Double] -->
<g id="edge678" class="edge">
<title>org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]&#45;&gt;org.scalacheck.Arbitrary[Double]</title>
<path fill="none" stroke="#000000" d="M6109.1378,-7383.8629C6236.9194,-7372.6172 6383.2244,-7334.3903 6466.6717,-7227.8701 6478.3503,-7212.9624 6461.6986,-1787.666 6474.6717,-1773.8701 6531.4941,-1713.4435 6757.1069,-1716.5102 6907.2475,-1725.9621"/>
<polygon fill="#000000" stroke="#000000" points="6907.2694,-1729.4707 6917.4743,-1726.623 6907.7209,-1722.4853 6907.2694,-1729.4707"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge92" class="edge">
<title>org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6073.7825,-7392.6479C6226.3074,-7398.1166 6414.1388,-7392.4379 6466.6717,-7336.8701 6479.8589,-7322.921 6461.4512,-6659.7875 6474.6717,-6645.8701 6531.3806,-6586.1718 6754.0261,-6588.6704 6904.051,-6597.8623"/>
<polygon fill="#000000" stroke="#000000" points="6904.0743,-6601.3706 6914.2744,-6598.5058 6904.5141,-6594.3844 6904.0743,-6601.3706"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge837" class="edge">
<title>org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6064.5846,-7361.7299C6218.5221,-7354.4313 6412.7398,-7357.6025 6466.6717,-7413.8701 6484.6654,-7432.643 6459.8687,-7860.4909 6474.6717,-7881.8701 6572.7147,-8023.4685 6774.3567,-8076.3535 6909.9179,-8096.1028"/>
<polygon fill="#000000" stroke="#000000" points="6909.5768,-8099.5893 6919.9683,-8097.5241 6910.557,-8092.6583 6909.5768,-8099.5893"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge471" class="edge">
<title>org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M6109.059,-7383.8011C6236.8166,-7372.5366 6383.1238,-7334.3115 6466.6717,-7227.8701 6487.1158,-7201.824 6451.9661,-4867.9702 6474.6717,-4843.8701 6532.5505,-4782.4365 6765.1259,-4786.6744 6915.1097,-4796.4844"/>
<polygon fill="#000000" stroke="#000000" points="6915.1025,-4799.9917 6925.3143,-4797.1687 6915.5709,-4793.0074 6915.1025,-4799.9917"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1363" class="edge">
<title>org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6063.6513,-7361.5629C6217.9106,-7354.0619 6413.0468,-7357.0385 6466.6717,-7413.8701 6479.9972,-7427.9924 6464.8084,-12989.1451 6474.6717,-13005.8701 6577.4779,-13180.1951 6814.4853,-13265.5046 6948.7083,-13301.203"/>
<polygon fill="#000000" stroke="#000000" points="6948.0277,-13304.6428 6958.5882,-13303.7905 6949.8012,-13297.8711 6948.0277,-13304.6428"/>
</g>
<!-- scala.reflect.ClassTag[(Char, Boolean, String, Int, Double)] -->
<g id="node1343" class="node">
<title>scala.reflect.ClassTag[(Char, Boolean, String, Int, Double)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-7377.8701" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="6882.514" y="-7381.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Char, Boolean, String, Int, Double)]</text>
<text text-anchor="middle" x="7046.014" y="-7366.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]&#45;&gt;scala.reflect.ClassTag[(Char, Boolean, String, Int, Double)] -->
<g id="edge459" class="edge">
<title>org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]&#45;&gt;scala.reflect.ClassTag[(Char, Boolean, String, Int, Double)]</title>
<path fill="none" stroke="#000000" d="M6115.3492,-7377.8701C6315.4151,-7377.8701 6593.2737,-7377.8701 6793.2202,-7377.8701"/>
<polygon fill="#000000" stroke="#000000" points="6793.2793,-7381.3702 6803.2792,-7377.8701 6793.2792,-7374.3702 6793.2793,-7381.3702"/>
</g>
<!-- scalaz.Functor[F$macro$4] -->
<g id="node966" class="node">
<title>scalaz.Functor[F$macro$4]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-50799.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-50803.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$4]</text>
<text text-anchor="middle" x="652.6596" y="-50788.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(3) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node967" class="node">
<title>Int(3) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-50871.8701" rx="97.6615" ry="26.7407"/>
<text text-anchor="start" x="591.6596" y="-50875.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(3) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="652.6596" y="-50860.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.IList[A]] -->
<g id="node968" class="node">
<title>org.scalacheck.Cogen[scalaz.IList[A]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-27603.8701" rx="159.6125" ry="26.7407"/>
<text text-anchor="start" x="5757.0954" y="-27607.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[scalaz.IList[A]]</text>
<text text-anchor="middle" x="5862.0954" y="-27592.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.IList[A]]&#45;&gt;org.scalacheck.Cogen[A] -->
<g id="edge1152" class="edge">
<title>org.scalacheck.Cogen[scalaz.IList[A]]&#45;&gt;org.scalacheck.Cogen[A]</title>
<path fill="none" stroke="#000000" d="M6014.453,-27595.6862C6136.8055,-27588.5965 6312.9564,-27577.2267 6466.6717,-27562.8701 6632.285,-27547.4022 6823.8124,-27523.3868 6939.863,-27508.1543"/>
<polygon fill="#000000" stroke="#000000" points="6940.3571,-27511.6196 6949.8152,-27506.8453 6939.4442,-27504.6794 6940.3571,-27511.6196"/>
</g>
<!-- scalaz.Equal[HListSpec.this.ReverseH] -->
<g id="node969" class="node">
<title>scalaz.Equal[HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-50943.8701" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="545.1596" y="-50947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="652.6596" y="-50932.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[Int \/ Boolean] -->
<g id="node970" class="node">
<title>scalaz.Equal[Int \/ Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-19663.8701" rx="116.8455" ry="26.7407"/>
<text text-anchor="start" x="5787.5954" y="-19667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int / Boolean]</text>
<text text-anchor="middle" x="5862.0954" y="-19652.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 12ms</text>
</g>
<!-- scalaz.Equal[Int \/ Boolean]&#45;&gt;scalaz.Order[Boolean] -->
<g id="edge734" class="edge">
<title>scalaz.Equal[Int \/ Boolean]&#45;&gt;scalaz.Order[Boolean]</title>
<path fill="none" stroke="#000000" d="M5970.7157,-19673.8192C6125.8583,-19685.3977 6399.6115,-19695.1975 6466.6717,-19627.8701 6477.9803,-19616.5164 6466.07,-19497.3904 6474.6717,-19483.8701 6584.6103,-19311.0659 6826.742,-19228.8403 6957.7249,-19195.714"/>
<polygon fill="#000000" stroke="#000000" points="6958.8724,-19199.0352 6967.7314,-19193.2242 6957.1822,-19192.2424 6958.8724,-19199.0352"/>
</g>
<!-- scalaz.Equal[Int \/ Boolean]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge1298" class="edge">
<title>scalaz.Equal[Int \/ Boolean]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5970.1867,-19653.5703C6125.7133,-19641.4198 6401.1678,-19630.7556 6466.6717,-19699.8701 6479.7419,-19713.6607 6468.1666,-21050.018 6474.6717,-21067.8701 6585.2606,-21371.3593 6893.4385,-21635.9533 7005.0191,-21724.4356"/>
<polygon fill="#000000" stroke="#000000" points="7003.001,-21727.3014 7013.0205,-21730.7453 7007.3356,-21721.8049 7003.001,-21727.3014"/>
</g>
<!-- scalaz.Equal[Int \/ Boolean]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge507" class="edge">
<title>scalaz.Equal[Int \/ Boolean]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M5970.1531,-19674.1379C6125.6367,-19686.2476 6401.0369,-19696.8603 6466.6717,-19627.8701 6482.5639,-19611.1654 6461.2548,-18816.6209 6474.6717,-18797.8701 6580.3743,-18650.1451 6803.5858,-18610.2635 6937.5829,-18599.9471"/>
<polygon fill="#000000" stroke="#000000" points="6938.1503,-18603.4151 6947.8704,-18599.1996 6937.643,-18596.4335 6938.1503,-18603.4151"/>
</g>
<!-- scalaz.Equal[Int \/ Boolean]&#45;&gt;scalaz.Order[Int] -->
<g id="edge1206" class="edge">
<title>scalaz.Equal[Int \/ Boolean]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5970.098,-19653.6548C6125.5112,-19641.6123 6400.8222,-19631.0848 6466.6717,-19699.8701 6476.3543,-19709.9843 6470.4012,-20190.5354 6474.6717,-20203.8701 6588.0748,-20557.9699 6907.9854,-20895.744 7012.5129,-20999.4624"/>
<polygon fill="#000000" stroke="#000000" points="7010.0867,-21001.9855 7019.6609,-21006.5227 7015.0059,-20997.0052 7010.0867,-21001.9855"/>
</g>
<!-- a1.type =&gt; ?{def ::: ?} -->
<g id="node971" class="node">
<title>a1.type =&gt; ?{def ::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-51015.8701" rx="100.3184" ry="26.7407"/>
<text text-anchor="start" x="589.6596" y="-51019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">a1.type =&gt; ?{def ::: ?}</text>
<text text-anchor="middle" x="652.6596" y="-51004.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[MacroOutSideMonocleSpec.this.Foo] -->
<g id="node972" class="node">
<title>scalaz.Equal[MacroOutSideMonocleSpec.this.Foo]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-51087.8701" rx="210.0214" ry="26.7407"/>
<text text-anchor="start" x="512.1596" y="-51091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[MacroOutSideMonocleSpec.this.Foo]</text>
<text text-anchor="middle" x="652.6596" y="-51076.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.IList[Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge894" class="edge">
<title>org.scalacheck.Cogen[scalaz.IList[Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M6006.4712,-11666.489C6164.9253,-11676.8091 6405.0605,-11680.8805 6466.6717,-11617.8701 6483.4622,-11600.6983 6467.2195,-11424.7011 6474.6717,-11401.8701 6591.615,-11043.595 6908.4951,-10696.7995 7012.4683,-10589.6151"/>
<polygon fill="#000000" stroke="#000000" points="7015.1092,-10591.9201 7019.5807,-10582.3151 7010.0954,-10587.0351 7015.1092,-10591.9201"/>
</g>
<!-- org.scalacheck.Arbitrary[Int \/ String =&gt; Int \/ String] -->
<g id="node974" class="node">
<title>org.scalacheck.Arbitrary[Int \/ String =&gt; Int \/ String]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-8821.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="4443.253" y="-8825.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Int / String =&gt; Int / String]</text>
<text text-anchor="middle" x="4586.253" y="-8810.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int \/ String =&gt; Int \/ String]&#45;&gt;org.scalacheck.Arbitrary[Int \/ String] -->
<g id="edge140" class="edge">
<title>org.scalacheck.Arbitrary[Int \/ String =&gt; Int \/ String]&#45;&gt;org.scalacheck.Arbitrary[Int \/ String]</title>
<path fill="none" stroke="#000000" d="M4710.7739,-8799.9951C4863.6654,-8781.146 5118.7318,-8777.2951 5249.5191,-8929.8701 5267.7425,-8951.1293 5238.2362,-9917.5668 5257.5191,-9937.8701 5317.8337,-10001.3761 5555.6728,-9997.4741 5714.4461,-9987.0024"/>
<polygon fill="#000000" stroke="#000000" points="5715.0459,-9990.4699 5724.7872,-9986.3038 5714.574,-9983.4858 5715.0459,-9990.4699"/>
</g>
<!-- org.scalacheck.Arbitrary[Int \/ String =&gt; Int \/ String]&#45;&gt;scala.reflect.ClassTag[Int \/ String =&gt; Int \/ String] -->
<g id="edge154" class="edge">
<title>org.scalacheck.Arbitrary[Int \/ String =&gt; Int \/ String]&#45;&gt;scala.reflect.ClassTag[Int \/ String =&gt; Int \/ String]</title>
<path fill="none" stroke="#000000" d="M4799.8003,-8821.8701C5035.6501,-8821.8701 5413.1372,-8821.8701 5648.8615,-8821.8701"/>
<polygon fill="#000000" stroke="#000000" points="5648.9304,-8825.3702 5658.9304,-8821.8701 5648.9304,-8818.3702 5648.9304,-8825.3702"/>
</g>
<!-- org.scalacheck.Cogen[Int \/ String] -->
<g id="node1286" class="node">
<title>org.scalacheck.Cogen[Int \/ String]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-8749.8701" rx="144.5" ry="26.7407"/>
<text text-anchor="start" x="5768.0954" y="-8753.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Int / String]</text>
<text text-anchor="middle" x="5862.0954" y="-8738.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int \/ String =&gt; Int \/ String]&#45;&gt;org.scalacheck.Cogen[Int \/ String] -->
<g id="edge648" class="edge">
<title>org.scalacheck.Arbitrary[Int \/ String =&gt; Int \/ String]&#45;&gt;org.scalacheck.Cogen[Int \/ String]</title>
<path fill="none" stroke="#000000" d="M4781.4148,-8810.8564C5037.9734,-8796.378 5483.0686,-8771.2598 5713.8161,-8758.238"/>
<polygon fill="#000000" stroke="#000000" points="5714.1768,-8761.7233 5723.9636,-8757.6653 5713.7823,-8754.7344 5714.1768,-8761.7233"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Double :: shapeless.HNil,Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H] -->
<g id="node975" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Double :: shapeless.HNil,Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-23601.8701" rx="540.4593" ry="26.7407"/>
<text text-anchor="start" x="4212.253" y="-23605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Double :: shapeless.HNil,Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H]</text>
<text text-anchor="middle" x="4586.253" y="-23590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Double :: shapeless.HNil,Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: Double :: shapeless.HNil,Float :: Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H] -->
<g id="edge974" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Double :: shapeless.HNil,Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: Double :: shapeless.HNil,Float :: Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H]</title>
<path fill="none" stroke="#000000" d="M5126.8626,-23601.8701C5188.0015,-23601.8701 5250.3616,-23601.8701 5311.625,-23601.8701"/>
<polygon fill="#000000" stroke="#000000" points="5311.8461,-23605.3702 5321.846,-23601.8701 5311.846,-23598.3702 5311.8461,-23605.3702"/>
</g>
<!-- Int =&gt; ?{def &#45;&gt;: ?} -->
<g id="node976" class="node">
<title>Int =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-51159.8701" rx="86.0347" ry="26.7407"/>
<text text-anchor="start" x="599.6596" y="-51163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="652.6596" y="-51148.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Char)) =&gt; (Int, Char)] -->
<g id="node977" class="node">
<title>org.scalacheck.Arbitrary[((Int, Char)) =&gt; (Int, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-14307.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="4440.253" y="-14311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Int, Char)) =&gt; (Int, Char)]</text>
<text text-anchor="middle" x="4586.253" y="-14296.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 33ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Char)) =&gt; (Int, Char)]&#45;&gt;org.scalacheck.Cogen[(Int, Char)] -->
<g id="edge170" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Char)) =&gt; (Int, Char)]&#45;&gt;org.scalacheck.Cogen[(Int, Char)]</title>
<path fill="none" stroke="#000000" d="M4700.7701,-14284.9505C4856.6763,-14246.919 5129.9752,-14154.3706 5249.5191,-13955.8701 5261.109,-13936.6252 5242.103,-7502.2112 5257.5191,-7485.8701 5318.7238,-7420.9929 5564.3175,-7426.2934 5723.0336,-7437.2505"/>
<polygon fill="#000000" stroke="#000000" points="5723.1377,-7440.7665 5733.3594,-7437.9798 5723.6309,-7433.7839 5723.1377,-7440.7665"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Char)) =&gt; (Int, Char)]&#45;&gt;org.scalacheck.Arbitrary[(Int, Char)] -->
<g id="edge1136" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Char)) =&gt; (Int, Char)]&#45;&gt;org.scalacheck.Arbitrary[(Int, Char)]</title>
<path fill="none" stroke="#000000" d="M4784.5531,-14319.0608C5038.2628,-14333.3785 5472.5884,-14357.8889 5704.7892,-14370.9928"/>
<polygon fill="#000000" stroke="#000000" points="5704.8285,-14374.5004 5715.0098,-14371.5695 5705.2229,-14367.5116 5704.8285,-14374.5004"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Char)) =&gt; (Int, Char)]&#45;&gt;scala.reflect.ClassTag[((Int, Char)) =&gt; (Int, Char)] -->
<g id="edge1284" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Char)) =&gt; (Int, Char)]&#45;&gt;scala.reflect.ClassTag[((Int, Char)) =&gt; (Int, Char)]</title>
<path fill="none" stroke="#000000" d="M4804.1284,-14307.8701C5038.9122,-14307.8701 5410.3483,-14307.8701 5644.8769,-14307.8701"/>
<polygon fill="#000000" stroke="#000000" points="5644.8973,-14311.3702 5654.8973,-14307.8701 5644.8973,-14304.3702 5644.8973,-14311.3702"/>
</g>
<!-- monocle.function.Reverse[(Int, Char),(Char, Int)] -->
<g id="node978" class="node">
<title>monocle.function.Reverse[(Int, Char),(Char, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-29847.8701" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="516.6596" y="-29851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[(Int, Char),(Char, Int)]</text>
<text text-anchor="middle" x="652.6596" y="-29836.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 32ms</text>
</g>
<!-- monocle.function.Reverse[(Int, Char),(Char, Int)]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[(Char, Int),(Int, Char)] -->
<g id="edge1100" class="edge">
<title>monocle.function.Reverse[(Int, Char),(Char, Int)]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[(Char, Int),(Int, Char)]</title>
<path fill="none" stroke="#000000" d="M830.1325,-29861.0774C1050.823,-29877.5008 1426.7083,-29905.4737 1658.7573,-29922.7425"/>
<polygon fill="#000000" stroke="#000000" points="1658.7778,-29926.2536 1669.01,-29923.5055 1659.2974,-29919.2729 1658.7778,-29926.2536"/>
</g>
<!-- monocle.function.Reverse[(Int, Char),(Char, Int)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[(Int, Char),(Char, Int)] -->
<g id="edge1338" class="edge">
<title>monocle.function.Reverse[(Int, Char),(Char, Int)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[(Int, Char),(Char, Int)]</title>
<path fill="none" stroke="#000000" d="M856.4459,-29847.8701C1068.8479,-29847.8701 1401.3595,-29847.8701 1625.2775,-29847.8701"/>
<polygon fill="#000000" stroke="#000000" points="1625.5242,-29851.3702 1635.5242,-29847.8701 1625.5241,-29844.3702 1625.5242,-29851.3702"/>
</g>
<!-- monocle.function.Reverse[(Int, Char),(Char, Int)]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[(Int, Char),(Char, Int)] -->
<g id="edge651" class="edge">
<title>monocle.function.Reverse[(Int, Char),(Char, Int)]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[(Int, Char),(Char, Int)]</title>
<path fill="none" stroke="#000000" d="M821.4541,-29832.7963C1044.3775,-29812.8887 1435.988,-29777.917 1669.9814,-29757.0208"/>
<polygon fill="#000000" stroke="#000000" points="1670.3168,-29760.5049 1679.9658,-29756.1292 1669.6941,-29753.5326 1670.3168,-29760.5049"/>
</g>
<!-- shapeless.ops.hlist.IsHCons.Aux[scalaz.Cofree[Option,Int],Int,Option[scalaz.Cofree[Option,Int]]] -->
<g id="node979" class="node">
<title>shapeless.ops.hlist.IsHCons.Aux[scalaz.Cofree[Option,Int],Int,Option[scalaz.Cofree[Option,Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-51231.8701" rx="389.7317" ry="26.7407"/>
<text text-anchor="start" x="1594.534" y="-51235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.IsHCons.Aux[scalaz.Cofree[Option,Int],Int,Option[scalaz.Cofree[Option,Int]]]</text>
<text text-anchor="middle" x="1862.034" y="-51220.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; String -->
<g id="node980" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-51303.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="505.1596" y="-51307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; String</text>
<text text-anchor="middle" x="652.6596" y="-51292.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int =:= Int -->
<g id="node982" class="node">
<title>Int =:= Int</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-51375.8701" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="612.6596" y="-51379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =:= Int</text>
<text text-anchor="middle" x="652.6596" y="-51364.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Unapply[scalaz.Applicative,org.scalacheck.Gen[scalaz.Tree[A]]] -->
<g id="node983" class="node">
<title>scalaz.Unapply[scalaz.Applicative,org.scalacheck.Gen[scalaz.Tree[A]]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-46119.8701" rx="288.4991" ry="26.7407"/>
<text text-anchor="start" x="456.6596" y="-46123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Unapply[scalaz.Applicative,org.scalacheck.Gen[scalaz.Tree[A]]]</text>
<text text-anchor="middle" x="652.6596" y="-46108.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- scalaz.Unapply[scalaz.Applicative,org.scalacheck.Gen[scalaz.Tree[A]]]&#45;&gt;scalaz.Applicative[org.scalacheck.Gen] -->
<g id="edge131" class="edge">
<title>scalaz.Unapply[scalaz.Applicative,org.scalacheck.Gen[scalaz.Tree[A]]]&#45;&gt;scalaz.Applicative[org.scalacheck.Gen]</title>
<path fill="none" stroke="#000000" d="M941.1823,-46119.8701C1173.6456,-46119.8701 1492.845,-46119.8701 1687.8868,-46119.8701"/>
<polygon fill="#000000" stroke="#000000" points="1687.9467,-46123.3702 1697.9466,-46119.8701 1687.9466,-46116.3702 1687.9467,-46123.3702"/>
</g>
<!-- monocle.function.Each[(Int, Int),Int] -->
<g id="node984" class="node">
<title>monocle.function.Each[(Int, Int),Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-26877.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="5761.0954" y="-26881.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[(Int, Int),Int]</text>
<text text-anchor="middle" x="5862.0954" y="-26866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 21ms</text>
</g>
<!-- shapeless.Generic.Aux[(Int, Int),SGen] -->
<g id="node1114" class="node">
<title>shapeless.Generic.Aux[(Int, Int),SGen]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-26877.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="6939.014" y="-26881.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int),SGen]</text>
<text text-anchor="middle" x="7046.014" y="-26866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- monocle.function.Each[(Int, Int),Int]&#45;&gt;shapeless.Generic.Aux[(Int, Int),SGen] -->
<g id="edge346" class="edge">
<title>monocle.function.Each[(Int, Int),Int]&#45;&gt;shapeless.Generic.Aux[(Int, Int),SGen]</title>
<path fill="none" stroke="#000000" d="M6016.2648,-26877.8701C6237.0156,-26877.8701 6641.9222,-26877.8701 6872.7622,-26877.8701"/>
<polygon fill="#000000" stroke="#000000" points="6872.9408,-26881.3702 6882.9408,-26877.8701 6872.9408,-26874.3702 6872.9408,-26881.3702"/>
</g>
<!-- monocle.function.Each[(Int, Int),Int]&#45;&gt;monocle.function.Each[Int :: Int :: shapeless.HNil,Int] -->
<g id="edge226" class="edge">
<title>monocle.function.Each[(Int, Int),Int]&#45;&gt;monocle.function.Each[Int :: Int :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M6008.394,-26886.4754C6130.8407,-26893.7033 6310.1605,-26904.3475 6466.6717,-26913.8701 6590.1857,-26921.385 6728.5,-26929.9732 6838.9999,-26936.8762"/>
<polygon fill="#000000" stroke="#000000" points="6839.0674,-26940.3872 6849.2662,-26937.5177 6839.504,-26933.4008 6839.0674,-26940.3872"/>
</g>
<!-- scalaz.Compose[monocle.Prism] -->
<g id="node985" class="node">
<title>scalaz.Compose[monocle.Prism]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-51447.8701" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="562.1596" y="-51451.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Compose[monocle.Prism]</text>
<text text-anchor="middle" x="652.6596" y="-51436.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Map[Int,String] =&gt; Traversable[(Int, String)] -->
<g id="node986" class="node">
<title>scala.collection.immutable.Map[Int,String] =&gt; Traversable[(Int, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-242.8701" rx="293.3986" ry="26.7407"/>
<text text-anchor="start" x="5662.5954" y="-246.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[Int,String] =&gt; Traversable[(Int, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Possible[Option[Int],Int] -->
<g id="node987" class="node">
<title>monocle.function.Possible[Option[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-51519.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="535.1596" y="-51523.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Possible[Option[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-51508.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="edge705" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M8685.5266,-32043.8701C8739.406,-32043.8701 8794.3212,-32043.8701 8848.3238,-32043.8701"/>
<polygon fill="#000000" stroke="#000000" points="8848.3962,-32047.3702 8858.3962,-32043.8701 8848.3962,-32040.3702 8848.3962,-32047.3702"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P) -->
<g id="node989" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-51591.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="496.1596" y="-51595.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-51580.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Prepend.Aux[HListSpec.this.HInit,Double :: shapeless.HNil,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Prepend[Boolean :: Char :: Float :: Long :: shapeless.HNil,Double :: shapeless.HNil] -->
<g id="edge50" class="edge">
<title>shapeless.ops.hlist.Prepend.Aux[HListSpec.this.HInit,Double :: shapeless.HNil,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Prepend[Boolean :: Char :: Float :: Long :: shapeless.HNil,Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2251.7597,-33726.8701C2406.7158,-33726.8701 2585.4061,-33726.8701 2743.5318,-33726.8701"/>
<polygon fill="#000000" stroke="#000000" points="2743.9171,-33730.3702 2753.9171,-33726.8701 2743.917,-33723.3702 2743.9171,-33730.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[List[(K, V)]] -->
<g id="node991" class="node">
<title>org.scalacheck.Arbitrary[List[(K, V)]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-29199.8701" rx="159.6125" ry="26.7407"/>
<text text-anchor="start" x="547.6596" y="-29203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[List[(K, V)]]</text>
<text text-anchor="middle" x="652.6596" y="-29188.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 481ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[(K, V)]]&#45;&gt;List[(K, V)] =&gt; Traversable[(K, V)] -->
<g id="edge947" class="edge">
<title>org.scalacheck.Arbitrary[List[(K, V)]]&#45;&gt;List[(K, V)] =&gt; Traversable[(K, V)]</title>
<path fill="none" stroke="#000000" d="M810.1438,-29204.558C1040.9988,-29211.4299 1469.0144,-29224.1709 1701.5588,-29231.0931"/>
<polygon fill="#000000" stroke="#000000" points="1701.6994,-29234.5988 1711.7991,-29231.3979 1701.9077,-29227.6019 1701.6994,-29234.5988"/>
</g>
<!-- org.scalacheck.Arbitrary[List[(K, V)]]&#45;&gt;scala.reflect.ClassTag[List[(K, V)]] -->
<g id="edge254" class="edge">
<title>org.scalacheck.Arbitrary[List[(K, V)]]&#45;&gt;scala.reflect.ClassTag[List[(K, V)]]</title>
<path fill="none" stroke="#000000" d="M810.1438,-29195.1822C1041.9443,-29188.282 1472.5236,-29175.4648 1704.4062,-29168.5622"/>
<polygon fill="#000000" stroke="#000000" points="1704.7234,-29172.0544 1714.6148,-29168.2584 1704.515,-29165.0575 1704.7234,-29172.0544"/>
</g>
<!-- org.scalacheck.Arbitrary[List[(K, V)]]&#45;&gt;org.scalacheck.Arbitrary[(K, V)] -->
<g id="edge1237" class="edge">
<title>org.scalacheck.Arbitrary[List[(K, V)]]&#45;&gt;org.scalacheck.Arbitrary[(K, V)]</title>
<path fill="none" stroke="#000000" d="M782.2437,-29184.0804C915.3317,-29168.2561 1128.5527,-29143.9917 1313.3191,-29127.8701 1450.5072,-29115.8998 1607.3066,-29105.9895 1718.0607,-29099.6181"/>
<polygon fill="#000000" stroke="#000000" points="1718.5134,-29103.098 1728.2969,-29099.0318 1718.113,-29096.1095 1718.5134,-29103.098"/>
</g>
<!-- org.scalacheck.util.Buildable[(K, V),List[(K, V)]] -->
<g id="node1184" class="node">
<title>org.scalacheck.util.Buildable[(K, V),List[(K, V)]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-29307.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="1725.034" y="-29311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(K, V),List[(K, V)]]</text>
<text text-anchor="middle" x="1862.034" y="-29296.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[(K, V)]]&#45;&gt;org.scalacheck.util.Buildable[(K, V),List[(K, V)]] -->
<g id="edge1283" class="edge">
<title>org.scalacheck.Arbitrary[List[(K, V)]]&#45;&gt;org.scalacheck.util.Buildable[(K, V),List[(K, V)]]</title>
<path fill="none" stroke="#000000" d="M733.2614,-29176.5867C868.7454,-29142.8278 1143.1829,-29098.2995 1305.3191,-29235.8701 1317.8169,-29246.4742 1300.8767,-29261.201 1313.3191,-29271.8701 1436.7661,-29377.7234 1638.866,-29358.6502 1760.298,-29334.0328"/>
<polygon fill="#000000" stroke="#000000" points="1761.2652,-29337.4067 1770.3444,-29331.9462 1759.8416,-29330.553 1761.2652,-29337.4067"/>
</g>
<!-- scalaz.Equal[scalaz.Id.Id[Int]] -->
<g id="node992" class="node">
<title>scalaz.Equal[scalaz.Id.Id[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-51663.8701" rx="127.9727" ry="26.7407"/>
<text text-anchor="start" x="1779.534" y="-51667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Id.Id[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-51652.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Float =&gt; Float] -->
<g id="node994" class="node">
<title>org.scalacheck.Arbitrary[Float =&gt; Float]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-3613.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="5750.5954" y="-3617.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Float =&gt; Float]</text>
<text text-anchor="middle" x="5862.0954" y="-3602.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 46ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Float =&gt; Float]&#45;&gt;org.scalacheck.Cogen[Float] -->
<g id="edge163" class="edge">
<title>org.scalacheck.Arbitrary[Float =&gt; Float]&#45;&gt;org.scalacheck.Cogen[Float]</title>
<path fill="none" stroke="#000000" d="M6027.9608,-3619.1938C6265.5402,-3626.8193 6697.9143,-3640.6972 6914.7034,-3647.6554"/>
<polygon fill="#000000" stroke="#000000" points="6914.7549,-3651.1588 6924.8621,-3647.9815 6914.9796,-3644.1624 6914.7549,-3651.1588"/>
</g>
<!-- org.scalacheck.Arbitrary[Float =&gt; Float]&#45;&gt;org.scalacheck.Arbitrary[Float] -->
<g id="edge1343" class="edge">
<title>org.scalacheck.Arbitrary[Float =&gt; Float]&#45;&gt;org.scalacheck.Arbitrary[Float]</title>
<path fill="none" stroke="#000000" d="M6030.0471,-3610.6138C6188.7013,-3611.5664 6410.5093,-3624.6956 6466.6717,-3687.8701 6483.4021,-3706.6893 6457.6997,-5482.2684 6474.6717,-5500.8701 6595.2807,-5633.0598 6827.8073,-5606.8619 6955.898,-5579.4371"/>
<polygon fill="#000000" stroke="#000000" points="6956.6719,-5582.8506 6965.6926,-5577.2939 6955.1756,-5576.0124 6956.6719,-5582.8506"/>
</g>
<!-- scala.reflect.ClassTag[Float =&gt; Float] -->
<g id="node1018" class="node">
<title>scala.reflect.ClassTag[Float =&gt; Float]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-3579.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="6942.014" y="-3583.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Float =&gt; Float]</text>
<text text-anchor="middle" x="7046.014" y="-3568.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Float =&gt; Float]&#45;&gt;scala.reflect.ClassTag[Float =&gt; Float] -->
<g id="edge332" class="edge">
<title>org.scalacheck.Arbitrary[Float =&gt; Float]&#45;&gt;scala.reflect.ClassTag[Float =&gt; Float]</title>
<path fill="none" stroke="#000000" d="M6028.5855,-3609.0888C6253.9266,-3602.6174 6653.6867,-3591.137 6879.1966,-3584.6608"/>
<polygon fill="#000000" stroke="#000000" points="6879.5743,-3588.1514 6889.4697,-3584.3657 6879.3733,-3581.1543 6879.5743,-3588.1514"/>
</g>
<!-- scalaz.Equal[java.net.URI] -->
<g id="node996" class="node">
<title>scalaz.Equal[java.net.URI]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-51735.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="578.6596" y="-51739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[java.net.URI]</text>
<text text-anchor="middle" x="652.6596" y="-51724.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, String)] -->
<g id="node997" class="node">
<title>org.scalacheck.Shrink[(Int, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-170.8701" rx="148.4848" ry="26.7407"/>
<text text-anchor="start" x="5765.0954" y="-174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, String)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge198" class="edge">
<title>org.scalacheck.Shrink[(Int, String)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M6008.4089,-175.6342C6131.056,-180.5733 6310.6479,-190.0107 6466.6717,-206.8701 6636.0926,-225.177 6831.6195,-258.4439 6946.6976,-279.2838"/>
<polygon fill="#000000" stroke="#000000" points="6946.0876,-282.7302 6956.5521,-281.0737 6947.3385,-275.8429 6946.0876,-282.7302"/>
</g>
<!-- org.scalacheck.Shrink[(Int, String)]&#45;&gt;org.scalacheck.Shrink[String] -->
<g id="edge330" class="edge">
<title>org.scalacheck.Shrink[(Int, String)]&#45;&gt;org.scalacheck.Shrink[String]</title>
<path fill="none" stroke="#000000" d="M6010.8407,-170.8701C6242.196,-170.8701 6684.892,-170.8701 6908.9158,-170.8701"/>
<polygon fill="#000000" stroke="#000000" points="6909.0886,-174.3702 6919.0885,-170.8701 6909.0885,-167.3702 6909.0886,-174.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: shapeless.HNil,Out0] -->
<g id="node998" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: shapeless.HNil,Out0]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-36723.8701" rx="321.9673" ry="26.7407"/>
<text text-anchor="start" x="4366.753" y="-36727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: shapeless.HNil,Out0]</text>
<text text-anchor="middle" x="4586.253" y="-36712.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="edge1323" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M4908.2019,-36723.8701C5099.57,-36723.8701 5341.6921,-36723.8701 5534.113,-36723.8701"/>
<polygon fill="#000000" stroke="#000000" points="5534.3935,-36727.3702 5544.3935,-36723.8701 5534.3934,-36720.3702 5534.3935,-36727.3702"/>
</g>
<!-- scalaz.Equal[(String, Boolean)] -->
<g id="node999" class="node">
<title>scalaz.Equal[(String, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-18689.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="5776.0954" y="-18693.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(String, Boolean)]</text>
<text text-anchor="middle" x="5862.0954" y="-18678.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[(String, Boolean)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge113" class="edge">
<title>scalaz.Equal[(String, Boolean)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M5982.9839,-18678.6083C6140.3566,-18666.9342 6402.8788,-18658.6651 6466.6717,-18725.8701 6477.0179,-18736.7697 6467.362,-19794.7394 6474.6717,-19807.8701 6582.2148,-20001.052 6841.3664,-20104.9767 6970.395,-20146.3141"/>
<polygon fill="#000000" stroke="#000000" points="6969.6195,-20149.7397 6980.2095,-20149.418 6971.7303,-20143.0655 6969.6195,-20149.7397"/>
</g>
<!-- scalaz.Equal[(String, Boolean)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge1317" class="edge">
<title>scalaz.Equal[(String, Boolean)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M5989.5363,-18682.0372C6111.93,-18674.3232 6302.0143,-18661.8413 6466.6717,-18648.8701 6633.5343,-18635.7251 6827.1824,-18617.8035 6942.9838,-18606.8009"/>
<polygon fill="#000000" stroke="#000000" points="6943.6297,-18610.2553 6953.2532,-18605.8239 6942.9667,-18603.2868 6943.6297,-18610.2553"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop -->
<g id="node1000" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-51807.8701" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="490.1596" y="-51811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop</text>
<text text-anchor="middle" x="652.6596" y="-51796.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[TraversalSpec.this.ManyPropObject] -->
<g id="node1001" class="node">
<title>org.scalacheck.Arbitrary[TraversalSpec.this.ManyPropObject]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-51879.8701" rx="253.2885" ry="26.7407"/>
<text text-anchor="start" x="481.6596" y="-51883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[TraversalSpec.this.ManyPropObject]</text>
<text text-anchor="middle" x="652.6596" y="-51868.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[List[Int] :: shapeless.HNil,SGen] -->
<g id="node1002" class="node">
<title>shapeless.Generic.Aux[List[Int] :: shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="9347.3831" cy="-26661.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="9192.3831" y="-26665.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[List[Int] :: shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="9347.3831" y="-26650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalactic.Equality[Int] -->
<g id="node1004" class="node">
<title>org.scalactic.Equality[Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-22881.8701" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="5791.0954" y="-22885.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Int]</text>
<text text-anchor="middle" x="5862.0954" y="-22870.6701" font-family="Times,serif" font-size="14.00" fill="#000000">28 times = 90ms</text>
</g>
<!-- org.scalactic.Equality[Int]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge625" class="edge">
<title>org.scalactic.Equality[Int]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5966.0047,-22891.8186C6120.6951,-22904.0669 6400.4775,-22915.5073 6466.6717,-22845.8701 6484.0878,-22827.5481 6459.6324,-21956.1884 6474.6717,-21935.8701 6584.571,-21787.3952 6817.0163,-21758.3013 6949.0467,-21754.4038"/>
<polygon fill="#000000" stroke="#000000" points="6949.2487,-21757.8999 6959.1573,-21754.1488 6949.0722,-21750.9021 6949.2487,-21757.8999"/>
</g>
<!-- monocle.function.Reverse[Stream[Int],Stream[Int]] -->
<g id="node1005" class="node">
<title>monocle.function.Reverse[Stream[Int],Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-33447.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="511.1596" y="-33451.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[Stream[Int],Stream[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-33436.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 27ms</text>
</g>
<!-- monocle.function.Reverse[Stream[Int],Stream[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Stream[Int],Stream[Int]] -->
<g id="edge1124" class="edge">
<title>monocle.function.Reverse[Stream[Int],Stream[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Stream[Int],Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M848.3106,-33458.0621C1064.7005,-33469.3345 1412.6514,-33487.4604 1639.3299,-33499.2687"/>
<polygon fill="#000000" stroke="#000000" points="1639.1896,-33502.7661 1649.3582,-33499.7911 1639.5539,-33495.7755 1639.1896,-33502.7661"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[Stream[Int],Stream[Int]] -->
<g id="node1037" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[Stream[Int],Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-33438.8701" rx="236.3475" ry="26.7407"/>
<text text-anchor="start" x="1703.034" y="-33442.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[Stream[Int],Stream[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-33427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 23ms</text>
</g>
<!-- monocle.function.Reverse[Stream[Int],Stream[Int]]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[Stream[Int],Stream[Int]] -->
<g id="edge704" class="edge">
<title>monocle.function.Reverse[Stream[Int],Stream[Int]]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[Stream[Int],Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M864.0081,-33446.2972C1073.7291,-33444.7365 1394.9586,-33442.346 1616.0272,-33440.7008"/>
<polygon fill="#000000" stroke="#000000" points="1616.1749,-33444.1999 1626.1485,-33440.6255 1616.1227,-33437.2001 1616.1749,-33444.1999"/>
</g>
<!-- monocle.function.Field4[(Int, Char, Boolean, String, Long, Float),String] -->
<g id="node1006" class="node">
<title>monocle.function.Field4[(Int, Char, Boolean, String, Long, Float),String]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-39855.8701" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="451.1596" y="-39859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field4[(Int, Char, Boolean, String, Long, Float),String]</text>
<text text-anchor="middle" x="652.6596" y="-39844.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Field4[(Int, Char, Boolean, String, Long, Float),String]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._3.N,String] -->
<g id="edge639" class="edge">
<title>monocle.function.Field4[(Int, Char, Boolean, String, Long, Float),String]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char, Boolean, String, Long, Float),shapeless.nat._3.N,String]</title>
<path fill="none" stroke="#000000" d="M949.28,-39855.8701C1107.2426,-39855.8701 1303.4753,-39855.8701 1473.4679,-39855.8701"/>
<polygon fill="#000000" stroke="#000000" points="1473.5951,-39859.3702 1483.5951,-39855.8701 1473.5951,-39852.3702 1473.5951,-39859.3702"/>
</g>
<!-- monocle.function.Cons1[scalaz.NonEmptyList[Char],Char,scalaz.IList[Char]] -->
<g id="node1007" class="node">
<title>monocle.function.Cons1[scalaz.NonEmptyList[Char],Char,scalaz.IList[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-51951.8701" rx="313.9108" ry="26.7407"/>
<text text-anchor="start" x="438.6596" y="-51955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons1[scalaz.NonEmptyList[Char],Char,scalaz.IList[Char]]</text>
<text text-anchor="middle" x="652.6596" y="-51940.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.hlist.IsHCons.Aux[scalaz.NonEmptyList[Char],Char,scalaz.IList[Char]] -->
<g id="node1357" class="node">
<title>shapeless.ops.hlist.IsHCons.Aux[scalaz.NonEmptyList[Char],Char,scalaz.IList[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-51951.8701" rx="345.1362" ry="26.7407"/>
<text text-anchor="start" x="1626.034" y="-51955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.IsHCons.Aux[scalaz.NonEmptyList[Char],Char,scalaz.IList[Char]]</text>
<text text-anchor="middle" x="1862.034" y="-51940.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- monocle.function.Cons1[scalaz.NonEmptyList[Char],Char,scalaz.IList[Char]]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[scalaz.NonEmptyList[Char],Char,scalaz.IList[Char]] -->
<g id="edge58" class="edge">
<title>monocle.function.Cons1[scalaz.NonEmptyList[Char],Char,scalaz.IList[Char]]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[scalaz.NonEmptyList[Char],Char,scalaz.IList[Char]]</title>
<path fill="none" stroke="#000000" d="M966.8574,-51951.8701C1132.2315,-51951.8701 1335.6268,-51951.8701 1506.7258,-51951.8701"/>
<polygon fill="#000000" stroke="#000000" points="1506.9119,-51955.3702 1516.9118,-51951.8701 1506.9118,-51948.3702 1506.9119,-51955.3702"/>
</g>
<!-- org.scalacheck.Cogen[(A, scalaz.IList[A])] -->
<g id="node1008" class="node">
<title>org.scalacheck.Cogen[(A, scalaz.IList[A])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-27630.8701" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="4468.253" y="-27634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(A, scalaz.IList[A])]</text>
<text text-anchor="middle" x="4586.253" y="-27619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 11ms</text>
</g>
<!-- org.scalacheck.Cogen[(A, scalaz.IList[A])]&#45;&gt;org.scalacheck.Cogen[A] -->
<g id="edge230" class="edge">
<title>org.scalacheck.Cogen[(A, scalaz.IList[A])]&#45;&gt;org.scalacheck.Cogen[A]</title>
<path fill="none" stroke="#000000" d="M4759.3963,-27637.3607C5159.6613,-27651.4472 6139.7542,-27680.4292 6466.6717,-27639.8701 6651.7737,-27616.9053 6862.6865,-27554.1648 6971.818,-27518.8593"/>
<polygon fill="#000000" stroke="#000000" points="6972.989,-27522.159 6981.4175,-27515.7394 6970.8253,-27515.5017 6972.989,-27522.159"/>
</g>
<!-- org.scalacheck.Cogen[(A, scalaz.IList[A])]&#45;&gt;org.scalacheck.Cogen[scalaz.IList[A]] -->
<g id="edge816" class="edge">
<title>org.scalacheck.Cogen[(A, scalaz.IList[A])]&#45;&gt;org.scalacheck.Cogen[scalaz.IList[A]]</title>
<path fill="none" stroke="#000000" d="M4762.9831,-27627.13C5008.8231,-27621.9274 5450.9754,-27612.5704 5692.7896,-27607.453"/>
<polygon fill="#000000" stroke="#000000" points="5693.1607,-27610.946 5703.0843,-27607.2351 5693.0125,-27603.9476 5693.1607,-27610.946"/>
</g>
<!-- scalaz.Equal[List[Unit]] -->
<g id="node1009" class="node">
<title>scalaz.Equal[List[Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-17165.8701" rx="104.8038" ry="26.7407"/>
<text text-anchor="start" x="5796.0954" y="-17169.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[List[Unit]]</text>
<text text-anchor="middle" x="5862.0954" y="-17154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 9ms</text>
</g>
<!-- scalaz.Equal[List[Unit]]&#45;&gt;scalaz.Equal[Unit] -->
<g id="edge785" class="edge">
<title>scalaz.Equal[List[Unit]]&#45;&gt;scalaz.Equal[Unit]</title>
<path fill="none" stroke="#000000" d="M5966.9005,-17165.8701C6195.1336,-17165.8701 6734.0752,-17165.8701 6952.0648,-17165.8701"/>
<polygon fill="#000000" stroke="#000000" points="6952.2001,-17169.3702 6962.2001,-17165.8701 6952.2001,-17162.3702 6952.2001,-17169.3702"/>
</g>
<!-- scalaz.Equal[List[Unit]]&#45;&gt;scalaz.Order[Unit] -->
<g id="edge682" class="edge">
<title>scalaz.Equal[List[Unit]]&#45;&gt;scalaz.Order[Unit]</title>
<path fill="none" stroke="#000000" d="M5964.2577,-17171.8727C6084.4707,-17178.9546 6290.0883,-17191.1263 6466.6717,-17201.8701 6638.7645,-17212.3406 6839.5895,-17224.8949 6953.8805,-17232.0713"/>
<polygon fill="#000000" stroke="#000000" points="6953.7894,-17235.5724 6963.9891,-17232.7061 6954.2282,-17228.5861 6953.7894,-17235.5724"/>
</g>
<!-- shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._0.N,Int] -->
<g id="node1010" class="node">
<title>shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._0.N,Int]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-52095.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="1675.534" y="-52099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._0.N,Int]</text>
<text text-anchor="middle" x="1862.034" y="-52084.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; xs.type) =&gt; ?{def #::: ?} -->
<g id="node1011" class="node">
<title>(=&gt; xs.type) =&gt; ?{def #::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-52095.8701" rx="125.316" ry="26.7407"/>
<text text-anchor="start" x="572.1596" y="-52099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; xs.type) =&gt; ?{def #::: ?}</text>
<text text-anchor="middle" x="652.6596" y="-52084.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- shapeless.Witness.Aux[String(&#39;hello&#39;)] -->
<g id="node1013" class="node">
<title>shapeless.Witness.Aux[String(&#39;hello&#39;)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-2277.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="6941.514" y="-2281.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Witness.Aux[String(&#39;hello&#39;)]</text>
<text text-anchor="middle" x="7046.014" y="-2266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 7ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Boolean \/ Int]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge561" class="edge">
<title>org.scalacheck.Arbitrary[Boolean \/ Int]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6005.7346,-7678.7334C6164.4815,-7689.3993 6405.8413,-7693.9069 6466.6717,-7629.8701 6485.4974,-7610.052 6455.8802,-6665.7205 6474.6717,-6645.8701 6531.3194,-6586.03 6754.282,-6588.6053 6904.3444,-6597.8462"/>
<polygon fill="#000000" stroke="#000000" points="6904.369,-6601.3547 6914.57,-6598.4931 6904.8109,-6594.3686 6904.369,-6601.3547"/>
</g>
<!-- org.scalacheck.Arbitrary[Boolean \/ Int]&#45;&gt;scala.reflect.ClassTag[Boolean \/ Int] -->
<g id="edge1250" class="edge">
<title>org.scalacheck.Arbitrary[Boolean \/ Int]&#45;&gt;scala.reflect.ClassTag[Boolean \/ Int]</title>
<path fill="none" stroke="#000000" d="M6025.4712,-7665.8701C6251.4687,-7665.8701 6657.098,-7665.8701 6882.937,-7665.8701"/>
<polygon fill="#000000" stroke="#000000" points="6883.2214,-7669.3702 6893.2213,-7665.8701 6883.2213,-7662.3702 6883.2214,-7669.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Boolean \/ Int]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge307" class="edge">
<title>org.scalacheck.Arbitrary[Boolean \/ Int]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6005.4555,-7652.9594C6164.2681,-7642.2095 6406.0086,-7637.5844 6466.6717,-7701.8701 6479.3114,-7715.2645 6465.3158,-12990.0069 6474.6717,-13005.8701 6577.4847,-13180.1911 6814.4895,-13265.5022 6948.7101,-13301.2019"/>
<polygon fill="#000000" stroke="#000000" points="6948.0294,-13304.6416 6958.5899,-13303.7895 6949.803,-13297.87 6948.0294,-13304.6416"/>
</g>
<!-- scalaz.Equal[Unit \/ Int] -->
<g id="node1016" class="node">
<title>scalaz.Equal[Unit \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-17237.8701" rx="101.6471" ry="26.7407"/>
<text text-anchor="start" x="5798.0954" y="-17241.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Unit / Int]</text>
<text text-anchor="middle" x="5862.0954" y="-17226.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 9ms</text>
</g>
<!-- scalaz.Equal[Unit \/ Int]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge283" class="edge">
<title>scalaz.Equal[Unit \/ Int]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5957.6175,-17228.5502C6110.4179,-17216.0007 6399.4924,-17202.722 6466.6717,-17273.8701 6475.7159,-17283.4486 6470.1846,-21055.4842 6474.6717,-21067.8701 6584.693,-21371.5655 6893.2258,-21636.0305 7004.9594,-21724.4573"/>
<polygon fill="#000000" stroke="#000000" points="7002.949,-21727.329 7012.9719,-21730.763 7007.2781,-21721.8282 7002.949,-21727.329"/>
</g>
<!-- scalaz.Equal[Unit \/ Int]&#45;&gt;scalaz.Equal[Unit] -->
<g id="edge392" class="edge">
<title>scalaz.Equal[Unit \/ Int]&#45;&gt;scalaz.Equal[Unit]</title>
<path fill="none" stroke="#000000" d="M5961.5925,-17232.0244C6081.4139,-17224.9664 6288.7764,-17212.6937 6466.6717,-17201.8701 6638.7645,-17191.3995 6839.5895,-17178.8452 6953.8805,-17171.6688"/>
<polygon fill="#000000" stroke="#000000" points="6954.2282,-17175.154 6963.9891,-17171.034 6953.7894,-17168.1678 6954.2282,-17175.154"/>
</g>
<!-- scalaz.Equal[Unit \/ Int]&#45;&gt;scalaz.Order[Unit] -->
<g id="edge1216" class="edge">
<title>scalaz.Equal[Unit \/ Int]&#45;&gt;scalaz.Order[Unit]</title>
<path fill="none" stroke="#000000" d="M5964.0603,-17237.8701C6190.7081,-17237.8701 6733.5335,-17237.8701 6952.2871,-17237.8701"/>
<polygon fill="#000000" stroke="#000000" points="6952.4565,-17241.3702 6962.4565,-17237.8701 6952.4564,-17234.3702 6952.4565,-17241.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[HListSpec.this.H,HListSpec.this.ReverseH]&#45;&gt;shapeless.Generic.Aux[HListSpec.this.H,L1] -->
<g id="edge786" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[HListSpec.this.H,HListSpec.this.ReverseH]&#45;&gt;shapeless.Generic.Aux[HListSpec.this.H,L1]</title>
<path fill="none" stroke="#000000" d="M2172.5024,-23529.8701C2420.0142,-23529.8701 2759.0563,-23529.8701 2970.4128,-23529.8701"/>
<polygon fill="#000000" stroke="#000000" points="2970.6934,-23533.3702 2980.6933,-23529.8701 2970.6933,-23526.3702 2970.6934,-23533.3702"/>
</g>
<!-- Option[Int] =:= Option[Int] -->
<g id="node1019" class="node">
<title>Option[Int] =:= Option[Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-52167.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-52171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Int] =:= Option[Int]</text>
<text text-anchor="middle" x="652.6596" y="-52156.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Field1[HListSpec.this.H,Int] -->
<g id="node1020" class="node">
<title>monocle.function.Field1[HListSpec.this.H,Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-52023.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="524.6596" y="-52027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field1[HListSpec.this.H,Int]</text>
<text text-anchor="middle" x="652.6596" y="-52012.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- monocle.function.Field1[HListSpec.this.H,Int]&#45;&gt;shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._0.N,Int] -->
<g id="edge1036" class="edge">
<title>monocle.function.Field1[HListSpec.this.H,Int]&#45;&gt;shapeless.ops.hlist.At.Aux[HListSpec.this.H,shapeless.nat._0.N,Int]</title>
<path fill="none" stroke="#000000" d="M832.7514,-52033.3443C963.828,-52040.3519 1145.597,-52050.301 1305.3191,-52059.8701 1410.1227,-52066.1489 1525.9915,-52073.5653 1624.7625,-52080.03"/>
<polygon fill="#000000" stroke="#000000" points="1624.6699,-52083.5313 1634.8773,-52080.6926 1625.1275,-52076.5463 1624.6699,-52083.5313"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._0.N,Int,(Int, HListSpec.this.H)] -->
<g id="node1347" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._0.N,Int,(Int, HListSpec.this.H)]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-52023.8701" rx="396.8739" ry="26.7407"/>
<text text-anchor="start" x="1589.534" y="-52027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._0.N,Int,(Int, HListSpec.this.H)]</text>
<text text-anchor="middle" x="1862.034" y="-52012.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Field1[HListSpec.this.H,Int]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._0.N,Int,(Int, HListSpec.this.H)] -->
<g id="edge1273" class="edge">
<title>monocle.function.Field1[HListSpec.this.H,Int]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._0.N,Int,(Int, HListSpec.this.H)]</title>
<path fill="none" stroke="#000000" d="M845.2912,-52023.8701C1008.862,-52023.8701 1249.152,-52023.8701 1455.0683,-52023.8701"/>
<polygon fill="#000000" stroke="#000000" points="1455.1572,-52027.3702 1465.1572,-52023.8701 1455.1571,-52020.3702 1455.1572,-52027.3702"/>
</g>
<!-- x$5.type =&gt; ?{def tupled: ?} -->
<g id="node1021" class="node">
<title>x$5.type =&gt; ?{def tupled: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-52239.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="572.6596" y="-52243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$5.type =&gt; ?{def tupled: ?}</text>
<text text-anchor="middle" x="652.6596" y="-52228.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, String \/ Int)] -->
<g id="node1022" class="node">
<title>org.scalacheck.Arbitrary[(Boolean, String \/ Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-7047.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="4453.753" y="-7051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Boolean, String / Int)]</text>
<text text-anchor="middle" x="4586.253" y="-7036.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, String \/ Int)]&#45;&gt;scala.reflect.ClassTag[(Boolean, String \/ Int)] -->
<g id="edge274" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, String \/ Int)]&#45;&gt;scala.reflect.ClassTag[(Boolean, String \/ Int)]</title>
<path fill="none" stroke="#000000" d="M4785.253,-7047.8701C5024.7504,-7047.8701 5424.4624,-7047.8701 5663.6929,-7047.8701"/>
<polygon fill="#000000" stroke="#000000" points="5663.9013,-7051.3702 5673.9013,-7047.8701 5663.9012,-7044.3702 5663.9013,-7051.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, String \/ Int)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge691" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, String \/ Int)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M4768.1829,-7037.0206C4903.1891,-7029.2353 5091.7994,-7018.917 5257.5191,-7011.8701 5324.6667,-7009.0147 6419.3156,-7021.5603 6466.6717,-6973.8701 6479.5152,-6960.9359 6462.0336,-6659.0049 6474.6717,-6645.8701 6531.7197,-6586.5799 6753.9669,-6588.924 6903.8615,-6597.9782"/>
<polygon fill="#000000" stroke="#000000" points="6903.8788,-6601.486 6914.0764,-6598.6123 6904.3125,-6594.4994 6903.8788,-6601.486"/>
</g>
<!-- org.scalacheck.Arbitrary[(Boolean, String \/ Int)]&#45;&gt;org.scalacheck.Arbitrary[String \/ Int] -->
<g id="edge466" class="edge">
<title>org.scalacheck.Arbitrary[(Boolean, String \/ Int)]&#45;&gt;org.scalacheck.Arbitrary[String \/ Int]</title>
<path fill="none" stroke="#000000" d="M4639.2266,-7073.9379C4772.2988,-7142.8032 5119.2591,-7344.1063 5249.5191,-7629.8701 5259.082,-7650.8491 5241.6677,-9273.1277 5257.5191,-9289.8701 5317.7346,-9353.47 5555.6037,-9349.5397 5714.4099,-9339.0367"/>
<polygon fill="#000000" stroke="#000000" points="5715.0126,-9342.504 5724.7531,-9338.3361 5714.5394,-9335.52 5715.0126,-9342.504"/>
</g>
<!-- monocle.function.Cons[monocle.function.CList,Char] -->
<g id="node1023" class="node">
<title>monocle.function.Cons[monocle.function.CList,Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-52311.8701" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="504.1596" y="-52315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons[monocle.function.CList,Char]</text>
<text text-anchor="middle" x="652.6596" y="-52300.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((HListSpec.this.HInit, Double)) =&gt; (HListSpec.this.HInit, Double)] -->
<g id="node1024" class="node">
<title>org.scalacheck.Arbitrary[((HListSpec.this.HInit, Double)) =&gt; (HListSpec.this.HInit, Double)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-873.8701" rx="374.5333" ry="26.7407"/>
<text text-anchor="start" x="4329.253" y="-877.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((HListSpec.this.HInit, Double)) =&gt; (HListSpec.this.HInit, Double)]</text>
<text text-anchor="middle" x="4586.253" y="-862.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((HListSpec.this.HInit, Double)) =&gt; (HListSpec.this.HInit, Double)]&#45;&gt;org.scalacheck.Arbitrary[(HListSpec.this.HInit, Double)] -->
<g id="edge317" class="edge">
<title>org.scalacheck.Arbitrary[((HListSpec.this.HInit, Double)) =&gt; (HListSpec.this.HInit, Double)]&#45;&gt;org.scalacheck.Arbitrary[(HListSpec.this.HInit, Double)]</title>
<path fill="none" stroke="#000000" d="M4880.9599,-857.2388C5113.3986,-844.1215 5432.4042,-826.119 5642.7349,-814.2493"/>
<polygon fill="#000000" stroke="#000000" points="5643.1936,-817.7291 5652.9805,-813.6711 5642.7991,-810.7402 5643.1936,-817.7291"/>
</g>
<!-- org.scalacheck.Cogen[(HListSpec.this.HInit, Double)] -->
<g id="node1155" class="node">
<title>org.scalacheck.Cogen[(HListSpec.this.HInit, Double)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-945.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="5713.0954" y="-949.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(HListSpec.this.HInit, Double)]</text>
<text text-anchor="middle" x="5862.0954" y="-934.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((HListSpec.this.HInit, Double)) =&gt; (HListSpec.this.HInit, Double)]&#45;&gt;org.scalacheck.Cogen[(HListSpec.this.HInit, Double)] -->
<g id="edge585" class="edge">
<title>org.scalacheck.Arbitrary[((HListSpec.this.HInit, Double)) =&gt; (HListSpec.this.HInit, Double)]&#45;&gt;org.scalacheck.Cogen[(HListSpec.this.HInit, Double)]</title>
<path fill="none" stroke="#000000" d="M4880.9599,-890.5013C5116.295,-903.7821 5440.3679,-922.0706 5650.5467,-933.9317"/>
<polygon fill="#000000" stroke="#000000" points="5650.5993,-937.4401 5660.7806,-934.5092 5650.9937,-930.4512 5650.5993,-937.4401"/>
</g>
<!-- scala.reflect.ClassTag[((HListSpec.this.HInit, Double)) =&gt; (HListSpec.this.HInit, Double)] -->
<g id="node1323" class="node">
<title>scala.reflect.ClassTag[((HListSpec.this.HInit, Double)) =&gt; (HListSpec.this.HInit, Double)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-873.8701" rx="364.3201" ry="26.7407"/>
<text text-anchor="start" x="5612.5954" y="-877.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((HListSpec.this.HInit, Double)) =&gt; (HListSpec.this.HInit, Double)]</text>
<text text-anchor="middle" x="5862.0954" y="-862.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((HListSpec.this.HInit, Double)) =&gt; (HListSpec.this.HInit, Double)]&#45;&gt;scala.reflect.ClassTag[((HListSpec.this.HInit, Double)) =&gt; (HListSpec.this.HInit, Double)] -->
<g id="edge209" class="edge">
<title>org.scalacheck.Arbitrary[((HListSpec.this.HInit, Double)) =&gt; (HListSpec.this.HInit, Double)]&#45;&gt;scala.reflect.ClassTag[((HListSpec.this.HInit, Double)) =&gt; (HListSpec.this.HInit, Double)]</title>
<path fill="none" stroke="#000000" d="M4961.2869,-873.8701C5127.0869,-873.8701 5321.6031,-873.8701 5487.3678,-873.8701"/>
<polygon fill="#000000" stroke="#000000" points="5487.7414,-877.3702 5497.7414,-873.8701 5487.7413,-870.3702 5487.7414,-877.3702"/>
</g>
<!-- org.scalacheck.util.Buildable[(A, B),Either[A,B]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(A, B),Either[A,B]] -->
<g id="edge415" class="edge">
<title>org.scalacheck.util.Buildable[(A, B),Either[A,B]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(A, B),Either[A,B]]</title>
<path fill="none" stroke="#000000" d="M6065.2817,-28493.8701C6264.5374,-28493.8701 6569.1541,-28493.8701 6785.9802,-28493.8701"/>
<polygon fill="#000000" stroke="#000000" points="6786.2382,-28497.3702 6796.2382,-28493.8701 6786.2381,-28490.3702 6786.2382,-28497.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[((scalaz.IList[Char], Char)) =&gt; (scalaz.IList[Char], Char)] -->
<g id="node1027" class="node">
<title>org.scalacheck.Arbitrary[((scalaz.IList[Char], Char)) =&gt; (scalaz.IList[Char], Char)]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-4436.8701" rx="334.423" ry="26.7407"/>
<text text-anchor="start" x="2938.3678" y="-4440.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((scalaz.IList[Char], Char)) =&gt; (scalaz.IList[Char], Char)]</text>
<text text-anchor="middle" x="3166.8678" y="-4425.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 26ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((scalaz.IList[Char], Char)) =&gt; (scalaz.IList[Char], Char)]&#45;&gt;org.scalacheck.Cogen[(scalaz.IList[Char], Char)] -->
<g id="edge1221" class="edge">
<title>org.scalacheck.Arbitrary[((scalaz.IList[Char], Char)) =&gt; (scalaz.IList[Char], Char)]&#45;&gt;org.scalacheck.Cogen[(scalaz.IList[Char], Char)]</title>
<path fill="none" stroke="#000000" d="M3175.9225,-4409.8132C3224.6393,-4269.0479 3470.3485,-3617.1584 3922.9868,-3361.8701 4087.4423,-3269.117 4312.5294,-3276.1148 4453.6229,-3293.2579"/>
<polygon fill="#000000" stroke="#000000" points="4453.2777,-3296.7419 4463.6345,-3294.5085 4454.1454,-3289.7959 4453.2777,-3296.7419"/>
</g>
<!-- org.scalacheck.Arbitrary[((scalaz.IList[Char], Char)) =&gt; (scalaz.IList[Char], Char)]&#45;&gt;scala.reflect.ClassTag[((scalaz.IList[Char], Char)) =&gt; (scalaz.IList[Char], Char)] -->
<g id="edge1225" class="edge">
<title>org.scalacheck.Arbitrary[((scalaz.IList[Char], Char)) =&gt; (scalaz.IList[Char], Char)]&#45;&gt;scala.reflect.ClassTag[((scalaz.IList[Char], Char)) =&gt; (scalaz.IList[Char], Char)]</title>
<path fill="none" stroke="#000000" d="M3501.4449,-4436.8701C3727.8726,-4436.8701 4025.7909,-4436.8701 4252.1241,-4436.8701"/>
<polygon fill="#000000" stroke="#000000" points="4252.1704,-4440.3702 4262.1703,-4436.8701 4252.1703,-4433.3702 4252.1704,-4440.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(scalaz.IList[Char], Char)] -->
<g id="node1464" class="node">
<title>org.scalacheck.Arbitrary[(scalaz.IList[Char], Char)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-4508.8701" rx="212.2642" ry="26.7407"/>
<text text-anchor="start" x="4444.253" y="-4512.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(scalaz.IList[Char], Char)]</text>
<text text-anchor="middle" x="4586.253" y="-4497.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((scalaz.IList[Char], Char)) =&gt; (scalaz.IList[Char], Char)]&#45;&gt;org.scalacheck.Arbitrary[(scalaz.IList[Char], Char)] -->
<g id="edge67" class="edge">
<title>org.scalacheck.Arbitrary[((scalaz.IList[Char], Char)) =&gt; (scalaz.IList[Char], Char)]&#45;&gt;org.scalacheck.Arbitrary[(scalaz.IList[Char], Char)]</title>
<path fill="none" stroke="#000000" d="M3449.8395,-4451.2241C3724.1428,-4465.1385 4133.7238,-4485.915 4378.9788,-4498.3558"/>
<polygon fill="#000000" stroke="#000000" points="4378.9175,-4501.8571 4389.082,-4498.8683 4379.2722,-4494.8661 4378.9175,-4501.8571"/>
</g>
<!-- monocle.function.Index[scalaz.NonEmptyList[Int],Int,Int] -->
<g id="node1028" class="node">
<title>monocle.function.Index[scalaz.NonEmptyList[Int],Int,Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-52383.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="493.1596" y="-52387.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[scalaz.NonEmptyList[Int],Int,Int]</text>
<text text-anchor="middle" x="652.6596" y="-52372.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[String] =&gt; ?{def shouldEqual: ?} -->
<g id="node1029" class="node">
<title>List[String] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-24681.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="548.1596" y="-24685.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[String] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-24670.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- List[String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge428" class="edge">
<title>List[String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M791.0982,-24668.5296C961.6399,-24655.519 1237.212,-24646.7868 1305.3191,-24717.8701 1317.773,-24730.8682 1300.9331,-25352.8073 1313.3191,-25365.8701 1435.0325,-25494.2331 1668.014,-25455.6392 1787.4307,-25424.5265"/>
<polygon fill="#000000" stroke="#000000" points="1788.4615,-25427.8741 1797.2278,-25421.9241 1786.6643,-25421.1087 1788.4615,-25427.8741"/>
</g>
<!-- List[String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge493" class="edge">
<title>List[String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M766.6493,-24663.0924C902.1495,-24646.2488 1131.7373,-24635.3258 1305.3191,-24717.8701 1580.7179,-24848.832 1782.2308,-25183.5094 1842.9891,-25293.9249"/>
<polygon fill="#000000" stroke="#000000" points="1840.0779,-25295.8967 1847.9413,-25302.9972 1846.2221,-25292.5428 1840.0779,-25295.8967"/>
</g>
<!-- org.scalactic.Equality[Stream[Int]] -->
<g id="node1030" class="node">
<title>org.scalactic.Equality[Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-22529.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="4491.253" y="-22533.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Stream[Int]]</text>
<text text-anchor="middle" x="4586.253" y="-22518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 8ms</text>
</g>
<!-- org.scalactic.Equality[Stream[Int]]&#45;&gt;scalaz.Equal[Stream[Int]] -->
<g id="edge576" class="edge">
<title>org.scalactic.Equality[Stream[Int]]&#45;&gt;scalaz.Equal[Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4731.0563,-22532.821C4984.7992,-22537.9919 5505.198,-22548.597 5741.0894,-22553.4041"/>
<polygon fill="#000000" stroke="#000000" points="5741.3502,-22556.9101 5751.4194,-22553.6146 5741.4929,-22549.9115 5741.3502,-22556.9101"/>
</g>
<!-- org.scalacheck.util.Buildable[Int,List[Int]] -->
<g id="node1031" class="node">
<title>org.scalacheck.util.Buildable[Int,List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-9001.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="6930.014" y="-9005.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Int,List[Int]]</text>
<text text-anchor="middle" x="7046.014" y="-8990.6701" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 41ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Int,List[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,List[Int]] -->
<g id="edge1236" class="edge">
<title>org.scalacheck.util.Buildable[Int,List[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,List[Int]]</title>
<path fill="none" stroke="#000000" d="M7221.4041,-9001.8701C7420.1473,-9001.8701 7744.9109,-9001.8701 7964.5353,-9001.8701"/>
<polygon fill="#000000" stroke="#000000" points="7964.5864,-9005.3702 7974.5864,-9001.8701 7964.5863,-8998.3702 7964.5864,-9005.3702"/>
</g>
<!-- shapeless.ops.hlist.At[Long :: Double :: shapeless.HNil,shapeless.nat._1]&#45;&gt;shapeless.ops.hlist.At[Double :: shapeless.HNil,shapeless._0] -->
<g id="edge228" class="edge">
<title>shapeless.ops.hlist.At[Long :: Double :: shapeless.HNil,shapeless.nat._1]&#45;&gt;shapeless.ops.hlist.At[Double :: shapeless.HNil,shapeless._0]</title>
<path fill="none" stroke="#000000" d="M7340.4764,-38199.8701C7524.8411,-38199.8701 7760.1959,-38199.8701 7937.4782,-38199.8701"/>
<polygon fill="#000000" stroke="#000000" points="7937.7364,-38203.3702 7947.7363,-38199.8701 7937.7363,-38196.3702 7937.7364,-38203.3702"/>
</g>
<!-- monocle.function.Snoc[List[Char],Char] -->
<g id="node1033" class="node">
<title>monocle.function.Snoc[List[Char],Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-52455.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="541.1596" y="-52459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc[List[Char],Char]</text>
<text text-anchor="middle" x="652.6596" y="-52444.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[S] -->
<g id="node1034" class="node">
<title>org.scalacheck.Arbitrary[S]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-48063.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-48067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[S]</text>
<text text-anchor="middle" x="652.6596" y="-48052.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[S]&#45;&gt;scala.reflect.ClassTag[S] -->
<g id="edge147" class="edge">
<title>org.scalacheck.Arbitrary[S]&#45;&gt;scala.reflect.ClassTag[S]</title>
<path fill="none" stroke="#000000" d="M770.8214,-48063.8701C1002.2992,-48063.8701 1513.0101,-48063.8701 1744.2132,-48063.8701"/>
<polygon fill="#000000" stroke="#000000" points="1744.3375,-48067.3702 1754.3374,-48063.8701 1744.3374,-48060.3702 1744.3375,-48067.3702"/>
</g>
<!-- scalaz.Monoid[Int] -->
<g id="node1035" class="node">
<title>scalaz.Monoid[Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-52527.8701" rx="85.6199" ry="26.7407"/>
<text text-anchor="start" x="600.1596" y="-52531.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Monoid[Int]</text>
<text text-anchor="middle" x="652.6596" y="-52516.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3] -->
<g id="node1451" class="node">
<title>shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-38199.8701" rx="353.6068" ry="26.7407"/>
<text text-anchor="start" x="4344.253" y="-38203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3]</text>
<text text-anchor="middle" x="4586.253" y="-38188.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._4]&#45;&gt;shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3] -->
<g id="edge342" class="edge">
<title>shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._4]&#45;&gt;shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3]</title>
<path fill="none" stroke="#000000" d="M3563.1891,-38199.8701C3769.7766,-38199.8701 4020.6929,-38199.8701 4222.3288,-38199.8701"/>
<polygon fill="#000000" stroke="#000000" points="4222.4982,-38203.3702 4232.4981,-38199.8701 4222.4981,-38196.3702 4222.4982,-38203.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[Stream[Int],Stream[Int]]&#45;&gt;shapeless.Generic.Aux[Stream[Int],L1] -->
<g id="edge360" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[Stream[Int],Stream[Int]]&#45;&gt;shapeless.Generic.Aux[Stream[Int],L1]</title>
<path fill="none" stroke="#000000" d="M2098.3295,-33438.8701C2355.9492,-33438.8701 2762.1356,-33438.8701 2992.3879,-33438.8701"/>
<polygon fill="#000000" stroke="#000000" points="2992.5392,-33442.3702 3002.5391,-33438.8701 2992.5391,-33435.3702 2992.5392,-33442.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,String]] -->
<g id="node1038" class="node">
<title>org.scalacheck.Arbitrary[Either[String,String]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-8245.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="5734.0954" y="-8249.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Either[String,String]]</text>
<text text-anchor="middle" x="5862.0954" y="-8234.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,String]]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge297" class="edge">
<title>org.scalacheck.Arbitrary[Either[String,String]]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6046.4107,-8238.0733C6166.3908,-8231.8398 6326.1388,-8221.3597 6466.6717,-8204.8701 6632.8734,-8185.3685 6824.0395,-8151.0137 6939.8802,-8128.8595"/>
<polygon fill="#000000" stroke="#000000" points="6940.6529,-8132.2752 6949.8146,-8126.9542 6939.3343,-8125.4005 6940.6529,-8132.2752"/>
</g>
<!-- scala.reflect.ClassTag[Either[String,String]] -->
<g id="node1262" class="node">
<title>scala.reflect.ClassTag[Either[String,String]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-8245.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="6925.514" y="-8249.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Either[String,String]]</text>
<text text-anchor="middle" x="7046.014" y="-8234.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,String]]&#45;&gt;scala.reflect.ClassTag[Either[String,String]] -->
<g id="edge580" class="edge">
<title>org.scalacheck.Arbitrary[Either[String,String]]&#45;&gt;scala.reflect.ClassTag[Either[String,String]]</title>
<path fill="none" stroke="#000000" d="M6054.6172,-8245.8701C6274.9252,-8245.8701 6633.5944,-8245.8701 6853.7812,-8245.8701"/>
<polygon fill="#000000" stroke="#000000" points="6853.8345,-8249.3702 6863.8345,-8245.8701 6853.8344,-8242.3702 6853.8345,-8249.3702"/>
</g>
<!-- monocle.function.Cons[Vector[Int],Int] -->
<g id="node1039" class="node">
<title>monocle.function.Cons[Vector[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-52599.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="544.1596" y="-52603.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons[Vector[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-52588.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Char, monocle.function.CList)) =&gt; (Char, monocle.function.CList)] -->
<g id="node1041" class="node">
<title>org.scalacheck.Arbitrary[((Char, monocle.function.CList)) =&gt; (Char, monocle.function.CList)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-2745.8701" rx="380.3469" ry="26.7407"/>
<text text-anchor="start" x="4325.253" y="-2749.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Char, monocle.function.CList)) =&gt; (Char, monocle.function.CList)]</text>
<text text-anchor="middle" x="4586.253" y="-2734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 33ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Char, monocle.function.CList)) =&gt; (Char, monocle.function.CList)]&#45;&gt;org.scalacheck.Cogen[(Char, monocle.function.CList)] -->
<g id="edge770" class="edge">
<title>org.scalacheck.Arbitrary[((Char, monocle.function.CList)) =&gt; (Char, monocle.function.CList)]&#45;&gt;org.scalacheck.Cogen[(Char, monocle.function.CList)]</title>
<path fill="none" stroke="#000000" d="M4718.1835,-2771.1021C4853.1628,-2795.9719 5069.2028,-2833.1668 5257.5191,-2853.8701 5382.5628,-2867.6172 5522.7743,-2876.3778 5636.6661,-2881.8103"/>
<polygon fill="#000000" stroke="#000000" points="5636.7514,-2885.3181 5646.9052,-2882.2931 5637.0812,-2878.3258 5636.7514,-2885.3181"/>
</g>
<!-- org.scalacheck.Arbitrary[((Char, monocle.function.CList)) =&gt; (Char, monocle.function.CList)]&#45;&gt;scala.reflect.ClassTag[((Char, monocle.function.CList)) =&gt; (Char, monocle.function.CList)] -->
<g id="edge191" class="edge">
<title>org.scalacheck.Arbitrary[((Char, monocle.function.CList)) =&gt; (Char, monocle.function.CList)]&#45;&gt;scala.reflect.ClassTag[((Char, monocle.function.CList)) =&gt; (Char, monocle.function.CList)]</title>
<path fill="none" stroke="#000000" d="M4966.8879,-2745.8701C5129.625,-2745.8701 5319.198,-2745.8701 5481.8881,-2745.8701"/>
<polygon fill="#000000" stroke="#000000" points="5482.0711,-2749.3702 5492.0711,-2745.8701 5482.071,-2742.3702 5482.0711,-2749.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[((Char, monocle.function.CList)) =&gt; (Char, monocle.function.CList)]&#45;&gt;org.scalacheck.Arbitrary[(Char, monocle.function.CList)] -->
<g id="edge577" class="edge">
<title>org.scalacheck.Arbitrary[((Char, monocle.function.CList)) =&gt; (Char, monocle.function.CList)]&#45;&gt;org.scalacheck.Arbitrary[(Char, monocle.function.CList)]</title>
<path fill="none" stroke="#000000" d="M4718.1835,-2720.638C4853.1628,-2695.7682 5069.2028,-2658.5734 5257.5191,-2637.8701 5379.2655,-2624.4854 5515.3903,-2615.8278 5627.6023,-2610.3666"/>
<polygon fill="#000000" stroke="#000000" points="5627.8758,-2613.8576 5637.6959,-2609.8808 5627.5392,-2606.8657 5627.8758,-2613.8576"/>
</g>
<!-- org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Cogen[Char] -->
<g id="edge1001" class="edge">
<title>org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Cogen[Char]</title>
<path fill="none" stroke="#000000" d="M6058.1323,-4425.8254C6213.1548,-4433.6075 6412.2446,-4431.2091 6466.6717,-4373.8701 6487.4023,-4352.0304 6453.9789,-3311.7455 6474.6717,-3289.8701 6600.3537,-3157.0055 6840.5611,-3196.55 6965.7096,-3229.2935"/>
<polygon fill="#000000" stroke="#000000" points="6965.0553,-3232.7413 6975.6194,-3231.9352 6966.8584,-3225.9775 6965.0553,-3232.7413"/>
</g>
<!-- org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Cogen[Long] -->
<g id="edge387" class="edge">
<title>org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Cogen[Long]</title>
<path fill="none" stroke="#000000" d="M6105.6101,-4409.8701C6350.2526,-4409.8701 6718.1799,-4409.8701 6913.3831,-4409.8701"/>
<polygon fill="#000000" stroke="#000000" points="6913.4069,-4413.3702 6923.4069,-4409.8701 6913.4069,-4406.3702 6913.4069,-4413.3702"/>
</g>
<!-- org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Cogen[Float] -->
<g id="edge857" class="edge">
<title>org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Cogen[Float]</title>
<path fill="none" stroke="#000000" d="M6058.4563,-4425.7851C6213.3844,-4433.5072 6412.1673,-4431.0449 6466.6717,-4373.8701 6479.821,-4360.0766 6461.5463,-3701.6862 6474.6717,-3687.8701 6533.7252,-3625.7088 6772.7004,-3630.9845 6922.2506,-3641.0322"/>
<polygon fill="#000000" stroke="#000000" points="6922.1976,-3644.5367 6932.4143,-3641.7316 6922.6782,-3637.5533 6922.1976,-3644.5367"/>
</g>
<!-- org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge234" class="edge">
<title>org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M6058.155,-4393.8932C6213.1914,-4386.0979 6412.289,-4388.4889 6466.6717,-4445.8701 6479.78,-4459.7011 6464.2189,-5801.9369 6474.6717,-5817.8701 6574.6763,-5970.3055 6789.8396,-6031.2137 6925.712,-6055.0646"/>
<polygon fill="#000000" stroke="#000000" points="6925.3132,-6058.5472 6935.7607,-6056.7864 6926.4954,-6051.6477 6925.3132,-6058.5472"/>
</g>
<!-- org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Cogen[Boolean] -->
<g id="edge1052" class="edge">
<title>org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Cogen[Boolean]</title>
<path fill="none" stroke="#000000" d="M6057.8006,-4393.8823C6212.9123,-4386.0447 6412.3068,-4388.3815 6466.6717,-4445.8701 6487.6663,-4468.071 6453.7154,-6623.6329 6474.6717,-6645.8701 6599.2752,-6778.0893 6837.2474,-6739.8392 6963.1508,-6707.1543"/>
<polygon fill="#000000" stroke="#000000" points="6964.3564,-6710.4559 6973.1286,-6704.5146 6962.566,-6703.6887 6964.3564,-6710.4559"/>
</g>
<!-- org.scalacheck.Cogen[HListSpec.this.Example] -->
<g id="node1043" class="node">
<title>org.scalacheck.Cogen[HListSpec.this.Example]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-52671.8701" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="521.6596" y="-52675.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[HListSpec.this.Example]</text>
<text text-anchor="middle" x="652.6596" y="-52660.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.ReverseH,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: shapeless.HNil,Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H] -->
<g id="edge1252" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.ReverseH,HListSpec.this.H]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: shapeless.HNil,Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,HListSpec.this.H]</title>
<path fill="none" stroke="#000000" d="M3554.721,-23601.8701C3703.0545,-23601.8701 3875.186,-23601.8701 4035.8365,-23601.8701"/>
<polygon fill="#000000" stroke="#000000" points="4035.9118,-23605.3702 4045.9117,-23601.8701 4035.9117,-23598.3702 4035.9118,-23605.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[HListSpec.this.HTail] -->
<g id="node1046" class="node">
<title>org.scalacheck.Arbitrary[HListSpec.this.HTail]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-7773.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="6916.514" y="-7777.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[HListSpec.this.HTail]</text>
<text text-anchor="middle" x="7046.014" y="-7762.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(IsoSpec.this.IntWrapper, Boolean)] -->
<g id="node1047" class="node">
<title>org.scalacheck.Arbitrary[(IsoSpec.this.IntWrapper, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-4879.8701" rx="250.1317" ry="26.7407"/>
<text text-anchor="start" x="5693.0954" y="-4883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(IsoSpec.this.IntWrapper, Boolean)]</text>
<text text-anchor="middle" x="5862.0954" y="-4868.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(IsoSpec.this.IntWrapper, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge970" class="edge">
<title>org.scalacheck.Arbitrary[(IsoSpec.this.IntWrapper, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6062.0452,-4863.6868C6216.5153,-4856.1188 6412.7697,-4858.9387 6466.6717,-4915.8701 6482.504,-4932.5922 6458.8683,-6557.1207 6474.6717,-6573.8701 6531.2204,-6633.8036 6754.2122,-6631.2007 6904.3076,-6621.9287"/>
<polygon fill="#000000" stroke="#000000" points="6904.7772,-6625.406 6914.5354,-6621.2797 6904.3338,-6618.4201 6904.7772,-6625.406"/>
</g>
<!-- org.scalacheck.Arbitrary[(IsoSpec.this.IntWrapper, Boolean)]&#45;&gt;scala.reflect.ClassTag[(IsoSpec.this.IntWrapper, Boolean)] -->
<g id="edge626" class="edge">
<title>org.scalacheck.Arbitrary[(IsoSpec.this.IntWrapper, Boolean)]&#45;&gt;scala.reflect.ClassTag[(IsoSpec.this.IntWrapper, Boolean)]</title>
<path fill="none" stroke="#000000" d="M6112.4504,-4879.8701C6313.6493,-4879.8701 6594.8905,-4879.8701 6795.999,-4879.8701"/>
<polygon fill="#000000" stroke="#000000" points="6796.115,-4883.3702 6806.115,-4879.8701 6796.115,-4876.3702 6796.115,-4883.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(IsoSpec.this.IntWrapper, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper] -->
<g id="edge1223" class="edge">
<title>org.scalacheck.Arbitrary[(IsoSpec.this.IntWrapper, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[IsoSpec.this.IntWrapper]</title>
<path fill="none" stroke="#000000" d="M6069.8273,-4864.83C6221.8846,-4858.7192 6410.9774,-4862.9557 6466.6717,-4915.8701 6490.0135,-4938.0467 6451.3682,-4965.6532 6474.6717,-4987.8701 6527.7536,-5038.4769 6709.5169,-5042.699 6853.9512,-5037.1985"/>
<polygon fill="#000000" stroke="#000000" points="6854.4312,-5040.6822 6864.2836,-5036.7862 6854.152,-5033.6878 6854.4312,-5040.6822"/>
</g>
<!-- scalaz.Equal[monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]] -->
<g id="node1048" class="node">
<title>scalaz.Equal[monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-13214.8701" rx="333.0946" ry="26.7407"/>
<text text-anchor="start" x="2939.3678" y="-13218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]]</text>
<text text-anchor="middle" x="3166.8678" y="-13203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 54ms</text>
</g>
<!-- scalaz.Equal[monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Quintary] -->
<g id="edge331" class="edge">
<title>scalaz.Equal[monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Quintary]</title>
<path fill="none" stroke="#000000" d="M3472.6871,-13204.1851C3631.6177,-13181.1469 3813.3971,-13123.6797 3914.9868,-12986.8701 3928.3759,-12968.8392 3907.5225,-9769.1561 3922.9868,-9752.8701 4070.2763,-9597.7541 4352.3336,-9648.5209 4496.5377,-9688.2551"/>
<polygon fill="#000000" stroke="#000000" points="4495.6829,-9691.6503 4506.2562,-9690.9739 4497.5689,-9684.9091 4495.6829,-9691.6503"/>
</g>
<!-- scalaz.Equal[monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[monocle.Quintary =&gt; (Char, Boolean, String, Int, Double)] -->
<g id="edge1158" class="edge">
<title>scalaz.Equal[monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[monocle.Quintary =&gt; (Char, Boolean, String, Int, Double)]</title>
<path fill="none" stroke="#000000" d="M3474.0774,-13225.3333C3632.6577,-13248.2906 3813.6561,-13305.5811 3914.9868,-13441.8701 3928.4779,-13460.0155 3907.4174,-16681.4731 3922.9868,-16697.8701 3981.8645,-16759.8774 4195.0986,-16762.1258 4364.1002,-16753.0421"/>
<polygon fill="#000000" stroke="#000000" points="4364.3544,-16756.5335 4374.1457,-16752.4861 4363.9675,-16749.5442 4364.3544,-16756.5335"/>
</g>
<!-- monocle.function.Plated[String] -->
<g id="node1050" class="node">
<title>monocle.function.Plated[String]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-52743.8701" rx="135.5294" ry="26.7407"/>
<text text-anchor="start" x="564.6596" y="-52747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Plated[String]</text>
<text text-anchor="middle" x="652.6596" y="-52732.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Either3[String,Int,Char]] -->
<g id="node1052" class="node">
<title>org.scalacheck.Arbitrary[scalaz.Either3[String,Int,Char]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-8135.8701" rx="231.4481" ry="26.7407"/>
<text text-anchor="start" x="5706.5954" y="-8139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.Either3[String,Int,Char]]</text>
<text text-anchor="middle" x="5862.0954" y="-8124.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 42ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Either3[String,Int,Char]]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge866" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Either3[String,Int,Char]]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6088.966,-8130.5045C6327.9875,-8124.8516 6697.2974,-8116.1173 6900.1675,-8111.3194"/>
<polygon fill="#000000" stroke="#000000" points="6900.3838,-8114.8153 6910.2982,-8111.0798 6900.2182,-8107.8173 6900.3838,-8114.8153"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Either3[String,Int,Char]]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge880" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Either3[String,Int,Char]]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M5967.8939,-8159.8027C6105.7535,-8183.9978 6343.6781,-8200.4884 6466.6717,-8061.8701 6481.5034,-8045.1542 6459.3545,-4860.1422 6474.6717,-4843.8701 6532.5238,-4782.4113 6765.1079,-4786.6574 6915.1006,-4796.4759"/>
<polygon fill="#000000" stroke="#000000" points="6915.0939,-4799.9832 6925.3058,-4797.1608 6915.5627,-4792.9989 6915.0939,-4799.9832"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Either3[String,Int,Char]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1342" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Either3[String,Int,Char]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M5967.9108,-8111.9224C6105.7893,-8087.7106 6343.7348,-8071.2014 6466.6717,-8209.8701 6477.7189,-8222.331 6466.2107,-12991.5269 6474.6717,-13005.8701 6577.4986,-13180.1829 6814.4979,-13265.4972 6948.714,-13301.1997"/>
<polygon fill="#000000" stroke="#000000" points="6948.0329,-13304.6393 6958.5934,-13303.7874 6949.8067,-13297.8677 6948.0329,-13304.6393"/>
</g>
<!-- org.scalactic.Equality[monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]] -->
<g id="node1053" class="node">
<title>org.scalactic.Equality[monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-13214.8701" rx="368.3053" ry="26.7407"/>
<text text-anchor="start" x="1609.534" y="-13218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]]</text>
<text text-anchor="middle" x="1862.034" y="-13203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 55ms</text>
</g>
<!-- org.scalactic.Equality[monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]] -->
<g id="edge550" class="edge">
<title>org.scalactic.Equality[monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[monocle.Iso[monocle.Quintary,(Char, Boolean, String, Int, Double)]]</title>
<path fill="none" stroke="#000000" d="M2230.7149,-13214.8701C2416.8264,-13214.8701 2641.1958,-13214.8701 2823.6181,-13214.8701"/>
<polygon fill="#000000" stroke="#000000" points="2823.6441,-13218.3702 2833.644,-13214.8701 2823.644,-13211.3702 2823.6441,-13218.3702"/>
</g>
<!-- ((Any, Any, Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop -->
<g id="node1055" class="node">
<title>((Any, Any, Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-52815.8701" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="484.6596" y="-52819.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop</text>
<text text-anchor="middle" x="652.6596" y="-52804.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Stream[Int]) =&gt; ?{def #::: ?} -->
<g id="node1056" class="node">
<title>(=&gt; scala.collection.immutable.Stream[Int]) =&gt; ?{def #::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-52887.8701" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="484.6596" y="-52891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Stream[Int]) =&gt; ?{def #::: ?}</text>
<text text-anchor="middle" x="652.6596" y="-52876.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scalaz.Equal[scalaz.ISet[Int]] -->
<g id="node1057" class="node">
<title>scalaz.Equal[scalaz.ISet[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-20743.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="5782.0954" y="-20747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.ISet[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-20732.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scalaz.Equal[scalaz.ISet[Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge251" class="edge">
<title>scalaz.Equal[scalaz.ISet[Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5984.3617,-20738.7429C6107.7972,-20736.4426 6303.0559,-20740.7168 6466.6717,-20779.8701 6673.8648,-20829.4513 6900.1604,-20948.8636 6997.2968,-21003.599"/>
<polygon fill="#000000" stroke="#000000" points="6995.8624,-21006.8089 7006.289,-21008.6896 6999.3109,-21000.7172 6995.8624,-21006.8089"/>
</g>
<!-- scalaz.Equal[scalaz.Id.Id[IsoSpec.this.IntWrapper]] -->
<g id="node1059" class="node">
<title>scalaz.Equal[scalaz.Id.Id[IsoSpec.this.IntWrapper]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-52959.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="1720.534" y="-52963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Id.Id[IsoSpec.this.IntWrapper]]</text>
<text text-anchor="middle" x="1862.034" y="-52948.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Empty[Stream[Int]] -->
<g id="node1060" class="node">
<title>monocle.function.Empty[Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-53031.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="548.1596" y="-53035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[Stream[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-53020.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Choice[monocle.Setter] -->
<g id="node1062" class="node">
<title>scalaz.Choice[monocle.Setter]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-53103.8701" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="569.1596" y="-53107.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Choice[monocle.Setter]</text>
<text text-anchor="middle" x="652.6596" y="-53092.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Functor[F$macro$7] -->
<g id="node1063" class="node">
<title>scalaz.Functor[F$macro$7]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-53175.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-53179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$7]</text>
<text text-anchor="middle" x="652.6596" y="-53164.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long), Float)]&#45;&gt;scala.reflect.ClassTag[((Int, Char, Boolean, String, Long), Float)] -->
<g id="edge59" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long), Float)]&#45;&gt;scala.reflect.ClassTag[((Int, Char, Boolean, String, Long), Float)]</title>
<path fill="none" stroke="#000000" d="M4666.5943,-5277.1064C4791.5048,-5238.2623 5040.5068,-5165.6581 5257.5191,-5131.8701 5365.5906,-5115.0437 5485.6536,-5105.9477 5590.1206,-5101.078"/>
<polygon fill="#000000" stroke="#000000" points="5590.3504,-5104.5713 5600.1807,-5100.6198 5590.0318,-5097.5785 5590.3504,-5104.5713"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long), Float)]&#45;&gt;org.scalacheck.Arbitrary[Float] -->
<g id="edge180" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long), Float)]&#45;&gt;org.scalacheck.Arbitrary[Float]</title>
<path fill="none" stroke="#000000" d="M4657.01,-5328.9693C4778.0396,-5372.2032 5033.4607,-5457.3341 5257.5191,-5491.8701 5523.2146,-5532.8239 6198.0339,-5519.6213 6466.6717,-5529.8701 6616.9762,-5535.6043 6789.1543,-5543.5004 6906.4881,-5549.0823"/>
<polygon fill="#000000" stroke="#000000" points="6906.4505,-5552.5844 6916.6058,-5549.5644 6906.7837,-5545.5923 6906.4505,-5552.5844"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)] -->
<g id="node1462" class="node">
<title>org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-5781.8701" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="5696.5954" y="-5785.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]</text>
<text text-anchor="middle" x="5862.0954" y="-5770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 58ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long), Float)]&#45;&gt;org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)] -->
<g id="edge432" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long), Float)]&#45;&gt;org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]</title>
<path fill="none" stroke="#000000" d="M4614.3428,-5329.63C4701.2772,-5410.4917 4976.9932,-5652.4689 5257.5191,-5745.8701 5380.3873,-5786.7791 5524.9637,-5796.6581 5641.9227,-5795.8954"/>
<polygon fill="#000000" stroke="#000000" points="5642.1102,-5799.3939 5652.0776,-5795.8021 5642.0459,-5792.3942 5642.1102,-5799.3939"/>
</g>
<!-- monocle.function.Field1[(Int, Char),Int] -->
<g id="node1065" class="node">
<title>monocle.function.Field1[(Int, Char),Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-43239.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="542.6596" y="-43243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field1[(Int, Char),Int]</text>
<text text-anchor="middle" x="652.6596" y="-43228.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.function.Field1[(Int, Char),Int]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char),shapeless.nat._0.N,Int] -->
<g id="edge123" class="edge">
<title>monocle.function.Field1[(Int, Char),Int]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char),shapeless.nat._0.N,Int]</title>
<path fill="none" stroke="#000000" d="M819.5482,-43239.8701C1021.8879,-43239.8701 1365.1886,-43239.8701 1602.2443,-43239.8701"/>
<polygon fill="#000000" stroke="#000000" points="1602.3927,-43243.3702 1612.3927,-43239.8701 1602.3927,-43236.3702 1602.3927,-43243.3702"/>
</g>
<!-- org.scalactic.Equality[List[(Int, String)]] -->
<g id="node1066" class="node">
<title>org.scalactic.Equality[List[(Int, String)]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-20690.8701" rx="168.0831" ry="26.7407"/>
<text text-anchor="start" x="3055.8678" y="-20694.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[List[(Int, String)]]</text>
<text text-anchor="middle" x="3166.8678" y="-20679.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 19ms</text>
</g>
<!-- scalaz.Equal[List[(Int, String)]] -->
<g id="node1294" class="node">
<title>scalaz.Equal[List[(Int, String)]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-20690.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="4500.253" y="-20694.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[List[(Int, String)]]</text>
<text text-anchor="middle" x="4586.253" y="-20679.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 17ms</text>
</g>
<!-- org.scalactic.Equality[List[(Int, String)]]&#45;&gt;scalaz.Equal[List[(Int, String)]] -->
<g id="edge649" class="edge">
<title>org.scalactic.Equality[List[(Int, String)]]&#45;&gt;scalaz.Equal[List[(Int, String)]]</title>
<path fill="none" stroke="#000000" d="M3335.2638,-20690.8701C3617.113,-20690.8701 4179.3948,-20690.8701 4443.2761,-20690.8701"/>
<polygon fill="#000000" stroke="#000000" points="4443.3063,-20694.3702 4453.3063,-20690.8701 4443.3063,-20687.3702 4443.3063,-20694.3702"/>
</g>
<!-- monocle.function.At[Int,monocle.refined.ZeroTo[Int(31)],Boolean] -->
<g id="node1067" class="node">
<title>monocle.function.At[Int,monocle.refined.ZeroTo[Int(31)],Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-53247.8701" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="467.6596" y="-53251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[Int,monocle.refined.ZeroTo[Int(31)],Boolean]</text>
<text text-anchor="middle" x="652.6596" y="-53236.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; Seq[?T] -->
<g id="node1068" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; Seq[?T]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-53319.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="509.6596" y="-53323.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; Seq[?T]</text>
<text text-anchor="middle" x="652.6596" y="-53308.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(A, B)]&#45;&gt;org.scalacheck.Arbitrary[A] -->
<g id="edge1336" class="edge">
<title>org.scalacheck.Arbitrary[(A, B)]&#45;&gt;org.scalacheck.Arbitrary[A]</title>
<path fill="none" stroke="#000000" d="M5987.1586,-28577.2575C6144.7514,-28588.5404 6402.7919,-28595.808 6466.6717,-28529.8701 6488.9462,-28506.8779 6452.6383,-28265.0933 6474.6717,-28241.8701 6599.3751,-28110.4327 6835.6931,-28142.6864 6961.7861,-28172.2776"/>
<polygon fill="#000000" stroke="#000000" points="6961.2432,-28175.7465 6971.7835,-28174.6725 6962.874,-28168.9391 6961.2432,-28175.7465"/>
</g>
<!-- org.scalacheck.Arbitrary[(A, B)]&#45;&gt;scala.reflect.ClassTag[(A, B)] -->
<g id="edge757" class="edge">
<title>org.scalacheck.Arbitrary[(A, B)]&#45;&gt;scala.reflect.ClassTag[(A, B)]</title>
<path fill="none" stroke="#000000" d="M6000.223,-28565.8701C6228.2027,-28565.8701 6680.6249,-28565.8701 6908.3198,-28565.8701"/>
<polygon fill="#000000" stroke="#000000" points="6908.6576,-28569.3702 6918.6575,-28565.8701 6908.6575,-28562.3702 6908.6576,-28569.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(A, B)]&#45;&gt;org.scalacheck.Arbitrary[B] -->
<g id="edge80" class="edge">
<title>org.scalacheck.Arbitrary[(A, B)]&#45;&gt;org.scalacheck.Arbitrary[B]</title>
<path fill="none" stroke="#000000" d="M5988.7103,-28555.1462C6145.6208,-28544.8571 6400.4483,-28538.9522 6466.6717,-28601.8701 6490.0135,-28624.0467 6451.3682,-28651.6532 6474.6717,-28673.8701 6605.8184,-28798.9018 6839.9385,-28764.1067 6963.8514,-28733.7166"/>
<polygon fill="#000000" stroke="#000000" points="6964.8198,-28737.0823 6973.6718,-28731.2606 6963.1214,-28730.2914 6964.8198,-28737.0823"/>
</g>
<!-- org.scalacheck.Cogen[(Char, Int)]&#45;&gt;org.scalacheck.Cogen[Char] -->
<g id="edge505" class="edge">
<title>org.scalacheck.Cogen[(Char, Int)]&#45;&gt;org.scalacheck.Cogen[Char]</title>
<path fill="none" stroke="#000000" d="M5991.1667,-7533.7785C6149.3533,-7545.1766 6404.1462,-7552.1029 6466.6717,-7485.8701 6486.6745,-7464.6812 6454.7055,-3311.0934 6474.6717,-3289.8701 6599.9897,-3156.6621 6840.3564,-3196.3568 6965.6232,-3229.2121"/>
<polygon fill="#000000" stroke="#000000" points="6964.9779,-3232.6624 6975.5425,-3231.8627 6966.7851,-3225.8997 6964.9779,-3232.6624"/>
</g>
<!-- org.scalacheck.Cogen[(Char, Int)]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge427" class="edge">
<title>org.scalacheck.Cogen[(Char, Int)]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M5991.1568,-7509.971C6149.3328,-7498.5828 6404.1145,-7491.6671 6466.6717,-7557.8701 6480.0026,-7571.9778 6463.4551,-10337.0293 6474.6717,-10352.8701 6576.3027,-10496.3989 6788.6194,-10539.0486 6923.8668,-10551.3598"/>
<polygon fill="#000000" stroke="#000000" points="6923.6075,-10554.8504 6933.8727,-10552.2282 6924.2128,-10547.8766 6923.6075,-10554.8504"/>
</g>
<!-- shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Boolean]&#45;&gt;shapeless.ops.coproduct.Selector[shapeless.CNil,Boolean] -->
<g id="edge1139" class="edge">
<title>shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Boolean]&#45;&gt;shapeless.ops.coproduct.Selector[shapeless.CNil,Boolean]</title>
<path fill="none" stroke="#000000" d="M2147.1757,-40503.8701C2377.9883,-40503.8701 2699.7642,-40503.8701 2919.7439,-40503.8701"/>
<polygon fill="#000000" stroke="#000000" points="2919.8139,-40507.3702 2929.8139,-40503.8701 2919.8139,-40500.3702 2919.8139,-40507.3702"/>
</g>
<!-- eu.timepit.refined.api.Validate[String,eu.timepit.refined.string.StartsWith[String(&#39;hello&#39;)]] -->
<g id="node1072" class="node">
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.string.StartsWith[String(&#39;hello&#39;)]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-2385.8701" rx="357.5922" ry="26.7407"/>
<text text-anchor="start" x="5617.0954" y="-2389.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.Validate[String,eu.timepit.refined.string.StartsWith[String(&#39;hello&#39;)]]</text>
<text text-anchor="middle" x="5862.0954" y="-2374.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- eu.timepit.refined.api.Validate[String,eu.timepit.refined.string.StartsWith[String(&#39;hello&#39;)]]&#45;&gt;shapeless.Witness.Aux[String(&#39;hello&#39;)] -->
<g id="edge55" class="edge">
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.string.StartsWith[String(&#39;hello&#39;)]]&#45;&gt;shapeless.Witness.Aux[String(&#39;hello&#39;)]</title>
<path fill="none" stroke="#000000" d="M6165.6844,-2371.6123C6262.0217,-2366.0647 6368.9019,-2358.847 6466.6717,-2349.8701 6620.766,-2335.7216 6797.1197,-2312.8402 6914.3745,-2296.6747"/>
<polygon fill="#000000" stroke="#000000" points="6915.0477,-2300.115 6924.4743,-2295.2787 6914.0892,-2293.1809 6915.0477,-2300.115"/>
</g>
<!-- scalaz.Equal[((String, Int)) =&gt; monocle.Arities] -->
<g id="node1073" class="node">
<title>scalaz.Equal[((String, Int)) =&gt; monocle.Arities]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-15785.8701" rx="197.0658" ry="26.7407"/>
<text text-anchor="start" x="4454.753" y="-15789.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[((String, Int)) =&gt; monocle.Arities]</text>
<text text-anchor="middle" x="4586.253" y="-15774.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- scalaz.Equal[((String, Int)) =&gt; monocle.Arities]&#45;&gt;org.scalacheck.Arbitrary[(String, Int)] -->
<g id="edge18" class="edge">
<title>scalaz.Equal[((String, Int)) =&gt; monocle.Arities]&#45;&gt;org.scalacheck.Arbitrary[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M4639.5504,-15759.8332C4771.0575,-15692.3203 5110.393,-15497.4755 5249.5191,-15221.8701 5261.1632,-15198.8034 5239.7381,-15124.6181 5257.5191,-15105.8701 5315.5505,-15044.6823 5535.9534,-15031.0142 5693.8736,-15029.4042"/>
<polygon fill="#000000" stroke="#000000" points="5694.2134,-15032.9014 5704.1828,-15029.3152 5694.153,-15025.9017 5694.2134,-15032.9014"/>
</g>
<!-- scalaz.Equal[((String, Int)) =&gt; monocle.Arities]&#45;&gt;scalaz.Equal[monocle.Arities] -->
<g id="edge1274" class="edge">
<title>scalaz.Equal[((String, Int)) =&gt; monocle.Arities]&#45;&gt;scalaz.Equal[monocle.Arities]</title>
<path fill="none" stroke="#000000" d="M4719.856,-15766.0678C4858.6316,-15751.535 5078.9231,-15745.7252 5249.5191,-15821.8701 5254.1108,-15823.9195 5252.9328,-15827.8085 5257.5191,-15829.8701 5415.5566,-15900.9077 5620.6429,-15895.408 5746.7244,-15882.4708"/>
<polygon fill="#000000" stroke="#000000" points="5747.2156,-15885.9384 5756.7914,-15881.4047 5746.4784,-15878.9773 5747.2156,-15885.9384"/>
</g>
<!-- scalaz.Functor[F$macro$10] -->
<g id="node1074" class="node">
<title>scalaz.Functor[F$macro$10]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-53391.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="574.1596" y="-53395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$10]</text>
<text text-anchor="middle" x="652.6596" y="-53380.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[scalaz.Tree[Int],scalaz.Tree[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.Tree[Int],scalaz.Tree[Int]] -->
<g id="edge743" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[scalaz.Tree[Int],scalaz.Tree[Int]]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.Tree[Int],scalaz.Tree[Int]]</title>
<path fill="none" stroke="#000000" d="M2127.2659,-33978.8701C2324.4557,-33978.8701 2595.5853,-33978.8701 2811.515,-33978.8701"/>
<polygon fill="#000000" stroke="#000000" points="2811.7552,-33982.3702 2821.7552,-33978.8701 2811.7551,-33975.3702 2811.7552,-33982.3702"/>
</g>
<!-- scalaz.Equal[Byte] -->
<g id="node1077" class="node">
<title>scalaz.Equal[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-53463.8701" rx="84.2917" ry="26.7407"/>
<text text-anchor="start" x="601.1596" y="-53467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Byte]</text>
<text text-anchor="middle" x="652.6596" y="-53452.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 5ms</text>
</g>
<!-- org.scalacheck.Cogen[Stream[Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge681" class="edge">
<title>org.scalacheck.Cogen[Stream[Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M5997.015,-11004.6873C6122.2711,-11010.1333 6312.1352,-11006.5356 6466.6717,-10952.8701 6700.6732,-10871.6089 6928.131,-10669.3016 7012.0623,-10589.2453"/>
<polygon fill="#000000" stroke="#000000" points="7014.7048,-10591.5604 7019.4991,-10582.1124 7009.8594,-10586.5085 7014.7048,-10591.5604"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Int :: shapeless.HNil,Char :: Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH] -->
<g id="node1079" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Int :: shapeless.HNil,Char :: Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-23673.8701" rx="571.1846" ry="26.7407"/>
<text text-anchor="start" x="5466.0954" y="-23677.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Int :: shapeless.HNil,Char :: Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="5862.0954" y="-23662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Int :: shapeless.HNil,Char :: Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Int :: shapeless.HNil,Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH] -->
<g id="edge1138" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Int :: shapeless.HNil,Char :: Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Int :: shapeless.HNil,Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]</title>
<path fill="none" stroke="#000000" d="M6433.6808,-23673.8701C6443.8762,-23673.8701 6454.0797,-23673.8701 6464.2792,-23673.8701"/>
<polygon fill="#000000" stroke="#000000" points="6464.4769,-23677.3702 6474.4769,-23673.8701 6464.4768,-23670.3702 6464.4769,-23677.3702"/>
</g>
<!-- monocle.function.Index[Int ==&gt;&gt; String,Int,String] -->
<g id="node1080" class="node">
<title>monocle.function.Index[Int ==&gt;&gt; String,Int,String]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-20455.8701" rx="212.2642" ry="26.7407"/>
<text text-anchor="start" x="5720.0954" y="-20459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[Int ==&gt;&gt; String,Int,String]</text>
<text text-anchor="middle" x="5862.0954" y="-20444.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Index[Int ==&gt;&gt; String,Int,String]&#45;&gt;scalaz.Order[Int] -->
<g id="edge240" class="edge">
<title>monocle.function.Index[Int ==&gt;&gt; String,Int,String]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M6014.5535,-20437.1829C6140.8796,-20428.0806 6322.4271,-20430.0546 6466.6717,-20491.8701 6732.5376,-20605.8058 6952.6682,-20897.1373 7022.6965,-20997.3755"/>
<polygon fill="#000000" stroke="#000000" points="7019.8577,-20999.4238 7028.4345,-21005.6439 7025.6086,-20995.4329 7019.8577,-20999.4238"/>
</g>
<!-- org.scalacheck.Cogen[List[Char]]&#45;&gt;org.scalacheck.Cogen[Char] -->
<g id="edge1246" class="edge">
<title>org.scalacheck.Cogen[List[Char]]&#45;&gt;org.scalacheck.Cogen[Char]</title>
<path fill="none" stroke="#000000" d="M6001.3231,-2956.2569C6125.2125,-2954.5279 6310.4508,-2960.0078 6466.6717,-2997.8701 6672.3833,-3047.727 6896.2868,-3167.3444 6994.7196,-3223.6261"/>
<polygon fill="#000000" stroke="#000000" points="6993.1525,-3226.7622 7003.5672,-3228.7079 6996.639,-3220.6922 6993.1525,-3226.7622"/>
</g>
<!-- org.scalacheck.Cogen[(scalaz.IList[Int], Int)]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge692" class="edge">
<title>org.scalacheck.Cogen[(scalaz.IList[Int], Int)]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M4741.7807,-12075.6705C4915.7951,-12088.3813 5182.205,-12095.0291 5249.5191,-12024.8701 5261.5012,-12012.3816 5245.4107,-11414.2361 5257.5191,-11401.8701 5351.5678,-11305.8201 6348.0897,-11424.1873 6466.6717,-11360.8701 6797.5279,-11184.2084 6984.7881,-10725.3654 7033.2795,-10592.4482"/>
<polygon fill="#000000" stroke="#000000" points="7036.6827,-10593.3286 7036.7869,-10582.7342 7030.0988,-10590.9512 7036.6827,-10593.3286"/>
</g>
<!-- org.scalacheck.Cogen[(scalaz.IList[Int], Int)]&#45;&gt;org.scalacheck.Cogen[scalaz.IList[Int]] -->
<g id="edge902" class="edge">
<title>org.scalacheck.Cogen[(scalaz.IList[Int], Int)]&#45;&gt;org.scalacheck.Cogen[scalaz.IList[Int]]</title>
<path fill="none" stroke="#000000" d="M4742.0282,-12075.564C4915.9176,-12088.1283 5181.8565,-12094.5927 5249.5191,-12024.8701 5262.2907,-12011.7097 5244.8366,-11708.1163 5257.5191,-11694.8701 5316.8307,-11632.9222 5545.8293,-11633.2519 5704.3104,-11641.6588"/>
<polygon fill="#000000" stroke="#000000" points="5704.4686,-11645.1726 5714.6448,-11642.2237 5704.8507,-11638.183 5704.4686,-11645.1726"/>
</g>
<!-- scalaz.Category[monocle.Getter] -->
<g id="node1084" class="node">
<title>scalaz.Category[monocle.Getter]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-53535.8701" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="562.1596" y="-53539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Category[monocle.Getter]</text>
<text text-anchor="middle" x="652.6596" y="-53524.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Each[Boolean :: Boolean :: shapeless.HNil,Boolean]&#45;&gt;monocle.function.Each[Boolean :: shapeless.HNil,Boolean] -->
<g id="edge257" class="edge">
<title>monocle.function.Each[Boolean :: Boolean :: shapeless.HNil,Boolean]&#45;&gt;monocle.function.Each[Boolean :: shapeless.HNil,Boolean]</title>
<path fill="none" stroke="#000000" d="M7331.1918,-26805.8701C7518.9922,-26805.8701 7762.6657,-26805.8701 7943.5905,-26805.8701"/>
<polygon fill="#000000" stroke="#000000" points="7943.7838,-26809.3702 7953.7838,-26805.8701 7943.7838,-26802.3702 7943.7838,-26809.3702"/>
</g>
<!-- org.scalacheck.Cogen[Option[scalaz.Cofree[Option,Int]]]&#45;&gt;org.scalacheck.Cogen[scalaz.Cofree[Option,Int]] -->
<g id="edge610" class="edge">
<title>org.scalacheck.Cogen[Option[scalaz.Cofree[Option,Int]]]&#45;&gt;org.scalacheck.Cogen[scalaz.Cofree[Option,Int]]</title>
<path fill="none" stroke="#000000" d="M4808.8524,-10629.0703C5048.3609,-10637.8934 5426.0319,-10651.8062 5658.084,-10660.3546"/>
<polygon fill="#000000" stroke="#000000" points="5658.2136,-10663.8617 5668.3357,-10660.7323 5658.4714,-10656.8664 5658.2136,-10663.8617"/>
</g>
<!-- monocle.function.Empty[String] -->
<g id="node1090" class="node">
<title>monocle.function.Empty[String]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-53607.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="563.1596" y="-53611.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[String]</text>
<text text-anchor="middle" x="652.6596" y="-53596.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[(Int, Char, Boolean, String, Long, Float)] -->
<g id="node1091" class="node">
<title>scalaz.Equal[(Int, Char, Boolean, String, Long, Float)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-19159.8701" rx="223.3915" ry="26.7407"/>
<text text-anchor="start" x="5712.0954" y="-19163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, Char, Boolean, String, Long, Float)]</text>
<text text-anchor="middle" x="5862.0954" y="-19148.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 23ms</text>
</g>
<!-- scalaz.Equal[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge273" class="edge">
<title>scalaz.Equal[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M6046.1598,-19144.6113C6202.6652,-19136.172 6410.6749,-19137.2125 6466.6717,-19195.8701 6478.4114,-19208.1676 6466.36,-19793.0388 6474.6717,-19807.8701 6582.7628,-20000.7459 6841.655,-20104.8155 6970.509,-20146.2505"/>
<polygon fill="#000000" stroke="#000000" points="6969.7197,-20149.672 6980.31,-20149.3618 6971.8377,-20143.0001 6969.7197,-20149.672"/>
</g>
<!-- scalaz.Equal[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge548" class="edge">
<title>scalaz.Equal[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M6045.9018,-19144.5155C6202.5334,-19135.9751 6410.8883,-19136.919 6466.6717,-19195.8701 6475.607,-19205.3127 6470.2305,-21055.6521 6474.6717,-21067.8701 6585.0217,-21371.4462 6893.349,-21635.9858 7004.994,-21724.4447"/>
<polygon fill="#000000" stroke="#000000" points="7002.9791,-21727.313 7013,-21730.7528 7007.3114,-21721.8147 7002.9791,-21727.313"/>
</g>
<!-- scalaz.Equal[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge477" class="edge">
<title>scalaz.Equal[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M6046.7618,-19175.0167C6203.0723,-19183.3085 6410.4309,-19182.1111 6466.6717,-19123.8701 6479.2563,-19110.8379 6464.02,-18812.5245 6474.6717,-18797.8701 6581.3963,-18651.0402 6803.9853,-18610.8349 6937.6482,-18600.2206"/>
<polygon fill="#000000" stroke="#000000" points="6938.2004,-18603.689 6947.9102,-18599.4499 6937.6761,-18596.7087 6938.2004,-18603.689"/>
</g>
<!-- scalaz.Equal[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge968" class="edge">
<title>scalaz.Equal[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M6070.8443,-19150.1607C6219.5729,-19147.3066 6403.8218,-19153.3122 6466.6717,-19195.8701 6473.586,-19200.552 6468.9263,-19206.8104 6474.6717,-19212.8701 6619.1703,-19365.2713 6856.3758,-19458.5586 6974.5103,-19497.9754"/>
<polygon fill="#000000" stroke="#000000" points="6973.5932,-19501.3584 6984.1864,-19501.1721 6975.7891,-19494.7118 6973.5932,-19501.3584"/>
</g>
<!-- scalaz.Equal[Float] -->
<g id="node1265" class="node">
<title>scalaz.Equal[Float]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-18905.8701" rx="86.0347" ry="26.7407"/>
<text text-anchor="start" x="6993.014" y="-18909.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Float]</text>
<text text-anchor="middle" x="7046.014" y="-18894.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 4ms</text>
</g>
<!-- scalaz.Equal[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Float] -->
<g id="edge883" class="edge">
<title>scalaz.Equal[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Float]</title>
<path fill="none" stroke="#000000" d="M6048.0164,-19174.8345C6203.9685,-19182.8626 6410.0532,-19181.3757 6466.6717,-19123.8701 6480.8731,-19109.4461 6460.4952,-18956.3185 6474.6717,-18941.8701 6538.9938,-18876.3142 6808.2187,-18886.6493 6952.9711,-18897.466"/>
<polygon fill="#000000" stroke="#000000" points="6952.9362,-18900.9735 6963.1736,-18898.2446 6953.4689,-18893.9937 6952.9362,-18900.9735"/>
</g>
<!-- scalaz.Equal[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Long] -->
<g id="edge1062" class="edge">
<title>scalaz.Equal[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Long]</title>
<path fill="none" stroke="#000000" d="M6047.4269,-19174.9635C6203.584,-19183.1483 6410.3205,-19181.8211 6466.6717,-19123.8701 6486.3564,-19103.6266 6455.022,-18890.1475 6474.6717,-18869.8701 6605.0138,-18735.3641 6853.0681,-18779.3804 6974.8961,-18811.973"/>
<polygon fill="#000000" stroke="#000000" points="6974.2976,-18815.4375 6984.8661,-18814.6905 6976.1385,-18808.6839 6974.2976,-18815.4375"/>
</g>
<!-- org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int]] -->
<g id="node1092" class="node">
<title>org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-16860.8701" rx="325.0384" ry="26.7407"/>
<text text-anchor="start" x="1640.034" y="-16864.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int]]</text>
<text text-anchor="middle" x="1862.034" y="-16849.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int]] -->
<g id="node1165" class="node">
<title>scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-16860.8701" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="2969.8678" y="-16864.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int]]</text>
<text text-anchor="middle" x="3166.8678" y="-16849.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int]]&#45;&gt;scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int]] -->
<g id="edge1268" class="edge">
<title>org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int]]&#45;&gt;scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int]]</title>
<path fill="none" stroke="#000000" d="M2187.5128,-16860.8701C2395.6349,-16860.8701 2663.6155,-16860.8701 2866.6296,-16860.8701"/>
<polygon fill="#000000" stroke="#000000" points="2866.8553,-16864.3702 2876.8552,-16860.8701 2866.8552,-16857.3702 2866.8553,-16864.3702"/>
</g>
<!-- monocle.function.Empty[List[Int]] -->
<g id="node1093" class="node">
<title>monocle.function.Empty[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-53679.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="557.1596" y="-53683.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[List[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-53668.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[MacroOutSideMonocleSpec.this.ExampleObject.type] -->
<g id="node1094" class="node">
<title>scalaz.Equal[MacroOutSideMonocleSpec.this.ExampleObject.type]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-53751.8701" rx="274.2149" ry="26.7407"/>
<text text-anchor="start" x="466.6596" y="-53755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[MacroOutSideMonocleSpec.this.ExampleObject.type]</text>
<text text-anchor="middle" x="652.6596" y="-53740.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Map[K,V]] -->
<g id="node1096" class="node">
<title>org.scalacheck.Arbitrary[Map[K,V]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-28983.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="551.6596" y="-28987.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Map[K,V]]</text>
<text text-anchor="middle" x="652.6596" y="-28972.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Map[K,V]]&#45;&gt;scala.reflect.ClassTag[Map[K,V]] -->
<g id="edge938" class="edge">
<title>org.scalacheck.Arbitrary[Map[K,V]]&#45;&gt;scala.reflect.ClassTag[Map[K,V]]</title>
<path fill="none" stroke="#000000" d="M804.9089,-28979.338C1037.2462,-28972.4219 1477.7252,-28959.31 1709.9586,-28952.397"/>
<polygon fill="#000000" stroke="#000000" points="1710.285,-28955.8889 1720.1764,-28952.0928 1710.0767,-28948.892 1710.285,-28955.8889"/>
</g>
<!-- org.scalacheck.Arbitrary[Map[K,V]]&#45;&gt;org.scalacheck.Arbitrary[(K, V)] -->
<g id="edge95" class="edge">
<title>org.scalacheck.Arbitrary[Map[K,V]]&#45;&gt;org.scalacheck.Arbitrary[(K, V)]</title>
<path fill="none" stroke="#000000" d="M779.1535,-28999.2921C912.0139,-29015.1061 1127.1159,-29039.623 1313.3191,-29055.8701 1450.5072,-29067.8403 1607.3066,-29077.7506 1718.0607,-29084.122"/>
<polygon fill="#000000" stroke="#000000" points="1718.113,-29087.6306 1728.2969,-29084.7083 1718.5134,-29080.6421 1718.113,-29087.6306"/>
</g>
<!-- org.scalacheck.Arbitrary[Map[K,V]]&#45;&gt;Map[K,V] =&gt; Traversable[(K, V)] -->
<g id="edge632" class="edge">
<title>org.scalacheck.Arbitrary[Map[K,V]]&#45;&gt;Map[K,V] =&gt; Traversable[(K, V)]</title>
<path fill="none" stroke="#000000" d="M732.4497,-29006.9509C867.6464,-29040.7333 1142.8584,-29085.7159 1305.3191,-28947.8701 1317.8169,-28937.2659 1300.8767,-28922.5391 1313.3191,-28911.8701 1439.8501,-28803.3722 1649.0129,-28826.1208 1769.2454,-28851.5608"/>
<polygon fill="#000000" stroke="#000000" points="1768.6566,-28855.0143 1779.1708,-28853.7098 1770.138,-28848.1729 1768.6566,-28855.0143"/>
</g>
<!-- org.scalacheck.Arbitrary[Map[K,V]]&#45;&gt;org.scalacheck.util.Buildable[(K, V),Map[K,V]] -->
<g id="edge114" class="edge">
<title>org.scalacheck.Arbitrary[Map[K,V]]&#45;&gt;org.scalacheck.util.Buildable[(K, V),Map[K,V]]</title>
<path fill="none" stroke="#000000" d="M804.9089,-28988.4021C1020.78,-28994.8281 1416.3352,-29006.6027 1657.5921,-29013.7843"/>
<polygon fill="#000000" stroke="#000000" points="1657.7918,-29017.2917 1667.8916,-29014.0909 1658.0002,-29010.2948 1657.7918,-29017.2917"/>
</g>
<!-- Option[String] =&gt; ?{def should: ?} -->
<g id="node1097" class="node">
<title>Option[String] =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-24609.8701" rx="148.4848" ry="26.7407"/>
<text text-anchor="start" x="555.6596" y="-24613.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[String] =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="652.6596" y="-24598.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- Option[String] =&gt; ?{def should: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge607" class="edge">
<title>Option[String] =&gt; ?{def should: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M783.4437,-24597.1103C953.2815,-24583.7749 1236.2262,-24573.6687 1305.3191,-24645.8701 1319.1476,-24660.3207 1299.566,-25351.3476 1313.3191,-25365.8701 1434.9532,-25494.3082 1667.9702,-25455.6806 1787.4126,-25424.5436"/>
<polygon fill="#000000" stroke="#000000" points="1788.4463,-25427.8905 1797.2118,-25421.9393 1786.6482,-25421.1253 1788.4463,-25427.8905"/>
</g>
<!-- Option[String] =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge182" class="edge">
<title>Option[String] =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M757.6636,-24590.82C892.4742,-24571.7078 1129.9004,-24556.4615 1305.3191,-24645.8701 1597.8883,-24794.9886 1790.9833,-25174.3296 1845.9332,-25293.4816"/>
<polygon fill="#000000" stroke="#000000" points="1842.8989,-25295.2626 1850.2391,-25302.9027 1849.2654,-25292.3527 1842.8989,-25295.2626"/>
</g>
<!-- shapeless.ops.hlist.IsHCons[HListSpec.this.H] -->
<g id="node1098" class="node">
<title>shapeless.ops.hlist.IsHCons[HListSpec.this.H]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-53823.8701" rx="191.752" ry="26.7407"/>
<text text-anchor="start" x="525.1596" y="-53827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.IsHCons[HListSpec.this.H]</text>
<text text-anchor="middle" x="652.6596" y="-53812.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Char =&gt; Char] -->
<g id="node1099" class="node">
<title>org.scalacheck.Arbitrary[Char =&gt; Char]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-3325.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="5752.0954" y="-3329.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Char =&gt; Char]</text>
<text text-anchor="middle" x="5862.0954" y="-3314.6701" font-family="Times,serif" font-size="14.00" fill="#000000">24 times = 235ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Char =&gt; Char]&#45;&gt;org.scalacheck.Cogen[Char] -->
<g id="edge1103" class="edge">
<title>org.scalacheck.Arbitrary[Char =&gt; Char]&#45;&gt;org.scalacheck.Cogen[Char]</title>
<path fill="none" stroke="#000000" d="M6018.9998,-3316.6385C6141.0433,-3309.431 6314.621,-3299.1212 6466.6717,-3289.8701 6622.5663,-3280.385 6802.0388,-3269.1901 6919.4037,-3261.832"/>
<polygon fill="#000000" stroke="#000000" points="6919.7441,-3265.3176 6929.5054,-3261.1985 6919.3059,-3258.3313 6919.7441,-3265.3176"/>
</g>
<!-- org.scalacheck.Arbitrary[Char =&gt; Char]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge486" class="edge">
<title>org.scalacheck.Arbitrary[Char =&gt; Char]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M6008.2501,-3312.8137C6167.0451,-3302.2442 6406.2364,-3298.0925 6466.6717,-3361.8701 6480.142,-3376.0853 6461.226,-4757.6316 6474.6717,-4771.8701 6532.58,-4833.1924 6764.8393,-4829.0266 6914.8101,-4819.254"/>
<polygon fill="#000000" stroke="#000000" points="6915.2699,-4822.7312 6925.0143,-4818.5722 6914.8031,-4815.7468 6915.2699,-4822.7312"/>
</g>
<!-- scala.reflect.ClassTag[Char =&gt; Char] -->
<g id="node1447" class="node">
<title>scala.reflect.ClassTag[Char =&gt; Char]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-3325.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="6943.514" y="-3329.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Char =&gt; Char]</text>
<text text-anchor="middle" x="7046.014" y="-3314.6701" font-family="Times,serif" font-size="14.00" fill="#000000">24 times = 19ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Char =&gt; Char]&#45;&gt;scala.reflect.ClassTag[Char =&gt; Char] -->
<g id="edge1017" class="edge">
<title>org.scalacheck.Arbitrary[Char =&gt; Char]&#45;&gt;scala.reflect.ClassTag[Char =&gt; Char]</title>
<path fill="none" stroke="#000000" d="M6029.211,-3325.8701C6254.7302,-3325.8701 6654.1235,-3325.8701 6879.3898,-3325.8701"/>
<polygon fill="#000000" stroke="#000000" points="6879.6518,-3329.3702 6889.6518,-3325.8701 6879.6517,-3322.3702 6879.6518,-3329.3702"/>
</g>
<!-- Option[A] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node1100" class="node">
<title>Option[A] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-53895.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="502.1596" y="-53899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[A] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="652.6596" y="-53884.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- scala.reflect.ClassTag[((String, Boolean)) =&gt; (String, Boolean)] -->
<g id="node1101" class="node">
<title>scala.reflect.ClassTag[((String, Boolean)) =&gt; (String, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-6069.8701" rx="259.5164" ry="26.7407"/>
<text text-anchor="start" x="5686.5954" y="-6073.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((String, Boolean)) =&gt; (String, Boolean)]</text>
<text text-anchor="middle" x="5862.0954" y="-6058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- h.type =&gt; ?{def reverse: ?} -->
<g id="node1102" class="node">
<title>h.type =&gt; ?{def reverse: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-53967.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-53971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">h.type =&gt; ?{def reverse: ?}</text>
<text text-anchor="middle" x="652.6596" y="-53956.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.Unary]&#45;&gt;scala.reflect.ClassTag[monocle.Unary] -->
<g id="edge1344" class="edge">
<title>org.scalacheck.Arbitrary[monocle.Unary]&#45;&gt;scala.reflect.ClassTag[monocle.Unary]</title>
<path fill="none" stroke="#000000" d="M7219.529,-18977.8701C7436.7666,-18977.8701 7806.6616,-18977.8701 8023.6707,-18977.8701"/>
<polygon fill="#000000" stroke="#000000" points="8023.8877,-18981.3702 8033.8877,-18977.8701 8023.8877,-18974.3702 8023.8877,-18981.3702"/>
</g>
<!-- (String, Int) &lt;~&lt; (String, Int) -->
<g id="node1104" class="node">
<title>(String, Int) &lt;~&lt; (String, Int)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-54039.8701" rx="125.316" ry="26.7407"/>
<text text-anchor="start" x="572.1596" y="-54043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(String, Int) &lt;~&lt; (String, Int)</text>
<text text-anchor="middle" x="652.6596" y="-54028.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(List[Int], Boolean)] -->
<g id="node1105" class="node">
<title>org.scalacheck.Arbitrary[(List[Int], Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-6937.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="4461.253" y="-6941.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(List[Int], Boolean)]</text>
<text text-anchor="middle" x="4586.253" y="-6926.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(List[Int], Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge339" class="edge">
<title>org.scalacheck.Arbitrary[(List[Int], Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M4760.0564,-6927.4899C4895.5491,-6919.6541 5088.4471,-6909.0595 5257.5191,-6901.8701 5324.6667,-6899.0147 6419.0233,-6911.2683 6466.6717,-6863.8701 6483.856,-6846.776 6457.7589,-6663.2327 6474.6717,-6645.8701 6532.0407,-6586.9752 6753.8958,-6589.1693 6903.6658,-6598.0902"/>
<polygon fill="#000000" stroke="#000000" points="6903.6774,-6601.5973 6913.8726,-6598.7151 6904.1052,-6594.6104 6903.6774,-6601.5973"/>
</g>
<!-- scala.reflect.ClassTag[(List[Int], Boolean)] -->
<g id="node1219" class="node">
<title>scala.reflect.ClassTag[(List[Int], Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-6937.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="5744.5954" y="-6941.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(List[Int], Boolean)]</text>
<text text-anchor="middle" x="5862.0954" y="-6926.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(List[Int], Boolean)]&#45;&gt;scala.reflect.ClassTag[(List[Int], Boolean)] -->
<g id="edge846" class="edge">
<title>org.scalacheck.Arbitrary[(List[Int], Boolean)]&#45;&gt;scala.reflect.ClassTag[(List[Int], Boolean)]</title>
<path fill="none" stroke="#000000" d="M4774.5079,-6937.8701C5016.0696,-6937.8701 5432.6588,-6937.8701 5674.0967,-6937.8701"/>
<polygon fill="#000000" stroke="#000000" points="5674.391,-6941.3702 5684.391,-6937.8701 5674.3909,-6934.3702 5674.391,-6941.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(List[Int], Boolean)]&#45;&gt;org.scalacheck.Arbitrary[List[Int]] -->
<g id="edge825" class="edge">
<title>org.scalacheck.Arbitrary[(List[Int], Boolean)]&#45;&gt;org.scalacheck.Arbitrary[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4680.0287,-6914.5651C4826.3506,-6884.477 5106.9454,-6853.1721 5249.5191,-7011.8701 5267.3222,-7031.6865 5239.2104,-8910.5197 5257.5191,-8929.8701 5318.6421,-8994.4705 5562.9669,-8989.4159 5721.691,-8978.5533"/>
<polygon fill="#000000" stroke="#000000" points="5722.2882,-8982.0201 5732.0192,-8977.8301 5721.7992,-8975.0372 5722.2882,-8982.0201"/>
</g>
<!-- org.scalactic.Equality[Unit] -->
<g id="node1107" class="node">
<title>org.scalactic.Equality[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-17093.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="5786.5954" y="-17097.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Unit]</text>
<text text-anchor="middle" x="5862.0954" y="-17082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- org.scalactic.Equality[Unit]&#45;&gt;scalaz.Equal[Unit] -->
<g id="edge125" class="edge">
<title>org.scalactic.Equality[Unit]&#45;&gt;scalaz.Equal[Unit]</title>
<path fill="none" stroke="#000000" d="M5976.5968,-17100.5998C6098.1868,-17107.7669 6295.9919,-17119.4855 6466.6717,-17129.8701 6638.7645,-17140.3406 6839.5895,-17152.8949 6953.8805,-17160.0713"/>
<polygon fill="#000000" stroke="#000000" points="6953.7894,-17163.5724 6963.9891,-17160.7061 6954.2282,-17156.5861 6953.7894,-17163.5724"/>
</g>
<!-- org.scalacheck.Cogen[Int \/ Boolean]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge696" class="edge">
<title>org.scalacheck.Cogen[Int \/ Boolean]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M5997.9574,-9673.5819C6156.433,-9662.6005 6404.6977,-9656.9258 6466.6717,-9721.8701 6478.7733,-9734.5517 6464.4718,-10338.614 6474.6717,-10352.8701 6576.9312,-10495.794 6788.7984,-10538.6383 6923.8256,-10551.1512"/>
<polygon fill="#000000" stroke="#000000" points="6923.5459,-10554.6401 6933.8154,-10552.0347 6924.1627,-10547.6673 6923.5459,-10554.6401"/>
</g>
<!-- org.scalacheck.Cogen[Int \/ Boolean]&#45;&gt;org.scalacheck.Cogen[Boolean] -->
<g id="edge738" class="edge">
<title>org.scalacheck.Cogen[Int \/ Boolean]&#45;&gt;org.scalacheck.Cogen[Boolean]</title>
<path fill="none" stroke="#000000" d="M5998.0571,-9698.2529C6156.6327,-9709.3292 6404.9975,-9715.0991 6466.6717,-9649.8701 6477.6833,-9638.2237 6469.0481,-7356.879 6474.6717,-7341.8701 6584.2603,-7049.3875 6887.6896,-6800.082 7001.8324,-6713.9933"/>
<polygon fill="#000000" stroke="#000000" points="7004.1392,-6716.6382 7010.04,-6707.8387 6999.9397,-6711.0378 7004.1392,-6716.6382"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long)) =&gt; (Int, Char, Boolean, String, Long)] -->
<g id="node1110" class="node">
<title>org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long)) =&gt; (Int, Char, Boolean, String, Long)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-5781.8701" rx="400.445" ry="26.7407"/>
<text text-anchor="start" x="4311.253" y="-5785.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long)) =&gt; (Int, Char, Boolean, String, Long)]</text>
<text text-anchor="middle" x="4586.253" y="-5770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 32ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long)) =&gt; (Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)] -->
<g id="edge1233" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long)) =&gt; (Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Cogen[(Int, Char, Boolean, String, Long)]</title>
<path fill="none" stroke="#000000" d="M4664.1807,-5755.4294C4788.154,-5714.6337 5038.6707,-5637.3519 5257.5191,-5601.8701 5375.2792,-5582.7776 5507.41,-5573.5374 5618.0428,-5569.1666"/>
<polygon fill="#000000" stroke="#000000" points="5618.4818,-5572.6524 5628.3402,-5568.7713 5618.2133,-5565.6575 5618.4818,-5572.6524"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long)) =&gt; (Int, Char, Boolean, String, Long)]&#45;&gt;scala.reflect.ClassTag[((Int, Char, Boolean, String, Long)) =&gt; (Int, Char, Boolean, String, Long)] -->
<g id="edge595" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long)) =&gt; (Int, Char, Boolean, String, Long)]&#45;&gt;scala.reflect.ClassTag[((Int, Char, Boolean, String, Long)) =&gt; (Int, Char, Boolean, String, Long)]</title>
<path fill="none" stroke="#000000" d="M4892.6605,-5799.1616C5091.6823,-5810.3931 5350.3202,-5824.9889 5550.3883,-5836.2794"/>
<polygon fill="#000000" stroke="#000000" points="5550.2888,-5839.7793 5560.4702,-5836.8483 5550.6833,-5832.7904 5550.2888,-5839.7793"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long)) =&gt; (Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)] -->
<g id="edge395" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Char, Boolean, String, Long)) =&gt; (Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]</title>
<path fill="none" stroke="#000000" d="M4986.8741,-5781.8701C5189.3647,-5781.8701 5429.0571,-5781.8701 5606.3601,-5781.8701"/>
<polygon fill="#000000" stroke="#000000" points="5606.6147,-5785.3702 5616.6146,-5781.8701 5606.6146,-5778.3702 5606.6147,-5785.3702"/>
</g>
<!-- monocle.function.FilterIndex[monocle.function.MMap[Int,String],Int,String] -->
<g id="node1111" class="node">
<title>monocle.function.FilterIndex[monocle.function.MMap[Int,String],Int,String]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-54111.8701" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="440.6596" y="-54115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[monocle.function.MMap[Int,String],Int,String]</text>
<text text-anchor="middle" x="652.6596" y="-54100.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[Option[Unit]]&#45;&gt;scalaz.Equal[Unit] -->
<g id="edge377" class="edge">
<title>scalaz.Equal[Option[Unit]]&#45;&gt;scalaz.Equal[Unit]</title>
<path fill="none" stroke="#000000" d="M5969.9123,-16723.8344C6125.0878,-16712.0219 6400.0985,-16701.7849 6466.6717,-16769.8701 6483.4622,-16787.0419 6460.1123,-16966.7699 6474.6717,-16985.8701 6587.5005,-17133.8874 6821.7948,-17162.9214 6952.5884,-17166.9917"/>
<polygon fill="#000000" stroke="#000000" points="6952.5055,-17170.4906 6962.596,-17167.2606 6952.6937,-17163.4931 6952.5055,-17170.4906"/>
</g>
<!-- org.scalactic.Equality[Int :: HListSpec.this.HTail] -->
<g id="node1113" class="node">
<title>org.scalactic.Equality[Int :: HListSpec.this.HTail]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-54183.8701" rx="204.2078" ry="26.7407"/>
<text text-anchor="start" x="516.1596" y="-54187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Int :: HListSpec.this.HTail]</text>
<text text-anchor="middle" x="652.6596" y="-54172.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[Int :: HListSpec.this.HTail] -->
<g id="node1305" class="node">
<title>scalaz.Equal[Int :: HListSpec.this.HTail]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-54183.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="1750.534" y="-54187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int :: HListSpec.this.HTail]</text>
<text text-anchor="middle" x="1862.034" y="-54172.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[Int :: HListSpec.this.HTail]&#45;&gt;scalaz.Equal[Int :: HListSpec.this.HTail] -->
<g id="edge1247" class="edge">
<title>org.scalactic.Equality[Int :: HListSpec.this.HTail]&#45;&gt;scalaz.Equal[Int :: HListSpec.this.HTail]</title>
<path fill="none" stroke="#000000" d="M857.1293,-54183.8701C1088.6362,-54183.8701 1462.1961,-54183.8701 1682.748,-54183.8701"/>
<polygon fill="#000000" stroke="#000000" points="1682.8077,-54187.3702 1692.8077,-54183.8701 1682.8076,-54180.3702 1682.8077,-54187.3702"/>
</g>
<!-- scalaz.Compose[monocle.Getter] -->
<g id="node1115" class="node">
<title>scalaz.Compose[monocle.Getter]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-54255.8701" rx="140.9288" ry="26.7407"/>
<text text-anchor="start" x="561.1596" y="-54259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Compose[monocle.Getter]</text>
<text text-anchor="middle" x="652.6596" y="-54244.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalactic.Equality[(Int, Int)] -->
<g id="node1116" class="node">
<title>org.scalactic.Equality[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-23097.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="4499.253" y="-23101.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(Int, Int)]</text>
<text text-anchor="middle" x="4586.253" y="-23086.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[(Int, Int)] -->
<g id="node1216" class="node">
<title>scalaz.Equal[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-23097.8701" rx="98.9899" ry="26.7407"/>
<text text-anchor="start" x="5800.0954" y="-23101.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-23086.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- org.scalactic.Equality[(Int, Int)]&#45;&gt;scalaz.Equal[(Int, Int)] -->
<g id="edge586" class="edge">
<title>org.scalactic.Equality[(Int, Int)]&#45;&gt;scalaz.Equal[(Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4720.6795,-23097.8701C4974.414,-23097.8701 5519.3338,-23097.8701 5752.5451,-23097.8701"/>
<polygon fill="#000000" stroke="#000000" points="5752.7374,-23101.3702 5762.7373,-23097.8701 5752.7373,-23094.3702 5752.7374,-23101.3702"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P) -->
<g id="node1119" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-54327.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="466.1596" y="-54331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-54316.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Char,List[Char]] -->
<g id="node1120" class="node">
<title>org.scalacheck.util.Buildable[Char,List[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-1017.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="6919.014" y="-1021.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Char,List[Char]]</text>
<text text-anchor="middle" x="7046.014" y="-1006.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 4ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Char,List[Char]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Char,List[Char]] -->
<g id="edge129" class="edge">
<title>org.scalacheck.util.Buildable[Char,List[Char]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Char,List[Char]]</title>
<path fill="none" stroke="#000000" d="M7236.9946,-1017.8701C7431.9541,-1017.8701 7735.4303,-1017.8701 7948.8149,-1017.8701"/>
<polygon fill="#000000" stroke="#000000" points="7948.9072,-1021.3702 7958.9071,-1017.8701 7948.9071,-1014.3702 7948.9072,-1021.3702"/>
</g>
<!-- monocle.function.Each[List[Int] :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[List[Int] :: shapeless.HNil,SGen] -->
<g id="edge443" class="edge">
<title>monocle.function.Each[List[Int] :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[List[Int] :: shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M8393.5274,-26602.1859C8599.5698,-26615.0783 8922.0431,-26635.2559 9134.0547,-26648.5218"/>
<polygon fill="#000000" stroke="#000000" points="9133.867,-26652.0168 9144.0661,-26649.1482 9134.3042,-26645.0305 9133.867,-26652.0168"/>
</g>
<!-- monocle.function.Each[shapeless.HNil,Any] -->
<g id="node1356" class="node">
<title>monocle.function.Each[shapeless.HNil,Any]</title>
<ellipse fill="none" stroke="#000000" cx="9347.3831" cy="-26589.8701" rx="184.6098" ry="26.7407"/>
<text text-anchor="start" x="9224.8831" y="-26593.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[shapeless.HNil,Any]</text>
<text text-anchor="middle" x="9347.3831" y="-26578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Each[List[Int] :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[shapeless.HNil,Any] -->
<g id="edge1308" class="edge">
<title>monocle.function.Each[List[Int] :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[shapeless.HNil,Any]</title>
<path fill="none" stroke="#000000" d="M8418.2215,-26589.8701C8630.9216,-26589.8701 8949.0848,-26589.8701 9152.414,-26589.8701"/>
<polygon fill="#000000" stroke="#000000" points="9152.6125,-26593.3702 9162.6125,-26589.8701 9152.6125,-26586.3702 9152.6125,-26593.3702"/>
</g>
<!-- shapeless.ops.hlist.IsHCons.Aux[scalaz.OneAnd[List,Int],Int,List[Int]] -->
<g id="node1122" class="node">
<title>shapeless.ops.hlist.IsHCons.Aux[scalaz.OneAnd[List,Int],Int,List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-54399.8701" rx="284.9281" ry="26.7407"/>
<text text-anchor="start" x="1668.534" y="-54403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.IsHCons.Aux[scalaz.OneAnd[List,Int],Int,List[Int]]</text>
<text text-anchor="middle" x="1862.034" y="-54388.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[(Int, GetterSpec.this.Bar)] -->
<g id="node1124" class="node">
<title>org.scalactic.Equality[(Int, GetterSpec.this.Bar)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-23241.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="4453.753" y="-23245.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(Int, GetterSpec.this.Bar)]</text>
<text text-anchor="middle" x="4586.253" y="-23230.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 22ms</text>
</g>
<!-- org.scalactic.Equality[(Int, GetterSpec.this.Bar)]&#45;&gt;scalaz.Equal[(Int, GetterSpec.this.Bar)] -->
<g id="edge1257" class="edge">
<title>org.scalactic.Equality[(Int, GetterSpec.this.Bar)]&#45;&gt;scalaz.Equal[(Int, GetterSpec.this.Bar)]</title>
<path fill="none" stroke="#000000" d="M4785.253,-23241.8701C5033.0387,-23241.8701 5452.32,-23241.8701 5687.9402,-23241.8701"/>
<polygon fill="#000000" stroke="#000000" points="5687.9786,-23245.3702 5697.9785,-23241.8701 5687.9785,-23238.3702 5687.9786,-23245.3702"/>
</g>
<!-- Long =&gt; Int -->
<g id="node1126" class="node">
<title>Long =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-54471.8701" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="609.1596" y="-54475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Long =&gt; Int</text>
<text text-anchor="middle" x="652.6596" y="-54460.6701" font-family="Times,serif" font-size="14.00" fill="#000000">19 times = 3ms</text>
</g>
<!-- monocle.function.Field2[(Int, Char),Char] -->
<g id="node1127" class="node">
<title>monocle.function.Field2[(Int, Char),Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-47559.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="536.6596" y="-47563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field2[(Int, Char),Char]</text>
<text text-anchor="middle" x="652.6596" y="-47548.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Field2[(Int, Char),Char]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char),shapeless.nat._1.N,Char] -->
<g id="edge51" class="edge">
<title>monocle.function.Field2[(Int, Char),Char]&#45;&gt;shapeless.ops.hlist.At.Aux[(Int, Char),shapeless.nat._1.N,Char]</title>
<path fill="none" stroke="#000000" d="M828.1898,-47559.8701C1029.1925,-47559.8701 1360.7454,-47559.8701 1594.0852,-47559.8701"/>
<polygon fill="#000000" stroke="#000000" points="1594.426,-47563.3702 1604.426,-47559.8701 1594.426,-47556.3702 1594.426,-47563.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, String)]&#45;&gt;scala.reflect.ClassTag[(Int, String)] -->
<g id="edge808" class="edge">
<title>org.scalacheck.Arbitrary[(Int, String)]&#45;&gt;scala.reflect.ClassTag[(Int, String)]</title>
<path fill="none" stroke="#000000" d="M6020.5355,-12195.8701C6247.0378,-12195.8701 6660.9893,-12195.8701 6887.5209,-12195.8701"/>
<polygon fill="#000000" stroke="#000000" points="6887.8317,-12199.3702 6897.8316,-12195.8701 6887.8316,-12192.3702 6887.8317,-12199.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, String)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge710" class="edge">
<title>org.scalacheck.Arbitrary[(Int, String)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6001.9214,-12208.5346C6160.6522,-12219.4474 6405.5408,-12224.6179 6466.6717,-12159.8701 6485.503,-12139.9246 6457.0408,-8230.8841 6474.6717,-8209.8701 6583.7879,-8079.8162 6796.7562,-8076.7694 6929.6123,-8089.8848"/>
<polygon fill="#000000" stroke="#000000" points="6929.5226,-8093.3941 6939.8294,-8090.9408 6930.2423,-8086.4312 6929.5226,-8093.3941"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, String)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge416" class="edge">
<title>org.scalacheck.Arbitrary[(Int, String)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6005.4368,-12184.3175C6164.2318,-12175.0435 6405.9556,-12172.5707 6466.6717,-12236.8701 6481.3381,-12252.402 6463.7376,-12987.5182 6474.6717,-13005.8701 6578.3297,-13179.851 6815.2824,-13265.3408 6949.1981,-13301.1489"/>
<polygon fill="#000000" stroke="#000000" points="6948.4929,-13304.5824 6959.0545,-13303.7445 6950.2755,-13297.8132 6948.4929,-13304.5824"/>
</g>
<!-- scala.reflect.ClassTag[(Int, Option[scalaz.Cofree[Option,Int]])] -->
<g id="node1131" class="node">
<title>scala.reflect.ClassTag[(Int, Option[scalaz.Cofree[Option,Int]])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-11484.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="4413.253" y="-11488.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Option[scalaz.Cofree[Option,Int]])]</text>
<text text-anchor="middle" x="4586.253" y="-11473.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, List[Int])]&#45;&gt;scala.reflect.ClassTag[(Int, List[Int])] -->
<g id="edge75" class="edge">
<title>org.scalacheck.Arbitrary[(Int, List[Int])]&#45;&gt;scala.reflect.ClassTag[(Int, List[Int])]</title>
<path fill="none" stroke="#000000" d="M4743.6556,-9173.8639C4988.4886,-9159.8553 5457.8689,-9132.9987 5703.4558,-9118.947"/>
<polygon fill="#000000" stroke="#000000" points="5703.7544,-9122.4357 5713.5381,-9118.3701 5703.3545,-9115.4471 5703.7544,-9122.4357"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, List[Int])]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge578" class="edge">
<title>org.scalacheck.Arbitrary[(Int, List[Int])]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4702.407,-9202.165C4858.2391,-9234.9655 5129.2793,-9317.8872 5249.5191,-9510.8701 5259.7723,-9527.3262 5244.0062,-12288.9657 5257.5191,-12302.8701 5351.1995,-12399.2641 6372.5506,-12244.9063 6466.6717,-12340.8701 6479.6073,-12354.0588 6465.2033,-12990.0075 6474.6717,-13005.8701 6578.4712,-13179.7666 6815.368,-13265.2897 6949.2369,-13301.1257"/>
<polygon fill="#000000" stroke="#000000" points="6948.528,-13304.5583 6959.0899,-13303.7234 6950.3126,-13297.7896 6948.528,-13304.5583"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, List[Int])]&#45;&gt;org.scalacheck.Arbitrary[List[Int]] -->
<g id="edge886" class="edge">
<title>org.scalacheck.Arbitrary[(Int, List[Int])]&#45;&gt;org.scalacheck.Arbitrary[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4657.7095,-9158.4173C4779.2509,-9118.0048 5034.7418,-9038.1477 5257.5191,-9001.8701 5408.9326,-8977.2135 5584.129,-8968.9683 5706.8201,-8966.4368"/>
<polygon fill="#000000" stroke="#000000" points="5707.1119,-8969.9319 5717.0414,-8966.2367 5706.9747,-8962.9332 5707.1119,-8969.9319"/>
</g>
<!-- scala.reflect.ClassTag[Int =&gt; Int] -->
<g id="node1133" class="node">
<title>scala.reflect.ClassTag[Int =&gt; Int]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-13693.8701" rx="140.9288" ry="26.7407"/>
<text text-anchor="start" x="6954.514" y="-13697.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Int =&gt; Int]</text>
<text text-anchor="middle" x="7046.014" y="-13682.6701" font-family="Times,serif" font-size="14.00" fill="#000000">90 times = 89ms</text>
</g>
<!-- scalaz.Equal[monocle.Iso[monocle.Binary,(String, Int)]]&#45;&gt;scalaz.Equal[((String, Int)) =&gt; monocle.Binary] -->
<g id="edge874" class="edge">
<title>scalaz.Equal[monocle.Iso[monocle.Binary,(String, Int)]]&#45;&gt;scalaz.Equal[((String, Int)) =&gt; monocle.Binary]</title>
<path fill="none" stroke="#000000" d="M3348.3032,-16805.4602C3542.9278,-16818.9906 3834.9038,-16825.5856 3914.9868,-16752.8701 3933.2745,-16736.2648 3904.7502,-16714.5314 3922.9868,-16697.8701 3991.4361,-16635.3334 4235.5732,-16637.154 4407.6895,-16647.1569"/>
<polygon fill="#000000" stroke="#000000" points="4407.6973,-16650.6635 4417.8877,-16647.764 4408.1134,-16643.6758 4407.6973,-16650.6635"/>
</g>
<!-- scalaz.Equal[monocle.Binary =&gt; (String, Int)] -->
<g id="node1301" class="node">
<title>scalaz.Equal[monocle.Binary =&gt; (String, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-16949.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="4459.253" y="-16953.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Binary =&gt; (String, Int)]</text>
<text text-anchor="middle" x="4586.253" y="-16938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- scalaz.Equal[monocle.Iso[monocle.Binary,(String, Int)]]&#45;&gt;scalaz.Equal[monocle.Binary =&gt; (String, Int)] -->
<g id="edge1230" class="edge">
<title>scalaz.Equal[monocle.Iso[monocle.Binary,(String, Int)]]&#45;&gt;scalaz.Equal[monocle.Binary =&gt; (String, Int)]</title>
<path fill="none" stroke="#000000" d="M3345.0984,-16771.7734C3540.377,-16757.3343 3836.398,-16749.4816 3914.9868,-16824.8701 3929.3169,-16838.6166 3908.6989,-16900.0796 3922.9868,-16913.8701 3990.6971,-16979.2233 4241.6509,-16975.8796 4414.683,-16964.8689"/>
<polygon fill="#000000" stroke="#000000" points="4414.9183,-16968.3611 4424.67,-16964.2195 4414.4639,-16961.3759 4414.9183,-16968.3611"/>
</g>
<!-- monocle.function.Cons1[scalaz.OneAnd[List,Int],Int,List[Int]] -->
<g id="node1135" class="node">
<title>monocle.function.Cons1[scalaz.OneAnd[List,Int],Int,List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-54399.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="481.1596" y="-54403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons1[scalaz.OneAnd[List,Int],Int,List[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-54388.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Cons1[scalaz.OneAnd[List,Int],Int,List[Int]]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[scalaz.OneAnd[List,Int],Int,List[Int]] -->
<g id="edge1215" class="edge">
<title>monocle.function.Cons1[scalaz.OneAnd[List,Int],Int,List[Int]]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[scalaz.OneAnd[List,Int],Int,List[Int]]</title>
<path fill="none" stroke="#000000" d="M906.5525,-54399.8701C1099.254,-54399.8701 1364.6119,-54399.8701 1566.7908,-54399.8701"/>
<polygon fill="#000000" stroke="#000000" points="1566.9756,-54403.3702 1576.9756,-54399.8701 1566.9755,-54396.3702 1566.9756,-54403.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[TraversalSpec.this.Location] -->
<g id="node1136" class="node">
<title>org.scalacheck.Arbitrary[TraversalSpec.this.Location]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-54543.8701" rx="220.7347" ry="26.7407"/>
<text text-anchor="start" x="504.6596" y="-54547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[TraversalSpec.this.Location]</text>
<text text-anchor="middle" x="652.6596" y="-54532.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scalaz.Equal[TraversalSpec.this.ManyPropObject] -->
<g id="node1137" class="node">
<title>scalaz.Equal[TraversalSpec.this.ManyPropObject]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-54615.8701" rx="206.4504" ry="26.7407"/>
<text text-anchor="start" x="514.6596" y="-54619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[TraversalSpec.this.ManyPropObject]</text>
<text text-anchor="middle" x="652.6596" y="-54604.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Vector[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge439" class="edge">
<title>org.scalacheck.Arbitrary[Vector[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6018.5689,-13113.3276C6141.3148,-13115.268 6316.0149,-13123.259 6466.6717,-13149.8701 6654.3082,-13183.013 6867.131,-13256.1353 6975.083,-13295.8772"/>
<polygon fill="#000000" stroke="#000000" points="6973.9739,-13299.1987 6984.5672,-13299.3823 6976.4006,-13292.6327 6973.9739,-13299.1987"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P) -->
<g id="node1140" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-54687.8701" rx="282.2713" ry="26.7407"/>
<text text-anchor="start" x="461.1596" y="-54691.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-54676.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Functor[F$macro$1] -->
<g id="node1142" class="node">
<title>scalaz.Functor[F$macro$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-54759.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-54763.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$1]</text>
<text text-anchor="middle" x="652.6596" y="-54748.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Long,(Long, Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="node1324" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Long,(Long, Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-34653.8701" rx="647.0054" ry="26.7407"/>
<text text-anchor="start" x="4136.753" y="-34657.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Long,(Long, Char :: Float :: Long :: Double :: shapeless.HNil)]</text>
<text text-anchor="middle" x="4586.253" y="-34642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3,Long,(Long, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Long,(Long, Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="edge893" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3,Long,(Long, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Long,(Long, Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M3898.9083,-34653.8701C3908.9542,-34653.8701 3918.9942,-34653.8701 3929.0202,-34653.8701"/>
<polygon fill="#000000" stroke="#000000" points="3929.0412,-34657.3702 3939.0411,-34653.8701 3929.0411,-34650.3702 3929.0412,-34657.3702"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless._0,Float,(Float, Float :: Long :: Double :: shapeless.HNil)] -->
<g id="node1144" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless._0,Float,(Float, Float :: Long :: Double :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-32187.8701" rx="573.4272" ry="26.7407"/>
<text text-anchor="start" x="5464.5954" y="-32191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless._0,Float,(Float, Float :: Long :: Double :: shapeless.HNil)]</text>
<text text-anchor="middle" x="5862.0954" y="-32176.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Unit, Int)]&#45;&gt;scala.reflect.ClassTag[(Unit, Int)] -->
<g id="edge1096" class="edge">
<title>org.scalacheck.Arbitrary[(Unit, Int)]&#45;&gt;scala.reflect.ClassTag[(Unit, Int)]</title>
<path fill="none" stroke="#000000" d="M6014.1464,-16048.8975C6241.3119,-16050.4325 6666.8315,-16053.3078 6893.9845,-16054.8428"/>
<polygon fill="#000000" stroke="#000000" points="6894.2926,-16058.3448 6904.3161,-16054.9126 6894.34,-16051.345 6894.2926,-16058.3448"/>
</g>
<!-- org.scalacheck.Arbitrary[(Unit, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1205" class="edge">
<title>org.scalacheck.Arbitrary[(Unit, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M5954.077,-16069.2806C6089.2867,-16094.6509 6339.3978,-16117.1726 6466.6717,-15973.8701 6477.352,-15961.8447 6466.6527,-13671.8118 6474.6717,-13657.8701 6578.4223,-13477.4902 6821.0057,-13384.7272 6954.2871,-13345.847"/>
<polygon fill="#000000" stroke="#000000" points="6955.4413,-13349.157 6964.0839,-13343.0288 6953.5061,-13342.4298 6955.4413,-13349.157"/>
</g>
<!-- org.scalacheck.Arbitrary[(Unit, Int)]&#45;&gt;org.scalacheck.Arbitrary[Unit] -->
<g id="edge992" class="edge">
<title>org.scalacheck.Arbitrary[(Unit, Int)]&#45;&gt;org.scalacheck.Arbitrary[Unit]</title>
<path fill="none" stroke="#000000" d="M6007.5636,-16040.0064C6238.3044,-16027.533 6685.0379,-16003.3836 6909.8292,-15991.2319"/>
<polygon fill="#000000" stroke="#000000" points="6910.2386,-15994.715 6920.0351,-15990.6802 6909.8607,-15987.7252 6910.2386,-15994.715"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,Int]]&#45;&gt;scala.reflect.ClassTag[Either[String,Int]] -->
<g id="edge1049" class="edge">
<title>org.scalacheck.Arbitrary[Either[String,Int]]&#45;&gt;scala.reflect.ClassTag[Either[String,Int]]</title>
<path fill="none" stroke="#000000" d="M4755.6288,-8524.8862C4889.6567,-8517.7267 5081.5643,-8507.3632 5249.5191,-8497.8701 5399.6587,-8489.3838 5570.4709,-8479.3109 5693.5104,-8471.9811"/>
<polygon fill="#000000" stroke="#000000" points="5693.9984,-8475.4583 5703.7725,-8471.3695 5693.5819,-8468.4707 5693.9984,-8475.4583"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[(String, Int)] -->
<g id="edge1272" class="edge">
<title>org.scalacheck.Arbitrary[Either[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M4700.7655,-8513.1582C4852.4519,-8493.1203 5116.3112,-8485.4171 5249.5191,-8641.8701 5263.8218,-8658.6685 5242.3792,-14979.8221 5257.5191,-14995.8701 5317.3124,-15059.2497 5553.0838,-15055.6534 5711.9131,-15045.2379"/>
<polygon fill="#000000" stroke="#000000" points="5712.5181,-15048.7052 5722.2609,-15044.5426 5712.0488,-15041.721 5712.5181,-15048.7052"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge1034" class="edge">
<title>org.scalacheck.Arbitrary[Either[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M4661.8509,-8558.3297C4800.6535,-8597.9571 5095.9503,-8656.771 5249.5191,-8497.8701 5264.8881,-8481.9674 5241.7247,-8115.3502 5257.5191,-8099.8701 5315.8654,-8042.6848 6487.3672,-8084.9456 6902.0638,-8101.7792"/>
<polygon fill="#000000" stroke="#000000" points="6902.1829,-8105.2869 6912.317,-8102.1965 6902.4677,-8098.2927 6902.1829,-8105.2869"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,Int]]&#45;&gt;org.scalacheck.util.Buildable[(String, Int),Either[String,Int]] -->
<g id="edge475" class="edge">
<title>org.scalacheck.Arbitrary[Either[String,Int]]&#45;&gt;org.scalacheck.util.Buildable[(String, Int),Either[String,Int]]</title>
<path fill="none" stroke="#000000" d="M4766.0068,-8533.8701C4985.4294,-8533.8701 5357.9526,-8533.8701 5606.9757,-8533.8701"/>
<polygon fill="#000000" stroke="#000000" points="5607.2592,-8537.3702 5617.2592,-8533.8701 5607.2591,-8530.3702 5607.2592,-8537.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1137" class="edge">
<title>org.scalacheck.Arbitrary[Either[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4701.0669,-8513.1341C4852.78,-8493.149 5116.3315,-8485.5913 5249.5191,-8641.8701 5265.8387,-8661.0191 5239.9902,-12246.8215 5257.5191,-12264.8701 5351.1678,-12361.2949 6372.5818,-12206.8757 6466.6717,-12302.8701 6480.3418,-12316.8168 6464.6678,-12989.0979 6474.6717,-13005.8701 6578.4146,-13179.8004 6815.3338,-13265.3101 6949.2214,-13301.135"/>
<polygon fill="#000000" stroke="#000000" points="6948.514,-13304.568 6959.0757,-13303.7318 6950.2977,-13297.7991 6948.514,-13304.568"/>
</g>
<!-- scalaz.Equal[MacroOutSideMonocleSpec.this.Bar1] -->
<g id="node1147" class="node">
<title>scalaz.Equal[MacroOutSideMonocleSpec.this.Bar1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-54831.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="509.6596" y="-54835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[MacroOutSideMonocleSpec.this.Bar1]</text>
<text text-anchor="middle" x="652.6596" y="-54820.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.Nullary] -->
<g id="node1150" class="node">
<title>org.scalacheck.Arbitrary[monocle.Nullary]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-16661.8701" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="6928.014" y="-16665.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.Nullary]</text>
<text text-anchor="middle" x="7046.014" y="-16650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scala.reflect.ClassTag[monocle.Nullary] -->
<g id="node1151" class="node">
<title>scala.reflect.ClassTag[monocle.Nullary]</title>
<ellipse fill="none" stroke="#000000" cx="8196.6985" cy="-16661.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="8086.1985" y="-16665.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[monocle.Nullary]</text>
<text text-anchor="middle" x="8196.6985" y="-16650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.Nullary]&#45;&gt;scala.reflect.ClassTag[monocle.Nullary] -->
<g id="edge1200" class="edge">
<title>org.scalacheck.Arbitrary[monocle.Nullary]&#45;&gt;scala.reflect.ClassTag[monocle.Nullary]</title>
<path fill="none" stroke="#000000" d="M7224.2308,-16661.8701C7440.4058,-16661.8701 7802.6358,-16661.8701 8018.7086,-16661.8701"/>
<polygon fill="#000000" stroke="#000000" points="8018.8862,-16665.3702 8028.8861,-16661.8701 8018.8861,-16658.3702 8018.8862,-16665.3702"/>
</g>
<!-- scalaz.Equal[(HListSpec.this.HInit, Double)] -->
<g id="node1152" class="node">
<title>scalaz.Equal[(HListSpec.this.HInit, Double)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-16949.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="5738.5954" y="-16953.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(HListSpec.this.HInit, Double)]</text>
<text text-anchor="middle" x="5862.0954" y="-16938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[(HListSpec.this.HInit, Double)]&#45;&gt;scalaz.Equal[Double] -->
<g id="edge736" class="edge">
<title>scalaz.Equal[(HListSpec.this.HInit, Double)]&#45;&gt;scalaz.Equal[Double]</title>
<path fill="none" stroke="#000000" d="M6021.5771,-16935.986C6180.0819,-16926.1281 6407.8199,-16923.942 6466.6717,-16985.8701 6484.5831,-17004.7177 6461.414,-17899.5031 6474.6717,-17921.8701 6581.1613,-18101.5275 6829.3382,-18187.6597 6960.7943,-18221.9435"/>
<polygon fill="#000000" stroke="#000000" points="6960.27,-18225.4223 6970.8262,-18224.5182 6962.0102,-18218.6421 6960.27,-18225.4223"/>
</g>
<!-- scalaz.Equal[(HListSpec.this.HInit, Double)]&#45;&gt;scalaz.Equal[HListSpec.this.HInit] -->
<g id="edge141" class="edge">
<title>scalaz.Equal[(HListSpec.this.HInit, Double)]&#45;&gt;scalaz.Equal[HListSpec.this.HInit]</title>
<path fill="none" stroke="#000000" d="M6048.3851,-16949.8701C6280.4316,-16949.8701 6672.7218,-16949.8701 6889.7999,-16949.8701"/>
<polygon fill="#000000" stroke="#000000" points="6890.0032,-16953.3702 6900.0032,-16949.8701 6890.0031,-16946.3702 6890.0032,-16953.3702"/>
</g>
<!-- scalaz.Apply[org.scalacheck.Gen] -->
<g id="node1153" class="node">
<title>scalaz.Apply[org.scalacheck.Gen]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-54903.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="559.1596" y="-54907.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Apply[org.scalacheck.Gen]</text>
<text text-anchor="middle" x="652.6596" y="-54892.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node1154" class="node">
<title>monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-24537.8701" rx="338.9084" ry="26.7407"/>
<text text-anchor="start" x="421.1596" y="-24541.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-24526.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge700" class="edge">
<title>monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M887.8341,-24518.4981C1051.1391,-24510.8374 1249.1035,-24515.0659 1305.3191,-24573.8701 1320.5223,-24589.7733 1298.1989,-25349.8879 1313.3191,-25365.8701 1434.8884,-25494.3696 1667.9344,-25455.7146 1787.3977,-25424.5577"/>
<polygon fill="#000000" stroke="#000000" points="1788.4339,-25427.9039 1797.1987,-25421.9517 1786.635,-25421.1389 1788.4339,-25427.9039"/>
</g>
<!-- monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge348" class="edge">
<title>monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M978.042,-24530.3904C1111.5773,-24532.5149 1248.1673,-24542.975 1305.3191,-24573.8701 1615.5954,-24741.5988 1799.1006,-25165.9261 1848.4588,-25293.2204"/>
<polygon fill="#000000" stroke="#000000" points="1845.3223,-25294.8163 1852.1736,-25302.8978 1851.8574,-25292.3077 1845.3223,-25294.8163"/>
</g>
<!-- org.scalacheck.Cogen[(HListSpec.this.HInit, Double)]&#45;&gt;org.scalacheck.Cogen[HListSpec.this.HInit] -->
<g id="edge120" class="edge">
<title>org.scalacheck.Cogen[(HListSpec.this.HInit, Double)]&#45;&gt;org.scalacheck.Cogen[HListSpec.this.HInit]</title>
<path fill="none" stroke="#000000" d="M6061.909,-934.102C6179.7114,-927.1315 6331.6759,-918.0835 6466.6717,-909.8701 6601.4167,-901.6718 6753.7762,-892.1962 6868.4211,-885.0247"/>
<polygon fill="#000000" stroke="#000000" points="6868.935,-888.4995 6878.6969,-884.3818 6868.4978,-881.5132 6868.935,-888.4995"/>
</g>
<!-- org.scalacheck.Cogen[(HListSpec.this.HInit, Double)]&#45;&gt;org.scalacheck.Cogen[Double] -->
<g id="edge584" class="edge">
<title>org.scalacheck.Cogen[(HListSpec.this.HInit, Double)]&#45;&gt;org.scalacheck.Cogen[Double]</title>
<path fill="none" stroke="#000000" d="M6010.2922,-925.8314C6150.2218,-916.1323 6354.8107,-927.5486 6466.6717,-1053.8701 6487.919,-1077.8641 6452.0937,-1175.1237 6474.6717,-1197.8701 6534.004,-1257.6447 6765.1897,-1254.052 6914.6783,-1244.7961"/>
<polygon fill="#000000" stroke="#000000" points="6915.0923,-1248.277 6924.8502,-1244.1498 6914.6484,-1241.291 6915.0923,-1248.277"/>
</g>
<!-- ((Int, String)) =&gt; ?{def shouldEqual: ?} -->
<g id="node1156" class="node">
<title>((Int, String)) =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-24465.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="542.6596" y="-24469.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, String)) =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-24454.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 8ms</text>
</g>
<!-- ((Int, String)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge1011" class="edge">
<title>((Int, String)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M796.3258,-24452.1035C967.2494,-24439.2826 1238.0077,-24431.3998 1305.3191,-24501.8701 1321.897,-24519.2259 1296.8318,-25348.4282 1313.3191,-25365.8701 1434.8343,-25494.4208 1667.9045,-25455.7428 1787.3854,-25424.5694"/>
<polygon fill="#000000" stroke="#000000" points="1788.4235,-25427.915 1797.1877,-25421.962 1786.624,-25421.1503 1788.4235,-25427.915"/>
</g>
<!-- ((Int, String)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1026" class="edge">
<title>((Int, String)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M813.6066,-24458.6565C979.325,-24454.0381 1224.4254,-24455.877 1305.3191,-24501.8701 1633.6956,-24688.5725 1806.5909,-25158.0076 1850.6171,-25293.0198"/>
<polygon fill="#000000" stroke="#000000" points="1847.3963,-25294.4365 1853.7961,-25302.88 1854.0586,-25292.2885 1847.3963,-25294.4365"/>
</g>
<!-- shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2]&#45;&gt;shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1] -->
<g id="edge463" class="edge">
<title>shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2]&#45;&gt;shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1]</title>
<path fill="none" stroke="#000000" d="M3563.1891,-32259.8701C3769.7766,-32259.8701 4020.6929,-32259.8701 4222.3288,-32259.8701"/>
<polygon fill="#000000" stroke="#000000" points="4222.4982,-32263.3702 4232.4981,-32259.8701 4222.4981,-32256.3702 4222.4982,-32263.3702"/>
</g>
<!-- scalaz.Equal[(Int, HListSpec.this.HTail)] -->
<g id="node1160" class="node">
<title>scalaz.Equal[(Int, HListSpec.this.HTail)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-23385.8701" rx="170.3255" ry="26.7407"/>
<text text-anchor="start" x="5749.5954" y="-23389.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, HListSpec.this.HTail)]</text>
<text text-anchor="middle" x="5862.0954" y="-23374.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[(Int, HListSpec.this.HTail)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge747" class="edge">
<title>scalaz.Equal[(Int, HListSpec.this.HTail)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M6010.751,-23399.0921C6169.5452,-23409.5379 6406.5533,-23413.3142 6466.6717,-23349.8701 6480.1801,-23335.6144 6463.0123,-21951.6737 6474.6717,-21935.8701 6584.3382,-21787.2232 6816.8738,-21758.196 6948.9812,-21754.3554"/>
<polygon fill="#000000" stroke="#000000" points="6949.1876,-21757.8515 6959.0978,-21754.1049 6949.0142,-21750.8536 6949.1876,-21757.8515"/>
</g>
<!-- scalaz.Equal[(Int, HListSpec.this.HTail)]&#45;&gt;scalaz.Equal[HListSpec.this.HTail] -->
<g id="edge450" class="edge">
<title>scalaz.Equal[(Int, HListSpec.this.HTail)]&#45;&gt;scalaz.Equal[HListSpec.this.HTail]</title>
<path fill="none" stroke="#000000" d="M6032.6674,-23385.8701C6261.6697,-23385.8701 6665.3936,-23385.8701 6887.8659,-23385.8701"/>
<polygon fill="#000000" stroke="#000000" points="6887.994,-23389.3702 6897.994,-23385.8701 6887.9939,-23382.3702 6887.994,-23389.3702"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P) -->
<g id="node1161" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-54975.8701" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="471.1596" y="-54979.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-54964.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Stream[scalaz.Cofree[Stream,A]] =&gt; ?{def ===: ?} -->
<g id="node1162" class="node">
<title>Stream[scalaz.Cofree[Stream,A]] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-27849.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="509.6596" y="-27853.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Stream[scalaz.Cofree[Stream,A]] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="652.6596" y="-27838.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[Stream[scalaz.Cofree[Stream,A]]] -->
<g id="node1388" class="node">
<title>scalaz.Equal[Stream[scalaz.Cofree[Stream,A]]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-27849.8701" rx="195.7372" ry="26.7407"/>
<text text-anchor="start" x="1731.534" y="-27853.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Stream[scalaz.Cofree[Stream,A]]]</text>
<text text-anchor="middle" x="1862.034" y="-27838.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- Stream[scalaz.Cofree[Stream,A]] =&gt; ?{def ===: ?}&#45;&gt;scalaz.Equal[Stream[scalaz.Cofree[Stream,A]]] -->
<g id="edge1059" class="edge">
<title>Stream[scalaz.Cofree[Stream,A]] =&gt; ?{def ===: ?}&#45;&gt;scalaz.Equal[Stream[scalaz.Cofree[Stream,A]]]</title>
<path fill="none" stroke="#000000" d="M866.4348,-27849.8701C1089.2128,-27849.8701 1435.8842,-27849.8701 1655.8116,-27849.8701"/>
<polygon fill="#000000" stroke="#000000" points="1655.8613,-27853.3702 1665.8613,-27849.8701 1655.8612,-27846.3702 1655.8613,-27853.3702"/>
</g>
<!-- monocle.function.FilterIndex[Map[Int,Char],Int,Char] -->
<g id="node1163" class="node">
<title>monocle.function.FilterIndex[Map[Int,Char],Int,Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-55047.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="503.6596" y="-55051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[Map[Int,Char],Int,Char]</text>
<text text-anchor="middle" x="652.6596" y="-55036.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Tupler[HListSpec.this.HInit] -->
<g id="node1164" class="node">
<title>shapeless.ops.hlist.Tupler[HListSpec.this.HInit]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-55119.8701" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="521.6596" y="-55123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Tupler[HListSpec.this.HInit]</text>
<text text-anchor="middle" x="652.6596" y="-55108.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int]]&#45;&gt;scalaz.Equal[Int =&gt; monocle.Arities] -->
<g id="edge480" class="edge">
<title>scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int]]&#45;&gt;scalaz.Equal[Int =&gt; monocle.Arities]</title>
<path fill="none" stroke="#000000" d="M3364.9631,-16880.5195C3560.9327,-16895.0314 3841.8824,-16900.9199 3914.9868,-16824.8701 3932.9094,-16806.2253 3905.1215,-15912.5697 3922.9868,-15893.8701 3991.4125,-15822.2486 4266.682,-15830.5397 4440.375,-15843.7441"/>
<polygon fill="#000000" stroke="#000000" points="4440.1331,-15847.2358 4450.3735,-15844.5181 4440.6735,-15840.2566 4440.1331,-15847.2358"/>
</g>
<!-- scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int]]&#45;&gt;scalaz.Equal[monocle.Arities =&gt; Option[Int]] -->
<g id="edge1155" class="edge">
<title>scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,Int,Int]]&#45;&gt;scalaz.Equal[monocle.Arities =&gt; Option[Int]]</title>
<path fill="none" stroke="#000000" d="M3372.3633,-16841.8496C3566.8776,-16828.7918 3839.9756,-16824.9135 3914.9868,-16896.8701 3929.3169,-16910.6166 3908.6989,-16972.0796 3922.9868,-16985.8701 3990.8497,-17051.3706 4242.7831,-17047.8641 4415.8518,-17036.7944"/>
<polygon fill="#000000" stroke="#000000" points="4416.0895,-17040.2864 4425.8399,-17036.1416 4415.6329,-17033.3013 4416.0895,-17040.2864"/>
</g>
<!-- org.scalactic.Equality[Option[Unit]] -->
<g id="node1166" class="node">
<title>org.scalactic.Equality[Option[Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-16517.8701" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="4487.253" y="-16521.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[Unit]]</text>
<text text-anchor="middle" x="4586.253" y="-16506.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalactic.Equality[Option[Unit]]&#45;&gt;scalaz.Equal[Option[Unit]] -->
<g id="edge106" class="edge">
<title>org.scalactic.Equality[Option[Unit]]&#45;&gt;scalaz.Equal[Option[Unit]]</title>
<path fill="none" stroke="#000000" d="M4659.9773,-16494.3095C4797.3325,-16455.5396 5092.6519,-16397.2027 5249.5191,-16553.8701 5272.1959,-16576.5179 5234.9019,-16675.1627 5257.5191,-16697.8701 5323.2294,-16763.8422 5587.3944,-16755.761 5743.9641,-16744.5156"/>
<polygon fill="#000000" stroke="#000000" points="5744.4009,-16747.9931 5754.1182,-16743.7711 5743.889,-16741.0118 5744.4009,-16747.9931"/>
</g>
<!-- org.scalactic.Equality[monocle.Nullary] -->
<g id="node1167" class="node">
<title>org.scalactic.Equality[monocle.Nullary]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-16373.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="5752.0954" y="-16377.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[monocle.Nullary]</text>
<text text-anchor="middle" x="5862.0954" y="-16362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalactic.Equality[monocle.Nullary]&#45;&gt;scalaz.Equal[monocle.Nullary] -->
<g id="edge1101" class="edge">
<title>org.scalactic.Equality[monocle.Nullary]&#45;&gt;scalaz.Equal[monocle.Nullary]</title>
<path fill="none" stroke="#000000" d="M6026.0923,-16368.8833C6260.0897,-16361.768 6685.7509,-16348.8248 6905.8531,-16342.132"/>
<polygon fill="#000000" stroke="#000000" points="6905.9655,-16345.6303 6915.8545,-16341.8279 6905.7527,-16338.6335 6905.9655,-16345.6303"/>
</g>
<!-- monocle.function.Index[Stream[Int],Int,Int] -->
<g id="node1169" class="node">
<title>monocle.function.Index[Stream[Int],Int,Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-55191.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="532.1596" y="-55195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[Stream[Int],Int,Int]</text>
<text text-anchor="middle" x="652.6596" y="-55180.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int)] -->
<g id="node1170" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-15433.8701" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="5722.0954" y="-15437.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-15422.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 21ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge430" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6036.826,-15448.7122C6194.3703,-15457.7727 6409.7945,-15457.9575 6466.6717,-15397.8701 6483.285,-15380.3191 6462.6104,-13678.812 6474.6717,-13657.8701 6578.5255,-13477.5495 6821.0661,-13384.762 6954.3136,-13345.8623"/>
<polygon fill="#000000" stroke="#000000" points="6955.4666,-13349.1727 6964.108,-13343.0427 6953.53,-13342.4459 6955.4666,-13349.1727"/>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int)] -->
<g id="node1354" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-15433.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="6913.514" y="-15437.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="7046.014" y="-15422.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int)] -->
<g id="edge1068" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M6071.7112,-15433.8701C6287.4569,-15433.8701 6621.6343,-15433.8701 6837.1166,-15433.8701"/>
<polygon fill="#000000" stroke="#000000" points="6837.287,-15437.3702 6847.287,-15433.8701 6837.287,-15430.3702 6837.287,-15437.3702"/>
</g>
<!-- monocle.function.Each[scala.util.Try[Int],Int] -->
<g id="node1171" class="node">
<title>monocle.function.Each[scala.util.Try[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-46263.8701" rx="188.5952" ry="26.7407"/>
<text text-anchor="start" x="527.1596" y="-46267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[scala.util.Try[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-46252.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- monocle.function.Each[scala.util.Try[Int],Int]&#45;&gt;shapeless.Generic.Aux[scala.util.Try[Int],SGen] -->
<g id="edge1078" class="edge">
<title>monocle.function.Each[scala.util.Try[Int],Int]&#45;&gt;shapeless.Generic.Aux[scala.util.Try[Int],SGen]</title>
<path fill="none" stroke="#000000" d="M841.6243,-46263.8701C1062.0601,-46263.8701 1425.3561,-46263.8701 1653.7576,-46263.8701"/>
<polygon fill="#000000" stroke="#000000" points="1653.8537,-46267.3702 1663.8537,-46263.8701 1653.8536,-46260.3702 1653.8537,-46267.3702"/>
</g>
<!-- scalaz.Functor[F$macro$17] -->
<g id="node1172" class="node">
<title>scalaz.Functor[F$macro$17]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-55263.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="574.1596" y="-55267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$17]</text>
<text text-anchor="middle" x="652.6596" y="-55252.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,scala.collection.immutable.Stream[Int]] -->
<g id="edge517" class="edge">
<title>org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,scala.collection.immutable.Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M7340.4764,-513.8701C7494.4821,-513.8701 7684.0676,-513.8701 7845.6629,-513.8701"/>
<polygon fill="#000000" stroke="#000000" points="7845.7756,-517.3702 7855.7756,-513.8701 7845.7755,-510.3702 7845.7756,-517.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[((Char, Boolean, String, Long, Float)) =&gt; (Char, Boolean, String, Long, Float)] -->
<g id="node1176" class="node">
<title>org.scalacheck.Arbitrary[((Char, Boolean, String, Long, Float)) =&gt; (Char, Boolean, String, Long, Float)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-4364.8701" rx="418.7145" ry="26.7407"/>
<text text-anchor="start" x="4298.253" y="-4368.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Char, Boolean, String, Long, Float)) =&gt; (Char, Boolean, String, Long, Float)]</text>
<text text-anchor="middle" x="4586.253" y="-4353.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 28ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Char, Boolean, String, Long, Float)) =&gt; (Char, Boolean, String, Long, Float)]&#45;&gt;scala.reflect.ClassTag[((Char, Boolean, String, Long, Float)) =&gt; (Char, Boolean, String, Long, Float)] -->
<g id="edge44" class="edge">
<title>org.scalacheck.Arbitrary[((Char, Boolean, String, Long, Float)) =&gt; (Char, Boolean, String, Long, Float)]&#45;&gt;scala.reflect.ClassTag[((Char, Boolean, String, Long, Float)) =&gt; (Char, Boolean, String, Long, Float)]</title>
<path fill="none" stroke="#000000" d="M4852.527,-4385.6412C5012.3672,-4391.6299 5194.9896,-4384.8228 5249.5191,-4328.8701 5271.3192,-4306.501 5235.7779,-4070.2963 5257.5191,-4047.8701 5300.2726,-4003.7697 5429.9216,-3992.4237 5558.2482,-3993.1209"/>
<polygon fill="#000000" stroke="#000000" points="5558.2463,-3996.6208 5568.2735,-3993.1995 5558.3012,-3989.6211 5558.2463,-3996.6208"/>
</g>
<!-- org.scalacheck.Arbitrary[((Char, Boolean, String, Long, Float)) =&gt; (Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)] -->
<g id="edge965" class="edge">
<title>org.scalacheck.Arbitrary[((Char, Boolean, String, Long, Float)) =&gt; (Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Cogen[(Char, Boolean, String, Long, Float)]</title>
<path fill="none" stroke="#000000" d="M4953.1402,-4377.8105C5167.4057,-4385.3678 5431.7838,-4394.6926 5620.0672,-4401.3335"/>
<polygon fill="#000000" stroke="#000000" points="5619.9829,-4404.8326 5630.1001,-4401.6874 5620.2297,-4397.837 5619.9829,-4404.8326"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)] -->
<g id="node1374" class="node">
<title>org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-5637.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="5690.5954" y="-5641.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]</text>
<text text-anchor="middle" x="5862.0954" y="-5626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 57ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Char, Boolean, String, Long, Float)) =&gt; (Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)] -->
<g id="edge1303" class="edge">
<title>org.scalacheck.Arbitrary[((Char, Boolean, String, Long, Float)) =&gt; (Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]</title>
<path fill="none" stroke="#000000" d="M4848.0706,-4343.8973C5009.2241,-4337.4215 5195.0556,-4343.7525 5249.5191,-4400.8701 5272.5419,-4425.0147 5234.5598,-5577.665 5257.5191,-5601.8701 5309.9963,-5657.1946 5497.0804,-5661.3846 5649.3971,-5654.6235"/>
<polygon fill="#000000" stroke="#000000" points="5650.0118,-5658.0989 5659.8394,-5654.1406 5649.6883,-5651.1064 5650.0118,-5658.0989"/>
</g>
<!-- monocle.function.Snoc[monocle.function.CList,Char] -->
<g id="node1177" class="node">
<title>monocle.function.Snoc[monocle.function.CList,Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-55335.8701" rx="220.7347" ry="26.7407"/>
<text text-anchor="start" x="504.6596" y="-55339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc[monocle.function.CList,Char]</text>
<text text-anchor="middle" x="652.6596" y="-55324.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Functor[F$macro$8] -->
<g id="node1179" class="node">
<title>scalaz.Functor[F$macro$8]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-55407.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-55411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$8]</text>
<text text-anchor="middle" x="652.6596" y="-55396.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Stream[Int], Int)]&#45;&gt;scala.reflect.ClassTag[(Stream[Int], Int)] -->
<g id="edge137" class="edge">
<title>org.scalacheck.Arbitrary[(Stream[Int], Int)]&#45;&gt;scala.reflect.ClassTag[(Stream[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M4764.6606,-10905.3742C5007.8711,-10900.6085 5440.9593,-10892.1222 5684.0047,-10887.3597"/>
<polygon fill="#000000" stroke="#000000" points="5684.4295,-10890.8522 5694.359,-10887.1568 5684.2923,-10883.8535 5684.4295,-10890.8522"/>
</g>
<!-- org.scalacheck.Arbitrary[(Stream[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[Stream[Int]] -->
<g id="edge87" class="edge">
<title>org.scalacheck.Arbitrary[(Stream[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4737.8989,-10894.3796C4911.7802,-10881.5136 5181.6254,-10874.2683 5249.5191,-10944.8701 5269.8923,-10966.0559 5237.2016,-11452.6308 5257.5191,-11473.8701 5317.7503,-11536.8337 5553.3926,-11533.3601 5712.0764,-11523.0827"/>
<polygon fill="#000000" stroke="#000000" points="5712.6684,-11526.5512 5722.4146,-11522.3966 5712.2048,-11519.5666 5712.6684,-11526.5512"/>
</g>
<!-- org.scalacheck.Arbitrary[(Stream[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1243" class="edge">
<title>org.scalacheck.Arbitrary[(Stream[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4737.6344,-10894.2939C4911.6195,-10881.298 5181.9274,-10873.8795 5249.5191,-10944.8701 5264.3065,-10960.401 5242.5556,-12473.5087 5257.5191,-12488.8701 5351.3111,-12585.1555 6372.3268,-12431.1263 6466.6717,-12526.8701 6485.3522,-12545.8275 6460.9772,-12983.0488 6474.6717,-13005.8701 6578.877,-13179.5238 6815.6136,-13265.1427 6949.3484,-13301.059"/>
<polygon fill="#000000" stroke="#000000" points="6948.6288,-13304.489 6959.1913,-13303.6626 6950.4189,-13297.7217 6948.6288,-13304.489"/>
</g>
<!-- a1.type =&gt; ?{def reverse: ?} -->
<g id="node1181" class="node">
<title>a1.type =&gt; ?{def reverse: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-55479.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="574.1596" y="-55483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">a1.type =&gt; ?{def reverse: ?}</text>
<text text-anchor="middle" x="652.6596" y="-55468.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Cons[List[Char],Char] -->
<g id="node1182" class="node">
<title>monocle.function.Cons[List[Char],Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-55551.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="541.1596" y="-55555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons[List[Char],Char]</text>
<text text-anchor="middle" x="652.6596" y="-55540.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, HListSpec.this.HTail)]&#45;&gt;org.scalacheck.Arbitrary[HListSpec.this.HTail] -->
<g id="edge291" class="edge">
<title>org.scalacheck.Arbitrary[(Int, HListSpec.this.HTail)]&#45;&gt;org.scalacheck.Arbitrary[HListSpec.this.HTail]</title>
<path fill="none" stroke="#000000" d="M6073.0738,-7803.4547C6291.8093,-7796.8035 6631.2124,-7786.4831 6845.8611,-7779.9562"/>
<polygon fill="#000000" stroke="#000000" points="6846.0982,-7783.4507 6855.9872,-7779.6483 6845.8854,-7776.4539 6846.0982,-7783.4507"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, HListSpec.this.HTail)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1287" class="edge">
<title>org.scalacheck.Arbitrary[(Int, HListSpec.this.HTail)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6041.7662,-7794.7107C6198.8732,-7785.9029 6410.4725,-7786.3174 6466.6717,-7845.8701 6478.9685,-7858.9006 6465.5694,-12990.4377 6474.6717,-13005.8701 6577.4883,-13180.189 6814.4917,-13265.5008 6948.7111,-13301.2013"/>
<polygon fill="#000000" stroke="#000000" points="6948.0303,-13304.641 6958.5909,-13303.789 6949.804,-13297.8694 6948.0303,-13304.641"/>
</g>
<!-- scala.reflect.ClassTag[(Int, HListSpec.this.HTail)] -->
<g id="node1386" class="node">
<title>scala.reflect.ClassTag[(Int, HListSpec.this.HTail)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-7845.8701" rx="206.4504" ry="26.7407"/>
<text text-anchor="start" x="6908.014" y="-7849.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, HListSpec.this.HTail)]</text>
<text text-anchor="middle" x="7046.014" y="-7834.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, HListSpec.this.HTail)]&#45;&gt;scala.reflect.ClassTag[(Int, HListSpec.this.HTail)] -->
<g id="edge613" class="edge">
<title>org.scalacheck.Arbitrary[(Int, HListSpec.this.HTail)]&#45;&gt;scala.reflect.ClassTag[(Int, HListSpec.this.HTail)]</title>
<path fill="none" stroke="#000000" d="M6073.0738,-7816.2854C6288.0464,-7822.8222 6619.5708,-7832.903 6834.674,-7839.4437"/>
<polygon fill="#000000" stroke="#000000" points="6834.7263,-7842.9469 6844.8281,-7839.7525 6834.9391,-7835.9501 6834.7263,-7842.9469"/>
</g>
<!-- org.scalacheck.util.Buildable[(K, V),List[(K, V)]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(K, V),List[(K, V)]] -->
<g id="edge255" class="edge">
<title>org.scalacheck.util.Buildable[(K, V),List[(K, V)]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(K, V),List[(K, V)]]</title>
<path fill="none" stroke="#000000" d="M2067.3497,-29307.8701C2293.6063,-29307.8701 2658.0925,-29307.8701 2904.8033,-29307.8701"/>
<polygon fill="#000000" stroke="#000000" points="2904.9941,-29311.3702 2914.994,-29307.8701 2904.994,-29304.3702 2904.9941,-29311.3702"/>
</g>
<!-- scalaz.Equal[Unit =&gt; monocle.Arities]&#45;&gt;org.scalacheck.Arbitrary[Unit] -->
<g id="edge470" class="edge">
<title>scalaz.Equal[Unit =&gt; monocle.Arities]&#45;&gt;org.scalacheck.Arbitrary[Unit]</title>
<path fill="none" stroke="#000000" d="M4749.0725,-16000.6786C5203.3761,-15997.3541 6479.3745,-15988.0166 6905.4777,-15984.8985"/>
<polygon fill="#000000" stroke="#000000" points="6905.717,-15988.3969 6915.6911,-15984.8237 6905.6657,-15981.3971 6905.717,-15988.3969"/>
</g>
<!-- scalaz.Equal[Unit =&gt; monocle.Arities]&#45;&gt;scalaz.Equal[monocle.Arities] -->
<g id="edge1188" class="edge">
<title>scalaz.Equal[Unit =&gt; monocle.Arities]&#45;&gt;scalaz.Equal[monocle.Arities]</title>
<path fill="none" stroke="#000000" d="M4663.2771,-16025.5711C4800.768,-16062.599 5089.0392,-16115.4723 5249.5191,-15965.8701 5270.4871,-15946.3234 5236.6026,-15921.4717 5257.5191,-15901.8701 5323.7252,-15839.8258 5575.4412,-15845.0756 5732.4489,-15855.0839"/>
<polygon fill="#000000" stroke="#000000" points="5732.4441,-15858.591 5742.6508,-15855.7494 5732.8998,-15851.6058 5732.4441,-15858.591"/>
</g>
<!-- scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Arities] -->
<g id="node1189" class="node">
<title>scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Arities]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-11916.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="4387.753" y="-11920.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Arities]</text>
<text text-anchor="middle" x="4586.253" y="-11905.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 37ms</text>
</g>
<!-- scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Arities]&#45;&gt;org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)] -->
<g id="edge888" class="edge">
<title>scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Arities]&#45;&gt;org.scalacheck.Arbitrary[(Char, Boolean, String, Int, Double)]</title>
<path fill="none" stroke="#000000" d="M4797.5258,-11935.4479C4968.1382,-11945.2114 5189.3903,-11944.2372 5249.5191,-11880.8701 5270.8717,-11858.3675 5236.2257,-7436.4286 5257.5191,-7413.8701 5310.002,-7358.269 5497.9694,-7354.2228 5650.5479,-7361.0997"/>
<polygon fill="#000000" stroke="#000000" points="5650.3921,-7364.5961 5660.545,-7361.568 5650.7197,-7357.6038 5650.3921,-7364.5961"/>
</g>
<!-- scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Arities]&#45;&gt;scalaz.Equal[monocle.Arities] -->
<g id="edge628" class="edge">
<title>scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Arities]&#45;&gt;scalaz.Equal[monocle.Arities]</title>
<path fill="none" stroke="#000000" d="M4797.5215,-11898.2963C4968.1311,-11888.5354 5189.3817,-11889.5111 5249.5191,-11952.8701 5268.0541,-11972.3979 5239.0355,-15810.2936 5257.5191,-15829.8701 5320.2074,-15896.2648 5576.1261,-15889.1381 5734.2196,-15877.6907"/>
<polygon fill="#000000" stroke="#000000" points="5734.7739,-15881.1594 5744.4884,-15876.9312 5734.2574,-15874.1784 5734.7739,-15881.1594"/>
</g>
<!-- org.scalacheck.Arbitrary[Int]&#45;&gt;scala.reflect.ClassTag[Int] -->
<g id="edge256" class="edge">
<title>org.scalacheck.Arbitrary[Int]&#45;&gt;scala.reflect.ClassTag[Int]</title>
<path fill="none" stroke="#000000" d="M7169.977,-13322.8701C7391.3433,-13322.8701 7852.0977,-13322.8701 8073.1586,-13322.8701"/>
<polygon fill="#000000" stroke="#000000" points="8073.1797,-13326.3702 8083.1797,-13322.8701 8073.1797,-13319.3702 8073.1797,-13326.3702"/>
</g>
<!-- monocle.Binary =&gt; ?{def shouldEqual: ?} -->
<g id="node1191" class="node">
<title>monocle.Binary =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-24393.8701" rx="176.5537" ry="26.7407"/>
<text text-anchor="start" x="535.6596" y="-24397.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Binary =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-24382.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.Binary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge753" class="edge">
<title>monocle.Binary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M802.7238,-24379.6219C973.9349,-24367.0835 1238.8653,-24360.248 1305.3191,-24429.8701 1323.2716,-24448.6785 1295.4647,-25346.9685 1313.3191,-25365.8701 1434.7885,-25494.4641 1667.8792,-25455.7667 1787.3749,-25424.5793"/>
<polygon fill="#000000" stroke="#000000" points="1788.4147,-25427.9245 1797.1785,-25421.9707 1786.6147,-25421.1598 1788.4147,-25427.9245"/>
</g>
<!-- monocle.Binary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1079" class="edge">
<title>monocle.Binary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M821.597,-24385.835C987.4048,-24380.994 1226.5327,-24383.074 1305.3191,-24429.8701 1652.0607,-24635.8214 1813.483,-25150.2836 1852.4588,-25292.7732"/>
<polygon fill="#000000" stroke="#000000" points="1849.1699,-25294.0193 1855.1558,-25302.7611 1855.9278,-25292.1944 1849.1699,-25294.0193"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Int,String]] -->
<g id="node1193" class="node">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-206.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="4402.753" y="-210.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[scala.collection.immutable.Map[Int,String]]</text>
<text text-anchor="middle" x="4586.253" y="-195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 25ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Int,String]]&#45;&gt;org.scalacheck.util.Buildable[(Int, String),scala.collection.immutable.Map[Int,String]] -->
<g id="edge1109" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Int,String]]&#45;&gt;org.scalacheck.util.Buildable[(Int, String),scala.collection.immutable.Map[Int,String]]</title>
<path fill="none" stroke="#000000" d="M4681.3226,-181.6967C4810.6712,-148.5486 5049.8112,-91.1661 5257.5191,-62.8701 5345.889,-50.8314 5442.0696,-42.8183 5531.184,-37.4846"/>
<polygon fill="#000000" stroke="#000000" points="5531.3986,-40.9782 5541.1754,-36.896 5530.9869,-33.9903 5531.3986,-40.9782"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Int,String]]&#45;&gt;Fractional[scala.collection.immutable.Map[Int,String]] -->
<g id="edge875" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Int,String]]&#45;&gt;Fractional[scala.collection.immutable.Map[Int,String]]</title>
<path fill="none" stroke="#000000" d="M4758.4931,-227.6152C4893.9656,-243.3824 5087.5713,-264.7039 5257.5191,-278.8701 5385.2971,-289.5211 5528.5238,-298.1936 5643.4877,-304.3557"/>
<polygon fill="#000000" stroke="#000000" points="5643.6462,-307.869 5653.8185,-304.9067 5644.0191,-300.8789 5643.6462,-307.869"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Int,String]]&#45;&gt;scala.collection.immutable.Map[Int,String] =&gt; Traversable[(Int, String)] -->
<g id="edge953" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Int,String]]&#45;&gt;scala.collection.immutable.Map[Int,String] =&gt; Traversable[(Int, String)]</title>
<path fill="none" stroke="#000000" d="M4846.7466,-214.2203C5057.2356,-220.1596 5353.3325,-228.5145 5571.4814,-234.6699"/>
<polygon fill="#000000" stroke="#000000" points="5571.3892,-238.1686 5581.484,-234.9521 5571.5867,-231.1714 5571.3892,-238.1686"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Int,String]]&#45;&gt;org.scalacheck.Shrink[(Int, String)] -->
<g id="edge1278" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Int,String]]&#45;&gt;org.scalacheck.Shrink[(Int, String)]</title>
<path fill="none" stroke="#000000" d="M4846.7466,-199.5198C5104.6606,-192.2423 5491.1046,-181.3382 5705.1923,-175.2973"/>
<polygon fill="#000000" stroke="#000000" points="5705.3583,-178.7941 5715.2555,-175.0134 5705.1607,-171.7969 5705.3583,-178.7941"/>
</g>
<!-- Integral[scala.collection.immutable.Map[Int,String]] -->
<g id="node1470" class="node">
<title>Integral[scala.collection.immutable.Map[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-98.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="5717.5954" y="-102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[scala.collection.immutable.Map[Int,String]]</text>
<text text-anchor="middle" x="5862.0954" y="-87.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Int,String]]&#45;&gt;Integral[scala.collection.immutable.Map[Int,String]] -->
<g id="edge130" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Int,String]]&#45;&gt;Integral[scala.collection.immutable.Map[Int,String]]</title>
<path fill="none" stroke="#000000" d="M4758.4931,-186.1249C4893.9656,-170.3577 5087.5713,-149.0362 5257.5191,-134.8701 5387.8438,-124.0067 5534.2391,-115.2016 5650.3275,-109.019"/>
<polygon fill="#000000" stroke="#000000" points="5650.5989,-112.5096 5660.3996,-108.4851 5650.2283,-105.5194 5650.5989,-112.5096"/>
</g>
<!-- Int =&gt; org.scalacheck.util.Pretty -->
<g id="node1194" class="node">
<title>Int =&gt; org.scalacheck.util.Pretty</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-55623.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="563.6596" y="-55627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; org.scalacheck.util.Pretty</text>
<text text-anchor="middle" x="652.6596" y="-55612.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 15ms</text>
</g>
<!-- Unit =&gt; ?{def shouldEqual: ?} -->
<g id="node1196" class="node">
<title>Unit =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-24321.8701" rx="131.5437" ry="26.7407"/>
<text text-anchor="start" x="567.6596" y="-24325.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-24310.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- Unit =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge627" class="edge">
<title>Unit =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M771.0323,-24310.0795C939.162,-24296.2615 1234.6274,-24283.7629 1305.3191,-24357.8701 1324.6463,-24378.1311 1294.0976,-25345.5087 1313.3191,-25365.8701 1434.7492,-25494.5011 1667.8575,-25455.7872 1787.3659,-25424.5878"/>
<polygon fill="#000000" stroke="#000000" points="1788.4072,-25427.9326 1797.1706,-25421.9782 1786.6068,-25421.1681 1788.4072,-25427.9326"/>
</g>
<!-- Unit =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge800" class="edge">
<title>Unit =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M779.8372,-24314.8269C944.505,-24308.0707 1220.4544,-24305.5024 1305.3191,-24357.8701 1670.9786,-24583.5084 1820.1511,-25143.7027 1854.1463,-25292.8813"/>
<polygon fill="#000000" stroke="#000000" points="1850.7904,-25293.9114 1856.3964,-25302.9016 1857.6204,-25292.3777 1850.7904,-25293.9114"/>
</g>
<!-- org.scalacheck.Cogen[(Int,)] -->
<g id="node1197" class="node">
<title>org.scalacheck.Cogen[(Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-13477.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="5783.5954" y="-13481.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Int,)]</text>
<text text-anchor="middle" x="5862.0954" y="-13466.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Cogen[(Int,)]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge244" class="edge">
<title>org.scalacheck.Cogen[(Int,)]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M5974.7458,-13488.5383C6131.056,-13500.5563 6401.8666,-13510.3792 6466.6717,-13441.8701 6476.407,-13431.5783 6470.4993,-11415.4085 6474.6717,-11401.8701 6585.6701,-11041.7088 6906.4815,-10696.1606 7011.9568,-10589.4529"/>
<polygon fill="#000000" stroke="#000000" points="7014.6104,-10591.7478 7019.173,-10582.1857 7009.6433,-10586.8154 7014.6104,-10591.7478"/>
</g>
<!-- scalaz.Equal[Stream[scalaz.Tree[Int]]] -->
<g id="node1198" class="node">
<title>scalaz.Equal[Stream[scalaz.Tree[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-21069.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="4480.753" y="-21073.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Stream[scalaz.Tree[Int]]]</text>
<text text-anchor="middle" x="4586.253" y="-21058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[Stream[scalaz.Tree[Int]]]&#45;&gt;scalaz.Equal[scalaz.Tree[Int]] -->
<g id="edge1065" class="edge">
<title>scalaz.Equal[Stream[scalaz.Tree[Int]]]&#45;&gt;scalaz.Equal[scalaz.Tree[Int]]</title>
<path fill="none" stroke="#000000" d="M4731.3046,-21058.2547C4902.5838,-21047.7945 5173.8038,-21042.4878 5249.5191,-21105.8701 5261.4227,-21115.8347 5245.6418,-21129.8742 5257.5191,-21139.8701 5326.8421,-21198.2115 5576.8265,-21194.3167 5732.8093,-21185.5406"/>
<polygon fill="#000000" stroke="#000000" points="5733.163,-21189.0261 5742.9448,-21184.9561 5732.7599,-21182.0377 5733.163,-21189.0261"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Validation[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge433" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Validation[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6044.7535,-9917.1549C6201.5072,-9925.757 6410.7363,-9924.9487 6466.6717,-9865.8701 6482.485,-9849.1682 6459.8637,-8227.4693 6474.6717,-8209.8701 6583.8912,-8080.0634 6796.573,-8076.8787 6929.388,-8089.9102"/>
<polygon fill="#000000" stroke="#000000" points="6929.2971,-8093.4192 6939.6025,-8090.9598 6930.0126,-8086.4559 6929.2971,-8093.4192"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Validation[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge939" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Validation[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6044.7844,-9886.5561C6201.5592,-9877.934 6410.802,-9878.7293 6466.6717,-9937.8701 6481.3027,-9953.3576 6463.838,-12987.5244 6474.6717,-13005.8701 6577.5805,-13180.1346 6814.5475,-13265.4679 6948.7365,-13301.1863"/>
<polygon fill="#000000" stroke="#000000" points="6948.0533,-13304.6254 6958.614,-13303.7753 6949.8282,-13297.8542 6948.0533,-13304.6254"/>
</g>
<!-- monocle.function.Each[shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[shapeless.HNil,SGen] -->
<g id="edge436" class="edge">
<title>monocle.function.Each[shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M9522.7732,-26872.3829C9733.3396,-26865.7951 10085.3664,-26854.7817 10303.9358,-26847.9436"/>
<polygon fill="#000000" stroke="#000000" points="10304.3563,-26851.4323 10314.2419,-26847.6212 10304.1373,-26844.4357 10304.3563,-26851.4323"/>
</g>
<!-- scalaz.Equal[monocle.Arities =&gt; Option[(String, Int)]] -->
<g id="node1201" class="node">
<title>scalaz.Equal[monocle.Arities =&gt; Option[(String, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-17131.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="3016.3678" y="-17135.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.Arities =&gt; Option[(String, Int)]]</text>
<text text-anchor="middle" x="3166.8678" y="-17120.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- scalaz.Equal[monocle.Arities =&gt; Option[(String, Int)]]&#45;&gt;org.scalacheck.Arbitrary[monocle.Arities] -->
<g id="edge997" class="edge">
<title>scalaz.Equal[monocle.Arities =&gt; Option[(String, Int)]]&#45;&gt;org.scalacheck.Arbitrary[monocle.Arities]</title>
<path fill="none" stroke="#000000" d="M3243.0411,-17157.1597C3535.4764,-17249.1523 4602.1491,-17537.2616 5249.5191,-17078.8701 5257.6702,-17073.0984 5249.4674,-17063.7796 5257.5191,-17057.8701 5323.7198,-17009.2824 5534.2025,-17006.5835 5688.2587,-17011.864"/>
<polygon fill="#000000" stroke="#000000" points="5688.2039,-17015.3642 5698.3224,-17012.223 5688.4535,-17008.3686 5688.2039,-17015.3642"/>
</g>
<!-- scalaz.Equal[Option[(String, Int)]] -->
<g id="node1246" class="node">
<title>scalaz.Equal[Option[(String, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-20347.8701" rx="144.9138" ry="26.7407"/>
<text text-anchor="start" x="4491.753" y="-20351.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[(String, Int)]]</text>
<text text-anchor="middle" x="4586.253" y="-20336.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scalaz.Equal[monocle.Arities =&gt; Option[(String, Int)]]&#45;&gt;scalaz.Equal[Option[(String, Int)]] -->
<g id="edge467" class="edge">
<title>scalaz.Equal[monocle.Arities =&gt; Option[(String, Int)]]&#45;&gt;scalaz.Equal[Option[(String, Int)]]</title>
<path fill="none" stroke="#000000" d="M3194.1395,-17158.7664C3310.0745,-17275.2759 3762.9946,-17752.9592 3914.9868,-18249.8701 3919.1021,-18263.3243 3913.5696,-20265.4169 3922.9868,-20275.8701 4065.2734,-20433.8098 4344.4493,-20402.2942 4491.1028,-20371.7958"/>
<polygon fill="#000000" stroke="#000000" points="4491.9421,-20375.1957 4500.9986,-20369.6974 4490.49,-20368.3479 4491.9421,-20375.1957"/>
</g>
<!-- UnsafeSelectSpec.this.PropertyCheckConfigurable -->
<g id="node1202" class="node">
<title>UnsafeSelectSpec.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-55695.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="514.1596" y="-55699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">UnsafeSelectSpec.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="652.6596" y="-55684.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, scalaz.IList[Int])]&#45;&gt;scala.reflect.ClassTag[(Int, scalaz.IList[Int])] -->
<g id="edge1370" class="edge">
<title>org.scalacheck.Arbitrary[(Int, scalaz.IList[Int])]&#45;&gt;scala.reflect.ClassTag[(Int, scalaz.IList[Int])]</title>
<path fill="none" stroke="#000000" d="M4780.3728,-13924.1303C5020.6404,-13929.4032 5427.4038,-13938.3302 5667.7675,-13943.6053"/>
<polygon fill="#000000" stroke="#000000" points="5667.9465,-13947.11 5678.0209,-13943.8303 5668.1001,-13940.1116 5667.9465,-13947.11"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, scalaz.IList[Int])]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge985" class="edge">
<title>org.scalacheck.Arbitrary[(Int, scalaz.IList[Int])]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4781.6951,-13916.8216C5260.0243,-13909.1363 6451.818,-13888.5383 6466.6717,-13873.8701 6483.7602,-13856.9949 6462.3497,-13678.4846 6474.6717,-13657.8701 6581.5788,-13479.016 6823.4222,-13385.5108 6955.5977,-13346.143"/>
<polygon fill="#000000" stroke="#000000" points="6956.7033,-13349.4662 6965.3109,-13343.2887 6954.7297,-13342.7501 6956.7033,-13349.4662"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, scalaz.IList[Int])]&#45;&gt;org.scalacheck.Arbitrary[scalaz.IList[Int]] -->
<g id="edge1196" class="edge">
<title>org.scalacheck.Arbitrary[(Int, scalaz.IList[Int])]&#45;&gt;org.scalacheck.Arbitrary[scalaz.IList[Int]]</title>
<path fill="none" stroke="#000000" d="M4681.1455,-13943.4841C4810.5416,-13974.6737 5050.0001,-14028.8058 5257.5191,-14055.8701 5398.6101,-14074.2709 5559.4681,-14083.2774 5679.7726,-14087.6797"/>
<polygon fill="#000000" stroke="#000000" points="5679.7022,-14091.1794 5689.8213,-14088.0402 5679.9532,-14084.1839 5679.7022,-14091.1794"/>
</g>
<!-- PrismSpec.this.IntOrString =&gt; ?{def shouldEqual: ?} -->
<g id="node1204" class="node">
<title>PrismSpec.this.IntOrString =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-24249.8701" rx="219.4064" ry="26.7407"/>
<text text-anchor="start" x="505.6596" y="-24253.6701" font-family="Times,serif" font-size="14.00" fill="#000000">PrismSpec.this.IntOrString =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-24238.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 11ms</text>
</g>
<!-- PrismSpec.this.IntOrString =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge221" class="edge">
<title>PrismSpec.this.IntOrString =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M828.7495,-24233.8002C999.6402,-24222.5683 1242.1841,-24219.6496 1305.3191,-24285.8701 1326.021,-24307.5837 1292.7305,-25344.049 1313.3191,-25365.8701 1434.7152,-25494.5332 1667.8387,-25455.8049 1787.3581,-25424.5951"/>
<polygon fill="#000000" stroke="#000000" points="1788.4007,-25427.9396 1797.1637,-25421.9847 1786.5998,-25421.1752 1788.4007,-25427.9396"/>
</g>
<!-- PrismSpec.this.IntOrString =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge474" class="edge">
<title>PrismSpec.this.IntOrString =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M855.9352,-24239.7989C1019.3561,-24235.5435 1233.1541,-24239.8176 1305.3191,-24285.8701 1689.9771,-24531.3412 1826.2633,-25136.9278 1855.5821,-25292.8044"/>
<polygon fill="#000000" stroke="#000000" points="1852.1754,-25293.6301 1857.4354,-25302.827 1859.0587,-25292.3573 1852.1754,-25293.6301"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)]]&#45;&gt;shapeless.Witness.Aux[String(&#39;world&#39;)] -->
<g id="edge525" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)]]&#45;&gt;shapeless.Witness.Aux[String(&#39;world&#39;)]</title>
<path fill="none" stroke="#000000" d="M6093.7412,-2296.5777C6242.0888,-2291.1524 6415.9698,-2297.2431 6466.6717,-2349.8701 6480.5514,-2364.2767 6461.2741,-2695.0141 6474.6717,-2709.8701 6589.6031,-2837.3116 6807.2806,-2826.22 6938.2448,-2805.0763"/>
<polygon fill="#000000" stroke="#000000" points="6939.0095,-2808.4973 6948.3006,-2803.4056 6937.8622,-2801.592 6939.0095,-2808.4973"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge142" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.EndsWithString[String(&#39;world&#39;)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M6116.6697,-2328.4624C6257.4705,-2330.9068 6414.3043,-2322.5004 6466.6717,-2277.8701 6479.1462,-2267.2386 6464.2762,-2254.5419 6474.6717,-2241.8701 6582.2284,-2110.7609 6771.6615,-2045.7886 6902.7547,-2015.0808"/>
<polygon fill="#000000" stroke="#000000" points="6903.9193,-2018.4043 6912.8792,-2012.75 6902.3489,-2011.5827 6903.9193,-2018.4043"/>
</g>
<!-- monocle.function.Field5[(Boolean, Char, Int, Long, Float, Double),Float] -->
<g id="node1206" class="node">
<title>monocle.function.Field5[(Boolean, Char, Int, Long, Float, Double),Float]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-36093.8701" rx="296.9697" ry="26.7407"/>
<text text-anchor="start" x="450.6596" y="-36097.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field5[(Boolean, Char, Int, Long, Float, Double),Float]</text>
<text text-anchor="middle" x="652.6596" y="-36082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Field5[(Boolean, Char, Int, Long, Float, Double),Float]&#45;&gt;shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._4.N,Float] -->
<g id="edge243" class="edge">
<title>monocle.function.Field5[(Boolean, Char, Int, Long, Float, Double),Float]&#45;&gt;shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._4.N,Float]</title>
<path fill="none" stroke="#000000" d="M949.6673,-36093.8701C1107.3783,-36093.8701 1303.1549,-36093.8701 1472.8709,-36093.8701"/>
<polygon fill="#000000" stroke="#000000" points="1472.9818,-36097.3702 1482.9817,-36093.8701 1472.9817,-36090.3702 1472.9818,-36097.3702"/>
</g>
<!-- partitions.type =&gt; ?{def traverseU: ?} -->
<g id="node1207" class="node">
<title>partitions.type =&gt; ?{def traverseU: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-23745.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="548.1596" y="-23749.6701" font-family="Times,serif" font-size="14.00" fill="#000000">partitions.type =&gt; ?{def traverseU: ?}</text>
<text text-anchor="middle" x="652.6596" y="-23734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- partitions.type =&gt; ?{def traverseU: ?}&#45;&gt;scalaz.Traverse[List] -->
<g id="edge414" class="edge">
<title>partitions.type =&gt; ?{def traverseU: ?}&#45;&gt;scalaz.Traverse[List]</title>
<path fill="none" stroke="#000000" d="M812.0078,-23745.8701C1064.1187,-23745.8701 1547.9862,-23745.8701 1759.1857,-23745.8701"/>
<polygon fill="#000000" stroke="#000000" points="1759.3406,-23749.3702 1769.3406,-23745.8701 1759.3406,-23742.3702 1759.3406,-23749.3702"/>
</g>
<!-- scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)]] -->
<g id="node1208" class="node">
<title>scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)]]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-16512.8701" rx="548.9298" ry="26.7407"/>
<text text-anchor="start" x="1482.034" y="-16516.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)]]</text>
<text text-anchor="middle" x="1862.034" y="-16501.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 49ms</text>
</g>
<!-- scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[monocle.Arities =&gt; Option[(Char, Boolean, String, Int, Double)]] -->
<g id="edge921" class="edge">
<title>scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[monocle.Arities =&gt; Option[(Char, Boolean, String, Int, Double)]]</title>
<path fill="none" stroke="#000000" d="M2032.5607,-16538.4421C2159.7105,-16567.2821 2325.5342,-16627.709 2410.7488,-16752.8701 2424.2649,-16772.7221 2402.4949,-16951.1896 2418.7488,-16968.8701 2475.8074,-17030.9362 2665.0085,-17053.5743 2838.8481,-17060.7523"/>
<polygon fill="#000000" stroke="#000000" points="2838.8229,-17064.254 2848.9537,-17061.153 2839.1003,-17057.2595 2838.8229,-17064.254"/>
</g>
<!-- scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Arities] -->
<g id="edge656" class="edge">
<title>scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[((Char, Boolean, String, Int, Double)) =&gt; monocle.Arities]</title>
<path fill="none" stroke="#000000" d="M1962.6528,-16486.371C2092.8921,-16446.0518 2314.5168,-16355.5388 2410.7488,-16186.8701 2423.0655,-16165.2823 2405.1037,-12628.6436 2418.7488,-12607.8701 2830.2458,-11981.4021 3822.7474,-11904.0124 4308.7348,-11905.8984"/>
<polygon fill="#000000" stroke="#000000" points="4309.0356,-11909.3999 4319.0532,-11905.9507 4309.0711,-11902.4 4309.0356,-11909.3999"/>
</g>
<!-- Fractional[scala.collection.immutable.Stream[Int]] -->
<g id="node1209" class="node">
<title>Fractional[scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-441.8701" rx="207.7788" ry="26.7407"/>
<text text-anchor="start" x="6907.014" y="-445.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="7046.014" y="-430.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Long, Float)] -->
<g id="node1210" class="node">
<title>scalaz.Equal[(Char, Boolean, String, Long, Float)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-18833.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="5723.5954" y="-18837.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Char, Boolean, String, Long, Float)]</text>
<text text-anchor="middle" x="5862.0954" y="-18822.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge1361" class="edge">
<title>scalaz.Equal[(Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M6035.6485,-18819.1424C6193.252,-18810.0547 6409.5407,-18809.7517 6466.6717,-18869.8701 6484.6212,-18888.7581 6461.9848,-19785.1108 6474.6717,-19807.8701 6582.3244,-20000.9909 6841.4242,-20104.9445 6970.4178,-20146.3014"/>
<polygon fill="#000000" stroke="#000000" points="6969.6396,-20149.7262 6980.2296,-20149.4068 6971.7518,-20143.0524 6969.6396,-20149.7262"/>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge119" class="edge">
<title>scalaz.Equal[(Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M6069.2079,-18835.5183C6186.78,-18832.9796 6336.097,-18823.8924 6466.6717,-18797.8701 6662.333,-18758.8766 6881.9853,-18669.2625 6985.6558,-18624.0347"/>
<polygon fill="#000000" stroke="#000000" points="6987.2666,-18627.1502 6995.0217,-18619.9315 6984.4577,-18620.7385 6987.2666,-18627.1502"/>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge323" class="edge">
<title>scalaz.Equal[(Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M6036.2018,-18819.2874C6193.5967,-18810.3798 6409.1889,-18810.2704 6466.6717,-18869.8701 6479.9038,-18883.5895 6464.7004,-19196.6255 6474.6717,-19212.8701 6583.7535,-19390.5773 6833.9687,-19471.828 6964.0674,-19503.1837"/>
<polygon fill="#000000" stroke="#000000" points="6963.4487,-19506.6339 6973.9862,-19505.5336 6965.0624,-19499.8225 6963.4487,-19506.6339"/>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Float] -->
<g id="edge1318" class="edge">
<title>scalaz.Equal[(Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Float]</title>
<path fill="none" stroke="#000000" d="M6051.0194,-18844.9939C6170.2433,-18852.045 6327.4778,-18861.4011 6466.6717,-18869.8701 6637.2999,-18880.2515 6836.1733,-18892.6814 6950.9437,-18899.8869"/>
<polygon fill="#000000" stroke="#000000" points="6950.9027,-18903.3911 6961.1024,-18900.5248 6951.3415,-18896.4049 6950.9027,-18903.3911"/>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Long] -->
<g id="edge375" class="edge">
<title>scalaz.Equal[(Char, Boolean, String, Long, Float)]&#45;&gt;scalaz.Equal[Long]</title>
<path fill="none" stroke="#000000" d="M6069.3341,-18833.8701C6327.594,-18833.8701 6758.2055,-18833.8701 6949.4323,-18833.8701"/>
<polygon fill="#000000" stroke="#000000" points="6949.4647,-18837.3702 6959.4647,-18833.8701 6949.4646,-18830.3702 6949.4647,-18837.3702"/>
</g>
<!-- scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)]]&#45;&gt;scalaz.Equal[((String, Int)) =&gt; monocle.Arities] -->
<g id="edge976" class="edge">
<title>scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)]]&#45;&gt;scalaz.Equal[((String, Int)) =&gt; monocle.Arities]</title>
<path fill="none" stroke="#000000" d="M2221.9601,-17004.5533C2294.5127,-16986.943 2363.0465,-16954.2755 2410.7488,-16896.8701 2424.6325,-16880.1623 2404.8488,-16131.5641 2418.7488,-16114.8701 2942.7843,-15485.5 4117.1747,-15681.6948 4478.4346,-15760.2816"/>
<polygon fill="#000000" stroke="#000000" points="4477.8509,-15763.7367 4488.3683,-15762.4577 4479.3489,-15756.8988 4477.8509,-15763.7367"/>
</g>
<!-- scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)]]&#45;&gt;scalaz.Equal[monocle.Arities =&gt; Option[(String, Int)]] -->
<g id="edge575" class="edge">
<title>scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(String, Int),(String, Int)]]&#45;&gt;scalaz.Equal[monocle.Arities =&gt; Option[(String, Int)]]</title>
<path fill="none" stroke="#000000" d="M1989.7237,-17029.9945C2102.2027,-17051.1061 2270.709,-17080.2603 2418.7488,-17095.8701 2591.1413,-17114.0476 2786.8622,-17123.0558 2934.8655,-17127.515"/>
<polygon fill="#000000" stroke="#000000" points="2934.8917,-17131.0172 2944.9911,-17127.8153 2935.0993,-17124.0203 2934.8917,-17131.0172"/>
</g>
<!-- scalaz.Category[monocle.Traversal] -->
<g id="node1212" class="node">
<title>scalaz.Category[monocle.Traversal]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-55767.8701" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="553.6596" y="-55771.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Category[monocle.Traversal]</text>
<text text-anchor="middle" x="652.6596" y="-55756.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Char, Boolean, String, Long, Float)] -->
<g id="node1214" class="node">
<title>scala.reflect.ClassTag[(Int, Char, Boolean, String, Long, Float)]</title>
<ellipse fill="none" stroke="#000000" cx="7046.014" cy="-5709.8701" rx="259.5164" ry="26.7407"/>
<text text-anchor="start" x="6870.514" y="-5713.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Char, Boolean, String, Long, Float)]</text>
<text text-anchor="middle" x="7046.014" y="-5698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 5ms</text>
</g>
<!-- (=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P) -->
<g id="node1215" class="node">
<title>(=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-55839.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="494.6596" y="-55843.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-55828.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[(Int, Int)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge1235" class="edge">
<title>scalaz.Equal[(Int, Int)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5955.4327,-23106.9762C6107.5989,-23119.5217 6398.9982,-23133.1838 6466.6717,-23061.8701 6488.2023,-23039.1813 6456.084,-21961.0265 6474.6717,-21935.8701 6584.4457,-21787.3026 6816.9396,-21758.2446 6949.0114,-21754.3777"/>
<polygon fill="#000000" stroke="#000000" points="6949.2158,-21757.8738 6959.1253,-21754.1251 6949.041,-21750.876 6949.2158,-21757.8738"/>
</g>
<!-- org.scalacheck.Cogen[E] -->
<g id="node1218" class="node">
<title>org.scalacheck.Cogen[E]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-55911.8701" rx="108.375" ry="26.7407"/>
<text text-anchor="start" x="584.1596" y="-55915.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[E]</text>
<text text-anchor="middle" x="652.6596" y="-55900.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.FilterIndex[Map[K,V],K,V] -->
<g id="node1220" class="node">
<title>monocle.function.FilterIndex[Map[K,V],K,V]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-55983.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="525.6596" y="-55987.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[Map[K,V],K,V]</text>
<text text-anchor="middle" x="652.6596" y="-55972.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Each[shapeless.HNil,Boolean]&#45;&gt;shapeless.Generic.Aux[shapeless.HNil,SGen] -->
<g id="edge1369" class="edge">
<title>monocle.function.Each[shapeless.HNil,Boolean]&#45;&gt;shapeless.Generic.Aux[shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M9542.5811,-26811.977C9754.8688,-26818.6185 10092.1365,-26829.1702 10303.9853,-26835.798"/>
<polygon fill="#000000" stroke="#000000" points="10304.1871,-26839.306 10314.2917,-26836.1205 10304.4061,-26832.3094 10304.1871,-26839.306"/>
</g>
<!-- shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3]&#45;&gt;shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2] -->
<g id="edge940" class="edge">
<title>shapeless.ops.hlist.At[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3]&#45;&gt;shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2]</title>
<path fill="none" stroke="#000000" d="M3563.1891,-34581.8701C3769.7766,-34581.8701 4020.6929,-34581.8701 4222.3288,-34581.8701"/>
<polygon fill="#000000" stroke="#000000" points="4222.4982,-34585.3702 4232.4981,-34581.8701 4222.4981,-34578.3702 4222.4982,-34585.3702"/>
</g>
<!-- scalaz.Equal[(Int,)] -->
<g id="node1226" class="node">
<title>scalaz.Equal[(Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-22809.8701" rx="86.0347" ry="26.7407"/>
<text text-anchor="start" x="5809.0954" y="-22813.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int,)]</text>
<text text-anchor="middle" x="5862.0954" y="-22798.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- scalaz.Equal[(Int,)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge402" class="edge">
<title>scalaz.Equal[(Int,)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5944.3864,-22818.0326C6093.003,-22830.7513 6397.2353,-22846.8629 6466.6717,-22773.8701 6482.7163,-22757.0037 6460.8151,-21954.5757 6474.6717,-21935.8701 6584.627,-21787.4367 6817.0506,-21758.3268 6949.0624,-21754.4155"/>
<polygon fill="#000000" stroke="#000000" points="6949.2634,-21757.9116 6959.1716,-21754.1594 6949.0861,-21750.9138 6949.2634,-21757.9116"/>
</g>
<!-- org.scalacheck.Arbitrary[A =&gt; A] -->
<g id="node1228" class="node">
<title>org.scalacheck.Arbitrary[A =&gt; A]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-27785.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="5768.5954" y="-27789.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[A =&gt; A]</text>
<text text-anchor="middle" x="5862.0954" y="-27774.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Arbitrary[A =&gt; A]&#45;&gt;scala.reflect.ClassTag[A =&gt; A] -->
<g id="edge412" class="edge">
<title>org.scalacheck.Arbitrary[A =&gt; A]&#45;&gt;scala.reflect.ClassTag[A =&gt; A]</title>
<path fill="none" stroke="#000000" d="M6005.7881,-27785.8701C6233.6843,-27785.8701 6675.4376,-27785.8701 6902.9436,-27785.8701"/>
<polygon fill="#000000" stroke="#000000" points="6902.9467,-27789.3702 6912.9466,-27785.8701 6902.9466,-27782.3702 6902.9467,-27789.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[A =&gt; A]&#45;&gt;org.scalacheck.Arbitrary[A] -->
<g id="edge268" class="edge">
<title>org.scalacheck.Arbitrary[A =&gt; A]&#45;&gt;org.scalacheck.Arbitrary[A]</title>
<path fill="none" stroke="#000000" d="M5991.5672,-27774.185C6149.5024,-27763.1043 6403.333,-27756.5974 6466.6717,-27821.8701 6487.7274,-27843.5687 6454.9228,-28070.9756 6474.6717,-28093.8701 6587.7227,-28224.9277 6806.2987,-28226.0311 6937.8865,-28212.571"/>
<polygon fill="#000000" stroke="#000000" points="6938.4188,-28216.0341 6947.9904,-28211.4914 6937.6751,-28209.0737 6938.4188,-28216.0341"/>
</g>
<!-- org.scalacheck.Arbitrary[A =&gt; A]&#45;&gt;org.scalacheck.Cogen[A] -->
<g id="edge822" class="edge">
<title>org.scalacheck.Arbitrary[A =&gt; A]&#45;&gt;org.scalacheck.Cogen[A]</title>
<path fill="none" stroke="#000000" d="M5993.1383,-27796.8814C6150.3709,-27806.9875 6401.0677,-27812.1994 6466.6717,-27749.8701 6478.3426,-27738.7817 6464.4873,-27690.3376 6474.6717,-27677.8701 6584.6223,-27543.2712 6793.8066,-27505.955 6926.2597,-27496.2932"/>
<polygon fill="#000000" stroke="#000000" points="6926.7157,-27499.7702 6936.4524,-27495.5932 6926.236,-27492.7867 6926.7157,-27499.7702"/>
</g>
<!-- scala.reflect.ClassTag[BigInt] -->
<g id="node1229" class="node">
<title>scala.reflect.ClassTag[BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-56055.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="1780.534" y="-56059.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[BigInt]</text>
<text text-anchor="middle" x="1862.034" y="-56044.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 4ms</text>
</g>
<!-- monocle.function.Each[scalaz.OneAnd[List,Int],Int] -->
<g id="node1230" class="node">
<title>monocle.function.Each[scalaz.OneAnd[List,Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-26661.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="5719.0954" y="-26665.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[scalaz.OneAnd[List,Int],Int]</text>
<text text-anchor="middle" x="5862.0954" y="-26650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 78ms</text>
</g>
<!-- monocle.function.Each[scalaz.OneAnd[List,Int],Int]&#45;&gt;monocle.function.Each[List[Int],Int] -->
<g id="edge889" class="edge">
<title>monocle.function.Each[scalaz.OneAnd[List,Int],Int]&#45;&gt;monocle.function.Each[List[Int],Int]</title>
<path fill="none" stroke="#000000" d="M6055.7586,-26673.2742C6174.3896,-26680.2918 6329.3145,-26689.5129 6466.6717,-26697.8701 6610.8376,-26706.6415 6775.167,-26716.8752 6891.8957,-26724.1846"/>
<polygon fill="#000000" stroke="#000000" points="6891.7799,-26727.6841 6901.9791,-26724.8161 6892.2175,-26720.6978 6891.7799,-26727.6841"/>
</g>
<!-- monocle.function.Each[scalaz.OneAnd[List,Int],Int]&#45;&gt;monocle.function.Each[Int :: List[Int] :: shapeless.HNil,Int] -->
<g id="edge598" class="edge">
<title>monocle.function.Each[scalaz.OneAnd[List,Int],Int]&#45;&gt;monocle.function.Each[Int :: List[Int] :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M6075.8085,-26661.8701C6277.4177,-26661.8701 6579.7492,-26661.8701 6793.2423,-26661.8701"/>
<polygon fill="#000000" stroke="#000000" points="6793.3408,-26665.3702 6803.3407,-26661.8701 6793.3407,-26658.3702 6793.3408,-26665.3702"/>
</g>
<!-- monocle.function.Each[scalaz.OneAnd[List,Int],Int]&#45;&gt;shapeless.Generic.Aux[scalaz.OneAnd[List,Int],SGen] -->
<g id="edge524" class="edge">
<title>monocle.function.Each[scalaz.OneAnd[List,Int],Int]&#45;&gt;shapeless.Generic.Aux[scalaz.OneAnd[List,Int],SGen]</title>
<path fill="none" stroke="#000000" d="M6054.6172,-26650.1618C6269.2804,-26637.1071 6615.3054,-26616.0636 6836.5881,-26602.6063"/>
<polygon fill="#000000" stroke="#000000" points="6836.9326,-26606.0919 6846.7017,-26601.9912 6836.5076,-26599.1048 6836.9326,-26606.0919"/>
</g>
<!-- org.scalacheck.Shrink[(scala.collection.immutable.Map[Int,String], Int)] -->
<g id="node1231" class="node">
<title>org.scalacheck.Shrink[(scala.collection.immutable.Map[Int,String], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-270.8701" rx="292.9846" ry="26.7407"/>
<text text-anchor="start" x="2967.8678" y="-274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(scala.collection.immutable.Map[Int,String], Int)]</text>
<text text-anchor="middle" x="3166.8678" y="-259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 31ms</text>
</g>
<!-- org.scalacheck.Shrink[(scala.collection.immutable.Map[Int,String], Int)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge912" class="edge">
<title>org.scalacheck.Shrink[(scala.collection.immutable.Map[Int,String], Int)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M3423.4487,-283.8509C3817.6564,-303.0791 4596.1148,-338.2202 5257.5191,-350.8701 5391.8448,-353.4391 6353.2353,-422.8574 6466.6717,-350.8701 6473.7222,-346.3958 6467.7655,-338.5639 6474.6717,-333.8701 6618.7856,-235.9225 6833.4768,-255.2488 6954.4837,-277.1584"/>
<polygon fill="#000000" stroke="#000000" points="6953.9927,-280.627 6964.4633,-279.0098 6955.2695,-273.7444 6953.9927,-280.627"/>
</g>
<!-- org.scalacheck.Shrink[(scala.collection.immutable.Map[Int,String], Int)]&#45;&gt;org.scalacheck.Shrink[scala.collection.immutable.Map[Int,String]] -->
<g id="edge1111" class="edge">
<title>org.scalacheck.Shrink[(scala.collection.immutable.Map[Int,String], Int)]&#45;&gt;org.scalacheck.Shrink[scala.collection.immutable.Map[Int,String]]</title>
<path fill="none" stroke="#000000" d="M3429.6875,-259.0195C3686.4018,-247.4443 4074.6358,-229.9388 4329.317,-218.4553"/>
<polygon fill="#000000" stroke="#000000" points="4329.6201,-221.9453 4339.4523,-217.9983 4329.3047,-214.9524 4329.6201,-221.9453"/>
</g>
<!-- shapeless.ops.hlist.Last[Char :: Float :: Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Last[Float :: Long :: Double :: shapeless.HNil] -->
<g id="edge233" class="edge">
<title>shapeless.ops.hlist.Last[Char :: Float :: Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Last[Float :: Long :: Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M4881.361,-33798.8701C5093.7212,-33798.8701 5378.1833,-33798.8701 5586.0476,-33798.8701"/>
<polygon fill="#000000" stroke="#000000" points="5586.198,-33802.3702 5596.198,-33798.8701 5586.198,-33795.3702 5586.198,-33802.3702"/>
</g>
<!-- scala.reflect.ClassTag[Throwable] -->
<g id="node1233" class="node">
<title>scala.reflect.ClassTag[Throwable]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-38991.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="3073.3678" y="-38995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Throwable]</text>
<text text-anchor="middle" x="3166.8678" y="-38980.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Option[Int])] -->
<g id="node1234" class="node">
<title>org.scalacheck.Arbitrary[(Int, Option[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-15113.8701" rx="178.7961" ry="26.7407"/>
<text text-anchor="start" x="4467.753" y="-15117.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Option[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-15102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Option[Int])]&#45;&gt;org.scalacheck.Arbitrary[Option[Int]] -->
<g id="edge384" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Option[Int])]&#45;&gt;org.scalacheck.Arbitrary[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4763.3181,-15117.756C5010.4387,-15123.1794 5455.4531,-15132.9458 5696.3549,-15138.2327"/>
<polygon fill="#000000" stroke="#000000" points="5696.5336,-15141.7373 5706.608,-15138.4577 5696.6873,-15134.739 5696.5336,-15141.7373"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Option[Int])]&#45;&gt;scala.reflect.ClassTag[(Int, Option[Int])] -->
<g id="edge1290" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Option[Int])]&#45;&gt;scala.reflect.ClassTag[(Int, Option[Int])]</title>
<path fill="none" stroke="#000000" d="M4661.4125,-15089.4651C4800.1599,-15049.67 5096.303,-14990.2291 5249.5191,-15149.8701 5272.9102,-15174.242 5234.1921,-15733.4368 5257.5191,-15757.8701 5316.7559,-15819.9161 5546.0865,-15817.494 5704.6199,-15807.5784"/>
<polygon fill="#000000" stroke="#000000" points="5705.202,-15811.0484 5714.9573,-15806.9151 5704.7537,-15804.0627 5705.202,-15811.0484"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Option[Int])]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge604" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Option[Int])]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4764.5067,-15111.1232C5230.8079,-15103.7301 6451.8711,-15082.9514 6466.6717,-15067.8701 6480.3888,-15053.8929 6464.8887,-13674.8351 6474.6717,-13657.8701 6578.6225,-13477.6054 6821.123,-13384.7947 6954.3386,-13345.8767"/>
<polygon fill="#000000" stroke="#000000" points="6955.4904,-13349.1874 6964.1306,-13343.0557 6953.5525,-13342.4609 6955.4904,-13349.1874"/>
</g>
<!-- List[List[Int]] =&gt; ?{def shouldEqual: ?} -->
<g id="node1235" class="node">
<title>List[List[Int]] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-24177.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="542.1596" y="-24181.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[List[Int]] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-24166.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 17ms</text>
</g>
<!-- List[List[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge984" class="edge">
<title>List[List[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M796.7257,-24164.0501C967.6971,-24151.2198 1238.1382,-24143.3733 1305.3191,-24213.8701 1327.3957,-24237.0363 1291.3634,-25342.5892 1313.3191,-25365.8701 1434.6854,-25494.5613 1667.8223,-25455.8205 1787.3513,-25424.6016"/>
<polygon fill="#000000" stroke="#000000" points="1788.395,-25427.9457 1797.1577,-25421.9904 1786.5938,-25421.1814 1788.395,-25427.9457"/>
</g>
<!-- List[List[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1275" class="edge">
<title>List[List[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M810.6449,-24168.8305C977.444,-24162.3504 1226.9115,-24162.3219 1305.3191,-24213.8701 1709.4013,-24479.5293 1832.1539,-25131.0988 1856.8947,-25292.997"/>
<polygon fill="#000000" stroke="#000000" points="1853.4417,-25293.5723 1858.3845,-25302.9435 1860.3645,-25292.5353 1853.4417,-25293.5723"/>
</g>
<!-- scalaz.Choice[monocle.Getter] -->
<g id="node1236" class="node">
<title>scalaz.Choice[monocle.Getter]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-56127.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="568.1596" y="-56131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Choice[monocle.Getter]</text>
<text text-anchor="middle" x="652.6596" y="-56116.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scalaz.Equal[List[Int] \/ TraversalSpec.this.Location]&#45;&gt;scalaz.Order[TraversalSpec.this.Location] -->
<g id="edge1181" class="edge">
<title>scalaz.Equal[List[Int] \/ TraversalSpec.this.Location]&#45;&gt;scalaz.Order[TraversalSpec.this.Location]</title>
<path fill="none" stroke="#000000" d="M4710.5421,-20513.7902C4863.501,-20532.7645 5118.952,-20536.8252 5249.5191,-20383.8701 5268.4377,-20361.7076 5237.496,-18307.0399 5257.5191,-18285.8701 5315.9793,-18224.0618 5542.104,-18226.0091 5700.5669,-18235.8068"/>
<polygon fill="#000000" stroke="#000000" points="5700.7026,-18239.3224 5710.9042,-18236.4629 5701.146,-18232.3364 5700.7026,-18239.3224"/>
</g>
<!-- scalaz.Equal[List[Int] \/ TraversalSpec.this.Location]&#45;&gt;scalaz.Equal[TraversalSpec.this.Location] -->
<g id="edge986" class="edge">
<title>scalaz.Equal[List[Int] \/ TraversalSpec.this.Location]&#45;&gt;scalaz.Equal[TraversalSpec.this.Location]</title>
<path fill="none" stroke="#000000" d="M4710.5388,-20513.7874C4863.4942,-20532.7587 5118.9416,-20536.8164 5249.5191,-20383.8701 5267.7899,-20362.4694 5238.1818,-18378.3121 5257.5191,-18357.8701 5315.9835,-18296.0658 5542.1071,-18298.012 5700.5686,-18307.8084"/>
<polygon fill="#000000" stroke="#000000" points="5700.7042,-18311.324 5710.9058,-18308.4644 5701.1476,-18304.338 5700.7042,-18311.324"/>
</g>
<!-- scalaz.Equal[List[Int] \/ TraversalSpec.this.Location]&#45;&gt;scalaz.Order[List[Int]] -->
<g id="edge987" class="edge">
<title>scalaz.Equal[List[Int] \/ TraversalSpec.this.Location]&#45;&gt;scalaz.Order[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4782.0629,-20481.0913C4935.2976,-20484.465 5140.1606,-20517.4266 5249.5191,-20654.8701 5268.7878,-20679.0873 5236.135,-21189.4988 5257.5191,-21211.8701 5324.0803,-21281.5039 5605.0683,-21269.9013 5759.442,-21257.6778"/>
<polygon fill="#000000" stroke="#000000" points="5759.7375,-21261.1654 5769.4236,-21256.8726 5759.1746,-21254.1881 5759.7375,-21261.1654"/>
</g>
<!-- scalaz.Equal[List[Int] \/ TraversalSpec.this.Location]&#45;&gt;scalaz.Equal[List[Int]] -->
<g id="edge1141" class="edge">
<title>scalaz.Equal[List[Int] \/ TraversalSpec.this.Location]&#45;&gt;scalaz.Equal[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4781.8045,-20480.9801C4935.1567,-20484.2467 5140.3117,-20517.1173 5249.5191,-20654.8701 5262.2725,-20670.957 5243.3603,-21379.0051 5257.5191,-21393.8701 5323.9571,-21463.6215 5604.9982,-21451.9682 5759.4122,-21439.7063"/>
<polygon fill="#000000" stroke="#000000" points="5759.7112,-21443.1936 5769.3964,-21438.8986 5759.1467,-21436.2164 5759.7112,-21443.1936"/>
</g>
<!-- scalaz.Equal[(Boolean, String)] -->
<g id="node1240" class="node">
<title>scalaz.Equal[(Boolean, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-18761.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="5776.0954" y="-18765.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Boolean, String)]</text>
<text text-anchor="middle" x="5862.0954" y="-18750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[(Boolean, String)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge101" class="edge">
<title>scalaz.Equal[(Boolean, String)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M5982.9787,-18750.6132C6140.3456,-18738.9447 6402.8611,-18730.6819 6466.6717,-18797.8701 6485.9927,-18818.2137 6461.0185,-19783.3598 6474.6717,-19807.8701 6582.2657,-20001.0236 6841.3932,-20104.9617 6970.4056,-20146.3083"/>
<polygon fill="#000000" stroke="#000000" points="6969.6288,-20149.7334 6980.2188,-20149.4128 6971.7403,-20143.0594 6969.6288,-20149.7334"/>
</g>
<!-- scalaz.Equal[(Boolean, String)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge41" class="edge">
<title>scalaz.Equal[(Boolean, String)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M5994.7883,-18760.0469C6117.6842,-18756.9214 6305.2721,-18748.4969 6466.6717,-18725.8701 6647.6965,-18700.4919 6856.0288,-18648.3418 6966.8978,-18618.7093"/>
<polygon fill="#000000" stroke="#000000" points="6967.9146,-18622.0603 6976.6664,-18616.0891 6966.1011,-18615.2993 6967.9146,-18622.0603"/>
</g>
<!-- org.scalacheck.Arbitrary[java.util.UUID =&gt; java.util.UUID] -->
<g id="node1241" class="node">
<title>org.scalacheck.Arbitrary[java.util.UUID =&gt; java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-44319.8701" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="487.1596" y="-44323.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[java.util.UUID =&gt; java.util.UUID]</text>
<text text-anchor="middle" x="652.6596" y="-44308.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[java.util.UUID =&gt; java.util.UUID]&#45;&gt;scala.reflect.ClassTag[java.util.UUID =&gt; java.util.UUID] -->
<g id="edge533" class="edge">
<title>org.scalacheck.Arbitrary[java.util.UUID =&gt; java.util.UUID]&#45;&gt;scala.reflect.ClassTag[java.util.UUID =&gt; java.util.UUID]</title>
<path fill="none" stroke="#000000" d="M868.5228,-44332.7215C1087.2756,-44345.7449 1423.9148,-44365.7867 1643.5894,-44378.865"/>
<polygon fill="#000000" stroke="#000000" points="1643.4441,-44382.3624 1653.6344,-44379.463 1643.8601,-44375.3748 1643.4441,-44382.3624"/>
</g>
<!-- org.scalacheck.Arbitrary[java.util.UUID =&gt; java.util.UUID]&#45;&gt;org.scalacheck.Arbitrary[java.util.UUID] -->
<g id="edge1156" class="edge">
<title>org.scalacheck.Arbitrary[java.util.UUID =&gt; java.util.UUID]&#45;&gt;org.scalacheck.Arbitrary[java.util.UUID]</title>
<path fill="none" stroke="#000000" d="M898.123,-44319.8701C1129.9315,-44319.8701 1472.2241,-44319.8701 1680.4139,-44319.8701"/>
<polygon fill="#000000" stroke="#000000" points="1680.5336,-44323.3702 1690.5336,-44319.8701 1680.5336,-44316.3702 1680.5336,-44323.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[java.util.UUID =&gt; java.util.UUID]&#45;&gt;org.scalacheck.Cogen[java.util.UUID] -->
<g id="edge512" class="edge">
<title>org.scalacheck.Arbitrary[java.util.UUID =&gt; java.util.UUID]&#45;&gt;org.scalacheck.Cogen[java.util.UUID]</title>
<path fill="none" stroke="#000000" d="M873.9709,-44308.1845C1000.3434,-44301.3811 1161.7392,-44292.472 1305.3191,-44283.8701 1439.2695,-44275.845 1591.2956,-44265.9617 1702.5968,-44258.5822"/>
<polygon fill="#000000" stroke="#000000" points="1703.1536,-44262.0531 1712.8999,-44257.8985 1702.6901,-44255.0684 1703.1536,-44262.0531"/>
</g>
<!-- scalaz.Equal[Option[(String, Int)]]&#45;&gt;scalaz.Equal[(String, Int)] -->
<g id="edge343" class="edge">
<title>scalaz.Equal[Option[(String, Int)]]&#45;&gt;scalaz.Equal[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M4700.116,-20331.2387C4847.0979,-20316.6916 5101.5021,-20316.0941 5249.5191,-20455.8701 5261.4358,-20467.1233 5245.0446,-20481.2386 5257.5191,-20491.8701 5328.4361,-20552.3094 5590.9355,-20546.3171 5745.7541,-20536.9081"/>
<polygon fill="#000000" stroke="#000000" points="5746.0293,-20540.3978 5755.7929,-20536.284 5745.5949,-20533.4113 5746.0293,-20540.3978"/>
</g>
<!-- Option[List[Unit]] =&gt; ?{def shouldEqual: ?} -->
<g id="node1247" class="node">
<title>Option[List[Unit]] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-24105.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="529.1596" y="-24109.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[List[Unit]] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-24094.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- Option[List[Unit]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge766" class="edge">
<title>Option[List[Unit]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M808.4601,-24091.1848C979.8154,-24078.8962 1239.6691,-24072.9516 1305.3191,-24141.8701 1328.7704,-24166.4889 1289.9963,-25341.1295 1313.3191,-25365.8701 1434.6591,-25494.5861 1667.8078,-25455.8342 1787.3453,-25424.6072"/>
<polygon fill="#000000" stroke="#000000" points="1788.39,-25427.9511 1797.1524,-25421.9954 1786.5884,-25421.1869 1788.39,-25427.9511"/>
</g>
<!-- Option[List[Unit]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge334" class="edge">
<title>Option[List[Unit]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M825.474,-24095.9022C992.0948,-24089.699 1229.7826,-24090.8734 1305.3191,-24141.8701 1728.5451,-24427.6012 1837.4565,-25123.996 1857.9873,-25292.6396"/>
<polygon fill="#000000" stroke="#000000" points="1854.5333,-25293.2351 1859.1885,-25302.7525 1861.4845,-25292.4094 1854.5333,-25293.2351"/>
</g>
<!-- scalaz.Equal[V] -->
<g id="node1248" class="node">
<title>scalaz.Equal[V]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-56199.8701" rx="73.5782" ry="26.7407"/>
<text text-anchor="start" x="608.6596" y="-56203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[V]</text>
<text text-anchor="middle" x="652.6596" y="-56188.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Float :: Char :: Boolean :: Int :: shapeless.HNil,Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Double :: shapeless.HNil,HListSpec.this.ReverseH] -->
<g id="edge929" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Float :: Char :: Boolean :: Int :: shapeless.HNil,Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: Float :: Char :: Boolean :: Int :: shapeless.HNil,Double :: shapeless.HNil,HListSpec.this.ReverseH]</title>
<path fill="none" stroke="#000000" d="M8768.2483,-23673.8701C8768.407,-23673.8701 8768.5657,-23673.8701 8768.7245,-23673.8701"/>
<polygon fill="#000000" stroke="#000000" points="8765.8667,-23677.3702 8775.8667,-23673.8701 8765.8666,-23670.3702 8765.8667,-23677.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.CNel] -->
<g id="node1251" class="node">
<title>org.scalacheck.Arbitrary[monocle.function.CNel]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-37875.8701" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="516.6596" y="-37879.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.function.CNel]</text>
<text text-anchor="middle" x="652.6596" y="-37864.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 9ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.function.CNel]&#45;&gt;scala.reflect.ClassTag[monocle.function.CNel] -->
<g id="edge964" class="edge">
<title>org.scalacheck.Arbitrary[monocle.function.CNel]&#45;&gt;scala.reflect.ClassTag[monocle.function.CNel]</title>
<path fill="none" stroke="#000000" d="M856.4459,-37875.8701C1079.7041,-37875.8701 1435.6639,-37875.8701 1658.7306,-37875.8701"/>
<polygon fill="#000000" stroke="#000000" points="1658.9207,-37879.3702 1668.9206,-37875.8701 1658.9206,-37872.3702 1658.9207,-37879.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar =&gt; monocle.refined.UpperCaseChar] -->
<g id="node1252" class="node">
<title>org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar =&gt; monocle.refined.UpperCaseChar]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-1953.8701" rx="383.0039" ry="26.7407"/>
<text text-anchor="start" x="4323.253" y="-1957.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar =&gt; monocle.refined.UpperCaseChar]</text>
<text text-anchor="middle" x="4586.253" y="-1942.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar =&gt; monocle.refined.UpperCaseChar]&#45;&gt;org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar] -->
<g id="edge508" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar =&gt; monocle.refined.UpperCaseChar]&#45;&gt;org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar]</title>
<path fill="none" stroke="#000000" d="M4663.9279,-1927.5126C4787.8131,-1886.7388 5038.5218,-1809.376 5257.5191,-1773.8701 5373.6437,-1755.0428 5503.7425,-1745.7959 5613.4207,-1741.3515"/>
<polygon fill="#000000" stroke="#000000" points="5613.7775,-1744.8403 5623.6319,-1740.9492 5613.5019,-1737.8457 5613.7775,-1744.8403"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar =&gt; monocle.refined.UpperCaseChar]&#45;&gt;org.scalacheck.Cogen[monocle.refined.UpperCaseChar] -->
<g id="edge1305" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar =&gt; monocle.refined.UpperCaseChar]&#45;&gt;org.scalacheck.Cogen[monocle.refined.UpperCaseChar]</title>
<path fill="none" stroke="#000000" d="M4884.9785,-1970.7281C5117.9407,-1983.8749 5436.0063,-2001.8244 5645.1,-2013.6243"/>
<polygon fill="#000000" stroke="#000000" points="5645.1032,-2017.1299 5655.2846,-2014.199 5645.4977,-2010.1411 5645.1032,-2017.1299"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar =&gt; monocle.refined.UpperCaseChar]&#45;&gt;scala.reflect.ClassTag[monocle.refined.UpperCaseChar =&gt; monocle.refined.UpperCaseChar] -->
<g id="edge423" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.UpperCaseChar =&gt; monocle.refined.UpperCaseChar]&#45;&gt;scala.reflect.ClassTag[monocle.refined.UpperCaseChar =&gt; monocle.refined.UpperCaseChar]</title>
<path fill="none" stroke="#000000" d="M4969.9126,-1953.8701C5131.1054,-1953.8701 5318.1957,-1953.8701 5479.2962,-1953.8701"/>
<polygon fill="#000000" stroke="#000000" points="5479.3806,-1957.3702 5489.3806,-1953.8701 5479.3805,-1950.3702 5479.3806,-1957.3702"/>
</g>
<!-- monocle.function.Possible[Unit \/ Int,Int] -->
<g id="node1253" class="node">
<title>monocle.function.Possible[Unit \/ Int,Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-56271.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="541.1596" y="-56275.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Possible[Unit / Int,Int]</text>
<text text-anchor="middle" x="652.6596" y="-56260.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[Option[String]] -->
<g id="node1254" class="node">
<title>org.scalactic.Equality[Option[String]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-20239.8701" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="4482.753" y="-20243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[String]]</text>
<text text-anchor="middle" x="4586.253" y="-20228.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 11ms</text>
</g>
<!-- org.scalactic.Equality[Option[String]]&#45;&gt;scalaz.Equal[Option[String]] -->
<g id="edge596" class="edge">
<title>org.scalactic.Equality[Option[String]]&#45;&gt;scalaz.Equal[Option[String]]</title>
<path fill="none" stroke="#000000" d="M4743.9759,-20239.8701C4997.844,-20239.8701 5492.5432,-20239.8701 5729.4389,-20239.8701"/>
<polygon fill="#000000" stroke="#000000" points="5729.4859,-20243.3702 5739.4859,-20239.8701 5729.4859,-20236.3702 5729.4859,-20243.3702"/>
</g>
<!-- scala.reflect.ClassTag[((Int, Stream[Int])) =&gt; (Int, Stream[Int])] -->
<g id="node1256" class="node">
<title>scala.reflect.ClassTag[((Int, Stream[Int])) =&gt; (Int, Stream[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-12643.8701" rx="259.5164" ry="26.7407"/>
<text text-anchor="start" x="4410.753" y="-12647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((Int, Stream[Int])) =&gt; (Int, Stream[Int])]</text>
<text text-anchor="middle" x="4586.253" y="-12632.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[BigDecimal] -->
<g id="node1258" class="node">
<title>org.scalacheck.Arbitrary[BigDecimal]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-35301.8701" rx="159.6125" ry="26.7407"/>
<text text-anchor="start" x="547.6596" y="-35305.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[BigDecimal]</text>
<text text-anchor="middle" x="652.6596" y="-35290.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 11ms</text>
</g>
<!-- org.scalacheck.Arbitrary[BigDecimal]&#45;&gt;scala.reflect.ClassTag[BigDecimal] -->
<g id="edge1240" class="edge">
<title>org.scalacheck.Arbitrary[BigDecimal]&#45;&gt;scala.reflect.ClassTag[BigDecimal]</title>
<path fill="none" stroke="#000000" d="M812.631,-35301.8701C1044.3066,-35301.8701 1470.7503,-35301.8701 1702.2954,-35301.8701"/>
<polygon fill="#000000" stroke="#000000" points="1702.4915,-35305.3702 1712.4915,-35301.8701 1702.4915,-35298.3702 1702.4915,-35305.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: shapeless.HNil,Int :: shapeless.HNil,Out] -->
<g id="node1278" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: shapeless.HNil,Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-30063.8701" rx="346.4646" ry="26.7407"/>
<text text-anchor="start" x="5625.0954" y="-30067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Char :: shapeless.HNil,Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="5862.0954" y="-30052.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Char :: Int :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: shapeless.HNil,Int :: shapeless.HNil,Out] -->
<g id="edge315" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Char :: Int :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: shapeless.HNil,Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M4937.8372,-30063.8701C5114.4748,-30063.8701 5328.0711,-30063.8701 5505.4119,-30063.8701"/>
<polygon fill="#000000" stroke="#000000" points="5505.4307,-30067.3702 5515.4307,-30063.8701 5505.4306,-30060.3702 5505.4307,-30067.3702"/>
</g>
<!-- scalaz.Equal[scalaz.OneAnd[Stream,Int]] -->
<g id="node1260" class="node">
<title>scalaz.Equal[scalaz.OneAnd[Stream,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-22311.8701" rx="171.6541" ry="26.7407"/>
<text text-anchor="start" x="4472.753" y="-22315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.OneAnd[Stream,Int]]</text>
<text text-anchor="middle" x="4586.253" y="-22300.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scalaz.Equal[scalaz.OneAnd[Stream,Int]]&#45;&gt;scalaz.Equal[Stream[Int]] -->
<g id="edge1197" class="edge">
<title>scalaz.Equal[scalaz.OneAnd[Stream,Int]]&#45;&gt;scalaz.Equal[Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4705.1264,-22292.4264C4855.7346,-22275.3099 5112.1787,-22272.645 5249.5191,-22421.8701 5264.3161,-22437.9474 5241.8998,-22504.5903 5257.5191,-22519.8701 5324.5856,-22585.4786 5591.9386,-22577.1101 5747.7494,-22566.0208"/>
<polygon fill="#000000" stroke="#000000" points="5748.1277,-22569.5027 5757.8478,-22565.2872 5747.6204,-22562.5211 5748.1277,-22569.5027"/>
</g>
<!-- scalaz.Equal[scalaz.OneAnd[Stream,Int]]&#45;&gt;scalaz.Order[Stream[Int]] -->
<g id="edge658" class="edge">
<title>scalaz.Equal[scalaz.OneAnd[Stream,Int]]&#45;&gt;scalaz.Order[Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4729.6564,-22297.0476C4876.4253,-22289.902 5103.1528,-22302.1514 5249.5191,-22421.8701 5257.25,-22428.1935 5249.4918,-22436.9274 5257.5191,-22442.8701 5331.9083,-22497.9404 5589.6546,-22496.677 5743.5602,-22490.5031"/>
<polygon fill="#000000" stroke="#000000" points="5744.1546,-22493.9816 5754.0011,-22490.0704 5743.8647,-22486.9876 5744.1546,-22493.9816"/>
</g>
<!-- scalaz.Equal[scalaz.OneAnd[Stream,Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge622" class="edge">
<title>scalaz.Equal[scalaz.OneAnd[Stream,Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4739.7891,-22299.7262C4875.784,-22289.3571 5079.7477,-22274.7515 5257.5191,-22265.8701 5324.6437,-22262.5165 6419.244,-22275.4891 6466.6717,-22227.8701 6478.1237,-22216.3718 6464.8959,-21948.8235 6474.6717,-21935.8701 6585.7943,-21788.6259 6817.2228,-21759.0122 6948.8916,-21754.7106"/>
<polygon fill="#000000" stroke="#000000" points="6949.0787,-21758.2068 6958.9753,-21754.4243 6948.88,-21751.2096 6949.0787,-21758.2068"/>
</g>
<!-- scalaz.Equal[scalaz.OneAnd[Stream,Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge175" class="edge">
<title>scalaz.Equal[scalaz.OneAnd[Stream,Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M4673.501,-22335.0987C4817.4539,-22367.5315 5103.3085,-22405.9619 5249.5191,-22246.8701 5272.0392,-22222.3659 5234.1996,-21671.6147 5257.5191,-21647.8701 5304.6115,-21599.9194 6404.9755,-21636.5259 6466.6717,-21609.8701 6742.6287,-21490.6427 6958.1776,-21173.6671 7024.6671,-21067.2639"/>
<polygon fill="#000000" stroke="#000000" points="7027.802,-21068.85 7030.0987,-21058.5071 7021.8533,-21065.1602 7027.802,-21068.85"/>
</g>
<!-- shapeless.ops.hlist.Reverse[HListSpec.this.ReverseH] -->
<g id="node1261" class="node">
<title>shapeless.ops.hlist.Reverse[HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-32043.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="505.1596" y="-32047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse[HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="652.6596" y="-32032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 22ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse[HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.ReverseH,Out0] -->
<g id="edge1099" class="edge">
<title>shapeless.ops.hlist.Reverse[HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.ReverseH,Out0]</title>
<path fill="none" stroke="#000000" d="M872.7202,-32043.8701C1050.9853,-32043.8701 1305.4988,-32043.8701 1511.7325,-32043.8701"/>
<polygon fill="#000000" stroke="#000000" points="1511.8257,-32047.3702 1521.8257,-32043.8701 1511.8257,-32040.3702 1511.8257,-32047.3702"/>
</g>
<!-- org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)]] -->
<g id="node1263" class="node">
<title>org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-16512.8701" rx="584.1404" ry="26.7407"/>
<text text-anchor="start" x="247.6596" y="-16516.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)]]</text>
<text text-anchor="middle" x="652.6596" y="-16501.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 50ms</text>
</g>
<!-- org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)]] -->
<g id="edge793" class="edge">
<title>org.scalactic.Equality[monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)]]&#45;&gt;scalaz.Equal[monocle.PPrism[monocle.Arities,monocle.Arities,(Char, Boolean, String, Int, Double),(Char, Boolean, String, Int, Double)]]</title>
<path fill="none" stroke="#000000" d="M1236.9774,-16512.8701C1258.9571,-16512.8701 1280.9727,-16512.8701 1302.9078,-16512.8701"/>
<polygon fill="#000000" stroke="#000000" points="1302.9801,-16516.3702 1312.9801,-16512.8701 1302.98,-16509.3702 1302.9801,-16516.3702"/>
</g>
<!-- monocle.function.Empty[scalaz.IList[Char]] -->
<g id="node1264" class="node">
<title>monocle.function.Empty[scalaz.IList[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-56343.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="530.6596" y="-56347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[scalaz.IList[Char]]</text>
<text text-anchor="middle" x="652.6596" y="-56332.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.Cofree[Stream,A]] -->
<g id="node1266" class="node">
<title>org.scalacheck.Cogen[scalaz.Cofree[Stream,A]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-27493.8701" rx="197.9798" ry="26.7407"/>
<text text-anchor="start" x="5730.0954" y="-27497.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[scalaz.Cofree[Stream,A]]</text>
<text text-anchor="middle" x="5862.0954" y="-27482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Cogen[scalaz.Cofree[Stream,A]]&#45;&gt;org.scalacheck.Cogen[A] -->
<g id="edge1306" class="edge">
<title>org.scalacheck.Cogen[scalaz.Cofree[Stream,A]]&#45;&gt;org.scalacheck.Cogen[A]</title>
<path fill="none" stroke="#000000" d="M6060.2568,-27493.8701C6307.5401,-27493.8701 6722.6155,-27493.8701 6926.1432,-27493.8701"/>
<polygon fill="#000000" stroke="#000000" points="6926.2683,-27497.3702 6936.2683,-27493.8701 6926.2683,-27490.3702 6926.2683,-27497.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Boolean \/ (String \/ Int)] -->
<g id="node1267" class="node">
<title>org.scalacheck.Arbitrary[Boolean \/ (String \/ Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-8190.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="4452.253" y="-8194.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Boolean / (String / Int)]</text>
<text text-anchor="middle" x="4586.253" y="-8179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Boolean \/ (String \/ Int)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge148" class="edge">
<title>org.scalacheck.Arbitrary[Boolean \/ (String \/ Int)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M4775.393,-8200.0275C4929.4989,-8196.0764 5139.0412,-8162.3148 5249.5191,-8021.8701 5261.1983,-8007.023 5244.3103,-7355.3744 5257.5191,-7341.8701 5351.5161,-7245.7695 6372.6532,-7396.9495 6466.6717,-7300.8701 6479.3978,-7287.865 6462.1357,-6659.0585 6474.6717,-6645.8701 6531.3996,-6586.1898 6754.0395,-6588.6832 6904.0581,-6597.869"/>
<polygon fill="#000000" stroke="#000000" points="6904.081,-6601.3773 6914.2811,-6598.5121 6904.5206,-6594.3911 6904.081,-6601.3773"/>
</g>
<!-- org.scalacheck.Arbitrary[Boolean \/ (String \/ Int)]&#45;&gt;org.scalacheck.Arbitrary[String \/ Int] -->
<g id="edge76" class="edge">
<title>org.scalacheck.Arbitrary[Boolean \/ (String \/ Int)]&#45;&gt;org.scalacheck.Arbitrary[String \/ Int]</title>
<path fill="none" stroke="#000000" d="M4769.2064,-8179.7117C4923.7963,-8181.3953 5137.4344,-8212.1566 5249.5191,-8353.8701 5265.6487,-8374.2634 5239.6077,-9271.0224 5257.5191,-9289.8701 5317.853,-9353.3577 5555.6864,-9349.4612 5714.4532,-9338.9956"/>
<polygon fill="#000000" stroke="#000000" points="5715.0524,-9342.4632 5724.7939,-9338.2974 5714.5808,-9335.4791 5715.0524,-9342.4632"/>
</g>
<!-- scalaz.Equal[scalaz.Validation[String,Int]] -->
<g id="node1268" class="node">
<title>scalaz.Equal[scalaz.Validation[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-21971.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="5746.0954" y="-21975.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Validation[String,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-21960.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 11ms</text>
</g>
<!-- scalaz.Equal[scalaz.Validation[String,Int]]&#45;&gt;scalaz.Order[String] -->
<g id="edge790" class="edge">
<title>scalaz.Equal[scalaz.Validation[String,Int]]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M6037.7425,-21971.8701C6289.4828,-21971.8701 6744.6516,-21971.8701 6945.8035,-21971.8701"/>
<polygon fill="#000000" stroke="#000000" points="6946.063,-21975.3702 6956.063,-21971.8701 6946.0629,-21968.3702 6946.063,-21975.3702"/>
</g>
<!-- scalaz.Equal[scalaz.Validation[String,Int]]&#45;&gt;scalaz.Equal[String] -->
<g id="edge135" class="edge">
<title>scalaz.Equal[scalaz.Validation[String,Int]]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M6014.3119,-21985.2943C6173.0354,-21995.5303 6406.9156,-21998.752 6466.6717,-21935.8701 6475.6655,-21926.4058 6470.7354,-21008.3186 6474.6717,-20995.8701 6586.5136,-20642.1684 6906.0759,-20305.4046 7011.6771,-20200.959"/>
<polygon fill="#000000" stroke="#000000" points="7014.2342,-20203.3532 7018.9049,-20193.8434 7009.3233,-20198.3649 7014.2342,-20203.3532"/>
</g>
<!-- scalaz.Equal[scalaz.Validation[String,Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge1053" class="edge">
<title>scalaz.Equal[scalaz.Validation[String,Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M6037.7146,-21972.5718C6159.0938,-21970.3419 6323.7931,-21961.9225 6466.6717,-21935.8701 6659.5893,-21900.6935 6878.3386,-21821.472 6983.2998,-21780.8798"/>
<polygon fill="#000000" stroke="#000000" points="6984.738,-21784.076 6992.793,-21777.1935 6982.2042,-21777.5506 6984.738,-21784.076"/>
</g>
<!-- scalaz.Equal[MacroOutSideMonocleSpec.this.Example2] -->
<g id="node1269" class="node">
<title>scalaz.Equal[MacroOutSideMonocleSpec.this.Example2]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-56415.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="494.6596" y="-56419.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[MacroOutSideMonocleSpec.this.Example2]</text>
<text text-anchor="middle" x="652.6596" y="-56404.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[(Boolean, String)]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge420" class="edge">
<title>org.scalacheck.Cogen[(Boolean, String)]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M6020.8993,-6007.2138C6142.8399,-6014.4158 6315.4082,-6024.6668 6466.6717,-6033.8701 6620.6115,-6043.2361 6797.5416,-6054.2695 6914.9596,-6061.6295"/>
<polygon fill="#000000" stroke="#000000" points="6914.8732,-6065.1309 6925.0726,-6062.2636 6915.3112,-6058.1446 6914.8732,-6065.1309"/>
</g>
<!-- org.scalacheck.Cogen[(Boolean, String)]&#45;&gt;org.scalacheck.Cogen[Boolean] -->
<g id="edge31" class="edge">
<title>org.scalacheck.Cogen[(Boolean, String)]&#45;&gt;org.scalacheck.Cogen[Boolean]</title>
<path fill="none" stroke="#000000" d="M6009.9489,-5984.7772C6168.6676,-5974.3701 6406.2278,-5970.5542 6466.6717,-6033.8701 6490.1511,-6058.4651 6451.2348,-6621.2346 6474.6717,-6645.8701 6599.7308,-6777.3248 6836.9704,-6739.6031 6962.8007,-6707.1396"/>
<polygon fill="#000000" stroke="#000000" points="6963.9929,-6710.4452 6972.7741,-6704.5172 6962.2127,-6703.6753 6963.9929,-6710.4452"/>
</g>
<!-- a2.type =&gt; ?{def reverse: ?} -->
<g id="node1271" class="node">
<title>a2.type =&gt; ?{def reverse: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-56487.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="574.1596" y="-56491.6701" font-family="Times,serif" font-size="14.00" fill="#000000">a2.type =&gt; ?{def reverse: ?}</text>
<text text-anchor="middle" x="652.6596" y="-56476.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[Stream[scalaz.Cofree[Stream,A]]]&#45;&gt;org.scalacheck.Cogen[scalaz.Cofree[Stream,A]] -->
<g id="edge810" class="edge">
<title>org.scalacheck.Cogen[Stream[scalaz.Cofree[Stream,A]]]&#45;&gt;org.scalacheck.Cogen[scalaz.Cofree[Stream,A]]</title>
<path fill="none" stroke="#000000" d="M4818.4082,-27493.8701C5056.8459,-27493.8701 5424.5871,-27493.8701 5653.888,-27493.8701"/>
<polygon fill="#000000" stroke="#000000" points="5654.0219,-27497.3702 5664.0218,-27493.8701 5654.0218,-27490.3702 5654.0219,-27497.3702"/>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[IsoSpec.this.IntWrapper]] -->
<g id="node1273" class="node">
<title>org.scalactic.Equality[scalaz.Id.Id[IsoSpec.this.IntWrapper]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-52959.8701" rx="246.1463" ry="26.7407"/>
<text text-anchor="start" x="486.6596" y="-52963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scalaz.Id.Id[IsoSpec.this.IntWrapper]]</text>
<text text-anchor="middle" x="652.6596" y="-52948.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[IsoSpec.this.IntWrapper]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[IsoSpec.this.IntWrapper]] -->
<g id="edge335" class="edge">
<title>org.scalactic.Equality[scalaz.Id.Id[IsoSpec.this.IntWrapper]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[IsoSpec.this.IntWrapper]]</title>
<path fill="none" stroke="#000000" d="M898.8522,-52959.8701C1116.2932,-52959.8701 1430.5281,-52959.8701 1640.2914,-52959.8701"/>
<polygon fill="#000000" stroke="#000000" points="1640.5125,-52963.3702 1650.5125,-52959.8701 1640.5124,-52956.3702 1640.5125,-52963.3702"/>
</g>
<!-- org.scalactic.Equality[List[Int]] -->
<g id="node1274" class="node">
<title>org.scalactic.Equality[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-21429.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="4500.253" y="-21433.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[List[Int]]</text>
<text text-anchor="middle" x="4586.253" y="-21418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 44ms</text>
</g>
<!-- org.scalactic.Equality[List[Int]]&#45;&gt;scalaz.Equal[List[Int]] -->
<g id="edge930" class="edge">
<title>org.scalactic.Equality[List[Int]]&#45;&gt;scalaz.Equal[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4719.4793,-21429.8701C4973.0734,-21429.8701 5520.6132,-21429.8701 5753.5994,-21429.8701"/>
<polygon fill="#000000" stroke="#000000" points="5753.7797,-21433.3702 5763.7797,-21429.8701 5753.7797,-21426.3702 5753.7797,-21433.3702"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P) -->
<g id="node1275" class="node">
<title>(Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-56559.8701" rx="260.8448" ry="26.7407"/>
<text text-anchor="start" x="476.1596" y="-56563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-56548.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[Option[Long]] -->
<g id="node1276" class="node">
<title>org.scalactic.Equality[Option[Long]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-18177.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="4485.253" y="-18181.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[Long]]</text>
<text text-anchor="middle" x="4586.253" y="-18166.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[Option[Long]]&#45;&gt;scalaz.Equal[Option[Long]] -->
<g id="edge12" class="edge">
<title>org.scalactic.Equality[Option[Long]]&#45;&gt;scalaz.Equal[Option[Long]]</title>
<path fill="none" stroke="#000000" d="M4740.4668,-18177.8701C4994.2687,-18177.8701 5495.4275,-18177.8701 5732.2761,-18177.8701"/>
<polygon fill="#000000" stroke="#000000" points="5732.317,-18181.3702 5742.317,-18177.8701 5732.317,-18174.3702 5732.317,-18181.3702"/>
</g>
<!-- monocle.function.Cons1[monocle.function.CNel,Char,scalaz.IList[Char]] -->
<g id="node1277" class="node">
<title>monocle.function.Cons1[monocle.function.CNel,Char,scalaz.IList[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-56631.8701" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="451.1596" y="-56635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons1[monocle.function.CNel,Char,scalaz.IList[Char]]</text>
<text text-anchor="middle" x="652.6596" y="-56620.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: shapeless.HNil,Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="edge949" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: shapeless.HNil,Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: shapeless.HNil,shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M6208.9118,-30063.8701C6359.9114,-30063.8701 6536.7583,-30063.8701 6688.9024,-30063.8701"/>
<polygon fill="#000000" stroke="#000000" points="6689.3502,-30067.3702 6699.3501,-30063.8701 6689.3501,-30060.3702 6689.3502,-30067.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Unit \/ Int =&gt; Unit \/ Int] -->
<g id="node1280" class="node">
<title>org.scalacheck.Arbitrary[Unit \/ Int =&gt; Unit \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-10150.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="4452.253" y="-10154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Unit / Int =&gt; Unit / Int]</text>
<text text-anchor="middle" x="4586.253" y="-10139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 27ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Unit \/ Int =&gt; Unit \/ Int]&#45;&gt;scala.reflect.ClassTag[Unit \/ Int =&gt; Unit \/ Int] -->
<g id="edge231" class="edge">
<title>org.scalacheck.Arbitrary[Unit \/ Int =&gt; Unit \/ Int]&#45;&gt;scala.reflect.ClassTag[Unit \/ Int =&gt; Unit \/ Int]</title>
<path fill="none" stroke="#000000" d="M4751.0983,-10166.2888C4925.1055,-10178.4916 5183.2524,-10183.6366 5249.5191,-10114.8701 5267.4475,-10096.2654 5239.6397,-9668.5217 5257.5191,-9649.8701 5314.9678,-9589.94 5531.5718,-9590.2459 5689.1303,-9599.2792"/>
<polygon fill="#000000" stroke="#000000" points="5689.2319,-9602.7912 5699.4207,-9599.8863 5689.6442,-9595.8034 5689.2319,-9602.7912"/>
</g>
<!-- org.scalacheck.Arbitrary[Unit \/ Int] -->
<g id="node1428" class="node">
<title>org.scalacheck.Arbitrary[Unit \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-15721.8701" rx="148.4848" ry="26.7407"/>
<text text-anchor="start" x="5765.0954" y="-15725.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Unit / Int]</text>
<text text-anchor="middle" x="5862.0954" y="-15710.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 44ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Unit \/ Int =&gt; Unit \/ Int]&#45;&gt;org.scalacheck.Arbitrary[Unit \/ Int] -->
<g id="edge946" class="edge">
<title>org.scalacheck.Arbitrary[Unit \/ Int =&gt; Unit \/ Int]&#45;&gt;org.scalacheck.Arbitrary[Unit \/ Int]</title>
<path fill="none" stroke="#000000" d="M4750.5134,-10135.3132C4924.709,-10122.8978 5183.6967,-10117.4793 5249.5191,-10186.8701 5262.6596,-10200.7229 5244.4151,-15671.9828 5257.5191,-15685.8701 5318.2454,-15750.226 5560.4384,-15745.5218 5719.2436,-15734.7468"/>
<polygon fill="#000000" stroke="#000000" points="5719.8469,-15738.2135 5729.5804,-15734.029 5719.3619,-15731.2303 5719.8469,-15738.2135"/>
</g>
<!-- org.scalacheck.Cogen[Unit \/ Int] -->
<g id="node1443" class="node">
<title>org.scalacheck.Cogen[Unit \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-10371.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="5772.5954" y="-10375.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Unit / Int]</text>
<text text-anchor="middle" x="5862.0954" y="-10360.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Unit \/ Int =&gt; Unit \/ Int]&#45;&gt;org.scalacheck.Cogen[Unit \/ Int] -->
<g id="edge270" class="edge">
<title>org.scalacheck.Arbitrary[Unit \/ Int =&gt; Unit \/ Int]&#45;&gt;org.scalacheck.Cogen[Unit \/ Int]</title>
<path fill="none" stroke="#000000" d="M4752.6029,-10135.7737C4926.1715,-10124.0738 5182.2654,-10119.5771 5249.5191,-10186.8701 5272.9591,-10210.3237 5234.1408,-10312.3549 5257.5191,-10335.8701 5320.7651,-10399.4863 5568.2828,-10394.2926 5726.3345,-10383.7539"/>
<polygon fill="#000000" stroke="#000000" points="5726.8743,-10387.2253 5736.6128,-10383.0527 5726.3978,-10380.2415 5726.8743,-10387.2253"/>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Seq[?T] -->
<g id="node1281" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Seq[?T]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-56703.8701" rx="227.8769" ry="26.7407"/>
<text text-anchor="start" x="499.6596" y="-56707.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Seq[?T]</text>
<text text-anchor="middle" x="652.6596" y="-56692.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.Prism[Int,Unit] =&gt; ?{def below: ?} -->
<g id="node1282" class="node">
<title>monocle.Prism[Int,Unit] =&gt; ?{def below: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-56775.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="529.1596" y="-56779.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Prism[Int,Unit] =&gt; ?{def below: ?}</text>
<text text-anchor="middle" x="652.6596" y="-56764.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[Int]]&#45;&gt;List[Int] =&gt; Traversable[Int] -->
<g id="edge706" class="edge">
<title>org.scalacheck.Arbitrary[List[Int]]&#45;&gt;List[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M6005.1982,-8961.5187C6236.8444,-8954.4749 6690.5455,-8940.679 6914.519,-8933.8685"/>
<polygon fill="#000000" stroke="#000000" points="6914.7926,-8937.3619 6924.6816,-8933.5595 6914.5798,-8930.3651 6914.7926,-8937.3619"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Int]]&#45;&gt;scala.reflect.ClassTag[List[Int]] -->
<g id="edge447" class="edge">
<title>org.scalacheck.Arbitrary[List[Int]]&#45;&gt;scala.reflect.ClassTag[List[Int]]</title>
<path fill="none" stroke="#000000" d="M5996.5327,-8975.9623C6152.9251,-8984.6766 6398.449,-8988.0131 6466.6717,-8929.8701 6479.1462,-8919.2386 6462.2155,-8904.523 6474.6717,-8893.8701 6609.2509,-8778.7729 6833.2608,-8806.4512 6957.0232,-8833.917"/>
<polygon fill="#000000" stroke="#000000" points="6956.3274,-8837.348 6966.8538,-8836.1451 6957.8748,-8830.5211 6956.3274,-8837.348"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,List[Int]] -->
<g id="edge22" class="edge">
<title>org.scalacheck.Arbitrary[List[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,List[Int]]</title>
<path fill="none" stroke="#000000" d="M6005.1982,-8970.2215C6220.3924,-8976.765 6627.2199,-8989.1356 6863.4832,-8996.3198"/>
<polygon fill="#000000" stroke="#000000" points="6863.4555,-8999.8204 6873.5573,-8996.6261 6863.6684,-8992.8237 6863.4555,-8999.8204"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge478" class="edge">
<title>org.scalacheck.Arbitrary[List[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M5992.1943,-8953.8886C6150.4534,-8942.5357 6404.2785,-8935.7834 6466.6717,-9001.8701 6485.7602,-9022.0884 6460.5402,-12981.9232 6474.6717,-13005.8701 6577.5273,-13180.1659 6814.5153,-13265.4869 6948.7219,-13301.195"/>
<polygon fill="#000000" stroke="#000000" points="6948.0401,-13304.6344 6958.6006,-13303.7832 6949.8142,-13297.863 6948.0401,-13304.6344"/>
</g>
<!-- org.scalacheck.Arbitrary[IsoSpec.this.EmptyCase] -->
<g id="node1284" class="node">
<title>org.scalacheck.Arbitrary[IsoSpec.this.EmptyCase]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-56847.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="514.1596" y="-56851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[IsoSpec.this.EmptyCase]</text>
<text text-anchor="middle" x="652.6596" y="-56836.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- scala.reflect.ClassTag[IsoSpec.this.EmptyCase] -->
<g id="node1333" class="node">
<title>scala.reflect.ClassTag[IsoSpec.this.EmptyCase]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-56847.8701" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="1731.034" y="-56851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[IsoSpec.this.EmptyCase]</text>
<text text-anchor="middle" x="1862.034" y="-56836.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[IsoSpec.this.EmptyCase]&#45;&gt;scala.reflect.ClassTag[IsoSpec.this.EmptyCase] -->
<g id="edge1149" class="edge">
<title>org.scalacheck.Arbitrary[IsoSpec.this.EmptyCase]&#45;&gt;scala.reflect.ClassTag[IsoSpec.this.EmptyCase]</title>
<path fill="none" stroke="#000000" d="M859.871,-56847.8701C1082.0717,-56847.8701 1432.8236,-56847.8701 1654.9682,-56847.8701"/>
<polygon fill="#000000" stroke="#000000" points="1655.1188,-56851.3702 1665.1188,-56847.8701 1655.1188,-56844.3702 1655.1188,-56851.3702"/>
</g>
<!-- org.scalacheck.Cogen[Int \/ String]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge224" class="edge">
<title>org.scalacheck.Cogen[Int \/ String]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M5991.476,-8737.9684C6149.6524,-8726.6183 6404.0855,-8719.785 6466.6717,-8785.8701 6481.6373,-8801.6723 6462.0746,-10335.122 6474.6717,-10352.8701 6576.4636,-10496.2848 6788.7312,-10538.9693 6923.925,-10551.3185"/>
<polygon fill="#000000" stroke="#000000" points="6923.6609,-10554.8086 6933.9269,-10552.1897 6924.2684,-10547.8351 6923.6609,-10554.8086"/>
</g>
<!-- org.scalacheck.Cogen[Int \/ String]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge193" class="edge">
<title>org.scalacheck.Cogen[Int \/ String]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M5991.4953,-8761.79C6149.6921,-8773.1594 6404.1469,-8780.0132 6466.6717,-8713.8701 6478.4262,-8701.4353 6464.5297,-6263.6517 6474.6717,-6249.8701 6574.0456,-6114.8338 6774.843,-6078.4903 6909.9114,-6070.0895"/>
<polygon fill="#000000" stroke="#000000" points="6910.1444,-6073.582 6919.9256,-6069.5102 6909.7401,-6066.5936 6910.1444,-6073.582"/>
</g>
<!-- org.scalacheck.Cogen[(Char, scalaz.IList[Char])]&#45;&gt;org.scalacheck.Cogen[Char] -->
<g id="edge908" class="edge">
<title>org.scalacheck.Cogen[(Char, scalaz.IList[Char])]&#45;&gt;org.scalacheck.Cogen[Char]</title>
<path fill="none" stroke="#000000" d="M4778.4102,-3163.7055C5119.0392,-3151.1216 5850.9045,-3132.5865 6466.6717,-3174.8701 6633.7134,-3186.3405 6826.0061,-3215.8254 6941.6667,-3235.3493"/>
<polygon fill="#000000" stroke="#000000" points="6941.1376,-3238.8094 6951.5819,-3237.0303 6942.3077,-3231.9079 6941.1376,-3238.8094"/>
</g>
<!-- org.scalacheck.Cogen[(Char, scalaz.IList[Char])]&#45;&gt;org.scalacheck.Cogen[scalaz.IList[Char]] -->
<g id="edge714" class="edge">
<title>org.scalacheck.Cogen[(Char, scalaz.IList[Char])]&#45;&gt;org.scalacheck.Cogen[scalaz.IList[Char]]</title>
<path fill="none" stroke="#000000" d="M4775.7221,-3181.1087C4908.4183,-3187.8349 5089.8464,-3197.5428 5249.5191,-3207.8701 5402.2067,-3217.7456 5576.147,-3230.9994 5699.5651,-3240.7434"/>
<polygon fill="#000000" stroke="#000000" points="5699.6077,-3244.2576 5709.8525,-3241.5567 5700.1595,-3237.2793 5699.6077,-3244.2576"/>
</g>
<!-- scalaz.Equal[(Boolean, Int)] -->
<g id="node1288" class="node">
<title>scalaz.Equal[(Boolean, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-19375.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="5785.0954" y="-19379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Boolean, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-19364.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 10ms</text>
</g>
<!-- scalaz.Equal[(Boolean, Int)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge638" class="edge">
<title>scalaz.Equal[(Boolean, Int)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5972.7829,-19365.3605C6128.7692,-19353.2848 6401.5644,-19343.1041 6466.6717,-19411.8701 6482.485,-19428.5719 6466.8081,-21046.2558 6474.6717,-21067.8701 6585.1063,-21371.4155 6893.3807,-21635.9743 7005.0029,-21724.4415"/>
<polygon fill="#000000" stroke="#000000" points="7002.9869,-21727.3089 7013.0073,-21730.7502 7007.3199,-21721.8112 7002.9869,-21727.3089"/>
</g>
<!-- scalaz.Equal[(Boolean, Int)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge1334" class="edge">
<title>scalaz.Equal[(Boolean, Int)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M5973.0178,-19386.3192C6128.9457,-19398.2771 6401.2692,-19408.2645 6466.6717,-19339.8701 6487.4844,-19318.1052 6457.0851,-18822.3157 6474.6717,-18797.8701 6580.7522,-18650.4163 6803.8316,-18610.4398 6937.7028,-18600.0331"/>
<polygon fill="#000000" stroke="#000000" points="6938.2636,-18603.5014 6947.9804,-18599.2785 6937.751,-18596.5202 6938.2636,-18603.5014"/>
</g>
<!-- shapeless.ops.hlist.Init[Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Init[shapeless.HNil] -->
<g id="edge278" class="edge">
<title>shapeless.ops.hlist.Init[Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Init[shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M8398.4492,-33654.8701C8618.3469,-33654.8701 8966.5211,-33654.8701 9174.3873,-33654.8701"/>
<polygon fill="#000000" stroke="#000000" points="9174.4861,-33658.3702 9184.486,-33654.8701 9174.486,-33651.3702 9174.4861,-33658.3702"/>
</g>
<!-- scalaz.Functor[F$macro$13] -->
<g id="node1290" class="node">
<title>scalaz.Functor[F$macro$13]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-56919.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="574.1596" y="-56923.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$13]</text>
<text text-anchor="middle" x="652.6596" y="-56908.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)] -->
<g id="node1292" class="node">
<title>org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-5709.8701" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="5679.0954" y="-5713.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]</text>
<text text-anchor="middle" x="5862.0954" y="-5698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 177ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge425" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6074.0931,-5693.19C6226.5026,-5686.4119 6414.0364,-5690.5452 6466.6717,-5745.8701 6482.5258,-5762.5343 6458.8464,-6557.1785 6474.6717,-6573.8701 6531.3652,-6633.6667 6754.3142,-6631.1042 6904.3615,-6621.8777"/>
<polygon fill="#000000" stroke="#000000" points="6904.8266,-6625.3554 6914.586,-6621.2319 6904.3852,-6618.3694 6904.8266,-6625.3554"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge302" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6073.7916,-5693.1204C6226.3215,-5686.2703 6414.1551,-5690.342 6466.6717,-5745.8701 6487.0567,-5767.424 6457.9466,-7857.3671 6474.6717,-7881.8701 6571.6942,-8024.0122 6773.3523,-8076.7547 6909.2224,-8096.3249"/>
<polygon fill="#000000" stroke="#000000" points="6908.9084,-8099.815 6919.2966,-8097.7327 6909.8772,-8092.8823 6908.9084,-8099.815"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Long] -->
<g id="edge1098" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Long]</title>
<path fill="none" stroke="#000000" d="M6077.7714,-5726.0989C6229.0375,-5732.2702 6413.389,-5727.5579 6466.6717,-5673.8701 6478.7414,-5661.7086 6462.8259,-5532.2497 6474.6717,-5519.8701 6532.0001,-5459.958 6756.2576,-5454.699 6906.1735,-5458.3538"/>
<polygon fill="#000000" stroke="#000000" points="6906.2991,-5461.8581 6916.3867,-5458.6193 6906.4811,-5454.8605 6906.2991,-5461.8581"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge1202" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M6074.0935,-5726.5505C6226.5032,-5733.3288 6414.037,-5729.1955 6466.6717,-5673.8701 6482.5639,-5657.1654 6458.8083,-4860.6021 6474.6717,-4843.8701 6532.7014,-4782.6626 6764.9211,-4786.791 6914.8514,-4796.5253"/>
<polygon fill="#000000" stroke="#000000" points="6914.8424,-4800.0323 6925.0529,-4797.2044 6915.3075,-4793.0478 6914.8424,-4800.0323"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Float] -->
<g id="edge487" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Float]</title>
<path fill="none" stroke="#000000" d="M6082.7894,-5725.402C6232.4542,-5730.743 6412.5496,-5725.2907 6466.6717,-5673.8701 6490.0135,-5651.6934 6451.5626,-5624.289 6474.6717,-5601.8701 6602.3666,-5477.9891 6830.3617,-5504.7029 6956.2833,-5532.0888"/>
<polygon fill="#000000" stroke="#000000" points="6955.7638,-5535.5586 6966.285,-5534.3122 6957.2829,-5528.7254 6955.7638,-5535.5586"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1112" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6073.4393,-5693.0993C6226.0619,-5686.2034 6414.1835,-5690.2248 6466.6717,-5745.8701 6483.9689,-5764.2076 6461.8699,-12984.1543 6474.6717,-13005.8701 6577.4492,-13180.212 6814.468,-13265.5148 6948.7004,-13301.2077"/>
<polygon fill="#000000" stroke="#000000" points="6948.0206,-13304.6476 6958.5811,-13303.7947 6949.7937,-13297.8759 6948.0206,-13304.6476"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;scala.reflect.ClassTag[(Int, Char, Boolean, String, Long, Float)] -->
<g id="edge764" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long, Float)]&#45;&gt;scala.reflect.ClassTag[(Int, Char, Boolean, String, Long, Float)]</title>
<path fill="none" stroke="#000000" d="M6132.2263,-5709.8701C6325.0696,-5709.8701 6583.3819,-5709.8701 6776.1621,-5709.8701"/>
<polygon fill="#000000" stroke="#000000" points="6776.4465,-5713.3702 6786.4465,-5709.8701 6776.4464,-5706.3702 6776.4465,-5713.3702"/>
</g>
<!-- scalaz.Equal[List[(Int, String)]]&#45;&gt;scalaz.Equal[(Int, String)] -->
<g id="edge527" class="edge">
<title>scalaz.Equal[List[(Int, String)]]&#45;&gt;scalaz.Equal[(Int, String)]</title>
<path fill="none" stroke="#000000" d="M4703.4008,-20678.032C4850.9635,-20668.8156 5102.9124,-20677.2816 5249.5191,-20817.8701 5260.7236,-20828.6146 5245.6418,-20841.8742 5257.5191,-20851.8701 5328.7609,-20911.8264 5590.8036,-20906.0534 5745.5399,-20896.8018"/>
<polygon fill="#000000" stroke="#000000" points="5745.8062,-20900.2922 5755.5738,-20896.1881 5745.3787,-20893.3052 5745.8062,-20900.2922"/>
</g>
<!-- scalaz.Equal[List[(Int, String)]]&#45;&gt;scalaz.Order[(Int, String)] -->
<g id="edge1102" class="edge">
<title>scalaz.Equal[List[(Int, String)]]&#45;&gt;scalaz.Order[(Int, String)]</title>
<path fill="none" stroke="#000000" d="M4708.0683,-20680.0686C4842.5154,-20668.3385 5065.3574,-20649.4619 5257.5191,-20635.8701 5425.8473,-20623.964 5620.7294,-20612.8374 5742.7165,-20606.1923"/>
<polygon fill="#000000" stroke="#000000" points="5743.0343,-20609.6803 5752.8296,-20605.6426 5742.6543,-20602.6906 5743.0343,-20609.6803"/>
</g>
<!-- org.scalacheck.Arbitrary[BigInt] -->
<g id="node1295" class="node">
<title>org.scalacheck.Arbitrary[BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-56055.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="563.6596" y="-56059.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[BigInt]</text>
<text text-anchor="middle" x="652.6596" y="-56044.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 24ms</text>
</g>
<!-- org.scalacheck.Arbitrary[BigInt]&#45;&gt;scala.reflect.ClassTag[BigInt] -->
<g id="edge542" class="edge">
<title>org.scalacheck.Arbitrary[BigInt]&#45;&gt;scala.reflect.ClassTag[BigInt]</title>
<path fill="none" stroke="#000000" d="M789.919,-56055.8701C1022.6691,-56055.8701 1492.1085,-56055.8701 1724.8246,-56055.8701"/>
<polygon fill="#000000" stroke="#000000" points="1725.0449,-56059.3702 1735.0449,-56055.8701 1725.0449,-56052.3702 1725.0449,-56059.3702"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P) -->
<g id="node1297" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-56991.8701" rx="246.5607" ry="26.7407"/>
<text text-anchor="start" x="486.1596" y="-56995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-56980.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def should: ?} -->
<g id="node1298" class="node">
<title>String =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-24033.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="578.6596" y="-24037.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="652.6596" y="-24022.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- String =&gt; ?{def should: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge203" class="edge">
<title>String =&gt; ?{def should: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M759.0518,-24023.0707C924.7441,-24008.8828 1232.9809,-23993.9028 1305.3191,-24069.8701 1317.7321,-24082.9058 1300.9742,-25352.7699 1313.3191,-25365.8701 1434.6358,-25494.6082 1667.7949,-25455.8463 1787.3399,-25424.6123"/>
<polygon fill="#000000" stroke="#000000" points="1788.3855,-25427.9559 1797.1477,-25421.9998 1786.5837,-25421.1917 1788.3855,-25427.9559"/>
</g>
<!-- String =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge773" class="edge">
<title>String =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M764.1144,-24026.3977C927.1441,-24017.704 1220.4935,-24011.2221 1305.3191,-24069.8701 1748.2374,-24376.1014 1842.6958,-25118.3622 1859.0262,-25292.7523"/>
<polygon fill="#000000" stroke="#000000" points="1855.5621,-25293.3072 1859.9517,-25302.9499 1862.5335,-25292.6745 1855.5621,-25293.3072"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Tree[A]] -->
<g id="node1299" class="node">
<title>org.scalacheck.Arbitrary[scalaz.Tree[A]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-27985.8701" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="5750.0954" y="-27989.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.Tree[A]]</text>
<text text-anchor="middle" x="5862.0954" y="-27974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Tree[A]]&#45;&gt;org.scalacheck.Arbitrary[A] -->
<g id="edge1260" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Tree[A]]&#45;&gt;org.scalacheck.Arbitrary[A]</title>
<path fill="none" stroke="#000000" d="M6013.4831,-27973.6124C6171.1615,-27964.4334 6403.831,-27962.166 6466.6717,-28021.8701 6478.3426,-28032.9584 6463.6702,-28082.1173 6474.6717,-28093.8701 6591.6103,-28218.794 6804.8326,-28222.8611 6935.1312,-28211.4439"/>
<polygon fill="#000000" stroke="#000000" points="6935.5059,-28214.9243 6945.1428,-28210.5219 6934.8639,-28207.9538 6935.5059,-28214.9243"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Tree[A]]&#45;&gt;scala.reflect.ClassTag[scalaz.Tree[A]] -->
<g id="edge623" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Tree[A]]&#45;&gt;scala.reflect.ClassTag[scalaz.Tree[A]]</title>
<path fill="none" stroke="#000000" d="M6032.037,-27985.8701C6257.0852,-27985.8701 6651.6642,-27985.8701 6876.4983,-27985.8701"/>
<polygon fill="#000000" stroke="#000000" points="6876.7434,-27989.3702 6886.7434,-27985.8701 6876.7434,-27982.3702 6876.7434,-27989.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Tree[A]]&#45;&gt;org.scalacheck.util.Buildable[A,scalaz.Tree[A]] -->
<g id="edge1185" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Tree[A]]&#45;&gt;org.scalacheck.util.Buildable[A,scalaz.Tree[A]]</title>
<path fill="none" stroke="#000000" d="M6021.2167,-27995.2325C6143.1392,-28002.4336 6315.5394,-28012.6748 6466.6717,-28021.8701 6597.0229,-28029.801 6743.8584,-28038.9273 6857.0875,-28046.0066"/>
<polygon fill="#000000" stroke="#000000" points="6857.0474,-28049.5109 6867.2464,-28046.6419 6857.4844,-28042.5245 6857.0474,-28049.5109"/>
</g>
<!-- scalaz.Equal[S =&gt; A]&#45;&gt;org.scalacheck.Arbitrary[A] -->
<g id="edge729" class="edge">
<title>scalaz.Equal[S =&gt; A]&#45;&gt;org.scalacheck.Arbitrary[A]</title>
<path fill="none" stroke="#000000" d="M5955.9851,-28135.1041C6167.2063,-28146.8791 6679.974,-28175.4644 6919.1949,-28188.8003"/>
<polygon fill="#000000" stroke="#000000" points="6919.1528,-28192.3033 6929.3321,-28189.3654 6919.5425,-28185.3141 6919.1528,-28192.3033"/>
</g>
<!-- scalaz.Equal[monocle.Binary =&gt; (String, Int)]&#45;&gt;org.scalacheck.Arbitrary[monocle.Binary] -->
<g id="edge53" class="edge">
<title>scalaz.Equal[monocle.Binary =&gt; (String, Int)]&#45;&gt;org.scalacheck.Arbitrary[monocle.Binary]</title>
<path fill="none" stroke="#000000" d="M4748.7509,-16964.0276C4921.7229,-16975.2337 5179.9555,-16979.6147 5249.5191,-16913.8701 5272.919,-16891.7548 5234.1773,-16864.0467 5257.5191,-16841.8701 5318.4969,-16783.9359 5539.3837,-16784.3535 5696.4934,-16792.8158"/>
<polygon fill="#000000" stroke="#000000" points="5696.5688,-16796.3252 5706.7473,-16793.3843 5696.9564,-16789.336 5696.5688,-16796.3252"/>
</g>
<!-- scalaz.Equal[monocle.Binary =&gt; (String, Int)]&#45;&gt;scalaz.Equal[(String, Int)] -->
<g id="edge771" class="edge">
<title>scalaz.Equal[monocle.Binary =&gt; (String, Int)]&#45;&gt;scalaz.Equal[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M4744.2395,-16934.775C4918.4156,-16922.0583 5182.874,-16915.6702 5249.5191,-16985.8701 5266.2824,-17003.5275 5240.8023,-20474.1687 5257.5191,-20491.8701 5322.069,-20560.2216 5591.4385,-20550.6479 5747.9854,-20538.6635"/>
<polygon fill="#000000" stroke="#000000" points="5748.4332,-20542.1393 5758.1303,-20537.8714 5747.8882,-20535.1605 5748.4332,-20542.1393"/>
</g>
<!-- scala.math.Ordering[Int] -->
<g id="node1302" class="node">
<title>scala.math.Ordering[Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-57063.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="584.6596" y="-57067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.math.Ordering[Int]</text>
<text text-anchor="middle" x="652.6596" y="-57052.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- ((Int, GetterSpec.this.Bar)) =&gt; ?{def shouldEqual: ?} -->
<g id="node1303" class="node">
<title>((Int, GetterSpec.this.Bar)) =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-23961.8701" rx="218.492" ry="26.7407"/>
<text text-anchor="start" x="506.1596" y="-23965.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, GetterSpec.this.Bar)) =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-23950.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- ((Int, GetterSpec.this.Bar)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge17" class="edge">
<title>((Int, GetterSpec.this.Bar)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M827.9763,-23945.8323C998.9258,-23934.5411 1242.1379,-23931.4976 1305.3191,-23997.8701 1318.4195,-24011.6321 1300.2906,-25352.04 1313.3191,-25365.8701 1434.6148,-25494.6279 1667.7833,-25455.8572 1787.3351,-25424.6168"/>
<polygon fill="#000000" stroke="#000000" points="1788.3815,-25427.9602 1797.1434,-25422.0038 1786.5794,-25421.1961 1788.3815,-25427.9602"/>
</g>
<!-- ((Int, GetterSpec.this.Bar)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge951" class="edge">
<title>((Int, GetterSpec.this.Bar)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M850.1655,-23950.3389C1015.1362,-23944.7059 1234.4128,-23947.7821 1305.3191,-23997.8701 1767.9632,-24324.6802 1847.631,-25112.558 1859.9501,-25292.7402"/>
<polygon fill="#000000" stroke="#000000" points="1856.4613,-25293.0268 1860.6086,-25302.7762 1863.4463,-25292.5684 1856.4613,-25293.0268"/>
</g>
<!-- monocle.function.Each[Int ==&gt;&gt; String,String] -->
<g id="node1304" class="node">
<title>monocle.function.Each[Int ==&gt;&gt; String,String]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-40143.8701" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="521.6596" y="-40147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int ==&gt;&gt; String,String]</text>
<text text-anchor="middle" x="652.6596" y="-40132.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- monocle.function.Each[Int ==&gt;&gt; String,String]&#45;&gt;shapeless.Generic.Aux[Int ==&gt;&gt; String,SGen] -->
<g id="edge1075" class="edge">
<title>monocle.function.Each[Int ==&gt;&gt; String,String]&#45;&gt;shapeless.Generic.Aux[Int ==&gt;&gt; String,SGen]</title>
<path fill="none" stroke="#000000" d="M849.3209,-40143.8701C1072.224,-40143.8701 1433.786,-40143.8701 1659.2082,-40143.8701"/>
<polygon fill="#000000" stroke="#000000" points="1659.5045,-40147.3702 1669.5045,-40143.8701 1659.5044,-40140.3702 1659.5045,-40147.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH] -->
<g id="node1306" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-23673.8701" rx="571.1846" ry="26.7407"/>
<text text-anchor="start" x="4190.253" y="-23677.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]</text>
<text text-anchor="middle" x="4586.253" y="-23662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Int :: shapeless.HNil,Char :: Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH] -->
<g id="edge924" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Int :: shapeless.HNil,Char :: Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]</title>
<path fill="none" stroke="#000000" d="M5157.9342,-23673.8701C5198.663,-23673.8701 5239.7558,-23673.8701 5280.539,-23673.8701"/>
<polygon fill="#000000" stroke="#000000" points="5280.6203,-23677.3702 5290.6203,-23673.8701 5280.6203,-23670.3702 5280.6203,-23677.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]&#45;&gt;shapeless.Witness.Aux[String(&#39;hello&#39;)] -->
<g id="edge1255" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]&#45;&gt;shapeless.Witness.Aux[String(&#39;hello&#39;)]</title>
<path fill="none" stroke="#000000" d="M6130.9817,-2182.1745C6235.8461,-2187.9429 6356.9915,-2195.7996 6466.6717,-2205.8701 6620.766,-2220.0185 6797.1197,-2242.8999 6914.3745,-2259.0654"/>
<polygon fill="#000000" stroke="#000000" points="6914.0892,-2262.5592 6924.4743,-2260.4614 6915.0477,-2255.6251 6914.0892,-2262.5592"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge1331" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.StartsWithString[String(&#39;hello&#39;)]]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M6154.988,-2163.2979C6254.3441,-2158.1883 6365.7181,-2149.2876 6466.6717,-2133.8701 6641.6331,-2107.1501 6840.9732,-2051.9993 6954.3096,-2018.2394"/>
<polygon fill="#000000" stroke="#000000" points="6955.419,-2021.5608 6963.9975,-2015.3432 6953.414,-2014.8541 6955.419,-2021.5608"/>
</g>
<!-- (=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop -->
<g id="node1311" class="node">
<title>(=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-57135.8701" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="474.6596" y="-57139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Prop</text>
<text text-anchor="middle" x="652.6596" y="-57124.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._1.N,Char] -->
<g id="node1312" class="node">
<title>shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._1.N,Char]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-57207.8701" rx="378.1044" ry="26.7407"/>
<text text-anchor="start" x="1602.534" y="-57211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._1.N,Char]</text>
<text text-anchor="middle" x="1862.034" y="-57196.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int =&gt; Int] -->
<g id="node1313" class="node">
<title>org.scalacheck.Arbitrary[Int =&gt; Int]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="5862.0954" cy="-13693.8701" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="5763.0954" y="-13697.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Int =&gt; Int]</text>
<text text-anchor="middle" x="5862.0954" y="-13682.6701" font-family="Times,serif" font-size="14.00" fill="#000000">90 times = 1053ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge551" class="edge">
<title>org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M5997.0128,-13706.179C6155.5391,-13717.3019 6404.8595,-13723.2399 6466.6717,-13657.8701 6477.4357,-13646.4866 6470.0603,-11416.8428 6474.6717,-11401.8701 6585.6025,-11041.6879 6906.4586,-10696.1536 7011.951,-10589.4511"/>
<polygon fill="#000000" stroke="#000000" points="7014.6047,-10591.7459 7019.1684,-10582.1843 7009.6381,-10586.813 7014.6047,-10591.7459"/>
</g>
<!-- org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;scala.reflect.ClassTag[Int =&gt; Int] -->
<g id="edge618" class="edge">
<title>org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;scala.reflect.ClassTag[Int =&gt; Int]</title>
<path fill="none" stroke="#000000" d="M6013.5433,-13693.8701C6240.807,-13693.8701 6667.5653,-13693.8701 6894.7319,-13693.8701"/>
<polygon fill="#000000" stroke="#000000" points="6895.0633,-13697.3702 6905.0632,-13693.8701 6895.0632,-13690.3702 6895.0633,-13697.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1299" class="edge">
<title>org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6003.349,-13703.6003C6127.9566,-13707.9534 6313.1041,-13704.0098 6466.6717,-13657.8701 6688.1418,-13591.3289 6915.4354,-13425.7552 7005.622,-13355.3648"/>
<polygon fill="#000000" stroke="#000000" points="7007.9557,-13357.9825 7013.6633,-13349.0565 7003.6351,-13352.475 7007.9557,-13357.9825"/>
</g>
<!-- scalaz.Equal[Either[String,String]] -->
<g id="node1314" class="node">
<title>scalaz.Equal[Either[String,String]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-19807.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="5767.0954" y="-19811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Either[String,String]]</text>
<text text-anchor="middle" x="5862.0954" y="-19796.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[Either[String,String]]&#45;&gt;scalaz.Equal[String] -->
<g id="edge9" class="edge">
<title>scalaz.Equal[Either[String,String]]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M5999.5325,-19798.801C6124.0481,-19794.6006 6311.2633,-19798.3901 6466.6717,-19843.8701 6687.078,-19908.3715 6915.3982,-20068.7832 7005.7545,-20136.7006"/>
<polygon fill="#000000" stroke="#000000" points="7003.7202,-20139.5502 7013.8091,-20142.7852 7007.9397,-20133.9648 7003.7202,-20139.5502"/>
</g>
<!-- scalaz.Equal[Option[List[Unit]]]&#45;&gt;scalaz.Equal[List[Unit]] -->
<g id="edge105" class="edge">
<title>scalaz.Equal[Option[List[Unit]]]&#45;&gt;scalaz.Equal[List[Unit]]</title>
<path fill="none" stroke="#000000" d="M4708.838,-16793.7584C4879.8585,-16779.8736 5177.2579,-16767.6716 5249.5191,-16841.8701 5271.8539,-16864.8036 5235.2446,-17106.8779 5257.5191,-17129.8701 5323.6955,-17198.1786 5598.2444,-17187.9232 5753.6262,-17176.0283"/>
<polygon fill="#000000" stroke="#000000" points="5753.9878,-17179.5108 5763.6851,-17175.2432 5753.4431,-17172.532 5753.9878,-17179.5108"/>
</g>
<!-- org.scalacheck.Arbitrary[HListSpec.this.Example] -->
<g id="node1316" class="node">
<title>org.scalacheck.Arbitrary[HListSpec.this.Example]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-57279.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="514.1596" y="-57283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[HListSpec.this.Example]</text>
<text text-anchor="middle" x="652.6596" y="-57268.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scalaz.Order[List[Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge1248" class="edge">
<title>scalaz.Order[List[Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5960.3433,-21249.267C6080.6875,-21249.32 6290.3039,-21244.029 6466.6717,-21211.8701 6661.0965,-21176.4186 6881.7581,-21096.2314 6985.7389,-21055.9355"/>
<polygon fill="#000000" stroke="#000000" points="6987.0816,-21059.1688 6995.1318,-21052.2808 6984.5432,-21052.6452 6987.0816,-21059.1688"/>
</g>
<!-- scalaz.Equal[(List[Int], Boolean)] -->
<g id="node1318" class="node">
<title>scalaz.Equal[(List[Int], Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-20925.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="4494.253" y="-20929.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(List[Int], Boolean)]</text>
<text text-anchor="middle" x="4586.253" y="-20914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[(List[Int], Boolean)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge238" class="edge">
<title>scalaz.Equal[(List[Int], Boolean)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M4711.5934,-20938.4222C4883.2965,-20952.5086 5178.5145,-20964.5774 5249.5191,-20889.8701 5271.9568,-20866.2622 5234.4497,-18567.8609 5257.5191,-18544.8701 5305.1001,-18497.4511 6399.5638,-18541.8644 6466.6717,-18544.8701 6634.8629,-18552.4031 6829.6966,-18572.1786 6945.1386,-18585.056"/>
<polygon fill="#000000" stroke="#000000" points="6945.0436,-18588.5672 6955.3712,-18586.2026 6945.8231,-18581.6107 6945.0436,-18588.5672"/>
</g>
<!-- scalaz.Equal[(List[Int], Boolean)]&#45;&gt;scalaz.Equal[List[Int]] -->
<g id="edge157" class="edge">
<title>scalaz.Equal[(List[Int], Boolean)]&#45;&gt;scalaz.Equal[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4711.7998,-20913.4358C4883.3697,-20899.5399 5178.0024,-20887.753 5249.5191,-20961.8701 5266.1869,-20979.1438 5240.8968,-21376.5526 5257.5191,-21393.8701 5324.1803,-21463.3191 5604.7754,-21451.838 5759.1678,-21439.6686"/>
<polygon fill="#000000" stroke="#000000" points="5759.4636,-21443.1562 5769.1513,-21438.8669 5758.9032,-21436.1787 5759.4636,-21443.1562"/>
</g>
<!-- org.scalacheck.Arbitrary[Option[Int] =&gt; Option[Int]] -->
<g id="node1319" class="node">
<title>org.scalacheck.Arbitrary[Option[Int] =&gt; Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-14959.8701" rx="217.1636" ry="26.7407"/>
<text text-anchor="start" x="4440.753" y="-14963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Option[Int] =&gt; Option[Int]]</text>
<text text-anchor="middle" x="4586.253" y="-14948.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[Int] =&gt; Option[Int]]&#45;&gt;scala.reflect.ClassTag[Option[Int] =&gt; Option[Int]] -->
<g id="edge942" class="edge">
<title>org.scalacheck.Arbitrary[Option[Int] =&gt; Option[Int]]&#45;&gt;scala.reflect.ClassTag[Option[Int] =&gt; Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4803.4049,-14959.8701C5038.3258,-14959.8701 5410.669,-14959.8701 5645.4084,-14959.8701"/>
<polygon fill="#000000" stroke="#000000" points="5645.4375,-14963.3702 5655.4375,-14959.8701 5645.4375,-14956.3702 5645.4375,-14963.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Option[Int] =&gt; Option[Int]]&#45;&gt;org.scalacheck.Arbitrary[Option[Int]] -->
<g id="edge108" class="edge">
<title>org.scalacheck.Arbitrary[Option[Int] =&gt; Option[Int]]&#45;&gt;org.scalacheck.Arbitrary[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4712.8521,-14981.6996C4847.6441,-15004.5992 5067.3096,-15040.9376 5257.5191,-15067.8701 5415.7487,-15090.2743 5597.8546,-15112.0153 5720.5037,-15126.0683"/>
<polygon fill="#000000" stroke="#000000" points="5720.3718,-15129.576 5730.7048,-15127.2351 5721.1673,-15122.6213 5720.3718,-15129.576"/>
</g>
<!-- org.scalacheck.Arbitrary[Option[Int] =&gt; Option[Int]]&#45;&gt;org.scalacheck.Cogen[Option[Int]] -->
<g id="edge1346" class="edge">
<title>org.scalacheck.Arbitrary[Option[Int] =&gt; Option[Int]]&#45;&gt;org.scalacheck.Cogen[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4695.8441,-14983.1032C4846.2489,-15007.7987 5113.4367,-15024.5108 5249.5191,-14868.8701 5264.3794,-14851.874 5242.0167,-11634.2826 5257.5191,-11617.8701 5318.5427,-11553.2641 5562.5761,-11558.2815 5721.3275,-11569.1452"/>
<polygon fill="#000000" stroke="#000000" points="5721.4379,-11572.6614 5731.658,-11569.8686 5721.9269,-11565.6785 5721.4379,-11572.6614"/>
</g>
<!-- scalaz.Equal[scalaz.IList[Int]] -->
<g id="node1320" class="node">
<title>scalaz.Equal[scalaz.IList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-21899.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="5780.0954" y="-21903.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.IList[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-21888.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- scalaz.Equal[scalaz.IList[Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge201" class="edge">
<title>scalaz.Equal[scalaz.IList[Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5988.726,-21896.9255C6111.3375,-21892.9916 6302.2937,-21884.0058 6466.6717,-21863.8701 6646.5778,-21841.8322 6854.9223,-21798.5769 6966.1943,-21774.0226"/>
<polygon fill="#000000" stroke="#000000" points="6966.9935,-21777.4305 6976.0005,-21771.8516 6965.4804,-21770.596 6966.9935,-21777.4305"/>
</g>
<!-- scalaz.Equal[scalaz.IList[Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge1352" class="edge">
<title>scalaz.Equal[scalaz.IList[Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5979.1975,-21910.4416C6135.636,-21921.7252 6400.8172,-21929.987 6466.6717,-21863.8701 6477.9803,-21852.5164 6468.8133,-21734.7855 6474.6717,-21719.8701 6593.0369,-21418.5146 6897.6724,-21151.6015 7006.5761,-21062.9786"/>
<polygon fill="#000000" stroke="#000000" points="7008.8081,-21065.6748 7014.3783,-21056.6624 7004.4037,-21060.2341 7008.8081,-21065.6748"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int] =&gt; scalaz.NonEmptyList[Int]] -->
<g id="node1321" class="node">
<title>org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int] =&gt; scalaz.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-12276.8701" rx="330.4379" ry="26.7407"/>
<text text-anchor="start" x="4360.753" y="-12280.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int] =&gt; scalaz.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="4586.253" y="-12265.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int] =&gt; scalaz.NonEmptyList[Int]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int]] -->
<g id="edge1179" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int] =&gt; scalaz.NonEmptyList[Int]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int]]</title>
<path fill="none" stroke="#000000" d="M4815.2723,-12257.4745C4983.0238,-12248.9145 5191.1764,-12251.9826 5249.5191,-12312.8701 5262.8383,-12326.7701 5244.2365,-12991.935 5257.5191,-13005.8701 5313.0233,-13064.1005 5518.1698,-13065.5819 5674.2416,-13057.3502"/>
<polygon fill="#000000" stroke="#000000" points="5674.6538,-13060.8331 5684.4487,-13056.7945 5674.2732,-13053.8434 5674.6538,-13060.8331"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int] =&gt; scalaz.NonEmptyList[Int]]&#45;&gt;org.scalacheck.Cogen[scalaz.NonEmptyList[Int]] -->
<g id="edge1226" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int] =&gt; scalaz.NonEmptyList[Int]]&#45;&gt;org.scalacheck.Cogen[scalaz.NonEmptyList[Int]]</title>
<path fill="none" stroke="#000000" d="M4816.393,-12296.1672C4983.8262,-12304.5552 5191.0191,-12301.3058 5249.5191,-12240.8701 5263.7803,-12226.1369 5243.2966,-11886.6406 5257.5191,-11871.8701 5314.0312,-11813.1804 5523.6771,-11812.355 5680.3447,-11820.8438"/>
<polygon fill="#000000" stroke="#000000" points="5680.4057,-11824.3526 5690.5854,-11821.4159 5680.7962,-11817.3635 5680.4057,-11824.3526"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int] =&gt; scalaz.NonEmptyList[Int]]&#45;&gt;scala.reflect.ClassTag[scalaz.NonEmptyList[Int] =&gt; scalaz.NonEmptyList[Int]] -->
<g id="edge370" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.NonEmptyList[Int] =&gt; scalaz.NonEmptyList[Int]]&#45;&gt;scala.reflect.ClassTag[scalaz.NonEmptyList[Int] =&gt; scalaz.NonEmptyList[Int]]</title>
<path fill="none" stroke="#000000" d="M4817.883,-12296.0258C4984.8852,-12304.1817 5190.8035,-12300.6931 5249.5191,-12240.8701 5267.0419,-12223.0168 5240.0432,-12033.7693 5257.5191,-12015.8701 5306.0737,-11966.1391 5465.7106,-11958.1711 5608.752,-11962.0945"/>
<polygon fill="#000000" stroke="#000000" points="5608.9217,-11965.601 5619.0205,-11962.3972 5609.128,-11958.604 5608.9217,-11965.601"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Long,(Long, Char :: Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Long,(Long, Float :: Long :: Double :: shapeless.HNil)] -->
<g id="edge1326" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Long,(Long, Char :: Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Long,(Long, Float :: Long :: Double :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M5233.5184,-34653.8701C5243.2467,-34653.8701 5252.9721,-34653.8701 5262.6855,-34653.8701"/>
<polygon fill="#000000" stroke="#000000" points="5262.8033,-34657.3702 5272.8033,-34653.8701 5262.8032,-34650.3702 5262.8033,-34657.3702"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P) -->
<g id="node1325" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-57351.8701" rx="303.1977" ry="26.7407"/>
<text text-anchor="start" x="446.1596" y="-57355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-57340.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[Either[String,Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge899" class="edge">
<title>org.scalacheck.Cogen[Either[String,Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M6009.7041,-7940.6938C6168.5256,-7930.1719 6406.49,-7926.2144 6466.6717,-7989.8701 6477.9453,-8001.7944 6465.1852,-10339.4802 6474.6717,-10352.8701 6576.3402,-10496.3723 6788.6455,-10539.0301 6923.8803,-10551.3502"/>
<polygon fill="#000000" stroke="#000000" points="6923.62,-10554.8406 6933.8854,-10552.2192 6924.2258,-10547.8669 6923.62,-10554.8406"/>
</g>
<!-- org.scalacheck.Cogen[Either[String,Int]]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge1353" class="edge">
<title>org.scalacheck.Cogen[Either[String,Int]]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M6009.6876,-7967.0308C6168.4942,-7977.5386 6406.4451,-7981.4832 6466.6717,-7917.8701 6482.5993,-7901.0469 6460.926,-6268.5184 6474.6717,-6249.8701 6574.1502,-6114.9109 6774.9205,-6078.5474 6909.9544,-6070.1212"/>
<polygon fill="#000000" stroke="#000000" points="6910.1857,-6073.6137 6919.966,-6069.54 6909.7799,-6066.6255 6910.1857,-6073.6137"/>
</g>
<!-- scalaz.Unzip[[β$0$]monocle.PSetter[List[(Int, String)],List[(Int, String)],β$0$,β$0$]] -->
<g id="node1327" class="node">
<title>scalaz.Unzip[[β$0$]monocle.PSetter[List[(Int, String)],List[(Int, String)],β$0$,β$0$]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-57423.8701" rx="344.2221" ry="26.7407"/>
<text text-anchor="start" x="417.1596" y="-57427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Unzip[[β$0$]monocle.PSetter[List[(Int, String)],List[(Int, String)],β$0$,β$0$]]</text>
<text text-anchor="middle" x="652.6596" y="-57412.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Stream[Int])) =&gt; (Int, Stream[Int])] -->
<g id="node1328" class="node">
<title>org.scalacheck.Arbitrary[((Int, Stream[Int])) =&gt; (Int, Stream[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-12643.8701" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="2983.8678" y="-12647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Int, Stream[Int])) =&gt; (Int, Stream[Int])]</text>
<text text-anchor="middle" x="3166.8678" y="-12632.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Stream[Int])) =&gt; (Int, Stream[Int])]&#45;&gt;org.scalacheck.Cogen[(Int, Stream[Int])] -->
<g id="edge587" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Stream[Int])) =&gt; (Int, Stream[Int])]&#45;&gt;org.scalacheck.Cogen[(Int, Stream[Int])]</title>
<path fill="none" stroke="#000000" d="M3205.5936,-12617.0974C3336.2994,-12524.0842 3761.5328,-12199.2379 3914.9868,-11808.8701 3923.7687,-11786.53 3906.319,-11394.1438 3922.9868,-11376.8701 3990.5887,-11306.8101 4257.5489,-11313.5069 4431.4819,-11326.1865"/>
<polygon fill="#000000" stroke="#000000" points="4431.2722,-11329.6805 4441.5041,-11326.9312 4431.791,-11322.6997 4431.2722,-11329.6805"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Stream[Int])) =&gt; (Int, Stream[Int])]&#45;&gt;org.scalacheck.Arbitrary[(Int, Stream[Int])] -->
<g id="edge841" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Stream[Int])) =&gt; (Int, Stream[Int])]&#45;&gt;org.scalacheck.Arbitrary[(Int, Stream[Int])]</title>
<path fill="none" stroke="#000000" d="M3407.6472,-12656.0839C3690.2872,-12670.4211 4152.5302,-12693.869 4405.9841,-12706.7257"/>
<polygon fill="#000000" stroke="#000000" points="4405.8651,-12710.2241 4416.0296,-12707.2353 4406.2198,-12703.2331 4405.8651,-12710.2241"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int, Stream[Int])) =&gt; (Int, Stream[Int])]&#45;&gt;scala.reflect.ClassTag[((Int, Stream[Int])) =&gt; (Int, Stream[Int])] -->
<g id="edge621" class="edge">
<title>org.scalacheck.Arbitrary[((Int, Stream[Int])) =&gt; (Int, Stream[Int])]&#45;&gt;scala.reflect.ClassTag[((Int, Stream[Int])) =&gt; (Int, Stream[Int])]</title>
<path fill="none" stroke="#000000" d="M3437.1843,-12643.8701C3689.592,-12643.8701 4064.2468,-12643.8701 4316.4792,-12643.8701"/>
<polygon fill="#000000" stroke="#000000" points="4316.5223,-12647.3702 4326.5223,-12643.8701 4316.5223,-12640.3702 4316.5223,-12647.3702"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Float,(Float, Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="node1329" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Float,(Float, Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-32187.8701" rx="646.0913" ry="26.7407"/>
<text text-anchor="start" x="4137.253" y="-32191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Float,(Float, Char :: Float :: Long :: Double :: shapeless.HNil)]</text>
<text text-anchor="middle" x="4586.253" y="-32176.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Float,(Float, Char :: Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless._0,Float,(Float, Float :: Long :: Double :: shapeless.HNil)] -->
<g id="edge96" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Float,(Float, Char :: Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless._0,Float,(Float, Float :: Long :: Double :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M5232.5841,-32187.8701C5247.9057,-32187.8701 5263.2208,-32187.8701 5278.4941,-32187.8701"/>
<polygon fill="#000000" stroke="#000000" points="5278.5245,-32191.3702 5288.5245,-32187.8701 5278.5244,-32184.3702 5278.5245,-32191.3702"/>
</g>
<!-- org.scalactic.Equality[monocle.Binary] -->
<g id="node1330" class="node">
<title>org.scalactic.Equality[monocle.Binary]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-17957.8701" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="4478.753" y="-17961.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[monocle.Binary]</text>
<text text-anchor="middle" x="4586.253" y="-17946.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalactic.Equality[monocle.Binary]&#45;&gt;scalaz.Equal[monocle.Binary] -->
<g id="edge1213" class="edge">
<title>org.scalactic.Equality[monocle.Binary]&#45;&gt;scalaz.Equal[monocle.Binary]</title>
<path fill="none" stroke="#000000" d="M4749.7847,-17957.8701C5003.0043,-17957.8701 5485.4865,-17957.8701 5722.9802,-17957.8701"/>
<polygon fill="#000000" stroke="#000000" points="5723.0609,-17961.3702 5733.0609,-17957.8701 5723.0608,-17954.3702 5723.0609,-17961.3702"/>
</g>
<!-- org.scalactic.Equality[Option[List[Int]]] -->
<g id="node1332" class="node">
<title>org.scalactic.Equality[Option[List[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-21501.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="3057.3678" y="-21505.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[List[Int]]]</text>
<text text-anchor="middle" x="3166.8678" y="-21490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 11ms</text>
</g>
<!-- org.scalactic.Equality[Option[List[Int]]]&#45;&gt;scalaz.Equal[Option[List[Int]]] -->
<g id="edge1224" class="edge">
<title>org.scalactic.Equality[Option[List[Int]]]&#45;&gt;scalaz.Equal[Option[List[Int]]]</title>
<path fill="none" stroke="#000000" d="M3333.1646,-21501.8701C3615.041,-21501.8701 4181.6658,-21501.8701 4445.327,-21501.8701"/>
<polygon fill="#000000" stroke="#000000" points="4445.3465,-21505.3702 4455.3464,-21501.8701 4445.3464,-21498.3702 4445.3465,-21505.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]]] -->
<g id="edge690" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;org.scalacheck.Arbitrary[Option[scalaz.Cofree[Option,Int]]]</title>
<path fill="none" stroke="#000000" d="M3243.5901,-12976.6233C3378.9661,-13020.8042 3669.8786,-13110.117 3922.9868,-13149.8701 4057.1994,-13170.9494 4208.3497,-13180.2516 4332.4252,-13184.1521"/>
<polygon fill="#000000" stroke="#000000" points="4332.3432,-13187.6511 4342.4451,-13184.4572 4332.5563,-13180.6543 4332.3432,-13187.6511"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;scala.reflect.ClassTag[(Int, Option[scalaz.Cofree[Option,Int]])] -->
<g id="edge754" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;scala.reflect.ClassTag[(Int, Option[scalaz.Cofree[Option,Int]])]</title>
<path fill="none" stroke="#000000" d="M3390.098,-12936.1499C3564.6229,-12911.5516 3796.816,-12847.1305 3914.9868,-12679.8701 3924.2755,-12666.7227 3911.8765,-11532.5189 3922.9868,-11520.8701 3984.0507,-11456.846 4210.2017,-11456.6388 4381.5991,-11466.7481"/>
<polygon fill="#000000" stroke="#000000" points="4381.5818,-11470.2534 4391.7751,-11467.3641 4382.0049,-11463.2662 4381.5818,-11470.2534"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge659" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Option[scalaz.Cofree[Option,Int]])]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M3411.3324,-12961.702C3577.1891,-12982.4443 3788.5234,-13037.4032 3914.9868,-13178.8701 3927.9423,-13193.3626 3908.5604,-13208.841 3922.9868,-13221.8701 4132.9336,-13411.4811 6183.7844,-13334.0672 6466.6717,-13331.8701 6619.5136,-13330.6829 6795.0166,-13327.7344 6912.4353,-13325.5336"/>
<polygon fill="#000000" stroke="#000000" points="6912.6197,-13329.0309 6922.552,-13325.3432 6912.4879,-13322.0321 6912.6197,-13329.0309"/>
</g>
<!-- org.scalacheck.Cogen[(Long, Long)] -->
<g id="node1336" class="node">
<title>org.scalacheck.Cogen[(Long, Long)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-4083.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="5761.0954" y="-4087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(Long, Long)]</text>
<text text-anchor="middle" x="5862.0954" y="-4072.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 13ms</text>
</g>
<!-- org.scalacheck.Cogen[(Long, Long)]&#45;&gt;org.scalacheck.Cogen[Long] -->
<g id="edge1162" class="edge">
<title>org.scalacheck.Cogen[(Long, Long)]&#45;&gt;org.scalacheck.Cogen[Long]</title>
<path fill="none" stroke="#000000" d="M6010.1015,-4076.2544C6134.1535,-4073.7428 6314.8327,-4079.1867 6466.6717,-4119.8701 6679.2281,-4176.8219 6905.263,-4316.0982 7000.0327,-4378.6073"/>
<polygon fill="#000000" stroke="#000000" points="6998.2511,-4381.6254 7008.5203,-4384.2323 7002.1182,-4375.7905 6998.2511,-4381.6254"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Float,(Float, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="node1337" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Float,(Float, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-32187.8701" rx="731.2969" ry="26.7407"/>
<text text-anchor="start" x="2657.8678" y="-32191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Float,(Float, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]</text>
<text text-anchor="middle" x="3166.8678" y="-32176.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Float,(Float, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Float,(Float, Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="edge998" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Float,(Float, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._1,Float,(Float, Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M3898.1289,-32187.8701C3908.6732,-32187.8701 3919.2111,-32187.8701 3929.7333,-32187.8701"/>
<polygon fill="#000000" stroke="#000000" points="3929.8166,-32191.3702 3939.8166,-32187.8701 3929.8165,-32184.3702 3929.8166,-32191.3702"/>
</g>
<!-- monocle.Iso[monocle.Unary,Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node1339" class="node">
<title>monocle.Iso[monocle.Unary,Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-23889.8701" rx="241.6612" ry="26.7407"/>
<text text-anchor="start" x="489.6596" y="-23893.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Iso[monocle.Unary,Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-23878.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- monocle.Iso[monocle.Unary,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge38" class="edge">
<title>monocle.Iso[monocle.Unary,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M841.2168,-23872.9803C1011.2398,-23862.424 1243.7611,-23861.1839 1305.3191,-23925.8701 1319.1068,-23940.3584 1299.607,-25351.3101 1313.3191,-25365.8701 1434.596,-25494.6456 1667.7729,-25455.867 1787.3308,-25424.6209"/>
<polygon fill="#000000" stroke="#000000" points="1788.3779,-25427.9641 1797.1396,-25422.0074 1786.5756,-25421.2 1788.3779,-25427.9641"/>
</g>
<!-- monocle.Iso[monocle.Unary,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1039" class="edge">
<title>monocle.Iso[monocle.Unary,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M867.5715,-23877.4548C1030.3884,-23872.4418 1237.2933,-23876.8734 1305.3191,-23925.8701 1787.9755,-24273.511 1852.3862,-25107.4789 1860.797,-25292.9175"/>
<polygon fill="#000000" stroke="#000000" points="1857.303,-25293.1339 1861.2262,-25302.9755 1864.2966,-25292.8354 1857.303,-25293.1339"/>
</g>
<!-- scalaz.Equal[(monocle.Example, Boolean)] -->
<g id="node1342" class="node">
<title>scalaz.Equal[(monocle.Example, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-17813.8701" rx="180.1247" ry="26.7407"/>
<text text-anchor="start" x="5742.5954" y="-17817.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(monocle.Example, Boolean)]</text>
<text text-anchor="middle" x="5862.0954" y="-17802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[(monocle.Example, Boolean)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge494" class="edge">
<title>scalaz.Equal[(monocle.Example, Boolean)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M6018.1713,-17800.3101C6176.6919,-17790.3799 6407.0956,-17787.8159 6466.6717,-17849.8701 6483.1036,-17866.9854 6462.4835,-18256.5135 6474.6717,-18276.8701 6581.6087,-18455.4751 6827.8628,-18542.2923 6959.4325,-18577.2528"/>
<polygon fill="#000000" stroke="#000000" points="6958.9173,-18580.7357 6969.4776,-18579.8803 6960.6888,-18573.9635 6958.9173,-18580.7357"/>
</g>
<!-- scalaz.Equal[(monocle.Example, Boolean)]&#45;&gt;scalaz.Equal[monocle.Example] -->
<g id="edge1013" class="edge">
<title>scalaz.Equal[(monocle.Example, Boolean)]&#45;&gt;scalaz.Equal[monocle.Example]</title>
<path fill="none" stroke="#000000" d="M6039.0201,-17808.4902C6273.4057,-17801.3631 6682.5152,-17788.9231 6900.1395,-17782.3057"/>
<polygon fill="#000000" stroke="#000000" points="6900.4674,-17785.7975 6910.3564,-17781.9951 6900.2546,-17778.8007 6900.4674,-17785.7975"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P) -->
<g id="node1345" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-57495.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="520.1596" y="-57499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-57484.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[C] -->
<g id="node1346" class="node">
<title>org.scalacheck.Arbitrary[C]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-32115.8701" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="576.1596" y="-32119.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[C]</text>
<text text-anchor="middle" x="652.6596" y="-32104.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[C]&#45;&gt;scala.reflect.ClassTag[C] -->
<g id="edge1016" class="edge">
<title>org.scalacheck.Arbitrary[C]&#45;&gt;scala.reflect.ClassTag[C]</title>
<path fill="none" stroke="#000000" d="M772.2063,-32115.8701C1003.8534,-32115.8701 1511.3796,-32115.8701 1742.7878,-32115.8701"/>
<polygon fill="#000000" stroke="#000000" points="1742.9234,-32119.3702 1752.9234,-32115.8701 1742.9234,-32112.3702 1742.9234,-32119.3702"/>
</g>
<!-- Double =&gt; Int -->
<g id="node1348" class="node">
<title>Double =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-57567.8701" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="609.1596" y="-57571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Double =&gt; Int</text>
<text text-anchor="middle" x="652.6596" y="-57556.6701" font-family="Times,serif" font-size="14.00" fill="#000000">19 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Double,(Double, Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Long :: Double :: shapeless.HNil,shapeless.nat._1,Double,(Double, Long :: Double :: shapeless.HNil)] -->
<g id="edge305" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Double,(Double, Float :: Long :: Double :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Long :: Double :: shapeless.HNil,shapeless.nat._1,Double,(Double, Long :: Double :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M6467.0607,-38127.8701C6475.0692,-38127.8701 6483.0746,-38127.8701 6491.0709,-38127.8701"/>
<polygon fill="#000000" stroke="#000000" points="6491.1943,-38131.3702 6501.1942,-38127.8701 6491.1942,-38124.3702 6491.1943,-38131.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[String,String] -->
<g id="node1350" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[String,String]</title>
<ellipse fill="none" stroke="#000000" cx="1862.034" cy="-30135.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="1735.034" y="-30139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[String,String]</text>
<text text-anchor="middle" x="1862.034" y="-30124.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[String,String]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,String,String] -->
<g id="edge1172" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[String,String]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,String,String]</title>
<path fill="none" stroke="#000000" d="M2053.1654,-30135.8701C2272.594,-30135.8701 2634.5542,-30135.8701 2886.0258,-30135.8701"/>
<polygon fill="#000000" stroke="#000000" points="2886.0448,-30139.3702 2896.0448,-30135.8701 2886.0447,-30132.3702 2886.0448,-30139.3702"/>
</g>
<!-- scalaz.Functor[F$macro$12] -->
<g id="node1351" class="node">
<title>scalaz.Functor[F$macro$12]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-57639.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="574.1596" y="-57643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$12]</text>
<text text-anchor="middle" x="652.6596" y="-57628.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[IsoSpec.this.AnObject.type] -->
<g id="node1352" class="node">
<title>scalaz.Equal[IsoSpec.this.AnObject.type]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-57711.8701" rx="171.6541" ry="26.7407"/>
<text text-anchor="start" x="539.1596" y="-57715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[IsoSpec.this.AnObject.type]</text>
<text text-anchor="middle" x="652.6596" y="-57700.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.IList[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge876" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.IList[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6013.4538,-14105.1166C6172.0683,-14115.2738 6406.4612,-14118.4995 6466.6717,-14055.8701 6481.9989,-14039.9271 6463.486,-13676.9483 6474.6717,-13657.8701 6579.9907,-13478.2388 6822.2096,-13385.1115 6954.9413,-13345.992"/>
<polygon fill="#000000" stroke="#000000" points="6956.0711,-13349.3086 6964.6965,-13343.1561 6954.117,-13342.5868 6956.0711,-13349.3086"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Char]]&#45;&gt;scala.reflect.ClassTag[List[Char]] -->
<g id="edge252" class="edge">
<title>org.scalacheck.Arbitrary[List[Char]]&#45;&gt;scala.reflect.ClassTag[List[Char]]</title>
<path fill="none" stroke="#000000" d="M5959.733,-1069.1826C6080.2052,-1044.4624 6291.5762,-1003.7096 6474.6717,-981.8701 6616.8109,-964.9157 6779.8591,-955.6437 6895.2978,-950.7762"/>
<polygon fill="#000000" stroke="#000000" points="6895.7719,-954.2596 6905.618,-950.3474 6895.4813,-947.2657 6895.7719,-954.2596"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Char]]&#45;&gt;List[Char] =&gt; Traversable[Char] -->
<g id="edge920" class="edge">
<title>org.scalacheck.Arbitrary[List[Char]]&#45;&gt;List[Char] =&gt; Traversable[Char]</title>
<path fill="none" stroke="#000000" d="M6015.0529,-1089.8701C6243.4532,-1089.8701 6670.9135,-1089.8701 6896.9984,-1089.8701"/>
<polygon fill="#000000" stroke="#000000" points="6897.2786,-1093.3702 6907.2786,-1089.8701 6897.2785,-1086.3702 6897.2786,-1093.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Char]]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge452" class="edge">
<title>org.scalacheck.Arbitrary[List[Char]]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M6014.5137,-1087.8765C6157.064,-1095.191 6363.0801,-1131.273 6466.6717,-1269.8701 6481.2314,-1289.3497 6458.0045,-4754.1601 6474.6717,-4771.8701 6532.5176,-4833.3347 6765.1037,-4829.0866 6915.0985,-4819.2662"/>
<polygon fill="#000000" stroke="#000000" points="6915.5607,-4822.7432 6925.3038,-4818.5812 6915.0919,-4815.7589 6915.5607,-4822.7432"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Char]]&#45;&gt;org.scalacheck.util.Buildable[Char,List[Char]] -->
<g id="edge185" class="edge">
<title>org.scalacheck.Arbitrary[List[Char]]&#45;&gt;org.scalacheck.util.Buildable[Char,List[Char]]</title>
<path fill="none" stroke="#000000" d="M6006.6748,-1081.0775C6221.3408,-1068.0226 6624.3468,-1043.5137 6860.4959,-1029.1523"/>
<polygon fill="#000000" stroke="#000000" points="6860.7983,-1032.6405 6870.5674,-1028.5398 6860.3734,-1025.6534 6860.7983,-1032.6405"/>
</g>
<!-- monocle.function.Each[shapeless.HNil,Any]&#45;&gt;shapeless.Generic.Aux[shapeless.HNil,SGen] -->
<g id="edge457" class="edge">
<title>monocle.function.Each[shapeless.HNil,Any]&#45;&gt;shapeless.Generic.Aux[shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M9531.6089,-26587.8276C9644.4799,-26589.934 9791.2631,-26598.7158 9918.7254,-26625.8701 10114.1412,-26667.5009 10331.6575,-26762.7811 10435.8311,-26811.688"/>
<polygon fill="#000000" stroke="#000000" points="10434.4121,-26814.8885 10444.9499,-26815.9868 10437.397,-26808.5568 10434.4121,-26814.8885"/>
</g>
<!-- scalaz.Equal[Unit =&gt; monocle.Nullary]&#45;&gt;scalaz.Equal[monocle.Nullary] -->
<g id="edge944" class="edge">
<title>scalaz.Equal[Unit =&gt; monocle.Nullary]&#45;&gt;scalaz.Equal[monocle.Nullary]</title>
<path fill="none" stroke="#000000" d="M6024.8511,-16306.819C6258.466,-16313.9227 6684.9387,-16326.8907 6905.5254,-16333.5982"/>
<polygon fill="#000000" stroke="#000000" points="6905.4471,-16337.0973 6915.5489,-16333.9029 6905.6599,-16330.1005 6905.4471,-16337.0973"/>
</g>
<!-- scalaz.Equal[Unit =&gt; monocle.Nullary]&#45;&gt;org.scalacheck.Arbitrary[Unit] -->
<g id="edge737" class="edge">
<title>scalaz.Equal[Unit =&gt; monocle.Nullary]&#45;&gt;org.scalacheck.Arbitrary[Unit]</title>
<path fill="none" stroke="#000000" d="M6007.9426,-16314.6312C6166.4548,-16324.9289 6405.3861,-16328.831 6466.6717,-16265.8701 6485.747,-16246.2733 6455.6302,-16039.4997 6474.6717,-16019.8701 6601.0025,-15889.637 6837.7001,-15926.838 6963.1147,-15958.9021"/>
<polygon fill="#000000" stroke="#000000" points="6962.4952,-15962.3575 6973.0546,-15961.4924 6964.2604,-15955.5837 6962.4952,-15962.3575"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Maybe[Long]] -->
<g id="node1359" class="node">
<title>org.scalacheck.Arbitrary[scalaz.Maybe[Long]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-5311.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="5734.0954" y="-5315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.Maybe[Long]]</text>
<text text-anchor="middle" x="5862.0954" y="-5300.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.Maybe[Long]]&#45;&gt;org.scalacheck.Arbitrary[Long] -->
<g id="edge393" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.Maybe[Long]]&#45;&gt;org.scalacheck.Arbitrary[Long]</title>
<path fill="none" stroke="#000000" d="M6029.2857,-5298.5809C6186.418,-5290.0724 6406.2334,-5289.7423 6466.6717,-5347.8701 6479.7083,-5360.4083 6461.6567,-5416.3094 6474.6717,-5428.8701 6604.1822,-5553.8602 6836.3722,-5520.0282 6961.1597,-5489.5294"/>
<polygon fill="#000000" stroke="#000000" points="6962.201,-5492.8771 6971.0575,-5487.0622 6960.5078,-5486.0849 6962.201,-5492.8771"/>
</g>
<!-- scalaz.Equal[(Int, Char, Boolean, String, Long)] -->
<g id="node1360" class="node">
<title>scalaz.Equal[(Int, Char, Boolean, String, Long)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-19231.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="5729.5954" y="-19235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, Char, Boolean, String, Long)]</text>
<text text-anchor="middle" x="5862.0954" y="-19220.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[(Int, Char, Boolean, String, Long)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge858" class="edge">
<title>scalaz.Equal[(Int, Char, Boolean, String, Long)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M6030.344,-19217.5255C6188.2898,-19208.206 6408.7162,-19207.2666 6466.6717,-19267.8701 6477.04,-19278.712 6467.3263,-19794.7898 6474.6717,-19807.8701 6582.9308,-20000.6516 6841.7435,-20104.7658 6970.5439,-20146.2309"/>
<polygon fill="#000000" stroke="#000000" points="6969.7504,-20149.6511 6980.3408,-20149.3445 6971.8707,-20142.98 6969.7504,-20149.6511"/>
</g>
<!-- scalaz.Equal[(Int, Char, Boolean, String, Long)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge963" class="edge">
<title>scalaz.Equal[(Int, Char, Boolean, String, Long)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M6029.7356,-19217.4421C6187.8356,-19207.9834 6408.9408,-19206.8714 6466.6717,-19267.8701 6483.8565,-19286.0276 6466.1289,-21044.3747 6474.6717,-21067.8701 6585.0476,-21371.4368 6893.3587,-21635.9823 7004.9967,-21724.4437"/>
<polygon fill="#000000" stroke="#000000" points="7002.9815,-21727.3118 7013.0023,-21730.752 7007.314,-21721.8136 7002.9815,-21727.3118"/>
</g>
<!-- scalaz.Equal[(Int, Char, Boolean, String, Long)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge906" class="edge">
<title>scalaz.Equal[(Int, Char, Boolean, String, Long)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M6030.6472,-19246.171C6188.5145,-19255.4199 6408.6018,-19256.2728 6466.6717,-19195.8701 6481.9989,-19179.9271 6461.7085,-18815.788 6474.6717,-18797.8701 6581.1454,-18650.7 6804.0873,-18610.6243 6937.8276,-18600.1231"/>
<polygon fill="#000000" stroke="#000000" points="6938.3814,-18603.5917 6948.095,-18599.3612 6937.8634,-18596.6109 6938.3814,-18603.5917"/>
</g>
<!-- scalaz.Equal[(Int, Char, Boolean, String, Long)]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge967" class="edge">
<title>scalaz.Equal[(Int, Char, Boolean, String, Long)]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M6056.5743,-19226.2995C6176.3541,-19227.072 6332.1999,-19235.691 6466.6717,-19267.8701 6673.2978,-19317.3156 6898.9221,-19436.2106 6996.4965,-19491.1482"/>
<polygon fill="#000000" stroke="#000000" points="6994.8287,-19494.2259 7005.2561,-19496.1024 6998.2748,-19488.1329 6994.8287,-19494.2259"/>
</g>
<!-- scalaz.Equal[(Int, Char, Boolean, String, Long)]&#45;&gt;scalaz.Equal[Long] -->
<g id="edge1258" class="edge">
<title>scalaz.Equal[(Int, Char, Boolean, String, Long)]&#45;&gt;scalaz.Equal[Long]</title>
<path fill="none" stroke="#000000" d="M6030.59,-19246.1159C6188.4135,-19255.3226 6408.468,-19256.1439 6466.6717,-19195.8701 6479.2563,-19182.8379 6462.1096,-18882.9239 6474.6717,-18869.8701 6604.7131,-18734.7378 6853.4619,-18779.2562 6975.2699,-18812.0052"/>
<polygon fill="#000000" stroke="#000000" points="6974.667,-18815.469 6985.2364,-18814.7351 6976.5163,-18808.7176 6974.667,-18815.469"/>
</g>
<!-- monocle.function.Empty[List[Char]] -->
<g id="node1361" class="node">
<title>monocle.function.Empty[List[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-57783.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="551.6596" y="-57787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[List[Char]]</text>
<text text-anchor="middle" x="652.6596" y="-57772.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Category[monocle.Prism] -->
<g id="node1362" class="node">
<title>scalaz.Category[monocle.Prism]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-57855.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="563.1596" y="-57859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Category[monocle.Prism]</text>
<text text-anchor="middle" x="652.6596" y="-57844.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[(String, Char)]&#45;&gt;org.scalacheck.Cogen[Char] -->
<g id="edge570" class="edge">
<title>org.scalacheck.Cogen[(String, Char)]&#45;&gt;org.scalacheck.Cogen[Char]</title>
<path fill="none" stroke="#000000" d="M6000.4532,-4350.3765C6159.0764,-4361.2948 6405.1697,-4366.6285 6466.6717,-4301.8701 6486.0308,-4281.486 6455.3478,-3310.2875 6474.6717,-3289.8701 6600.3886,-3157.0385 6840.5807,-3196.5685 6965.7178,-3229.3014"/>
<polygon fill="#000000" stroke="#000000" points="6965.0627,-3232.7489 6975.6267,-3231.9422 6966.8654,-3225.985 6965.0627,-3232.7489"/>
</g>
<!-- org.scalacheck.Cogen[(String, Char)]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge932" class="edge">
<title>org.scalacheck.Cogen[(String, Char)]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M6000.4792,-4325.339C6159.128,-4314.3965 6405.2463,-4309.039 6466.6717,-4373.8701 6480.4658,-4388.4289 6463.6728,-5801.0992 6474.6717,-5817.8701 6574.6541,-5970.32 6789.8244,-6031.2237 6925.7042,-6055.0697"/>
<polygon fill="#000000" stroke="#000000" points="6925.306,-6058.5524 6935.7534,-6056.7912 6926.4879,-6051.6529 6925.306,-6058.5524"/>
</g>
<!-- scalaz.Category[monocle.Setter] -->
<g id="node1366" class="node">
<title>scalaz.Category[monocle.Setter]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-57927.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="563.6596" y="-57931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Category[monocle.Setter]</text>
<text text-anchor="middle" x="652.6596" y="-57916.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int] =&gt; scalaz.OneAnd[Stream,Int]] -->
<g id="node1367" class="node">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int] =&gt; scalaz.OneAnd[Stream,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-11772.8701" rx="340.651" ry="26.7407"/>
<text text-anchor="start" x="2933.8678" y="-11776.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int] =&gt; scalaz.OneAnd[Stream,Int]]</text>
<text text-anchor="middle" x="3166.8678" y="-11761.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 25ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int] =&gt; scalaz.OneAnd[Stream,Int]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int]] -->
<g id="edge71" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int] =&gt; scalaz.OneAnd[Stream,Int]]&#45;&gt;org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int]]</title>
<path fill="none" stroke="#000000" d="M3453.6744,-11787.4187C3726.0837,-11801.2369 4129.3386,-11821.6925 4373.9786,-11834.1022"/>
<polygon fill="#000000" stroke="#000000" points="4373.8951,-11837.6024 4384.0596,-11834.6136 4374.2498,-11830.6113 4373.8951,-11837.6024"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int] =&gt; scalaz.OneAnd[Stream,Int]]&#45;&gt;org.scalacheck.Cogen[scalaz.OneAnd[Stream,Int]] -->
<g id="edge795" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int] =&gt; scalaz.OneAnd[Stream,Int]]&#45;&gt;org.scalacheck.Cogen[scalaz.OneAnd[Stream,Int]]</title>
<path fill="none" stroke="#000000" d="M3343.1732,-11749.8265C3519.9205,-11716.5042 3784.0605,-11636.6775 3914.9868,-11448.8701 3924.151,-11435.7244 3911.6484,-11316.194 3922.9868,-11304.8701 3988.4708,-11239.4695 4232.5791,-11241.9276 4405.5781,-11252.8611"/>
<polygon fill="#000000" stroke="#000000" points="4405.366,-11256.3546 4415.571,-11253.507 4405.8176,-11249.3692 4405.366,-11256.3546"/>
</g>
<!-- org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int] =&gt; scalaz.OneAnd[Stream,Int]]&#45;&gt;scala.reflect.ClassTag[scalaz.OneAnd[Stream,Int] =&gt; scalaz.OneAnd[Stream,Int]] -->
<g id="edge583" class="edge">
<title>org.scalacheck.Arbitrary[scalaz.OneAnd[Stream,Int] =&gt; scalaz.OneAnd[Stream,Int]]&#45;&gt;scala.reflect.ClassTag[scalaz.OneAnd[Stream,Int] =&gt; scalaz.OneAnd[Stream,Int]]</title>
<path fill="none" stroke="#000000" d="M3507.7487,-11772.8701C3731.2085,-11772.8701 4022.2233,-11772.8701 4245.6309,-11772.8701"/>
<polygon fill="#000000" stroke="#000000" points="4245.8834,-11776.3702 4255.8834,-11772.8701 4245.8834,-11769.3702 4245.8834,-11776.3702"/>
</g>
<!-- org.scalatest.enablers.CheckerAsserting[ASSERTION] -->
<g id="node1370" class="node">
<title>org.scalatest.enablers.CheckerAsserting[ASSERTION]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-57999.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="502.1596" y="-58003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalatest.enablers.CheckerAsserting[ASSERTION]</text>
<text text-anchor="middle" x="652.6596" y="-57988.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[UnsafeSelectSpec.this.Person] -->
<g id="node1371" class="node">
<title>scalaz.Equal[UnsafeSelectSpec.this.Person]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-58071.8701" rx="180.1247" ry="26.7407"/>
<text text-anchor="start" x="533.1596" y="-58075.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[UnsafeSelectSpec.this.Person]</text>
<text text-anchor="middle" x="652.6596" y="-58060.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- a1.tail.type =&gt; ?{def :+: ?} -->
<g id="node1372" class="node">
<title>a1.tail.type =&gt; ?{def :+: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-58143.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-58147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">a1.tail.type =&gt; ?{def :+: ?}</text>
<text text-anchor="middle" x="652.6596" y="-58132.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P) -->
<g id="node1373" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-58215.8701" rx="212.6784" ry="26.7407"/>
<text text-anchor="start" x="510.1596" y="-58219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; (?A1 =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-58204.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]&#45;&gt;scala.reflect.ClassTag[(Char, Boolean, String, Long, Float)] -->
<g id="edge1189" class="edge">
<title>org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]&#45;&gt;scala.reflect.ClassTag[(Char, Boolean, String, Long, Float)]</title>
<path fill="none" stroke="#000000" d="M6116.0756,-5637.8701C6315.8561,-5637.8701 6592.8743,-5637.8701 6792.5274,-5637.8701"/>
<polygon fill="#000000" stroke="#000000" points="6792.5721,-5641.3702 6802.572,-5637.8701 6792.572,-5634.3702 6792.5721,-5641.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge1005" class="edge">
<title>org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6064.7075,-5621.6126C6218.7168,-5614.2455 6412.9711,-5617.3818 6466.6717,-5673.8701 6483.8973,-5691.9899 6457.4774,-6555.7206 6474.6717,-6573.8701 6531.3421,-6633.6886 6754.2979,-6631.1197 6904.3529,-6621.8859"/>
<polygon fill="#000000" stroke="#000000" points="6904.8187,-6625.3635 6914.5779,-6621.2395 6904.377,-6618.3775 6904.8187,-6625.3635"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge399" class="edge">
<title>org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6064.0076,-5621.5751C6218.1865,-5614.1163 6413.0297,-5617.1451 6466.6717,-5673.8701 6487.7425,-5696.1518 6457.3844,-7856.5401 6474.6717,-7881.8701 6571.6855,-8024.0181 6773.3459,-8076.7591 6909.2188,-8096.3273"/>
<polygon fill="#000000" stroke="#000000" points="6908.9051,-8099.8174 6919.2932,-8097.735 6909.8738,-8092.8848 6908.9051,-8099.8174"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Long] -->
<g id="edge534" class="edge">
<title>org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Long]</title>
<path fill="none" stroke="#000000" d="M6071.1962,-5653.1634C6223.16,-5659.3185 6411.4753,-5655.0197 6466.6717,-5601.8701 6479.8602,-5589.1707 6461.7172,-5532.808 6474.6717,-5519.8701 6533.2577,-5461.3593 6756.5408,-5455.6361 6906.0081,-5458.8227"/>
<polygon fill="#000000" stroke="#000000" points="6906.1137,-5462.326 6916.1913,-5459.056 6906.2741,-5455.3278 6906.1137,-5462.326"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge966" class="edge">
<title>org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M6064.6826,-5654.1038C6218.6772,-5661.457 6412.9241,-5658.3136 6466.6717,-5601.8701 6481.1924,-5586.621 6460.1773,-4859.1442 6474.6717,-4843.8701 6532.7294,-4782.6892 6764.94,-4786.8089 6914.861,-4796.5343"/>
<polygon fill="#000000" stroke="#000000" points="6914.8515,-4800.0413 6925.0618,-4797.2128 6915.3161,-4793.0568 6914.8515,-4800.0413"/>
</g>
<!-- org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Float] -->
<g id="edge1366" class="edge">
<title>org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]&#45;&gt;org.scalacheck.Arbitrary[Float]</title>
<path fill="none" stroke="#000000" d="M6087.538,-5625.5065C6201.2623,-5619.0002 6341.323,-5610.5776 6466.6717,-5601.8701 6619.979,-5591.2204 6795.9385,-5576.9599 6913.3276,-5567.155"/>
<polygon fill="#000000" stroke="#000000" points="6913.7671,-5570.6305 6923.4405,-5566.3092 6913.1836,-5563.6549 6913.7671,-5570.6305"/>
</g>
<!-- monocle.Iso[monocle.Nullary,Unit] =&gt; ?{def shouldEqual: ?} -->
<g id="node1375" class="node">
<title>monocle.Iso[monocle.Nullary,Unit] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-23817.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="481.1596" y="-23821.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Iso[monocle.Nullary,Unit] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-23806.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.Iso[monocle.Nullary,Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge1270" class="edge">
<title>monocle.Iso[monocle.Nullary,Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M847.324,-23800.6033C1016.7628,-23790.3975 1244.503,-23789.9465 1305.3191,-23853.8701 1319.7942,-23869.0847 1298.9235,-25350.5803 1313.3191,-25365.8701 1434.579,-25494.6616 1667.7635,-25455.8759 1787.3269,-25424.6245"/>
<polygon fill="#000000" stroke="#000000" points="1788.3746,-25427.9676 1797.1362,-25422.0106 1786.5721,-25421.2036 1788.3746,-25427.9676"/>
</g>
<!-- monocle.Iso[monocle.Nullary,Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1116" class="edge">
<title>monocle.Iso[monocle.Nullary,Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M875.268,-23804.9184C1037.0103,-23800.1021 1238.7375,-23805.0577 1305.3191,-23853.8701 1559.3156,-24040.08 1806.272,-25083.0378 1853.8283,-25293.0294"/>
<polygon fill="#000000" stroke="#000000" points="1850.4502,-25293.9598 1856.0655,-25302.9442 1857.2786,-25292.4191 1850.4502,-25293.9598"/>
</g>
<!-- shapeless.ops.hlist.Init[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Init[Char :: Float :: Long :: Double :: shapeless.HNil] -->
<g id="edge294" class="edge">
<title>shapeless.ops.hlist.Init[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Init[Char :: Float :: Long :: Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M3501.4449,-33654.8701C3738.6741,-33654.8701 4054.3774,-33654.8701 4284.0108,-33654.8701"/>
<polygon fill="#000000" stroke="#000000" points="4284.1946,-33658.3702 4294.1946,-33654.8701 4284.1945,-33651.3702 4284.1946,-33658.3702"/>
</g>
<!-- monocle.Nullary =&gt; ?{def shouldEqual: ?} -->
<g id="node1377" class="node">
<title>monocle.Nullary =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-26913.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="533.6596" y="-26917.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Nullary =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-26902.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.Nullary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge489" class="edge">
<title>monocle.Nullary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M817.4074,-26924.65C985.0301,-26932.1929 1230.5006,-26932.721 1305.3191,-26877.8701 1559.3156,-26691.6601 1806.272,-25648.7023 1853.8283,-25438.7107"/>
<polygon fill="#000000" stroke="#000000" points="1857.2786,-25439.321 1856.0655,-25428.7959 1850.4502,-25437.7803 1857.2786,-25439.321"/>
</g>
<!-- monocle.Nullary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1089" class="edge">
<title>monocle.Nullary =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M804.6593,-26928.2939C975.9614,-26940.7791 1239.2231,-26947.3432 1305.3191,-26877.8701 1319.7942,-26862.6554 1298.9235,-25381.1598 1313.3191,-25365.8701 1432.3511,-25239.4447 1659.2328,-25274.4956 1780.6232,-25305.3865"/>
<polygon fill="#000000" stroke="#000000" points="1780.0474,-25308.853 1790.606,-25307.9782 1781.8064,-25302.0776 1780.0474,-25308.853"/>
</g>
<!-- scalaz.Equal[Option[PrismSpec.this.IntOrString]]&#45;&gt;scalaz.Equal[PrismSpec.this.IntOrString] -->
<g id="edge314" class="edge">
<title>scalaz.Equal[Option[PrismSpec.this.IntOrString]]&#45;&gt;scalaz.Equal[PrismSpec.this.IntOrString]</title>
<path fill="none" stroke="#000000" d="M2061.6305,-42165.3769C2314.2078,-42172.3454 2745.4556,-42184.2434 2987.8487,-42190.931"/>
<polygon fill="#000000" stroke="#000000" points="2988.0828,-42194.4387 2998.1756,-42191.2159 2988.276,-42187.4413 2988.0828,-42194.4387"/>
</g>
<!-- ((Int, Stream[Int])) =&gt; ?{def ===: ?} -->
<g id="node1379" class="node">
<title>((Int, Stream[Int])) =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-58287.8701" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="549.1596" y="-58291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Stream[Int])) =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="652.6596" y="-58276.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Index[monocle.function.MMap[Int,String],Int,String] -->
<g id="node1380" class="node">
<title>monocle.function.Index[monocle.function.MMap[Int,String],Int,String]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-58359.8701" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="455.6596" y="-58363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[monocle.function.MMap[Int,String],Int,String]</text>
<text text-anchor="middle" x="652.6596" y="-58348.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[monocle.function.Raw] -->
<g id="node1381" class="node">
<title>scalaz.Equal[monocle.function.Raw]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-58431.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="551.6596" y="-58435.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.function.Raw]</text>
<text text-anchor="middle" x="652.6596" y="-58420.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((String, Boolean)) =&gt; (String, Boolean)] -->
<g id="node1382" class="node">
<title>org.scalacheck.Arbitrary[((String, Boolean)) =&gt; (String, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-6141.8701" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="4403.253" y="-6145.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((String, Boolean)) =&gt; (String, Boolean)]</text>
<text text-anchor="middle" x="4586.253" y="-6130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 36ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((String, Boolean)) =&gt; (String, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[(String, Boolean)] -->
<g id="edge1024" class="edge">
<title>org.scalacheck.Arbitrary[((String, Boolean)) =&gt; (String, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[(String, Boolean)]</title>
<path fill="none" stroke="#000000" d="M4639.8326,-6168.3498C4751.484,-6222.0812 5018.5571,-6343.1112 5257.5191,-6393.8701 5394.824,-6423.0355 5553.3322,-6431.5726 5673.5919,-6433.0645"/>
<polygon fill="#000000" stroke="#000000" points="5673.6047,-6436.5648 5683.6423,-6433.1739 5673.681,-6429.5652 5673.6047,-6436.5648"/>
</g>
<!-- org.scalacheck.Arbitrary[((String, Boolean)) =&gt; (String, Boolean)]&#45;&gt;org.scalacheck.Cogen[(String, Boolean)] -->
<g id="edge318" class="edge">
<title>org.scalacheck.Arbitrary[((String, Boolean)) =&gt; (String, Boolean)]&#45;&gt;org.scalacheck.Cogen[(String, Boolean)]</title>
<path fill="none" stroke="#000000" d="M4856.4363,-6141.8701C5105.358,-6141.8701 5467.7245,-6141.8701 5682.719,-6141.8701"/>
<polygon fill="#000000" stroke="#000000" points="5682.8444,-6145.3702 5692.8444,-6141.8701 5682.8443,-6138.3702 5682.8444,-6145.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[((String, Boolean)) =&gt; (String, Boolean)]&#45;&gt;scala.reflect.ClassTag[((String, Boolean)) =&gt; (String, Boolean)] -->
<g id="edge503" class="edge">
<title>org.scalacheck.Arbitrary[((String, Boolean)) =&gt; (String, Boolean)]&#45;&gt;scala.reflect.ClassTag[((String, Boolean)) =&gt; (String, Boolean)]</title>
<path fill="none" stroke="#000000" d="M4821.3769,-6128.6012C5049.6871,-6115.7169 5394.4892,-6096.2586 5623.8529,-6083.3149"/>
<polygon fill="#000000" stroke="#000000" points="5624.218,-6086.7999 5634.0049,-6082.742 5623.8236,-6079.811 5624.218,-6086.7999"/>
</g>
<!-- (=&gt; String) =&gt; Int -->
<g id="node1383" class="node">
<title>(=&gt; String) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-58503.8701" rx="83.3772" ry="26.7407"/>
<text text-anchor="start" x="601.6596" y="-58507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; String) =&gt; Int</text>
<text text-anchor="middle" x="652.6596" y="-58492.6701" font-family="Times,serif" font-size="14.00" fill="#000000">17 times = 2ms</text>
</g>
<!-- monocle.Arities =&gt; ?{def shouldEqual: ?} -->
<g id="node1384" class="node">
<title>monocle.Arities =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-26841.8701" rx="176.5537" ry="26.7407"/>
<text text-anchor="start" x="535.6596" y="-26845.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Arities =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-26830.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 8ms</text>
</g>
<!-- monocle.Arities =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge720" class="edge">
<title>monocle.Arities =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M815.6935,-26852.3353C983.1964,-26859.734 1229.8117,-26860.2555 1305.3191,-26805.8701 1787.9755,-26458.2292 1852.3862,-25624.2613 1860.797,-25438.8226"/>
<polygon fill="#000000" stroke="#000000" points="1864.2966,-25438.9047 1861.2262,-25428.7646 1857.303,-25438.6063 1864.2966,-25438.9047"/>
</g>
<!-- monocle.Arities =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1365" class="edge">
<title>monocle.Arities =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M802.7594,-26856.1521C974.0053,-26868.7236 1238.9695,-26875.5914 1305.3191,-26805.8701 1319.1068,-26791.3817 1299.607,-25380.43 1313.3191,-25365.8701 1432.3678,-25239.4605 1659.2425,-25274.5047 1780.6274,-25305.3905"/>
<polygon fill="#000000" stroke="#000000" points="1780.0512,-25308.8569 1790.6098,-25307.9818 1781.81,-25302.0814 1780.0512,-25308.8569"/>
</g>
<!-- scalaz.Equal[Boolean \/ Int] -->
<g id="node1385" class="node">
<title>scalaz.Equal[Boolean \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-19303.8701" rx="116.8455" ry="26.7407"/>
<text text-anchor="start" x="5787.5954" y="-19307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Boolean / Int]</text>
<text text-anchor="middle" x="5862.0954" y="-19292.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 8ms</text>
</g>
<!-- scalaz.Equal[Boolean \/ Int]&#45;&gt;scalaz.Order[Boolean] -->
<g id="edge593" class="edge">
<title>scalaz.Equal[Boolean \/ Int]&#45;&gt;scalaz.Order[Boolean]</title>
<path fill="none" stroke="#000000" d="M5977.9915,-19300.2856C6099.8957,-19295.7398 6297.1886,-19286.1838 6466.6717,-19267.8701 6640.0983,-19249.1302 6840.8801,-19214.7148 6954.7239,-19193.9993"/>
<polygon fill="#000000" stroke="#000000" points="6955.5819,-19197.4006 6964.791,-19192.1619 6954.325,-19190.5143 6955.5819,-19197.4006"/>
</g>
<!-- scalaz.Equal[Boolean \/ Int]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge579" class="edge">
<title>scalaz.Equal[Boolean \/ Int]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5970.1975,-19293.5601C6125.7379,-19281.3964 6401.2099,-19270.7157 6466.6717,-19339.8701 6483.1707,-19357.2998 6466.4685,-21045.3152 6474.6717,-21067.8701 6585.0757,-21371.4266 6893.3692,-21635.9785 7004.9997,-21724.4426"/>
<polygon fill="#000000" stroke="#000000" points="7002.9841,-21727.3104 7013.0047,-21730.7511 7007.3168,-21721.8125 7002.9841,-21727.3104"/>
</g>
<!-- scalaz.Equal[Boolean \/ Int]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge473" class="edge">
<title>scalaz.Equal[Boolean \/ Int]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M5970.0879,-19314.0756C6125.4881,-19326.1057 6400.7827,-19336.6175 6466.6717,-19267.8701 6484.7416,-19249.0162 6459.3969,-18819.0518 6474.6717,-18797.8701 6580.9187,-18650.5363 6803.9399,-18610.5179 6937.7557,-18600.0711"/>
<polygon fill="#000000" stroke="#000000" points="6938.3135,-18603.5396 6948.029,-18599.3135 6937.7986,-18596.5586 6938.3135,-18603.5396"/>
</g>
<!-- scalaz.Equal[Boolean \/ Int]&#45;&gt;scalaz.Order[Int] -->
<g id="edge943" class="edge">
<title>scalaz.Equal[Boolean \/ Int]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5970.1565,-19293.599C6125.6444,-19281.4852 6401.05,-19270.8674 6466.6717,-19339.8701 6483.2116,-19357.2621 6467.4271,-20180.9885 6474.6717,-20203.8701 6586.9034,-20558.3429 6907.5909,-20895.8697 7012.4133,-20999.4941"/>
<polygon fill="#000000" stroke="#000000" points="7009.9989,-21002.0287 7019.5816,-21006.5479 7014.9087,-20997.0393 7009.9989,-21002.0287"/>
</g>
<!-- scalaz.Equal[Stream[scalaz.Cofree[Stream,A]]]&#45;&gt;scalaz.Equal[scalaz.Cofree[Stream,A]] -->
<g id="edge806" class="edge">
<title>scalaz.Equal[Stream[scalaz.Cofree[Stream,A]]]&#45;&gt;scalaz.Equal[scalaz.Cofree[Stream,A]]</title>
<path fill="none" stroke="#000000" d="M2058.0867,-27849.8701C2312.5104,-27849.8701 2752.4432,-27849.8701 2994.6214,-27849.8701"/>
<polygon fill="#000000" stroke="#000000" points="2994.9335,-27853.3702 3004.9335,-27849.8701 2994.9334,-27846.3702 2994.9335,-27853.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[T[A]] -->
<g id="node1389" class="node">
<title>org.scalacheck.Arbitrary[T[A]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-39279.8701" rx="132.4583" ry="26.7407"/>
<text text-anchor="start" x="567.1596" y="-39283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[T[A]]</text>
<text text-anchor="middle" x="652.6596" y="-39268.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[T[A]]&#45;&gt;scala.reflect.ClassTag[T[A]] -->
<g id="edge39" class="edge">
<title>org.scalacheck.Arbitrary[T[A]]&#45;&gt;scala.reflect.ClassTag[T[A]]</title>
<path fill="none" stroke="#000000" d="M784.9641,-39279.8701C1017.6243,-39279.8701 1497.3551,-39279.8701 1729.8967,-39279.8701"/>
<polygon fill="#000000" stroke="#000000" points="1730.1023,-39283.3702 1740.1022,-39279.8701 1730.1022,-39276.3702 1730.1023,-39283.3702"/>
</g>
<!-- scalaz.Functor[F$macro$3] -->
<g id="node1391" class="node">
<title>scalaz.Functor[F$macro$3]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-58575.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="577.1596" y="-58579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$3]</text>
<text text-anchor="middle" x="652.6596" y="-58564.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[(IsoSpec.this.IntWrapper, Boolean)] -->
<g id="node1392" class="node">
<title>scalaz.Equal[(IsoSpec.this.IntWrapper, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-17669.8701" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="5726.0954" y="-17673.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(IsoSpec.this.IntWrapper, Boolean)]</text>
<text text-anchor="middle" x="5862.0954" y="-17658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scalaz.Equal[(IsoSpec.this.IntWrapper, Boolean)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge1286" class="edge">
<title>scalaz.Equal[(IsoSpec.this.IntWrapper, Boolean)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M6033.7059,-17655.3195C6191.4096,-17646.1781 6409.1492,-17645.6709 6466.6717,-17705.8701 6477.6304,-17717.3387 6466.5553,-18263.2411 6474.6717,-18276.8701 6581.1865,-18455.7271 6827.6224,-18542.4359 6959.3299,-18577.3141"/>
<polygon fill="#000000" stroke="#000000" points="6958.826,-18580.7996 6969.3855,-18579.9352 6960.5917,-18574.026 6958.826,-18580.7996"/>
</g>
<!-- scalaz.Equal[(IsoSpec.this.IntWrapper, Boolean)]&#45;&gt;scalaz.Equal[IsoSpec.this.IntWrapper] -->
<g id="edge530" class="edge">
<title>scalaz.Equal[(IsoSpec.this.IntWrapper, Boolean)]&#45;&gt;scalaz.Equal[IsoSpec.this.IntWrapper]</title>
<path fill="none" stroke="#000000" d="M6055.6496,-17661.5108C6174.4088,-17655.5958 6329.506,-17646.4642 6466.6717,-17633.8701 6620.5208,-17619.7441 6796.5586,-17596.913 6913.8144,-17580.7519"/>
<polygon fill="#000000" stroke="#000000" points="6914.4883,-17584.1921 6923.9151,-17579.3562 6913.5301,-17577.258 6914.4883,-17584.1921"/>
</g>
<!-- scalaz.Category[monocle.Lens] -->
<g id="node1393" class="node">
<title>scalaz.Category[monocle.Lens]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-58647.8701" rx="133.7865" ry="26.7407"/>
<text text-anchor="start" x="566.1596" y="-58651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Category[monocle.Lens]</text>
<text text-anchor="middle" x="652.6596" y="-58636.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Field2[(Boolean, Char, Int, Long, Float, Double),Char] -->
<g id="node1394" class="node">
<title>monocle.function.Field2[(Boolean, Char, Int, Long, Float, Double),Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-57207.8701" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="451.1596" y="-57211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field2[(Boolean, Char, Int, Long, Float, Double),Char]</text>
<text text-anchor="middle" x="652.6596" y="-57196.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Field2[(Boolean, Char, Int, Long, Float, Double),Char]&#45;&gt;shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._1.N,Char] -->
<g id="edge469" class="edge">
<title>monocle.function.Field2[(Boolean, Char, Int, Long, Float, Double),Char]&#45;&gt;shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._1.N,Char]</title>
<path fill="none" stroke="#000000" d="M949.28,-57207.8701C1107.2426,-57207.8701 1303.4753,-57207.8701 1473.4679,-57207.8701"/>
<polygon fill="#000000" stroke="#000000" points="1473.5951,-57211.3702 1483.5951,-57207.8701 1473.5951,-57204.3702 1473.5951,-57211.3702"/>
</g>
<!-- monocle.function.Reverse[String,String] -->
<g id="node1396" class="node">
<title>monocle.function.Reverse[String,String]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-30171.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="541.1596" y="-30175.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[String,String]</text>
<text text-anchor="middle" x="652.6596" y="-30160.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- monocle.function.Reverse[String,String]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[String,String] -->
<g id="edge367" class="edge">
<title>monocle.function.Reverse[String,String]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[String,String]</title>
<path fill="none" stroke="#000000" d="M818.9147,-30176.819C1039.0399,-30183.3716 1426.7894,-30194.9139 1662.4769,-30201.9298"/>
<polygon fill="#000000" stroke="#000000" points="1662.438,-30205.43 1672.5378,-30202.2292 1662.6464,-30198.4331 1662.438,-30205.43"/>
</g>
<!-- monocle.function.Reverse[String,String]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[String,String] -->
<g id="edge903" class="edge">
<title>monocle.function.Reverse[String,String]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[String,String]</title>
<path fill="none" stroke="#000000" d="M818.9147,-30166.9211C1039.8377,-30160.3447 1429.6024,-30148.7424 1665.0337,-30141.7343"/>
<polygon fill="#000000" stroke="#000000" points="1665.1907,-30145.2312 1675.0821,-30141.4351 1664.9823,-30138.2343 1665.1907,-30145.2312"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._3.N,Float,(Float, HListSpec.this.H)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Float,(Float, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)] -->
<g id="edge709" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[HListSpec.this.H,shapeless.nat._3.N,Float,(Float, HListSpec.this.H)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2,Float,(Float, Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M2277.1329,-32187.8701C2325.049,-32187.8701 2374.9425,-32187.8701 2425.5634,-32187.8701"/>
<polygon fill="#000000" stroke="#000000" points="2425.697,-32191.3702 2435.697,-32187.8701 2425.6969,-32184.3702 2425.697,-32191.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Boolean =&gt; Boolean] -->
<g id="node1399" class="node">
<title>org.scalacheck.Arbitrary[Boolean =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-6573.8701" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="5733.0954" y="-6577.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Boolean =&gt; Boolean]</text>
<text text-anchor="middle" x="5862.0954" y="-6562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">17 times = 253ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Boolean =&gt; Boolean]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge32" class="edge">
<title>org.scalacheck.Arbitrary[Boolean =&gt; Boolean]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6051.6558,-6579.6341C6285.0776,-6586.7319 6677.0117,-6598.6496 6892.511,-6605.2024"/>
<polygon fill="#000000" stroke="#000000" points="6892.5364,-6608.7047 6902.6382,-6605.5104 6892.7492,-6601.7079 6892.5364,-6608.7047"/>
</g>
<!-- org.scalacheck.Arbitrary[Boolean =&gt; Boolean]&#45;&gt;scala.reflect.ClassTag[Boolean =&gt; Boolean] -->
<g id="edge178" class="edge">
<title>org.scalacheck.Arbitrary[Boolean =&gt; Boolean]&#45;&gt;scala.reflect.ClassTag[Boolean =&gt; Boolean]</title>
<path fill="none" stroke="#000000" d="M6051.6558,-6568.106C6272.4872,-6561.3911 6635.1921,-6550.3621 6856.1524,-6543.6433"/>
<polygon fill="#000000" stroke="#000000" points="6856.35,-6547.139 6866.239,-6543.3366 6856.1372,-6540.1422 6856.35,-6547.139"/>
</g>
<!-- org.scalacheck.Arbitrary[Boolean =&gt; Boolean]&#45;&gt;org.scalacheck.Cogen[Boolean] -->
<g id="edge1012" class="edge">
<title>org.scalacheck.Arbitrary[Boolean =&gt; Boolean]&#45;&gt;org.scalacheck.Cogen[Boolean]</title>
<path fill="none" stroke="#000000" d="M6035.5972,-6561.8204C6191.0335,-6554.9229 6403.9009,-6556.3733 6466.6717,-6609.8701 6479.1462,-6620.5015 6462.2155,-6635.2171 6474.6717,-6645.8701 6609.2509,-6760.9672 6833.2608,-6733.289 6957.0232,-6705.8232"/>
<polygon fill="#000000" stroke="#000000" points="6957.8748,-6709.219 6966.8538,-6703.595 6956.3274,-6702.3921 6957.8748,-6709.219"/>
</g>
<!-- monocle.function.Field6[(Boolean, Char, Int, Long, Float, Double),Double] -->
<g id="node1400" class="node">
<title>monocle.function.Field6[(Boolean, Char, Int, Long, Float, Double),Double]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-43887.8701" rx="305.4403" ry="26.7407"/>
<text text-anchor="start" x="444.6596" y="-43891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field6[(Boolean, Char, Int, Long, Float, Double),Double]</text>
<text text-anchor="middle" x="652.6596" y="-43876.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Field6[(Boolean, Char, Int, Long, Float, Double),Double]&#45;&gt;shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._5.N,Double] -->
<g id="edge381" class="edge">
<title>monocle.function.Field6[(Boolean, Char, Int, Long, Float, Double),Double]&#45;&gt;shapeless.ops.hlist.At.Aux[(Boolean, Char, Int, Long, Float, Double),shapeless.nat._5.N,Double]</title>
<path fill="none" stroke="#000000" d="M958.2264,-43887.8701C1111.6708,-43887.8701 1299.4647,-43887.8701 1464.0386,-43887.8701"/>
<polygon fill="#000000" stroke="#000000" points="1464.3447,-43891.3702 1474.3447,-43887.8701 1464.3447,-43884.3702 1464.3447,-43891.3702"/>
</g>
<!-- scalaz.Zip[[β$0$]monocle.Getter[String,β$0$]] -->
<g id="node1401" class="node">
<title>scalaz.Zip[[β$0$]monocle.Getter[String,β$0$]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-58719.8701" rx="195.3231" ry="26.7407"/>
<text text-anchor="start" x="522.6596" y="-58723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Zip[[β$0$]monocle.Getter[String,β$0$]]</text>
<text text-anchor="middle" x="652.6596" y="-58708.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Compose[monocle.Setter] -->
<g id="node1402" class="node">
<title>scalaz.Compose[monocle.Setter]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-58791.8701" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="562.1596" y="-58795.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Compose[monocle.Setter]</text>
<text text-anchor="middle" x="652.6596" y="-58780.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Possible[scala.util.Try[Int],Int] -->
<g id="node1403" class="node">
<title>monocle.function.Possible[scala.util.Try[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-58863.8701" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="518.1596" y="-58867.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Possible[scala.util.Try[Int],Int]</text>
<text text-anchor="middle" x="652.6596" y="-58852.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[Int]] -->
<g id="node1404" class="node">
<title>org.scalactic.Equality[scalaz.Id.Id[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-51663.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="545.6596" y="-51667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scalaz.Id.Id[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-51652.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[Int]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[Int]] -->
<g id="edge564" class="edge">
<title>org.scalactic.Equality[scalaz.Id.Id[Int]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[Int]]</title>
<path fill="none" stroke="#000000" d="M815.4471,-51663.8701C1055.0508,-51663.8701 1498.5309,-51663.8701 1723.4605,-51663.8701"/>
<polygon fill="#000000" stroke="#000000" points="1723.6752,-51667.3702 1733.6751,-51663.8701 1723.6751,-51660.3702 1723.6752,-51667.3702"/>
</g>
<!-- Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil =&gt; ?{def ===: ?} -->
<g id="node1405" class="node">
<title>Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-58935.8701" rx="334.423" ry="26.7407"/>
<text text-anchor="start" x="424.1596" y="-58939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int :: Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="652.6596" y="-58924.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[List[Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge300" class="edge">
<title>scalaz.Equal[List[Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5957.9673,-21423.8468C6078.8059,-21418.9022 6291.8537,-21419.0297 6466.6717,-21465.8701 6680.5451,-21523.1748 6908.0644,-21663.8272 7001.7791,-21725.7603"/>
<polygon fill="#000000" stroke="#000000" points="6999.8935,-21728.7095 7010.1603,-21731.3256 7003.7657,-21722.8781 6999.8935,-21728.7095"/>
</g>
<!-- scalaz.Equal[List[Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge760" class="edge">
<title>scalaz.Equal[List[Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5955.5825,-21438.3307C6076.6505,-21446.1565 6292.7556,-21449.3851 6466.6717,-21393.8701 6694.8385,-21321.0379 6923.5421,-21137.8462 7009.951,-21063.7314"/>
<polygon fill="#000000" stroke="#000000" points="7012.3356,-21066.2968 7017.6233,-21057.1158 7007.7644,-21060.9955 7012.3356,-21066.2968"/>
</g>
<!-- org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Bar1] -->
<g id="edge103" class="edge">
<title>org.scalacheck.Arbitrary[MacroOutSideMonocleSpec.this.Bar1]&#45;&gt;scala.reflect.ClassTag[MacroOutSideMonocleSpec.this.Bar1]</title>
<path fill="none" stroke="#000000" d="M2122.5594,-28551.8701C2350.3382,-28551.8701 2679.3675,-28551.8701 2906.9624,-28551.8701"/>
<polygon fill="#000000" stroke="#000000" points="2907.0449,-28555.3702 2917.0449,-28551.8701 2907.0448,-28548.3702 2907.0449,-28555.3702"/>
</g>
<!-- (=&gt; Long) =&gt; Int -->
<g id="node1411" class="node">
<title>(=&gt; Long) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-59007.8701" rx="79.8062" ry="26.7407"/>
<text text-anchor="start" x="604.1596" y="-59011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Long) =&gt; Int</text>
<text text-anchor="middle" x="652.6596" y="-58996.6701" font-family="Times,serif" font-size="14.00" fill="#000000">19 times = 2ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P) -->
<g id="node1412" class="node">
<title>(Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-59079.8701" rx="239.9186" ry="26.7407"/>
<text text-anchor="start" x="491.1596" y="-59083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-59068.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[Either[String,Int]] -->
<g id="node1413" class="node">
<title>scalaz.Equal[Either[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-21031.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="5776.0954" y="-21035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Either[String,Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-21020.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- scalaz.Equal[Either[String,Int]]&#45;&gt;scalaz.Equal[String] -->
<g id="edge90" class="edge">
<title>scalaz.Equal[Either[String,Int]]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M5958.2135,-21050.4762C6083.7986,-21069.6163 6306.5281,-21085.422 6466.6717,-20995.8701 6800.9306,-20808.9532 6986.3778,-20338.7834 7033.7621,-20204.3137"/>
<polygon fill="#000000" stroke="#000000" points="7037.0712,-20205.4536 7037.0603,-20194.8587 7030.4618,-20203.148 7037.0712,-20205.4536"/>
</g>
<!-- scalaz.Equal[Either[String,Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge1207" class="edge">
<title>scalaz.Equal[Either[String,Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M5963.8169,-21014.5709C6089.2628,-20998.2935 6305.625,-20987.0338 6466.6717,-21067.8701 6766.6224,-21218.4281 6971.2787,-21601.1324 7029.2252,-21720.0533"/>
<polygon fill="#000000" stroke="#000000" points="7026.1066,-21721.6439 7033.6092,-21729.1246 7032.4092,-21718.5979 7026.1066,-21721.6439"/>
</g>
<!-- monocle.function.Each[Int :: Int :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: Int :: shapeless.HNil,SGen] -->
<g id="edge272" class="edge">
<title>monocle.function.Each[Int :: Int :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: Int :: shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M7267.5369,-26949.8701C7464.8263,-26949.8701 7752.8502,-26949.8701 7955.8095,-26949.8701"/>
<polygon fill="#000000" stroke="#000000" points="7956.0149,-26953.3702 7966.0149,-26949.8701 7956.0149,-26946.3702 7956.0149,-26953.3702"/>
</g>
<!-- monocle.function.Each[Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: shapeless.HNil,Int] -->
<g id="edge269" class="edge">
<title>monocle.function.Each[Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M7242.8428,-26937.5542C7455.8899,-26924.2235 7793.4187,-26903.1039 8004.6009,-26889.8899"/>
<polygon fill="#000000" stroke="#000000" points="8005.1119,-26893.3648 8014.8738,-26889.2471 8004.6747,-26886.3785 8005.1119,-26893.3648"/>
</g>
<!-- monocle.Iso[monocle.Binary,(String, Int)] =&gt; ?{def shouldEqual: ?} -->
<g id="node1416" class="node">
<title>monocle.Iso[monocle.Binary,(String, Int)] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-26769.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="463.1596" y="-26773.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Iso[monocle.Binary,(String, Int)] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-26758.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.Iso[monocle.Binary,(String, Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge590" class="edge">
<title>monocle.Iso[monocle.Binary,(String, Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M897.9347,-26782.7266C1055.0304,-26786.0412 1241.0747,-26779.2521 1305.3191,-26733.8701 1767.9632,-26407.06 1847.631,-25619.1822 1859.9501,-25438.9999"/>
<polygon fill="#000000" stroke="#000000" points="1863.4463,-25439.1717 1860.6086,-25428.9639 1856.4613,-25438.7133 1863.4463,-25439.1717"/>
</g>
<!-- monocle.Iso[monocle.Binary,(String, Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge441" class="edge">
<title>monocle.Iso[monocle.Binary,(String, Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M860.0875,-26787.8725C1027.9954,-26797.3117 1246.0012,-26796.1841 1305.3191,-26733.8701 1318.4195,-26720.108 1300.2906,-25379.7001 1313.3191,-25365.8701 1432.3863,-25239.4779 1659.2532,-25274.5148 1780.632,-25305.3949"/>
<polygon fill="#000000" stroke="#000000" points="1780.0553,-25308.8611 1790.6139,-25307.9857 1781.814,-25302.0856 1780.0553,-25308.8611"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int)] -->
<g id="node1418" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-15361.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="5767.0954" y="-15365.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-15350.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int)] -->
<g id="edge726" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int)]</title>
<path fill="none" stroke="#000000" d="M6007.8603,-15361.8701C6235.6311,-15361.8701 6673.3503,-15361.8701 6900.7889,-15361.8701"/>
<polygon fill="#000000" stroke="#000000" points="6900.7916,-15365.3702 6910.7915,-15361.8701 6900.7915,-15358.3702 6900.7916,-15365.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge442" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M5992.5084,-15373.8484C6150.7603,-15385.1573 6404.2313,-15391.8216 6466.6717,-15325.8701 6482.5993,-15309.0469 6463.1075,-13677.9443 6474.6717,-13657.8701 6578.5434,-13477.5598 6821.0766,-13384.768 6954.3183,-13345.865"/>
<polygon fill="#000000" stroke="#000000" points="6955.471,-13349.1754 6964.1122,-13343.0451 6953.5341,-13342.4486 6955.471,-13349.1754"/>
</g>
<!-- org.scalacheck.Arbitrary[String \/ Int =&gt; String \/ Int] -->
<g id="node1419" class="node">
<title>org.scalacheck.Arbitrary[String \/ Int =&gt; String \/ Int]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-8677.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="4443.253" y="-8681.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[String / Int =&gt; String / Int]</text>
<text text-anchor="middle" x="4586.253" y="-8666.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- org.scalacheck.Arbitrary[String \/ Int =&gt; String \/ Int]&#45;&gt;scala.reflect.ClassTag[String \/ Int =&gt; String \/ Int] -->
<g id="edge186" class="edge">
<title>org.scalacheck.Arbitrary[String \/ Int =&gt; String \/ Int]&#45;&gt;scala.reflect.ClassTag[String \/ Int =&gt; String \/ Int]</title>
<path fill="none" stroke="#000000" d="M4799.8003,-8677.8701C5035.6501,-8677.8701 5413.1372,-8677.8701 5648.8615,-8677.8701"/>
<polygon fill="#000000" stroke="#000000" points="5648.9304,-8681.3702 5658.9304,-8677.8701 5648.9304,-8674.3702 5648.9304,-8681.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[String \/ Int =&gt; String \/ Int]&#45;&gt;org.scalacheck.Arbitrary[String \/ Int] -->
<g id="edge936" class="edge">
<title>org.scalacheck.Arbitrary[String \/ Int =&gt; String \/ Int]&#45;&gt;org.scalacheck.Arbitrary[String \/ Int]</title>
<path fill="none" stroke="#000000" d="M4711.2454,-8656.0809C4864.0095,-8637.476 5118.3182,-8634.0359 5249.5191,-8785.8701 5267.8285,-8807.0588 5238.154,-9269.6416 5257.5191,-9289.8701 5318.0407,-9353.0899 5555.4995,-9349.3122 5714.1885,-9338.9375"/>
<polygon fill="#000000" stroke="#000000" points="5714.7807,-9342.4058 5724.5245,-9338.2452 5714.3129,-9335.4214 5714.7807,-9342.4058"/>
</g>
<!-- org.scalacheck.Arbitrary[String \/ Int =&gt; String \/ Int]&#45;&gt;org.scalacheck.Cogen[String \/ Int] -->
<g id="edge1357" class="edge">
<title>org.scalacheck.Arbitrary[String \/ Int =&gt; String \/ Int]&#45;&gt;org.scalacheck.Cogen[String \/ Int]</title>
<path fill="none" stroke="#000000" d="M4781.4148,-8666.8564C5037.9734,-8652.378 5483.0686,-8627.2598 5713.8161,-8614.238"/>
<polygon fill="#000000" stroke="#000000" points="5714.1768,-8617.7233 5723.9636,-8613.6653 5713.7823,-8610.7344 5714.1768,-8617.7233"/>
</g>
<!-- org.scalacheck.Cogen[scalaz.Tree[Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge568" class="edge">
<title>org.scalacheck.Cogen[scalaz.Tree[Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M5989.9763,-11196.4813C6116.8968,-11207.3062 6314.0188,-11208.5344 6466.6717,-11138.8701 6741.0188,-11013.6695 6957.2314,-10697.8553 7024.3195,-10591.4768"/>
<polygon fill="#000000" stroke="#000000" points="7027.4626,-10593.0521 7029.8032,-10582.719 7021.5297,-10589.3371 7027.4626,-10593.0521"/>
</g>
<!-- Option[PrismSpec.this.IntOrString] =&gt; ?{def shouldEqual: ?} -->
<g id="node1421" class="node">
<title>Option[PrismSpec.this.IntOrString] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-26697.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="482.6596" y="-26701.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[PrismSpec.this.IntOrString] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-26686.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 7ms</text>
</g>
<!-- Option[PrismSpec.this.IntOrString] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge292" class="edge">
<title>Option[PrismSpec.this.IntOrString] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M878.2766,-26709.878C1038.9746,-26713.9478 1237.937,-26708.4577 1305.3191,-26661.8701 1748.2374,-26355.6387 1842.6958,-25613.3779 1859.0262,-25438.9879"/>
<polygon fill="#000000" stroke="#000000" points="1862.5335,-25439.0656 1859.9517,-25428.7902 1855.5621,-25438.4329 1862.5335,-25439.0656"/>
</g>
<!-- Option[PrismSpec.this.IntOrString] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge989" class="edge">
<title>Option[PrismSpec.this.IntOrString] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M846.4943,-26715.0752C1016.008,-26725.32 1244.377,-26725.8695 1305.3191,-26661.8701 1317.7321,-26648.8343 1300.9742,-25378.9702 1313.3191,-25365.8701 1432.4068,-25239.4972 1659.2651,-25274.526 1780.6372,-25305.3997"/>
<polygon fill="#000000" stroke="#000000" points="1780.06,-25308.8658 1790.6185,-25307.99 1781.8183,-25302.0902 1780.06,-25308.8658"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.H,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH] -->
<g id="edge267" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,HListSpec.this.H,HListSpec.this.ReverseH]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil,HListSpec.this.ReverseH]</title>
<path fill="none" stroke="#000000" d="M3554.721,-23673.8701C3693.4311,-23673.8701 3852.9516,-23673.8701 4004.4338,-23673.8701"/>
<polygon fill="#000000" stroke="#000000" points="4004.8626,-23677.3702 4014.8626,-23673.8701 4004.8625,-23670.3702 4004.8626,-23677.3702"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Stream[Int]] -->
<g id="node1423" class="node">
<title>org.scalacheck.Shrink[scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-441.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="5690.5954" y="-445.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="5862.0954" y="-430.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 49ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Stream[Int]]&#45;&gt;scala.collection.immutable.Stream[Int] =&gt; Traversable[Int] -->
<g id="edge1203" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Stream[Int]]&#45;&gt;scala.collection.immutable.Stream[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M5976.1238,-465.9048C6098.7191,-490.8212 6299.6185,-528.9898 6474.6717,-549.8701 6583.3122,-562.8287 6704.1676,-571.2993 6806.6435,-576.7456"/>
<polygon fill="#000000" stroke="#000000" points="6806.6487,-580.2506 6816.8184,-577.2797 6807.0157,-573.2603 6806.6487,-580.2506"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Stream[Int]]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge1291" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Stream[Int]]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M5966.6976,-466.378C6101.0205,-491.0628 6332.7236,-509.6329 6466.6717,-383.8701 6483.0784,-368.4659 6458.0152,-349.0038 6474.6717,-333.8701 6608.602,-212.1841 6841.0224,-245.3768 6964.0947,-274.6971"/>
<polygon fill="#000000" stroke="#000000" points="6963.3051,-278.107 6973.8488,-277.0675 6964.9582,-271.305 6963.3051,-278.107"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Stream[Int]]&#45;&gt;Integral[scala.collection.immutable.Stream[Int]] -->
<g id="edge1356" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Stream[Int]]&#45;&gt;Integral[scala.collection.immutable.Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M6082.353,-428.4751C6304.2891,-414.978 6643.3037,-394.3609 6854.4307,-381.5212"/>
<polygon fill="#000000" stroke="#000000" points="6854.9306,-384.9974 6864.6997,-380.8967 6854.5056,-378.0103 6854.9306,-384.9974"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Stream[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]] -->
<g id="edge1122" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Stream[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M6082.353,-455.265C6283.2481,-467.4825 6580.0743,-485.5339 6791.1422,-498.37"/>
<polygon fill="#000000" stroke="#000000" points="6790.9334,-501.8637 6801.1275,-498.9773 6791.3584,-494.8766 6790.9334,-501.8637"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Stream[Int]]&#45;&gt;Fractional[scala.collection.immutable.Stream[Int]] -->
<g id="edge117" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Stream[Int]]&#45;&gt;Fractional[scala.collection.immutable.Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M6116.0756,-441.8701C6327.883,-441.8701 6626.5076,-441.8701 6827.7103,-441.8701"/>
<polygon fill="#000000" stroke="#000000" points="6827.8161,-445.3702 6837.8161,-441.8701 6827.8161,-438.3702 6827.8161,-445.3702"/>
</g>
<!-- scalaz.Equal[scala.collection.immutable.Stream[Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge554" class="edge">
<title>scalaz.Equal[scala.collection.immutable.Stream[Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M6042.4012,-22752.9561C6199.3449,-22761.6394 6410.2989,-22761.077 6466.6717,-22701.8701 6481.3448,-22686.4593 6461.9979,-21952.963 6474.6717,-21935.8701 6584.6936,-21787.4861 6817.0914,-21758.357 6949.0811,-21754.4293"/>
<polygon fill="#000000" stroke="#000000" points="6949.2809,-21757.9255 6959.1886,-21754.172 6949.1027,-21750.9277 6949.2809,-21757.9255"/>
</g>
<!-- scalaz.Equal[Option[scalaz.NonEmptyList[Int]]] -->
<g id="node1425" class="node">
<title>scalaz.Equal[Option[scalaz.NonEmptyList[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-21573.8701" rx="199.3083" ry="26.7407"/>
<text text-anchor="start" x="4453.253" y="-21577.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[scalaz.NonEmptyList[Int]]]</text>
<text text-anchor="middle" x="4586.253" y="-21562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[Option[scalaz.NonEmptyList[Int]]]&#45;&gt;scalaz.Equal[scalaz.NonEmptyList[Int]] -->
<g id="edge1212" class="edge">
<title>scalaz.Equal[Option[scalaz.NonEmptyList[Int]]]&#45;&gt;scalaz.Equal[scalaz.NonEmptyList[Int]]</title>
<path fill="none" stroke="#000000" d="M4772.0987,-21564.0059C4905.0757,-21556.8934 5088.3286,-21546.9809 5249.5191,-21537.8701 5400.4347,-21529.34 5572.2369,-21519.2067 5695.4142,-21511.8677"/>
<polygon fill="#000000" stroke="#000000" points="5695.9118,-21515.3443 5705.6858,-21511.2554 5695.4952,-21508.3567 5695.9118,-21515.3443"/>
</g>
<!-- monocle.function.Cons[scalaz.IList[Char],Char] -->
<g id="node1427" class="node">
<title>monocle.function.Cons[scalaz.IList[Char],Char]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-59151.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="520.1596" y="-59155.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons[scalaz.IList[Char],Char]</text>
<text text-anchor="middle" x="652.6596" y="-59140.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Unit \/ Int]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1238" class="edge">
<title>org.scalacheck.Arbitrary[Unit \/ Int]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M5994.9295,-15734.0285C6153.3415,-15745.2404 6404.5755,-15751.514 6466.6717,-15685.8701 6486.0281,-15665.4078 6460.6221,-13682.2828 6474.6717,-13657.8701 6578.4666,-13477.5156 6821.0316,-13384.7421 6954.2985,-13345.8536"/>
<polygon fill="#000000" stroke="#000000" points="6955.4521,-13349.1637 6964.0943,-13343.0348 6953.5163,-13342.4367 6955.4521,-13349.1637"/>
</g>
<!-- org.scalacheck.Arbitrary[Unit \/ Int]&#45;&gt;org.scalacheck.Arbitrary[Unit] -->
<g id="edge762" class="edge">
<title>org.scalacheck.Arbitrary[Unit \/ Int]&#45;&gt;org.scalacheck.Arbitrary[Unit]</title>
<path fill="none" stroke="#000000" d="M6009.2122,-15717.9084C6132.7284,-15717.5983 6313.1198,-15724.2242 6466.6717,-15757.8701 6665.5823,-15801.4548 6885.8722,-15903.494 6988.0653,-15954.1945"/>
<polygon fill="#000000" stroke="#000000" points="6986.7753,-15957.4622 6997.2867,-15958.7895 6989.8973,-15951.1969 6986.7753,-15957.4622"/>
</g>
<!-- scalaz.Equal[java.util.UUID] -->
<g id="node1429" class="node">
<title>scalaz.Equal[java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-59223.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="572.6596" y="-59227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[java.util.UUID]</text>
<text text-anchor="middle" x="652.6596" y="-59212.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Cons1[scalaz.Cofree[Option,Int],Int,Option[scalaz.Cofree[Option,Int]]] -->
<g id="node1430" class="node">
<title>monocle.function.Cons1[scalaz.Cofree[Option,Int],Int,Option[scalaz.Cofree[Option,Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-51231.8701" rx="357.5922" ry="26.7407"/>
<text text-anchor="start" x="407.6596" y="-51235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons1[scalaz.Cofree[Option,Int],Int,Option[scalaz.Cofree[Option,Int]]]</text>
<text text-anchor="middle" x="652.6596" y="-51220.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Cons1[scalaz.Cofree[Option,Int],Int,Option[scalaz.Cofree[Option,Int]]]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[scalaz.Cofree[Option,Int],Int,Option[scalaz.Cofree[Option,Int]]] -->
<g id="edge222" class="edge">
<title>monocle.function.Cons1[scalaz.Cofree[Option,Int],Int,Option[scalaz.Cofree[Option,Int]]]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[scalaz.Cofree[Option,Int],Int,Option[scalaz.Cofree[Option,Int]]]</title>
<path fill="none" stroke="#000000" d="M1010.6031,-51231.8701C1152.5644,-51231.8701 1316.426,-51231.8701 1462.2556,-51231.8701"/>
<polygon fill="#000000" stroke="#000000" points="1462.2787,-51235.3702 1472.2787,-51231.8701 1462.2787,-51228.3702 1462.2787,-51235.3702"/>
</g>
<!-- ((Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P) -->
<g id="node1431" class="node">
<title>((Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-59295.8701" rx="332.1805" ry="26.7407"/>
<text text-anchor="start" x="425.6596" y="-59299.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2, ?A3, ?A4, ?A5, ?A6) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-59284.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Init[Float :: Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Init[Long :: Double :: shapeless.HNil] -->
<g id="edge829" class="edge">
<title>shapeless.ops.hlist.Init[Float :: Long :: Double :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Init[Long :: Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M6124.478,-33654.8701C6327.0095,-33654.8701 6605.0898,-33654.8701 6802.6715,-33654.8701"/>
<polygon fill="#000000" stroke="#000000" points="6802.9037,-33658.3702 6812.9037,-33654.8701 6802.9037,-33651.3702 6802.9037,-33658.3702"/>
</g>
<!-- monocle.Iso[MacroOutSideMonocleSpec.this.Example,Int] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example,_$1] -->
<g id="node1433" class="node">
<title>monocle.Iso[MacroOutSideMonocleSpec.this.Example,Int] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example,_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-59367.8701" rx="493.6211" ry="26.7407"/>
<text text-anchor="start" x="311.6596" y="-59371.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Iso[MacroOutSideMonocleSpec.this.Example,Int] =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.Example,_$1]</text>
<text text-anchor="middle" x="652.6596" y="-59356.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.Iso[monocle.Binary,(String, Int)] =&gt; monocle.Iso[monocle.Binary,_$1] -->
<g id="node1434" class="node">
<title>monocle.Iso[monocle.Binary,(String, Int)] =&gt; monocle.Iso[monocle.Binary,_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-59439.8701" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="430.1596" y="-59443.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.Iso[monocle.Binary,(String, Int)] =&gt; monocle.Iso[monocle.Binary,_$1]</text>
<text text-anchor="middle" x="652.6596" y="-59428.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Empty[Vector[Int]] -->
<g id="node1435" class="node">
<title>monocle.function.Empty[Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-59511.8701" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="549.1596" y="-59515.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[Vector[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-59500.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[monocle.Nullary =&gt; Unit]&#45;&gt;scalaz.Equal[Unit] -->
<g id="edge925" class="edge">
<title>scalaz.Equal[monocle.Nullary =&gt; Unit]&#45;&gt;scalaz.Equal[Unit]</title>
<path fill="none" stroke="#000000" d="M6007.641,-16649.0797C6166.2009,-16638.7164 6405.4897,-16634.7169 6466.6717,-16697.8701 6488.9462,-16720.8622 6455.383,-16960.3214 6474.6717,-16985.8701 6586.8911,-17134.5087 6821.7015,-17163.2737 6952.6695,-17167.1409"/>
<polygon fill="#000000" stroke="#000000" points="6952.6048,-17170.6403 6962.69,-17167.3942 6952.7817,-17163.6425 6952.6048,-17170.6403"/>
</g>
<!-- scalaz.Equal[monocle.Nullary =&gt; Unit]&#45;&gt;org.scalacheck.Arbitrary[monocle.Nullary] -->
<g id="edge172" class="edge">
<title>scalaz.Equal[monocle.Nullary =&gt; Unit]&#45;&gt;org.scalacheck.Arbitrary[monocle.Nullary]</title>
<path fill="none" stroke="#000000" d="M6027.6488,-16661.8701C6245.7809,-16661.8701 6628.5106,-16661.8701 6857.5247,-16661.8701"/>
<polygon fill="#000000" stroke="#000000" points="6857.6355,-16665.3702 6867.6354,-16661.8701 6857.6354,-16658.3702 6857.6355,-16665.3702"/>
</g>
<!-- scalaz.Choice[monocle.Optional] -->
<g id="node1438" class="node">
<title>scalaz.Choice[monocle.Optional]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-59583.8701" rx="140.9288" ry="26.7407"/>
<text text-anchor="start" x="561.1596" y="-59587.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Choice[monocle.Optional]</text>
<text text-anchor="middle" x="652.6596" y="-59572.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Unit]&#45;&gt;scala.reflect.ClassTag[Unit] -->
<g id="edge112" class="edge">
<title>org.scalacheck.Arbitrary[Unit]&#45;&gt;scala.reflect.ClassTag[Unit]</title>
<path fill="none" stroke="#000000" d="M7176.3331,-15983.8701C7397.9918,-15983.8701 7845.845,-15983.8701 8067.048,-15983.8701"/>
<polygon fill="#000000" stroke="#000000" points="8067.085,-15987.3702 8077.085,-15983.8701 8067.0849,-15980.3702 8067.085,-15987.3702"/>
</g>
<!-- shapeless.ops.hlist.Init.Aux[HListSpec.this.H,HListSpec.this.HInit]&#45;&gt;shapeless.ops.hlist.Init[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil] -->
<g id="edge881" class="edge">
<title>shapeless.ops.hlist.Init.Aux[HListSpec.this.H,HListSpec.this.HInit]&#45;&gt;shapeless.ops.hlist.Init[Boolean :: Char :: Float :: Long :: Double :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2135.1725,-33654.8701C2334.9599,-33654.8701 2607.4444,-33654.8701 2822.2106,-33654.8701"/>
<polygon fill="#000000" stroke="#000000" points="2822.3934,-33658.3702 2832.3934,-33654.8701 2822.3934,-33651.3702 2822.3934,-33658.3702"/>
</g>
<!-- Option[scalaz.Cofree[Option,A]] =&gt; ?{def ===: ?} -->
<g id="node1441" class="node">
<title>Option[scalaz.Cofree[Option,A]] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-27993.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="511.1596" y="-27997.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[scalaz.Cofree[Option,A]] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="652.6596" y="-27982.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- Option[scalaz.Cofree[Option,A]] =&gt; ?{def ===: ?}&#45;&gt;scalaz.Equal[Option[scalaz.Cofree[Option,A]]] -->
<g id="edge1145" class="edge">
<title>Option[scalaz.Cofree[Option,A]] =&gt; ?{def ===: ?}&#45;&gt;scalaz.Equal[Option[scalaz.Cofree[Option,A]]]</title>
<path fill="none" stroke="#000000" d="M864.3541,-27993.8701C1087.8016,-27993.8701 1437.552,-27993.8701 1658.043,-27993.8701"/>
<polygon fill="#000000" stroke="#000000" points="1658.1169,-27997.3702 1668.1169,-27993.8701 1658.1169,-27990.3702 1658.1169,-27997.3702"/>
</g>
<!-- org.scalacheck.Cogen[Unit \/ Int]&#45;&gt;org.scalacheck.Cogen[Unit] -->
<g id="edge210" class="edge">
<title>org.scalacheck.Cogen[Unit \/ Int]&#45;&gt;org.scalacheck.Cogen[Unit]</title>
<path fill="none" stroke="#000000" d="M5996.4657,-10365.6278C6226.59,-10354.9371 6693.0684,-10333.2665 6918.4421,-10322.7965"/>
<polygon fill="#000000" stroke="#000000" points="6918.8342,-10326.2822 6928.661,-10322.3218 6918.5093,-10319.2897 6918.8342,-10326.2822"/>
</g>
<!-- org.scalacheck.Cogen[Unit \/ Int]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge565" class="edge">
<title>org.scalacheck.Cogen[Unit \/ Int]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M5999.414,-10374.3748C6122.447,-10378.2323 6307.5084,-10388.0242 6466.6717,-10412.8701 6648.0046,-10441.1767 6855.8012,-10498.7852 6966.6004,-10531.5863"/>
<polygon fill="#000000" stroke="#000000" points="6965.7813,-10534.9941 6976.364,-10534.4869 6967.7749,-10528.284 6965.7813,-10534.9941"/>
</g>
<!-- (=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.ExampleType[Int],Option[Int]]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.ExampleType[Int],_$1] -->
<g id="node1445" class="node">
<title>(=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.ExampleType[Int],Option[Int]]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.ExampleType[Int],_$1]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-59655.8701" rx="620.6795" ry="26.7407"/>
<text text-anchor="start" x="221.6596" y="-59659.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; monocle.Iso[MacroOutSideMonocleSpec.this.ExampleType[Int],Option[Int]]) =&gt; monocle.Iso[MacroOutSideMonocleSpec.this.ExampleType[Int],_$1]</text>
<text text-anchor="middle" x="652.6596" y="-59644.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Maybe[A] =&gt; org.scalacheck.Gen[scalaz.Maybe[A]] -->
<g id="node1446" class="node">
<title>scalaz.Maybe[A] =&gt; org.scalacheck.Gen[scalaz.Maybe[A]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-59727.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="488.6596" y="-59731.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Maybe[A] =&gt; org.scalacheck.Gen[scalaz.Maybe[A]]</text>
<text text-anchor="middle" x="652.6596" y="-59716.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Empty[scalaz.ISet[Int]] -->
<g id="node1449" class="node">
<title>monocle.function.Empty[scalaz.ISet[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-59799.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="538.1596" y="-59803.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[scalaz.ISet[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-59788.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P) -->
<g id="node1450" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P)</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-59871.8701" rx="240.3326" ry="26.7407"/>
<text text-anchor="start" x="490.6596" y="-59875.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A1, ?A2) =&gt; ?P)</text>
<text text-anchor="middle" x="652.6596" y="-59860.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3]&#45;&gt;shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2] -->
<g id="edge225" class="edge">
<title>shapeless.ops.hlist.At[Char :: Float :: Long :: Double :: shapeless.HNil,shapeless.nat._3]&#45;&gt;shapeless.ops.hlist.At[Float :: Long :: Double :: shapeless.HNil,shapeless.nat._2]</title>
<path fill="none" stroke="#000000" d="M4939.9519,-38199.8701C5123.7004,-38199.8701 5346.9957,-38199.8701 5527.8303,-38199.8701"/>
<polygon fill="#000000" stroke="#000000" points="5528.0405,-38203.3702 5538.0405,-38199.8701 5528.0405,-38196.3702 5528.0405,-38203.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[Throwable]&#45;&gt;scala.reflect.ClassTag[Throwable] -->
<g id="edge1092" class="edge">
<title>org.scalacheck.Arbitrary[Throwable]&#45;&gt;scala.reflect.ClassTag[Throwable]</title>
<path fill="none" stroke="#000000" d="M2016.1952,-38991.8701C2267.2916,-38991.8701 2761.7204,-38991.8701 3012.7735,-38991.8701"/>
<polygon fill="#000000" stroke="#000000" points="3013.0718,-38995.3702 3023.0717,-38991.8701 3013.0717,-38988.3702 3013.0718,-38995.3702"/>
</g>
<!-- monocle.function.At[scala.collection.immutable.Map[Int,String],Int,Option[A]] -->
<g id="node1455" class="node">
<title>monocle.function.At[scala.collection.immutable.Map[Int,String],Int,Option[A]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-59943.8701" rx="321.9673" ry="26.7407"/>
<text text-anchor="start" x="433.1596" y="-59947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[scala.collection.immutable.Map[Int,String],Int,Option[A]]</text>
<text text-anchor="middle" x="652.6596" y="-59932.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int,)) =&gt; (Int,)] -->
<g id="node1456" class="node">
<title>org.scalacheck.Arbitrary[((Int,)) =&gt; (Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-13621.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="4470.253" y="-13625.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((Int,)) =&gt; (Int,)]</text>
<text text-anchor="middle" x="4586.253" y="-13610.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((Int,)) =&gt; (Int,)]&#45;&gt;scala.reflect.ClassTag[((Int,)) =&gt; (Int,)] -->
<g id="edge660" class="edge">
<title>org.scalacheck.Arbitrary[((Int,)) =&gt; (Int,)]&#45;&gt;scala.reflect.ClassTag[((Int,)) =&gt; (Int,)]</title>
<path fill="none" stroke="#000000" d="M4752.1962,-13613.0696C4886.366,-13605.9044 5080.1251,-13595.4446 5249.5191,-13585.8701 5401.0813,-13577.3034 5573.7095,-13567.1198 5696.9948,-13559.7735"/>
<polygon fill="#000000" stroke="#000000" points="5697.4998,-13563.2497 5707.2738,-13559.1607 5697.0832,-13556.2621 5697.4998,-13563.2497"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int,)) =&gt; (Int,)]&#45;&gt;org.scalacheck.Arbitrary[(Int,)] -->
<g id="edge956" class="edge">
<title>org.scalacheck.Arbitrary[((Int,)) =&gt; (Int,)]&#45;&gt;org.scalacheck.Arbitrary[(Int,)]</title>
<path fill="none" stroke="#000000" d="M4761.6456,-13621.8701C5016.2161,-13621.8701 5483.2956,-13621.8701 5718.5943,-13621.8701"/>
<polygon fill="#000000" stroke="#000000" points="5718.9332,-13625.3702 5728.9332,-13621.8701 5718.9331,-13618.3702 5718.9332,-13625.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[((Int,)) =&gt; (Int,)]&#45;&gt;org.scalacheck.Cogen[(Int,)] -->
<g id="edge1087" class="edge">
<title>org.scalacheck.Arbitrary[((Int,)) =&gt; (Int,)]&#45;&gt;org.scalacheck.Cogen[(Int,)]</title>
<path fill="none" stroke="#000000" d="M4664.2973,-13646.0091C4802.4341,-13683.3716 5090.3819,-13736.2708 5249.5191,-13585.8701 5272.919,-13563.7548 5234.1773,-13536.0467 5257.5191,-13513.8701 5324.0912,-13450.6209 5581.2593,-13456.9212 5737.9514,-13467.3091"/>
<polygon fill="#000000" stroke="#000000" points="5737.9103,-13470.8143 5748.1241,-13467.9986 5738.3837,-13463.8303 5737.9103,-13470.8143"/>
</g>
<!-- Int =&gt; ?{def shouldEqual: ?} -->
<g id="node1458" class="node">
<title>Int =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-26625.8701" rx="125.316" ry="26.7407"/>
<text text-anchor="start" x="572.1596" y="-26629.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-26614.6701" font-family="Times,serif" font-size="14.00" fill="#000000">28 times = 157ms</text>
</g>
<!-- Int =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge502" class="edge">
<title>Int =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M772.809,-26633.5513C937.185,-26641.6855 1221.3766,-26646.5419 1305.3191,-26589.8701 1728.5451,-26304.1389 1837.4565,-25607.7441 1857.9873,-25439.1005"/>
<polygon fill="#000000" stroke="#000000" points="1861.4845,-25439.3307 1859.1885,-25428.9876 1854.5333,-25438.505 1861.4845,-25439.3307"/>
</g>
<!-- Int =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1095" class="edge">
<title>Int =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M766.1914,-26637.2708C933.4419,-26651.2569 1233.9944,-26664.7457 1305.3191,-26589.8701 1328.7704,-26565.2512 1289.9963,-25390.6106 1313.3191,-25365.8701 1432.4298,-25239.5189 1659.2784,-25274.5385 1780.6429,-25305.4052"/>
<polygon fill="#000000" stroke="#000000" points="1780.0651,-25308.8711 1790.6237,-25307.9949 1781.8232,-25302.0954 1780.0651,-25308.8711"/>
</g>
<!-- monocle.function.At[Long,monocle.refined.ZeroTo[Int(63)],Boolean] -->
<g id="node1459" class="node">
<title>monocle.function.At[Long,monocle.refined.ZeroTo[Int(63)],Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-60015.8701" rx="282.6855" ry="26.7407"/>
<text text-anchor="start" x="460.6596" y="-60019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[Long,monocle.refined.ZeroTo[Int(63)],Boolean]</text>
<text text-anchor="middle" x="652.6596" y="-60004.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Stream[Int] =&gt; ?{def ===: ?} -->
<g id="node1460" class="node">
<title>Stream[Int] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-60087.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="569.6596" y="-60091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Stream[Int] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="652.6596" y="-60076.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int)] -->
<g id="node1461" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5862.0954" cy="-15289.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="5744.5954" y="-15293.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5862.0954" y="-15278.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int)] -->
<g id="edge1280" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M6039.6601,-15289.8701C6263.2064,-15289.8701 6644.9577,-15289.8701 6868.4864,-15289.8701"/>
<polygon fill="#000000" stroke="#000000" points="6868.6797,-15293.3702 6878.6796,-15289.8701 6868.6796,-15286.3702 6868.6797,-15293.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge798" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6019.8838,-15302.2929C6178.5711,-15310.8993 6407.9291,-15311.4153 6466.6717,-15248.8701 6481.7997,-15232.7628 6463.6391,-13677.0164 6474.6717,-13657.8701 6578.5643,-13477.5719 6821.0888,-13384.7751 6954.3236,-13345.8681"/>
<polygon fill="#000000" stroke="#000000" points="6955.4761,-13349.1785 6964.117,-13343.0479 6953.539,-13342.4519 6955.4761,-13349.1785"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge139" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M6059.633,-5765.8823C6214.4013,-5758.2213 6412.3341,-5760.8086 6466.6717,-5817.8701 6481.1543,-5833.0787 6460.2153,-6558.6365 6474.6717,-6573.8701 6531.3927,-6633.6406 6754.3336,-6631.0858 6904.3717,-6621.868"/>
<polygon fill="#000000" stroke="#000000" points="6904.836,-6625.3458 6914.5956,-6621.2228 6904.395,-6618.3597 6904.836,-6625.3458"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge675" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M6058.9573,-5765.8272C6213.8994,-5758.0621 6412.4354,-5760.5312 6466.6717,-5817.8701 6486.371,-5838.6962 6458.5088,-7858.1941 6474.6717,-7881.8701 6571.7035,-8024.0058 6773.3591,-8076.7501 6909.2262,-8096.3223"/>
<polygon fill="#000000" stroke="#000000" points="6908.9119,-8099.8123 6919.3002,-8097.7303 6909.8809,-8092.8797 6908.9119,-8099.8123"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Arbitrary[Long] -->
<g id="edge915" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Arbitrary[Long]</title>
<path fill="none" stroke="#000000" d="M6061.206,-5797.6008C6215.4655,-5804.9331 6411.8602,-5802.0182 6466.6717,-5745.8701 6484.2238,-5727.89 6457.4506,-5538.1674 6474.6717,-5519.8701 6531.5868,-5459.3979 6756.5694,-5454.3542 6906.6518,-5458.1975"/>
<polygon fill="#000000" stroke="#000000" points="6906.7839,-5461.7023 6916.8755,-5458.4759 6906.9745,-5454.7049 6906.7839,-5461.7023"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge1057" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M6059.271,-5797.8626C6214.1116,-5805.5617 6412.3377,-5803.0257 6466.6717,-5745.8701 6483.9354,-5727.7098 6457.4394,-4862.0601 6474.6717,-4843.8701 6532.6779,-4782.6403 6764.9052,-4786.7759 6914.8434,-4796.5177"/>
<polygon fill="#000000" stroke="#000000" points="6914.8348,-4800.0247 6925.0454,-4797.1973 6915.3002,-4793.0402 6914.8348,-4800.0247"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]&#45;&gt;scala.reflect.ClassTag[(Int, Char, Boolean, String, Long)] -->
<g id="edge911" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]&#45;&gt;scala.reflect.ClassTag[(Int, Char, Boolean, String, Long)]</title>
<path fill="none" stroke="#000000" d="M6107.7634,-5781.8701C6310.939,-5781.8701 6598.0551,-5781.8701 6801.0394,-5781.8701"/>
<polygon fill="#000000" stroke="#000000" points="6801.2469,-5785.3702 6811.2469,-5781.8701 6801.2468,-5778.3702 6801.2469,-5785.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1328" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Char, Boolean, String, Long)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M6058.998,-5765.7888C6213.9649,-5758.0002 6412.5147,-5760.4563 6466.6717,-5817.8701 6483.7975,-5836.0257 6461.9967,-12984.3697 6474.6717,-13005.8701 6577.4502,-13180.2114 6814.4686,-13265.5145 6948.7006,-13301.2075"/>
<polygon fill="#000000" stroke="#000000" points="6948.0208,-13304.6475 6958.5813,-13303.7946 6949.7939,-13297.8757 6948.0208,-13304.6475"/>
</g>
<!-- org.scalacheck.Arbitrary[(scalaz.IList[Char], Char)]&#45;&gt;org.scalacheck.Arbitrary[scalaz.IList[Char]] -->
<g id="edge819" class="edge">
<title>org.scalacheck.Arbitrary[(scalaz.IList[Char], Char)]&#45;&gt;org.scalacheck.Arbitrary[scalaz.IList[Char]]</title>
<path fill="none" stroke="#000000" d="M4664.3883,-4533.9143C4803.9832,-4573.2124 5095.9439,-4629.7539 5249.5191,-4472.8701 5268.4167,-4453.5653 5239.2844,-4249.8021 5257.5191,-4229.8701 5311.7787,-4170.5599 5514.8295,-4155.5971 5670.8013,-4153.2257"/>
<polygon fill="#000000" stroke="#000000" points="5671.0531,-4156.7227 5681.0047,-4153.0873 5670.9582,-4149.7233 5671.0531,-4156.7227"/>
</g>
<!-- org.scalacheck.Arbitrary[(scalaz.IList[Char], Char)]&#45;&gt;scala.reflect.ClassTag[(scalaz.IList[Char], Char)] -->
<g id="edge703" class="edge">
<title>org.scalacheck.Arbitrary[(scalaz.IList[Char], Char)]&#45;&gt;scala.reflect.ClassTag[(scalaz.IList[Char], Char)]</title>
<path fill="none" stroke="#000000" d="M4795.5037,-4504.4418C5032.3725,-4499.4291 5416.0011,-4491.3105 5652.8625,-4486.2979"/>
<polygon fill="#000000" stroke="#000000" points="5653.0537,-4489.7948 5662.9773,-4486.0839 5652.9055,-4482.7963 5653.0537,-4489.7948"/>
</g>
<!-- org.scalacheck.Arbitrary[(scalaz.IList[Char], Char)]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge69" class="edge">
<title>org.scalacheck.Arbitrary[(scalaz.IList[Char], Char)]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M4796.8312,-4512.2747C5284.6596,-4520.4041 6451.976,-4541.3501 6466.6717,-4555.8701 6483.7558,-4572.7498 6457.9109,-4754.6693 6474.6717,-4771.8701 6533.4492,-4832.1903 6764.8147,-4828.4208 6914.4881,-4818.9831"/>
<polygon fill="#000000" stroke="#000000" points="6914.9197,-4822.4626 6924.6728,-4818.3243 6914.4677,-4815.4772 6914.9197,-4822.4626"/>
</g>
<!-- scalaz.Equal[ProductSpec.this.Permissions] -->
<g id="node1465" class="node">
<title>scalaz.Equal[ProductSpec.this.Permissions]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-60159.8701" rx="180.1247" ry="26.7407"/>
<text text-anchor="start" x="533.1596" y="-60163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[ProductSpec.this.Permissions]</text>
<text text-anchor="middle" x="652.6596" y="-60148.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Cons1[scalaz.NonEmptyList[Int],Int,scalaz.IList[Int]] -->
<g id="node1466" class="node">
<title>monocle.function.Cons1[scalaz.NonEmptyList[Int],Int,scalaz.IList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-42375.8701" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="455.6596" y="-42379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons1[scalaz.NonEmptyList[Int],Int,scalaz.IList[Int]]</text>
<text text-anchor="middle" x="652.6596" y="-42364.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.function.Cons1[scalaz.NonEmptyList[Int],Int,scalaz.IList[Int]]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[scalaz.NonEmptyList[Int],Int,scalaz.IList[Int]] -->
<g id="edge156" class="edge">
<title>monocle.function.Cons1[scalaz.NonEmptyList[Int],Int,scalaz.IList[Int]]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[scalaz.NonEmptyList[Int],Int,scalaz.IList[Int]]</title>
<path fill="none" stroke="#000000" d="M942.7194,-42375.8701C1119.5027,-42375.8701 1346.0162,-42375.8701 1529.9621,-42375.8701"/>
<polygon fill="#000000" stroke="#000000" points="1530.0714,-42379.3702 1540.0714,-42375.8701 1530.0714,-42372.3702 1530.0714,-42379.3702"/>
</g>
<!-- scalaz.Equal[A6] -->
<g id="node1467" class="node">
<title>scalaz.Equal[A6]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-60231.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="605.6596" y="-60235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[A6]</text>
<text text-anchor="middle" x="652.6596" y="-60220.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Option[List[Int]] =&gt; ?{def shouldEqual: ?} -->
<g id="node1468" class="node">
<title>Option[List[Int]] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-26553.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="533.6596" y="-26557.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[List[Int]] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="652.6596" y="-26542.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 8ms</text>
</g>
<!-- Option[List[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge983" class="edge">
<title>Option[List[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M820.9582,-26563.2979C987.5551,-26569.3694 1228.5117,-26568.3662 1305.3191,-26517.8701 1709.4013,-26252.2108 1832.1539,-25600.6414 1856.8947,-25438.7431"/>
<polygon fill="#000000" stroke="#000000" points="1860.3645,-25439.2048 1858.3845,-25428.7966 1853.4417,-25438.1678 1860.3645,-25439.2048"/>
</g>
<!-- Option[List[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1003" class="edge">
<title>Option[List[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M804.6394,-26568.2749C975.9224,-26580.742 1239.1657,-26587.2886 1305.3191,-26517.8701 1327.3957,-26494.7038 1291.3634,-25389.1509 1313.3191,-25365.8701 1432.4556,-25239.5432 1659.2933,-25274.5526 1780.6494,-25305.4113"/>
<polygon fill="#000000" stroke="#000000" points="1780.071,-25308.877 1790.6294,-25308.0003 1781.8288,-25302.1013 1780.071,-25308.877"/>
</g>
<!-- scalaz.Profunctor[monocle.Getter] -->
<g id="node1469" class="node">
<title>scalaz.Profunctor[monocle.Getter]</title>
<ellipse fill="none" stroke="#000000" cx="652.6596" cy="-60303.8701" rx="144.9138" ry="26.7407"/>
<text text-anchor="start" x="558.1596" y="-60307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Profunctor[monocle.Getter]</text>
<text text-anchor="middle" x="652.6596" y="-60292.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((List[Int], Int)) =&gt; (List[Int], Int)] -->
<g id="node1472" class="node">
<title>org.scalacheck.Arbitrary[((List[Int], Int)) =&gt; (List[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="3166.8678" cy="-10294.8701" rx="244.818" ry="26.7407"/>
<text text-anchor="start" x="3001.8678" y="-10298.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((List[Int], Int)) =&gt; (List[Int], Int)]</text>
<text text-anchor="middle" x="3166.8678" y="-10283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 25ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((List[Int], Int)) =&gt; (List[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[(List[Int], Int)] -->
<g id="edge1069" class="edge">
<title>org.scalacheck.Arbitrary[((List[Int], Int)) =&gt; (List[Int], Int)]&#45;&gt;org.scalacheck.Arbitrary[(List[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M3355.2672,-10312.0247C3524.3338,-10316.4404 3767.8509,-10293.8695 3914.9868,-10150.8701 3926.7405,-10139.4468 3910.4844,-10125.4687 3922.9868,-10114.8701 3996.2429,-10052.7686 4254.9356,-10056.2365 4426.7605,-10066.2406"/>
<polygon fill="#000000" stroke="#000000" points="4426.7329,-10069.7451 4436.9233,-10066.8458 4427.1491,-10062.7574 4426.7329,-10069.7451"/>
</g>
<!-- org.scalacheck.Arbitrary[((List[Int], Int)) =&gt; (List[Int], Int)]&#45;&gt;scala.reflect.ClassTag[((List[Int], Int)) =&gt; (List[Int], Int)] -->
<g id="edge1208" class="edge">
<title>org.scalacheck.Arbitrary[((List[Int], Int)) =&gt; (List[Int], Int)]&#45;&gt;scala.reflect.ClassTag[((List[Int], Int)) =&gt; (List[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M3411.6766,-10294.8701C3672.0812,-10294.8701 4081.5876,-10294.8701 4341.8407,-10294.8701"/>
<polygon fill="#000000" stroke="#000000" points="4342.1908,-10298.3702 4352.1908,-10294.8701 4342.1908,-10291.3702 4342.1908,-10298.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[((List[Int], Int)) =&gt; (List[Int], Int)]&#45;&gt;org.scalacheck.Cogen[(List[Int], Int)] -->
<g id="edge303" class="edge">
<title>org.scalacheck.Arbitrary[((List[Int], Int)) =&gt; (List[Int], Int)]&#45;&gt;org.scalacheck.Cogen[(List[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M3389.0367,-10306.1398C3677.0829,-10320.7513 4172.4972,-10345.8818 4426.2506,-10358.7538"/>
<polygon fill="#000000" stroke="#000000" points="4426.1259,-10362.2518 4436.2904,-10359.263 4426.4806,-10355.2608 4426.1259,-10362.2518"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Int :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: shapeless.HNil,Out0] -->
<g id="edge1107" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[Int :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: shapeless.HNil,Out0]</title>
<path fill="none" stroke="#000000" d="M3401.2504,-36723.8701C3633.7892,-36723.8701 3992.3299,-36723.8701 4254.1455,-36723.8701"/>
<polygon fill="#000000" stroke="#000000" points="4254.1968,-36727.3702 4264.1968,-36723.8701 4254.1967,-36720.3702 4254.1968,-36727.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, (Char, Boolean, String, Long, Float))]&#45;&gt;scala.reflect.ClassTag[(Int, (Char, Boolean, String, Long, Float))] -->
<g id="edge560" class="edge">
<title>org.scalacheck.Arbitrary[(Int, (Char, Boolean, String, Long, Float))]&#45;&gt;scala.reflect.ClassTag[(Int, (Char, Boolean, String, Long, Float))]</title>
<path fill="none" stroke="#000000" d="M4863.0918,-6717.8701C5077.1763,-6717.8701 5372.1604,-6717.8701 5586.0457,-6717.8701"/>
<polygon fill="#000000" stroke="#000000" points="5586.1689,-6721.3702 5596.1688,-6717.8701 5586.1688,-6714.3702 5586.1689,-6721.3702"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, (Char, Boolean, String, Long, Float))]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge211" class="edge">
<title>org.scalacheck.Arbitrary[(Int, (Char, Boolean, String, Long, Float))]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4857.955,-6712.8473C5017.4144,-6716.3897 5197.572,-6733.8908 5249.5191,-6791.8701 5262.1237,-6805.9383 5244.3361,-12218.3423 5257.5191,-12231.8701 5351.32,-12328.1241 6372.4231,-12169.0544 6466.6717,-12264.8701 6481.1067,-12279.545 6464.1322,-12988.1884 6474.6717,-13005.8701 6578.3639,-13179.8306 6815.3031,-13265.3285 6949.2074,-13301.1433"/>
<polygon fill="#000000" stroke="#000000" points="6948.5013,-13304.5766 6959.063,-13303.7394 6950.2845,-13297.8075 6948.5013,-13304.5766"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, (Char, Boolean, String, Long, Float))]&#45;&gt;org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)] -->
<g id="edge1159" class="edge">
<title>org.scalacheck.Arbitrary[(Int, (Char, Boolean, String, Long, Float))]&#45;&gt;org.scalacheck.Arbitrary[(Char, Boolean, String, Long, Float)]</title>
<path fill="none" stroke="#000000" d="M4665.8848,-6743.6046C4806.5313,-6783.4896 5098.313,-6840.2423 5249.5191,-6681.8701 5268.8552,-6661.6176 5238.2362,-5694.1733 5257.5191,-5673.8701 5310.0315,-5618.579 5497.111,-5614.3845 5649.417,-5621.1355"/>
<polygon fill="#000000" stroke="#000000" points="5649.7076,-5624.6525 5659.8585,-5621.6177 5650.0306,-5617.66 5649.7076,-5624.6525"/>
</g>
<!-- org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge652" class="edge">
<title>org.scalacheck.Arbitrary[monocle.refined.LowerCaseChar]&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M6063.605,-1795.0866C6216.6835,-1788.6123 6410.2151,-1792.2315 6466.6717,-1845.8701 6490.0135,-1868.0467 6452.073,-1894.9367 6474.6717,-1917.8701 6587.6868,-2032.5589 6784.6335,-2031.439 6915.1758,-2014.8324"/>
<polygon fill="#000000" stroke="#000000" points="6915.7843,-2018.2825 6925.2407,-2013.5047 6914.8688,-2011.3426 6915.7843,-2018.2825"/>
</g>
<!-- org.scalactic.Equality[List[String]] -->
<g id="node1477" class="node">
<title>org.scalactic.Equality[List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="4586.253" cy="-23313.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="4491.253" y="-23317.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[List[String]]</text>
<text text-anchor="middle" x="4586.253" y="-23302.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalactic.Equality[List[String]]&#45;&gt;scalaz.Equal[List[String]] -->
<g id="edge1161" class="edge">
<title>org.scalactic.Equality[List[String]]&#45;&gt;scalaz.Equal[List[String]]</title>
<path fill="none" stroke="#000000" d="M4731.9867,-23313.8701C4985.822,-23313.8701 5504.4749,-23313.8701 5740.4005,-23313.8701"/>
<polygon fill="#000000" stroke="#000000" points="5740.7333,-23317.3702 5750.7333,-23313.8701 5740.7332,-23310.3702 5740.7333,-23317.3702"/>
</g>
</g>
</svg>
