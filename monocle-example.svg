<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: implicit&#45;searches&#45;1510255039114 Pages: 1 -->
<svg width="13111pt" height="34111pt"
 viewBox="0.00 0.00 13111.49 34110.74" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 34106.7401)">
<title>implicit&#45;searches&#45;1510255039114</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-34106.7401 13107.4927,-34106.7401 13107.4927,4 -4,4"/>
<!-- shapeless.ops.hlist.IsHCons.Aux[(Char, Boolean, String, Double, Int, Int),H,T] -->
<g id="node1" class="node">
<title>shapeless.ops.hlist.IsHCons.Aux[(Char, Boolean, String, Double, Int, Int),H,T]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-26.8701" rx="318.3962" ry="26.7407"/>
<text text-anchor="start" x="1582.1015" y="-30.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.IsHCons.Aux[(Char, Boolean, String, Double, Int, Int),H,T]</text>
<text text-anchor="middle" x="1799.1015" y="-15.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.collection.immutable.Stream[Int] =&gt; ?{def applyOptional: ?} -->
<g id="node2" class="node">
<title>scala.collection.immutable.Stream[Int] =&gt; ?{def applyOptional: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-98.8701" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="312.8032" y="-102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Stream[Int] =&gt; ?{def applyOptional: ?}</text>
<text text-anchor="middle" x="497.8032" y="-87.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 4ms</text>
</g>
<!-- shapeless.ops.coproduct.Selector[String :+: Boolean :+: shapeless.CNil,Int] -->
<g id="node3" class="node">
<title>shapeless.ops.coproduct.Selector[String :+: Boolean :+: shapeless.CNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-170.8701" rx="303.1977" ry="26.7407"/>
<text text-anchor="start" x="1592.6015" y="-174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Selector[String :+: Boolean :+: shapeless.CNil,Int]</text>
<text text-anchor="middle" x="1799.1015" y="-159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Int] -->
<g id="node747" class="node">
<title>shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-170.8701" rx="263.5019" ry="26.7407"/>
<text text-anchor="start" x="3167.9729" y="-174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Int]</text>
<text text-anchor="middle" x="3346.4729" y="-159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.coproduct.Selector[String :+: Boolean :+: shapeless.CNil,Int]&#45;&gt;shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Int] -->
<g id="edge465" class="edge">
<title>shapeless.ops.coproduct.Selector[String :+: Boolean :+: shapeless.CNil,Int]&#45;&gt;shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Int]</title>
<path fill="none" stroke="#000000" d="M2102.5051,-170.8701C2384.3593,-170.8701 2800.3861,-170.8701 3072.4167,-170.8701"/>
<polygon fill="#000000" stroke="#000000" points="3072.4354,-174.3702 3082.4353,-170.8701 3072.4353,-167.3702 3072.4354,-174.3702"/>
</g>
<!-- ((Int, Boolean)) =&gt; ?{def shouldEqual: ?} -->
<g id="node4" class="node">
<title>((Int, Boolean)) =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-3698.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="381.8032" y="-3702.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Boolean)) =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-3687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- org.scalactic.source.Position -->
<g id="node423" class="node">
<title>org.scalactic.source.Position</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="1799.1015" cy="-2870.8701" rx="121.7449" ry="26.7407"/>
<text text-anchor="start" x="1721.1015" y="-2874.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.source.Position</text>
<text text-anchor="middle" x="1799.1015" y="-2859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">718 times = 960ms</text>
</g>
<!-- ((Int, Boolean)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge400" class="edge">
<title>((Int, Boolean)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M642.3609,-3714.1523C745.3418,-3719.0387 884.6047,-3713.1333 995.6063,-3662.8701 1384.6154,-3486.7207 1693.7954,-3036.1816 1776.9774,-2906.3673"/>
<polygon fill="#000000" stroke="#000000" points="1780.1525,-2907.8975 1782.574,-2897.5831 1774.2488,-2904.1362 1780.1525,-2907.8975"/>
</g>
<!-- org.scalactic.Prettifier -->
<g id="node771" class="node">
<title>org.scalactic.Prettifier</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-2798.8701" rx="96.7474" ry="26.7407"/>
<text text-anchor="start" x="1738.6015" y="-2802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Prettifier</text>
<text text-anchor="middle" x="1799.1015" y="-2787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">581 times = 248ms</text>
</g>
<!-- ((Int, Boolean)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge203" class="edge">
<title>((Int, Boolean)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M658.3706,-3709.7578C786.217,-3714.4966 950.8898,-3710.474 995.6063,-3662.8701 1011.3542,-3646.1054 987.6339,-2851.4209 1003.6063,-2834.8701 1195.4789,-2636.0498 1572.6187,-2725.7292 1728.7978,-2774.6217"/>
<polygon fill="#000000" stroke="#000000" points="1728.171,-2778.0946 1738.7612,-2777.7797 1730.2861,-2771.4217 1728.171,-2778.0946"/>
</g>
<!-- ((String, Int, Boolean, Double, Long, Char)) =&gt; ?{def shouldEqual: ?} -->
<g id="node5" class="node">
<title>((String, Int, Boolean, Double, Long, Char)) =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-3626.8701" rx="286.2565" ry="26.7407"/>
<text text-anchor="start" x="303.3032" y="-3630.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((String, Int, Boolean, Double, Long, Char)) =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-3615.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- ((String, Int, Boolean, Double, Long, Char)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge172" class="edge">
<title>((String, Int, Boolean, Double, Long, Char)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M744.5506,-3640.5198C827.0997,-3636.9676 917.8386,-3623.88 995.6063,-3590.8701 1368.5608,-3432.5628 1684.9106,-3027.7369 1774.0418,-2906.0103"/>
<polygon fill="#000000" stroke="#000000" points="1777.0055,-2907.8862 1780.0643,-2897.7425 1771.3474,-2903.7647 1777.0055,-2907.8862"/>
</g>
<!-- ((String, Int, Boolean, Double, Long, Char)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge501" class="edge">
<title>((String, Int, Boolean, Double, Long, Char)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M752.4144,-3639.1823C856.8774,-3638.1916 961.3662,-3627.2875 995.6063,-3590.8701 1009.992,-3575.5696 989.0157,-2849.9751 1003.6063,-2834.8701 1195.5704,-2636.1381 1572.6588,-2725.768 1728.811,-2774.6344"/>
<polygon fill="#000000" stroke="#000000" points="1728.1825,-2778.1067 1738.7726,-2777.7907 1730.2969,-2771.4337 1728.1825,-2778.1067"/>
</g>
<!-- scalaz.Equal[Int ==&gt;&gt; String] -->
<g id="node6" class="node">
<title>scalaz.Equal[Int ==&gt;&gt; String]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-8288.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="4691.3434" y="-8292.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int ==&gt;&gt; String]</text>
<text text-anchor="middle" x="4774.3434" y="-8277.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scalaz.Order[Int] -->
<g id="node30" class="node">
<title>scalaz.Order[Int]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-8360.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="6002.4787" y="-8364.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[Int]</text>
<text text-anchor="middle" x="6049.4787" y="-8349.6701" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 13ms</text>
</g>
<!-- scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Order[Int] -->
<g id="edge230" class="edge">
<title>scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M4899.5696,-8295.2834C5035.2776,-8302.2932 5258.1963,-8313.9815 5450.3374,-8324.8701 5632.6249,-8335.2002 5846.0469,-8348.2536 5962.5957,-8355.4636"/>
<polygon fill="#000000" stroke="#000000" points="5962.683,-8358.9756 5972.8801,-8356.1002 5963.1155,-8351.9889 5962.683,-8358.9756"/>
</g>
<!-- scalaz.Order[String] -->
<g id="node168" class="node">
<title>scalaz.Order[String]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-8144.8701" rx="89.6056" ry="26.7407"/>
<text text-anchor="start" x="5993.9787" y="-8148.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[String]</text>
<text text-anchor="middle" x="6049.4787" y="-8133.6701" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 3ms</text>
</g>
<!-- scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Order[String] -->
<g id="edge138" class="edge">
<title>scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M4902.7674,-8286.8074C5039.0492,-8283.5036 5260.4896,-8274.9482 5450.3374,-8252.8701 5636.5115,-8231.2192 5852.2486,-8187.7413 5967.2591,-8163.0644"/>
<polygon fill="#000000" stroke="#000000" points="5968.0159,-8166.4818 5977.0554,-8160.9557 5966.5427,-8159.6385 5968.0159,-8166.4818"/>
</g>
<!-- scalaz.Equal[String] -->
<g id="node422" class="node">
<title>scalaz.Equal[String]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-7532.8701" rx="89.6056" ry="26.7407"/>
<text text-anchor="start" x="5993.9787" y="-7536.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[String]</text>
<text text-anchor="middle" x="6049.4787" y="-7521.6701" font-family="Times,serif" font-size="14.00" fill="#000000">22 times = 22ms</text>
</g>
<!-- scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Equal[String] -->
<g id="edge439" class="edge">
<title>scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M4890.7417,-8300.4029C5063.1943,-8314.66 5374.4184,-8328.6152 5450.3374,-8252.8701 5461.6816,-8241.5519 5451.7019,-8123.4563 5458.3374,-8108.8701 5579.0301,-7843.5624 5881.1365,-7636.2135 6000.1671,-7562.2181"/>
<polygon fill="#000000" stroke="#000000" points="6002.085,-7565.1474 6008.7537,-7556.9146 5998.4065,-7559.1918 6002.085,-7565.1474"/>
</g>
<!-- scalaz.Equal[Int] -->
<g id="node636" class="node">
<title>scalaz.Equal[Int]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-8758.8701" rx="86.9483" ry="26.7407"/>
<text text-anchor="start" x="5995.9787" y="-8762.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int]</text>
<text text-anchor="middle" x="6049.4787" y="-8747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">155 times = 147ms</text>
</g>
<!-- scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge410" class="edge">
<title>scalaz.Equal[Int ==&gt;&gt; String]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4891.6473,-8277.7506C5063.7103,-8264.2279 5372.5722,-8251.449 5450.3374,-8324.8701 5462.043,-8335.9217 5449.7046,-8383.282 5458.3374,-8396.8701 5580.6697,-8589.4196 5845.9585,-8695.2986 5975.4173,-8737.2863"/>
<polygon fill="#000000" stroke="#000000" points="5974.6627,-8740.7198 5985.2538,-8740.4382 5976.7988,-8734.0536 5974.6627,-8740.7198"/>
</g>
<!-- org.scalactic.Equality[Double] -->
<g id="node7" class="node">
<title>org.scalactic.Equality[Double]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-6776.8701" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="4690.8434" y="-6780.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Double]</text>
<text text-anchor="middle" x="4774.3434" y="-6765.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 6ms</text>
</g>
<!-- scalaz.Equal[Double] -->
<g id="node530" class="node">
<title>scalaz.Equal[Double]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-6920.8701" rx="94.5053" ry="26.7407"/>
<text text-anchor="start" x="5990.4787" y="-6924.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Double]</text>
<text text-anchor="middle" x="6049.4787" y="-6909.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 8ms</text>
</g>
<!-- org.scalactic.Equality[Double]&#45;&gt;scalaz.Equal[Double] -->
<g id="edge369" class="edge">
<title>org.scalactic.Equality[Double]&#45;&gt;scalaz.Equal[Double]</title>
<path fill="none" stroke="#000000" d="M4892.3571,-6765.6949C5064.5583,-6752.193 5372.679,-6739.5498 5450.3374,-6812.8701 5473.7486,-6834.9734 5435.0106,-6862.6777 5458.3374,-6884.8701 5526.4237,-6949.6451 5798.6879,-6940.2692 5948.8227,-6929.6113"/>
<polygon fill="#000000" stroke="#000000" points="5949.2535,-6933.0894 5958.9742,-6928.8755 5948.7474,-6926.1077 5949.2535,-6933.0894"/>
</g>
<!-- (=&gt; monocle.LensPolyExample.Foo.type) =&gt; ?{def q_=: ?} -->
<g id="node8" class="node">
<title>(=&gt; monocle.LensPolyExample.Foo.type) =&gt; ?{def q_=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-9838.8701" rx="246.1463" ry="26.7407"/>
<text text-anchor="start" x="331.8032" y="-9842.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; monocle.LensPolyExample.Foo.type) =&gt; ?{def q_=: ?}</text>
<text text-anchor="middle" x="497.8032" y="-9827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- eu.timepit.refined.api.RefType[scala.collection.immutable.Map] -->
<g id="node9" class="node">
<title>eu.timepit.refined.api.RefType[scala.collection.immutable.Map]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-278.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="1621.6015" y="-282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.RefType[scala.collection.immutable.Map]</text>
<text text-anchor="middle" x="1799.1015" y="-267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 6ms</text>
</g>
<!-- scalaz.Equal[String :: Boolean :: shapeless.HNil] -->
<g id="node10" class="node">
<title>scalaz.Equal[String :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-9910.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="1665.1015" y="-9914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[String :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="1799.1015" y="-9899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Double :: String :: Long :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out] -->
<g id="node11" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Double :: String :: Long :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="9337.4836" cy="-10054.8701" rx="492.2927" ry="26.7407"/>
<text text-anchor="start" x="8997.4836" y="-10058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Double :: String :: Long :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="9337.4836" y="-10043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Int :: shapeless.HNil,Out] -->
<g id="node474" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="10414.6291" cy="-10054.8701" rx="492.2927" ry="26.7407"/>
<text text-anchor="start" x="10074.6291" y="-10058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="10414.6291" y="-10043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Double :: String :: Long :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Int :: shapeless.HNil,Out] -->
<g id="edge531" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Double :: String :: Long :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M9829.9544,-10054.8701C9857.3475,-10054.8701 9884.9008,-10054.8701 9912.3281,-10054.8701"/>
<polygon fill="#000000" stroke="#000000" points="9912.4267,-10058.3702 9922.4266,-10054.8701 9912.4266,-10051.3702 9912.4267,-10058.3702"/>
</g>
<!-- monocle.function.Field1[(String, Int, Boolean),A] -->
<g id="node12" class="node">
<title>monocle.function.Field1[(String, Int, Boolean),A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-11566.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="360.8032" y="-11570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field1[(String, Int, Boolean),A]</text>
<text text-anchor="middle" x="497.8032" y="-11555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[(String, Int, Boolean),shapeless.nat._0.N,A] -->
<g id="node756" class="node">
<title>shapeless.ops.hlist.At.Aux[(String, Int, Boolean),shapeless.nat._0.N,A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-11566.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="1603.6015" y="-11570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(String, Int, Boolean),shapeless.nat._0.N,A]</text>
<text text-anchor="middle" x="1799.1015" y="-11555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.function.Field1[(String, Int, Boolean),A]&#45;&gt;shapeless.ops.hlist.At.Aux[(String, Int, Boolean),shapeless.nat._0.N,A] -->
<g id="edge485" class="edge">
<title>monocle.function.Field1[(String, Int, Boolean),A]&#45;&gt;shapeless.ops.hlist.At.Aux[(String, Int, Boolean),shapeless.nat._0.N,A]</title>
<path fill="none" stroke="#000000" d="M702.921,-11566.8701C917.6027,-11566.8701 1256.7871,-11566.8701 1501.0202,-11566.8701"/>
<polygon fill="#000000" stroke="#000000" points="1501.1212,-11570.3702 1511.1211,-11566.8701 1501.1211,-11563.3702 1501.1212,-11570.3702"/>
</g>
<!-- monocle.function.Each[(Int, Int),A] -->
<g id="node13" class="node">
<title>monocle.function.Each[(Int, Int),A]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-11710.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="5951.4787" y="-11714.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[(Int, Int),A]</text>
<text text-anchor="middle" x="6049.4787" y="-11699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 40ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: shapeless.HNil,A] -->
<g id="node171" class="node">
<title>monocle.function.Each[Int :: Int :: shapeless.HNil,A]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-11746.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="7037.1927" y="-11750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: Int :: shapeless.HNil,A]</text>
<text text-anchor="middle" x="7183.1927" y="-11735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- monocle.function.Each[(Int, Int),A]&#45;&gt;monocle.function.Each[Int :: Int :: shapeless.HNil,A] -->
<g id="edge131" class="edge">
<title>monocle.function.Each[(Int, Int),A]&#45;&gt;monocle.function.Each[Int :: Int :: shapeless.HNil,A]</title>
<path fill="none" stroke="#000000" d="M6197.1104,-11715.558C6391.785,-11721.7397 6736.0203,-11732.6705 6961.8933,-11739.8429"/>
<polygon fill="#000000" stroke="#000000" points="6962.1169,-11743.3517 6972.223,-11740.1709 6962.3391,-11736.3552 6962.1169,-11743.3517"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int),SGen] -->
<g id="node689" class="node">
<title>shapeless.Generic.Aux[(Int, Int),SGen]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-11674.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="7076.1927" y="-11678.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int),SGen]</text>
<text text-anchor="middle" x="7183.1927" y="-11663.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- monocle.function.Each[(Int, Int),A]&#45;&gt;shapeless.Generic.Aux[(Int, Int),SGen] -->
<g id="edge288" class="edge">
<title>monocle.function.Each[(Int, Int),A]&#45;&gt;shapeless.Generic.Aux[(Int, Int),SGen]</title>
<path fill="none" stroke="#000000" d="M6197.1104,-11706.1822C6407.2143,-11699.5105 6791.5257,-11687.3071 7013.2352,-11680.2669"/>
<polygon fill="#000000" stroke="#000000" points="7013.4575,-11683.7617 7023.3414,-11679.946 7013.2353,-11676.7652 7013.4575,-11683.7617"/>
</g>
<!-- monocle.function.Each[Option[Int],A] -->
<g id="node14" class="node">
<title>monocle.function.Each[Option[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-11800.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="392.3032" y="-11804.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Option[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-11789.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 25ms</text>
</g>
<!-- shapeless.Generic.Aux[Option[Int],SGen] -->
<g id="node33" class="node">
<title>shapeless.Generic.Aux[Option[Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-11800.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="1684.6015" y="-11804.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Option[Int],SGen]</text>
<text text-anchor="middle" x="1799.1015" y="-11789.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 23ms</text>
</g>
<!-- monocle.function.Each[Option[Int],A]&#45;&gt;shapeless.Generic.Aux[Option[Int],SGen] -->
<g id="edge5" class="edge">
<title>monocle.function.Each[Option[Int],A]&#45;&gt;shapeless.Generic.Aux[Option[Int],SGen]</title>
<path fill="none" stroke="#000000" d="M658.3464,-11800.8701C901.0616,-11800.8701 1360.1394,-11800.8701 1615.6953,-11800.8701"/>
<polygon fill="#000000" stroke="#000000" points="1615.8279,-11804.3702 1625.8278,-11800.8701 1615.8278,-11797.3702 1615.8279,-11804.3702"/>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int] -->
<g id="node15" class="node">
<title>monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-11638.8701" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="5885.9787" y="-11642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int]</text>
<text text-anchor="middle" x="6049.4787" y="-11627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: shapeless.HNil,Int] -->
<g id="node120" class="node">
<title>monocle.function.Each[Int :: Int :: shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-11602.8701" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="7034.6927" y="-11606.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: Int :: shapeless.HNil,Int]</text>
<text text-anchor="middle" x="7183.1927" y="-11591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 8ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: Int :: shapeless.HNil,Int] -->
<g id="edge160" class="edge">
<title>monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: Int :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M6282.6671,-11631.4654C6480.7839,-11625.1744 6763.3326,-11616.2023 6958.8742,-11609.9931"/>
<polygon fill="#000000" stroke="#000000" points="6959.1102,-11613.4874 6968.994,-11609.6717 6958.888,-11606.491 6959.1102,-11613.4874"/>
</g>
<!-- Int :: shapeless.HNil =&gt; ?{def shouldEqual: ?} -->
<g id="node16" class="node">
<title>Int :: shapeless.HNil =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-3554.8701" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="368.8032" y="-3558.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int :: shapeless.HNil =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-3543.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Int :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge510" class="edge">
<title>Int :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M669.3148,-3567.3717C767.9689,-3568.5389 892.4197,-3559.5389 995.6063,-3518.8701 1353.3982,-3377.854 1675.9571,-3017.9018 1770.9283,-2905.1667"/>
<polygon fill="#000000" stroke="#000000" points="1773.6273,-2907.3951 1777.3703,-2897.4834 1768.2633,-2902.8976 1773.6273,-2907.3951"/>
</g>
<!-- Int :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge402" class="edge">
<title>Int :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M673.45,-3566.2452C798.8296,-3570.0789 952.586,-3564.575 995.6063,-3518.8701 1008.6298,-3505.0339 990.3975,-2848.5294 1003.6063,-2834.8701 1195.681,-2636.245 1572.7074,-2725.8149 1728.8269,-2774.6499"/>
<polygon fill="#000000" stroke="#000000" points="1728.1964,-2778.1214 1738.7865,-2777.8041 1730.31,-2771.4481 1728.1964,-2778.1214"/>
</g>
<!-- scalaz.Equal[monocle.generic.Example] -->
<g id="node17" class="node">
<title>scalaz.Equal[monocle.generic.Example]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-11872.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="1688.6015" y="-11876.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[monocle.generic.Example]</text>
<text text-anchor="middle" x="1799.1015" y="-11861.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[A] -->
<g id="node18" class="node">
<title>org.scalacheck.Arbitrary[A]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-12006.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="7106.1927" y="-12010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[A]</text>
<text text-anchor="middle" x="7183.1927" y="-11995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 56ms</text>
</g>
<!-- Option[SymbolicSyntaxExample.this.Sofa] =&gt; ?{def shouldEqual: ?} -->
<g id="node19" class="node">
<title>Option[SymbolicSyntaxExample.this.Sofa] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-3482.8701" rx="282.2713" ry="26.7407"/>
<text text-anchor="start" x="306.3032" y="-3486.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[SymbolicSyntaxExample.this.Sofa] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-3471.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Option[SymbolicSyntaxExample.this.Sofa] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge254" class="edge">
<title>Option[SymbolicSyntaxExample.this.Sofa] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M769.8442,-3490.0202C844.7463,-3484.848 924.8179,-3472.4754 995.6063,-3446.8701 1338.0852,-3322.9897 1664.8428,-3008.7462 1766.6508,-2904.8194"/>
<polygon fill="#000000" stroke="#000000" points="1769.3922,-2907.0214 1773.8682,-2897.4185 1764.3807,-2902.1342 1769.3922,-2907.0214"/>
</g>
<!-- Option[SymbolicSyntaxExample.this.Sofa] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge19" class="edge">
<title>Option[SymbolicSyntaxExample.this.Sofa] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M748.639,-3495.1752C854.327,-3494.4009 960.9123,-3483.6783 995.6063,-3446.8701 1018.9289,-3422.1262 979.9523,-2859.2972 1003.6063,-2834.8701 1195.8176,-2636.3772 1572.7673,-2725.8728 1728.8466,-2774.6689"/>
<polygon fill="#000000" stroke="#000000" points="1728.2136,-2778.1396 1738.8036,-2777.8207 1730.3261,-2771.466 1728.2136,-2778.1396"/>
</g>
<!-- shapeless.ops.hlist.Init.Aux[Int :: String :: Boolean :: shapeless.HNil,I] -->
<g id="node20" class="node">
<title>shapeless.ops.hlist.Init.Aux[Int :: String :: Boolean :: shapeless.HNil,I]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-12304.8701" rx="285.8424" ry="26.7407"/>
<text text-anchor="start" x="1605.1015" y="-12308.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init.Aux[Int :: String :: Boolean :: shapeless.HNil,I]</text>
<text text-anchor="middle" x="1799.1015" y="-12293.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- shapeless.ops.hlist.Init[String :: Boolean :: shapeless.HNil] -->
<g id="node303" class="node">
<title>shapeless.ops.hlist.Init[String :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-12304.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="3185.4729" y="-12308.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init[String :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="3346.4729" y="-12293.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 11ms</text>
</g>
<!-- shapeless.ops.hlist.Init.Aux[Int :: String :: Boolean :: shapeless.HNil,I]&#45;&gt;shapeless.ops.hlist.Init[String :: Boolean :: shapeless.HNil] -->
<g id="edge204" class="edge">
<title>shapeless.ops.hlist.Init.Aux[Int :: String :: Boolean :: shapeless.HNil,I]&#45;&gt;shapeless.ops.hlist.Init[String :: Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2085.168,-12304.8701C2375.6002,-12304.8701 2820.7846,-12304.8701 3097.2169,-12304.8701"/>
<polygon fill="#000000" stroke="#000000" points="3097.3874,-12308.3702 3107.3874,-12304.8701 3097.3873,-12301.3702 3097.3874,-12308.3702"/>
</g>
<!-- shapeless.ops.hlist.At[Float :: Char :: Long :: shapeless.HNil,shapeless.nat._2] -->
<g id="node21" class="node">
<title>shapeless.ops.hlist.At[Float :: Char :: Long :: shapeless.HNil,shapeless.nat._2]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-12448.8701" rx="314.8251" ry="26.7407"/>
<text text-anchor="start" x="5834.9787" y="-12452.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Float :: Char :: Long :: shapeless.HNil,shapeless.nat._2]</text>
<text text-anchor="middle" x="6049.4787" y="-12437.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.At[Char :: Long :: shapeless.HNil,shapeless.nat._1] -->
<g id="node60" class="node">
<title>shapeless.ops.hlist.At[Char :: Long :: shapeless.HNil,shapeless.nat._1]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-12448.8701" rx="284.0141" ry="26.7407"/>
<text text-anchor="start" x="6990.1927" y="-12452.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Char :: Long :: shapeless.HNil,shapeless.nat._1]</text>
<text text-anchor="middle" x="7183.1927" y="-12437.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.At[Float :: Char :: Long :: shapeless.HNil,shapeless.nat._2]&#45;&gt;shapeless.ops.hlist.At[Char :: Long :: shapeless.HNil,shapeless.nat._1] -->
<g id="edge597" class="edge">
<title>shapeless.ops.hlist.At[Float :: Char :: Long :: shapeless.HNil,shapeless.nat._2]&#45;&gt;shapeless.ops.hlist.At[Char :: Long :: shapeless.HNil,shapeless.nat._1]</title>
<path fill="none" stroke="#000000" d="M6364.1519,-12448.8701C6528.1419,-12448.8701 6727.5,-12448.8701 6888.4714,-12448.8701"/>
<polygon fill="#000000" stroke="#000000" points="6888.5311,-12452.3702 6898.5311,-12448.8701 6888.5311,-12445.3702 6888.5311,-12452.3702"/>
</g>
<!-- scalaz.Equal[Int :: String :: Boolean :: shapeless.HNil] -->
<g id="node22" class="node">
<title>scalaz.Equal[Int :: String :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-12520.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="1650.1015" y="-12524.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int :: String :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="1799.1015" y="-12509.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: shapeless.HNil,Int :: shapeless.HNil,Out] -->
<g id="node23" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: shapeless.HNil,Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-10342.8701" rx="346.4646" ry="26.7407"/>
<text text-anchor="start" x="5812.4787" y="-10346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Char :: shapeless.HNil,Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="6049.4787" y="-10331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="node128" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: shapeless.HNil,shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-10342.8701" rx="346.4646" ry="26.7407"/>
<text text-anchor="start" x="6946.1927" y="-10346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: shapeless.HNil,shapeless.HNil,Out]</text>
<text text-anchor="middle" x="7183.1927" y="-10331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: shapeless.HNil,Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="edge418" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: shapeless.HNil,Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: shapeless.HNil,shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M6396.1765,-10342.8701C6532.43,-10342.8701 6688.7761,-10342.8701 6826.0292,-10342.8701"/>
<polygon fill="#000000" stroke="#000000" points="6826.2971,-10346.3702 6836.297,-10342.8701 6826.297,-10339.3702 6826.2971,-10346.3702"/>
</g>
<!-- monocle.function.Cons[List[SymbolicSyntaxExample.this.Article],A] -->
<g id="node24" class="node">
<title>monocle.function.Cons[List[SymbolicSyntaxExample.this.Article],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-12592.8701" rx="282.6855" ry="26.7407"/>
<text text-anchor="start" x="305.8032" y="-12596.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons[List[SymbolicSyntaxExample.this.Article],A]</text>
<text text-anchor="middle" x="497.8032" y="-12581.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[Int :: shapeless.HNil] -->
<g id="node25" class="node">
<title>scalaz.Equal[Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-12664.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="1704.1015" y="-12668.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="1799.1015" y="-12653.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,Double :: String :: Long :: Boolean :: shapeless.HNil,Out] -->
<g id="node26" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,Double :: String :: Long :: Boolean :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="8260.3382" cy="-11134.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="7890.3382" y="-11138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,Double :: String :: Long :: Boolean :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="8260.3382" y="-11123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Double :: Boolean :: Char :: Int :: shapeless.HNil,String :: Long :: Boolean :: shapeless.HNil,Out] -->
<g id="node52" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Double :: Boolean :: Char :: Int :: shapeless.HNil,String :: Long :: Boolean :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="9337.4836" cy="-11134.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="8967.4836" y="-11138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Double :: Boolean :: Char :: Int :: shapeless.HNil,String :: Long :: Boolean :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="9337.4836" y="-11123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,Double :: String :: Long :: Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: Boolean :: Char :: Int :: shapeless.HNil,String :: Long :: Boolean :: shapeless.HNil,Out] -->
<g id="edge453" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,Double :: String :: Long :: Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: Boolean :: Char :: Int :: shapeless.HNil,String :: Long :: Boolean :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M8794.9663,-11134.8701C8795.1314,-11134.8701 8795.2966,-11134.8701 8795.4618,-11134.8701"/>
<polygon fill="#000000" stroke="#000000" points="8792.894,-11138.3702 8802.894,-11134.8701 8792.894,-11131.3702 8792.894,-11138.3702"/>
</g>
<!-- scalaz.Equal[(Int, Int, Int)] -->
<g id="node27" class="node">
<title>scalaz.Equal[(Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-8758.8701" rx="115.0173" ry="26.7407"/>
<text text-anchor="start" x="4700.8434" y="-8762.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, Int, Int)]</text>
<text text-anchor="middle" x="4774.3434" y="-8747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- scalaz.Equal[(Int, Int, Int)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge487" class="edge">
<title>scalaz.Equal[(Int, Int, Int)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4889.7521,-8758.8701C5138.3304,-8758.8701 5720.5321,-8758.8701 5952.0395,-8758.8701"/>
<polygon fill="#000000" stroke="#000000" points="5952.1297,-8762.3702 5962.1297,-8758.8701 5952.1296,-8755.3702 5952.1297,-8762.3702"/>
</g>
<!-- scalaz.Equal[List[Int]] -->
<g id="node28" class="node">
<title>scalaz.Equal[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-9668.8701" rx="98.0761" ry="26.7407"/>
<text text-anchor="start" x="4712.8434" y="-9672.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[List[Int]]</text>
<text text-anchor="middle" x="4774.3434" y="-9657.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 26ms</text>
</g>
<!-- scalaz.Equal[List[Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge145" class="edge">
<title>scalaz.Equal[List[Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4851.5744,-9685.5414C4983.7796,-9709.7854 5257.7983,-9740.9558 5450.3374,-9632.8701 5802.0739,-9435.4156 5990.8099,-8935.0456 6037.7352,-8795.5015"/>
<polygon fill="#000000" stroke="#000000" points="6041.1557,-8796.3071 6040.992,-8785.7135 6034.5138,-8794.097 6041.1557,-8796.3071"/>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.GreaterEqual[Int(0)],RA] -->
<g id="node29" class="node">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.GreaterEqual[Int(0)],RA]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-6419.8701" rx="369.6338" ry="26.7407"/>
<text text-anchor="start" x="3092.9729" y="-6423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.GreaterEqual[Int(0)],RA]</text>
<text text-anchor="middle" x="3346.4729" y="-6408.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 43ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Less[Int(0)],R] -->
<g id="node69" class="node">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Less[Int(0)],R]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-6419.8701" rx="329.5235" ry="26.7407"/>
<text text-anchor="start" x="4549.3434" y="-6423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Less[Int(0)],R]</text>
<text text-anchor="middle" x="4774.3434" y="-6408.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 32ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.GreaterEqual[Int(0)],RA]&#45;&gt;eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Less[Int(0)],R] -->
<g id="edge414" class="edge">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.GreaterEqual[Int(0)],RA]&#45;&gt;eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Less[Int(0)],R]</title>
<path fill="none" stroke="#000000" d="M3716.5066,-6419.8701C3938.2606,-6419.8701 4218.1733,-6419.8701 4434.3535,-6419.8701"/>
<polygon fill="#000000" stroke="#000000" points="4434.5992,-6423.3702 4444.5991,-6419.8701 4434.5991,-6416.3702 4434.5992,-6423.3702"/>
</g>
<!-- scalaz.Equal[Char] -->
<g id="node31" class="node">
<title>scalaz.Equal[Char]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-6848.8701" rx="84.7059" ry="26.7407"/>
<text text-anchor="start" x="5997.4787" y="-6852.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Char]</text>
<text text-anchor="middle" x="6049.4787" y="-6837.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 11ms</text>
</g>
<!-- org.scalactic.Equality[Int :: String :: Boolean :: shapeless.HNil] -->
<g id="node32" class="node">
<title>org.scalactic.Equality[Int :: String :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-12520.8701" rx="256.8596" ry="26.7407"/>
<text text-anchor="start" x="324.3032" y="-12524.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Int :: String :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="497.8032" y="-12509.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalactic.Equality[Int :: String :: Boolean :: shapeless.HNil]&#45;&gt;scalaz.Equal[Int :: String :: Boolean :: shapeless.HNil] -->
<g id="edge388" class="edge">
<title>org.scalactic.Equality[Int :: String :: Boolean :: shapeless.HNil]&#45;&gt;scalaz.Equal[Int :: String :: Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M754.5094,-12520.8701C990.9395,-12520.8701 1338.6643,-12520.8701 1566.9644,-12520.8701"/>
<polygon fill="#000000" stroke="#000000" points="1567.0664,-12524.3702 1577.0664,-12520.8701 1567.0663,-12517.3702 1567.0664,-12524.3702"/>
</g>
<!-- monocle.function.Curry[(Int, Int) =&gt; Int,G] -->
<g id="node34" class="node">
<title>monocle.function.Curry[(Int, Int) =&gt; Int,G]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-12736.8701" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="377.8032" y="-12740.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Curry[(Int, Int) =&gt; Int,G]</text>
<text text-anchor="middle" x="497.8032" y="-12725.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.immutable.Stream[Int] =&gt; ?{def applyIso: ?} -->
<g id="node35" class="node">
<title>scala.collection.immutable.Stream[Int] =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-12808.8701" rx="251.0458" ry="26.7407"/>
<text text-anchor="start" x="328.3032" y="-12812.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Stream[Int] =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-12797.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Float] -->
<g id="node36" class="node">
<title>shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Float]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-12880.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="1593.1015" y="-12884.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Float]</text>
<text text-anchor="middle" x="1799.1015" y="-12869.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Float] -->
<g id="node352" class="node">
<title>shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Float]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-12880.8701" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="3168.4729" y="-12884.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Float]</text>
<text text-anchor="middle" x="3346.4729" y="-12869.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Float]&#45;&gt;shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Float] -->
<g id="edge151" class="edge">
<title>shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Float]&#45;&gt;shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Float]</title>
<path fill="none" stroke="#000000" d="M2102.0443,-12880.8701C2384.1742,-12880.8701 2801.031,-12880.8701 3073.1939,-12880.8701"/>
<polygon fill="#000000" stroke="#000000" points="3073.2171,-12884.3702 3083.2171,-12880.8701 3073.2171,-12877.3702 3073.2171,-12884.3702"/>
</g>
<!-- shapeless.ops.hlist.IsHCons.Aux[scalaz.OneAnd[List,Int],H,T] -->
<g id="node37" class="node">
<title>shapeless.ops.hlist.IsHCons.Aux[scalaz.OneAnd[List,Int],H,T]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-12952.8701" rx="255.0313" ry="26.7407"/>
<text text-anchor="start" x="1626.6015" y="-12956.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.IsHCons.Aux[scalaz.OneAnd[List,Int],H,T]</text>
<text text-anchor="middle" x="1799.1015" y="-12941.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- String(&#39;Hello World&#39;) =&gt; ?{def applyOptional: ?} -->
<g id="node38" class="node">
<title>String(&#39;Hello World&#39;) =&gt; ?{def applyOptional: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-13024.8701" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="362.3032" y="-13028.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Hello World&#39;) =&gt; ?{def applyOptional: ?}</text>
<text text-anchor="middle" x="497.8032" y="-13013.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Reverse[List[Int],A] -->
<g id="node39" class="node">
<title>monocle.function.Reverse[List[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-13096.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="392.3032" y="-13100.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[List[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-13085.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 149ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[List[Int],A] -->
<g id="node158" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[List[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-13132.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="1675.6015" y="-13136.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[List[Int],A]</text>
<text text-anchor="middle" x="1799.1015" y="-13121.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 138ms</text>
</g>
<!-- monocle.function.Reverse[List[Int],A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[List[Int],A] -->
<g id="edge180" class="edge">
<title>monocle.function.Reverse[List[Int],A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[List[Int],A]</title>
<path fill="none" stroke="#000000" d="M656.3918,-13101.2574C895.5507,-13107.8736 1347.9215,-13120.3883 1605.9545,-13127.5267"/>
<polygon fill="#000000" stroke="#000000" points="1606.0982,-13131.0319 1616.1912,-13127.8099 1606.2919,-13124.0346 1606.0982,-13131.0319"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[List[Int],A] -->
<g id="node196" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[List[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-13060.8701" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="1677.6015" y="-13064.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[List[Int],A]</text>
<text text-anchor="middle" x="1799.1015" y="-13049.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- monocle.function.Reverse[List[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[List[Int],A] -->
<g id="edge295" class="edge">
<title>monocle.function.Reverse[List[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[List[Int],A]</title>
<path fill="none" stroke="#000000" d="M656.3918,-13092.4828C896.3866,-13085.8434 1351.0865,-13073.2642 1608.6531,-13066.1388"/>
<polygon fill="#000000" stroke="#000000" points="1608.9702,-13069.6314 1618.8696,-13065.8561 1608.7766,-13062.6341 1608.9702,-13069.6314"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,String,Out0] -->
<g id="node40" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,String,Out0]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-13276.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="3165.9729" y="-13280.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,String,Out0]</text>
<text text-anchor="middle" x="3346.4729" y="-13265.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[S =&gt; A] -->
<g id="node41" class="node">
<title>scalaz.Equal[S =&gt; A]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-12006.8701" rx="95.4188" ry="26.7407"/>
<text text-anchor="start" x="5989.9787" y="-12010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[S =&gt; A]</text>
<text text-anchor="middle" x="6049.4787" y="-11995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 58ms</text>
</g>
<!-- scalaz.Equal[S =&gt; A]&#45;&gt;org.scalacheck.Arbitrary[A] -->
<g id="edge355" class="edge">
<title>scalaz.Equal[S =&gt; A]&#45;&gt;org.scalacheck.Arbitrary[A]</title>
<path fill="none" stroke="#000000" d="M6145.1614,-12006.8701C6348.2032,-12006.8701 6822.413,-12006.8701 7052.862,-12006.8701"/>
<polygon fill="#000000" stroke="#000000" points="7052.9765,-12010.3702 7062.9764,-12006.8701 7052.9764,-12003.3702 7052.9765,-12010.3702"/>
</g>
<!-- scalaz.Equal[this.Out] -->
<g id="node42" class="node">
<title>scalaz.Equal[this.Out]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-6920.8701" rx="96.7474" ry="26.7407"/>
<text text-anchor="start" x="4713.8434" y="-6924.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[this.Out]</text>
<text text-anchor="middle" x="4774.3434" y="-6909.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scalaz.Equal[this.Out]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge2" class="edge">
<title>scalaz.Equal[this.Out]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M4869.79,-6915.9922C5000.721,-6909.254 5243.3823,-6896.5982 5450.3374,-6884.8701 5629.27,-6874.73 5838.2017,-6861.9661 5956.0631,-6854.6805"/>
<polygon fill="#000000" stroke="#000000" points="5956.3687,-6858.1684 5966.1335,-6854.0577 5955.9365,-6851.1818 5956.3687,-6858.1684"/>
</g>
<!-- scalaz.Equal[Boolean] -->
<g id="node144" class="node">
<title>scalaz.Equal[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-7244.8701" rx="98.0761" ry="26.7407"/>
<text text-anchor="start" x="5987.9787" y="-7248.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Boolean]</text>
<text text-anchor="middle" x="6049.4787" y="-7233.6701" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 59ms</text>
</g>
<!-- scalaz.Equal[this.Out]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge380" class="edge">
<title>scalaz.Equal[this.Out]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M4865.8739,-6911.8621C5030.8368,-6897.7969 5368.513,-6879.6166 5450.3374,-6956.8701 5462.043,-6967.9217 5448.3966,-7016.2075 5458.3374,-7028.8701 5575.8341,-7178.5357 5807.017,-7224.5331 5942.8486,-7238.6466"/>
<polygon fill="#000000" stroke="#000000" points="5942.5652,-7242.1357 5952.8637,-7239.6474 5943.2613,-7235.1704 5942.5652,-7242.1357"/>
</g>
<!-- scalaz.Equal[this.Out]&#45;&gt;scalaz.Equal[String] -->
<g id="edge120" class="edge">
<title>scalaz.Equal[this.Out]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M4865.2236,-6911.3246C5030.7738,-6896.1656 5371.7035,-6875.9611 5450.3374,-6956.8701 5462.8864,-6969.7821 5448.2265,-7265.9716 5458.3374,-7280.8701 5571.027,-7446.9177 5817.1992,-7504.0349 5953.642,-7523.3213"/>
<polygon fill="#000000" stroke="#000000" points="5953.2923,-7526.806 5963.6755,-7524.6993 5954.2447,-7519.8711 5953.2923,-7526.806"/>
</g>
<!-- scalaz.Equal[this.Out]&#45;&gt;scalaz.Equal[Double] -->
<g id="edge393" class="edge">
<title>scalaz.Equal[this.Out]&#45;&gt;scalaz.Equal[Double]</title>
<path fill="none" stroke="#000000" d="M4871.2324,-6920.8701C5105.575,-6920.8701 5701.5478,-6920.8701 5944.2361,-6920.8701"/>
<polygon fill="#000000" stroke="#000000" points="5944.473,-6924.3702 5954.4729,-6920.8701 5944.4729,-6917.3702 5944.473,-6924.3702"/>
</g>
<!-- scalaz.Equal[this.Out]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge429" class="edge">
<title>scalaz.Equal[this.Out]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4865.0458,-6911.2143C5030.718,-6895.8182 5372.4304,-6875.1594 5450.3374,-6956.8701 5464.1389,-6971.3453 5448.5137,-8379.4486 5458.3374,-8396.8701 5570.355,-8595.5229 5840.4673,-8698.4373 5973.2262,-8738.4968"/>
<polygon fill="#000000" stroke="#000000" points="5972.3473,-8741.8869 5982.9304,-8741.3867 5974.3453,-8735.1781 5972.3473,-8741.8869"/>
</g>
<!-- scalaz.Equal[Long] -->
<g id="node648" class="node">
<title>scalaz.Equal[Long]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-6992.8701" rx="86.0347" ry="26.7407"/>
<text text-anchor="start" x="5996.4787" y="-6996.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Long]</text>
<text text-anchor="middle" x="6049.4787" y="-6981.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- scalaz.Equal[this.Out]&#45;&gt;scalaz.Equal[Long] -->
<g id="edge30" class="edge">
<title>scalaz.Equal[this.Out]&#45;&gt;scalaz.Equal[Long]</title>
<path fill="none" stroke="#000000" d="M4869.79,-6925.7479C5000.721,-6932.4861 5243.3823,-6945.142 5450.3374,-6956.8701 5628.5118,-6966.9672 5836.4317,-6979.6659 5954.56,-6986.9667"/>
<polygon fill="#000000" stroke="#000000" points="5954.46,-6990.4671 5964.657,-6987.5911 5954.8921,-6983.4804 5954.46,-6990.4671"/>
</g>
<!-- shapeless.ops.hlist.Tupler[Char :: Int :: shapeless.HNil] -->
<g id="node43" class="node">
<title>shapeless.ops.hlist.Tupler[Char :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-10486.8701" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="3194.9729" y="-10490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Tupler[Char :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="3346.4729" y="-10475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char, Boolean, Double, String, Long, Boolean),Out0] -->
<g id="node44" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char, Boolean, Double, String, Long, Boolean),Out0]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-10774.8701" rx="445.4545" ry="26.7407"/>
<text text-anchor="start" x="3039.4729" y="-10778.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char, Boolean, Double, String, Long, Boolean),Out0]</text>
<text text-anchor="middle" x="3346.4729" y="-10763.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.LessEqual[Int(31)],RB] -->
<g id="node45" class="node">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.LessEqual[Int(31)],RB]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-6524.8701" rx="362.9917" ry="26.7407"/>
<text text-anchor="start" x="3097.9729" y="-6528.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.LessEqual[Int(31)],RB]</text>
<text text-anchor="middle" x="3346.4729" y="-6513.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 43ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(31)],R] -->
<g id="node98" class="node">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(31)],R]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-6560.8701" rx="345.1362" ry="26.7407"/>
<text text-anchor="start" x="4538.3434" y="-6564.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(31)],R]</text>
<text text-anchor="middle" x="4774.3434" y="-6549.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 36ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.LessEqual[Int(31)],RB]&#45;&gt;eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(31)],R] -->
<g id="edge237" class="edge">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.LessEqual[Int(31)],RB]&#45;&gt;eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(31)],R]</title>
<path fill="none" stroke="#000000" d="M3690.3005,-6533.5388C3916.2353,-6539.2351 4210.523,-6546.6548 4435.4525,-6552.3258"/>
<polygon fill="#000000" stroke="#000000" points="4435.6889,-6555.8328 4445.7739,-6552.586 4435.8654,-6548.835 4435.6889,-6555.8328"/>
</g>
<!-- monocle.function.Field6[(String, Int, Boolean, Double, Long, Char),A] -->
<g id="node46" class="node">
<title>monocle.function.Field6[(String, Int, Boolean, Double, Long, Char),A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-13348.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="302.3032" y="-13352.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field6[(String, Int, Boolean, Double, Long, Char),A]</text>
<text text-anchor="middle" x="497.8032" y="-13337.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[(String, Int, Boolean, Double, Long, Char),shapeless.nat._5.N,A] -->
<g id="node430" class="node">
<title>shapeless.ops.hlist.At.Aux[(String, Int, Boolean, Double, Long, Char),shapeless.nat._5.N,A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-13348.8701" rx="370.5479" ry="26.7407"/>
<text text-anchor="start" x="1545.1015" y="-13352.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(String, Int, Boolean, Double, Long, Char),shapeless.nat._5.N,A]</text>
<text text-anchor="middle" x="1799.1015" y="-13337.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Field6[(String, Int, Boolean, Double, Long, Char),A]&#45;&gt;shapeless.ops.hlist.At.Aux[(String, Int, Boolean, Double, Long, Char),shapeless.nat._5.N,A] -->
<g id="edge594" class="edge">
<title>monocle.function.Field6[(String, Int, Boolean, Double, Long, Char),A]&#45;&gt;shapeless.ops.hlist.At.Aux[(String, Int, Boolean, Double, Long, Char),shapeless.nat._5.N,A]</title>
<path fill="none" stroke="#000000" d="M785.7961,-13348.8701C971.8701,-13348.8701 1216.0863,-13348.8701 1418.142,-13348.8701"/>
<polygon fill="#000000" stroke="#000000" points="1418.3387,-13352.3702 1428.3386,-13348.8701 1418.3386,-13345.3702 1418.3387,-13352.3702"/>
</g>
<!-- scalaz.Equal[(Int, Boolean)] -->
<g id="node47" class="node">
<title>scalaz.Equal[(Int, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-7784.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="4697.3434" y="-7788.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, Boolean)]</text>
<text text-anchor="middle" x="4774.3434" y="-7773.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- scalaz.Equal[(Int, Boolean)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge455" class="edge">
<title>scalaz.Equal[(Int, Boolean)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M4883.9455,-7796.0268C5055.1325,-7810.765 5374.2961,-7826.5617 5450.3374,-7748.8701 5469.9326,-7728.8496 5442.5245,-7519.9945 5458.3374,-7496.8701 5569.6916,-7334.0282 5809.2482,-7275.9148 5946.7758,-7255.5448"/>
<polygon fill="#000000" stroke="#000000" points="5947.5067,-7258.9757 5956.9054,-7254.0853 5946.5084,-7252.0472 5947.5067,-7258.9757"/>
</g>
<!-- scalaz.Equal[(Int, Boolean)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge192" class="edge">
<title>scalaz.Equal[(Int, Boolean)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4883.7589,-7773.5878C5055.0869,-7758.6222 5374.9415,-7742.45 5450.3374,-7820.8701 5461.4276,-7832.4051 5450.4198,-8382.9646 5458.3374,-8396.8701 5571.1816,-8595.0545 5840.8968,-8698.194 5973.3935,-8738.402"/>
<polygon fill="#000000" stroke="#000000" points="5972.4945,-8741.7863 5983.0783,-8741.3029 5974.5031,-8735.0806 5972.4945,-8741.7863"/>
</g>
<!-- shapeless.ops.hlist.Prepend[shapeless.HNil,String :: Boolean :: shapeless.HNil] -->
<g id="node48" class="node">
<title>shapeless.ops.hlist.Prepend[shapeless.HNil,String :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-13492.8701" rx="317.4819" ry="26.7407"/>
<text text-anchor="start" x="3129.9729" y="-13496.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Prepend[shapeless.HNil,String :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="3346.4729" y="-13481.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- (=&gt; Double) =&gt; Int -->
<g id="node49" class="node">
<title>(=&gt; Double) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-13528.8701" rx="88.2768" ry="26.7407"/>
<text text-anchor="start" x="443.3032" y="-13532.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Double) =&gt; Int</text>
<text text-anchor="middle" x="497.8032" y="-13517.6701" font-family="Times,serif" font-size="14.00" fill="#000000">57 times = 12ms</text>
</g>
<!-- scala.collection.immutable.Vector[Int] =&gt; ?{def applyIso: ?} -->
<g id="node50" class="node">
<title>scala.collection.immutable.Vector[Int] =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-13600.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="329.3032" y="-13604.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Vector[Int] =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-13589.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Boolean :: Float :: Char :: Long :: shapeless.HNil =&gt; ?{def ::: ?} -->
<g id="node51" class="node">
<title>Boolean :: Float :: Char :: Long :: shapeless.HNil =&gt; ?{def ::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-13672.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="320.3032" y="-13676.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean :: Float :: Char :: Long :: shapeless.HNil =&gt; ?{def ::: ?}</text>
<text text-anchor="middle" x="497.8032" y="-13661.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Long :: Boolean :: shapeless.HNil,Out] -->
<g id="node759" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Long :: Boolean :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="10414.6291" cy="-11134.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="10044.6291" y="-11138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Long :: Boolean :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="10414.6291" y="-11123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Double :: Boolean :: Char :: Int :: shapeless.HNil,String :: Long :: Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Long :: Boolean :: shapeless.HNil,Out] -->
<g id="edge102" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Double :: Boolean :: Char :: Int :: shapeless.HNil,String :: Long :: Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Long :: Boolean :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M9872.1117,-11134.8701C9872.2769,-11134.8701 9872.4421,-11134.8701 9872.6072,-11134.8701"/>
<polygon fill="#000000" stroke="#000000" points="9870.0395,-11138.3702 9880.0395,-11134.8701 9870.0394,-11131.3702 9870.0395,-11138.3702"/>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(15)],R] -->
<g id="node53" class="node">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(15)],R]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-6284.8701" rx="345.1362" ry="26.7407"/>
<text text-anchor="start" x="4538.3434" y="-6288.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(15)],R]</text>
<text text-anchor="middle" x="4774.3434" y="-6273.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- Numeric[Int] -->
<g id="node351" class="node">
<title>Numeric[Int]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-6491.8701" rx="82.0488" ry="26.7407"/>
<text text-anchor="start" x="5999.4787" y="-6495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Numeric[Int]</text>
<text text-anchor="middle" x="6049.4787" y="-6480.6701" font-family="Times,serif" font-size="14.00" fill="#000000">36 times = 109ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(15)],R]&#45;&gt;Numeric[Int] -->
<g id="edge309" class="edge">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(15)],R]&#45;&gt;Numeric[Int]</title>
<path fill="none" stroke="#000000" d="M4916.5771,-6260.3414C5071.0241,-6242.6622 5313.8607,-6242.565 5450.3374,-6383.8701 5472.705,-6407.0289 5435.0106,-6433.6777 5458.3374,-6455.8701 5528.1288,-6522.2674 5812.4534,-6510.7531 5959.8679,-6499.8093"/>
<polygon fill="#000000" stroke="#000000" points="5960.5333,-6503.269 5970.2403,-6499.0234 5960.0044,-6496.289 5960.5333,-6503.269"/>
</g>
<!-- shapeless.ops.nat.ToInt[Int(15)] -->
<g id="node382" class="node">
<title>shapeless.ops.nat.ToInt[Int(15)]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-6203.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="5961.9787" y="-6207.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.nat.ToInt[Int(15)]</text>
<text text-anchor="middle" x="6049.4787" y="-6192.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 1ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(15)],R]&#45;&gt;shapeless.ops.nat.ToInt[Int(15)] -->
<g id="edge574" class="edge">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(15)],R]&#45;&gt;shapeless.ops.nat.ToInt[Int(15)]</title>
<path fill="none" stroke="#000000" d="M5036.1948,-6267.3429C5163.574,-6258.8933 5318.9339,-6248.7005 5458.3374,-6239.8701 5612.7589,-6230.0884 5789.9052,-6219.3666 5909.6964,-6212.1903"/>
<polygon fill="#000000" stroke="#000000" points="5910.2496,-6215.6635 5920.0225,-6211.5719 5909.8311,-6208.676 5910.2496,-6215.6635"/>
</g>
<!-- shapeless.Witness.Aux[Int(15)] -->
<g id="node764" class="node">
<title>shapeless.Witness.Aux[Int(15)]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-6275.8701" rx="133.7865" ry="26.7407"/>
<text text-anchor="start" x="5962.9787" y="-6279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Witness.Aux[Int(15)]</text>
<text text-anchor="middle" x="6049.4787" y="-6264.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 21ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(15)],R]&#45;&gt;shapeless.Witness.Aux[Int(15)] -->
<g id="edge24" class="edge">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(15)],R]&#45;&gt;shapeless.Witness.Aux[Int(15)]</title>
<path fill="none" stroke="#000000" d="M5118.1533,-6282.4434C5375.9526,-6280.6239 5715.7565,-6278.2255 5905.4873,-6276.8864"/>
<polygon fill="#000000" stroke="#000000" points="5905.5512,-6280.3861 5915.5262,-6276.8155 5905.5017,-6273.3863 5905.5512,-6280.3861"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Int :: Char :: shapeless.HNil,L2] -->
<g id="node54" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[Int :: Char :: shapeless.HNil,L2]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-10414.8701" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="3168.4729" y="-10418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[Int :: Char :: shapeless.HNil,L2]</text>
<text text-anchor="middle" x="3346.4729" y="-10403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: shapeless.HNil,Out0] -->
<g id="node502" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: shapeless.HNil,Out0]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-10414.8701" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="4533.8434" y="-10418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: shapeless.HNil,Out0]</text>
<text text-anchor="middle" x="4774.3434" y="-10403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Int :: Char :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: shapeless.HNil,Out0] -->
<g id="edge366" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[Int :: Char :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: shapeless.HNil,Out0]</title>
<path fill="none" stroke="#000000" d="M3609.614,-10414.8701C3835.0877,-10414.8701 4162.0799,-10414.8701 4412.2354,-10414.8701"/>
<polygon fill="#000000" stroke="#000000" points="4412.5932,-10418.3702 4422.5931,-10414.8701 4412.5931,-10411.3702 4412.5932,-10418.3702"/>
</g>
<!-- String(&#39;Hello&#39;) =&gt; ?{def applyIso: ?} -->
<g id="node55" class="node">
<title>String(&#39;Hello&#39;) =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-13744.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="396.8032" y="-13748.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Hello&#39;) =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-13733.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- monocle.function.Reverse[scala.collection.immutable.Stream[Int],A] -->
<g id="node56" class="node">
<title>monocle.function.Reverse[scala.collection.immutable.Stream[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-13816.8701" rx="280.0286" ry="26.7407"/>
<text text-anchor="start" x="307.8032" y="-13820.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[scala.collection.immutable.Stream[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-13805.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 54ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[scala.collection.immutable.Stream[Int],A] -->
<g id="node255" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[scala.collection.immutable.Stream[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-13852.8701" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="1591.6015" y="-13856.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[scala.collection.immutable.Stream[Int],A]</text>
<text text-anchor="middle" x="1799.1015" y="-13841.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 45ms</text>
</g>
<!-- monocle.function.Reverse[scala.collection.immutable.Stream[Int],A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[scala.collection.immutable.Stream[Int],A] -->
<g id="edge256" class="edge">
<title>monocle.function.Reverse[scala.collection.immutable.Stream[Int],A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[scala.collection.immutable.Stream[Int],A]</title>
<path fill="none" stroke="#000000" d="M767.0383,-13824.3184C979.9969,-13830.2098 1277.2184,-13838.4323 1498.0349,-13844.5411"/>
<polygon fill="#000000" stroke="#000000" points="1498.0686,-13848.0433 1508.1616,-13844.8213 1498.2622,-13841.046 1498.0686,-13848.0433"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[scala.collection.immutable.Stream[Int],A] -->
<g id="node436" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[scala.collection.immutable.Stream[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-13780.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="1593.1015" y="-13784.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[scala.collection.immutable.Stream[Int],A]</text>
<text text-anchor="middle" x="1799.1015" y="-13769.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- monocle.function.Reverse[scala.collection.immutable.Stream[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[scala.collection.immutable.Stream[Int],A] -->
<g id="edge431" class="edge">
<title>monocle.function.Reverse[scala.collection.immutable.Stream[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[scala.collection.immutable.Stream[Int],A]</title>
<path fill="none" stroke="#000000" d="M767.0383,-13809.4218C980.5467,-13803.5151 1278.7537,-13795.2653 1499.7436,-13789.1517"/>
<polygon fill="#000000" stroke="#000000" points="1499.9784,-13792.6466 1509.8778,-13788.8713 1499.7848,-13785.6493 1499.9784,-13792.6466"/>
</g>
<!-- org.scalactic.Equality[(String, Int, Boolean)] -->
<g id="node57" class="node">
<title>org.scalactic.Equality[(String, Int, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-7352.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="3224.4729" y="-7356.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(String, Int, Boolean)]</text>
<text text-anchor="middle" x="3346.4729" y="-7341.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[(String, Int, Boolean)] -->
<g id="node586" class="node">
<title>scalaz.Equal[(String, Int, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-7352.8701" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="4676.8434" y="-7356.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(String, Int, Boolean)]</text>
<text text-anchor="middle" x="4774.3434" y="-7341.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalactic.Equality[(String, Int, Boolean)]&#45;&gt;scalaz.Equal[(String, Int, Boolean)] -->
<g id="edge92" class="edge">
<title>org.scalactic.Equality[(String, Int, Boolean)]&#45;&gt;scalaz.Equal[(String, Int, Boolean)]</title>
<path fill="none" stroke="#000000" d="M3530.5833,-7352.8701C3812.9276,-7352.8701 4348.1065,-7352.8701 4614.8661,-7352.8701"/>
<polygon fill="#000000" stroke="#000000" points="4615.0223,-7356.3702 4625.0222,-7352.8701 4615.0222,-7349.3702 4615.0223,-7356.3702"/>
</g>
<!-- Option[(Int, scala.collection.immutable.Vector[Int])] =&gt; ?{def shouldEqual: ?} -->
<g id="node58" class="node">
<title>Option[(Int, scala.collection.immutable.Vector[Int])] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-3410.8701" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="279.8032" y="-3414.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[(Int, scala.collection.immutable.Vector[Int])] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-3399.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Option[(Int, scala.collection.immutable.Vector[Int])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge319" class="edge">
<title>Option[(Int, scala.collection.immutable.Vector[Int])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M817.63,-3410.8564C877.7807,-3404.4031 939.3998,-3393.26 995.6063,-3374.8701 1323.8735,-3267.4658 1653.6165,-2997.7186 1762.0453,-2903.7589"/>
<polygon fill="#000000" stroke="#000000" points="1764.52,-2906.2451 1769.7663,-2897.0404 1759.9249,-2900.9644 1764.52,-2906.2451"/>
</g>
<!-- Option[(Int, scala.collection.immutable.Vector[Int])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge269" class="edge">
<title>Option[(Int, scala.collection.immutable.Vector[Int])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M786.5424,-3422.4111C878.8217,-3419.4224 965.0444,-3407.2379 995.6063,-3374.8701 1016.2046,-3353.0547 982.7158,-2856.4057 1003.6063,-2834.8701 1195.8727,-2636.6661 1572.3819,-2725.837 1728.5849,-2774.6036"/>
<polygon fill="#000000" stroke="#000000" points="1727.9609,-2778.077 1738.5508,-2777.7538 1730.0708,-2771.4025 1727.9609,-2778.077"/>
</g>
<!-- (=&gt; ComposeIssueExample.this.B[Nothing,String]) =&gt; ComposeIssueExample.this.A[String,?U] -->
<g id="node59" class="node">
<title>(=&gt; ComposeIssueExample.this.B[Nothing,String]) =&gt; ComposeIssueExample.this.A[String,?U]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-13888.8701" rx="389.7317" ry="26.7407"/>
<text text-anchor="start" x="230.3032" y="-13892.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; ComposeIssueExample.this.B[Nothing,String]) =&gt; ComposeIssueExample.this.A[String,?U]</text>
<text text-anchor="middle" x="497.8032" y="-13877.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.At[Long :: shapeless.HNil,shapeless._0] -->
<g id="node711" class="node">
<title>shapeless.ops.hlist.At[Long :: shapeless.HNil,shapeless._0]</title>
<ellipse fill="none" stroke="#000000" cx="8260.3382" cy="-12448.8701" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="8097.8382" y="-12452.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Long :: shapeless.HNil,shapeless._0]</text>
<text text-anchor="middle" x="8260.3382" y="-12437.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.At[Char :: Long :: shapeless.HNil,shapeless.nat._1]&#45;&gt;shapeless.ops.hlist.At[Long :: shapeless.HNil,shapeless._0] -->
<g id="edge144" class="edge">
<title>shapeless.ops.hlist.At[Char :: Long :: shapeless.HNil,shapeless.nat._1]&#45;&gt;shapeless.ops.hlist.At[Long :: shapeless.HNil,shapeless._0]</title>
<path fill="none" stroke="#000000" d="M7467.609,-12448.8701C7635.805,-12448.8701 7846.9117,-12448.8701 8008.975,-12448.8701"/>
<polygon fill="#000000" stroke="#000000" points="8009.0891,-12452.3702 8019.0891,-12448.8701 8009.0891,-12445.3702 8009.0891,-12452.3702"/>
</g>
<!-- scala.collection.immutable.Stream[Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node61" class="node">
<title>scala.collection.immutable.Stream[Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-3338.8701" rx="265.7444" ry="26.7407"/>
<text text-anchor="start" x="317.8032" y="-3342.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Stream[Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-3327.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 14ms</text>
</g>
<!-- scala.collection.immutable.Stream[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge426" class="edge">
<title>scala.collection.immutable.Stream[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M763.3625,-3340.3022C839.5164,-3335.2008 921.8623,-3324.2954 995.6063,-3302.8701 1309.7951,-3211.5867 1640.1281,-2986.3186 1755.958,-2902.7464"/>
<polygon fill="#000000" stroke="#000000" points="1758.2015,-2905.4432 1764.2474,-2896.7427 1754.0954,-2899.7739 1758.2015,-2905.4432"/>
</g>
<!-- scala.collection.immutable.Stream[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge22" class="edge">
<title>scala.collection.immutable.Stream[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M734.3299,-3351.1608C844.5149,-3351.2361 959.275,-3341.2606 995.6063,-3302.8701 1013.4803,-3283.9831 985.4793,-2853.5143 1003.6063,-2834.8701 1196.0984,-2636.8853 1572.4811,-2725.9333 1728.6176,-2774.6353"/>
<polygon fill="#000000" stroke="#000000" points="1727.9894,-2778.1073 1738.5792,-2777.7814 1730.0975,-2771.4322 1727.9894,-2778.1073"/>
</g>
<!-- ComposeIssueExample.this.B[Nothing,String] =&gt; ComposeIssueExample.this.B[String,?U] -->
<g id="node62" class="node">
<title>ComposeIssueExample.this.B[Nothing,String] =&gt; ComposeIssueExample.this.B[String,?U]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-13960.8701" rx="368.3053" ry="26.7407"/>
<text text-anchor="start" x="245.3032" y="-13964.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ComposeIssueExample.this.B[Nothing,String] =&gt; ComposeIssueExample.this.B[String,?U]</text>
<text text-anchor="middle" x="497.8032" y="-13949.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- Option[Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node63" class="node">
<title>Option[Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-5138.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="393.8032" y="-5142.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-5127.6701" font-family="Times,serif" font-size="14.00" fill="#000000">30 times = 95ms</text>
</g>
<!-- eu.timepit.refined.api.RefType[F] -->
<g id="node149" class="node">
<title>eu.timepit.refined.api.RefType[F]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-5858.8701" rx="142.6713" ry="26.7407"/>
<text text-anchor="start" x="1706.1015" y="-5862.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.RefType[F]</text>
<text text-anchor="middle" x="1799.1015" y="-5847.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Option[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge520" class="edge">
<title>Option[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M646.5227,-5129.516C774.9334,-5124.9318 947.2171,-5128.3072 995.6063,-5174.8701 1007.2065,-5186.0324 995.7075,-5232.8426 1003.6063,-5246.8701 1176.709,-5554.2787 1573.5854,-5758.2433 1732.0007,-5830.1045"/>
<polygon fill="#000000" stroke="#000000" points="1730.6252,-5833.3236 1741.1802,-5834.2415 1733.5014,-5826.9418 1730.6252,-5833.3236"/>
</g>
<!-- Option[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge368" class="edge">
<title>Option[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M593.682,-5160.3766C702.5303,-5178.9099 879.9517,-5190.5581 995.6063,-5102.8701 1380.9926,-4810.6745 1735.5337,-3175.9889 1791.4545,-2908.0319"/>
<polygon fill="#000000" stroke="#000000" points="1794.9249,-2908.534 1793.5353,-2898.0307 1788.0717,-2907.1081 1794.9249,-2908.534"/>
</g>
<!-- Option[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge577" class="edge">
<title>Option[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M643.9796,-5149.2437C773.5983,-5154.8506 949.336,-5152.4318 995.6063,-5102.8701 1017.1027,-5079.8446 981.8015,-2857.6036 1003.6063,-2834.8701 1194.9853,-2635.3402 1572.813,-2725.5818 1728.9965,-2774.627"/>
<polygon fill="#000000" stroke="#000000" points="1728.3687,-2778.1 1738.9592,-2777.7944 1730.4897,-2771.429 1728.3687,-2778.1"/>
</g>
<!-- monocle.generic.Example =&gt; ?{def shouldEqual: ?} -->
<g id="node64" class="node">
<title>monocle.generic.Example =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-3266.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="353.3032" y="-3270.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.generic.Example =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-3255.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.generic.Example =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge121" class="edge">
<title>monocle.generic.Example =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M713.5743,-3267.601C802.0803,-3263.7022 904.858,-3253.724 995.6063,-3230.8701 1296.0335,-3155.2109 1624.3934,-2973.7019 1748.1472,-2901.3716"/>
<polygon fill="#000000" stroke="#000000" points="1750.1949,-2904.2282 1757.05,-2896.1499 1746.6534,-2898.1902 1750.1949,-2904.2282"/>
</g>
<!-- monocle.generic.Example =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge224" class="edge">
<title>monocle.generic.Example =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M692.02,-3278.6278C813.515,-3281.2793 954.5173,-3274.1529 995.6063,-3230.8701 1010.7562,-3214.9113 988.2427,-2850.623 1003.6063,-2834.8701 1196.4057,-2637.1845 1572.6162,-2726.0649 1728.6621,-2774.6787"/>
<polygon fill="#000000" stroke="#000000" points="1728.0282,-2778.1487 1738.6179,-2777.8191 1730.134,-2771.4729 1728.0282,-2778.1487"/>
</g>
<!-- org.scalactic.Equality[Map[Int,String]] -->
<g id="node65" class="node">
<title>org.scalactic.Equality[Map[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-7712.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="3239.4729" y="-7716.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Map[Int,String]]</text>
<text text-anchor="middle" x="3346.4729" y="-7701.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[Map[Int,String]] -->
<g id="node172" class="node">
<title>scalaz.Equal[Map[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-7712.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="4692.3434" y="-7716.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Map[Int,String]]</text>
<text text-anchor="middle" x="4774.3434" y="-7701.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[Map[Int,String]]&#45;&gt;scalaz.Equal[Map[Int,String]] -->
<g id="edge527" class="edge">
<title>org.scalactic.Equality[Map[Int,String]]&#45;&gt;scalaz.Equal[Map[Int,String]]</title>
<path fill="none" stroke="#000000" d="M3509.2248,-7712.8701C3792.6324,-7712.8701 4371.7596,-7712.8701 4636.6138,-7712.8701"/>
<polygon fill="#000000" stroke="#000000" points="4636.6736,-7716.3702 4646.6736,-7712.8701 4636.6736,-7709.3702 4636.6736,-7716.3702"/>
</g>
<!-- monocle.function.FilterIndex[Map[String,JsonExample.this.Json],String,A] -->
<g id="node66" class="node">
<title>monocle.function.FilterIndex[Map[String,JsonExample.this.Json],String,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-14032.8701" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="290.3032" y="-14036.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[Map[String,JsonExample.this.Json],String,A]</text>
<text text-anchor="middle" x="497.8032" y="-14021.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Curry[F,Int =&gt; (Int =&gt; Int)] -->
<g id="node67" class="node">
<title>monocle.function.Curry[F,Int =&gt; (Int =&gt; Int)]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-14104.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="370.8032" y="-14108.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Curry[F,Int =&gt; (Int =&gt; Int)]</text>
<text text-anchor="middle" x="497.8032" y="-14093.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Functor[F$macro$26] -->
<g id="node68" class="node">
<title>scalaz.Functor[F$macro$26]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-14176.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-14180.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$26]</text>
<text text-anchor="middle" x="497.8032" y="-14165.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Less[Int(0)],R]&#45;&gt;Numeric[Int] -->
<g id="edge493" class="edge">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Less[Int(0)],R]&#45;&gt;Numeric[Int]</title>
<path fill="none" stroke="#000000" d="M5045.5469,-6435.1835C5332.7622,-6451.4009 5770.1222,-6476.0963 5958.2389,-6486.7182"/>
<polygon fill="#000000" stroke="#000000" points="5958.1852,-6490.2207 5968.3667,-6487.2901 5958.5799,-6483.2318 5958.1852,-6490.2207"/>
</g>
<!-- shapeless.ops.nat.ToInt[Int(0)] -->
<g id="node551" class="node">
<title>shapeless.ops.nat.ToInt[Int(0)]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-6347.8701" rx="130.2154" ry="26.7407"/>
<text text-anchor="start" x="5965.4787" y="-6351.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.nat.ToInt[Int(0)]</text>
<text text-anchor="middle" x="6049.4787" y="-6336.6701" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 16ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Less[Int(0)],R]&#45;&gt;shapeless.ops.nat.ToInt[Int(0)] -->
<g id="edge570" class="edge">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Less[Int(0)],R]&#45;&gt;shapeless.ops.nat.ToInt[Int(0)]</title>
<path fill="none" stroke="#000000" d="M5045.5469,-6404.5567C5311.9769,-6389.5128 5707.6066,-6367.1737 5913.6333,-6355.5405"/>
<polygon fill="#000000" stroke="#000000" points="5914.1172,-6359.0189 5923.904,-6354.9606 5913.7225,-6352.03 5914.1172,-6359.0189"/>
</g>
<!-- shapeless.Witness.Aux[Int(0)] -->
<g id="node762" class="node">
<title>shapeless.Witness.Aux[Int(0)]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-6419.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="5966.4787" y="-6423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Witness.Aux[Int(0)]</text>
<text text-anchor="middle" x="6049.4787" y="-6408.6701" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 150ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Less[Int(0)],R]&#45;&gt;shapeless.Witness.Aux[Int(0)] -->
<g id="edge100" class="edge">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Less[Int(0)],R]&#45;&gt;shapeless.Witness.Aux[Int(0)]</title>
<path fill="none" stroke="#000000" d="M5103.9659,-6419.8701C5365.6738,-6419.8701 5718.4876,-6419.8701 5910.6217,-6419.8701"/>
<polygon fill="#000000" stroke="#000000" points="5910.7794,-6423.3702 5920.7793,-6419.8701 5910.7793,-6416.3702 5910.7794,-6423.3702"/>
</g>
<!-- scalaz.Id.Id[(StateExample.this.Person, Option[String])] =&gt; ?{def shouldEqual: ?} -->
<g id="node70" class="node">
<title>scalaz.Id.Id[(StateExample.this.Person, Option[String])] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-3194.8701" rx="332.1805" ry="26.7407"/>
<text text-anchor="start" x="270.8032" y="-3198.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Id.Id[(StateExample.this.Person, Option[String])] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-3183.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- scalaz.Id.Id[(StateExample.this.Person, Option[String])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge18" class="edge">
<title>scalaz.Id.Id[(StateExample.this.Person, Option[String])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M809.3241,-3185.4152C871.4634,-3179.8679 935.9431,-3171.4734 995.6063,-3158.8701 1282.3224,-3098.3039 1605.537,-2959.4544 1737.7726,-2899.4065"/>
<polygon fill="#000000" stroke="#000000" points="1739.3109,-2902.5519 1746.9604,-2895.2214 1736.4091,-2896.1816 1739.3109,-2902.5519"/>
</g>
<!-- scalaz.Id.Id[(StateExample.this.Person, Option[String])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge327" class="edge">
<title>scalaz.Id.Id[(StateExample.this.Person, Option[String])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M802.462,-3205.6259C888.515,-3201.7534 966.679,-3189.2054 995.6063,-3158.8701 1008.0322,-3145.8395 991.006,-2847.7319 1003.6063,-2834.8701 1196.7304,-2637.7384 1572.3505,-2726.1468 1728.4396,-2774.6523"/>
<polygon fill="#000000" stroke="#000000" points="1727.8097,-2778.1232 1738.3992,-2777.7861 1729.9108,-2771.446 1727.8097,-2778.1232"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[scala.collection.immutable.Vector[Int],A] -->
<g id="node71" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[scala.collection.immutable.Vector[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-14259.8701" rx="303.1977" ry="26.7407"/>
<text text-anchor="start" x="1592.6015" y="-14263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[scala.collection.immutable.Vector[Int],A]</text>
<text text-anchor="middle" x="1799.1015" y="-14248.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- shapeless.Generic.Aux[scala.collection.immutable.Vector[Int],L1] -->
<g id="node556" class="node">
<title>shapeless.Generic.Aux[scala.collection.immutable.Vector[Int],L1]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-14259.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="3164.4729" y="-14263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scala.collection.immutable.Vector[Int],L1]</text>
<text text-anchor="middle" x="3346.4729" y="-14248.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[scala.collection.immutable.Vector[Int],A]&#45;&gt;shapeless.Generic.Aux[scala.collection.immutable.Vector[Int],L1] -->
<g id="edge489" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[scala.collection.immutable.Vector[Int],A]&#45;&gt;shapeless.Generic.Aux[scala.collection.immutable.Vector[Int],L1]</title>
<path fill="none" stroke="#000000" d="M2102.5051,-14259.8701C2382.7294,-14259.8701 2795.5792,-14259.8701 3067.6831,-14259.8701"/>
<polygon fill="#000000" stroke="#000000" points="3067.7061,-14263.3702 3077.706,-14259.8701 3067.706,-14256.3702 3067.7061,-14263.3702"/>
</g>
<!-- monocle.function.Each[T[A],A] -->
<g id="node72" class="node">
<title>monocle.function.Each[T[A],A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-14391.8701" rx="136.4432" ry="26.7407"/>
<text text-anchor="start" x="1710.6015" y="-14395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[T[A],A]</text>
<text text-anchor="middle" x="1799.1015" y="-14380.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 17ms</text>
</g>
<!-- scalaz.Traverse[S] -->
<g id="node193" class="node">
<title>scalaz.Traverse[S]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-14364.8701" rx="82.9636" ry="26.7407"/>
<text text-anchor="start" x="3295.9729" y="-14368.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Traverse[S]</text>
<text text-anchor="middle" x="3346.4729" y="-14353.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Each[T[A],A]&#45;&gt;scalaz.Traverse[S] -->
<g id="edge261" class="edge">
<title>monocle.function.Each[T[A],A]&#45;&gt;scalaz.Traverse[S]</title>
<path fill="none" stroke="#000000" d="M1935.0642,-14389.4977C2243.6312,-14384.1135 2990.4498,-14371.0823 3253.1655,-14366.4982"/>
<polygon fill="#000000" stroke="#000000" points="3253.4962,-14369.993 3263.4335,-14366.319 3253.374,-14362.9941 3253.4962,-14369.993"/>
</g>
<!-- monocle.function.FilterIndex[List[Int],Int,A] -->
<g id="node73" class="node">
<title>monocle.function.FilterIndex[List[Int],Int,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-14419.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="374.3032" y="-14423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[List[Int],Int,A]</text>
<text text-anchor="middle" x="497.8032" y="-14408.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[Int \&amp;/ String] -->
<g id="node74" class="node">
<title>org.scalactic.Equality[Int \&amp;/ String]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-8038.8701" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="3247.4729" y="-8042.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Int &amp;/ String]</text>
<text text-anchor="middle" x="3346.4729" y="-8027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 14ms</text>
</g>
<!-- scalaz.Equal[Int \&amp;/ String] -->
<g id="node663" class="node">
<title>scalaz.Equal[Int \&amp;/ String]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-8144.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="4700.3434" y="-8148.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int &amp;/ String]</text>
<text text-anchor="middle" x="4774.3434" y="-8133.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 12ms</text>
</g>
<!-- org.scalactic.Equality[Int \&amp;/ String]&#45;&gt;scalaz.Equal[Int \&amp;/ String] -->
<g id="edge408" class="edge">
<title>org.scalactic.Equality[Int \&amp;/ String]&#45;&gt;scalaz.Equal[Int \&amp;/ String]</title>
<path fill="none" stroke="#000000" d="M3423.4505,-8015.6439C3571.4524,-7976.1624 3898.0361,-7914.8392 4090.3493,-8074.8701 4102.282,-8084.7997 4086.4407,-8098.9115 4098.3493,-8108.8701 4179.9499,-8177.1083 4484.146,-8166.8432 4655.3403,-8154.9761"/>
<polygon fill="#000000" stroke="#000000" points="4655.681,-8158.4608 4665.4099,-8154.2656 4655.1883,-8151.4782 4655.681,-8158.4608"/>
</g>
<!-- LensMonoExample.this.john.type =&gt; ?{def lens: ?} -->
<g id="node75" class="node">
<title>LensMonoExample.this.john.type =&gt; ?{def lens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-14491.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="354.8032" y="-14495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">LensMonoExample.this.john.type =&gt; ?{def lens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-14480.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- shapeless.Generic.Aux[(Int, String, Boolean),Int :: String :: Boolean :: shapeless.HNil] -->
<g id="node76" class="node">
<title>shapeless.Generic.Aux[(Int, String, Boolean),Int :: String :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-14635.8701" rx="347.379" ry="26.7407"/>
<text text-anchor="start" x="1561.6015" y="-14639.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, String, Boolean),Int :: String :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="1799.1015" y="-14624.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 41ms</text>
</g>
<!-- scalaz.Equal[A] -->
<g id="node77" class="node">
<title>scalaz.Equal[A]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-11970.8701" rx="73.5782" ry="26.7407"/>
<text text-anchor="start" x="4730.3434" y="-11974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[A]</text>
<text text-anchor="middle" x="4774.3434" y="-11959.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[A]&#45;&gt;scalaz.Equal[S =&gt; A] -->
<g id="edge118" class="edge">
<title>scalaz.Equal[A]&#45;&gt;scalaz.Equal[S =&gt; A]</title>
<path fill="none" stroke="#000000" d="M4847.9452,-11972.948C5063.3385,-11979.0291 5693.0026,-11996.8059 5944.215,-12003.8982"/>
<polygon fill="#000000" stroke="#000000" points="5944.3464,-12007.4032 5954.4412,-12004.1869 5944.544,-12000.406 5944.3464,-12007.4032"/>
</g>
<!-- scalaz.Equal[S =&gt; Option[A]] -->
<g id="node185" class="node">
<title>scalaz.Equal[S =&gt; Option[A]]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-11924.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="5966.4787" y="-11928.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[S =&gt; Option[A]]</text>
<text text-anchor="middle" x="6049.4787" y="-11913.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[A]&#45;&gt;scalaz.Equal[S =&gt; Option[A]] -->
<g id="edge542" class="edge">
<title>scalaz.Equal[A]&#45;&gt;scalaz.Equal[S =&gt; Option[A]]</title>
<path fill="none" stroke="#000000" d="M4847.9452,-11968.2149C5054.7155,-11960.7557 5643.2505,-11939.5246 5912.275,-11929.8196"/>
<polygon fill="#000000" stroke="#000000" points="5912.6256,-11933.3094 5922.4928,-11929.451 5912.3731,-11926.3139 5912.6256,-11933.3094"/>
</g>
<!-- org.scalactic.Equality[List[Int]] -->
<g id="node78" class="node">
<title>org.scalactic.Equality[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-9622.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="3260.4729" y="-9626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[List[Int]]</text>
<text text-anchor="middle" x="3346.4729" y="-9611.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 37ms</text>
</g>
<!-- org.scalactic.Equality[List[Int]]&#45;&gt;scalaz.Equal[List[Int]] -->
<g id="edge411" class="edge">
<title>org.scalactic.Equality[List[Int]]&#45;&gt;scalaz.Equal[List[Int]]</title>
<path fill="none" stroke="#000000" d="M3477.9257,-9627.1049C3757.9103,-9636.1248 4408.5418,-9657.0855 4666.3408,-9665.3907"/>
<polygon fill="#000000" stroke="#000000" points="4666.3535,-9668.8928 4676.461,-9665.7167 4666.5789,-9661.8964 4666.3535,-9668.8928"/>
</g>
<!-- ((Boolean, String, Double, Int, Int)) =&gt; ?{def shouldEqual: ?} -->
<g id="node79" class="node">
<title>((Boolean, String, Double, Int, Int)) =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-3122.8701" rx="253.2885" ry="26.7407"/>
<text text-anchor="start" x="326.8032" y="-3126.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Boolean, String, Double, Int, Int)) =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-3111.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- ((Boolean, String, Double, Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge452" class="edge">
<title>((Boolean, String, Double, Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M739.1328,-3114.6864C820.9541,-3109.4572 912.6242,-3100.8929 995.6063,-3086.8701 1267.7027,-3040.8896 1581.153,-2943.2469 1722.7089,-2896.6539"/>
<polygon fill="#000000" stroke="#000000" points="1724.2019,-2899.8469 1732.601,-2893.3888 1722.0078,-2893.1996 1724.2019,-2899.8469"/>
</g>
<!-- ((Boolean, String, Double, Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge464" class="edge">
<title>((Boolean, String, Double, Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M724.2979,-3134.914C837.3322,-3135.5238 957.907,-3126.1263 995.6063,-3086.8701 1015.0106,-3066.6645 983.9314,-2854.8122 1003.6063,-2834.8701 1197.424,-2638.4203 1572.656,-2726.4471 1728.5405,-2774.7515"/>
<polygon fill="#000000" stroke="#000000" points="1727.8977,-2778.218 1738.4869,-2777.8724 1729.9934,-2771.5391 1727.8977,-2778.218"/>
</g>
<!-- org.scalactic.Equality[monocle.generic.Example] -->
<g id="node80" class="node">
<title>org.scalactic.Equality[monocle.generic.Example]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-11872.8701" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="362.3032" y="-11876.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[monocle.generic.Example]</text>
<text text-anchor="middle" x="497.8032" y="-11861.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- org.scalactic.Equality[monocle.generic.Example]&#45;&gt;scalaz.Equal[monocle.generic.Example] -->
<g id="edge450" class="edge">
<title>org.scalactic.Equality[monocle.generic.Example]&#45;&gt;scalaz.Equal[monocle.generic.Example]</title>
<path fill="none" stroke="#000000" d="M700.7737,-11872.8701C953.3272,-11872.8701 1380.5542,-11872.8701 1620.9688,-11872.8701"/>
<polygon fill="#000000" stroke="#000000" points="1621.2118,-11876.3702 1631.2118,-11872.8701 1621.2117,-11869.3702 1621.2118,-11876.3702"/>
</g>
<!-- scalaz.Equal[CoproductExample.this.ISB] -->
<g id="node81" class="node">
<title>scalaz.Equal[CoproductExample.this.ISB]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-14707.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="1683.1015" y="-14711.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[CoproductExample.this.ISB]</text>
<text text-anchor="middle" x="1799.1015" y="-14696.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[shapeless.HNil,SGen] -->
<g id="node82" class="node">
<title>shapeless.Generic.Aux[shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-14761.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="5924.4787" y="-14765.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="6049.4787" y="-14750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[Point$3] -->
<g id="node83" class="node">
<title>scalaz.Equal[Point$3]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-15067.8701" rx="96.3333" ry="26.7407"/>
<text text-anchor="start" x="1739.1015" y="-15071.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Point$3]</text>
<text text-anchor="middle" x="1799.1015" y="-15056.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out0] -->
<g id="node84" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out0]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-11134.8701" rx="539.5449" ry="26.7407"/>
<text text-anchor="start" x="4400.8434" y="-11138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out0]</text>
<text text-anchor="middle" x="4774.3434" y="-11123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out] -->
<g id="node527" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-11134.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="5679.4787" y="-11138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="6049.4787" y="-11123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out] -->
<g id="edge277" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M5314.1913,-11134.8701C5377.2163,-11134.8701 5441.5463,-11134.8701 5504.6384,-11134.8701"/>
<polygon fill="#000000" stroke="#000000" points="5504.7534,-11138.3702 5514.7533,-11134.8701 5504.7533,-11131.3702 5504.7534,-11138.3702"/>
</g>
<!-- String(&#39;One&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node85" class="node">
<title>String(&#39;One&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-6002.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="417.8032" y="-6006.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;One&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-5991.6701" font-family="Times,serif" font-size="14.00" fill="#000000">30 times = 102ms</text>
</g>
<!-- String(&#39;One&#39;) =&gt; ?{def &#45;&gt;: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge95" class="edge">
<title>String(&#39;One&#39;) =&gt; ?{def &#45;&gt;: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M618.4404,-5996.2258C719.3672,-5990.1685 867.0733,-5980.1433 995.6063,-5966.8701 1238.606,-5941.7763 1521.443,-5901.0652 1678.401,-5877.4481"/>
<polygon fill="#000000" stroke="#000000" points="1679.1891,-5880.869 1688.5557,-5875.9176 1678.1457,-5873.9472 1679.1891,-5880.869"/>
</g>
<!-- Long =&gt; Int -->
<g id="node86" class="node">
<title>Long =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-15139.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="450.8032" y="-15143.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Long =&gt; Int</text>
<text text-anchor="middle" x="497.8032" y="-15128.6701" font-family="Times,serif" font-size="14.00" fill="#000000">57 times = 14ms</text>
</g>
<!-- Option[Boolean] =&gt; ?{def shouldEqual: ?} -->
<g id="node87" class="node">
<title>Option[Boolean] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-3050.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="378.8032" y="-3054.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Boolean] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-3039.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- Option[Boolean] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge346" class="edge">
<title>Option[Boolean] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M669.5916,-3042.909C765.7192,-3037.3363 887.5986,-3028.4158 995.6063,-3014.8701 1252.1378,-2982.6973 1551.0933,-2923.2499 1701.7303,-2891.74"/>
<polygon fill="#000000" stroke="#000000" points="1702.8076,-2895.0903 1711.8767,-2889.6129 1701.3713,-2888.2393 1702.8076,-2895.0903"/>
</g>
<!-- Option[Boolean] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge323" class="edge">
<title>Option[Boolean] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M662.7322,-3061.5237C789.6167,-3065.7417 950.6358,-3061.1074 995.6063,-3014.8701 1009.5645,-3000.5187 989.456,-2849.0319 1003.6063,-2834.8701 1198.4266,-2639.8922 1572.2852,-2726.7765 1728.1485,-2774.7545"/>
<polygon fill="#000000" stroke="#000000" points="1727.5069,-2778.2205 1738.0954,-2777.8551 1729.5901,-2771.5377 1727.5069,-2778.2205"/>
</g>
<!-- scalaz.Equal[(scala.collection.immutable.Vector[Int], Int)] -->
<g id="node88" class="node">
<title>scalaz.Equal[(scala.collection.immutable.Vector[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-9262.8701" rx="238.0901" ry="26.7407"/>
<text text-anchor="start" x="3185.9729" y="-9266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(scala.collection.immutable.Vector[Int], Int)]</text>
<text text-anchor="middle" x="3346.4729" y="-9251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scalaz.Equal[scala.collection.immutable.Vector[Int]] -->
<g id="node329" class="node">
<title>scalaz.Equal[scala.collection.immutable.Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-9300.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="4629.8434" y="-9304.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scala.collection.immutable.Vector[Int]]</text>
<text text-anchor="middle" x="4774.3434" y="-9289.6701" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 21ms</text>
</g>
<!-- scalaz.Equal[(scala.collection.immutable.Vector[Int], Int)]&#45;&gt;scalaz.Equal[scala.collection.immutable.Vector[Int]] -->
<g id="edge33" class="edge">
<title>scalaz.Equal[(scala.collection.immutable.Vector[Int], Int)]&#45;&gt;scalaz.Equal[scala.collection.immutable.Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M3578.6648,-9269.0494C3847.9518,-9276.2159 4288.6415,-9287.944 4553.153,-9294.9835"/>
<polygon fill="#000000" stroke="#000000" points="4553.179,-9298.4853 4563.2686,-9295.2527 4553.3653,-9291.4878 4553.179,-9298.4853"/>
</g>
<!-- scalaz.Equal[(scala.collection.immutable.Vector[Int], Int)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge598" class="edge">
<title>scalaz.Equal[(scala.collection.immutable.Vector[Int], Int)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M3585.0876,-9262.8377C4117.7396,-9262.2135 5363.8654,-9257.4696 5450.3374,-9226.8701 5708.8136,-9135.404 5942.3127,-8884.2247 6021.1772,-8792.7554"/>
<polygon fill="#000000" stroke="#000000" points="6024.0431,-8794.7898 6027.8917,-8784.9187 6018.7274,-8790.2353 6024.0431,-8794.7898"/>
</g>
<!-- scalaz.Functor[F$macro$34] -->
<g id="node89" class="node">
<title>scalaz.Functor[F$macro$34]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-15211.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-15215.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$34]</text>
<text text-anchor="middle" x="497.8032" y="-15200.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((String, Int, Boolean)) =&gt; ?{def shouldEqual: ?} -->
<g id="node90" class="node">
<title>((String, Int, Boolean)) =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-2978.8701" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="361.8032" y="-2982.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((String, Int, Boolean)) =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-2967.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- ((String, Int, Boolean)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge52" class="edge">
<title>((String, Int, Boolean)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M678.7494,-2966.5352C773.2091,-2959.9059 890.6701,-2951.3654 995.6063,-2942.8701 1237.3861,-2923.2963 1519.7905,-2897.2518 1677.1822,-2882.4516"/>
<polygon fill="#000000" stroke="#000000" points="1677.7387,-2885.9148 1687.3667,-2881.4932 1677.0828,-2878.9455 1677.7387,-2885.9148"/>
</g>
<!-- ((String, Int, Boolean)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge540" class="edge">
<title>((String, Int, Boolean)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M684.0527,-2989.7602C806.7887,-2992.519 952.5261,-2985.8751 995.6063,-2942.8701 1012.6383,-2925.8679 986.3467,-2851.641 1003.6063,-2834.8701 1200.9196,-2643.1428 1572.1794,-2727.7452 1727.7097,-2774.9192"/>
<polygon fill="#000000" stroke="#000000" points="1727.0512,-2778.3782 1737.6381,-2777.969 1729.1067,-2771.6868 1727.0512,-2778.3782"/>
</g>
<!-- String ==&gt;&gt; Int =&gt; ?{def shouldEqual: ?} -->
<g id="node91" class="node">
<title>String ==&gt;&gt; Int =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-4994.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="380.3032" y="-4998.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String ==&gt;&gt; Int =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-4983.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 28ms</text>
</g>
<!-- String ==&gt;&gt; Int =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge483" class="edge">
<title>String ==&gt;&gt; Int =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M599.7358,-5016.9685C708.725,-5034.4347 881.2651,-5043.6153 995.6063,-4958.8701 1720.1288,-4421.8824 1791.3616,-3141.4103 1798.3449,-2907.7862"/>
<polygon fill="#000000" stroke="#000000" points="1801.8442,-2907.856 1798.6235,-2897.7626 1794.8469,-2907.6614 1801.8442,-2907.856"/>
</g>
<!-- eu.timepit.refined.api.RefType[scalaz.==&gt;&gt;] -->
<g id="node757" class="node">
<title>eu.timepit.refined.api.RefType[scalaz.==&gt;&gt;]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-5210.8701" rx="186.8525" ry="26.7407"/>
<text text-anchor="start" x="1675.1015" y="-5214.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.RefType[scalaz.==&gt;&gt;]</text>
<text text-anchor="middle" x="1799.1015" y="-5199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 7ms</text>
</g>
<!-- String ==&gt;&gt; Int =&gt; ?{def shouldEqual: ?}&#45;&gt;eu.timepit.refined.api.RefType[scalaz.==&gt;&gt;] -->
<g id="edge161" class="edge">
<title>String ==&gt;&gt; Int =&gt; ?{def shouldEqual: ?}&#45;&gt;eu.timepit.refined.api.RefType[scalaz.==&gt;&gt;]</title>
<path fill="none" stroke="#000000" d="M670.7001,-5001.0699C766.7691,-5006.0929 888.2366,-5015.0502 995.6063,-5030.8701 1253.7877,-5068.9105 1552.3419,-5144.231 1702.3978,-5184.3179"/>
<polygon fill="#000000" stroke="#000000" points="1701.9387,-5187.8182 1712.5038,-5187.0244 1703.7497,-5181.0565 1701.9387,-5187.8182"/>
</g>
<!-- String ==&gt;&gt; Int =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge419" class="edge">
<title>String ==&gt;&gt; Int =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M660.0344,-5005.8836C787.6961,-5010.5709 951.2151,-5006.4077 995.6063,-4958.8701 1015.7404,-4937.3089 983.1834,-2856.1577 1003.6063,-2834.8701 1195.0091,-2635.3631 1572.8234,-2725.5918 1728.9999,-2774.6303"/>
<polygon fill="#000000" stroke="#000000" points="1728.3717,-2778.1031 1738.9622,-2777.7973 1730.4925,-2771.4321 1728.3717,-2778.1031"/>
</g>
<!-- monocle.function.Snoc[List[Int],A] -->
<g id="node92" class="node">
<title>monocle.function.Snoc[List[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-15283.8701" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="400.3032" y="-15287.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc[List[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-15272.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Option[Int])]] -->
<g id="node93" class="node">
<title>scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Option[Int])]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-15355.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="1615.6015" y="-15359.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Option[Int])]]</text>
<text text-anchor="middle" x="1799.1015" y="-15344.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 29ms</text>
</g>
<!-- scalaz.Equal[StateExample.this.Person] -->
<g id="node112" class="node">
<title>scalaz.Equal[StateExample.this.Person]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-15499.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="3237.9729" y="-15503.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[StateExample.this.Person]</text>
<text text-anchor="middle" x="3346.4729" y="-15488.6701" font-family="Times,serif" font-size="14.00" fill="#000000">30 times = 19ms</text>
</g>
<!-- scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Option[Int])]]&#45;&gt;scalaz.Equal[StateExample.this.Person] -->
<g id="edge390" class="edge">
<title>scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Option[Int])]]&#45;&gt;scalaz.Equal[StateExample.this.Person]</title>
<path fill="none" stroke="#000000" d="M2064.2626,-15361.4061C2219.1571,-15366.2528 2418.2472,-15375.2541 2594.5966,-15391.8701 2817.4328,-15412.8661 3075.2838,-15453.4937 3223.772,-15478.493"/>
<polygon fill="#000000" stroke="#000000" points="3223.3894,-15481.9778 3233.8325,-15480.191 3224.5545,-15475.0755 3223.3894,-15481.9778"/>
</g>
<!-- monocle.function.Empty[scala.collection.immutable.Vector[Int]] -->
<g id="node94" class="node">
<title>monocle.function.Empty[scala.collection.immutable.Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-15715.8701" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="318.8032" y="-15719.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[scala.collection.immutable.Vector[Int]]</text>
<text text-anchor="middle" x="497.8032" y="-15704.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[String :: Boolean :: shapeless.HNil] -->
<g id="node95" class="node">
<title>org.scalactic.Equality[String :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-9910.8701" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="339.3032" y="-9914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[String :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="497.8032" y="-9899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[String :: Boolean :: shapeless.HNil]&#45;&gt;scalaz.Equal[String :: Boolean :: shapeless.HNil] -->
<g id="edge310" class="edge">
<title>org.scalactic.Equality[String :: Boolean :: shapeless.HNil]&#45;&gt;scalaz.Equal[String :: Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M733.4585,-9910.8701C977.0289,-9910.8701 1353.7644,-9910.8701 1587.9195,-9910.8701"/>
<polygon fill="#000000" stroke="#000000" points="1588.267,-9914.3702 1598.267,-9910.8701 1588.267,-9907.3702 1588.267,-9914.3702"/>
</g>
<!-- String(&#39;hop&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node96" class="node">
<title>String(&#39;hop&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-15787.8701" rx="123.0732" ry="26.7407"/>
<text text-anchor="start" x="418.8032" y="-15791.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;hop&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-15776.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- monocle.function.At[Int,monocle.refined.IntBits,A] -->
<g id="node97" class="node">
<title>monocle.function.At[Int,monocle.refined.IntBits,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-15859.8701" rx="212.6784" ry="26.7407"/>
<text text-anchor="start" x="355.3032" y="-15863.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[Int,monocle.refined.IntBits,A]</text>
<text text-anchor="middle" x="497.8032" y="-15848.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(31)],R]&#45;&gt;Numeric[Int] -->
<g id="edge164" class="edge">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(31)],R]&#45;&gt;Numeric[Int]</title>
<path fill="none" stroke="#000000" d="M5057.733,-6545.5353C5345.0469,-6529.9882 5772.9183,-6506.8353 5958.3395,-6496.8018"/>
<polygon fill="#000000" stroke="#000000" points="5958.5292,-6500.2967 5968.3255,-6496.2614 5958.1509,-6493.3069 5958.5292,-6500.2967"/>
</g>
<!-- shapeless.Witness.Aux[Int(31)] -->
<g id="node554" class="node">
<title>shapeless.Witness.Aux[Int(31)]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-6563.8701" rx="133.7865" ry="26.7407"/>
<text text-anchor="start" x="5962.9787" y="-6567.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Witness.Aux[Int(31)]</text>
<text text-anchor="middle" x="6049.4787" y="-6552.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 110ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(31)],R]&#45;&gt;shapeless.Witness.Aux[Int(31)] -->
<g id="edge207" class="edge">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(31)],R]&#45;&gt;shapeless.Witness.Aux[Int(31)]</title>
<path fill="none" stroke="#000000" d="M5119.4133,-6561.6819C5377.1922,-6562.2884 5716.4165,-6563.0865 5905.7813,-6563.532"/>
<polygon fill="#000000" stroke="#000000" points="5905.7925,-6567.0319 5915.8008,-6563.5556 5905.8091,-6560.0319 5905.7925,-6567.0319"/>
</g>
<!-- shapeless.ops.nat.ToInt[Int(31)] -->
<g id="node613" class="node">
<title>shapeless.ops.nat.ToInt[Int(31)]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-6635.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="5961.9787" y="-6639.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.nat.ToInt[Int(31)]</text>
<text text-anchor="middle" x="6049.4787" y="-6624.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 9ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(31)],R]&#45;&gt;shapeless.ops.nat.ToInt[Int(31)] -->
<g id="edge399" class="edge">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(31)],R]&#45;&gt;shapeless.ops.nat.ToInt[Int(31)]</title>
<path fill="none" stroke="#000000" d="M5118.6944,-6558.9374C5225.8358,-6563.7385 5343.78,-6574.6047 5450.3374,-6596.8701 5454.0545,-6597.6467 5454.6234,-6599.0792 5458.3374,-6599.8701 5608.4827,-6631.8406 5784.5642,-6638.7648 5905.259,-6638.983"/>
<polygon fill="#000000" stroke="#000000" points="5905.304,-6642.4829 5915.305,-6638.9859 5905.306,-6635.4829 5905.304,-6642.4829"/>
</g>
<!-- Int :: String :: Boolean :: shapeless.HNil =&gt; ?{def shouldEqual: ?} -->
<g id="node99" class="node">
<title>Int :: String :: Boolean :: shapeless.HNil =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-2906.8701" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="314.8032" y="-2910.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int :: String :: Boolean :: shapeless.HNil =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-2895.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Int :: String :: Boolean :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge462" class="edge">
<title>Int :: String :: Boolean :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M758.403,-2899.6606C1033.3823,-2892.0534 1455.6845,-2880.3706 1667.8603,-2874.5008"/>
<polygon fill="#000000" stroke="#000000" points="1668.2148,-2877.9924 1678.1141,-2874.2171 1668.0211,-2870.9951 1668.2148,-2877.9924"/>
</g>
<!-- Int :: String :: Boolean :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge184" class="edge">
<title>Int :: String :: Boolean :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M752.8686,-2915.7198C855.4151,-2913.8142 958.2202,-2903.1452 995.6063,-2870.8701 1008.013,-2860.1595 991.0564,-2845.4124 1003.6063,-2834.8701 1212.1938,-2659.6509 1570.9803,-2732.8426 1725.1613,-2775.8431"/>
<polygon fill="#000000" stroke="#000000" points="1724.4422,-2779.277 1735.0172,-2778.6289 1726.3462,-2772.5409 1724.4422,-2779.277"/>
</g>
<!-- List[Int] =&gt; ?{def applyPrism: ?} -->
<g id="node100" class="node">
<title>List[Int] =&gt; ?{def applyPrism: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-15931.8701" rx="142.6713" ry="26.7407"/>
<text text-anchor="start" x="404.8032" y="-15935.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Int] =&gt; ?{def applyPrism: ?}</text>
<text text-anchor="middle" x="497.8032" y="-15920.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- monocle.function.Each[String ==&gt;&gt; Int,A] -->
<g id="node101" class="node">
<title>monocle.function.Each[String ==&gt;&gt; Int,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-16003.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="378.8032" y="-16007.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[String ==&gt;&gt; Int,A]</text>
<text text-anchor="middle" x="497.8032" y="-15992.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- shapeless.Generic.Aux[String ==&gt;&gt; Int,SGen] -->
<g id="node214" class="node">
<title>shapeless.Generic.Aux[String ==&gt;&gt; Int,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-16003.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="1671.1015" y="-16007.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[String ==&gt;&gt; Int,SGen]</text>
<text text-anchor="middle" x="1799.1015" y="-15992.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- monocle.function.Each[String ==&gt;&gt; Int,A]&#45;&gt;shapeless.Generic.Aux[String ==&gt;&gt; Int,SGen] -->
<g id="edge530" class="edge">
<title>monocle.function.Each[String ==&gt;&gt; Int,A]&#45;&gt;shapeless.Generic.Aux[String ==&gt;&gt; Int,SGen]</title>
<path fill="none" stroke="#000000" d="M677.7181,-16003.8701C918.6287,-16003.8701 1344.8086,-16003.8701 1596.6705,-16003.8701"/>
<polygon fill="#000000" stroke="#000000" points="1596.6707,-16007.3702 1606.6707,-16003.8701 1596.6707,-16000.3702 1596.6707,-16007.3702"/>
</g>
<!-- scalaz.Validation[String,Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node102" class="node">
<title>scalaz.Validation[String,Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-2834.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="347.3032" y="-2838.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Validation[String,Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-2823.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Validation[String,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge23" class="edge">
<title>scalaz.Validation[String,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M716.3448,-2840.9159C988.5237,-2848.4457 1444.8196,-2861.069 1668.0654,-2867.245"/>
<polygon fill="#000000" stroke="#000000" points="1668.0992,-2870.7472 1678.1922,-2867.5251 1668.2929,-2863.7498 1668.0992,-2870.7472"/>
</g>
<!-- scalaz.Validation[String,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge107" class="edge">
<title>scalaz.Validation[String,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M716.3448,-2828.8242C998.7598,-2821.0113 1479.4007,-2807.7145 1692.2419,-2801.8263"/>
<polygon fill="#000000" stroke="#000000" points="1692.5822,-2805.3183 1702.4815,-2801.543 1692.3886,-2798.321 1692.5822,-2805.3183"/>
</g>
<!-- scalaz.Equal[Option[(scala.collection.immutable.Vector[Int], Int)]] -->
<g id="node103" class="node">
<title>scalaz.Equal[Option[(scala.collection.immutable.Vector[Int], Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-9262.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="1615.6015" y="-9266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[(scala.collection.immutable.Vector[Int], Int)]]</text>
<text text-anchor="middle" x="1799.1015" y="-9251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- scalaz.Equal[Option[(scala.collection.immutable.Vector[Int], Int)]]&#45;&gt;scalaz.Equal[(scala.collection.immutable.Vector[Int], Int)] -->
<g id="edge244" class="edge">
<title>scalaz.Equal[Option[(scala.collection.immutable.Vector[Int], Int)]]&#45;&gt;scalaz.Equal[(scala.collection.immutable.Vector[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M2069.9606,-9262.8701C2360.0247,-9262.8701 2816.4364,-9262.8701 3097.7005,-9262.8701"/>
<polygon fill="#000000" stroke="#000000" points="3098.0471,-9266.3702 3108.0471,-9262.8701 3098.0471,-9259.3702 3098.0471,-9266.3702"/>
</g>
<!-- org.scalactic.Equality[this.Out] -->
<g id="node104" class="node">
<title>org.scalactic.Equality[this.Out]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-6920.8701" rx="132.4583" ry="26.7407"/>
<text text-anchor="start" x="3260.9729" y="-6924.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[this.Out]</text>
<text text-anchor="middle" x="3346.4729" y="-6909.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[this.Out]&#45;&gt;scalaz.Equal[this.Out] -->
<g id="edge495" class="edge">
<title>org.scalactic.Equality[this.Out]&#45;&gt;scalaz.Equal[this.Out]</title>
<path fill="none" stroke="#000000" d="M3478.8821,-6920.8701C3759.6261,-6920.8701 4409.9315,-6920.8701 4666.992,-6920.8701"/>
<polygon fill="#000000" stroke="#000000" points="4667.0825,-6924.3702 4677.0824,-6920.8701 4667.0824,-6917.3702 4667.0825,-6924.3702"/>
</g>
<!-- monocle.function.Snoc[scala.collection.immutable.Stream[Int],A] -->
<g id="node105" class="node">
<title>monocle.function.Snoc[scala.collection.immutable.Stream[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-16075.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="315.8032" y="-16079.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc[scala.collection.immutable.Stream[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-16064.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A] -->
<g id="node106" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-10198.8701" rx="316.5678" ry="26.7407"/>
<text text-anchor="start" x="1583.1015" y="-10202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A]</text>
<text text-anchor="middle" x="1799.1015" y="-10187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char, Boolean, Double, String, Long),Out0] -->
<g id="node391" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char, Boolean, Double, String, Long),Out0]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-10198.8701" rx="408.9155" ry="26.7407"/>
<text text-anchor="start" x="3065.4729" y="-10202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char, Boolean, Double, String, Long),Out0]</text>
<text text-anchor="middle" x="3346.4729" y="-10187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char, Boolean, Double, String, Long),Out0] -->
<g id="edge58" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char, Boolean, Double, String, Long),Out0]</title>
<path fill="none" stroke="#000000" d="M2115.9691,-10198.8701C2350.3526,-10198.8701 2671.8801,-10198.8701 2927.4876,-10198.8701"/>
<polygon fill="#000000" stroke="#000000" points="2927.6965,-10202.3702 2937.6964,-10198.8701 2927.6964,-10195.3702 2927.6965,-10202.3702"/>
</g>
<!-- ReaderExample.this._age.type =&gt; ?{def ask: ?} -->
<g id="node107" class="node">
<title>ReaderExample.this._age.type =&gt; ?{def ask: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-16147.8701" rx="197.0658" ry="26.7407"/>
<text text-anchor="start" x="366.3032" y="-16151.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ReaderExample.this._age.type =&gt; ?{def ask: ?}</text>
<text text-anchor="middle" x="497.8032" y="-16136.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._1.N,A] -->
<g id="node108" class="node">
<title>shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._1.N,A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-16255.8701" rx="359.8347" ry="26.7407"/>
<text text-anchor="start" x="1552.6015" y="-16259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._1.N,A]</text>
<text text-anchor="middle" x="1799.1015" y="-16244.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- shapeless.ops.hlist.At[String :: Boolean :: shapeless.HNil,shapeless._0] -->
<g id="node273" class="node">
<title>shapeless.ops.hlist.At[String :: Boolean :: shapeless.HNil,shapeless._0]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-16255.8701" rx="286.2565" ry="26.7407"/>
<text text-anchor="start" x="3151.9729" y="-16259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[String :: Boolean :: shapeless.HNil,shapeless._0]</text>
<text text-anchor="middle" x="3346.4729" y="-16244.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._1.N,A]&#45;&gt;shapeless.ops.hlist.At[String :: Boolean :: shapeless.HNil,shapeless._0] -->
<g id="edge532" class="edge">
<title>shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._1.N,A]&#45;&gt;shapeless.ops.hlist.At[String :: Boolean :: shapeless.HNil,shapeless._0]</title>
<path fill="none" stroke="#000000" d="M2159.4508,-16255.8701C2429.9809,-16255.8701 2795.9565,-16255.8701 3049.7101,-16255.8701"/>
<polygon fill="#000000" stroke="#000000" points="3049.8198,-16259.3702 3059.8197,-16255.8701 3049.8197,-16252.3702 3049.8198,-16259.3702"/>
</g>
<!-- Int :: String :: Boolean :: shapeless.HNil =&gt; ?{def applyLens: ?} -->
<g id="node109" class="node">
<title>Int :: String :: Boolean :: shapeless.HNil =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-16291.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="320.3032" y="-16295.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int :: String :: Boolean :: shapeless.HNil =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-16280.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 5ms</text>
</g>
<!-- monocle.function.Curry[F,Double =&gt; (Int =&gt; Double)] -->
<g id="node110" class="node">
<title>monocle.function.Curry[F,Double =&gt; (Int =&gt; Double)]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-16363.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="345.8032" y="-16367.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Curry[F,Double =&gt; (Int =&gt; Double)]</text>
<text text-anchor="middle" x="497.8032" y="-16352.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,L2] -->
<g id="node111" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,L2]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-10846.8701" rx="451.2683" ry="26.7407"/>
<text text-anchor="start" x="3035.4729" y="-10850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,L2]</text>
<text text-anchor="middle" x="3346.4729" y="-10835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 17ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out0] -->
<g id="node641" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out0]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-10846.8701" rx="539.5449" ry="26.7407"/>
<text text-anchor="start" x="4400.8434" y="-10850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out0]</text>
<text text-anchor="middle" x="4774.3434" y="-10835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out0] -->
<g id="edge541" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out0]</title>
<path fill="none" stroke="#000000" d="M3797.7699,-10846.8701C3933.2284,-10846.8701 4083.3443,-10846.8701 4224.4263,-10846.8701"/>
<polygon fill="#000000" stroke="#000000" points="4224.5683,-10850.3702 4234.5683,-10846.8701 4224.5682,-10843.3702 4224.5683,-10850.3702"/>
</g>
<!-- (=&gt; monocle.LensPolyExample.Manual.type) =&gt; ?{def q_=: ?} -->
<g id="node113" class="node">
<title>(=&gt; monocle.LensPolyExample.Manual.type) =&gt; ?{def q_=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-16435.8701" rx="260.8448" ry="26.7407"/>
<text text-anchor="start" x="321.3032" y="-16439.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; monocle.LensPolyExample.Manual.type) =&gt; ?{def q_=: ?}</text>
<text text-anchor="middle" x="497.8032" y="-16424.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[(Int, Symbol),Double],((Symbol, Int), Double),That] -->
<g id="node114" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[(Int, Symbol),Double],((Symbol, Int), Double),That]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-16507.8701" rx="497.6064" ry="26.7407"/>
<text text-anchor="start" x="153.8032" y="-16511.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[(Int, Symbol),Double],((Symbol, Int), Double),That]</text>
<text text-anchor="middle" x="497.8032" y="-16496.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalactic.Equality[(Boolean, String, Double, Int, Int)] -->
<g id="node115" class="node">
<title>org.scalactic.Equality[(Boolean, String, Double, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-7280.8701" rx="233.1906" ry="26.7407"/>
<text text-anchor="start" x="3189.4729" y="-7284.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(Boolean, String, Double, Int, Int)]</text>
<text text-anchor="middle" x="3346.4729" y="-7269.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- scalaz.Equal[(Boolean, String, Double, Int, Int)] -->
<g id="node631" class="node">
<title>scalaz.Equal[(Boolean, String, Double, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-7280.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="4641.8434" y="-7284.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Boolean, String, Double, Int, Int)]</text>
<text text-anchor="middle" x="4774.3434" y="-7269.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalactic.Equality[(Boolean, String, Double, Int, Int)]&#45;&gt;scalaz.Equal[(Boolean, String, Double, Int, Int)] -->
<g id="edge251" class="edge">
<title>org.scalactic.Equality[(Boolean, String, Double, Int, Int)]&#45;&gt;scalaz.Equal[(Boolean, String, Double, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M3579.8598,-7280.8701C3853.4858,-7280.8701 4302.8911,-7280.8701 4565.4685,-7280.8701"/>
<polygon fill="#000000" stroke="#000000" points="4565.5042,-7284.3702 4575.5042,-7280.8701 4565.5042,-7277.3702 4565.5042,-7284.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[scalaz.Tree[Int],A] -->
<g id="node116" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[scalaz.Tree[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-16615.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="1657.6015" y="-16619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[scalaz.Tree[Int],A]</text>
<text text-anchor="middle" x="1799.1015" y="-16604.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.Tree[Int],Out0] -->
<g id="node143" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.Tree[Int],Out0]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-16615.8701" rx="303.1977" ry="26.7407"/>
<text text-anchor="start" x="3139.9729" y="-16619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.Tree[Int],Out0]</text>
<text text-anchor="middle" x="3346.4729" y="-16604.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[scalaz.Tree[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.Tree[Int],Out0] -->
<g id="edge125" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[scalaz.Tree[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scalaz.Tree[Int],Out0]</title>
<path fill="none" stroke="#000000" d="M2010.6082,-16615.8701C2274.5387,-16615.8701 2728.1569,-16615.8701 3032.6371,-16615.8701"/>
<polygon fill="#000000" stroke="#000000" points="3032.9538,-16619.3702 3042.9538,-16615.8701 3032.9538,-16612.3702 3032.9538,-16619.3702"/>
</g>
<!-- scala.collection.immutable.Vector[Int] =&gt; ?{def applyTraversal: ?} -->
<g id="node117" class="node">
<title>scala.collection.immutable.Vector[Int] =&gt; ?{def applyTraversal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-16651.8701" rx="273.8007" ry="26.7407"/>
<text text-anchor="start" x="312.3032" y="-16655.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Vector[Int] =&gt; ?{def applyTraversal: ?}</text>
<text text-anchor="middle" x="497.8032" y="-16640.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- monocle.HttpRequestExample.HttpRequest =&gt; ?{def shouldBe: ?} -->
<g id="node118" class="node">
<title>monocle.HttpRequestExample.HttpRequest =&gt; ?{def shouldBe: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-2762.8701" rx="271.558" ry="26.7407"/>
<text text-anchor="start" x="313.8032" y="-2766.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.HttpRequestExample.HttpRequest =&gt; ?{def shouldBe: ?}</text>
<text text-anchor="middle" x="497.8032" y="-2751.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.HttpRequestExample.HttpRequest =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge111" class="edge">
<title>monocle.HttpRequestExample.HttpRequest =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M754.5552,-2754.0524C856.5403,-2756.0435 958.4251,-2766.7718 995.6063,-2798.8701 1008.013,-2809.5806 991.0564,-2824.3277 1003.6063,-2834.8701 1209.3453,-3007.6964 1561.2091,-2938.8503 1718.7311,-2895.6748"/>
<polygon fill="#000000" stroke="#000000" points="1720.1243,-2898.9204 1728.8222,-2892.8709 1718.2502,-2892.1759 1720.1243,-2898.9204"/>
</g>
<!-- monocle.HttpRequestExample.HttpRequest =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge583" class="edge">
<title>monocle.HttpRequestExample.HttpRequest =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M759.5749,-2770.1119C1045.6827,-2778.027 1490.2481,-2790.3257 1692.4722,-2795.9202"/>
<polygon fill="#000000" stroke="#000000" points="1692.4118,-2799.4198 1702.5048,-2796.1977 1692.6055,-2792.4224 1692.4118,-2799.4198"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: Double :: String :: Long :: shapeless.HNil,Out] -->
<g id="node119" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: Double :: String :: Long :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-9982.8701" rx="492.2927" ry="26.7407"/>
<text text-anchor="start" x="6843.1927" y="-9986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: Double :: String :: Long :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="7183.1927" y="-9971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,Double :: String :: Long :: shapeless.HNil,Out] -->
<g id="node283" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,Double :: String :: Long :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="8260.3382" cy="-9982.8701" rx="492.2927" ry="26.7407"/>
<text text-anchor="start" x="7920.3382" y="-9986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,Double :: String :: Long :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="8260.3382" y="-9971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: Double :: String :: Long :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,Double :: String :: Long :: shapeless.HNil,Out] -->
<g id="edge470" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: Double :: String :: Long :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,Double :: String :: Long :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M7675.6635,-9982.8701C7703.0566,-9982.8701 7730.6099,-9982.8701 7758.0372,-9982.8701"/>
<polygon fill="#000000" stroke="#000000" points="7758.1357,-9986.3702 7768.1357,-9982.8701 7758.1357,-9979.3702 7758.1357,-9986.3702"/>
</g>
<!-- monocle.function.Each[Int :: shapeless.HNil,Int] -->
<g id="node419" class="node">
<title>monocle.function.Each[Int :: shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="8260.3382" cy="-11638.8701" rx="200.2225" ry="26.7407"/>
<text text-anchor="start" x="8126.8382" y="-11642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: shapeless.HNil,Int]</text>
<text text-anchor="middle" x="8260.3382" y="-11627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 14ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: shapeless.HNil,Int] -->
<g id="edge135" class="edge">
<title>monocle.function.Each[Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M7396.6456,-11610.004C7588.1032,-11616.4028 7867.1589,-11625.7294 8055.8258,-11632.0349"/>
<polygon fill="#000000" stroke="#000000" points="8055.7539,-11635.5344 8065.8652,-11632.3704 8055.9878,-11628.5383 8055.7539,-11635.5344"/>
</g>
<!-- scalaz.Order[List[Int]] -->
<g id="node121" class="node">
<title>scalaz.Order[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-9486.8701" rx="98.0761" ry="26.7407"/>
<text text-anchor="start" x="4712.8434" y="-9490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[List[Int]]</text>
<text text-anchor="middle" x="4774.3434" y="-9475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Option[Int])]] -->
<g id="node122" class="node">
<title>org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Option[Int])]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-15355.8701" rx="306.3546" ry="26.7407"/>
<text text-anchor="start" x="289.3032" y="-15359.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Option[Int])]]</text>
<text text-anchor="middle" x="497.8032" y="-15344.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 52ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Option[Int])]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Option[Int])]] -->
<g id="edge592" class="edge">
<title>org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Option[Int])]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Option[Int])]]</title>
<path fill="none" stroke="#000000" d="M804.1334,-15355.8701C1020.273,-15355.8701 1307.619,-15355.8701 1517.9294,-15355.8701"/>
<polygon fill="#000000" stroke="#000000" points="1518.1997,-15359.3702 1528.1996,-15355.8701 1518.1996,-15352.3702 1518.1997,-15359.3702"/>
</g>
<!-- StateExample.this._age.type =&gt; ?{def mod: ?} -->
<g id="node123" class="node">
<title>StateExample.this._age.type =&gt; ?{def mod: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-16723.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="368.3032" y="-16727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._age.type =&gt; ?{def mod: ?}</text>
<text text-anchor="middle" x="497.8032" y="-16712.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String :: Boolean :: Float :: Char :: Long :: shapeless.HNil =&gt; ?{def ::: ?} -->
<g id="node124" class="node">
<title>String :: Boolean :: Float :: Char :: Long :: shapeless.HNil =&gt; ?{def ::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-16795.8701" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="296.3032" y="-16799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String :: Boolean :: Float :: Char :: Long :: shapeless.HNil =&gt; ?{def ::: ?}</text>
<text text-anchor="middle" x="497.8032" y="-16784.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[(Int, String, Boolean)] -->
<g id="node125" class="node">
<title>org.scalactic.Equality[(Int, String, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-7568.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="3224.4729" y="-7572.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(Int, String, Boolean)]</text>
<text text-anchor="middle" x="3346.4729" y="-7557.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scalaz.Equal[(Int, String, Boolean)] -->
<g id="node205" class="node">
<title>scalaz.Equal[(Int, String, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-7568.8701" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="4676.8434" y="-7572.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, String, Boolean)]</text>
<text text-anchor="middle" x="4774.3434" y="-7557.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalactic.Equality[(Int, String, Boolean)]&#45;&gt;scalaz.Equal[(Int, String, Boolean)] -->
<g id="edge324" class="edge">
<title>org.scalactic.Equality[(Int, String, Boolean)]&#45;&gt;scalaz.Equal[(Int, String, Boolean)]</title>
<path fill="none" stroke="#000000" d="M3530.5833,-7568.8701C3812.9276,-7568.8701 4348.1065,-7568.8701 4614.8661,-7568.8701"/>
<polygon fill="#000000" stroke="#000000" points="4615.0223,-7572.3702 4625.0222,-7568.8701 4615.0222,-7565.3702 4615.0223,-7572.3702"/>
</g>
<!-- monocle.function.Each[shapeless.HNil,Int] -->
<g id="node126" class="node">
<title>monocle.function.Each[shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="9337.4836" cy="-11674.8701" rx="178.7961" ry="26.7407"/>
<text text-anchor="start" x="9218.9836" y="-11678.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[shapeless.HNil,Int]</text>
<text text-anchor="middle" x="9337.4836" y="-11663.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Prepend.Aux[this.Out,this.Out :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil] -->
<g id="node127" class="node">
<title>shapeless.ops.hlist.Prepend.Aux[this.Out,this.Out :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-12232.8701" rx="432.9988" ry="26.7407"/>
<text text-anchor="start" x="1501.1015" y="-12236.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Prepend.Aux[this.Out,this.Out :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="1799.1015" y="-12221.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- shapeless.ops.hlist.Prepend[String :: shapeless.HNil,this.Out :: shapeless.HNil] -->
<g id="node487" class="node">
<title>shapeless.ops.hlist.Prepend[String :: shapeless.HNil,this.Out :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-12232.8701" rx="316.5678" ry="26.7407"/>
<text text-anchor="start" x="3130.4729" y="-12236.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Prepend[String :: shapeless.HNil,this.Out :: shapeless.HNil]</text>
<text text-anchor="middle" x="3346.4729" y="-12221.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.Prepend.Aux[this.Out,this.Out :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Prepend[String :: shapeless.HNil,this.Out :: shapeless.HNil] -->
<g id="edge215" class="edge">
<title>shapeless.ops.hlist.Prepend.Aux[this.Out,this.Out :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Prepend[String :: shapeless.HNil,this.Out :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2231.9309,-12232.8701C2481.4745,-12232.8701 2790.1475,-12232.8701 3019.3318,-12232.8701"/>
<polygon fill="#000000" stroke="#000000" points="3019.4999,-12236.3702 3029.4999,-12232.8701 3019.4999,-12229.3702 3019.4999,-12236.3702"/>
</g>
<!-- shapeless.ops.hlist.At[String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._4] -->
<g id="node129" class="node">
<title>shapeless.ops.hlist.At[String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._4]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-12448.8701" rx="391.0601" ry="26.7407"/>
<text text-anchor="start" x="3077.9729" y="-12452.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._4]</text>
<text text-anchor="middle" x="3346.4729" y="-12437.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- shapeless.ops.hlist.At[Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._3] -->
<g id="node700" class="node">
<title>shapeless.ops.hlist.At[Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._3]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-12448.8701" rx="357.1779" ry="26.7407"/>
<text text-anchor="start" x="4529.8434" y="-12452.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At[Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._3]</text>
<text text-anchor="middle" x="4774.3434" y="-12437.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.hlist.At[String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._4]&#45;&gt;shapeless.ops.hlist.At[Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._3] -->
<g id="edge162" class="edge">
<title>shapeless.ops.hlist.At[String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._4]&#45;&gt;shapeless.ops.hlist.At[Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._3]</title>
<path fill="none" stroke="#000000" d="M3737.5888,-12448.8701C3946.4653,-12448.8701 4202.0411,-12448.8701 4407.1723,-12448.8701"/>
<polygon fill="#000000" stroke="#000000" points="4407.2097,-12452.3702 4417.2097,-12448.8701 4407.2097,-12445.3702 4407.2097,-12452.3702"/>
</g>
<!-- scalaz.Equal[scala.collection.immutable.Set[Int]] -->
<g id="node130" class="node">
<title>scalaz.Equal[scala.collection.immutable.Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-8504.8701" rx="202.4653" ry="26.7407"/>
<text text-anchor="start" x="4639.3434" y="-8508.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scala.collection.immutable.Set[Int]]</text>
<text text-anchor="middle" x="4774.3434" y="-8493.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- scalaz.Equal[scala.collection.immutable.Set[Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge372" class="edge">
<title>scalaz.Equal[scala.collection.immutable.Set[Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M4974.5557,-8500.7743C5109.3808,-8496.4058 5290.9878,-8487.4014 5450.3374,-8468.8701 5640.1461,-8446.7965 5860.6832,-8402.0354 5973.8788,-8377.641"/>
<polygon fill="#000000" stroke="#000000" points="5974.7964,-8381.0236 5983.8307,-8375.4891 5973.3169,-8374.1817 5974.7964,-8381.0236"/>
</g>
<!-- org.scalactic.Equality[Char] -->
<g id="node131" class="node">
<title>org.scalactic.Equality[Char]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-6632.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="4697.3434" y="-6636.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Char]</text>
<text text-anchor="middle" x="4774.3434" y="-6621.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 6ms</text>
</g>
<!-- org.scalactic.Equality[Char]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge50" class="edge">
<title>org.scalactic.Equality[Char]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M4892.9838,-6628.3422C5029.0832,-6625.6378 5258.2176,-6628.7264 5450.3374,-6668.8701 5454.0545,-6669.6467 5454.7387,-6670.6581 5458.3374,-6671.8701 5642.6315,-6733.9364 5862.7842,-6796.9758 5975.284,-6828.4028"/>
<polygon fill="#000000" stroke="#000000" points="5974.5993,-6831.8454 5985.172,-6831.1611 5976.4802,-6825.1028 5974.5993,-6831.8454"/>
</g>
<!-- monocle.function.Reverse[scalaz.Tree[Int],A] -->
<g id="node132" class="node">
<title>monocle.function.Reverse[scalaz.Tree[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-16579.8701" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="371.8032" y="-16583.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[scalaz.Tree[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-16568.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- monocle.function.Reverse[scalaz.Tree[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[scalaz.Tree[Int],A] -->
<g id="edge156" class="edge">
<title>monocle.function.Reverse[scalaz.Tree[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[scalaz.Tree[Int],A]</title>
<path fill="none" stroke="#000000" d="M683.9016,-16585.0184C921.2199,-16591.5837 1330.8593,-16602.9163 1582.1119,-16609.8671"/>
<polygon fill="#000000" stroke="#000000" points="1582.3748,-16613.3756 1592.4678,-16610.1536 1582.5685,-16606.3783 1582.3748,-16613.3756"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[scalaz.Tree[Int],A] -->
<g id="node302" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[scalaz.Tree[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-16543.8701" rx="214.007" ry="26.7407"/>
<text text-anchor="start" x="1655.6015" y="-16547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[scalaz.Tree[Int],A]</text>
<text text-anchor="middle" x="1799.1015" y="-16532.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- monocle.function.Reverse[scalaz.Tree[Int],A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[scalaz.Tree[Int],A] -->
<g id="edge60" class="edge">
<title>monocle.function.Reverse[scalaz.Tree[Int],A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[scalaz.Tree[Int],A]</title>
<path fill="none" stroke="#000000" d="M683.9016,-16574.7217C920.3538,-16568.1803 1327.8715,-16556.9065 1579.3546,-16549.9493"/>
<polygon fill="#000000" stroke="#000000" points="1579.8222,-16553.4378 1589.7215,-16549.6625 1579.6285,-16546.4405 1579.8222,-16553.4378"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean),A] -->
<g id="node133" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean),A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-11494.8701" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="1645.1015" y="-11498.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean),A]</text>
<text text-anchor="middle" x="1799.1015" y="-11483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char, Boolean),Out0] -->
<g id="node194" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char, Boolean),Out0]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-11566.8701" rx="321.053" ry="26.7407"/>
<text text-anchor="start" x="3127.4729" y="-11570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char, Boolean),Out0]</text>
<text text-anchor="middle" x="3346.4729" y="-11555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean),A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char, Boolean),Out0] -->
<g id="edge31" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean),A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char, Boolean),Out0]</title>
<path fill="none" stroke="#000000" d="M2013.5044,-11504.4205C2173.6157,-11511.5896 2397.8063,-11521.706 2594.5966,-11530.8701 2747.7351,-11538.0013 2918.4073,-11546.1564 3058.3873,-11552.8994"/>
<polygon fill="#000000" stroke="#000000" points="3058.2552,-11556.397 3068.4121,-11553.3825 3058.5922,-11549.4052 3058.2552,-11556.397"/>
</g>
<!-- monocle.function.Each[List[Int],A] -->
<g id="node134" class="node">
<title>monocle.function.Each[List[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-14851.8701" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="1701.6015" y="-14855.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[List[Int],A]</text>
<text text-anchor="middle" x="1799.1015" y="-14840.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 120ms</text>
</g>
<!-- shapeless.Generic.Aux[List[Int],SGen] -->
<g id="node201" class="node">
<title>shapeless.Generic.Aux[List[Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-14905.8701" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="3239.9729" y="-14909.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[List[Int],SGen]</text>
<text text-anchor="middle" x="3346.4729" y="-14894.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 118ms</text>
</g>
<!-- monocle.function.Each[List[Int],A]&#45;&gt;shapeless.Generic.Aux[List[Int],SGen] -->
<g id="edge35" class="edge">
<title>monocle.function.Each[List[Int],A]&#45;&gt;shapeless.Generic.Aux[List[Int],SGen]</title>
<path fill="none" stroke="#000000" d="M1945.7202,-14856.9867C2233.8232,-14867.0409 2872.2313,-14889.32 3177.4973,-14899.9732"/>
<polygon fill="#000000" stroke="#000000" points="3177.6531,-14903.4806 3187.7691,-14900.3316 3177.8973,-14896.4849 3177.6531,-14903.4806"/>
</g>
<!-- String(&#39;Bar&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node135" class="node">
<title>String(&#39;Bar&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-5930.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-5934.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Bar&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-5919.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 13ms</text>
</g>
<!-- String(&#39;Bar&#39;) =&gt; ?{def &#45;&gt;: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge235" class="edge">
<title>String(&#39;Bar&#39;) =&gt; ?{def &#45;&gt;: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M616.4453,-5924.3057C854.8042,-5911.1174 1391.2334,-5881.4371 1651.6693,-5867.0274"/>
<polygon fill="#000000" stroke="#000000" points="1652.1669,-5870.5053 1661.9582,-5866.4581 1651.7801,-5863.516 1652.1669,-5870.5053"/>
</g>
<!-- shapeless.ops.hlist.Last[Boolean :: shapeless.HNil] -->
<g id="node136" class="node">
<title>shapeless.ops.hlist.Last[Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-12160.8701" rx="208.693" ry="26.7407"/>
<text text-anchor="start" x="4634.8434" y="-12164.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Last[Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="4774.3434" y="-12149.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 10ms</text>
</g>
<!-- shapeless.ops.hlist.Last[shapeless.HNil] -->
<g id="node458" class="node">
<title>shapeless.ops.hlist.Last[shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-12160.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="5939.9787" y="-12164.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Last[shapeless.HNil]</text>
<text text-anchor="middle" x="6049.4787" y="-12149.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Last[Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Last[shapeless.HNil] -->
<g id="edge512" class="edge">
<title>shapeless.ops.hlist.Last[Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Last[shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M4983.1217,-12160.8701C5230.8953,-12160.8701 5639.7033,-12160.8701 5872.5828,-12160.8701"/>
<polygon fill="#000000" stroke="#000000" points="5872.8512,-12164.3702 5882.8512,-12160.8701 5872.8511,-12157.3702 5872.8512,-12164.3702"/>
</g>
<!-- monocle.function.Snoc[List[Int],Int] -->
<g id="node137" class="node">
<title>monocle.function.Snoc[List[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-16867.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="397.8032" y="-16871.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc[List[Int],Int]</text>
<text text-anchor="middle" x="497.8032" y="-16856.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Stream[scalaz.Tree[Int]] =&gt; ?{def shouldEqual: ?} -->
<g id="node138" class="node">
<title>Stream[scalaz.Tree[Int]] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-2690.8701" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="357.8032" y="-2694.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Stream[scalaz.Tree[Int]] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-2679.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 9ms</text>
</g>
<!-- Stream[scalaz.Tree[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge578" class="edge">
<title>Stream[scalaz.Tree[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M688.9785,-2679.8745C810.6602,-2677.4049 953.101,-2684.4389 995.6063,-2726.8701 1012.6383,-2743.8722 986.3467,-2818.0991 1003.6063,-2834.8701 1198.8101,-3024.5474 1564.2606,-2943.7724 1722.6476,-2896.3465"/>
<polygon fill="#000000" stroke="#000000" points="1723.7658,-2899.6649 1732.3204,-2893.4142 1721.735,-2892.9659 1723.7658,-2899.6649"/>
</g>
<!-- Stream[scalaz.Tree[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge351" class="edge">
<title>Stream[scalaz.Tree[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M682.8452,-2703.4926C776.5902,-2710.0802 892.1815,-2718.4971 995.6063,-2726.8701 1247.8912,-2747.2943 1544.4076,-2774.7637 1696.9761,-2789.1526"/>
<polygon fill="#000000" stroke="#000000" points="1696.9779,-2792.6682 1707.2626,-2790.1235 1697.6357,-2785.6992 1696.9779,-2792.6682"/>
</g>
<!-- org.scalactic.Equality[Stream[scalaz.Tree[Int]]] -->
<g id="node139" class="node">
<title>org.scalactic.Equality[Stream[scalaz.Tree[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-8470.8701" rx="195.7372" ry="26.7407"/>
<text text-anchor="start" x="1668.6015" y="-8474.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Stream[scalaz.Tree[Int]]]</text>
<text text-anchor="middle" x="1799.1015" y="-8459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 12ms</text>
</g>
<!-- scalaz.Equal[Stream[scalaz.Tree[Int]]] -->
<g id="node726" class="node">
<title>scalaz.Equal[Stream[scalaz.Tree[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-8470.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="3240.9729" y="-8474.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Stream[scalaz.Tree[Int]]]</text>
<text text-anchor="middle" x="3346.4729" y="-8459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 10ms</text>
</g>
<!-- org.scalactic.Equality[Stream[scalaz.Tree[Int]]]&#45;&gt;scalaz.Equal[Stream[scalaz.Tree[Int]]] -->
<g id="edge571" class="edge">
<title>org.scalactic.Equality[Stream[scalaz.Tree[Int]]]&#45;&gt;scalaz.Equal[Stream[scalaz.Tree[Int]]]</title>
<path fill="none" stroke="#000000" d="M1995.0771,-8470.8701C2300.7862,-8470.8701 2886.0805,-8470.8701 3175.6107,-8470.8701"/>
<polygon fill="#000000" stroke="#000000" points="3175.7846,-8474.3702 3185.7845,-8470.8701 3175.7845,-8467.3702 3175.7846,-8474.3702"/>
</g>
<!-- shapeless.ops.hlist.Prepend.Aux[Int :: shapeless.HNil,String :: Boolean :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil] -->
<g id="node140" class="node">
<title>shapeless.ops.hlist.Prepend.Aux[Int :: shapeless.HNil,String :: Boolean :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-13492.8701" rx="516.376" ry="26.7407"/>
<text text-anchor="start" x="1442.1015" y="-13496.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Prepend.Aux[Int :: shapeless.HNil,String :: Boolean :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="1799.1015" y="-13481.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 46ms</text>
</g>
<!-- shapeless.ops.hlist.Prepend.Aux[Int :: shapeless.HNil,String :: Boolean :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Prepend[shapeless.HNil,String :: Boolean :: shapeless.HNil] -->
<g id="edge449" class="edge">
<title>shapeless.ops.hlist.Prepend.Aux[Int :: shapeless.HNil,String :: Boolean :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Prepend[shapeless.HNil,String :: Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2315.4292,-13492.8701C2547.4886,-13492.8701 2814.4092,-13492.8701 3018.5173,-13492.8701"/>
<polygon fill="#000000" stroke="#000000" points="3018.8003,-13496.3702 3028.8002,-13492.8701 3018.8002,-13489.3702 3018.8003,-13496.3702"/>
</g>
<!-- shapeless.ops.hlist.At.Aux[(String, Int, Boolean, Double, Long, Char),shapeless.nat._1.N,A] -->
<g id="node141" class="node">
<title>shapeless.ops.hlist.At.Aux[(String, Int, Boolean, Double, Long, Char),shapeless.nat._1.N,A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-16939.8701" rx="370.5479" ry="26.7407"/>
<text text-anchor="start" x="1545.1015" y="-16943.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(String, Int, Boolean, Double, Long, Char),shapeless.nat._1.N,A]</text>
<text text-anchor="middle" x="1799.1015" y="-16928.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- (=&gt; ComposeIssueExample.this.aI2S.type) =&gt; ?{def compose(x$1: ? &gt;: ComposeIssueExample.this.B[Nothing,String]): ?} -->
<g id="node142" class="node">
<title>(=&gt; ComposeIssueExample.this.aI2S.type) =&gt; ?{def compose(x$1: ? &gt;: ComposeIssueExample.this.B[Nothing,String]): ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-17011.8701" rx="492.2927" ry="26.7407"/>
<text text-anchor="start" x="157.8032" y="-17015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; ComposeIssueExample.this.aI2S.type) =&gt; ?{def compose(x$1: ? &gt;: ComposeIssueExample.this.B[Nothing,String]): ?}</text>
<text text-anchor="middle" x="497.8032" y="-17000.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[SymbolicSyntaxExample.this.Store] -->
<g id="node145" class="node">
<title>scalaz.Equal[SymbolicSyntaxExample.this.Store]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-17083.8701" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="1663.1015" y="-17087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[SymbolicSyntaxExample.this.Store]</text>
<text text-anchor="middle" x="1799.1015" y="-17072.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Map[String,Int] =&gt; ?{def applyLens: ?} -->
<g id="node146" class="node">
<title>scala.collection.immutable.Map[String,Int] =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-242.8701" rx="274.2149" ry="26.7407"/>
<text text-anchor="start" x="311.8032" y="-246.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[String,Int] =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 15ms</text>
</g>
<!-- scala.collection.immutable.Map[String,Int] =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[scala.collection.immutable.Map] -->
<g id="edge544" class="edge">
<title>scala.collection.immutable.Map[String,Int] =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[scala.collection.immutable.Map]</title>
<path fill="none" stroke="#000000" d="M761.9242,-250.1769C987.364,-256.4136 1309.9187,-265.337 1535.2741,-271.5714"/>
<polygon fill="#000000" stroke="#000000" points="1535.5023,-275.0789 1545.5953,-271.8569 1535.6959,-268.0816 1535.5023,-275.0789"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,L2] -->
<g id="node147" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,L2]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-11134.8701" rx="451.2683" ry="26.7407"/>
<text text-anchor="start" x="3035.4729" y="-11138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,L2]</text>
<text text-anchor="middle" x="3346.4729" y="-11123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out0] -->
<g id="edge79" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out0]</title>
<path fill="none" stroke="#000000" d="M3797.7699,-11134.8701C3933.2284,-11134.8701 4083.3443,-11134.8701 4224.4263,-11134.8701"/>
<polygon fill="#000000" stroke="#000000" points="4224.5683,-11138.3702 4234.5683,-11134.8701 4224.5682,-11131.3702 4224.5683,-11138.3702"/>
</g>
<!-- monocle.LensPolyExample.Manual.type =&gt; ?{def q_=: ?} -->
<g id="node148" class="node">
<title>monocle.LensPolyExample.Manual.type =&gt; ?{def q_=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-17155.8701" rx="240.3326" ry="26.7407"/>
<text text-anchor="start" x="335.8032" y="-17159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.LensPolyExample.Manual.type =&gt; ?{def q_=: ?}</text>
<text text-anchor="middle" x="497.8032" y="-17144.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Tupler[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil] -->
<g id="node150" class="node">
<title>shapeless.ops.hlist.Tupler[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-10918.8701" rx="413.815" ry="26.7407"/>
<text text-anchor="start" x="3061.9729" y="-10922.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Tupler[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="3346.4729" y="-10907.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Tupler.Aux[Int :: String :: Boolean :: shapeless.HNil,R] -->
<g id="node151" class="node">
<title>shapeless.ops.hlist.Tupler.Aux[Int :: String :: Boolean :: shapeless.HNil,R]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-14563.8701" rx="300.5408" ry="26.7407"/>
<text text-anchor="start" x="1594.6015" y="-14567.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Tupler.Aux[Int :: String :: Boolean :: shapeless.HNil,R]</text>
<text text-anchor="middle" x="1799.1015" y="-14552.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scalaz.Functor[F$macro$14] -->
<g id="node152" class="node">
<title>scalaz.Functor[F$macro$14]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-17227.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-17231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$14]</text>
<text text-anchor="middle" x="497.8032" y="-17216.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.LessEqual[Int(15)],RB] -->
<g id="node153" class="node">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.LessEqual[Int(15)],RB]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-6288.8701" rx="362.9917" ry="26.7407"/>
<text text-anchor="start" x="3097.9729" y="-6292.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.LessEqual[Int(15)],RB]</text>
<text text-anchor="middle" x="3346.4729" y="-6277.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 22ms</text>
</g>
<!-- eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.LessEqual[Int(15)],RB]&#45;&gt;eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(15)],R] -->
<g id="edge479" class="edge">
<title>eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.LessEqual[Int(15)],RB]&#45;&gt;eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.Greater[Int(15)],R]</title>
<path fill="none" stroke="#000000" d="M3709.0927,-6287.8542C3926.8578,-6287.2442 4202.7092,-6286.4714 4419.1368,-6285.8651"/>
<polygon fill="#000000" stroke="#000000" points="4419.4074,-6289.3645 4429.3975,-6285.8364 4419.3877,-6282.3645 4419.4074,-6289.3645"/>
</g>
<!-- monocle.function.Index[Map[String,JsonExample.this.Json],String,A] -->
<g id="node154" class="node">
<title>monocle.function.Index[Map[String,JsonExample.this.Json],String,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-17299.8701" rx="283.5996" ry="26.7407"/>
<text text-anchor="start" x="305.3032" y="-17303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[Map[String,JsonExample.this.Json],String,A]</text>
<text text-anchor="middle" x="497.8032" y="-17288.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Index[scalaz.OneAnd[List,Int],Int,A] -->
<g id="node155" class="node">
<title>monocle.function.Index[scalaz.OneAnd[List,Int],Int,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-17371.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="345.8032" y="-17375.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[scalaz.OneAnd[List,Int],Int,A]</text>
<text text-anchor="middle" x="497.8032" y="-17360.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.function.Index[List[Int],Int,Int] -->
<g id="node725" class="node">
<title>monocle.function.Index[List[Int],Int,Int]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-17371.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="1687.6015" y="-17375.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[List[Int],Int,Int]</text>
<text text-anchor="middle" x="1799.1015" y="-17360.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- monocle.function.Index[scalaz.OneAnd[List,Int],Int,A]&#45;&gt;monocle.function.Index[List[Int],Int,Int] -->
<g id="edge508" class="edge">
<title>monocle.function.Index[scalaz.OneAnd[List,Int],Int,A]&#45;&gt;monocle.function.Index[List[Int],Int,Int]</title>
<path fill="none" stroke="#000000" d="M724.1003,-17371.8701C978.3957,-17371.8701 1386.0714,-17371.8701 1619.4806,-17371.8701"/>
<polygon fill="#000000" stroke="#000000" points="1619.7737,-17375.3702 1629.7737,-17371.8701 1619.7736,-17368.3702 1619.7737,-17375.3702"/>
</g>
<!-- org.scalactic.Equality[CoproductExample.this.ISB] -->
<g id="node156" class="node">
<title>org.scalactic.Equality[CoproductExample.this.ISB]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-14707.8701" rx="210.0214" ry="26.7407"/>
<text text-anchor="start" x="357.3032" y="-14711.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[CoproductExample.this.ISB]</text>
<text text-anchor="middle" x="497.8032" y="-14696.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[CoproductExample.this.ISB]&#45;&gt;scalaz.Equal[CoproductExample.this.ISB] -->
<g id="edge94" class="edge">
<title>org.scalactic.Equality[CoproductExample.this.ISB]&#45;&gt;scalaz.Equal[CoproductExample.this.ISB]</title>
<path fill="none" stroke="#000000" d="M707.9636,-14707.8701C958.7464,-14707.8701 1374.1226,-14707.8701 1613.5226,-14707.8701"/>
<polygon fill="#000000" stroke="#000000" points="1613.7286,-14711.3702 1623.7285,-14707.8701 1613.7285,-14704.3702 1613.7286,-14711.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long)] -->
<g id="node157" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long)]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-10126.8701" rx="342.8936" ry="26.7407"/>
<text text-anchor="start" x="1564.6015" y="-10130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long)]</text>
<text text-anchor="middle" x="1799.1015" y="-10115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 41ms</text>
</g>
<!-- shapeless.Generic.Aux[this.Out,L1] -->
<g id="node221" class="node">
<title>shapeless.Generic.Aux[this.Out,L1]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-10558.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="3248.4729" y="-10562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[this.Out,L1]</text>
<text text-anchor="middle" x="3346.4729" y="-10547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long)]&#45;&gt;shapeless.Generic.Aux[this.Out,L1] -->
<g id="edge397" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long)]&#45;&gt;shapeless.Generic.Aux[this.Out,L1]</title>
<path fill="none" stroke="#000000" d="M1876.3577,-10100.594C2036.2488,-10051.6632 2404.3656,-9968.2115 2594.5966,-10162.8701 2608.5786,-10177.1775 2588.6371,-10508.5408 2602.5966,-10522.8701 2683.3677,-10605.7805 3015.031,-10590.3256 3207.1284,-10573.5423"/>
<polygon fill="#000000" stroke="#000000" points="3207.6515,-10577.0097 3217.3035,-10572.6407 3207.0336,-10570.0371 3207.6515,-10577.0097"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,L2] -->
<g id="node486" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,L2]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-10054.8701" rx="408.9155" ry="26.7407"/>
<text text-anchor="start" x="3065.4729" y="-10058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,L2]</text>
<text text-anchor="middle" x="3346.4729" y="-10043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,L2] -->
<g id="edge87" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,L2]</title>
<path fill="none" stroke="#000000" d="M2094.2488,-10113.1367C2353.2822,-10101.0837 2730.159,-10083.5475 3002.7254,-10070.8648"/>
<polygon fill="#000000" stroke="#000000" points="3002.9557,-10074.358 3012.7822,-10070.3969 3002.6303,-10067.3655 3002.9557,-10074.358"/>
</g>
<!-- shapeless.ops.hlist.Tupler[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil] -->
<g id="node525" class="node">
<title>shapeless.ops.hlist.Tupler[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-10126.8701" rx="371.4623" ry="26.7407"/>
<text text-anchor="start" x="3091.9729" y="-10130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Tupler[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil]</text>
<text text-anchor="middle" x="3346.4729" y="-10115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long)]&#45;&gt;shapeless.ops.hlist.Tupler[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil] -->
<g id="edge321" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long)]&#45;&gt;shapeless.ops.hlist.Tupler[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2142.5134,-10126.8701C2386.1133,-10126.8701 2713.1564,-10126.8701 2964.9055,-10126.8701"/>
<polygon fill="#000000" stroke="#000000" points="2964.9548,-10130.3702 2974.9547,-10126.8701 2964.9547,-10123.3702 2964.9548,-10130.3702"/>
</g>
<!-- shapeless.Generic.Aux[List[Int],L1] -->
<g id="node240" class="node">
<title>shapeless.Generic.Aux[List[Int],L1]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-13132.8701" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="3247.4729" y="-13136.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[List[Int],L1]</text>
<text text-anchor="middle" x="3346.4729" y="-13121.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 134ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[List[Int],A]&#45;&gt;shapeless.Generic.Aux[List[Int],L1] -->
<g id="edge195" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[List[Int],A]&#45;&gt;shapeless.Generic.Aux[List[Int],L1]</title>
<path fill="none" stroke="#000000" d="M1985.3659,-13132.8701C2291.4514,-13132.8701 2895.6537,-13132.8701 3184.8338,-13132.8701"/>
<polygon fill="#000000" stroke="#000000" points="3184.987,-13136.3702 3194.9869,-13132.8701 3184.9869,-13129.3702 3184.987,-13136.3702"/>
</g>
<!-- Option[Unit] =&gt; ?{def shouldEqual: ?} -->
<g id="node159" class="node">
<title>Option[Unit] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-2618.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="389.3032" y="-2622.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Unit] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-2607.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 15ms</text>
</g>
<!-- Option[Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge220" class="edge">
<title>Option[Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M650.3825,-2608.6581C778.9469,-2603.7395 949.1632,-2607.1186 995.6063,-2654.8701 1009.5645,-2669.2214 989.456,-2820.7082 1003.6063,-2834.8701 1196.4674,-3027.8872 1564.7843,-2944.6825 1723.3807,-2896.4445"/>
<polygon fill="#000000" stroke="#000000" points="1724.5357,-2899.7511 1733.063,-2893.4634 1722.4758,-2893.061 1724.5357,-2899.7511"/>
</g>
<!-- Option[Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge308" class="edge">
<title>Option[Unit] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M656.5576,-2626.0869C754.533,-2631.5969 882.6549,-2640.7043 995.6063,-2654.8701 1258.4953,-2687.8402 1565.937,-2749.4534 1712.6535,-2780.2905"/>
<polygon fill="#000000" stroke="#000000" points="1712.0031,-2783.7302 1722.5098,-2782.3666 1713.446,-2776.8805 1712.0031,-2783.7302"/>
</g>
<!-- String =&gt; ?{def shouldEqual: ?} -->
<g id="node160" class="node">
<title>String =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-2546.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="408.3032" y="-2550.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-2535.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 25ms</text>
</g>
<!-- String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge335" class="edge">
<title>String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M627.1941,-2537.5336C757.6732,-2531.2656 946.616,-2531.8565 995.6063,-2582.8701 1015.0106,-2603.0756 983.9314,-2814.9279 1003.6063,-2834.8701 1195.3587,-3029.2265 1564.6799,-2945.1367 1723.4831,-2896.5459"/>
<polygon fill="#000000" stroke="#000000" points="1724.6605,-2899.8453 1733.1774,-2893.5434 1722.5895,-2893.1587 1724.6605,-2899.8453"/>
</g>
<!-- String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge529" class="edge">
<title>String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M634.9196,-2549.7723C735.375,-2553.5965 874.7108,-2562.4404 995.6063,-2582.8701 1271.1799,-2629.4381 1589.1712,-2728.9973 1728.0513,-2774.8473"/>
<polygon fill="#000000" stroke="#000000" points="1727.1448,-2778.234 1737.7381,-2778.0542 1729.3448,-2771.5886 1727.1448,-2778.234"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Out] -->
<g id="node161" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="11491.7745" cy="-10846.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="11121.7745" y="-10850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="11491.7745" y="-10835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="node751" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="12568.92" cy="-10846.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="12198.92" y="-10850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,shapeless.HNil,Out]</text>
<text text-anchor="middle" x="12568.92" y="-10835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="edge338" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M12026.4026,-10846.8701C12026.5678,-10846.8701 12026.733,-10846.8701 12026.8981,-10846.8701"/>
<polygon fill="#000000" stroke="#000000" points="12024.3304,-10850.3702 12034.3304,-10846.8701 12024.3303,-10843.3702 12024.3304,-10850.3702"/>
</g>
<!-- monocle.function.Cons1[(Int, Boolean),H,T] -->
<g id="node162" class="node">
<title>monocle.function.Cons1[(Int, Boolean),H,T]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-17443.8701" rx="185.0243" ry="26.7407"/>
<text text-anchor="start" x="374.8032" y="-17447.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons1[(Int, Boolean),H,T]</text>
<text text-anchor="middle" x="497.8032" y="-17432.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.IsHCons.Aux[(Int, Boolean),H,T] -->
<g id="node507" class="node">
<title>shapeless.ops.hlist.IsHCons.Aux[(Int, Boolean),H,T]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-17443.8701" rx="216.2494" ry="26.7407"/>
<text text-anchor="start" x="1654.1015" y="-17447.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.IsHCons.Aux[(Int, Boolean),H,T]</text>
<text text-anchor="middle" x="1799.1015" y="-17432.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Cons1[(Int, Boolean),H,T]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[(Int, Boolean),H,T] -->
<g id="edge175" class="edge">
<title>monocle.function.Cons1[(Int, Boolean),H,T]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[(Int, Boolean),H,T]</title>
<path fill="none" stroke="#000000" d="M683.2106,-17443.8701C917.4326,-17443.8701 1320.2969,-17443.8701 1572.5219,-17443.8701"/>
<polygon fill="#000000" stroke="#000000" points="1572.5495,-17447.3702 1582.5495,-17443.8701 1572.5494,-17440.3702 1572.5495,-17447.3702"/>
</g>
<!-- shapeless.ops.hlist.Tupler[Int :: Char :: shapeless.HNil] -->
<g id="node163" class="node">
<title>shapeless.ops.hlist.Tupler[Int :: Char :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-10270.8701" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="3194.9729" y="-10274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Tupler[Int :: Char :: shapeless.HNil]</text>
<text text-anchor="middle" x="3346.4729" y="-10259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Functor[F$macro$24] -->
<g id="node164" class="node">
<title>scalaz.Functor[F$macro$24]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-17515.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-17519.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$24]</text>
<text text-anchor="middle" x="497.8032" y="-17504.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Functor[F$macro$131] -->
<g id="node165" class="node">
<title>scalaz.Functor[F$macro$131]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-17587.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="415.8032" y="-17591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$131]</text>
<text text-anchor="middle" x="497.8032" y="-17576.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Option[String] =&gt; ?{def shouldEqual: ?} -->
<g id="node166" class="node">
<title>Option[String] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-2474.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="384.8032" y="-2478.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[String] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-2463.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- Option[String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge127" class="edge">
<title>Option[String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M655.3364,-2464.2584C783.4604,-2459.4623 950.1971,-2463.2507 995.6063,-2510.8701 1008.0322,-2523.9007 991.006,-2822.0082 1003.6063,-2834.8701 1194.791,-3030.0221 1564.8247,-2945.3402 1723.6711,-2896.5609"/>
<polygon fill="#000000" stroke="#000000" points="1724.8567,-2899.8576 1733.3671,-2893.5471 1722.7789,-2893.1731 1724.8567,-2899.8576"/>
</g>
<!-- Option[String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge155" class="edge">
<title>Option[String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M669.0366,-2475.8049C765.7958,-2479.1776 888.4669,-2488.2378 995.6063,-2510.8701 1283.8038,-2571.7491 1608.8779,-2711.7226 1739.8069,-2771.258"/>
<polygon fill="#000000" stroke="#000000" points="1738.7173,-2774.6079 1749.268,-2775.574 1741.6226,-2768.2392 1738.7173,-2774.6079"/>
</g>
<!-- monocle.function.Cons[scala.collection.immutable.Vector[Int],Int] -->
<g id="node167" class="node">
<title>monocle.function.Cons[scala.collection.immutable.Vector[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-17659.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="314.3032" y="-17663.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons[scala.collection.immutable.Vector[Int],Int]</text>
<text text-anchor="middle" x="497.8032" y="-17648.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- String(&#39;age&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node169" class="node">
<title>String(&#39;age&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-17731.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-17735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;age&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-17720.6701" font-family="Times,serif" font-size="14.00" fill="#000000">20 times = 24ms</text>
</g>
<!-- scalaz.Equal[(Int, scala.collection.immutable.Vector[Int])] -->
<g id="node170" class="node">
<title>scalaz.Equal[(Int, scala.collection.immutable.Vector[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-9406.8701" rx="238.0901" ry="26.7407"/>
<text text-anchor="start" x="3185.9729" y="-9410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, scala.collection.immutable.Vector[Int])]</text>
<text text-anchor="middle" x="3346.4729" y="-9395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scalaz.Equal[(Int, scala.collection.immutable.Vector[Int])]&#45;&gt;scalaz.Equal[scala.collection.immutable.Vector[Int]] -->
<g id="edge441" class="edge">
<title>scalaz.Equal[(Int, scala.collection.immutable.Vector[Int])]&#45;&gt;scalaz.Equal[scala.collection.immutable.Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M3541.519,-9422.3953C3733.2693,-9433.3565 4008.7115,-9436.214 4090.3493,-9370.8701 4100.7876,-9362.5151 4087.9622,-9350.2887 4098.3493,-9341.8701 4168.8203,-9284.7542 4399.9251,-9281.5952 4572.4213,-9288.0991"/>
<polygon fill="#000000" stroke="#000000" points="4572.5293,-9291.6059 4582.6583,-9288.499 4572.8026,-9284.6112 4572.5293,-9291.6059"/>
</g>
<!-- scalaz.Equal[(Int, scala.collection.immutable.Vector[Int])]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge190" class="edge">
<title>scalaz.Equal[(Int, scala.collection.immutable.Vector[Int])]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M3584.6296,-9408.529C4099.301,-9410.7364 5282.5318,-9407.8864 5450.3374,-9336.8701 5732.2424,-9217.5662 5957.7867,-8900.0448 6027.272,-8793.9476"/>
<polygon fill="#000000" stroke="#000000" points="6030.2416,-8795.8012 6032.76,-8785.51 6024.3736,-8791.9845 6030.2416,-8795.8012"/>
</g>
<!-- shapeless.Generic.Aux[Int :: Int :: shapeless.HNil,SGen] -->
<g id="node361" class="node">
<title>shapeless.Generic.Aux[Int :: Int :: shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="8260.3382" cy="-11746.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="8105.3382" y="-11750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Int :: Int :: shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="8260.3382" y="-11735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: shapeless.HNil,A]&#45;&gt;shapeless.Generic.Aux[Int :: Int :: shapeless.HNil,SGen] -->
<g id="edge236" class="edge">
<title>monocle.function.Each[Int :: Int :: shapeless.HNil,A]&#45;&gt;shapeless.Generic.Aux[Int :: Int :: shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M7401.1692,-11746.8701C7580.4474,-11746.8701 7834.2431,-11746.8701 8019.5008,-11746.8701"/>
<polygon fill="#000000" stroke="#000000" points="8019.656,-11750.3702 8029.6559,-11746.8701 8019.6559,-11743.3702 8019.656,-11750.3702"/>
</g>
<!-- monocle.function.Each[Int :: Int :: shapeless.HNil,A]&#45;&gt;monocle.function.Each[Int :: shapeless.HNil,Int] -->
<g id="edge407" class="edge">
<title>monocle.function.Each[Int :: Int :: shapeless.HNil,A]&#45;&gt;monocle.function.Each[Int :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M7383.9907,-11736.4301C7484.3677,-11730.4278 7607.6225,-11721.8752 7717.7654,-11710.8701 7853.6947,-11697.2885 8008.0626,-11676.2549 8117.2932,-11660.4221"/>
<polygon fill="#000000" stroke="#000000" points="8117.9967,-11663.8567 8127.3894,-11658.9549 8116.9899,-11656.9295 8117.9967,-11663.8567"/>
</g>
<!-- scalaz.Equal[Map[Int,String]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge329" class="edge">
<title>scalaz.Equal[Map[Int,String]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M4888.9665,-7701.1747C5061.439,-7686.4026 5375.5257,-7671.4172 5450.3374,-7748.8701 5467.014,-7766.1354 5443.8704,-8161.7154 5458.3374,-8180.8701 5576.7279,-8337.6216 5828.1801,-8362.2247 5961.7815,-8363.5266"/>
<polygon fill="#000000" stroke="#000000" points="5961.9597,-8367.0275 5971.9789,-8363.5828 5961.9984,-8360.0276 5961.9597,-8367.0275"/>
</g>
<!-- scalaz.Equal[Map[Int,String]]&#45;&gt;scalaz.Equal[String] -->
<g id="edge290" class="edge">
<title>scalaz.Equal[Map[Int,String]]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M4901.7954,-7712.9967C5038.2065,-7711.5233 5260.6216,-7704.4837 5450.3374,-7676.8701 5643.0175,-7648.825 5864.5683,-7587.8703 5976.5437,-7554.9771"/>
<polygon fill="#000000" stroke="#000000" points="5977.7772,-7558.2624 5986.3791,-7552.0772 5975.7975,-7551.5482 5977.7772,-7558.2624"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._4,this.Out,(this.Out, String :: Boolean :: Float :: Char :: Long :: shapeless.HNil)] -->
<g id="node173" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._4,this.Out,(this.Out, String :: Boolean :: Float :: Char :: Long :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-12376.8701" rx="743.7527" ry="26.7407"/>
<text text-anchor="start" x="2828.4729" y="-12380.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._4,this.Out,(this.Out, String :: Boolean :: Float :: Char :: Long :: shapeless.HNil)]</text>
<text text-anchor="middle" x="3346.4729" y="-12365.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 23ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._3,this.Out,(this.Out, Boolean :: Float :: Char :: Long :: shapeless.HNil)] -->
<g id="node421" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._3,this.Out,(this.Out, Boolean :: Float :: Char :: Long :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-12376.8701" rx="675.9882" ry="26.7407"/>
<text text-anchor="start" x="4304.3434" y="-12380.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._3,this.Out,(this.Out, Boolean :: Float :: Char :: Long :: shapeless.HNil)]</text>
<text text-anchor="middle" x="4774.3434" y="-12365.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._4,this.Out,(this.Out, String :: Boolean :: Float :: Char :: Long :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._3,this.Out,(this.Out, Boolean :: Float :: Char :: Long :: shapeless.HNil)] -->
<g id="edge394" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._4,this.Out,(this.Out, String :: Boolean :: Float :: Char :: Long :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._3,this.Out,(this.Out, Boolean :: Float :: Char :: Long :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M4090.4671,-12376.8701C4090.6311,-12376.8701 4090.7951,-12376.8701 4090.959,-12376.8701"/>
<polygon fill="#000000" stroke="#000000" points="4088.3366,-12380.3702 4098.3365,-12376.8701 4088.3365,-12373.3702 4088.3366,-12380.3702"/>
</g>
<!-- monocle.function.Empty[List[Int]] -->
<g id="node174" class="node">
<title>monocle.function.Empty[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-17803.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="402.3032" y="-17807.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[List[Int]]</text>
<text text-anchor="middle" x="497.8032" y="-17792.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(4) =&gt; ?{def applyLens: ?} -->
<g id="node175" class="node">
<title>Int(4) =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-5858.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="414.8032" y="-5862.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(4) =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-5847.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- Int(4) =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge71" class="edge">
<title>Int(4) =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M626.7355,-5858.8701C868.1273,-5858.8701 1387.1841,-5858.8701 1645.942,-5858.8701"/>
<polygon fill="#000000" stroke="#000000" points="1646.1722,-5862.3702 1656.1722,-5858.8701 1646.1721,-5855.3702 1646.1722,-5862.3702"/>
</g>
<!-- StateExample.this._age.type =&gt; ?{def assign_: ?} -->
<g id="node176" class="node">
<title>StateExample.this._age.type =&gt; ?{def assign_: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-17875.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="360.8032" y="-17879.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._age.type =&gt; ?{def assign_: ?}</text>
<text text-anchor="middle" x="497.8032" y="-17864.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Prepend[shapeless.HNil,this.Out :: shapeless.HNil] -->
<g id="node177" class="node">
<title>shapeless.ops.hlist.Prepend[shapeless.HNil,this.Out :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-12232.8701" rx="282.6855" ry="26.7407"/>
<text text-anchor="start" x="4582.3434" y="-12236.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Prepend[shapeless.HNil,this.Out :: shapeless.HNil]</text>
<text text-anchor="middle" x="4774.3434" y="-12221.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Functor[F$macro$6] -->
<g id="node178" class="node">
<title>scalaz.Functor[F$macro$6]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-17947.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="422.3032" y="-17951.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$6]</text>
<text text-anchor="middle" x="497.8032" y="-17936.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="node179" class="node">
<title>eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-6434.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="1627.6015" y="-6438.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</text>
<text text-anchor="middle" x="1799.1015" y="-6423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 23ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Double :: Boolean :: Char :: Int :: shapeless.HNil,String :: Long :: shapeless.HNil,Out] -->
<g id="node180" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Double :: Boolean :: Char :: Int :: shapeless.HNil,String :: Long :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="9337.4836" cy="-9982.8701" rx="492.2927" ry="26.7407"/>
<text text-anchor="start" x="8997.4836" y="-9986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Double :: Boolean :: Char :: Int :: shapeless.HNil,String :: Long :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="9337.4836" y="-9971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Long :: shapeless.HNil,Out] -->
<g id="node445" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Long :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="10414.6291" cy="-9982.8701" rx="492.2927" ry="26.7407"/>
<text text-anchor="start" x="10074.6291" y="-9986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Long :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="10414.6291" y="-9971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Double :: Boolean :: Char :: Int :: shapeless.HNil,String :: Long :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Long :: shapeless.HNil,Out] -->
<g id="edge562" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Double :: Boolean :: Char :: Int :: shapeless.HNil,String :: Long :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Long :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M9829.9544,-9982.8701C9857.3475,-9982.8701 9884.9008,-9982.8701 9912.3281,-9982.8701"/>
<polygon fill="#000000" stroke="#000000" points="9912.4267,-9986.3702 9922.4266,-9982.8701 9912.4266,-9979.3702 9912.4267,-9986.3702"/>
</g>
<!-- shapeless.ops.hlist.At.Aux[(String, Int, Boolean, Double, Long, Char),shapeless.nat._0.N,A] -->
<g id="node181" class="node">
<title>shapeless.ops.hlist.At.Aux[(String, Int, Boolean, Double, Long, Char),shapeless.nat._0.N,A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-18019.8701" rx="370.5479" ry="26.7407"/>
<text text-anchor="start" x="1545.1015" y="-18023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(String, Int, Boolean, Double, Long, Char),shapeless.nat._0.N,A]</text>
<text text-anchor="middle" x="1799.1015" y="-18008.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: shapeless.HNil,Out] -->
<g id="node182" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-10414.8701" rx="346.4646" ry="26.7407"/>
<text text-anchor="start" x="5812.4787" y="-10418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="6049.4787" y="-10403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="node745" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-10414.8701" rx="346.4646" ry="26.7407"/>
<text text-anchor="start" x="6946.1927" y="-10418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,shapeless.HNil,Out]</text>
<text text-anchor="middle" x="7183.1927" y="-10403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="edge253" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M6396.1765,-10414.8701C6532.43,-10414.8701 6688.7761,-10414.8701 6826.0292,-10414.8701"/>
<polygon fill="#000000" stroke="#000000" points="6826.2971,-10418.3702 6836.297,-10414.8701 6826.297,-10411.3702 6826.2971,-10418.3702"/>
</g>
<!-- org.scalactic.Equality[scalaz.OneAnd[List,Int]] -->
<g id="node183" class="node">
<title>org.scalactic.Equality[scalaz.OneAnd[List,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-9478.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="1669.6015" y="-9482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scalaz.OneAnd[List,Int]]</text>
<text text-anchor="middle" x="1799.1015" y="-9467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- scalaz.Equal[scalaz.OneAnd[List,Int]] -->
<g id="node232" class="node">
<title>scalaz.Equal[scalaz.OneAnd[List,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-9478.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="3241.9729" y="-9482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.OneAnd[List,Int]]</text>
<text text-anchor="middle" x="3346.4729" y="-9467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Equal[scalaz.OneAnd[List,Int]] -->
<g id="edge406" class="edge">
<title>org.scalactic.Equality[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Equal[scalaz.OneAnd[List,Int]]</title>
<path fill="none" stroke="#000000" d="M1993.9016,-9478.8701C2299.7814,-9478.8701 2887.6219,-9478.8701 3177.0264,-9478.8701"/>
<polygon fill="#000000" stroke="#000000" points="3177.1946,-9482.3702 3187.1945,-9478.8701 3177.1945,-9475.3702 3177.1946,-9482.3702"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Char),L1] -->
<g id="node184" class="node">
<title>shapeless.Generic.Aux[(Int, Char),L1]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-10630.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="3240.9729" y="-10634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Char),L1]</text>
<text text-anchor="middle" x="3346.4729" y="-10619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- ((Int, Int, Int, Int, Int, Int)) =&gt; ?{def applyTraversal: ?} -->
<g id="node186" class="node">
<title>((Int, Int, Int, Int, Int, Int)) =&gt; ?{def applyTraversal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-18091.8701" rx="226.9626" ry="26.7407"/>
<text text-anchor="start" x="345.3032" y="-18095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Int, Int, Int, Int, Int)) =&gt; ?{def applyTraversal: ?}</text>
<text text-anchor="middle" x="497.8032" y="-18080.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.IsHCons.Aux[(Int, Boolean, String),H,T] -->
<g id="node187" class="node">
<title>shapeless.ops.hlist.IsHCons.Aux[(Int, Boolean, String),H,T]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-18163.8701" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="1633.6015" y="-18167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.IsHCons.Aux[(Int, Boolean, String),H,T]</text>
<text text-anchor="middle" x="1799.1015" y="-18152.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalactic.Equality[Option[(List[Int], Int)]] -->
<g id="node188" class="node">
<title>org.scalactic.Equality[Option[(List[Int], Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-9766.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="372.8032" y="-9770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[(List[Int], Int)]]</text>
<text text-anchor="middle" x="497.8032" y="-9755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 16ms</text>
</g>
<!-- scalaz.Equal[Option[(List[Int], Int)]] -->
<g id="node465" class="node">
<title>scalaz.Equal[Option[(List[Int], Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-9766.8701" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="1698.6015" y="-9770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[(List[Int], Int)]]</text>
<text text-anchor="middle" x="1799.1015" y="-9755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 14ms</text>
</g>
<!-- org.scalactic.Equality[Option[(List[Int], Int)]]&#45;&gt;scalaz.Equal[Option[(List[Int], Int)]] -->
<g id="edge217" class="edge">
<title>org.scalactic.Equality[Option[(List[Int], Int)]]&#45;&gt;scalaz.Equal[Option[(List[Int], Int)]]</title>
<path fill="none" stroke="#000000" d="M685.9804,-9766.8701C941.2513,-9766.8701 1393.1231,-9766.8701 1635.1822,-9766.8701"/>
<polygon fill="#000000" stroke="#000000" points="1635.4816,-9770.3702 1645.4816,-9766.8701 1635.4815,-9763.3702 1635.4816,-9770.3702"/>
</g>
<!-- shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Int] -->
<g id="node189" class="node">
<title>shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-18235.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="1599.1015" y="-18239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Int]</text>
<text text-anchor="middle" x="1799.1015" y="-18224.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Int] -->
<g id="node763" class="node">
<title>shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-18235.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="3174.9729" y="-18239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Int]</text>
<text text-anchor="middle" x="3346.4729" y="-18224.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Int]&#45;&gt;shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Int] -->
<g id="edge10" class="edge">
<title>shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Int]&#45;&gt;shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Int]</title>
<path fill="none" stroke="#000000" d="M2093.3363,-18235.8701C2378.6806,-18235.8701 2807.6476,-18235.8701 3082.3244,-18235.8701"/>
<polygon fill="#000000" stroke="#000000" points="3082.4365,-18239.3702 3092.4364,-18235.8701 3082.4364,-18232.3702 3082.4365,-18239.3702"/>
</g>
<!-- StateExample.this._nameSet.type =&gt; ?{def mod_: ?} -->
<g id="node190" class="node">
<title>StateExample.this._nameSet.type =&gt; ?{def mod_: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-18307.8701" rx="219.4064" ry="26.7407"/>
<text text-anchor="start" x="350.8032" y="-18311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._nameSet.type =&gt; ?{def mod_: ?}</text>
<text text-anchor="middle" x="497.8032" y="-18296.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._0.N,Int,(Int, Int :: String :: Boolean :: shapeless.HNil)] -->
<g id="node191" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._0.N,Int,(Int, Int :: String :: Boolean :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-18415.8701" rx="574.7557" ry="26.7407"/>
<text text-anchor="start" x="1400.6015" y="-18419.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._0.N,Int,(Int, Int :: String :: Boolean :: shapeless.HNil)]</text>
<text text-anchor="middle" x="1799.1015" y="-18404.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 8ms</text>
</g>
<!-- Int(555) =&gt; ?{def success: ?} -->
<g id="node192" class="node">
<title>Int(555) =&gt; ?{def success: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-18451.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="416.3032" y="-18455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(555) =&gt; ?{def success: ?}</text>
<text text-anchor="middle" x="497.8032" y="-18440.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.IList[Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node195" class="node">
<title>scalaz.IList[Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-2402.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="381.8032" y="-2406.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.IList[Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-2391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 20ms</text>
</g>
<!-- scalaz.IList[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge478" class="edge">
<title>scalaz.IList[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M658.5616,-2392.0905C786.2842,-2387.4445 950.6769,-2391.5417 995.6063,-2438.8701 1010.7562,-2454.8288 988.2427,-2819.1171 1003.6063,-2834.8701 1194.4709,-3030.5717 1565.0836,-2945.4303 1723.8979,-2896.5369"/>
<polygon fill="#000000" stroke="#000000" points="1725.0852,-2899.833 1733.5912,-2893.5164 1723.0027,-2893.1499 1725.0852,-2899.833"/>
</g>
<!-- scalaz.IList[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge563" class="edge">
<title>scalaz.IList[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M672.6538,-2400.716C769.184,-2403.1973 890.4685,-2412.3923 995.6063,-2438.8701 1297.1181,-2514.8024 1626.7646,-2697.3501 1749.4795,-2769.1476"/>
<polygon fill="#000000" stroke="#000000" points="1747.9042,-2772.2813 1758.2998,-2774.3263 1751.4484,-2766.2449 1747.9042,-2772.2813"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,List[Int],Out0] -->
<g id="node247" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,List[Int],Out0]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-13060.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="3159.9729" y="-13064.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,List[Int],Out0]</text>
<text text-anchor="middle" x="3346.4729" y="-13049.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[List[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,List[Int],Out0] -->
<g id="edge348" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[List[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,List[Int],Out0]</title>
<path fill="none" stroke="#000000" d="M1982.2995,-13060.8701C2248.8521,-13060.8701 2746.0558,-13060.8701 3060.9209,-13060.8701"/>
<polygon fill="#000000" stroke="#000000" points="3061.1131,-13064.3702 3071.1131,-13060.8701 3061.113,-13057.3702 3061.1131,-13064.3702"/>
</g>
<!-- String(&#39;Hello&#39;) =&gt; ?{def right: ?} -->
<g id="node197" class="node">
<title>String(&#39;Hello&#39;) =&gt; ?{def right: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-18523.8701" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="407.3032" y="-18527.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Hello&#39;) =&gt; ?{def right: ?}</text>
<text text-anchor="middle" x="497.8032" y="-18512.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scalaz.Validation[?X,Int]) =&gt; scalaz.Validation[E,A] -->
<g id="node198" class="node">
<title>(=&gt; scalaz.Validation[?X,Int]) =&gt; scalaz.Validation[E,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-18595.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="339.8032" y="-18599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scalaz.Validation[?X,Int]) =&gt; scalaz.Validation[E,A]</text>
<text text-anchor="middle" x="497.8032" y="-18584.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Reverse[(Int, Char),A] -->
<g id="node199" class="node">
<title>monocle.function.Reverse[(Int, Char),A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-10486.8701" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="385.8032" y="-10490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[(Int, Char),A]</text>
<text text-anchor="middle" x="497.8032" y="-10475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 62ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[(Int, Char),A] -->
<g id="node320" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[(Int, Char),A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-10630.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="1671.1015" y="-10634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[(Int, Char),A]</text>
<text text-anchor="middle" x="1799.1015" y="-10619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Reverse[(Int, Char),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[(Int, Char),A] -->
<g id="edge279" class="edge">
<title>monocle.function.Reverse[(Int, Char),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[(Int, Char),A]</title>
<path fill="none" stroke="#000000" d="M637.0649,-10502.2806C880.1014,-10529.1747 1380.2975,-10584.5257 1637.9177,-10613.0337"/>
<polygon fill="#000000" stroke="#000000" points="1637.7875,-10616.5405 1648.1118,-10614.1617 1638.5575,-10609.583 1637.7875,-10616.5405"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char),A] -->
<g id="node596" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char),A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-10486.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="1669.6015" y="-10490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[(Int, Char),A]</text>
<text text-anchor="middle" x="1799.1015" y="-10475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 28ms</text>
</g>
<!-- monocle.function.Reverse[(Int, Char),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[(Int, Char),A] -->
<g id="edge170" class="edge">
<title>monocle.function.Reverse[(Int, Char),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[(Int, Char),A]</title>
<path fill="none" stroke="#000000" d="M667.5913,-10486.8701C905.7715,-10486.8701 1338.5262,-10486.8701 1594.2714,-10486.8701"/>
<polygon fill="#000000" stroke="#000000" points="1594.4259,-10490.3702 1604.4258,-10486.8701 1594.4258,-10483.3702 1594.4259,-10490.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char)] -->
<g id="node739" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-10378.8701" rx="218.492" ry="26.7407"/>
<text text-anchor="start" x="1652.6015" y="-10382.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char)]</text>
<text text-anchor="middle" x="1799.1015" y="-10367.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 27ms</text>
</g>
<!-- monocle.function.Reverse[(Int, Char),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char)] -->
<g id="edge549" class="edge">
<title>monocle.function.Reverse[(Int, Char),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char)]</title>
<path fill="none" stroke="#000000" d="M648.3499,-10474.3756C885.7769,-10454.6706 1346.9258,-10416.3979 1607.5911,-10394.7643"/>
<polygon fill="#000000" stroke="#000000" points="1608.2538,-10398.2214 1617.93,-10393.9062 1607.6747,-10391.2454 1608.2538,-10398.2214"/>
</g>
<!-- scalaz.Functor[F$macro$9] -->
<g id="node200" class="node">
<title>scalaz.Functor[F$macro$9]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-18667.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="422.3032" y="-18671.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$9]</text>
<text text-anchor="middle" x="497.8032" y="-18656.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[scala.collection.immutable.Stream[Int],SGen] -->
<g id="node202" class="node">
<title>shapeless.Generic.Aux[scala.collection.immutable.Stream[Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-18739.8701" rx="281.357" ry="26.7407"/>
<text text-anchor="start" x="1608.1015" y="-18743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scala.collection.immutable.Stream[Int],SGen]</text>
<text text-anchor="middle" x="1799.1015" y="-18728.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 76ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._5.N,A] -->
<g id="node203" class="node">
<title>shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._5.N,A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-12448.8701" rx="450.3541" ry="26.7407"/>
<text text-anchor="start" x="1488.6015" y="-12452.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._5.N,A]</text>
<text text-anchor="middle" x="1799.1015" y="-12437.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._5.N,A]&#45;&gt;shapeless.ops.hlist.At[String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._4] -->
<g id="edge304" class="edge">
<title>shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._5.N,A]&#45;&gt;shapeless.ops.hlist.At[String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._4]</title>
<path fill="none" stroke="#000000" d="M2249.7842,-12448.8701C2469.7838,-12448.8701 2732.2523,-12448.8701 2945.2534,-12448.8701"/>
<polygon fill="#000000" stroke="#000000" points="2945.3586,-12452.3702 2955.3585,-12448.8701 2945.3585,-12445.3702 2945.3586,-12452.3702"/>
</g>
<!-- LensPolyExample.this.Foo[Symbol,Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node204" class="node">
<title>LensPolyExample.this.Foo[Symbol,Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-2330.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="315.8032" y="-2334.6701" font-family="Times,serif" font-size="14.00" fill="#000000">LensPolyExample.this.Foo[Symbol,Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-2319.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- LensPolyExample.this.Foo[Symbol,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge386" class="edge">
<title>LensPolyExample.this.Foo[Symbol,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M737.0402,-2318.5795C846.391,-2318.6694 959.5727,-2328.7942 995.6063,-2366.8701 1013.4803,-2385.7571 985.4793,-2816.2258 1003.6063,-2834.8701 1194.1666,-3030.8679 1564.9451,-2945.5652 1723.8506,-2896.5829"/>
<polygon fill="#000000" stroke="#000000" points="1725.0458,-2899.8765 1733.5495,-2893.557 1722.9609,-2893.1942 1725.0458,-2899.8765"/>
</g>
<!-- LensPolyExample.this.Foo[Symbol,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge250" class="edge">
<title>LensPolyExample.this.Foo[Symbol,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M766.2656,-2329.635C841.6056,-2334.8179 922.7984,-2345.7167 995.6063,-2366.8701 1310.537,-2458.369 1641.6882,-2684.4861 1756.775,-2767.5834"/>
<polygon fill="#000000" stroke="#000000" points="1754.8546,-2770.5142 1765.0055,-2773.5489 1758.9627,-2764.8463 1754.8546,-2770.5142"/>
</g>
<!-- scalaz.Equal[(Int, String, Boolean)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge219" class="edge">
<title>scalaz.Equal[(Int, String, Boolean)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M4909.8593,-7580.2248C5083.5532,-7591.7155 5371.6932,-7599.4704 5450.3374,-7532.8701 5462.8452,-7522.2778 5447.8634,-7509.477 5458.3374,-7496.8701 5584.4512,-7345.0746 5818.5248,-7282.736 5951.1475,-7258.7038"/>
<polygon fill="#000000" stroke="#000000" points="5952.0675,-7262.0954 5961.3025,-7256.9027 5950.8449,-7255.2029 5952.0675,-7262.0954"/>
</g>
<!-- scalaz.Equal[(Int, String, Boolean)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge349" class="edge">
<title>scalaz.Equal[(Int, String, Boolean)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M4921.8633,-7564.7052C5184.4827,-7557.2909 5726.4352,-7541.9903 5949.8498,-7535.6828"/>
<polygon fill="#000000" stroke="#000000" points="5950.0259,-7539.1793 5959.9232,-7535.3984 5949.8283,-7532.1821 5950.0259,-7539.1793"/>
</g>
<!-- scalaz.Equal[(Int, String, Boolean)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge285" class="edge">
<title>scalaz.Equal[(Int, String, Boolean)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4904.9573,-7555.7611C5080.2709,-7541.4001 5378.0878,-7529.4371 5450.3374,-7604.8701 5465.5557,-7620.7588 5447.4875,-8377.7304 5458.3374,-8396.8701 5570.8061,-8595.2679 5840.7017,-8698.3048 5973.3175,-8738.4452"/>
<polygon fill="#000000" stroke="#000000" points="5972.4276,-8741.8321 5983.0111,-8741.3411 5974.4314,-8735.125 5972.4276,-8741.8321"/>
</g>
<!-- ((Char, Boolean, String, Double, Int)) =&gt; ?{def shouldEqual: ?} -->
<g id="node206" class="node">
<title>((Char, Boolean, String, Double, Int)) =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-2258.8701" rx="260.8448" ry="26.7407"/>
<text text-anchor="start" x="321.3032" y="-2262.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Char, Boolean, String, Double, Int)) =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-2247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- ((Char, Boolean, String, Double, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge365" class="edge">
<title>((Char, Boolean, String, Double, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M729.9652,-2246.554C841.4897,-2246.1999 958.8354,-2255.9263 995.6063,-2294.8701 1016.2046,-2316.6854 982.7158,-2813.3344 1003.6063,-2834.8701 1193.9432,-3031.0849 1564.8434,-2945.664 1723.8159,-2896.6167"/>
<polygon fill="#000000" stroke="#000000" points="1725.0168,-2899.9084 1733.5189,-2893.5867 1722.9302,-2893.2266 1725.0168,-2899.9084"/>
</g>
<!-- ((Char, Boolean, String, Double, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge194" class="edge">
<title>((Char, Boolean, String, Double, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M753.7383,-2253.6289C832.8439,-2258.2706 919.2231,-2269.8786 995.6063,-2294.8701 1324.2552,-2402.3992 1654.3833,-2672.649 1762.4226,-2766.3083"/>
<polygon fill="#000000" stroke="#000000" points="1760.2723,-2769.0767 1770.113,-2773.0027 1764.8684,-2763.7969 1760.2723,-2769.0767"/>
</g>
<!-- scala.collection.immutable.Set[Int] =&gt; ?{def applyLens: ?} -->
<g id="node207" class="node">
<title>scala.collection.immutable.Set[Int] =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-5786.8701" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="334.3032" y="-5790.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[Int] =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-5775.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 25ms</text>
</g>
<!-- scala.collection.immutable.Set[Int] =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge492" class="edge">
<title>scala.collection.immutable.Set[Int] =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M714.8786,-5798.8807C980.4747,-5813.576 1422.9646,-5838.0586 1651.876,-5850.7242"/>
<polygon fill="#000000" stroke="#000000" points="1651.7641,-5854.2232 1661.9422,-5851.2811 1652.1509,-5847.2339 1651.7641,-5854.2232"/>
</g>
<!-- List[?A] =&gt; S -->
<g id="node208" class="node">
<title>List[?A] =&gt; S</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-18811.8701" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="457.8032" y="-18815.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[?A] =&gt; S</text>
<text text-anchor="middle" x="497.8032" y="-18800.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Float :: Char :: Long :: shapeless.HNil,shapeless.nat._2,this.Out,(this.Out, Float :: Char :: Long :: shapeless.HNil)] -->
<g id="node209" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Float :: Char :: Long :: shapeless.HNil,shapeless.nat._2,this.Out,(this.Out, Float :: Char :: Long :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-12376.8701" rx="591.2826" ry="26.7407"/>
<text text-anchor="start" x="5639.4787" y="-12380.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Float :: Char :: Long :: shapeless.HNil,shapeless.nat._2,this.Out,(this.Out, Float :: Char :: Long :: shapeless.HNil)]</text>
<text text-anchor="middle" x="6049.4787" y="-12365.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Char :: Long :: shapeless.HNil,shapeless.nat._1,this.Out,(this.Out, Char :: Long :: shapeless.HNil)] -->
<g id="node698" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Char :: Long :: shapeless.HNil,shapeless.nat._1,this.Out,(this.Out, Char :: Long :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-12376.8701" rx="530.1602" ry="26.7407"/>
<text text-anchor="start" x="6816.1927" y="-12380.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Char :: Long :: shapeless.HNil,shapeless.nat._1,this.Out,(this.Out, Char :: Long :: shapeless.HNil)]</text>
<text text-anchor="middle" x="7183.1927" y="-12365.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Float :: Char :: Long :: shapeless.HNil,shapeless.nat._2,this.Out,(this.Out, Float :: Char :: Long :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Char :: Long :: shapeless.HNil,shapeless.nat._1,this.Out,(this.Out, Char :: Long :: shapeless.HNil)] -->
<g id="edge178" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Float :: Char :: Long :: shapeless.HNil,shapeless.nat._2,this.Out,(this.Out, Float :: Char :: Long :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Char :: Long :: shapeless.HNil,shapeless.nat._1,this.Out,(this.Out, Char :: Long :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M6640.8245,-12376.8701C6641.3113,-12376.8701 6641.7981,-12376.8701 6642.2848,-12376.8701"/>
<polygon fill="#000000" stroke="#000000" points="6642.5027,-12380.3702 6652.5027,-12376.8701 6642.5027,-12373.3702 6642.5027,-12380.3702"/>
</g>
<!-- ((Int, Int)) =&gt; ?{def applyTraversal: ?} -->
<g id="node210" class="node">
<title>((Int, Int)) =&gt; ?{def applyTraversal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-18883.8701" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="390.3032" y="-18887.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Int)) =&gt; ?{def applyTraversal: ?}</text>
<text text-anchor="middle" x="497.8032" y="-18872.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Snoc1[Int :: String :: Boolean :: shapeless.HNil,I,L] -->
<g id="node211" class="node">
<title>monocle.function.Snoc1[Int :: String :: Boolean :: shapeless.HNil,I,L]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-12232.8701" rx="282.2713" ry="26.7407"/>
<text text-anchor="start" x="306.3032" y="-12236.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc1[Int :: String :: Boolean :: shapeless.HNil,I,L]</text>
<text text-anchor="middle" x="497.8032" y="-12221.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 57ms</text>
</g>
<!-- monocle.function.Snoc1[Int :: String :: Boolean :: shapeless.HNil,I,L]&#45;&gt;shapeless.ops.hlist.Init.Aux[Int :: String :: Boolean :: shapeless.HNil,I] -->
<g id="edge528" class="edge">
<title>monocle.function.Snoc1[Int :: String :: Boolean :: shapeless.HNil,I,L]&#45;&gt;shapeless.ops.hlist.Init.Aux[Int :: String :: Boolean :: shapeless.HNil,I]</title>
<path fill="none" stroke="#000000" d="M717.4381,-12249.7431C806.2619,-12256.243 909.7876,-12263.4094 1003.6063,-12268.8701 1176.8072,-12278.9512 1371.3621,-12287.7996 1524.7132,-12294.2013"/>
<polygon fill="#000000" stroke="#000000" points="1524.6169,-12297.7003 1534.7539,-12294.6195 1524.9082,-12290.7063 1524.6169,-12297.7003"/>
</g>
<!-- monocle.function.Snoc1[Int :: String :: Boolean :: shapeless.HNil,I,L]&#45;&gt;shapeless.ops.hlist.Prepend.Aux[this.Out,this.Out :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil] -->
<g id="edge423" class="edge">
<title>monocle.function.Snoc1[Int :: String :: Boolean :: shapeless.HNil,I,L]&#45;&gt;shapeless.ops.hlist.Prepend.Aux[this.Out,this.Out :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M780.1655,-12232.8701C948.335,-12232.8701 1165.4475,-12232.8701 1356.0222,-12232.8701"/>
<polygon fill="#000000" stroke="#000000" points="1356.2259,-12236.3702 1366.2259,-12232.8701 1356.2259,-12229.3702 1356.2259,-12236.3702"/>
</g>
<!-- shapeless.ops.hlist.Last.Aux[Int :: String :: Boolean :: shapeless.HNil,L] -->
<g id="node463" class="node">
<title>shapeless.ops.hlist.Last.Aux[Int :: String :: Boolean :: shapeless.HNil,L]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-12160.8701" rx="291.1561" ry="26.7407"/>
<text text-anchor="start" x="1601.1015" y="-12164.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Last.Aux[Int :: String :: Boolean :: shapeless.HNil,L]</text>
<text text-anchor="middle" x="1799.1015" y="-12149.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- monocle.function.Snoc1[Int :: String :: Boolean :: shapeless.HNil,I,L]&#45;&gt;shapeless.ops.hlist.Last.Aux[Int :: String :: Boolean :: shapeless.HNil,L] -->
<g id="edge599" class="edge">
<title>monocle.function.Snoc1[Int :: String :: Boolean :: shapeless.HNil,I,L]&#45;&gt;shapeless.ops.hlist.Last.Aux[Int :: String :: Boolean :: shapeless.HNil,L]</title>
<path fill="none" stroke="#000000" d="M717.4381,-12215.997C806.2619,-12209.4971 909.7876,-12202.3307 1003.6063,-12196.8701 1175.1191,-12186.8872 1367.5716,-12178.1131 1520.2175,-12171.7267"/>
<polygon fill="#000000" stroke="#000000" points="1520.3685,-12175.2235 1530.2138,-12171.3095 1520.0766,-12168.2296 1520.3685,-12175.2235"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Out] -->
<g id="node212" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-9982.8701" rx="492.2927" ry="26.7407"/>
<text text-anchor="start" x="5709.4787" y="-9986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="6049.4787" y="-9971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: Double :: String :: Long :: shapeless.HNil,Out] -->
<g id="edge538" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: Double :: String :: Long :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M6541.796,-9982.8701C6587.8649,-9982.8701 6634.6021,-9982.8701 6680.762,-9982.8701"/>
<polygon fill="#000000" stroke="#000000" points="6680.9133,-9986.3702 6690.9132,-9982.8701 6680.9132,-9979.3702 6680.9133,-9986.3702"/>
</g>
<!-- org.scalactic.Equality[String] -->
<g id="node213" class="node">
<title>org.scalactic.Equality[String]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-7640.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="4694.3434" y="-7644.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[String]</text>
<text text-anchor="middle" x="4774.3434" y="-7629.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 24ms</text>
</g>
<!-- org.scalactic.Equality[String]&#45;&gt;scalaz.Equal[String] -->
<g id="edge56" class="edge">
<title>org.scalactic.Equality[String]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M4897.559,-7636.7661C5033.1884,-7631.676 5257.5814,-7621.5661 5450.3374,-7604.8701 5630.8636,-7589.2334 5840.9415,-7561.8602 5958.236,-7545.747"/>
<polygon fill="#000000" stroke="#000000" points="5958.8235,-7549.1992 5968.2524,-7544.3674 5957.8683,-7542.2647 5958.8235,-7549.1992"/>
</g>
<!-- scalaz.Functor[F$macro$19] -->
<g id="node215" class="node">
<title>scalaz.Functor[F$macro$19]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-18955.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-18959.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$19]</text>
<text text-anchor="middle" x="497.8032" y="-18944.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String @@ Nothing =&gt; ?{def shouldEqual: ?} -->
<g id="node216" class="node">
<title>String @@ Nothing =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-2186.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="369.8032" y="-2190.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String @@ Nothing =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-2175.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- String @@ Nothing =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge296" class="edge">
<title>String @@ Nothing =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M672.4593,-2175.5416C798.0056,-2171.6586 952.4431,-2177.0765 995.6063,-2222.8701 1018.9289,-2247.6139 979.9523,-2810.443 1003.6063,-2834.8701 1193.7722,-3031.2507 1564.7656,-2945.7394 1723.7893,-2896.6424"/>
<polygon fill="#000000" stroke="#000000" points="1724.9946,-2899.9328 1733.4955,-2893.6094 1722.9067,-2893.2514 1724.9946,-2899.9328"/>
</g>
<!-- String @@ Nothing =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge268" class="edge">
<title>String @@ Nothing =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M675.4405,-2176.5606C772.6798,-2176.5812 893.7525,-2186.0278 995.6063,-2222.8701 1338.4788,-2346.8928 1665.5939,-2661.7165 1767.001,-2765.2783"/>
<polygon fill="#000000" stroke="#000000" points="1764.7003,-2767.9322 1774.1868,-2772.65 1769.7129,-2763.0461 1764.7003,-2767.9322"/>
</g>
<!-- shapeless.ops.hlist.Last[String :: Boolean :: shapeless.HNil] -->
<g id="node217" class="node">
<title>shapeless.ops.hlist.Last[String :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-12160.8701" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="3182.9729" y="-12164.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Last[String :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="3346.4729" y="-12149.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 13ms</text>
</g>
<!-- shapeless.ops.hlist.Last[String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Last[Boolean :: shapeless.HNil] -->
<g id="edge116" class="edge">
<title>shapeless.ops.hlist.Last[String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Last[Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M3589.096,-12160.8701C3859.9548,-12160.8701 4294.411,-12160.8701 4555.3031,-12160.8701"/>
<polygon fill="#000000" stroke="#000000" points="4555.6658,-12164.3702 4565.6657,-12160.8701 4555.6657,-12157.3702 4555.6658,-12164.3702"/>
</g>
<!-- org.scalactic.Equality[(Char, Boolean, String, Double, Int)] -->
<g id="node218" class="node">
<title>org.scalactic.Equality[(Char, Boolean, String, Double, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-7136.8701" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="3183.9729" y="-7140.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(Char, Boolean, String, Double, Int)]</text>
<text text-anchor="middle" x="3346.4729" y="-7125.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Double, Int)] -->
<g id="node291" class="node">
<title>scalaz.Equal[(Char, Boolean, String, Double, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-7136.8701" rx="206.4504" ry="26.7407"/>
<text text-anchor="start" x="4636.3434" y="-7140.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Char, Boolean, String, Double, Int)]</text>
<text text-anchor="middle" x="4774.3434" y="-7125.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalactic.Equality[(Char, Boolean, String, Double, Int)]&#45;&gt;scalaz.Equal[(Char, Boolean, String, Double, Int)] -->
<g id="edge569" class="edge">
<title>org.scalactic.Equality[(Char, Boolean, String, Double, Int)]&#45;&gt;scalaz.Equal[(Char, Boolean, String, Double, Int)]</title>
<path fill="none" stroke="#000000" d="M3587.8839,-7136.8701C3859.4047,-7136.8701 4296.4265,-7136.8701 4557.463,-7136.8701"/>
<polygon fill="#000000" stroke="#000000" points="4557.8301,-7140.3702 4567.8301,-7136.8701 4557.8301,-7133.3702 4557.8301,-7140.3702"/>
</g>
<!-- monocle.function.FilterIndex[Map[String,String],String,A] -->
<g id="node219" class="node">
<title>monocle.function.FilterIndex[Map[String,String],String,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-19027.8701" rx="240.3326" ry="26.7407"/>
<text text-anchor="start" x="335.8032" y="-19031.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[Map[String,String],String,A]</text>
<text text-anchor="middle" x="497.8032" y="-19016.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Int)]] -->
<g id="node220" class="node">
<title>org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-15427.8701" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="312.8032" y="-15431.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Int)]]</text>
<text text-anchor="middle" x="497.8032" y="-15416.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 36ms</text>
</g>
<!-- scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Int)]] -->
<g id="node639" class="node">
<title>scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-15427.8701" rx="238.0901" ry="26.7407"/>
<text text-anchor="start" x="1638.6015" y="-15431.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Int)]]</text>
<text text-anchor="middle" x="1799.1015" y="-15416.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 15ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Int)]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Int)]] -->
<g id="edge552" class="edge">
<title>org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Int)]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Int)]]</title>
<path fill="none" stroke="#000000" d="M770.9944,-15427.8701C1001.1335,-15427.8701 1327.5822,-15427.8701 1550.4934,-15427.8701"/>
<polygon fill="#000000" stroke="#000000" points="1550.6973,-15431.3702 1560.6973,-15427.8701 1550.6973,-15424.3702 1550.6973,-15431.3702"/>
</g>
<!-- Int =&gt; ?{def shouldEqual: ?} -->
<g id="node222" class="node">
<title>Int =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-5066.8701" rx="125.316" ry="26.7407"/>
<text text-anchor="start" x="417.3032" y="-5070.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-5055.6701" font-family="Times,serif" font-size="14.00" fill="#000000">26 times = 101ms</text>
</g>
<!-- Int =&gt; ?{def shouldEqual: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge189" class="edge">
<title>Int =&gt; ?{def shouldEqual: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M616.6124,-5058.2665C747.0183,-5051.6853 944.6843,-5051.0907 995.6063,-5102.8701 1006.8425,-5114.2954 996.1317,-5232.6954 1003.6063,-5246.8701 1167.8672,-5558.3686 1568.5538,-5759.4595 1730.0012,-5830.3299"/>
<polygon fill="#000000" stroke="#000000" points="1728.7954,-5833.6223 1739.3609,-5834.41 1731.5927,-5827.2055 1728.7954,-5833.6223"/>
</g>
<!-- Int =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge481" class="edge">
<title>Int =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M583.9692,-5086.4994C691.5723,-5105.714 876.0232,-5120.5442 995.6063,-5030.8701 1371.1098,-4749.284 1733.2054,-3169.6166 1791.0789,-2907.6733"/>
<polygon fill="#000000" stroke="#000000" points="1794.5015,-2908.4054 1793.2348,-2897.8866 1787.6654,-2906.8994 1794.5015,-2908.4054"/>
</g>
<!-- Int =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge252" class="edge">
<title>Int =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M615.9293,-5075.8764C746.7739,-5082.9478 945.8959,-5084.1105 995.6063,-5030.8701 1016.4215,-5008.5768 982.4925,-2856.8807 1003.6063,-2834.8701 1194.9968,-2635.3512 1572.818,-2725.5867 1728.9982,-2774.6286"/>
<polygon fill="#000000" stroke="#000000" points="1728.3702,-2778.1015 1738.9606,-2777.7958 1730.4911,-2771.4305 1728.3702,-2778.1015"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[scala.collection.immutable.Vector[Int],A] -->
<g id="node223" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[scala.collection.immutable.Vector[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-14187.8701" rx="300.5408" ry="26.7407"/>
<text text-anchor="start" x="1594.6015" y="-14191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[scala.collection.immutable.Vector[Int],A]</text>
<text text-anchor="middle" x="1799.1015" y="-14176.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scala.collection.immutable.Vector[Int],Out0] -->
<g id="node682" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scala.collection.immutable.Vector[Int],Out0]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-14187.8701" rx="392.3885" ry="26.7407"/>
<text text-anchor="start" x="3076.9729" y="-14191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scala.collection.immutable.Vector[Int],Out0]</text>
<text text-anchor="middle" x="3346.4729" y="-14176.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[scala.collection.immutable.Vector[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scala.collection.immutable.Vector[Int],Out0] -->
<g id="edge43" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[scala.collection.immutable.Vector[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scala.collection.immutable.Vector[Int],Out0]</title>
<path fill="none" stroke="#000000" d="M2099.7443,-14187.8701C2340.2549,-14187.8701 2679.7427,-14187.8701 2943.7405,-14187.8701"/>
<polygon fill="#000000" stroke="#000000" points="2943.8866,-14191.3702 2953.8866,-14187.8701 2943.8865,-14184.3702 2943.8866,-14191.3702"/>
</g>
<!-- scalaz.Equal[Option[Boolean]] -->
<g id="node224" class="node">
<title>scalaz.Equal[Option[Boolean]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-7208.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="4689.8434" y="-7212.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[Boolean]]</text>
<text text-anchor="middle" x="4774.3434" y="-7197.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- scalaz.Equal[Option[Boolean]]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge141" class="edge">
<title>scalaz.Equal[Option[Boolean]]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M4904.2195,-7212.5368C5156.2722,-7219.6528 5707.4768,-7235.2146 5941.2334,-7241.814"/>
<polygon fill="#000000" stroke="#000000" points="5941.3513,-7245.3187 5951.4461,-7242.1024 5941.5489,-7238.3215 5941.3513,-7245.3187"/>
</g>
<!-- monocle.function.At[scala.collection.immutable.Set[Int],Int,A] -->
<g id="node225" class="node">
<title>monocle.function.At[scala.collection.immutable.Set[Int],Int,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-19099.8701" rx="256.8596" ry="26.7407"/>
<text text-anchor="start" x="324.3032" y="-19103.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[scala.collection.immutable.Set[Int],Int,A]</text>
<text text-anchor="middle" x="497.8032" y="-19088.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.IList[Int] =&gt; ?{def applyOptional: ?} -->
<g id="node226" class="node">
<title>scalaz.IList[Int] =&gt; ?{def applyOptional: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-19171.8701" rx="182.3671" ry="26.7407"/>
<text text-anchor="start" x="376.8032" y="-19175.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.IList[Int] =&gt; ?{def applyOptional: ?}</text>
<text text-anchor="middle" x="497.8032" y="-19160.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- monocle.function.At[scala.collection.immutable.Map[String,Int],String,A] -->
<g id="node227" class="node">
<title>monocle.function.At[scala.collection.immutable.Map[String,Int],String,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-19243.8701" rx="301.4551" ry="26.7407"/>
<text text-anchor="start" x="292.8032" y="-19247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[scala.collection.immutable.Map[String,Int],String,A]</text>
<text text-anchor="middle" x="497.8032" y="-19232.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out] -->
<g id="node228" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-11278.8701" rx="388.8175" ry="26.7407"/>
<text text-anchor="start" x="5782.4787" y="-11282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="6049.4787" y="-11267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Out] -->
<g id="node457" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-11278.8701" rx="388.8175" ry="26.7407"/>
<text text-anchor="start" x="6916.1927" y="-11282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="7183.1927" y="-11267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Out] -->
<g id="edge176" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M6438.449,-11278.8701C6549.9599,-11278.8701 6671.6906,-11278.8701 6783.8164,-11278.8701"/>
<polygon fill="#000000" stroke="#000000" points="6783.9419,-11282.3702 6793.9419,-11278.8701 6783.9418,-11275.3702 6783.9419,-11282.3702"/>
</g>
<!-- shapeless.Generic.Aux[Int :: String :: Boolean :: shapeless.HNil,L1] -->
<g id="node229" class="node">
<title>shapeless.Generic.Aux[Int :: String :: Boolean :: shapeless.HNil,L1]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-19315.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="3159.9729" y="-19319.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Int :: String :: Boolean :: shapeless.HNil,L1]</text>
<text text-anchor="middle" x="3346.4729" y="-19304.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- ReaderExample.this._age.type =&gt; ?{def asks: ?} -->
<g id="node230" class="node">
<title>ReaderExample.this._age.type =&gt; ?{def asks: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-19387.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="363.8032" y="-19391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ReaderExample.this._age.type =&gt; ?{def asks: ?}</text>
<text text-anchor="middle" x="497.8032" y="-19376.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- F[scala.collection.immutable.Map[String,JsonExample.this.Json]] =&gt; ?{def map: ?} -->
<g id="node231" class="node">
<title>F[scala.collection.immutable.Map[String,JsonExample.this.Json]] =&gt; ?{def map: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-19531.8701" rx="340.2368" ry="26.7407"/>
<text text-anchor="start" x="265.3032" y="-19535.6701" font-family="Times,serif" font-size="14.00" fill="#000000">F[scala.collection.immutable.Map[String,JsonExample.this.Json]] =&gt; ?{def map: ?}</text>
<text text-anchor="middle" x="497.8032" y="-19520.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Functor[F] -->
<g id="node531" class="node">
<title>scalaz.Functor[F]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-19495.8701" rx="79.3924" ry="26.7407"/>
<text text-anchor="start" x="1751.1015" y="-19499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F]</text>
<text text-anchor="middle" x="1799.1015" y="-19484.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 4ms</text>
</g>
<!-- F[scala.collection.immutable.Map[String,JsonExample.this.Json]] =&gt; ?{def map: ?}&#45;&gt;scalaz.Functor[F] -->
<g id="edge417" class="edge">
<title>F[scala.collection.immutable.Map[String,JsonExample.this.Json]] =&gt; ?{def map: ?}&#45;&gt;scalaz.Functor[F]</title>
<path fill="none" stroke="#000000" d="M819.0549,-19522.9827C1113.0768,-19514.8487 1528.992,-19503.3425 1709.6072,-19498.3459"/>
<polygon fill="#000000" stroke="#000000" points="1709.9578,-19501.8376 1719.8572,-19498.0623 1709.7642,-19494.8403 1709.9578,-19501.8376"/>
</g>
<!-- scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Equal[List[Int]] -->
<g id="edge356" class="edge">
<title>scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Equal[List[Int]]</title>
<path fill="none" stroke="#000000" d="M3482.6626,-9464.926C3673.726,-9448.6697 4007.3316,-9433.4423 4090.3493,-9514.8701 4109.1125,-9533.274 4079.6307,-9614.4207 4098.3493,-9632.8701 4176.8397,-9710.2314 4503.1278,-9693.5649 4672.0189,-9679.1196"/>
<polygon fill="#000000" stroke="#000000" points="4672.5094,-9682.5903 4682.1689,-9678.2379 4671.9035,-9675.6166 4672.5094,-9682.5903"/>
</g>
<!-- scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge258" class="edge">
<title>scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M3487.3943,-9491.4876C3677.4134,-9505.316 4002.1923,-9516.7059 4090.3493,-9442.8701 4102.5822,-9432.6244 4086.1375,-9418.1408 4098.3493,-9407.8701 4213.473,-9311.0451 5346.0869,-9445.3153 5450.3374,-9336.8701 5462.1584,-9324.5735 5449.904,-8737.6963 5458.3374,-8722.8701 5572.2884,-8522.5417 5846.5729,-8419.3516 5977.5324,-8380.0748"/>
<polygon fill="#000000" stroke="#000000" points="5978.8743,-8383.3278 5987.4705,-8377.1346 5976.8884,-8376.6154 5978.8743,-8383.3278"/>
</g>
<!-- scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Order[List[Int]] -->
<g id="edge69" class="edge">
<title>scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Order[List[Int]]</title>
<path fill="none" stroke="#000000" d="M3505.7671,-9479.7625C3798.6376,-9481.4034 4415.4877,-9484.8595 4665.5754,-9486.2607"/>
<polygon fill="#000000" stroke="#000000" points="4665.7423,-9489.7616 4675.7618,-9486.3177 4665.7816,-9482.7617 4665.7423,-9489.7616"/>
</g>
<!-- scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge343" class="edge">
<title>scalaz.Equal[scalaz.OneAnd[List,Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M3501.6236,-9472.8462C3653.6467,-9467.0019 3891.9221,-9457.9964 4098.3493,-9450.8701 4173.453,-9448.2773 5381.985,-9439.0988 5450.3374,-9407.8701 5748.7991,-9271.5095 5966.9203,-8909.6607 6030.4784,-8794.5579"/>
<polygon fill="#000000" stroke="#000000" points="6033.7352,-8795.8977 6035.4706,-8785.4459 6027.5962,-8792.5342 6033.7352,-8795.8977"/>
</g>
<!-- scalaz.Equal[Option[Int]] -->
<g id="node233" class="node">
<title>scalaz.Equal[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-9190.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="4704.8434" y="-9194.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[Int]]</text>
<text text-anchor="middle" x="4774.3434" y="-9179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">30 times = 69ms</text>
</g>
<!-- scalaz.Equal[Option[Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge11" class="edge">
<title>scalaz.Equal[Option[Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4875.0164,-9201.6193C5009.7978,-9212.4337 5254.5993,-9219.4356 5450.3374,-9154.8701 5691.7114,-9075.2513 5928.5754,-8871.3417 6015.0659,-8791.5651"/>
<polygon fill="#000000" stroke="#000000" points="6017.5294,-8794.0539 6022.4821,-8784.6879 6012.7697,-8788.9212 6017.5294,-8794.0539"/>
</g>
<!-- (=&gt; String) =&gt; Double -->
<g id="node234" class="node">
<title>(=&gt; String) =&gt; Double</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-19603.8701" rx="101.2327" ry="26.7407"/>
<text text-anchor="start" x="434.3032" y="-19607.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; String) =&gt; Double</text>
<text text-anchor="middle" x="497.8032" y="-19592.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Empty[Int ==&gt;&gt; String] -->
<g id="node235" class="node">
<title>monocle.function.Empty[Int ==&gt;&gt; String]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-19675.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="380.3032" y="-19679.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[Int ==&gt;&gt; String]</text>
<text text-anchor="middle" x="497.8032" y="-19664.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,L2] -->
<g id="node236" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,L2]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-9982.8701" rx="408.9155" ry="26.7407"/>
<text text-anchor="start" x="3065.4729" y="-9986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,L2]</text>
<text text-anchor="middle" x="3346.4729" y="-9971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Out0] -->
<g id="node312" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Out0]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-9982.8701" rx="497.1922" ry="26.7407"/>
<text text-anchor="start" x="4430.8434" y="-9986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Out0]</text>
<text text-anchor="middle" x="4774.3434" y="-9971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Out0] -->
<g id="edge182" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Out0]</title>
<path fill="none" stroke="#000000" d="M3755.6433,-9982.8701C3915.0198,-9982.8701 4099.3415,-9982.8701 4267.0237,-9982.8701"/>
<polygon fill="#000000" stroke="#000000" points="4267.0244,-9986.3702 4277.0244,-9982.8701 4267.0243,-9979.3702 4267.0244,-9986.3702"/>
</g>
<!-- monocle.function.At[Map[String,String],String,A] -->
<g id="node237" class="node">
<title>monocle.function.At[Map[String,String],String,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-19747.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="359.3032" y="-19751.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[Map[String,String],String,A]</text>
<text text-anchor="middle" x="497.8032" y="-19736.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Int(0) =&gt; ?{def applyLens: ?} -->
<g id="node238" class="node">
<title>Int(0) =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-5714.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="414.8032" y="-5718.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(0) =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-5703.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 20ms</text>
</g>
<!-- Int(0) =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge169" class="edge">
<title>Int(0) =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M622.2694,-5721.7447C723.0785,-5727.8242 868.6894,-5737.7638 995.6063,-5750.8701 1238.606,-5775.9638 1521.443,-5816.6749 1678.401,-5840.292"/>
<polygon fill="#000000" stroke="#000000" points="1678.1457,-5843.793 1688.5557,-5841.8225 1679.1891,-5836.8711 1678.1457,-5843.793"/>
</g>
<!-- shapeless.Generic.Aux[scalaz.Tree[Int],L1] -->
<g id="node239" class="node">
<title>shapeless.Generic.Aux[scalaz.Tree[Int],L1]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-16543.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="3227.4729" y="-16547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scalaz.Tree[Int],L1]</text>
<text text-anchor="middle" x="3346.4729" y="-16532.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- String ==&gt;&gt; Int =&gt; ?{def applyOptional: ?} -->
<g id="node241" class="node">
<title>String ==&gt;&gt; Int =&gt; ?{def applyOptional: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-19819.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="375.8032" y="-19823.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String ==&gt;&gt; Int =&gt; ?{def applyOptional: ?}</text>
<text text-anchor="middle" x="497.8032" y="-19808.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scalaz.OneAnd[List,Int] =&gt; ?{def applyLens: ?} -->
<g id="node242" class="node">
<title>scalaz.OneAnd[List,Int] =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-19891.8701" rx="199.3083" ry="26.7407"/>
<text text-anchor="start" x="364.8032" y="-19895.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.OneAnd[List,Int] =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-19880.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- monocle.function.Curry[(Int, Double) =&gt; Double,G] -->
<g id="node243" class="node">
<title>monocle.function.Curry[(Int, Double) =&gt; Double,G]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-19963.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="353.3032" y="-19967.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Curry[(Int, Double) =&gt; Double,G]</text>
<text text-anchor="middle" x="497.8032" y="-19952.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- StateExample.this._oldAge.type =&gt; ?{def assign_: ?} -->
<g id="node244" class="node">
<title>StateExample.this._oldAge.type =&gt; ?{def assign_: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-20035.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="350.3032" y="-20039.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._oldAge.type =&gt; ?{def assign_: ?}</text>
<text text-anchor="middle" x="497.8032" y="-20024.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scalaz.Equal[scalaz.IList[Int]] -->
<g id="node245" class="node">
<title>scalaz.Equal[scalaz.IList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-8432.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="4692.3434" y="-8436.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.IList[Int]]</text>
<text text-anchor="middle" x="4774.3434" y="-8421.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 11ms</text>
</g>
<!-- scalaz.Equal[scalaz.IList[Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge595" class="edge">
<title>scalaz.Equal[scalaz.IList[Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M4898.3289,-8426.5208C5033.916,-8419.5183 5257.6096,-8407.7919 5450.3374,-8396.8701 5632.6249,-8386.5399 5846.0469,-8373.4865 5962.5957,-8366.2766"/>
<polygon fill="#000000" stroke="#000000" points="5963.1155,-8369.7512 5972.8801,-8365.64 5962.683,-8362.7646 5963.1155,-8369.7512"/>
</g>
<!-- Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil =&gt; ?{def applyLens: ?} -->
<g id="node246" class="node">
<title>Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-20107.8701" rx="352.2784" ry="26.7407"/>
<text text-anchor="start" x="256.8032" y="-20111.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-20096.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[scalaz.Tree[Int]] -->
<g id="node248" class="node">
<title>scalaz.Equal[scalaz.Tree[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-8576.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="4692.8434" y="-8580.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Tree[Int]]</text>
<text text-anchor="middle" x="4774.3434" y="-8565.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 19ms</text>
</g>
<!-- scalaz.Equal[scalaz.Tree[Int]]&#45;&gt;scalaz.Order[Int] -->
<g id="edge186" class="edge">
<title>scalaz.Equal[scalaz.Tree[Int]]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M4900.5626,-8579.0854C5037.1146,-8579.4104 5260.7451,-8573.9085 5450.3374,-8540.8701 5651.8322,-8505.7575 5881.0928,-8424.9011 5988.2361,-8384.6004"/>
<polygon fill="#000000" stroke="#000000" points="5989.4806,-8387.8717 5997.5993,-8381.0646 5987.0076,-8381.3231 5989.4806,-8387.8717"/>
</g>
<!-- monocle.function.Each[scalaz.IList[SymbolicSyntaxExample.this.Article],A] -->
<g id="node249" class="node">
<title>monocle.function.Each[scalaz.IList[SymbolicSyntaxExample.this.Article],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-20179.8701" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="285.8032" y="-20183.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[scalaz.IList[SymbolicSyntaxExample.this.Article],A]</text>
<text text-anchor="middle" x="497.8032" y="-20168.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 27ms</text>
</g>
<!-- shapeless.Generic.Aux[scalaz.IList[SymbolicSyntaxExample.this.Article],SGen] -->
<g id="node316" class="node">
<title>shapeless.Generic.Aux[scalaz.IList[SymbolicSyntaxExample.this.Article],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-20179.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="1578.1015" y="-20183.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scalaz.IList[SymbolicSyntaxExample.this.Article],SGen]</text>
<text text-anchor="middle" x="1799.1015" y="-20168.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 25ms</text>
</g>
<!-- monocle.function.Each[scalaz.IList[SymbolicSyntaxExample.this.Article],A]&#45;&gt;shapeless.Generic.Aux[scalaz.IList[SymbolicSyntaxExample.this.Article],SGen] -->
<g id="edge425" class="edge">
<title>monocle.function.Each[scalaz.IList[SymbolicSyntaxExample.this.Article],A]&#45;&gt;shapeless.Generic.Aux[scalaz.IList[SymbolicSyntaxExample.this.Article],SGen]</title>
<path fill="none" stroke="#000000" d="M809.083,-20179.8701C1006.8695,-20179.8701 1262.7581,-20179.8701 1464.8334,-20179.8701"/>
<polygon fill="#000000" stroke="#000000" points="1465.0211,-20183.3702 1475.021,-20179.8701 1465.021,-20176.3702 1465.0211,-20183.3702"/>
</g>
<!-- monocle.function.Reverse[(Int, Char, Boolean),A] -->
<g id="node250" class="node">
<title>monocle.function.Reverse[(Int, Char, Boolean),A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-11422.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="359.3032" y="-11426.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[(Int, Char, Boolean),A]</text>
<text text-anchor="middle" x="497.8032" y="-11411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 66ms</text>
</g>
<!-- monocle.function.Reverse[(Int, Char, Boolean),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean),A] -->
<g id="edge361" class="edge">
<title>monocle.function.Reverse[(Int, Char, Boolean),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean),A]</title>
<path fill="none" stroke="#000000" d="M675.9262,-11436.6761C772.7966,-11443.8999 894.737,-11452.5334 1003.6063,-11458.8701 1194.7013,-11469.9927 1411.7904,-11479.6148 1570.8546,-11486.1058"/>
<polygon fill="#000000" stroke="#000000" points="1571.113,-11489.6191 1581.2471,-11486.5288 1571.3978,-11482.6249 1571.113,-11489.6191"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean),A] -->
<g id="node322" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean),A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-11422.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="1643.1015" y="-11426.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean),A]</text>
<text text-anchor="middle" x="1799.1015" y="-11411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 30ms</text>
</g>
<!-- monocle.function.Reverse[(Int, Char, Boolean),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean),A] -->
<g id="edge27" class="edge">
<title>monocle.function.Reverse[(Int, Char, Boolean),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean),A]</title>
<path fill="none" stroke="#000000" d="M705.0766,-11422.8701C936.8814,-11422.8701 1311.8787,-11422.8701 1556.9806,-11422.8701"/>
<polygon fill="#000000" stroke="#000000" points="1557.0973,-11426.3702 1567.0973,-11422.8701 1557.0973,-11419.3702 1557.0973,-11426.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean)] -->
<g id="node510" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-11242.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="1626.1015" y="-11246.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean)]</text>
<text text-anchor="middle" x="1799.1015" y="-11231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 29ms</text>
</g>
<!-- monocle.function.Reverse[(Int, Char, Boolean),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean)] -->
<g id="edge364" class="edge">
<title>monocle.function.Reverse[(Int, Char, Boolean),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean)]</title>
<path fill="none" stroke="#000000" d="M639.5421,-11403.2642C882.2516,-11369.6919 1376.1416,-11301.3753 1634.0034,-11265.707"/>
<polygon fill="#000000" stroke="#000000" points="1634.7846,-11269.1323 1644.2107,-11264.2951 1633.8255,-11262.1984 1634.7846,-11269.1323"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Boolean :: String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil] -->
<g id="node251" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[Boolean :: String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-19387.8701" rx="455.2536" ry="26.7407"/>
<text text-anchor="start" x="1485.1015" y="-19391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[Boolean :: String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="1799.1015" y="-19376.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil] -->
<g id="node372" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-19387.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="2976.4729" y="-19391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="3346.4729" y="-19376.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Boolean :: String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil] -->
<g id="edge287" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[Boolean :: String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2254.7339,-19387.8701C2426.2284,-19387.8701 2622.966,-19387.8701 2801.7708,-19387.8701"/>
<polygon fill="#000000" stroke="#000000" points="2801.8925,-19391.3702 2811.8925,-19387.8701 2801.8924,-19384.3702 2801.8925,-19391.3702"/>
</g>
<!-- shapeless.ops.hlist.Init.Aux[(Int, Boolean, String),I] -->
<g id="node252" class="node">
<title>shapeless.ops.hlist.Init.Aux[(Int, Boolean, String),I]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-20251.8701" rx="212.6784" ry="26.7407"/>
<text text-anchor="start" x="1656.6015" y="-20255.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init.Aux[(Int, Boolean, String),I]</text>
<text text-anchor="middle" x="1799.1015" y="-20240.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.OneAnd[List,Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node253" class="node">
<title>scalaz.OneAnd[List,Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-2114.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="359.3032" y="-2118.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.OneAnd[List,Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-2103.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.OneAnd[List,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge587" class="edge">
<title>scalaz.OneAnd[List,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M684.5541,-2103.1824C807.7554,-2100.0187 953.848,-2106.5059 995.6063,-2150.8701 1008.6298,-2164.7062 990.3975,-2821.2108 1003.6063,-2834.8701 1193.7547,-3031.5031 1565.1636,-2945.6928 1724.0636,-2896.5715"/>
<polygon fill="#000000" stroke="#000000" points="1725.2626,-2899.8637 1733.7612,-2893.5373 1723.1723,-2893.1831 1725.2626,-2899.8637"/>
</g>
<!-- scalaz.OneAnd[List,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge525" class="edge">
<title>scalaz.OneAnd[List,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M680.9911,-2102.2795C777.6592,-2101.9527 896.4505,-2111.7899 995.6063,-2150.8701 1353.447,-2291.9054 1676.0452,-2651.9366 1770.9672,-2764.6196"/>
<polygon fill="#000000" stroke="#000000" points="1768.5564,-2767.1919 1777.6627,-2772.6072 1773.921,-2762.6951 1768.5564,-2767.1919"/>
</g>
<!-- monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long, Boolean),A] -->
<g id="node254" class="node">
<title>monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long, Boolean),A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-10846.8701" rx="331.7662" ry="26.7407"/>
<text text-anchor="start" x="271.3032" y="-10850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long, Boolean),A]</text>
<text text-anchor="middle" x="497.8032" y="-10835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 103ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A] -->
<g id="node279" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-11026.8701" rx="356.2637" ry="26.7407"/>
<text text-anchor="start" x="1555.1015" y="-11030.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A]</text>
<text text-anchor="middle" x="1799.1015" y="-11015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 48ms</text>
</g>
<!-- monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long, Boolean),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A] -->
<g id="edge140" class="edge">
<title>monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long, Boolean),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A]</title>
<path fill="none" stroke="#000000" d="M665.5933,-10870.0794C911.0071,-10904.0258 1366.0194,-10966.9647 1618.5015,-11001.8889"/>
<polygon fill="#000000" stroke="#000000" points="1618.1261,-11005.3702 1628.5113,-11003.2735 1619.0853,-10998.4362 1618.1261,-11005.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long, Boolean)] -->
<g id="node555" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-10846.8701" rx="380.3469" ry="26.7407"/>
<text text-anchor="start" x="1538.1015" y="-10850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long, Boolean)]</text>
<text text-anchor="middle" x="1799.1015" y="-10835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 46ms</text>
</g>
<!-- monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long, Boolean),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long, Boolean)] -->
<g id="edge590" class="edge">
<title>monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long, Boolean),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long, Boolean)]</title>
<path fill="none" stroke="#000000" d="M829.5427,-10846.8701C1005.8915,-10846.8701 1223.7649,-10846.8701 1408.2803,-10846.8701"/>
<polygon fill="#000000" stroke="#000000" points="1408.4305,-10850.3702 1418.4305,-10846.8701 1408.4305,-10843.3702 1408.4305,-10850.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A] -->
<g id="node742" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-10774.8701" rx="353.6068" ry="26.7407"/>
<text text-anchor="start" x="1557.1015" y="-10778.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A]</text>
<text text-anchor="middle" x="1799.1015" y="-10763.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long, Boolean),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A] -->
<g id="edge447" class="edge">
<title>monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long, Boolean),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A]</title>
<path fill="none" stroke="#000000" d="M739.243,-10828.4097C822.9275,-10822.3502 917.3678,-10815.8895 1003.6063,-10810.8701 1158.4347,-10801.8583 1330.327,-10793.8316 1474.5962,-10787.6571"/>
<polygon fill="#000000" stroke="#000000" points="1475.0936,-10791.1392 1484.9352,-10787.2158 1474.795,-10784.1456 1475.0936,-10791.1392"/>
</g>
<!-- shapeless.Generic.Aux[scala.collection.immutable.Stream[Int],L1] -->
<g id="node396" class="node">
<title>shapeless.Generic.Aux[scala.collection.immutable.Stream[Int],L1]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-13852.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="3162.9729" y="-13856.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scala.collection.immutable.Stream[Int],L1]</text>
<text text-anchor="middle" x="3346.4729" y="-13841.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 42ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[scala.collection.immutable.Stream[Int],A]&#45;&gt;shapeless.Generic.Aux[scala.collection.immutable.Stream[Int],L1] -->
<g id="edge547" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[scala.collection.immutable.Stream[Int],A]&#45;&gt;shapeless.Generic.Aux[scala.collection.immutable.Stream[Int],L1]</title>
<path fill="none" stroke="#000000" d="M2103.8887,-13852.8701C2383.283,-13852.8701 2793.664,-13852.8701 3065.3414,-13852.8701"/>
<polygon fill="#000000" stroke="#000000" points="3065.3495,-13856.3702 3075.3494,-13852.8701 3065.3494,-13849.3702 3065.3495,-13856.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A] -->
<g id="node256" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-9982.8701" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="1581.1015" y="-9986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A]</text>
<text text-anchor="middle" x="1799.1015" y="-9971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 44ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,L2] -->
<g id="edge147" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,L2]</title>
<path fill="none" stroke="#000000" d="M2118.7793,-9982.8701C2352.9335,-9982.8701 2672.9432,-9982.8701 2927.539,-9982.8701"/>
<polygon fill="#000000" stroke="#000000" points="2927.7076,-9986.3702 2937.7076,-9982.8701 2927.7075,-9979.3702 2927.7076,-9986.3702"/>
</g>
<!-- shapeless.ops.hlist.Tupler[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil] -->
<g id="node374" class="node">
<title>shapeless.ops.hlist.Tupler[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-9910.8701" rx="371.4623" ry="26.7407"/>
<text text-anchor="start" x="3091.9729" y="-9914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Tupler[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="3346.4729" y="-9899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A]&#45;&gt;shapeless.ops.hlist.Tupler[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil] -->
<g id="edge389" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A]&#45;&gt;shapeless.ops.hlist.Tupler[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2081.6742,-9970.2625C2233.6865,-9963.4347 2424.3902,-9954.7961 2594.5966,-9946.8701 2736.7567,-9940.25 2894.0268,-9932.7477 3027.8268,-9926.3118"/>
<polygon fill="#000000" stroke="#000000" points="3028.0069,-9929.8072 3037.8271,-9925.8306 3027.6705,-9922.8153 3028.0069,-9929.8072"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Char, Boolean, Double, String, Long),L1] -->
<g id="node645" class="node">
<title>shapeless.Generic.Aux[(Int, Char, Boolean, Double, String, Long),L1]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-9838.8701" rx="284.9281" ry="26.7407"/>
<text text-anchor="start" x="3152.9729" y="-9842.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Char, Boolean, Double, String, Long),L1]</text>
<text text-anchor="middle" x="3346.4729" y="-9827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A]&#45;&gt;shapeless.Generic.Aux[(Int, Char, Boolean, Double, String, Long),L1] -->
<g id="edge238" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A]&#45;&gt;shapeless.Generic.Aux[(Int, Char, Boolean, Double, String, Long),L1]</title>
<path fill="none" stroke="#000000" d="M1878.9487,-10008.9238C2038.3509,-10055.3879 2397.5863,-10131.3934 2594.5966,-9946.8701 2618.0958,-9924.8603 2579.1319,-9896.9166 2602.5966,-9874.8701 2676.3658,-9805.5593 2938.1624,-9807.5649 3130.3905,-9819.5779"/>
<polygon fill="#000000" stroke="#000000" points="3130.438,-9823.0879 3140.6406,-9820.232 3130.8839,-9816.1021 3130.438,-9823.0879"/>
</g>
<!-- scalaz.Tree[Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node257" class="node">
<title>scalaz.Tree[Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-2042.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="381.8032" y="-2046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Tree[Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-2031.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 16ms</text>
</g>
<!-- scalaz.Tree[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge26" class="edge">
<title>scalaz.Tree[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M658.3595,-2031.9927C786.199,-2027.2604 950.8679,-2031.2867 995.6063,-2078.8701 1009.992,-2094.1705 989.0157,-2819.765 1003.6063,-2834.8701 1193.6452,-3031.609 1565.1139,-2945.7409 1724.0466,-2896.5879"/>
<polygon fill="#000000" stroke="#000000" points="1725.2485,-2899.8792 1733.7463,-2893.5517 1723.1573,-2893.1988 1725.2485,-2899.8792"/>
</g>
<!-- scalaz.Tree[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge216" class="edge">
<title>scalaz.Tree[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M647.9925,-2028.9653C749.9714,-2025.3621 885.7345,-2032.2329 995.6063,-2078.8701 1368.9817,-2237.356 1685.6246,-2642.9173 1774.3427,-2764.1409"/>
<polygon fill="#000000" stroke="#000000" points="1771.6188,-2766.346 1780.3342,-2772.3703 1777.2778,-2762.2258 1771.6188,-2766.346"/>
</g>
<!-- (=&gt; String) =&gt; Int -->
<g id="node258" class="node">
<title>(=&gt; String) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-20323.8701" rx="83.3772" ry="26.7407"/>
<text text-anchor="start" x="446.8032" y="-20327.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; String) =&gt; Int</text>
<text text-anchor="middle" x="497.8032" y="-20312.6701" font-family="Times,serif" font-size="14.00" fill="#000000">52 times = 10ms</text>
</g>
<!-- scalaz.Tree[Int] =&gt; ?{def applyIso: ?} -->
<g id="node259" class="node">
<title>scalaz.Tree[Int] =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-20395.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="392.3032" y="-20399.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Tree[Int] =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-20384.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="node260" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="12568.92" cy="-11134.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="12198.92" y="-11138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,shapeless.HNil,Out]</text>
<text text-anchor="middle" x="12568.92" y="-11123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[Stream[Int]] -->
<g id="node261" class="node">
<title>scalaz.Equal[Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-9118.8701" rx="111.0315" ry="26.7407"/>
<text text-anchor="start" x="4703.8434" y="-9122.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Stream[Int]]</text>
<text text-anchor="middle" x="4774.3434" y="-9107.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[Stream[Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge86" class="edge">
<title>scalaz.Equal[Stream[Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4879.7252,-9127.3494C5014.7184,-9135.044 5254.6272,-9137.9771 5450.3374,-9082.8701 5677.4455,-9018.9221 5914.4848,-8857.8454 6008.022,-8789.8844"/>
<polygon fill="#000000" stroke="#000000" points="6010.3459,-8792.5213 6016.3581,-8783.7975 6006.2179,-8786.868 6010.3459,-8792.5213"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int),SGen] -->
<g id="node262" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int),SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-11710.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="1647.1015" y="-11714.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int),SGen]</text>
<text text-anchor="middle" x="1799.1015" y="-11699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 28ms</text>
</g>
<!-- org.scalactic.Equality[JsonExample.this.Json] -->
<g id="node263" class="node">
<title>org.scalactic.Equality[JsonExample.this.Json]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-20467.8701" rx="188.5952" ry="26.7407"/>
<text text-anchor="start" x="372.3032" y="-20471.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[JsonExample.this.Json]</text>
<text text-anchor="middle" x="497.8032" y="-20456.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 36ms</text>
</g>
<!-- scalaz.Equal[JsonExample.this.Json] -->
<g id="node456" class="node">
<title>scalaz.Equal[JsonExample.this.Json]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-20467.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="1698.1015" y="-20471.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[JsonExample.this.Json]</text>
<text text-anchor="middle" x="1799.1015" y="-20456.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 23ms</text>
</g>
<!-- org.scalactic.Equality[JsonExample.this.Json]&#45;&gt;scalaz.Equal[JsonExample.this.Json] -->
<g id="edge233" class="edge">
<title>org.scalactic.Equality[JsonExample.this.Json]&#45;&gt;scalaz.Equal[JsonExample.this.Json]</title>
<path fill="none" stroke="#000000" d="M686.6753,-20467.8701C941.7909,-20467.8701 1392.3545,-20467.8701 1634.3869,-20467.8701"/>
<polygon fill="#000000" stroke="#000000" points="1634.686,-20471.3702 1644.686,-20467.8701 1634.686,-20464.3702 1634.686,-20471.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out] -->
<g id="node264" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-11134.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="6813.1927" y="-11138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="7183.1927" y="-11123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,Double :: String :: Long :: Boolean :: shapeless.HNil,Out] -->
<g id="edge536" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,Double :: String :: Long :: Boolean :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M7717.8208,-11134.8701C7717.986,-11134.8701 7718.1512,-11134.8701 7718.3163,-11134.8701"/>
<polygon fill="#000000" stroke="#000000" points="7715.7486,-11138.3702 7725.7485,-11134.8701 7715.7485,-11131.3702 7715.7486,-11138.3702"/>
</g>
<!-- (=&gt; monocle.LensPolyExample.Semi.type) =&gt; ?{def q_=: ?} -->
<g id="node265" class="node">
<title>(=&gt; monocle.LensPolyExample.Semi.type) =&gt; ?{def q_=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-20539.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="327.8032" y="-20543.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; monocle.LensPolyExample.Semi.type) =&gt; ?{def q_=: ?}</text>
<text text-anchor="middle" x="497.8032" y="-20528.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- monocle.function.Each[scala.collection.immutable.Vector[Int],A] -->
<g id="node266" class="node">
<title>monocle.function.Each[scala.collection.immutable.Vector[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-20611.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="317.3032" y="-20615.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[scala.collection.immutable.Vector[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-20600.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 24ms</text>
</g>
<!-- shapeless.Generic.Aux[scala.collection.immutable.Vector[Int],SGen] -->
<g id="node326" class="node">
<title>shapeless.Generic.Aux[scala.collection.immutable.Vector[Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-20611.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="1609.6015" y="-20615.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scala.collection.immutable.Vector[Int],SGen]</text>
<text text-anchor="middle" x="1799.1015" y="-20600.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 22ms</text>
</g>
<!-- monocle.function.Each[scala.collection.immutable.Vector[Int],A]&#45;&gt;shapeless.Generic.Aux[scala.collection.immutable.Vector[Int],SGen] -->
<g id="edge286" class="edge">
<title>monocle.function.Each[scala.collection.immutable.Vector[Int],A]&#45;&gt;shapeless.Generic.Aux[scala.collection.immutable.Vector[Int],SGen]</title>
<path fill="none" stroke="#000000" d="M764.6738,-20611.8701C981.4738,-20611.8701 1286.741,-20611.8701 1509.4499,-20611.8701"/>
<polygon fill="#000000" stroke="#000000" points="1509.6595,-20615.3702 1519.6595,-20611.8701 1509.6594,-20608.3702 1509.6595,-20615.3702"/>
</g>
<!-- shapeless.ops.coproduct.Selector[shapeless.CNil,Boolean] -->
<g id="node267" class="node">
<title>shapeless.ops.coproduct.Selector[shapeless.CNil,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-20683.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="4614.8434" y="-20687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Selector[shapeless.CNil,Boolean]</text>
<text text-anchor="middle" x="4774.3434" y="-20672.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[Option[Unit]] -->
<g id="node268" class="node">
<title>org.scalactic.Equality[Option[Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-20755.8701" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="398.8032" y="-20759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[Unit]]</text>
<text text-anchor="middle" x="497.8032" y="-20744.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 16ms</text>
</g>
<!-- scalaz.Equal[Option[Unit]] -->
<g id="node495" class="node">
<title>scalaz.Equal[Option[Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-20755.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="1725.1015" y="-20759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[Unit]]</text>
<text text-anchor="middle" x="1799.1015" y="-20744.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 12ms</text>
</g>
<!-- org.scalactic.Equality[Option[Unit]]&#45;&gt;scalaz.Equal[Option[Unit]] -->
<g id="edge44" class="edge">
<title>org.scalactic.Equality[Option[Unit]]&#45;&gt;scalaz.Equal[Option[Unit]]</title>
<path fill="none" stroke="#000000" d="M649.3061,-20755.8701C908.4279,-20755.8701 1432.0107,-20755.8701 1672.7687,-20755.8701"/>
<polygon fill="#000000" stroke="#000000" points="1672.9664,-20759.3702 1682.9664,-20755.8701 1672.9664,-20752.3702 1672.9664,-20759.3702"/>
</g>
<!-- (=&gt; scalaz.Validation[String,?X]) =&gt; scalaz.Validation[E,A] -->
<g id="node269" class="node">
<title>(=&gt; scalaz.Validation[String,?X]) =&gt; scalaz.Validation[E,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-20827.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="330.8032" y="-20831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scalaz.Validation[String,?X]) =&gt; scalaz.Validation[E,A]</text>
<text text-anchor="middle" x="497.8032" y="-20816.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Functor[F$macro$36] -->
<g id="node270" class="node">
<title>scalaz.Functor[F$macro$36]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-20899.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-20903.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$36]</text>
<text text-anchor="middle" x="497.8032" y="-20888.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[CoproductExample.this.ISB,Int] -->
<g id="node271" class="node">
<title>shapeless.ops.coproduct.Inject[CoproductExample.this.ISB,Int]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-18235.8701" rx="257.2738" ry="26.7407"/>
<text text-anchor="start" x="323.8032" y="-18239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Inject[CoproductExample.this.ISB,Int]</text>
<text text-anchor="middle" x="497.8032" y="-18224.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[CoproductExample.this.ISB,Int]&#45;&gt;shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Int] -->
<g id="edge566" class="edge">
<title>shapeless.ops.coproduct.Inject[CoproductExample.this.ISB,Int]&#45;&gt;shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Int]</title>
<path fill="none" stroke="#000000" d="M755.2865,-18235.8701C967.8777,-18235.8701 1270.0627,-18235.8701 1494.6284,-18235.8701"/>
<polygon fill="#000000" stroke="#000000" points="1494.9271,-18239.3702 1504.9271,-18235.8701 1494.9271,-18232.3702 1494.9271,-18239.3702"/>
</g>
<!-- monocle.LensPolyExample.Foo.type =&gt; ?{def q_=: ?} -->
<g id="node272" class="node">
<title>monocle.LensPolyExample.Foo.type =&gt; ?{def q_=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-20971.8701" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="346.3032" y="-20975.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.LensPolyExample.Foo.type =&gt; ?{def q_=: ?}</text>
<text text-anchor="middle" x="497.8032" y="-20960.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- SymbolicSyntaxExample.this.Store =&gt; ?{def ===: ?} -->
<g id="node274" class="node">
<title>SymbolicSyntaxExample.this.Store =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-21043.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="348.8032" y="-21047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SymbolicSyntaxExample.this.Store =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="497.8032" y="-21032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Index[String ==&gt;&gt; Int,String,A] -->
<g id="node275" class="node">
<title>monocle.function.Index[String ==&gt;&gt; Int,String,A]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-8000.8701" rx="208.693" ry="26.7407"/>
<text text-anchor="start" x="4634.8434" y="-8004.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[String ==&gt;&gt; Int,String,A]</text>
<text text-anchor="middle" x="4774.3434" y="-7989.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Index[String ==&gt;&gt; Int,String,A]&#45;&gt;scalaz.Order[String] -->
<g id="edge412" class="edge">
<title>monocle.function.Index[String ==&gt;&gt; Int,String,A]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M4980.512,-8005.1608C5114.6978,-8009.6002 5293.3226,-8018.6102 5450.3374,-8036.8701 5636.5115,-8058.5209 5852.2486,-8101.9988 5967.2591,-8126.6757"/>
<polygon fill="#000000" stroke="#000000" points="5966.5427,-8130.1016 5977.0554,-8128.7844 5968.0159,-8123.2583 5966.5427,-8130.1016"/>
</g>
<!-- String(&#39;abc&#39;) =&gt; ?{def failure: ?} -->
<g id="node276" class="node">
<title>String(&#39;abc&#39;) =&gt; ?{def failure: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-21115.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="408.3032" y="-21119.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;abc&#39;) =&gt; ?{def failure: ?}</text>
<text text-anchor="middle" x="497.8032" y="-21104.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- Int(0) =&gt; monocle.refined.IntBits -->
<g id="node277" class="node">
<title>Int(0) =&gt; monocle.refined.IntBits</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-6506.8701" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="405.3032" y="-6510.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(0) =&gt; monocle.refined.IntBits</text>
<text text-anchor="middle" x="497.8032" y="-6495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 383ms</text>
</g>
<!-- Int(0) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge476" class="edge">
<title>Int(0) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M631.0534,-6516.3392C761.3225,-6522.3632 946.9703,-6521.2475 995.6063,-6470.8701 1012.2873,-6453.5919 990.5864,-6275.051 1003.6063,-6254.8701 1157.3837,-6016.514 1500.6262,-5916.2685 1681.8477,-5878.7003"/>
<polygon fill="#000000" stroke="#000000" points="1682.5872,-5882.1216 1691.6837,-5876.6899 1681.1854,-5875.2634 1682.5872,-5882.1216"/>
</g>
<!-- Int(0) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge84" class="edge">
<title>Int(0) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M629.2718,-6496.5782C731.3274,-6488.8152 876.3907,-6478.2746 1003.6063,-6470.8701 1186.4295,-6460.2289 1393.0452,-6450.9612 1549.8794,-6444.4947"/>
<polygon fill="#000000" stroke="#000000" points="1550.2894,-6447.9809 1560.1371,-6444.0728 1550.0016,-6440.9868 1550.2894,-6447.9809"/>
</g>
<!-- eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(31)]] -->
<g id="node629" class="node">
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(31)]]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="1799.1015" cy="-6506.8701" rx="371.8763" ry="26.7407"/>
<text text-anchor="start" x="1544.1015" y="-6510.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(31)]]</text>
<text text-anchor="middle" x="1799.1015" y="-6495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 1143ms</text>
</g>
<!-- Int(0) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(31)]] -->
<g id="edge564" class="edge">
<title>Int(0) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(31)]]</title>
<path fill="none" stroke="#000000" d="M640.1641,-6506.8701C825.4054,-6506.8701 1156.2048,-6506.8701 1417.1005,-6506.8701"/>
<polygon fill="#000000" stroke="#000000" points="1417.1296,-6510.3702 1427.1296,-6506.8701 1417.1296,-6503.3702 1417.1296,-6510.3702"/>
</g>
<!-- org.scalactic.Equality[String ==&gt;&gt; Int] -->
<g id="node278" class="node">
<title>org.scalactic.Equality[String ==&gt;&gt; Int]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-8254.8701" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="3238.4729" y="-8258.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[String ==&gt;&gt; Int]</text>
<text text-anchor="middle" x="3346.4729" y="-8243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 23ms</text>
</g>
<!-- scalaz.Equal[String ==&gt;&gt; Int] -->
<g id="node479" class="node">
<title>scalaz.Equal[String ==&gt;&gt; Int]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-8360.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="4691.3434" y="-8364.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[String ==&gt;&gt; Int]</text>
<text text-anchor="middle" x="4774.3434" y="-8349.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 19ms</text>
</g>
<!-- org.scalactic.Equality[String ==&gt;&gt; Int]&#45;&gt;scalaz.Equal[String ==&gt;&gt; Int] -->
<g id="edge515" class="edge">
<title>org.scalactic.Equality[String ==&gt;&gt; Int]&#45;&gt;scalaz.Equal[String ==&gt;&gt; Int]</title>
<path fill="none" stroke="#000000" d="M3490.9487,-8242.0709C3681.3676,-8228.4567 4002.5163,-8217.781 4090.3493,-8290.8701 4102.282,-8300.7997 4086.4407,-8314.9115 4098.3493,-8324.8701 4178.2925,-8391.7223 4471.8805,-8383.2278 4644.747,-8371.6965"/>
<polygon fill="#000000" stroke="#000000" points="4645.1917,-8375.1745 4654.9314,-8371.0044 4644.717,-8368.1906 4645.1917,-8375.1745"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,L2] -->
<g id="edge146" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,L2]</title>
<path fill="none" stroke="#000000" d="M2012.4928,-11048.3921C2174.3032,-11064.1287 2402.2692,-11085.0529 2602.5966,-11098.8701 2719.4732,-11106.9314 2846.8038,-11113.7961 2962.5464,-11119.3014"/>
<polygon fill="#000000" stroke="#000000" points="2962.4821,-11122.8022 2972.6366,-11119.7793 2962.8134,-11115.81 2962.4821,-11122.8022"/>
</g>
<!-- shapeless.ops.hlist.Tupler[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil] -->
<g id="node591" class="node">
<title>shapeless.ops.hlist.Tupler[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-11062.8701" rx="413.815" ry="26.7407"/>
<text text-anchor="start" x="3061.9729" y="-11066.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Tupler[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="3346.4729" y="-11051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A]&#45;&gt;shapeless.ops.hlist.Tupler[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil] -->
<g id="edge181" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A]&#45;&gt;shapeless.ops.hlist.Tupler[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2140.1151,-11034.8038C2378.0951,-11040.3405 2696.5732,-11047.75 2946.5404,-11053.5655"/>
<polygon fill="#000000" stroke="#000000" points="2946.8165,-11057.0728 2956.8952,-11053.8064 2946.9794,-11050.0747 2946.8165,-11057.0728"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),L1] -->
<g id="node662" class="node">
<title>shapeless.Generic.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),L1]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-10990.8701" rx="321.9673" ry="26.7407"/>
<text text-anchor="start" x="3126.9729" y="-10994.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),L1]</text>
<text text-anchor="middle" x="3346.4729" y="-10979.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A]&#45;&gt;shapeless.Generic.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),L1] -->
<g id="edge12" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A]&#45;&gt;shapeless.Generic.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),L1]</title>
<path fill="none" stroke="#000000" d="M2140.1151,-11018.9363C2404.2291,-11012.7916 2767.4921,-11004.3402 3026.2157,-10998.3209"/>
<polygon fill="#000000" stroke="#000000" points="3026.6128,-11001.8127 3036.5287,-10998.081 3026.4499,-10994.8146 3026.6128,-11001.8127"/>
</g>
<!-- org.scalactic.Equality[other.Custom] -->
<g id="node280" class="node">
<title>org.scalactic.Equality[other.Custom]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-21187.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="396.8032" y="-21191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[other.Custom]</text>
<text text-anchor="middle" x="497.8032" y="-21176.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[other.Custom] -->
<g id="node622" class="node">
<title>scalaz.Equal[other.Custom]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-21187.8701" rx="118.5882" ry="26.7407"/>
<text text-anchor="start" x="1723.1015" y="-21191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[other.Custom]</text>
<text text-anchor="middle" x="1799.1015" y="-21176.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[other.Custom]&#45;&gt;scalaz.Equal[other.Custom] -->
<g id="edge122" class="edge">
<title>org.scalactic.Equality[other.Custom]&#45;&gt;scalaz.Equal[other.Custom]</title>
<path fill="none" stroke="#000000" d="M652.1893,-21187.8701C911.202,-21187.8701 1428.5362,-21187.8701 1669.7346,-21187.8701"/>
<polygon fill="#000000" stroke="#000000" points="1669.9555,-21191.3702 1679.9555,-21187.8701 1669.9554,-21184.3702 1669.9555,-21191.3702"/>
</g>
<!-- scala.collection.immutable.Set[Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node281" class="node">
<title>scala.collection.immutable.Set[Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-5354.8701" rx="250.1317" ry="26.7407"/>
<text text-anchor="start" x="328.8032" y="-5358.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-5343.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 13ms</text>
</g>
<!-- scala.collection.immutable.Set[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge588" class="edge">
<title>scala.collection.immutable.Set[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M745.2831,-5350.7072C826.4951,-5355.1279 916.2365,-5366.335 995.6063,-5390.8701 1316.4765,-5490.0585 1646.4783,-5737.1148 1758.8563,-5826.1958"/>
<polygon fill="#000000" stroke="#000000" points="1756.8766,-5829.0934 1766.8807,-5832.582 1761.2357,-5823.6163 1756.8766,-5829.0934"/>
</g>
<!-- scala.collection.immutable.Set[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge575" class="edge">
<title>scala.collection.immutable.Set[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M723.263,-5366.5602C836.3795,-5367.102 957.3673,-5357.7528 995.6063,-5318.8701 1006.8425,-5307.4447 1000.5174,-5190.5942 1003.6063,-5174.8701 1191.4926,-4218.4401 1685.2661,-3117.9121 1782.3835,-2906.8598"/>
<polygon fill="#000000" stroke="#000000" points="1785.5692,-2908.3094 1786.5778,-2897.7627 1779.2123,-2905.3785 1785.5692,-2908.3094"/>
</g>
<!-- scala.collection.immutable.Set[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge312" class="edge">
<title>scala.collection.immutable.Set[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M720.0114,-5367.2924C834.5309,-5368.3234 957.9532,-5359.2141 995.6063,-5318.8701 1007.3762,-5306.2591 991.6675,-2847.3212 1003.6063,-2834.8701 1194.9547,-2635.3108 1572.7996,-2725.569 1728.9921,-2774.6228"/>
<polygon fill="#000000" stroke="#000000" points="1728.3649,-2778.0959 1738.9554,-2777.7907 1730.4861,-2771.425 1728.3649,-2778.0959"/>
</g>
<!-- monocle.function.Empty[List[Nothing]] -->
<g id="node282" class="node">
<title>monocle.function.Empty[List[Nothing]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-21259.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="387.8032" y="-21263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[List[Nothing]]</text>
<text text-anchor="middle" x="497.8032" y="-21248.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,Double :: String :: Long :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: Boolean :: Char :: Int :: shapeless.HNil,String :: Long :: shapeless.HNil,Out] -->
<g id="edge413" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,Double :: String :: Long :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: Boolean :: Char :: Int :: shapeless.HNil,String :: Long :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M8752.809,-9982.8701C8780.202,-9982.8701 8807.7553,-9982.8701 8835.1826,-9982.8701"/>
<polygon fill="#000000" stroke="#000000" points="8835.2812,-9986.3702 8845.2812,-9982.8701 8835.2811,-9979.3702 8835.2812,-9986.3702"/>
</g>
<!-- monocle.function.Cons1[Int :: String :: Boolean :: shapeless.HNil,H,T] -->
<g id="node284" class="node">
<title>monocle.function.Cons1[Int :: String :: Boolean :: shapeless.HNil,H,T]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-13456.8701" rx="286.2565" ry="26.7407"/>
<text text-anchor="start" x="303.3032" y="-13460.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons1[Int :: String :: Boolean :: shapeless.HNil,H,T]</text>
<text text-anchor="middle" x="497.8032" y="-13445.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 22ms</text>
</g>
<!-- monocle.function.Cons1[Int :: String :: Boolean :: shapeless.HNil,H,T]&#45;&gt;shapeless.ops.hlist.Prepend.Aux[Int :: shapeless.HNil,String :: Boolean :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil] -->
<g id="edge580" class="edge">
<title>monocle.function.Cons1[Int :: String :: Boolean :: shapeless.HNil,H,T]&#45;&gt;shapeless.ops.hlist.Prepend.Aux[Int :: shapeless.HNil,String :: Boolean :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M772.5822,-13464.4717C935.1422,-13468.9689 1145.3425,-13474.784 1333.1556,-13479.9798"/>
<polygon fill="#000000" stroke="#000000" points="1333.1221,-13483.4801 1343.2151,-13480.2581 1333.3157,-13476.4828 1333.1221,-13483.4801"/>
</g>
<!-- shapeless.ops.hlist.IsHCons.Aux[Int :: String :: Boolean :: shapeless.HNil,H,T] -->
<g id="node441" class="node">
<title>shapeless.ops.hlist.IsHCons.Aux[Int :: String :: Boolean :: shapeless.HNil,H,T]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-13420.8701" rx="317.4819" ry="26.7407"/>
<text text-anchor="start" x="1582.6015" y="-13424.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.IsHCons.Aux[Int :: String :: Boolean :: shapeless.HNil,H,T]</text>
<text text-anchor="middle" x="1799.1015" y="-13409.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- monocle.function.Cons1[Int :: String :: Boolean :: shapeless.HNil,H,T]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[Int :: String :: Boolean :: shapeless.HNil,H,T] -->
<g id="edge326" class="edge">
<title>monocle.function.Cons1[Int :: String :: Boolean :: shapeless.HNil,H,T]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[Int :: String :: Boolean :: shapeless.HNil,H,T]</title>
<path fill="none" stroke="#000000" d="M772.5822,-13449.2684C981.5314,-13443.4879 1269.1907,-13435.5299 1486.846,-13429.5085"/>
<polygon fill="#000000" stroke="#000000" points="1487.2576,-13432.9986 1497.157,-13429.2233 1487.064,-13426.0012 1487.2576,-13432.9986"/>
</g>
<!-- shapeless.Generic.Aux[scalaz.Tree[Int],SGen] -->
<g id="node285" class="node">
<title>shapeless.Generic.Aux[scalaz.Tree[Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-21331.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="1672.6015" y="-21335.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scalaz.Tree[Int],SGen]</text>
<text text-anchor="middle" x="1799.1015" y="-21320.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- org.scalactic.Equality[(Int, scalaz.Tree[Int])] -->
<g id="node286" class="node">
<title>org.scalactic.Equality[(Int, scalaz.Tree[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-8614.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="1677.1015" y="-8618.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(Int, scalaz.Tree[Int])]</text>
<text text-anchor="middle" x="1799.1015" y="-8603.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scalaz.Equal[(Int, scalaz.Tree[Int])] -->
<g id="node724" class="node">
<title>scalaz.Equal[(Int, scalaz.Tree[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-8614.8701" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="3248.9729" y="-8618.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, scalaz.Tree[Int])]</text>
<text text-anchor="middle" x="3346.4729" y="-8603.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalactic.Equality[(Int, scalaz.Tree[Int])]&#45;&gt;scalaz.Equal[(Int, scalaz.Tree[Int])] -->
<g id="edge206" class="edge">
<title>org.scalactic.Equality[(Int, scalaz.Tree[Int])]&#45;&gt;scalaz.Equal[(Int, scalaz.Tree[Int])]</title>
<path fill="none" stroke="#000000" d="M1983.0642,-8614.8701C2289.2067,-8614.8701 2898.0818,-8614.8701 3187.0878,-8614.8701"/>
<polygon fill="#000000" stroke="#000000" points="3187.2328,-8618.3702 3197.2327,-8614.8701 3187.2327,-8611.3702 3187.2328,-8618.3702"/>
</g>
<!-- monocle.function.Each[shapeless.HNil,Any] -->
<g id="node287" class="node">
<title>monocle.function.Each[shapeless.HNil,Any]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-14761.8701" rx="184.6098" ry="26.7407"/>
<text text-anchor="start" x="4651.8434" y="-14765.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[shapeless.HNil,Any]</text>
<text text-anchor="middle" x="4774.3434" y="-14750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- monocle.function.Each[shapeless.HNil,Any]&#45;&gt;shapeless.Generic.Aux[shapeless.HNil,SGen] -->
<g id="edge232" class="edge">
<title>monocle.function.Each[shapeless.HNil,Any]&#45;&gt;shapeless.Generic.Aux[shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M4959.0776,-14761.8701C5196.5846,-14761.8701 5607.3697,-14761.8701 5851.2391,-14761.8701"/>
<polygon fill="#000000" stroke="#000000" points="5851.2831,-14765.3702 5861.2831,-14761.8701 5851.283,-14758.3702 5851.2831,-14765.3702"/>
</g>
<!-- monocle.function.Reverse[String,A] -->
<g id="node288" class="node">
<title>monocle.function.Reverse[String,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-13240.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="398.3032" y="-13244.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[String,A]</text>
<text text-anchor="middle" x="497.8032" y="-13229.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[String,A] -->
<g id="node549" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[String,A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-13276.8701" rx="174.8109" ry="26.7407"/>
<text text-anchor="start" x="1683.6015" y="-13280.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[String,A]</text>
<text text-anchor="middle" x="1799.1015" y="-13265.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Reverse[String,A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[String,A] -->
<g id="edge273" class="edge">
<title>monocle.function.Reverse[String,A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[String,A]</title>
<path fill="none" stroke="#000000" d="M648.0317,-13245.0261C888.2189,-13251.6708 1357.941,-13264.6655 1616.9123,-13271.8299"/>
<polygon fill="#000000" stroke="#000000" points="1617.0848,-13275.3359 1627.1778,-13272.1138 1617.2784,-13268.3385 1617.0848,-13275.3359"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[String,A] -->
<g id="node760" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[String,A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-13204.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="1681.6015" y="-13208.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[String,A]</text>
<text text-anchor="middle" x="1799.1015" y="-13193.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- monocle.function.Reverse[String,A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[String,A] -->
<g id="edge16" class="edge">
<title>monocle.function.Reverse[String,A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[String,A]</title>
<path fill="none" stroke="#000000" d="M648.0317,-13236.714C887.3116,-13230.0944 1354.3956,-13217.1727 1613.9685,-13209.9917"/>
<polygon fill="#000000" stroke="#000000" points="1614.3605,-13213.4823 1624.2599,-13209.707 1614.1669,-13206.485 1614.3605,-13213.4823"/>
</g>
<!-- org.scalactic.Equality[scalaz.Validation[String,Int]] -->
<g id="node289" class="node">
<title>org.scalactic.Equality[scalaz.Validation[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-7928.8701" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="3205.4729" y="-7932.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scalaz.Validation[String,Int]]</text>
<text text-anchor="middle" x="3346.4729" y="-7917.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scalaz.Equal[scalaz.Validation[String,Int]] -->
<g id="node399" class="node">
<title>scalaz.Equal[scalaz.Validation[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-7928.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="4658.3434" y="-7932.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Validation[String,Int]]</text>
<text text-anchor="middle" x="4774.3434" y="-7917.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Validation[String,Int]]&#45;&gt;scalaz.Equal[scalaz.Validation[String,Int]] -->
<g id="edge534" class="edge">
<title>org.scalactic.Equality[scalaz.Validation[String,Int]]&#45;&gt;scalaz.Equal[scalaz.Validation[String,Int]]</title>
<path fill="none" stroke="#000000" d="M3557.5441,-7928.8701C3836.4351,-7928.8701 4323.3053,-7928.8701 4588.7845,-7928.8701"/>
<polygon fill="#000000" stroke="#000000" points="4588.9148,-7932.3702 4598.9148,-7928.8701 4588.9148,-7925.3702 4588.9148,-7932.3702"/>
</g>
<!-- scalaz.Functor[F$macro$27] -->
<g id="node290" class="node">
<title>scalaz.Functor[F$macro$27]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-21403.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-21407.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$27]</text>
<text text-anchor="middle" x="497.8032" y="-21392.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Double, Int)]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge241" class="edge">
<title>scalaz.Equal[(Char, Boolean, String, Double, Int)]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M4942.483,-7152.5443C5119.5848,-7164.9292 5382.1279,-7170.1926 5450.3374,-7100.8701 5467.1817,-7083.751 5441.5586,-6902.0532 5458.3374,-6884.8701 5594.8941,-6745.0235 5854.6155,-6793.0213 5979.2792,-6826.9986"/>
<polygon fill="#000000" stroke="#000000" points="5978.5334,-6830.4238 5989.1051,-6829.7242 5980.4045,-6823.6785 5978.5334,-6830.4238"/>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Double, Int)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge302" class="edge">
<title>scalaz.Equal[(Char, Boolean, String, Double, Int)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M4973.5053,-7143.999C5108.2717,-7149.6766 5290.2196,-7159.0011 5450.3374,-7172.8701 5627.6943,-7188.2322 5833.5743,-7214.9223 5951.9731,-7231.1341"/>
<polygon fill="#000000" stroke="#000000" points="5951.7166,-7234.6317 5962.0997,-7232.5244 5952.6687,-7227.6967 5951.7166,-7234.6317"/>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Double, Int)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge48" class="edge">
<title>scalaz.Equal[(Char, Boolean, String, Double, Int)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M4944.0129,-7121.5371C5120.6657,-7109.6736 5381.1223,-7105.0754 5450.3374,-7172.8701 5467.53,-7189.7098 5444.3371,-7261.2958 5458.3374,-7280.8701 5575.0815,-7444.0925 5819.6106,-7502.3546 5954.7176,-7522.5718"/>
<polygon fill="#000000" stroke="#000000" points="5954.2513,-7526.0408 5964.6515,-7524.0192 5955.2607,-7519.1139 5954.2513,-7526.0408"/>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Double, Int)]&#45;&gt;scalaz.Equal[Double] -->
<g id="edge134" class="edge">
<title>scalaz.Equal[(Char, Boolean, String, Double, Int)]&#45;&gt;scalaz.Equal[Double]</title>
<path fill="none" stroke="#000000" d="M4943.0462,-7152.362C5119.9262,-7164.4967 5381.5943,-7169.4557 5450.3374,-7100.8701 5473.0257,-7078.2338 5435.7356,-6979.5926 5458.3374,-6956.8701 5524.7001,-6890.153 5798.382,-6900.4386 5948.9821,-6911.7195"/>
<polygon fill="#000000" stroke="#000000" points="5948.9265,-6915.2254 5959.1641,-6912.4977 5949.46,-6908.2457 5948.9265,-6915.2254"/>
</g>
<!-- scalaz.Equal[(Char, Boolean, String, Double, Int)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge45" class="edge">
<title>scalaz.Equal[(Char, Boolean, String, Double, Int)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4940.8753,-7120.9536C5118.3493,-7108.1247 5382.9388,-7102.2503 5450.3374,-7172.8701 5462.0748,-7185.1683 5449.98,-8382.0658 5458.3374,-8396.8701 5570.4523,-8595.468 5840.5179,-8698.4088 5973.2459,-8738.4857"/>
<polygon fill="#000000" stroke="#000000" points="5972.3647,-8741.8751 5982.9478,-8741.3769 5974.3638,-8735.1667 5972.3647,-8741.8751"/>
</g>
<!-- String(&#39;first_name&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node292" class="node">
<title>String(&#39;first_name&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-21475.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="399.8032" y="-21479.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;first_name&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-21464.6701" font-family="Times,serif" font-size="14.00" fill="#000000">21 times = 27ms</text>
</g>
<!-- this.Out =&gt; ?{def shouldEqual: ?} -->
<g id="node293" class="node">
<title>this.Out =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-1970.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="402.8032" y="-1974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">this.Out =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-1959.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- this.Out =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge278" class="edge">
<title>this.Out =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M633.4605,-1961.0308C763.842,-1954.9016 947.9235,-1956.1083 995.6063,-2006.8701 1011.3542,-2023.6347 987.6339,-2818.3192 1003.6063,-2834.8701 1193.5546,-3031.6964 1565.0728,-2945.7806 1724.0326,-2896.6014"/>
<polygon fill="#000000" stroke="#000000" points="1725.2368,-2899.892 1733.734,-2893.5636 1723.145,-2893.2118 1725.2368,-2899.892"/>
</g>
<!-- this.Out =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge291" class="edge">
<title>this.Out =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M621.7461,-1956.7321C726.1458,-1950.1009 877.0073,-1953.1666 995.6063,-2006.8701 1384.6154,-2183.0194 1693.7954,-2633.5585 1776.9774,-2763.3728"/>
<polygon fill="#000000" stroke="#000000" points="1774.2488,-2765.6039 1782.574,-2772.157 1780.1525,-2761.8426 1774.2488,-2765.6039"/>
</g>
<!-- Char(&#39;x&#39;) =&gt; ?{def applyLens: ?} -->
<g id="node294" class="node">
<title>Char(&#39;x&#39;) =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-5642.8701" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="407.3032" y="-5646.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Char(&#39;x&#39;) =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-5631.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 15ms</text>
</g>
<!-- Char(&#39;x&#39;) =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge123" class="edge">
<title>Char(&#39;x&#39;) =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M635.209,-5647.3314C735.5054,-5651.9164 874.5207,-5661.0293 995.6063,-5678.8701 1257.4168,-5717.4452 1560.743,-5794.3558 1708.6369,-5833.9872"/>
<polygon fill="#000000" stroke="#000000" points="1708.0171,-5837.4447 1718.5828,-5836.6591 1709.8333,-5830.6844 1708.0171,-5837.4447"/>
</g>
<!-- ((Int, Int)) =&gt; ?{def shouldEqual: ?} -->
<g id="node295" class="node">
<title>((Int, Int)) =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-1898.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="396.8032" y="-1902.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Int)) =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-1887.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- ((Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge344" class="edge">
<title>((Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M640.515,-1888.7013C770.3977,-1882.9467 948.7956,-1884.9981 995.6063,-1934.8701 1012.7164,-1953.099 986.2521,-2816.8735 1003.6063,-2834.8701 1193.4786,-3031.7698 1565.0382,-2945.814 1724.0208,-2896.6128"/>
<polygon fill="#000000" stroke="#000000" points="1725.227,-2899.9027 1733.7236,-2893.5736 1723.1346,-2893.2227 1725.227,-2899.9027"/>
</g>
<!-- ((Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge581" class="edge">
<title>((Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M623.6678,-1883.3267C728.3895,-1876.0044 878.6909,-1878.8356 995.6063,-1934.8701 1401.4385,-2129.3748 1702.4863,-2626.3854 1779.6982,-2763.4168"/>
<polygon fill="#000000" stroke="#000000" points="1776.7243,-2765.2697 1784.6645,-2772.2843 1782.8317,-2761.8492 1776.7243,-2765.2697"/>
</g>
<!-- org.scalactic.Equality[Option[Double]] -->
<g id="node296" class="node">
<title>org.scalactic.Equality[Option[Double]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-6848.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="3239.4729" y="-6852.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[Double]]</text>
<text text-anchor="middle" x="3346.4729" y="-6837.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[Option[Double]] -->
<g id="node381" class="node">
<title>scalaz.Equal[Option[Double]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-6848.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="4692.3434" y="-6852.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[Double]]</text>
<text text-anchor="middle" x="4774.3434" y="-6837.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalactic.Equality[Option[Double]]&#45;&gt;scalaz.Equal[Option[Double]] -->
<g id="edge65" class="edge">
<title>org.scalactic.Equality[Option[Double]]&#45;&gt;scalaz.Equal[Option[Double]]</title>
<path fill="none" stroke="#000000" d="M3509.2248,-6848.8701C3792.6324,-6848.8701 4371.7596,-6848.8701 4636.6138,-6848.8701"/>
<polygon fill="#000000" stroke="#000000" points="4636.6736,-6852.3702 4646.6736,-6848.8701 4636.6736,-6845.3702 4636.6736,-6852.3702"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[String :: Boolean :: shapeless.HNil,shapeless._0,this.Out,(this.Out, String :: Boolean :: shapeless.HNil)] -->
<g id="node297" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[String :: Boolean :: shapeless.HNil,shapeless._0,this.Out,(this.Out, String :: Boolean :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-16183.8701" rx="548.9298" ry="26.7407"/>
<text text-anchor="start" x="2966.4729" y="-16187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[String :: Boolean :: shapeless.HNil,shapeless._0,this.Out,(this.Out, String :: Boolean :: shapeless.HNil)]</text>
<text text-anchor="middle" x="3346.4729" y="-16172.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- x$2.type =&gt; ?{def toLower: ?} -->
<g id="node298" class="node">
<title>x$2.type =&gt; ?{def toLower: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-21547.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="411.8032" y="-21551.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$2.type =&gt; ?{def toLower: ?}</text>
<text text-anchor="middle" x="497.8032" y="-21536.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[Unit] -->
<g id="node299" class="node">
<title>scalaz.Equal[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-20755.8701" rx="83.3772" ry="26.7407"/>
<text text-anchor="start" x="3295.4729" y="-20759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Unit]</text>
<text text-anchor="middle" x="3346.4729" y="-20744.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 5ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[CoproductExample.this.ISB,Boolean] -->
<g id="node300" class="node">
<title>shapeless.ops.coproduct.Inject[CoproductExample.this.ISB,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-21619.8701" rx="278.7002" ry="26.7407"/>
<text text-anchor="start" x="308.8032" y="-21623.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Inject[CoproductExample.this.ISB,Boolean]</text>
<text text-anchor="middle" x="497.8032" y="-21608.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 25ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Boolean] -->
<g id="node508" class="node">
<title>shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-21619.8701" rx="315.2393" ry="26.7407"/>
<text text-anchor="start" x="1584.1015" y="-21623.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Boolean]</text>
<text text-anchor="middle" x="1799.1015" y="-21608.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 17ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[CoproductExample.this.ISB,Boolean]&#45;&gt;shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Boolean] -->
<g id="edge282" class="edge">
<title>shapeless.ops.coproduct.Inject[CoproductExample.this.ISB,Boolean]&#45;&gt;shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Boolean]</title>
<path fill="none" stroke="#000000" d="M776.565,-21619.8701C980.9082,-21619.8701 1258.9268,-21619.8701 1473.4886,-21619.8701"/>
<polygon fill="#000000" stroke="#000000" points="1473.6573,-21623.3702 1483.6573,-21619.8701 1473.6573,-21616.3702 1473.6573,-21623.3702"/>
</g>
<!-- scalaz.Equal[LensMonoExample.this.Person] -->
<g id="node301" class="node">
<title>scalaz.Equal[LensMonoExample.this.Person]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-21691.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="1674.1015" y="-21695.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[LensMonoExample.this.Person]</text>
<text text-anchor="middle" x="1799.1015" y="-21680.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 4ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[scalaz.Tree[Int],A]&#45;&gt;shapeless.Generic.Aux[scalaz.Tree[Int],L1] -->
<g id="edge318" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[scalaz.Tree[Int],A]&#45;&gt;shapeless.Generic.Aux[scalaz.Tree[Int],L1]</title>
<path fill="none" stroke="#000000" d="M2013.444,-16543.8701C2316.853,-16543.8701 2866.8101,-16543.8701 3156.3941,-16543.8701"/>
<polygon fill="#000000" stroke="#000000" points="3156.5849,-16547.3702 3166.5848,-16543.8701 3156.5848,-16540.3702 3156.5849,-16547.3702"/>
</g>
<!-- shapeless.ops.hlist.Init[Boolean :: shapeless.HNil] -->
<g id="node576" class="node">
<title>shapeless.ops.hlist.Init[Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-12304.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="4637.3434" y="-12308.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init[Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="4774.3434" y="-12293.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 7ms</text>
</g>
<!-- shapeless.ops.hlist.Init[String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Init[Boolean :: shapeless.HNil] -->
<g id="edge132" class="edge">
<title>shapeless.ops.hlist.Init[String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Init[Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M3585.8687,-12304.8701C3857.7002,-12304.8701 4297.2742,-12304.8701 4558.7988,-12304.8701"/>
<polygon fill="#000000" stroke="#000000" points="4559.1843,-12308.3702 4569.1843,-12304.8701 4559.1843,-12301.3702 4559.1843,-12308.3702"/>
</g>
<!-- ((Int, scalaz.Tree[Int])) =&gt; ?{def shouldEqual: ?} -->
<g id="node304" class="node">
<title>((Int, scalaz.Tree[Int])) =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-1826.8701" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="361.8032" y="-1830.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, scalaz.Tree[Int])) =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-1815.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- ((Int, scalaz.Tree[Int])) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge360" class="edge">
<title>((Int, scalaz.Tree[Int])) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M681.648,-1815.2167C805.4804,-1811.8523 953.5915,-1818.0781 995.6063,-1862.8701 1014.0786,-1882.5633 984.8702,-2815.4277 1003.6063,-2834.8701 1193.4137,-3031.8323 1565.0088,-2945.8424 1724.0108,-2896.6224"/>
<polygon fill="#000000" stroke="#000000" points="1725.2186,-2899.9119 1733.7148,-2893.5821 1723.1257,-2893.232 1725.2186,-2899.9119"/>
</g>
<!-- ((Int, scalaz.Tree[Int])) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge443" class="edge">
<title>((Int, scalaz.Tree[Int])) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M647.3001,-1808.5894C750.5327,-1802.7107 888.0494,-1808.6659 995.6063,-1862.8701 1417.6524,-2075.5635 1709.139,-2617.0972 1781.5383,-2762.4802"/>
<polygon fill="#000000" stroke="#000000" points="1778.6098,-2764.4538 1786.1808,-2771.8653 1784.8841,-2761.3501 1778.6098,-2764.4538"/>
</g>
<!-- scala.languageFeature.higherKinds -->
<g id="node305" class="node">
<title>scala.languageFeature.higherKinds</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-21763.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="402.3032" y="-21767.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.languageFeature.higherKinds</text>
<text text-anchor="middle" x="497.8032" y="-21752.6701" font-family="Times,serif" font-size="14.00" fill="#000000">34 times = 14ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._5.N,this.Out,(this.Out, Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil)] -->
<g id="node306" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._5.N,this.Out,(this.Out, Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-12376.8701" rx="795.4903" ry="26.7407"/>
<text text-anchor="start" x="1244.6015" y="-12380.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._5.N,this.Out,(this.Out, Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil)]</text>
<text text-anchor="middle" x="1799.1015" y="-12365.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 30ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._5.N,this.Out,(this.Out, Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._4,this.Out,(this.Out, String :: Boolean :: Float :: Char :: Long :: shapeless.HNil)] -->
<g id="edge185" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._5.N,this.Out,(this.Out, Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._4,this.Out,(this.Out, String :: Boolean :: Float :: Char :: Long :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M2594.6012,-12376.8701C2594.7633,-12376.8701 2594.9254,-12376.8701 2595.0876,-12376.8701"/>
<polygon fill="#000000" stroke="#000000" points="2592.3816,-12380.3702 2602.3815,-12376.8701 2592.3815,-12373.3702 2592.3816,-12380.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[String :: Long :: Boolean :: shapeless.HNil,Double :: Boolean :: Char :: Int :: shapeless.HNil,Out] -->
<g id="node307" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[String :: Long :: Boolean :: shapeless.HNil,Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="8260.3382" cy="-10846.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="7890.3382" y="-10850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[String :: Long :: Boolean :: shapeless.HNil,Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="8260.3382" y="-10835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Double :: String :: Long :: Boolean :: shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out] -->
<g id="node475" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Double :: String :: Long :: Boolean :: shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="9337.4836" cy="-10846.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="8967.4836" y="-10850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Double :: String :: Long :: Boolean :: shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="9337.4836" y="-10835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[String :: Long :: Boolean :: shapeless.HNil,Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: String :: Long :: Boolean :: shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out] -->
<g id="edge404" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[String :: Long :: Boolean :: shapeless.HNil,Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: String :: Long :: Boolean :: shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M8794.9663,-10846.8701C8795.1314,-10846.8701 8795.2966,-10846.8701 8795.4618,-10846.8701"/>
<polygon fill="#000000" stroke="#000000" points="8792.894,-10850.3702 8802.894,-10846.8701 8792.894,-10843.3702 8792.894,-10850.3702"/>
</g>
<!-- scalaz.Tree[Int] =&gt; ?{def applyLens: ?} -->
<g id="node308" class="node">
<title>scalaz.Tree[Int] =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-21835.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="387.8032" y="-21839.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Tree[Int] =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-21824.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- shapeless.Generic.Aux[monocle.generic.Example,L] -->
<g id="node309" class="node">
<title>shapeless.Generic.Aux[monocle.generic.Example,L]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-14491.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="1654.6015" y="-14495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[monocle.generic.Example,L]</text>
<text text-anchor="middle" x="1799.1015" y="-14480.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 30ms</text>
</g>
<!-- scalaz.Equal[scala.collection.immutable.Stream[Int]] -->
<g id="node310" class="node">
<title>scalaz.Equal[scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-9046.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="4628.3434" y="-9050.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="4774.3434" y="-9035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 10ms</text>
</g>
<!-- scalaz.Equal[scala.collection.immutable.Stream[Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge271" class="edge">
<title>scalaz.Equal[scala.collection.immutable.Stream[Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4984.0127,-9054.1444C5118.8268,-9054.3209 5296.8453,-9046.1092 5450.3374,-9010.8701 5663.6434,-8961.8987 5897.6294,-8842.4917 5998.5328,-8787.4804"/>
<polygon fill="#000000" stroke="#000000" points="6000.4996,-8790.3939 6007.5892,-8782.5207 5997.1372,-8784.2543 6000.4996,-8790.3939"/>
</g>
<!-- scalaz.Equal[Option[Char]] -->
<g id="node311" class="node">
<title>scalaz.Equal[Option[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-6704.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="4698.8434" y="-6708.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[Char]]</text>
<text text-anchor="middle" x="4774.3434" y="-6693.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 8ms</text>
</g>
<!-- scalaz.Equal[Option[Char]]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge200" class="edge">
<title>scalaz.Equal[Option[Char]]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M4892.2593,-6706.6843C5027.4535,-6709.7986 5255.5282,-6718.215 5450.3374,-6740.8701 5637.8531,-6762.677 5855.3593,-6806.6266 5969.7296,-6831.2062"/>
<polygon fill="#000000" stroke="#000000" points="5969.2865,-6834.691 5979.7996,-6833.3776 5970.7621,-6827.8483 5969.2865,-6834.691"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Out] -->
<g id="edge211" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M5271.4519,-9982.8701C5361.9145,-9982.8701 5456.3468,-9982.8701 5546.9643,-9982.8701"/>
<polygon fill="#000000" stroke="#000000" points="5547.1389,-9986.3702 5557.1388,-9982.8701 5547.1388,-9979.3702 5547.1389,-9986.3702"/>
</g>
<!-- org.scalactic.Equality[(Int, Int)] -->
<g id="node313" class="node">
<title>org.scalactic.Equality[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-8974.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="3259.4729" y="-8978.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(Int, Int)]</text>
<text text-anchor="middle" x="3346.4729" y="-8963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scalaz.Equal[(Int, Int)] -->
<g id="node540" class="node">
<title>scalaz.Equal[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-8974.8701" rx="98.9899" ry="26.7407"/>
<text text-anchor="start" x="4712.3434" y="-8978.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, Int)]</text>
<text text-anchor="middle" x="4774.3434" y="-8963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalactic.Equality[(Int, Int)]&#45;&gt;scalaz.Equal[(Int, Int)] -->
<g id="edge284" class="edge">
<title>org.scalactic.Equality[(Int, Int)]&#45;&gt;scalaz.Equal[(Int, Int)]</title>
<path fill="none" stroke="#000000" d="M3481.1249,-8974.8701C3762.3729,-8974.8701 4407.3927,-8974.8701 4665.0705,-8974.8701"/>
<polygon fill="#000000" stroke="#000000" points="4665.1889,-8978.3702 4675.1888,-8974.8701 4665.1888,-8971.3702 4665.1889,-8978.3702"/>
</g>
<!-- monocle.function.Snoc[scalaz.IList[Int],A] -->
<g id="node314" class="node">
<title>monocle.function.Snoc[scalaz.IList[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-21907.8701" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="379.8032" y="-21911.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc[scalaz.IList[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-21896.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Empty[Map[Int,String]] -->
<g id="node315" class="node">
<title>monocle.function.Empty[Map[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-21979.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="381.8032" y="-21983.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[Map[Int,String]]</text>
<text text-anchor="middle" x="497.8032" y="-21968.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Cons[List[Int],Int] -->
<g id="node317" class="node">
<title>monocle.function.Cons[List[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-22051.8701" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="397.3032" y="-22055.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons[List[Int],Int]</text>
<text text-anchor="middle" x="497.8032" y="-22040.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Option[String])]] -->
<g id="node318" class="node">
<title>scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Option[String])]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-15643.8701" rx="283.5996" ry="26.7407"/>
<text text-anchor="start" x="1606.6015" y="-15647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Option[String])]]</text>
<text text-anchor="middle" x="1799.1015" y="-15632.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Option[String])]]&#45;&gt;scalaz.Equal[StateExample.this.Person] -->
<g id="edge53" class="edge">
<title>scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Option[String])]]&#45;&gt;scalaz.Equal[StateExample.this.Person]</title>
<path fill="none" stroke="#000000" d="M2076.1339,-15637.9572C2229.2426,-15633.0258 2422.7205,-15624.0645 2594.5966,-15607.8701 2817.4328,-15586.874 3075.2838,-15546.2464 3223.772,-15521.2471"/>
<polygon fill="#000000" stroke="#000000" points="3224.5545,-15524.6646 3233.8325,-15519.5491 3223.3894,-15517.7623 3224.5545,-15524.6646"/>
</g>
<!-- scala.collection.immutable.Map[String,Int] =&gt; ?{def applyOptional: ?} -->
<g id="node319" class="node">
<title>scala.collection.immutable.Map[String,Int] =&gt; ?{def applyOptional: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-22123.8701" rx="289.4135" ry="26.7407"/>
<text text-anchor="start" x="301.3032" y="-22127.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[String,Int] =&gt; ?{def applyOptional: ?}</text>
<text text-anchor="middle" x="497.8032" y="-22112.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char),Out0] -->
<g id="node409" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char),Out0]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-10702.8701" rx="283.5996" ry="26.7407"/>
<text text-anchor="start" x="3153.9729" y="-10706.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char),Out0]</text>
<text text-anchor="middle" x="3346.4729" y="-10691.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[(Int, Char),A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char),Out0] -->
<g id="edge341" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[(Int, Char),A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char),Out0]</title>
<path fill="none" stroke="#000000" d="M1981.9177,-10639.3766C2254.266,-10652.0491 2768.0102,-10675.9539 3081.5356,-10690.5424"/>
<polygon fill="#000000" stroke="#000000" points="3081.5259,-10694.0456 3091.6778,-10691.0143 3081.8513,-10687.0532 3081.5259,-10694.0456"/>
</g>
<!-- (Int =&gt; (Int =&gt; Int)) =&gt; ?{def applyIso: ?} -->
<g id="node321" class="node">
<title>(Int =&gt; (Int =&gt; Int)) =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-22195.8701" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="379.8032" y="-22199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Int =&gt; (Int =&gt; Int)) =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-22184.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Tupler[Boolean :: Char :: Int :: shapeless.HNil] -->
<g id="node433" class="node">
<title>shapeless.ops.hlist.Tupler[Boolean :: Char :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-11494.8701" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="3164.9729" y="-11498.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Tupler[Boolean :: Char :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="3346.4729" y="-11483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean),A]&#45;&gt;shapeless.ops.hlist.Tupler[Boolean :: Char :: Int :: shapeless.HNil] -->
<g id="edge110" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean),A]&#45;&gt;shapeless.ops.hlist.Tupler[Boolean :: Char :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2015.6148,-11432.515C2175.5818,-11439.6783 2398.6694,-11449.7462 2594.5966,-11458.8701 2761.4468,-11466.6398 2949.1112,-11475.6249 3095.215,-11482.675"/>
<polygon fill="#000000" stroke="#000000" points="3095.0624,-11486.1716 3105.2195,-11483.1579 3095.3999,-11479.1798 3095.0624,-11486.1716"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Char, Boolean),L1] -->
<g id="node509" class="node">
<title>shapeless.Generic.Aux[(Int, Char, Boolean),L1]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-11422.8701" rx="197.0658" ry="26.7407"/>
<text text-anchor="start" x="3214.9729" y="-11426.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Char, Boolean),L1]</text>
<text text-anchor="middle" x="3346.4729" y="-11411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean),A]&#45;&gt;shapeless.Generic.Aux[(Int, Char, Boolean),L1] -->
<g id="edge337" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean),A]&#45;&gt;shapeless.Generic.Aux[(Int, Char, Boolean),L1]</title>
<path fill="none" stroke="#000000" d="M2031.177,-11422.8701C2331.6573,-11422.8701 2850.8354,-11422.8701 3138.8546,-11422.8701"/>
<polygon fill="#000000" stroke="#000000" points="3139.0021,-11426.3702 3149.002,-11422.8701 3139.002,-11419.3702 3139.0021,-11426.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: shapeless.HNil,L2] -->
<g id="node743" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: shapeless.HNil,L2]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-11350.8701" rx="305.4403" ry="26.7407"/>
<text text-anchor="start" x="3138.4729" y="-11354.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: shapeless.HNil,L2]</text>
<text text-anchor="middle" x="3346.4729" y="-11339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: shapeless.HNil,L2] -->
<g id="edge267" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: shapeless.HNil,L2]</title>
<path fill="none" stroke="#000000" d="M2014.6637,-11412.8398C2289.1226,-11400.0691 2763.8984,-11377.9776 3066.205,-11363.9111"/>
<polygon fill="#000000" stroke="#000000" points="3066.612,-11367.396 3076.4385,-11363.4349 3066.2866,-11360.4036 3066.612,-11367.396"/>
</g>
<!-- monocle.function.FilterIndex[scalaz.IList[Int],Int,A] -->
<g id="node323" class="node">
<title>monocle.function.FilterIndex[scalaz.IList[Int],Int,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-22267.8701" rx="214.9209" ry="26.7407"/>
<text text-anchor="start" x="353.8032" y="-22271.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[scalaz.IList[Int],Int,A]</text>
<text text-anchor="middle" x="497.8032" y="-22256.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Field2[(String, Int, Boolean, Double, Long, Char),A] -->
<g id="node324" class="node">
<title>monocle.function.Field2[(String, Int, Boolean, Double, Long, Char),A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-16939.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="302.3032" y="-16943.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field2[(String, Int, Boolean, Double, Long, Char),A]</text>
<text text-anchor="middle" x="497.8032" y="-16928.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- monocle.function.Field2[(String, Int, Boolean, Double, Long, Char),A]&#45;&gt;shapeless.ops.hlist.At.Aux[(String, Int, Boolean, Double, Long, Char),shapeless.nat._1.N,A] -->
<g id="edge38" class="edge">
<title>monocle.function.Field2[(String, Int, Boolean, Double, Long, Char),A]&#45;&gt;shapeless.ops.hlist.At.Aux[(String, Int, Boolean, Double, Long, Char),shapeless.nat._1.N,A]</title>
<path fill="none" stroke="#000000" d="M785.7961,-16939.8701C971.8701,-16939.8701 1216.0863,-16939.8701 1418.142,-16939.8701"/>
<polygon fill="#000000" stroke="#000000" points="1418.3387,-16943.3702 1428.3386,-16939.8701 1418.3386,-16936.3702 1418.3387,-16943.3702"/>
</g>
<!-- Float =&gt; Int -->
<g id="node325" class="node">
<title>Float =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-22339.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="450.8032" y="-22343.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Float =&gt; Int</text>
<text text-anchor="middle" x="497.8032" y="-22328.6701" font-family="Times,serif" font-size="14.00" fill="#000000">57 times = 14ms</text>
</g>
<!-- scalaz.Functor[F$macro$15] -->
<g id="node327" class="node">
<title>scalaz.Functor[F$macro$15]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-22411.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-22415.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$15]</text>
<text text-anchor="middle" x="497.8032" y="-22400.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="node328" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="11491.7745" cy="-9982.8701" rx="492.2927" ry="26.7407"/>
<text text-anchor="start" x="11151.7745" y="-9986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,shapeless.HNil,Out]</text>
<text text-anchor="middle" x="11491.7745" y="-9971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[scala.collection.immutable.Vector[Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge14" class="edge">
<title>scalaz.Equal[scala.collection.immutable.Vector[Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4935.8233,-9318.7431C5076.7541,-9327.9853 5284.1353,-9325.9647 5450.3374,-9259.8701 5713.5533,-9155.1954 5946.1694,-8887.72 6022.8389,-8792.8622"/>
<polygon fill="#000000" stroke="#000000" points="6025.6076,-8795.0042 6029.1421,-8785.0163 6020.1505,-8790.6201 6025.6076,-8795.0042"/>
</g>
<!-- org.scalactic.Equality[Boolean :: String :: Int :: shapeless.HNil] -->
<g id="node330" class="node">
<title>org.scalactic.Equality[Boolean :: String :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-22483.8701" rx="256.8596" ry="26.7407"/>
<text text-anchor="start" x="324.3032" y="-22487.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Boolean :: String :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="497.8032" y="-22472.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scalaz.Equal[Boolean :: String :: Int :: shapeless.HNil] -->
<g id="node375" class="node">
<title>scalaz.Equal[Boolean :: String :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-22483.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="1650.1015" y="-22487.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Boolean :: String :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="1799.1015" y="-22472.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[Boolean :: String :: Int :: shapeless.HNil]&#45;&gt;scalaz.Equal[Boolean :: String :: Int :: shapeless.HNil] -->
<g id="edge246" class="edge">
<title>org.scalactic.Equality[Boolean :: String :: Int :: shapeless.HNil]&#45;&gt;scalaz.Equal[Boolean :: String :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M754.5094,-22483.8701C990.9395,-22483.8701 1338.6643,-22483.8701 1566.9644,-22483.8701"/>
<polygon fill="#000000" stroke="#000000" points="1567.0664,-22487.3702 1577.0664,-22483.8701 1567.0663,-22480.3702 1567.0664,-22487.3702"/>
</g>
<!-- org.scalactic.Equality[Boolean] -->
<g id="node331" class="node">
<title>org.scalactic.Equality[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-7064.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="4688.3434" y="-7068.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Boolean]</text>
<text text-anchor="middle" x="4774.3434" y="-7053.6701" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 77ms</text>
</g>
<!-- org.scalactic.Equality[Boolean]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge202" class="edge">
<title>org.scalactic.Equality[Boolean]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M4907.4888,-7064.8076C5044.3359,-7066.4149 5263.2384,-7073.6373 5450.3374,-7100.8701 5641.4761,-7128.6907 5861.0253,-7188.8966 5973.8353,-7221.9682"/>
<polygon fill="#000000" stroke="#000000" points="5973.1728,-7225.4216 5983.7541,-7224.8869 5975.1488,-7218.7063 5973.1728,-7225.4216"/>
</g>
<!-- shapeless.ops.coproduct.Selector[CoproductExample.this.ISB,Int] -->
<g id="node332" class="node">
<title>shapeless.ops.coproduct.Selector[CoproductExample.this.ISB,Int]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-170.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="317.3032" y="-174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Selector[CoproductExample.this.ISB,Int]</text>
<text text-anchor="middle" x="497.8032" y="-159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 12ms</text>
</g>
<!-- shapeless.ops.coproduct.Selector[CoproductExample.this.ISB,Int]&#45;&gt;shapeless.ops.coproduct.Selector[String :+: Boolean :+: shapeless.CNil,Int] -->
<g id="edge37" class="edge">
<title>shapeless.ops.coproduct.Selector[CoproductExample.this.ISB,Int]&#45;&gt;shapeless.ops.coproduct.Selector[String :+: Boolean :+: shapeless.CNil,Int]</title>
<path fill="none" stroke="#000000" d="M764.6738,-170.8701C973.7833,-170.8701 1265.1949,-170.8701 1485.4455,-170.8701"/>
<polygon fill="#000000" stroke="#000000" points="1485.5498,-174.3702 1495.5498,-170.8701 1485.5498,-167.3702 1485.5498,-174.3702"/>
</g>
<!-- shapeless.Generic.Aux[scalaz.IList[Int],SGen] -->
<g id="node333" class="node">
<title>shapeless.Generic.Aux[scalaz.IList[Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-22555.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="1672.1015" y="-22559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scalaz.IList[Int],SGen]</text>
<text text-anchor="middle" x="1799.1015" y="-22544.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 24ms</text>
</g>
<!-- shapeless.ops.hlist.Tupler[Int :: Char :: Boolean :: shapeless.HNil] -->
<g id="node334" class="node">
<title>shapeless.ops.hlist.Tupler[Int :: Char :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-11206.8701" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="3164.9729" y="-11210.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Tupler[Int :: Char :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="3346.4729" y="-11195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Option[Double] =&gt; ?{def shouldEqual: ?} -->
<g id="node335" class="node">
<title>Option[Double] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-1754.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="381.8032" y="-1758.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Double] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-1743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Option[Double] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge159" class="edge">
<title>Option[Double] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M658.3947,-1743.9596C786.2561,-1739.2068 950.9374,-1743.2215 995.6063,-1790.8701 1015.4408,-1812.0276 983.4884,-2813.9819 1003.6063,-2834.8701 1193.3578,-3031.8861 1564.9834,-2945.8668 1724.0022,-2896.6308"/>
<polygon fill="#000000" stroke="#000000" points="1725.2114,-2899.9197 1733.7071,-2893.5895 1723.1181,-2893.24 1725.2114,-2899.9197"/>
</g>
<!-- Option[Double] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge137" class="edge">
<title>Option[Double] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M627.7342,-1736.8053C732.9988,-1728.3829 881.9626,-1730.9813 995.6063,-1790.8701 1435.377,-2022.6236 1716.9074,-2611.0776 1783.7171,-2762.7616"/>
<polygon fill="#000000" stroke="#000000" points="1780.5929,-2764.353 1787.8066,-2772.1127 1787.0065,-2761.5481 1780.5929,-2764.353"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: String :: Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="node336" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: String :: Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-19243.8701" rx="393.717" ry="26.7407"/>
<text text-anchor="start" x="6912.6927" y="-19247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Boolean :: String :: Int :: shapeless.HNil,shapeless.HNil,Out]</text>
<text text-anchor="middle" x="7183.1927" y="-19232.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Index[scala.collection.immutable.Stream[Int],Int,A] -->
<g id="node337" class="node">
<title>monocle.function.Index[scala.collection.immutable.Stream[Int],Int,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-22627.8701" rx="284.0141" ry="26.7407"/>
<text text-anchor="start" x="304.8032" y="-22631.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[scala.collection.immutable.Stream[Int],Int,A]</text>
<text text-anchor="middle" x="497.8032" y="-22616.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[Option[Int \/ String]] -->
<g id="node338" class="node">
<title>scalaz.Equal[Option[Int \/ String]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-8110.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="3254.4729" y="-8114.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[Int / String]]</text>
<text text-anchor="middle" x="3346.4729" y="-8099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 27ms</text>
</g>
<!-- scalaz.Equal[Int \/ String] -->
<g id="node670" class="node">
<title>scalaz.Equal[Int \/ String]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-8216.8701" rx="108.375" ry="26.7407"/>
<text text-anchor="start" x="4705.8434" y="-8220.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Int / String]</text>
<text text-anchor="middle" x="4774.3434" y="-8205.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 23ms</text>
</g>
<!-- scalaz.Equal[Option[Int \/ String]]&#45;&gt;scalaz.Equal[Int \/ String] -->
<g id="edge416" class="edge">
<title>scalaz.Equal[Option[Int \/ String]]&#45;&gt;scalaz.Equal[Int \/ String]</title>
<path fill="none" stroke="#000000" d="M3474.3362,-8099.2897C3662.0836,-8085.1648 3999.9074,-8071.6101 4090.3493,-8146.8701 4102.282,-8156.7997 4086.4407,-8170.9115 4098.3493,-8180.8701 4181.0549,-8250.0323 4492.425,-8238.5508 4662.2206,-8226.4933"/>
<polygon fill="#000000" stroke="#000000" points="4662.4745,-8229.9842 4672.1963,-8225.7727 4661.9701,-8223.0024 4662.4745,-8229.9842"/>
</g>
<!-- Option[List[Int]] =&gt; ?{def shouldEqual: ?} -->
<g id="node339" class="node">
<title>Option[List[Int]] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-1682.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="378.8032" y="-1686.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[List[Int]] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-1671.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 16ms</text>
</g>
<!-- Option[List[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge442" class="edge">
<title>Option[List[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M661.5889,-1671.8375C788.9886,-1667.2672 951.3195,-1671.6056 995.6063,-1718.8701 1016.8031,-1741.4919 982.1065,-2812.5361 1003.6063,-2834.8701 1193.3091,-3031.933 1564.9613,-2945.8881 1723.9946,-2896.638"/>
<polygon fill="#000000" stroke="#000000" points="1725.2051,-2899.9266 1733.7005,-2893.5959 1723.1114,-2893.247 1725.2051,-2899.9266"/>
</g>
<!-- Option[List[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge436" class="edge">
<title>Option[List[Int]] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M625.8772,-1664.0098C731.5873,-1654.7635 882.1222,-1656.6261 995.6063,-1718.8701 1452.7463,-1969.6028 1723.3511,-2603.5685 1785.3521,-2762.3689"/>
<polygon fill="#000000" stroke="#000000" points="1782.2583,-2764.0719 1789.1341,-2772.1326 1788.7857,-2761.5435 1782.2583,-2764.0719"/>
</g>
<!-- ((Int, Char)) =&gt; ?{def applyIso: ?} -->
<g id="node340" class="node">
<title>((Int, Char)) =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-22699.8701" rx="147.1565" ry="26.7407"/>
<text text-anchor="start" x="401.8032" y="-22703.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Char)) =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-22688.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[Option[Nothing]] -->
<g id="node341" class="node">
<title>scalaz.Equal[Option[Nothing]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-11944.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="3261.9729" y="-11948.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[Nothing]]</text>
<text text-anchor="middle" x="3346.4729" y="-11933.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 263ms</text>
</g>
<!-- scalaz.Equal[Option[Nothing]]&#45;&gt;scalaz.Equal[A] -->
<g id="edge81" class="edge">
<title>scalaz.Equal[Option[Nothing]]&#45;&gt;scalaz.Equal[A]</title>
<path fill="none" stroke="#000000" d="M3476.9722,-11947.2463C3765.7596,-11952.5048 4452.1832,-11965.0039 4690.8438,-11969.3496"/>
<polygon fill="#000000" stroke="#000000" points="4690.7861,-11972.8491 4700.8481,-11969.5318 4690.9136,-11965.8502 4690.7861,-11972.8491"/>
</g>
<!-- scalaz.Functor[F$macro$37] -->
<g id="node342" class="node">
<title>scalaz.Functor[F$macro$37]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-22771.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-22775.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$37]</text>
<text text-anchor="middle" x="497.8032" y="-22760.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[Int :: List[Int] :: shapeless.HNil,SGen] -->
<g id="node343" class="node">
<title>shapeless.Generic.Aux[Int :: List[Int] :: shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-14797.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="3176.4729" y="-14801.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Int :: List[Int] :: shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="3346.4729" y="-14786.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalactic.Equality[Option[Int]] -->
<g id="node344" class="node">
<title>org.scalactic.Equality[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-9190.8701" rx="144.9138" ry="26.7407"/>
<text text-anchor="start" x="3251.9729" y="-9194.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[Int]]</text>
<text text-anchor="middle" x="3346.4729" y="-9179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">30 times = 90ms</text>
</g>
<!-- org.scalactic.Equality[Option[Int]]&#45;&gt;scalaz.Equal[Option[Int]] -->
<g id="edge545" class="edge">
<title>org.scalactic.Equality[Option[Int]]&#45;&gt;scalaz.Equal[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M3491.5739,-9190.8701C3774.0599,-9190.8701 4393.0028,-9190.8701 4654.2294,-9190.8701"/>
<polygon fill="#000000" stroke="#000000" points="4654.506,-9194.3702 4664.506,-9190.8701 4654.5059,-9187.3702 4654.506,-9194.3702"/>
</g>
<!-- shapeless.ops.coproduct.Selector[CoproductExample.this.ISB,Boolean] -->
<g id="node345" class="node">
<title>shapeless.ops.coproduct.Selector[CoproductExample.this.ISB,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-20683.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="302.3032" y="-20687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Selector[CoproductExample.this.ISB,Boolean]</text>
<text text-anchor="middle" x="497.8032" y="-20672.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 26ms</text>
</g>
<!-- shapeless.ops.coproduct.Selector[String :+: Boolean :+: shapeless.CNil,Boolean] -->
<g id="node715" class="node">
<title>shapeless.ops.coproduct.Selector[String :+: Boolean :+: shapeless.CNil,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-20683.8701" rx="324.624" ry="26.7407"/>
<text text-anchor="start" x="1577.6015" y="-20687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Selector[String :+: Boolean :+: shapeless.CNil,Boolean]</text>
<text text-anchor="middle" x="1799.1015" y="-20672.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 14ms</text>
</g>
<!-- shapeless.ops.coproduct.Selector[CoproductExample.this.ISB,Boolean]&#45;&gt;shapeless.ops.coproduct.Selector[String :+: Boolean :+: shapeless.CNil,Boolean] -->
<g id="edge524" class="edge">
<title>shapeless.ops.coproduct.Selector[CoproductExample.this.ISB,Boolean]&#45;&gt;shapeless.ops.coproduct.Selector[String :+: Boolean :+: shapeless.CNil,Boolean]</title>
<path fill="none" stroke="#000000" d="M785.7961,-20683.8701C986.2334,-20683.8701 1254.1355,-20683.8701 1464.133,-20683.8701"/>
<polygon fill="#000000" stroke="#000000" points="1464.4034,-20687.3702 1474.4034,-20683.8701 1464.4033,-20680.3702 1464.4034,-20687.3702"/>
</g>
<!-- shapeless.Generic.Aux[scala.collection.immutable.Map[String,Int],SGen] -->
<g id="node346" class="node">
<title>shapeless.Generic.Aux[scala.collection.immutable.Map[String,Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-22843.8701" rx="297.884" ry="26.7407"/>
<text text-anchor="start" x="1596.6015" y="-22847.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scala.collection.immutable.Map[String,Int],SGen]</text>
<text text-anchor="middle" x="1799.1015" y="-22832.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- (=&gt; ComposeIssueExample.this.B[Nothing,String]) =&gt; ComposeIssueExample.this.B[String,?U] -->
<g id="node347" class="node">
<title>(=&gt; ComposeIssueExample.this.B[Nothing,String]) =&gt; ComposeIssueExample.this.B[String,?U]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-22915.8701" rx="388.8175" ry="26.7407"/>
<text text-anchor="start" x="230.8032" y="-22919.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; ComposeIssueExample.this.B[Nothing,String]) =&gt; ComposeIssueExample.this.B[String,?U]</text>
<text text-anchor="middle" x="497.8032" y="-22904.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Functor[F$macro$21] -->
<g id="node348" class="node">
<title>scalaz.Functor[F$macro$21]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-22987.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-22991.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$21]</text>
<text text-anchor="middle" x="497.8032" y="-22976.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[(String, Int, Boolean, Double, Long, Char)] -->
<g id="node349" class="node">
<title>scalaz.Equal[(String, Int, Boolean, Double, Long, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-6992.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="4618.3434" y="-6996.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(String, Int, Boolean, Double, Long, Char)]</text>
<text text-anchor="middle" x="4774.3434" y="-6981.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 17ms</text>
</g>
<!-- scalaz.Equal[(String, Int, Boolean, Double, Long, Char)]&#45;&gt;scalaz.Equal[Char] -->
<g id="edge234" class="edge">
<title>scalaz.Equal[(String, Int, Boolean, Double, Long, Char)]&#45;&gt;scalaz.Equal[Char]</title>
<path fill="none" stroke="#000000" d="M4961.4518,-7008.834C5136.9302,-7019.3572 5382.2394,-7021.1639 5450.3374,-6956.8701 5473.7486,-6934.7667 5435.0106,-6907.0624 5458.3374,-6884.8701 5599.2241,-6750.835 5854.5859,-6795.1965 5978.3827,-6827.5185"/>
<polygon fill="#000000" stroke="#000000" points="5977.5825,-6830.9272 5988.1461,-6830.1142 5979.3811,-6824.1622 5977.5825,-6830.9272"/>
</g>
<!-- scalaz.Equal[(String, Int, Boolean, Double, Long, Char)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge600" class="edge">
<title>scalaz.Equal[(String, Int, Boolean, Double, Long, Char)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M5003.3055,-6988.5168C5135.2121,-6990.1118 5303.4666,-6999.1577 5450.3374,-7028.8701 5656.004,-7070.4769 5885.9922,-7169.0947 5991.2242,-7217.3352"/>
<polygon fill="#000000" stroke="#000000" points="5989.8599,-7220.5601 6000.4072,-7221.5624 5992.787,-7214.2015 5989.8599,-7220.5601"/>
</g>
<!-- scalaz.Equal[(String, Int, Boolean, Double, Long, Char)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge558" class="edge">
<title>scalaz.Equal[(String, Int, Boolean, Double, Long, Char)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M4956.3645,-6976.1848C5133.073,-6964.46 5384.0582,-6961.1523 5450.3374,-7028.8701 5469.9326,-7048.8905 5442.5245,-7257.7456 5458.3374,-7280.8701 5571.6115,-7446.5195 5817.5468,-7503.798 5953.7971,-7523.2157"/>
<polygon fill="#000000" stroke="#000000" points="5953.4306,-7526.6982 5963.8162,-7524.6034 5954.391,-7519.7644 5953.4306,-7526.6982"/>
</g>
<!-- scalaz.Equal[(String, Int, Boolean, Double, Long, Char)]&#45;&gt;scalaz.Equal[Double] -->
<g id="edge440" class="edge">
<title>scalaz.Equal[(String, Int, Boolean, Double, Long, Char)]&#45;&gt;scalaz.Equal[Double]</title>
<path fill="none" stroke="#000000" d="M4986.3509,-6981.9507C5119.5715,-6974.9973 5295.0111,-6965.6724 5450.3374,-6956.8701 5624.5945,-6946.9949 5827.3035,-6934.6313 5946.6396,-6927.2627"/>
<polygon fill="#000000" stroke="#000000" points="5947.0937,-6930.7414 5956.8588,-6926.6313 5946.6619,-6923.7547 5947.0937,-6930.7414"/>
</g>
<!-- scalaz.Equal[(String, Int, Boolean, Double, Long, Char)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge555" class="edge">
<title>scalaz.Equal[(String, Int, Boolean, Double, Long, Char)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4955.0827,-6975.9465C5132.1662,-6963.8517 5384.7374,-6960.0875 5450.3374,-7028.8701 5463.4508,-7042.6196 5449.0025,-8380.321 5458.3374,-8396.8701 5570.384,-8595.5066 5840.4824,-8698.4288 5973.232,-8738.4935"/>
<polygon fill="#000000" stroke="#000000" points="5972.3525,-8741.8834 5982.9356,-8741.3838 5974.3508,-8735.1747 5972.3525,-8741.8834"/>
</g>
<!-- scalaz.Equal[(String, Int, Boolean, Double, Long, Char)]&#45;&gt;scalaz.Equal[Long] -->
<g id="edge17" class="edge">
<title>scalaz.Equal[(String, Int, Boolean, Double, Long, Char)]&#45;&gt;scalaz.Equal[Long]</title>
<path fill="none" stroke="#000000" d="M5006.37,-6992.8701C5288.9103,-6992.8701 5753.112,-6992.8701 5952.9923,-6992.8701"/>
<polygon fill="#000000" stroke="#000000" points="5953.1762,-6996.3702 5963.1761,-6992.8701 5953.1761,-6989.3702 5953.1762,-6996.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="node350" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="8260.3382" cy="-11350.8701" rx="388.8175" ry="26.7407"/>
<text text-anchor="start" x="7993.3382" y="-11354.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,shapeless.HNil,Out]</text>
<text text-anchor="middle" x="8260.3382" y="-11339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[shapeless.CNil,Float] -->
<g id="node437" class="node">
<title>shapeless.ops.coproduct.Inject[shapeless.CNil,Float]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-12880.8701" rx="214.9209" ry="26.7407"/>
<text text-anchor="start" x="4630.3434" y="-12884.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Inject[shapeless.CNil,Float]</text>
<text text-anchor="middle" x="4774.3434" y="-12869.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Float]&#45;&gt;shapeless.ops.coproduct.Inject[shapeless.CNil,Float] -->
<g id="edge370" class="edge">
<title>shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Float]&#45;&gt;shapeless.ops.coproduct.Inject[shapeless.CNil,Float]</title>
<path fill="none" stroke="#000000" d="M3609.614,-12880.8701C3879.3226,-12880.8701 4294.2902,-12880.8701 4549.248,-12880.8701"/>
<polygon fill="#000000" stroke="#000000" points="4549.3801,-12884.3702 4559.38,-12880.8701 4549.38,-12877.3702 4549.3801,-12884.3702"/>
</g>
<!-- org.scalactic.Equality[(Int, Boolean)] -->
<g id="node353" class="node">
<title>org.scalactic.Equality[(Int, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-7784.8701" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="3244.4729" y="-7788.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(Int, Boolean)]</text>
<text text-anchor="middle" x="3346.4729" y="-7773.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 7ms</text>
</g>
<!-- org.scalactic.Equality[(Int, Boolean)]&#45;&gt;scalaz.Equal[(Int, Boolean)] -->
<g id="edge362" class="edge">
<title>org.scalactic.Equality[(Int, Boolean)]&#45;&gt;scalaz.Equal[(Int, Boolean)]</title>
<path fill="none" stroke="#000000" d="M3502.3394,-7784.8701C3785.6702,-7784.8701 4380.1454,-7784.8701 4643.7243,-7784.8701"/>
<polygon fill="#000000" stroke="#000000" points="4644.1096,-7788.3702 4654.1096,-7784.8701 4644.1096,-7781.3702 4644.1096,-7788.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Long :: shapeless.HNil,String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out] -->
<g id="node354" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Long :: shapeless.HNil,String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-10054.8701" rx="492.2927" ry="26.7407"/>
<text text-anchor="start" x="5709.4787" y="-10058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Long :: shapeless.HNil,String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="6049.4787" y="-10043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[String :: Long :: shapeless.HNil,Double :: Boolean :: Char :: Int :: shapeless.HNil,Out] -->
<g id="node708" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[String :: Long :: shapeless.HNil,Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-10054.8701" rx="492.2927" ry="26.7407"/>
<text text-anchor="start" x="6843.1927" y="-10058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[String :: Long :: shapeless.HNil,Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="7183.1927" y="-10043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Long :: shapeless.HNil,String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[String :: Long :: shapeless.HNil,Double :: Boolean :: Char :: Int :: shapeless.HNil,Out] -->
<g id="edge7" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Long :: shapeless.HNil,String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[String :: Long :: shapeless.HNil,Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M6541.796,-10054.8701C6587.8649,-10054.8701 6634.6021,-10054.8701 6680.762,-10054.8701"/>
<polygon fill="#000000" stroke="#000000" points="6680.9133,-10058.3702 6690.9132,-10054.8701 6680.9132,-10051.3702 6680.9133,-10058.3702"/>
</g>
<!-- monocle.function.Index[String,Int,A] -->
<g id="node355" class="node">
<title>monocle.function.Index[String,Int,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-23059.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="395.3032" y="-23063.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[String,Int,A]</text>
<text text-anchor="middle" x="497.8032" y="-23048.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[Option[(scala.collection.immutable.Vector[Int], Int)]] -->
<g id="node356" class="node">
<title>org.scalactic.Equality[Option[(scala.collection.immutable.Vector[Int], Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-9262.8701" rx="306.3546" ry="26.7407"/>
<text text-anchor="start" x="289.3032" y="-9266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[(scala.collection.immutable.Vector[Int], Int)]]</text>
<text text-anchor="middle" x="497.8032" y="-9251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalactic.Equality[Option[(scala.collection.immutable.Vector[Int], Int)]]&#45;&gt;scalaz.Equal[Option[(scala.collection.immutable.Vector[Int], Int)]] -->
<g id="edge272" class="edge">
<title>org.scalactic.Equality[Option[(scala.collection.immutable.Vector[Int], Int)]]&#45;&gt;scalaz.Equal[Option[(scala.collection.immutable.Vector[Int], Int)]]</title>
<path fill="none" stroke="#000000" d="M804.1334,-9262.8701C1020.273,-9262.8701 1307.619,-9262.8701 1517.9294,-9262.8701"/>
<polygon fill="#000000" stroke="#000000" points="1518.1997,-9266.3702 1528.1996,-9262.8701 1518.1996,-9259.3702 1518.1997,-9266.3702"/>
</g>
<!-- (=&gt; Float) =&gt; Int -->
<g id="node357" class="node">
<title>(=&gt; Float) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-23131.8701" rx="79.8062" ry="26.7407"/>
<text text-anchor="start" x="449.3032" y="-23135.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Float) =&gt; Int</text>
<text text-anchor="middle" x="497.8032" y="-23120.6701" font-family="Times,serif" font-size="14.00" fill="#000000">57 times = 13ms</text>
</g>
<!-- monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long),A] -->
<g id="node358" class="node">
<title>monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long),A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-10126.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="297.8032" y="-10130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long),A]</text>
<text text-anchor="middle" x="497.8032" y="-10115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 93ms</text>
</g>
<!-- monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A] -->
<g id="edge40" class="edge">
<title>monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A]</title>
<path fill="none" stroke="#000000" d="M723.074,-10144.1549C810.6216,-10150.5444 911.765,-10157.5245 1003.6063,-10162.8701 1167.8649,-10172.4307 1351.3294,-10180.8826 1500.6399,-10187.1904"/>
<polygon fill="#000000" stroke="#000000" points="1500.7387,-10190.6976 1510.8773,-10187.6218 1501.0335,-10183.7038 1500.7387,-10190.6976"/>
</g>
<!-- monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long)] -->
<g id="edge112" class="edge">
<title>monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long)]</title>
<path fill="none" stroke="#000000" d="M792.2748,-10126.8701C986.1894,-10126.8701 1241.1136,-10126.8701 1445.9254,-10126.8701"/>
<polygon fill="#000000" stroke="#000000" points="1445.9474,-10130.3702 1455.9473,-10126.8701 1445.9473,-10123.3702 1445.9474,-10130.3702"/>
</g>
<!-- monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A] -->
<g id="edge377" class="edge">
<title>monocle.function.Reverse[(Int, Char, Boolean, Double, String, Long),A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[(Int, Char, Boolean, Double, String, Long),A]</title>
<path fill="none" stroke="#000000" d="M685.2865,-10106.1234C927.045,-10079.3707 1345.9674,-10033.0133 1595.3705,-10005.4147"/>
<polygon fill="#000000" stroke="#000000" points="1596.0888,-10008.8566 1605.6431,-10004.2779 1595.3188,-10001.8991 1596.0888,-10008.8566"/>
</g>
<!-- org.scalactic.Equality[SymbolicSyntaxExample.this.Store] -->
<g id="node359" class="node">
<title>org.scalactic.Equality[SymbolicSyntaxExample.this.Store]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-17083.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="336.8032" y="-17087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[SymbolicSyntaxExample.this.Store]</text>
<text text-anchor="middle" x="497.8032" y="-17072.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[SymbolicSyntaxExample.this.Store]&#45;&gt;scalaz.Equal[SymbolicSyntaxExample.this.Store] -->
<g id="edge113" class="edge">
<title>org.scalactic.Equality[SymbolicSyntaxExample.this.Store]&#45;&gt;scalaz.Equal[SymbolicSyntaxExample.this.Store]</title>
<path fill="none" stroke="#000000" d="M736.8601,-17083.8701C979.4767,-17083.8701 1351.6345,-17083.8701 1584.9047,-17083.8701"/>
<polygon fill="#000000" stroke="#000000" points="1585.2153,-17087.3702 1595.2152,-17083.8701 1585.2152,-17080.3702 1585.2153,-17087.3702"/>
</g>
<!-- Int(32) =&gt; ?{def applyLens: ?} -->
<g id="node360" class="node">
<title>Int(32) =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-5570.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="411.8032" y="-5574.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(32) =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-5559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- Int(32) =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge218" class="edge">
<title>Int(32) =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M630.6829,-5572.1413C731.5847,-5575.1131 873.3495,-5583.6044 995.6063,-5606.8701 1273.6559,-5659.7833 1590.6947,-5776.7914 1728.7242,-5830.6862"/>
<polygon fill="#000000" stroke="#000000" points="1727.7623,-5834.0682 1738.35,-5834.4558 1730.3149,-5827.5502 1727.7623,-5834.0682"/>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Option[String])]] -->
<g id="node362" class="node">
<title>org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Option[String])]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-15643.8701" rx="318.8103" ry="26.7407"/>
<text text-anchor="start" x="280.3032" y="-15647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Option[String])]]</text>
<text text-anchor="middle" x="497.8032" y="-15632.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 8ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Option[String])]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Option[String])]] -->
<g id="edge209" class="edge">
<title>org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Option[String])]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Option[String])]]</title>
<path fill="none" stroke="#000000" d="M816.9695,-15643.8701C1027.2335,-15643.8701 1300.5153,-15643.8701 1505.4055,-15643.8701"/>
<polygon fill="#000000" stroke="#000000" points="1505.4164,-15647.3702 1515.4164,-15643.8701 1505.4164,-15640.3702 1505.4164,-15647.3702"/>
</g>
<!-- monocle.function.Field2[Int :: String :: Boolean :: shapeless.HNil,A] -->
<g id="node363" class="node">
<title>monocle.function.Field2[Int :: String :: Boolean :: shapeless.HNil,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-16219.8701" rx="277.786" ry="26.7407"/>
<text text-anchor="start" x="309.3032" y="-16223.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field2[Int :: String :: Boolean :: shapeless.HNil,A]</text>
<text text-anchor="middle" x="497.8032" y="-16208.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 23ms</text>
</g>
<!-- monocle.function.Field2[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._1.N,A] -->
<g id="edge98" class="edge">
<title>monocle.function.Field2[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._1.N,A]</title>
<path fill="none" stroke="#000000" d="M765.0674,-16227.2638C963.4877,-16232.7531 1235.8514,-16240.2879 1451.2406,-16246.2466"/>
<polygon fill="#000000" stroke="#000000" points="1451.3607,-16249.7512 1461.4537,-16246.5291 1451.5543,-16242.7538 1451.3607,-16249.7512"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._1.N,this.Out,(this.Out, Int :: String :: Boolean :: shapeless.HNil)] -->
<g id="node478" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._1.N,this.Out,(this.Out, Int :: String :: Boolean :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-16183.8701" rx="615.3659" ry="26.7407"/>
<text text-anchor="start" x="1372.1015" y="-16187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._1.N,this.Out,(this.Out, Int :: String :: Boolean :: shapeless.HNil)]</text>
<text text-anchor="middle" x="1799.1015" y="-16172.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- monocle.function.Field2[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._1.N,this.Out,(this.Out, Int :: String :: Boolean :: shapeless.HNil)] -->
<g id="edge467" class="edge">
<title>monocle.function.Field2[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._1.N,this.Out,(this.Out, Int :: String :: Boolean :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M765.0674,-16212.4763C910.5386,-16208.4519 1095.7546,-16203.3279 1269.1248,-16198.5317"/>
<polygon fill="#000000" stroke="#000000" points="1269.3084,-16202.028 1279.2078,-16198.2528 1269.1148,-16195.0307 1269.3084,-16202.028"/>
</g>
<!-- String :: shapeless.HNil =&gt; ?{def ::: ?} -->
<g id="node364" class="node">
<title>String :: shapeless.HNil =&gt; ?{def ::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-23203.8701" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="389.8032" y="-23207.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String :: shapeless.HNil =&gt; ?{def ::: ?}</text>
<text text-anchor="middle" x="497.8032" y="-23192.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[String @@ Nothing] -->
<g id="node365" class="node">
<title>org.scalactic.Equality[String @@ Nothing]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-23275.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="378.8032" y="-23279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[String @@ Nothing]</text>
<text text-anchor="middle" x="497.8032" y="-23264.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[String @@ Nothing] -->
<g id="node535" class="node">
<title>scalaz.Equal[String @@ Nothing]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-23275.8701" rx="144.5" ry="26.7407"/>
<text text-anchor="start" x="1705.1015" y="-23279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[String @@ Nothing]</text>
<text text-anchor="middle" x="1799.1015" y="-23264.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalactic.Equality[String @@ Nothing]&#45;&gt;scalaz.Equal[String @@ Nothing] -->
<g id="edge352" class="edge">
<title>org.scalactic.Equality[String @@ Nothing]&#45;&gt;scalaz.Equal[String @@ Nothing]</title>
<path fill="none" stroke="#000000" d="M677.7181,-23275.8701C934.5498,-23275.8701 1401.9475,-23275.8701 1644.217,-23275.8701"/>
<polygon fill="#000000" stroke="#000000" points="1644.5159,-23279.3702 1654.5159,-23275.8701 1644.5158,-23272.3702 1644.5159,-23279.3702"/>
</g>
<!-- scalaz.OneAnd[List,Int] =&gt; ?{def applyTraversal: ?} -->
<g id="node366" class="node">
<title>scalaz.OneAnd[List,Int] =&gt; ?{def applyTraversal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-23347.8701" rx="217.1636" ry="26.7407"/>
<text text-anchor="start" x="352.3032" y="-23351.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.OneAnd[List,Int] =&gt; ?{def applyTraversal: ?}</text>
<text text-anchor="middle" x="497.8032" y="-23336.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[Option[(Int, List[Int])]] -->
<g id="node367" class="node">
<title>org.scalactic.Equality[Option[(Int, List[Int])]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-9550.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="372.8032" y="-9554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[(Int, List[Int])]]</text>
<text text-anchor="middle" x="497.8032" y="-9539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 14ms</text>
</g>
<!-- scalaz.Equal[Option[(Int, List[Int])]] -->
<g id="node773" class="node">
<title>scalaz.Equal[Option[(Int, List[Int])]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-9550.8701" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="1698.6015" y="-9554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[(Int, List[Int])]]</text>
<text text-anchor="middle" x="1799.1015" y="-9539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 13ms</text>
</g>
<!-- org.scalactic.Equality[Option[(Int, List[Int])]]&#45;&gt;scalaz.Equal[Option[(Int, List[Int])]] -->
<g id="edge212" class="edge">
<title>org.scalactic.Equality[Option[(Int, List[Int])]]&#45;&gt;scalaz.Equal[Option[(Int, List[Int])]]</title>
<path fill="none" stroke="#000000" d="M685.9804,-9550.8701C941.2513,-9550.8701 1393.1231,-9550.8701 1635.1822,-9550.8701"/>
<polygon fill="#000000" stroke="#000000" points="1635.4816,-9554.3702 1645.4816,-9550.8701 1635.4815,-9547.3702 1635.4816,-9554.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: shapeless.HNil,Out] -->
<g id="node368" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-11350.8701" rx="388.8175" ry="26.7407"/>
<text text-anchor="start" x="5782.4787" y="-11354.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="6049.4787" y="-11339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out] -->
<g id="node467" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-11350.8701" rx="388.8175" ry="26.7407"/>
<text text-anchor="start" x="6916.1927" y="-11354.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="7183.1927" y="-11339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out] -->
<g id="edge171" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M6438.449,-11350.8701C6549.9599,-11350.8701 6671.6906,-11350.8701 6783.8164,-11350.8701"/>
<polygon fill="#000000" stroke="#000000" points="6783.9419,-11354.3702 6793.9419,-11350.8701 6783.9418,-11347.3702 6783.9419,-11354.3702"/>
</g>
<!-- scalaz.Equal[(Int, List[Int])] -->
<g id="node369" class="node">
<title>scalaz.Equal[(Int, List[Int])]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-9550.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="3269.4729" y="-9554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, List[Int])]</text>
<text text-anchor="middle" x="3346.4729" y="-9539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 10ms</text>
</g>
<!-- scalaz.Equal[(Int, List[Int])]&#45;&gt;scalaz.Equal[List[Int]] -->
<g id="edge83" class="edge">
<title>scalaz.Equal[(Int, List[Int])]&#45;&gt;scalaz.Equal[List[Int]]</title>
<path fill="none" stroke="#000000" d="M3456.7645,-9540.1102C3640.7782,-9524.7116 3999.2554,-9506.4118 4090.3493,-9586.8701 4105.9025,-9600.6074 4082.8294,-9619.0951 4098.3493,-9632.8701 4180.5036,-9705.7877 4503.1146,-9691.4113 4671.2152,-9678.346"/>
<polygon fill="#000000" stroke="#000000" points="4671.6273,-9681.8245 4681.3205,-9677.5477 4671.0759,-9674.8462 4671.6273,-9681.8245"/>
</g>
<!-- scalaz.Equal[(Int, List[Int])]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge539" class="edge">
<title>scalaz.Equal[(Int, List[Int])]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M3466.6263,-9552.1278C3899.8935,-9556.2935 5361.1743,-9566.9938 5450.3374,-9522.8701 5778.3112,-9360.5674 5980.8951,-8924.1109 6034.8957,-8795.1981"/>
<polygon fill="#000000" stroke="#000000" points="6038.2124,-8796.337 6038.8132,-8785.7592 6031.7472,-8793.6536 6038.2124,-8796.337"/>
</g>
<!-- monocle.function.Wrapped[Int @@ scalaz.Tags.Max,A] -->
<g id="node370" class="node">
<title>monocle.function.Wrapped[Int @@ scalaz.Tags.Max,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-23419.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="341.3032" y="-23423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Wrapped[Int @@ scalaz.Tags.Max,A]</text>
<text text-anchor="middle" x="497.8032" y="-23408.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out] -->
<g id="node371" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="10414.6291" cy="-10846.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="10044.6291" y="-10850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="10414.6291" y="-10835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Out] -->
<g id="edge383" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M10949.2572,-10846.8701C10949.4224,-10846.8701 10949.5875,-10846.8701 10949.7527,-10846.8701"/>
<polygon fill="#000000" stroke="#000000" points="10947.185,-10850.3702 10957.1849,-10846.8701 10947.1849,-10843.3702 10947.185,-10850.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil] -->
<g id="node610" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-19387.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="4404.3434" y="-19391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="4774.3434" y="-19376.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil] -->
<g id="edge424" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M3881.2055,-19387.8701C3994.9486,-19387.8701 4115.1798,-19387.8701 4229.3027,-19387.8701"/>
<polygon fill="#000000" stroke="#000000" points="4229.6188,-19391.3702 4239.6188,-19387.8701 4229.6187,-19384.3702 4229.6188,-19391.3702"/>
</g>
<!-- scalaz.Functor[F$macro$22] -->
<g id="node373" class="node">
<title>scalaz.Functor[F$macro$22]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-23491.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-23495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$22]</text>
<text text-anchor="middle" x="497.8032" y="-23480.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- TreeExample.this.tree.type =&gt; ?{def applyLens: ?} -->
<g id="node376" class="node">
<title>TreeExample.this.tree.type =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-23563.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="356.3032" y="-23567.6701" font-family="Times,serif" font-size="14.00" fill="#000000">TreeExample.this.tree.type =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-23552.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 7ms</text>
</g>
<!-- HListExample.this.Example =&gt; ?{def applyIso: ?} -->
<g id="node377" class="node">
<title>HListExample.this.Example =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-23635.8701" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="357.8032" y="-23639.6701" font-family="Times,serif" font-size="14.00" fill="#000000">HListExample.this.Example =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-23624.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Functor[F$macro$18] -->
<g id="node378" class="node">
<title>scalaz.Functor[F$macro$18]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-23707.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-23711.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$18]</text>
<text text-anchor="middle" x="497.8032" y="-23696.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Char, Boolean, String, Double, Int, Int)) =&gt; ?{def applyLens: ?} -->
<g id="node379" class="node">
<title>((Char, Boolean, String, Double, Int, Int)) =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-23779.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="315.8032" y="-23783.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Char, Boolean, String, Double, Int, Int)) =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-23768.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- ((Int, Int) =&gt; Int) =&gt; ?{def applyIso: ?} -->
<g id="node380" class="node">
<title>((Int, Int) =&gt; Int) =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-23851.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="387.8032" y="-23855.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Int) =&gt; Int) =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-23840.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- scalaz.Equal[Option[Double]]&#45;&gt;scalaz.Equal[Double] -->
<g id="edge114" class="edge">
<title>scalaz.Equal[Option[Double]]&#45;&gt;scalaz.Equal[Double]</title>
<path fill="none" stroke="#000000" d="M4898.3289,-6855.2193C5033.916,-6862.2218 5257.6096,-6873.9482 5450.3374,-6884.8701 5624.5945,-6894.7452 5827.3035,-6907.1088 5946.6396,-6914.4774"/>
<polygon fill="#000000" stroke="#000000" points="5946.6619,-6917.9854 5956.8588,-6915.1088 5947.0937,-6910.9987 5946.6619,-6917.9854"/>
</g>
<!-- monocle.function.Each[scala.collection.immutable.Stream[Int],A] -->
<g id="node383" class="node">
<title>monocle.function.Each[scala.collection.immutable.Stream[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-18739.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="315.8032" y="-18743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[scala.collection.immutable.Stream[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-18728.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 79ms</text>
</g>
<!-- monocle.function.Each[scala.collection.immutable.Stream[Int],A]&#45;&gt;shapeless.Generic.Aux[scala.collection.immutable.Stream[Int],SGen] -->
<g id="edge148" class="edge">
<title>monocle.function.Each[scala.collection.immutable.Stream[Int],A]&#45;&gt;shapeless.Generic.Aux[scala.collection.immutable.Stream[Int],SGen]</title>
<path fill="none" stroke="#000000" d="M766.6437,-18739.8701C982.5952,-18739.8701 1285.3815,-18739.8701 1507.2192,-18739.8701"/>
<polygon fill="#000000" stroke="#000000" points="1507.3898,-18743.3702 1517.3898,-18739.8701 1507.3897,-18736.3702 1507.3898,-18743.3702"/>
</g>
<!-- org.scalactic.Equality[Point$3] -->
<g id="node384" class="node">
<title>org.scalactic.Equality[Point$3]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-15067.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="413.3032" y="-15071.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Point$3]</text>
<text text-anchor="middle" x="497.8032" y="-15056.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[Point$3]&#45;&gt;scalaz.Equal[Point$3] -->
<g id="edge516" class="edge">
<title>org.scalactic.Equality[Point$3]&#45;&gt;scalaz.Equal[Point$3]</title>
<path fill="none" stroke="#000000" d="M628.8356,-15067.8701C886.6804,-15067.8701 1455.42,-15067.8701 1692.2928,-15067.8701"/>
<polygon fill="#000000" stroke="#000000" points="1692.6349,-15071.3702 1702.6348,-15067.8701 1692.6348,-15064.3702 1692.6349,-15071.3702"/>
</g>
<!-- scala.collection.immutable.Vector[Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node385" class="node">
<title>scala.collection.immutable.Vector[Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-1610.8701" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="318.8032" y="-1614.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Vector[Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-1599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 19ms</text>
</g>
<!-- scala.collection.immutable.Vector[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge210" class="edge">
<title>scala.collection.immutable.Vector[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M732.4613,-1598.4284C843.3098,-1598.1859 959.2521,-1608.0547 995.6063,-1646.8701 1018.1653,-1670.9562 980.7247,-2811.0903 1003.6063,-2834.8701 1193.2663,-3031.9742 1564.9418,-2945.9068 1723.988,-2896.6444"/>
<polygon fill="#000000" stroke="#000000" points="1725.1995,-2899.9326 1733.6947,-2893.6015 1723.1056,-2893.2531 1725.1995,-2899.9326"/>
</g>
<!-- scala.collection.immutable.Vector[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge248" class="edge">
<title>scala.collection.immutable.Vector[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M652.186,-1589.0361C755.8633,-1581.9568 891.9387,-1587.9291 995.6063,-1646.8701 1470.5576,-1916.9067 1729.625,-2596.7185 1786.8789,-2762.1551"/>
<polygon fill="#000000" stroke="#000000" points="1783.6534,-2763.5391 1790.2099,-2771.8615 1790.2744,-2761.2669 1783.6534,-2763.5391"/>
</g>
<!-- monocle.function.Cons1[(Char, Boolean, String, Double, Int, Int),H,T] -->
<g id="node386" class="node">
<title>monocle.function.Cons1[(Char, Boolean, String, Double, Int, Int),H,T]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-26.8701" rx="287.1707" ry="26.7407"/>
<text text-anchor="start" x="302.8032" y="-30.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons1[(Char, Boolean, String, Double, Int, Int),H,T]</text>
<text text-anchor="middle" x="497.8032" y="-15.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- monocle.function.Cons1[(Char, Boolean, String, Double, Int, Int),H,T]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[(Char, Boolean, String, Double, Int, Int),H,T] -->
<g id="edge307" class="edge">
<title>monocle.function.Cons1[(Char, Boolean, String, Double, Int, Int),H,T]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[(Char, Boolean, String, Double, Int, Int),H,T]</title>
<path fill="none" stroke="#000000" d="M784.9896,-26.8701C987.6037,-26.8701 1259.4533,-26.8701 1470.6874,-26.8701"/>
<polygon fill="#000000" stroke="#000000" points="1470.6998,-30.3702 1480.6998,-26.8701 1470.6998,-23.3702 1470.6998,-30.3702"/>
</g>
<!-- StateExample.this._age.type =&gt; ?{def extract: ?} -->
<g id="node387" class="node">
<title>StateExample.this._age.type =&gt; ?{def extract: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-23923.8701" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="362.3032" y="-23927.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._age.type =&gt; ?{def extract: ?}</text>
<text text-anchor="middle" x="497.8032" y="-23912.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalactic.Equality[Option[Char]] -->
<g id="node388" class="node">
<title>org.scalactic.Equality[Option[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-6704.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="3246.4729" y="-6708.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[Char]]</text>
<text text-anchor="middle" x="3346.4729" y="-6693.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 11ms</text>
</g>
<!-- org.scalactic.Equality[Option[Char]]&#45;&gt;scalaz.Equal[Option[Char]] -->
<g id="edge497" class="edge">
<title>org.scalactic.Equality[Option[Char]]&#45;&gt;scalaz.Equal[Option[Char]]</title>
<path fill="none" stroke="#000000" d="M3499.2801,-6704.8701C3782.0185,-6704.8701 4381.9452,-6704.8701 4645.5446,-6704.8701"/>
<polygon fill="#000000" stroke="#000000" points="4645.9278,-6708.3702 4655.9278,-6704.8701 4645.9278,-6701.3702 4645.9278,-6708.3702"/>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; String -->
<g id="node389" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-24067.8701" rx="147.1565" ry="26.7407"/>
<text text-anchor="start" x="401.8032" y="-24071.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; String</text>
<text text-anchor="middle" x="497.8032" y="-24056.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 8ms</text>
</g>
<!-- eu.timepit.refined.api.RefType[Tuple2] -->
<g id="node405" class="node">
<title>eu.timepit.refined.api.RefType[Tuple2]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-24031.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="1690.6015" y="-24035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.RefType[Tuple2]</text>
<text text-anchor="middle" x="1799.1015" y="-24020.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 3ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; String&#45;&gt;eu.timepit.refined.api.RefType[Tuple2] -->
<g id="edge74" class="edge">
<title>(=&gt; (Nothing, Nothing)) =&gt; String&#45;&gt;eu.timepit.refined.api.RefType[Tuple2]</title>
<path fill="none" stroke="#000000" d="M643.2908,-24063.8452C884.8748,-24057.1618 1367.7267,-24043.8039 1626.2721,-24036.6513"/>
<polygon fill="#000000" stroke="#000000" points="1626.6139,-24040.1433 1636.5132,-24036.368 1626.4202,-24033.146 1626.6139,-24040.1433"/>
</g>
<!-- String(&#39;keyword&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node390" class="node">
<title>String(&#39;keyword&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-24139.8701" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="405.3032" y="-24143.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;keyword&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-24128.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String :: Boolean :: shapeless.HNil =&gt; ?{def ::: ?} -->
<g id="node392" class="node">
<title>String :: Boolean :: shapeless.HNil =&gt; ?{def ::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-24211.8701" rx="206.4504" ry="26.7407"/>
<text text-anchor="start" x="359.8032" y="-24215.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String :: Boolean :: shapeless.HNil =&gt; ?{def ::: ?}</text>
<text text-anchor="middle" x="497.8032" y="-24200.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 11ms</text>
</g>
<!-- myStore.articles.type =&gt; ?{def &amp;|&#45;?: ?} -->
<g id="node393" class="node">
<title>myStore.articles.type =&gt; ?{def &amp;|&#45;?: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-24283.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="387.8032" y="-24287.6701" font-family="Times,serif" font-size="14.00" fill="#000000">myStore.articles.type =&gt; ?{def &amp;|&#45;?: ?}</text>
<text text-anchor="middle" x="497.8032" y="-24272.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((String, Int, Boolean)) =&gt; ?{def applyLens: ?} -->
<g id="node394" class="node">
<title>((String, Int, Boolean)) =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-24355.8701" rx="195.7372" ry="26.7407"/>
<text text-anchor="start" x="367.3032" y="-24359.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((String, Int, Boolean)) =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-24344.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Order[A] -->
<g id="node395" class="node">
<title>scalaz.Order[A]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-12088.8701" rx="73.5782" ry="26.7407"/>
<text text-anchor="start" x="4730.3434" y="-12092.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[A]</text>
<text text-anchor="middle" x="4774.3434" y="-12077.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Functor[F$macro$16] -->
<g id="node397" class="node">
<title>scalaz.Functor[F$macro$16]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-24427.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-24431.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$16]</text>
<text text-anchor="middle" x="497.8032" y="-24416.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Plated[scalaz.Tree[Int]] -->
<g id="node398" class="node">
<title>monocle.function.Plated[scalaz.Tree[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-24499.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="383.3032" y="-24503.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Plated[scalaz.Tree[Int]]</text>
<text text-anchor="middle" x="497.8032" y="-24488.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scalaz.Equal[scalaz.Validation[String,Int]]&#45;&gt;scalaz.Order[String] -->
<g id="edge373" class="edge">
<title>scalaz.Equal[scalaz.Validation[String,Int]]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M4949.2961,-7926.7932C5086.5392,-7927.8982 5281.8752,-7935.5138 5450.3374,-7964.8701 5649.7549,-7999.6206 5876.3688,-8079.1767 5984.8836,-8119.8805"/>
<polygon fill="#000000" stroke="#000000" points="5983.7902,-8123.2086 5994.3822,-8123.4574 5986.2572,-8116.6577 5983.7902,-8123.2086"/>
</g>
<!-- scalaz.Equal[scalaz.Validation[String,Int]]&#45;&gt;scalaz.Equal[String] -->
<g id="edge61" class="edge">
<title>scalaz.Equal[scalaz.Validation[String,Int]]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M4929.032,-7941.5478C5068.4834,-7948.1162 5277.5585,-7945.7736 5450.3374,-7892.8701 5684.6152,-7821.136 5922.0359,-7638.6197 6011.9113,-7564.6898"/>
<polygon fill="#000000" stroke="#000000" points="6014.1647,-7567.3681 6019.6416,-7558.2987 6009.7043,-7561.9731 6014.1647,-7567.3681"/>
</g>
<!-- scalaz.Equal[scalaz.Validation[String,Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge458" class="edge">
<title>scalaz.Equal[scalaz.Validation[String,Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4922.6304,-7914.4435C5099.5101,-7900.8984 5380.1695,-7892.2249 5450.3374,-7964.8701 5467.014,-7982.1354 5446.4119,-8376.0379 5458.3374,-8396.8701 5571.64,-8594.7929 5841.1349,-8698.0581 5973.4862,-8738.349"/>
<polygon fill="#000000" stroke="#000000" points="5972.576,-8741.7301 5983.1603,-8741.2561 5974.5906,-8735.0262 5972.576,-8741.7301"/>
</g>
<!-- monocle.function.Cons[scalaz.IList[Int],A] -->
<g id="node400" class="node">
<title>monocle.function.Cons[scalaz.IList[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-24571.8701" rx="178.7961" ry="26.7407"/>
<text text-anchor="start" x="379.3032" y="-24575.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons[scalaz.IList[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-24560.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[scalaz.OneAnd[List,Int],SGen] -->
<g id="node401" class="node">
<title>shapeless.Generic.Aux[scalaz.OneAnd[List,Int],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-14995.8701" rx="222.9775" ry="26.7407"/>
<text text-anchor="start" x="1649.6015" y="-14999.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[scalaz.OneAnd[List,Int],SGen]</text>
<text text-anchor="middle" x="1799.1015" y="-14984.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 27ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, String)]] -->
<g id="node402" class="node">
<title>org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, String)]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-15499.8701" rx="285.8424" ry="26.7407"/>
<text text-anchor="start" x="303.8032" y="-15503.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, String)]]</text>
<text text-anchor="middle" x="497.8032" y="-15488.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, String)]] -->
<g id="node506" class="node">
<title>scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, String)]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-15499.8701" rx="251.0458" ry="26.7407"/>
<text text-anchor="start" x="1629.6015" y="-15503.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, String)]]</text>
<text text-anchor="middle" x="1799.1015" y="-15488.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, String)]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, String)]] -->
<g id="edge36" class="edge">
<title>org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, String)]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, String)]]</title>
<path fill="none" stroke="#000000" d="M783.7811,-15499.8701C1008.6127,-15499.8701 1319.2478,-15499.8701 1537.5372,-15499.8701"/>
<polygon fill="#000000" stroke="#000000" points="1537.8614,-15503.3702 1547.8614,-15499.8701 1537.8614,-15496.3702 1537.8614,-15503.3702"/>
</g>
<!-- scalaz.Functor[F$macro$5] -->
<g id="node403" class="node">
<title>scalaz.Functor[F$macro$5]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-24643.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="422.3032" y="-24647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$5]</text>
<text text-anchor="middle" x="497.8032" y="-24632.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[List[Int] :: shapeless.HNil,SGen] -->
<g id="node404" class="node">
<title>shapeless.Generic.Aux[List[Int] :: shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-14689.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="4619.3434" y="-14693.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[List[Int] :: shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="4774.3434" y="-14678.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalactic.Equality[(String, Int, Boolean, Double, Long, Char)] -->
<g id="node406" class="node">
<title>org.scalactic.Equality[(String, Int, Boolean, Double, Long, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-6992.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="3165.9729" y="-6996.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(String, Int, Boolean, Double, Long, Char)]</text>
<text text-anchor="middle" x="3346.4729" y="-6981.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 19ms</text>
</g>
<!-- org.scalactic.Equality[(String, Int, Boolean, Double, Long, Char)]&#45;&gt;scalaz.Equal[(String, Int, Boolean, Double, Long, Char)] -->
<g id="edge551" class="edge">
<title>org.scalactic.Equality[(String, Int, Boolean, Double, Long, Char)]&#45;&gt;scalaz.Equal[(String, Int, Boolean, Double, Long, Char)]</title>
<path fill="none" stroke="#000000" d="M3613.3694,-6992.8701C3877.2237,-6992.8701 4277.3903,-6992.8701 4532.2643,-6992.8701"/>
<polygon fill="#000000" stroke="#000000" points="4532.401,-6996.3702 4542.401,-6992.8701 4532.401,-6989.3702 4532.401,-6996.3702"/>
</g>
<!-- ((Int, Boolean)) =&gt; ?{def applyLens: ?} -->
<g id="node407" class="node">
<title>((Int, Boolean)) =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-24715.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="387.8032" y="-24719.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Boolean)) =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-24704.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 10ms</text>
</g>
<!-- org.scalactic.Equality[(Int, Boolean, String)] -->
<g id="node408" class="node">
<title>org.scalactic.Equality[(Int, Boolean, String)]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-7424.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="3224.4729" y="-7428.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(Int, Boolean, String)]</text>
<text text-anchor="middle" x="3346.4729" y="-7413.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 10ms</text>
</g>
<!-- scalaz.Equal[(Int, Boolean, String)] -->
<g id="node548" class="node">
<title>scalaz.Equal[(Int, Boolean, String)]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-7424.8701" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="4676.8434" y="-7428.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, Boolean, String)]</text>
<text text-anchor="middle" x="4774.3434" y="-7413.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 9ms</text>
</g>
<!-- org.scalactic.Equality[(Int, Boolean, String)]&#45;&gt;scalaz.Equal[(Int, Boolean, String)] -->
<g id="edge28" class="edge">
<title>org.scalactic.Equality[(Int, Boolean, String)]&#45;&gt;scalaz.Equal[(Int, Boolean, String)]</title>
<path fill="none" stroke="#000000" d="M3530.5833,-7424.8701C3812.9276,-7424.8701 4348.1065,-7424.8701 4614.8661,-7424.8701"/>
<polygon fill="#000000" stroke="#000000" points="4615.0223,-7428.3702 4625.0222,-7424.8701 4615.0222,-7421.3702 4615.0223,-7428.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scala.collection.immutable.Stream[Int],Out0] -->
<g id="node410" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scala.collection.immutable.Stream[Int],Out0]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-13780.8701" rx="393.717" ry="26.7407"/>
<text text-anchor="start" x="3075.9729" y="-13784.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scala.collection.immutable.Stream[Int],Out0]</text>
<text text-anchor="middle" x="3346.4729" y="-13769.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[Int :: shapeless.HNil,SGen] -->
<g id="node411" class="node">
<title>shapeless.Generic.Aux[Int :: shapeless.HNil,SGen]</title>
<ellipse fill="none" stroke="#000000" cx="9337.4836" cy="-11602.8701" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="9197.4836" y="-11606.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Int :: shapeless.HNil,SGen]</text>
<text text-anchor="middle" x="9337.4836" y="-11591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- monocle.function.Each[scalaz.IList[Int],A] -->
<g id="node412" class="node">
<title>monocle.function.Each[scalaz.IList[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-22555.8701" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="379.8032" y="-22559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[scalaz.IList[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-22544.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 27ms</text>
</g>
<!-- monocle.function.Each[scalaz.IList[Int],A]&#45;&gt;shapeless.Generic.Aux[scalaz.IList[Int],SGen] -->
<g id="edge395" class="edge">
<title>monocle.function.Each[scalaz.IList[Int],A]&#45;&gt;shapeless.Generic.Aux[scalaz.IList[Int],SGen]</title>
<path fill="none" stroke="#000000" d="M676.0146,-22555.8701C917.0317,-22555.8701 1345.6953,-22555.8701 1597.9803,-22555.8701"/>
<polygon fill="#000000" stroke="#000000" points="1597.9964,-22559.3702 1607.9964,-22555.8701 1597.9963,-22552.3702 1597.9964,-22559.3702"/>
</g>
<!-- monocle.function.At[String ==&gt;&gt; Int,String,A] -->
<g id="node413" class="node">
<title>monocle.function.At[String ==&gt;&gt; Int,String,A]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-7856.8701" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="4643.3434" y="-7860.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[String ==&gt;&gt; Int,String,A]</text>
<text text-anchor="middle" x="4774.3434" y="-7845.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.At[String ==&gt;&gt; Int,String,A]&#45;&gt;scalaz.Order[String] -->
<g id="edge359" class="edge">
<title>monocle.function.At[String ==&gt;&gt; Int,String,A]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M4963.9773,-7849.6838C5100.8298,-7848.6605 5289.1134,-7855.8558 5450.3374,-7892.8701 5663.5913,-7941.8295 5897.5151,-8061.1901 5998.4589,-8116.2194"/>
<polygon fill="#000000" stroke="#000000" points="5996.7789,-8119.2898 6007.2311,-8121.0224 6000.1407,-8113.1499 5996.7789,-8119.2898"/>
</g>
<!-- scalaz.Id.Id[(StateExample.this.Person, String)] =&gt; ?{def shouldEqual: ?} -->
<g id="node414" class="node">
<title>scalaz.Id.Id[(StateExample.this.Person, String)] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-1538.8701" rx="299.2124" ry="26.7407"/>
<text text-anchor="start" x="294.3032" y="-1542.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Id.Id[(StateExample.this.Person, String)] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-1527.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Id.Id[(StateExample.this.Person, String)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge378" class="edge">
<title>scalaz.Id.Id[(StateExample.this.Person, String)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M764.3658,-1526.6471C864.7849,-1528.3333 962.7388,-1539.7639 995.6063,-1574.8701 1007.5669,-1587.6453 991.4746,-2822.2573 1003.6063,-2834.8701 1193.2284,-3032.0107 1564.9246,-2945.9234 1723.9821,-2896.6501"/>
<polygon fill="#000000" stroke="#000000" points="1725.1946,-2899.938 1733.6895,-2893.6065 1723.1004,-2893.2586 1725.1946,-2899.938"/>
</g>
<!-- scalaz.Id.Id[(StateExample.this.Person, String)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge68" class="edge">
<title>scalaz.Id.Id[(StateExample.this.Person, String)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M654.7103,-1515.9632C758.3693,-1508.6903 893.4319,-1514.8606 995.6063,-1574.8701 1488.8157,-1864.5433 1735.7656,-2590.6441 1788.3158,-2762.1541"/>
<polygon fill="#000000" stroke="#000000" points="1784.9706,-2763.184 1791.2252,-2771.7356 1791.6687,-2761.1501 1784.9706,-2763.184"/>
</g>
<!-- monocle.function.Cons[String,A] -->
<g id="node415" class="node">
<title>monocle.function.Cons[String,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-24787.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="405.8032" y="-24791.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons[String,A]</text>
<text text-anchor="middle" x="497.8032" y="-24776.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Monad[scalaz.Id.Id] -->
<g id="node416" class="node">
<title>scalaz.Monad[scalaz.Id.Id]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-24859.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="423.8032" y="-24863.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Monad[scalaz.Id.Id]</text>
<text text-anchor="middle" x="497.8032" y="-24848.6701" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 93ms</text>
</g>
<!-- monocle.function.Each[List[Int] :: shapeless.HNil,Int] -->
<g id="node417" class="node">
<title>monocle.function.Each[List[Int] :: shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-14725.8701" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="3197.9729" y="-14729.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[List[Int] :: shapeless.HNil,Int]</text>
<text text-anchor="middle" x="3346.4729" y="-14714.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- monocle.function.Each[List[Int] :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[shapeless.HNil,Any] -->
<g id="edge576" class="edge">
<title>monocle.function.Each[List[Int] :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[shapeless.HNil,Any]</title>
<path fill="none" stroke="#000000" d="M3563.3357,-14731.3377C3840.8206,-14738.3337 4317.1883,-14750.3441 4582.2097,-14757.0259"/>
<polygon fill="#000000" stroke="#000000" points="4582.2423,-14760.5278 4592.3274,-14757.281 4582.4188,-14753.53 4582.2423,-14760.5278"/>
</g>
<!-- monocle.function.Each[List[Int] :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[List[Int] :: shapeless.HNil,SGen] -->
<g id="edge226" class="edge">
<title>monocle.function.Each[List[Int] :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[List[Int] :: shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M3563.3357,-14720.4024C3826.1857,-14713.7754 4267.4931,-14702.649 4538.5736,-14695.8144"/>
<polygon fill="#000000" stroke="#000000" points="4539.037,-14699.3039 4548.9455,-14695.5529 4538.8605,-14692.3061 4539.037,-14699.3039"/>
</g>
<!-- org.scalactic.Equality[Option[Boolean]] -->
<g id="node418" class="node">
<title>org.scalactic.Equality[Option[Boolean]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-7208.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="3236.9729" y="-7212.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[Boolean]]</text>
<text text-anchor="middle" x="3346.4729" y="-7197.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- org.scalactic.Equality[Option[Boolean]]&#45;&gt;scalaz.Equal[Option[Boolean]] -->
<g id="edge396" class="edge">
<title>org.scalactic.Equality[Option[Boolean]]&#45;&gt;scalaz.Equal[Option[Boolean]]</title>
<path fill="none" stroke="#000000" d="M3512.712,-7208.8701C3796.1896,-7208.8701 4368.1232,-7208.8701 4633.3509,-7208.8701"/>
<polygon fill="#000000" stroke="#000000" points="4633.4289,-7212.3702 4643.4289,-7208.8701 4633.4288,-7205.3702 4633.4289,-7212.3702"/>
</g>
<!-- monocle.function.Each[Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[shapeless.HNil,Int] -->
<g id="edge401" class="edge">
<title>monocle.function.Each[Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M8454.7773,-11645.3685C8652.9706,-11651.9925 8958.1509,-11662.1921 9152.7578,-11668.6962"/>
<polygon fill="#000000" stroke="#000000" points="9152.6959,-11672.196 9162.8072,-11669.0321 9152.9298,-11665.1999 9152.6959,-11672.196"/>
</g>
<!-- monocle.function.Each[Int :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: shapeless.HNil,SGen] -->
<g id="edge500" class="edge">
<title>monocle.function.Each[Int :: shapeless.HNil,Int]&#45;&gt;shapeless.Generic.Aux[Int :: shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M8454.7773,-11632.3716C8643.5896,-11626.0612 8929.5005,-11616.5055 9124.4038,-11609.9915"/>
<polygon fill="#000000" stroke="#000000" points="9124.6091,-11613.4867 9134.4866,-11609.6546 9124.3752,-11606.4906 9124.6091,-11613.4867"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Long :: Boolean :: shapeless.HNil,String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out] -->
<g id="node420" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Long :: Boolean :: shapeless.HNil,String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-10846.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="6813.1927" y="-10850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Long :: Boolean :: shapeless.HNil,String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="7183.1927" y="-10835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Long :: Boolean :: shapeless.HNil,String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[String :: Long :: Boolean :: shapeless.HNil,Double :: Boolean :: Char :: Int :: shapeless.HNil,Out] -->
<g id="edge274" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Long :: Boolean :: shapeless.HNil,String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[String :: Long :: Boolean :: shapeless.HNil,Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M7717.8208,-10846.8701C7717.986,-10846.8701 7718.1512,-10846.8701 7718.3163,-10846.8701"/>
<polygon fill="#000000" stroke="#000000" points="7715.7486,-10850.3702 7725.7485,-10846.8701 7715.7485,-10843.3702 7715.7486,-10850.3702"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._3,this.Out,(this.Out, Boolean :: Float :: Char :: Long :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Float :: Char :: Long :: shapeless.HNil,shapeless.nat._2,this.Out,(this.Out, Float :: Char :: Long :: shapeless.HNil)] -->
<g id="edge166" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._3,this.Out,(this.Out, Boolean :: Float :: Char :: Long :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Float :: Char :: Long :: shapeless.HNil,shapeless.nat._2,this.Out,(this.Out, Float :: Char :: Long :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M5450.6482,-12376.8701C5450.8066,-12376.8701 5450.965,-12376.8701 5451.1235,-12376.8701"/>
<polygon fill="#000000" stroke="#000000" points="5448.2499,-12380.3702 5458.2498,-12376.8701 5448.2498,-12373.3702 5448.2499,-12380.3702"/>
</g>
<!-- monocle.function.FilterIndex[scala.collection.immutable.Stream[Int],Int,A] -->
<g id="node424" class="node">
<title>monocle.function.FilterIndex[scala.collection.immutable.Stream[Int],Int,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-24931.8701" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="290.3032" y="-24935.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[scala.collection.immutable.Stream[Int],Int,A]</text>
<text text-anchor="middle" x="497.8032" y="-24920.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;last_name&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node425" class="node">
<title>String(&#39;last_name&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-25003.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="401.3032" y="-25007.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;last_name&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-24992.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 8ms</text>
</g>
<!-- scalaz.Functor[F$macro$33] -->
<g id="node426" class="node">
<title>scalaz.Functor[F$macro$33]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-25075.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-25079.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$33]</text>
<text text-anchor="middle" x="497.8032" y="-25064.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Index[List[Int],Int,A] -->
<g id="node427" class="node">
<title>monocle.function.Index[List[Int],Int,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-25147.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="389.3032" y="-25151.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[List[Int],Int,A]</text>
<text text-anchor="middle" x="497.8032" y="-25136.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[Int :: String :: Boolean :: shapeless.HNil,A] -->
<g id="node428" class="node">
<title>shapeless.ops.tuple.Reverse.Aux[Int :: String :: Boolean :: shapeless.HNil,A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-19315.8701" rx="309.0113" ry="26.7407"/>
<text text-anchor="start" x="1588.6015" y="-19319.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.tuple.Reverse.Aux[Int :: String :: Boolean :: shapeless.HNil,A]</text>
<text text-anchor="middle" x="1799.1015" y="-19304.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.Generic.Aux[Int :: String :: Boolean :: shapeless.HNil,L1] -->
<g id="edge315" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.Generic.Aux[Int :: String :: Boolean :: shapeless.HNil,L1]</title>
<path fill="none" stroke="#000000" d="M2108.5162,-19315.8701C2386.289,-19315.8701 2790.76,-19315.8701 3060.9483,-19315.8701"/>
<polygon fill="#000000" stroke="#000000" points="3061.3039,-19319.3702 3071.3038,-19315.8701 3061.3038,-19312.3702 3061.3039,-19319.3702"/>
</g>
<!-- monocle.function.Field1[(String, Int, Boolean, Double, Long, Char),A] -->
<g id="node429" class="node">
<title>monocle.function.Field1[(String, Int, Boolean, Double, Long, Char),A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-18019.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="302.3032" y="-18023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field1[(String, Int, Boolean, Double, Long, Char),A]</text>
<text text-anchor="middle" x="497.8032" y="-18008.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- monocle.function.Field1[(String, Int, Boolean, Double, Long, Char),A]&#45;&gt;shapeless.ops.hlist.At.Aux[(String, Int, Boolean, Double, Long, Char),shapeless.nat._0.N,A] -->
<g id="edge167" class="edge">
<title>monocle.function.Field1[(String, Int, Boolean, Double, Long, Char),A]&#45;&gt;shapeless.ops.hlist.At.Aux[(String, Int, Boolean, Double, Long, Char),shapeless.nat._0.N,A]</title>
<path fill="none" stroke="#000000" d="M785.7961,-18019.8701C971.8701,-18019.8701 1216.0863,-18019.8701 1418.142,-18019.8701"/>
<polygon fill="#000000" stroke="#000000" points="1418.3387,-18023.3702 1428.3386,-18019.8701 1418.3386,-18016.3702 1418.3387,-18023.3702"/>
</g>
<!-- List[Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node431" class="node">
<title>List[Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-1466.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="402.3032" y="-1470.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-1455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 35ms</text>
</g>
<!-- List[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge354" class="edge">
<title>List[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M634.1079,-1456.966C764.4834,-1450.8406 948.0904,-1452.1004 995.6063,-1502.8701 1008.2481,-1516.3774 990.7837,-2821.5344 1003.6063,-2834.8701 1193.1946,-3032.0433 1564.9092,-2945.9382 1723.9769,-2896.6551"/>
<polygon fill="#000000" stroke="#000000" points="1725.1903,-2899.9427 1733.6849,-2893.6109 1723.0958,-2893.2634 1725.1903,-2899.9427"/>
</g>
<!-- List[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge188" class="edge">
<title>List[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M603.2679,-1448.2337C710.1205,-1435.0426 876.2387,-1430.6664 995.6063,-1502.8701 1507.2547,-1812.3582 1741.5421,-2584.6426 1789.5963,-2762.1125"/>
<polygon fill="#000000" stroke="#000000" points="1786.2772,-2763.2489 1792.247,-2772.0018 1793.0386,-2761.4366 1786.2772,-2763.2489"/>
</g>
<!-- monocle.function.Snoc1[(Char, Boolean, String, Double, Int, Int),I,L] -->
<g id="node432" class="node">
<title>monocle.function.Snoc1[(Char, Boolean, String, Double, Int, Int),I,L]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-25219.8701" rx="282.6855" ry="26.7407"/>
<text text-anchor="start" x="305.8032" y="-25223.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc1[(Char, Boolean, String, Double, Int, Int),I,L]</text>
<text text-anchor="middle" x="497.8032" y="-25208.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.Init.Aux[(Char, Boolean, String, Double, Int, Int),I] -->
<g id="node710" class="node">
<title>shapeless.ops.hlist.Init.Aux[(Char, Boolean, String, Double, Int, Int),I]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-25219.8701" rx="285.8424" ry="26.7407"/>
<text text-anchor="start" x="1605.1015" y="-25223.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init.Aux[(Char, Boolean, String, Double, Int, Int),I]</text>
<text text-anchor="middle" x="1799.1015" y="-25208.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- monocle.function.Snoc1[(Char, Boolean, String, Double, Int, Int),I,L]&#45;&gt;shapeless.ops.hlist.Init.Aux[(Char, Boolean, String, Double, Int, Int),I] -->
<g id="edge353" class="edge">
<title>monocle.function.Snoc1[(Char, Boolean, String, Double, Int, Int),I,L]&#45;&gt;shapeless.ops.hlist.Init.Aux[(Char, Boolean, String, Double, Int, Int),I]</title>
<path fill="none" stroke="#000000" d="M780.9677,-25219.8701C994.4969,-25219.8701 1286.5934,-25219.8701 1503.1713,-25219.8701"/>
<polygon fill="#000000" stroke="#000000" points="1503.4269,-25223.3702 1513.4268,-25219.8701 1503.4268,-25216.3702 1503.4269,-25223.3702"/>
</g>
<!-- shapeless.ops.hlist.At.Aux[Int :: shapeless.HNil,shapeless.nat._0.N,Int] -->
<g id="node434" class="node">
<title>shapeless.ops.hlist.At.Aux[Int :: shapeless.HNil,shapeless.nat._0.N,Int]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-25363.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="1603.6015" y="-25367.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[Int :: shapeless.HNil,shapeless.nat._0.N,Int]</text>
<text text-anchor="middle" x="1799.1015" y="-25352.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- String(&#39;Foo&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node435" class="node">
<title>String(&#39;Foo&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-5498.8701" rx="123.9879" ry="26.7407"/>
<text text-anchor="start" x="418.3032" y="-5502.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Foo&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-5487.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- String(&#39;Foo&#39;) =&gt; ?{def &#45;&gt;: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge126" class="edge">
<title>String(&#39;Foo&#39;) =&gt; ?{def &#45;&gt;: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M621.3664,-5497.217C723.072,-5498.3696 870.3594,-5505.8423 995.6063,-5534.8701 1288.5867,-5602.7725 1614.0721,-5762.2606 1742.5521,-5828.8426"/>
<polygon fill="#000000" stroke="#000000" points="1740.972,-5831.9659 1751.4591,-5833.4734 1744.2011,-5825.7551 1740.972,-5831.9659"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[scala.collection.immutable.Stream[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scala.collection.immutable.Stream[Int],Out0] -->
<g id="edge448" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[scala.collection.immutable.Stream[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,scala.collection.immutable.Stream[Int],Out0]</title>
<path fill="none" stroke="#000000" d="M2102.0443,-13780.8701C2342.013,-13780.8701 2679.4506,-13780.8701 2942.4174,-13780.8701"/>
<polygon fill="#000000" stroke="#000000" points="2942.5243,-13784.3702 2952.5242,-13780.8701 2942.5242,-13777.3702 2942.5243,-13784.3702"/>
</g>
<!-- scalaz.Functor[F$macro$23] -->
<g id="node438" class="node">
<title>scalaz.Functor[F$macro$23]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-25363.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-25367.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$23]</text>
<text text-anchor="middle" x="497.8032" y="-25352.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[Nothing] =&gt; ?{def shouldEqual: ?} -->
<g id="node439" class="node">
<title>Option[Nothing] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-1394.8701" rx="178.7961" ry="26.7407"/>
<text text-anchor="start" x="379.3032" y="-1398.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Nothing] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-1383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 7ms</text>
</g>
<!-- Option[Nothing] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge149" class="edge">
<title>Option[Nothing] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M660.9681,-1383.8437C788.4743,-1379.2258 951.2802,-1383.494 995.6063,-1430.8701 1008.9292,-1445.1096 990.0927,-2820.8115 1003.6063,-2834.8701 1193.1642,-3032.0725 1564.8954,-2945.9515 1723.9722,-2896.6596"/>
<polygon fill="#000000" stroke="#000000" points="1725.1864,-2899.947 1733.6808,-2893.6149 1723.0916,-2893.2677 1725.1864,-2899.947"/>
</g>
<!-- Option[Nothing] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge129" class="edge">
<title>Option[Nothing] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M613.7781,-1374.4015C721.0534,-1361.7681 880.7906,-1359.5308 995.6063,-1430.8701 1525.7487,-1760.2673 1746.9147,-2578.366 1790.7203,-2761.9221"/>
<polygon fill="#000000" stroke="#000000" points="1787.3684,-2762.9577 1793.0719,-2771.8864 1794.1813,-2761.3499 1787.3684,-2762.9577"/>
</g>
<!-- scalaz.Tree[Int] =&gt; ?{def applyTraversal: ?} -->
<g id="node440" class="node">
<title>scalaz.Tree[Int] =&gt; ?{def applyTraversal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-25435.8701" rx="184.6098" ry="26.7407"/>
<text text-anchor="start" x="375.3032" y="-25439.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Tree[Int] =&gt; ?{def applyTraversal: ?}</text>
<text text-anchor="middle" x="497.8032" y="-25424.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scalaz.Validation[String,?X] =&gt; scalaz.Validation[E,A] -->
<g id="node442" class="node">
<title>scalaz.Validation[String,?X] =&gt; scalaz.Validation[E,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-25507.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="345.8032" y="-25511.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Validation[String,?X] =&gt; scalaz.Validation[E,A]</text>
<text text-anchor="middle" x="497.8032" y="-25496.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Boolean =&gt; ?{def shouldBe: ?} -->
<g id="node443" class="node">
<title>Boolean =&gt; ?{def shouldBe: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-1322.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="410.3032" y="-1326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean =&gt; ?{def shouldBe: ?}</text>
<text text-anchor="middle" x="497.8032" y="-1311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 11ms</text>
</g>
<!-- Boolean =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge115" class="edge">
<title>Boolean =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M624.4681,-1313.4316C755.258,-1306.7983 946.9215,-1306.8208 995.6063,-1358.8701 1009.6103,-1373.8418 989.4018,-2820.0885 1003.6063,-2834.8701 1193.1368,-3032.0988 1564.883,-2945.9634 1723.9679,-2896.6637"/>
<polygon fill="#000000" stroke="#000000" points="1725.1828,-2899.9508 1733.677,-2893.6185 1723.0879,-2893.2717 1725.1828,-2899.9508"/>
</g>
<!-- Boolean =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge270" class="edge">
<title>Boolean =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M595.587,-1304.24C702.5499,-1289.3419 874.8256,-1281.9605 995.6063,-1358.8701 1544.5632,-1708.4294 1752.163,-2572.6694 1791.7801,-2761.879"/>
<polygon fill="#000000" stroke="#000000" points="1788.3953,-2762.7945 1793.8481,-2771.8785 1795.2502,-2761.3768 1788.3953,-2762.7945"/>
</g>
<!-- String(&#39;nick_name&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node444" class="node">
<title>String(&#39;nick_name&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-25579.8701" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="398.8032" y="-25583.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;nick_name&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-25568.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Long :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="edge428" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Long :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M10907.0999,-9982.8701C10934.4929,-9982.8701 10962.0462,-9982.8701 10989.4735,-9982.8701"/>
<polygon fill="#000000" stroke="#000000" points="10989.5721,-9986.3702 10999.5721,-9982.8701 10989.572,-9979.3702 10989.5721,-9986.3702"/>
</g>
<!-- scalaz.Functor[F$macro$35] -->
<g id="node446" class="node">
<title>scalaz.Functor[F$macro$35]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-25651.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-25655.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$35]</text>
<text text-anchor="middle" x="497.8032" y="-25640.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Index[scala.collection.immutable.Vector[Int],Int,A] -->
<g id="node447" class="node">
<title>monocle.function.Index[scala.collection.immutable.Vector[Int],Int,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-25723.8701" rx="282.6855" ry="26.7407"/>
<text text-anchor="start" x="305.8032" y="-25727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[scala.collection.immutable.Vector[Int],Int,A]</text>
<text text-anchor="middle" x="497.8032" y="-25712.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.generic.internal.TupleGeneric[monocle.generic.Example] -->
<g id="node448" class="node">
<title>monocle.generic.internal.TupleGeneric[monocle.generic.Example]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-14563.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="314.3032" y="-14567.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.generic.internal.TupleGeneric[monocle.generic.Example]</text>
<text text-anchor="middle" x="497.8032" y="-14552.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 127ms</text>
</g>
<!-- monocle.generic.internal.TupleGeneric[monocle.generic.Example]&#45;&gt;shapeless.Generic.Aux[(Int, String, Boolean),Int :: String :: Boolean :: shapeless.HNil] -->
<g id="edge332" class="edge">
<title>monocle.generic.internal.TupleGeneric[monocle.generic.Example]&#45;&gt;shapeless.Generic.Aux[(Int, String, Boolean),Int :: String :: Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M711.8415,-14580.333C801.8935,-14586.9402 907.8101,-14594.2943 1003.6063,-14599.8701 1159.951,-14608.97 1333.6954,-14617.0656 1478.8268,-14623.2639"/>
<polygon fill="#000000" stroke="#000000" points="1479.0862,-14626.778 1489.2261,-14623.7068 1479.3842,-14619.7843 1479.0862,-14626.778"/>
</g>
<!-- monocle.generic.internal.TupleGeneric[monocle.generic.Example]&#45;&gt;shapeless.ops.hlist.Tupler.Aux[Int :: String :: Boolean :: shapeless.HNil,R] -->
<g id="edge143" class="edge">
<title>monocle.generic.internal.TupleGeneric[monocle.generic.Example]&#45;&gt;shapeless.ops.hlist.Tupler.Aux[Int :: String :: Boolean :: shapeless.HNil,R]</title>
<path fill="none" stroke="#000000" d="M769.0139,-14563.8701C978.7303,-14563.8701 1269.2874,-14563.8701 1488.3612,-14563.8701"/>
<polygon fill="#000000" stroke="#000000" points="1488.4111,-14567.3702 1498.411,-14563.8701 1488.411,-14560.3702 1488.4111,-14567.3702"/>
</g>
<!-- monocle.generic.internal.TupleGeneric[monocle.generic.Example]&#45;&gt;shapeless.Generic.Aux[monocle.generic.Example,L] -->
<g id="edge466" class="edge">
<title>monocle.generic.internal.TupleGeneric[monocle.generic.Example]&#45;&gt;shapeless.Generic.Aux[monocle.generic.Example,L]</title>
<path fill="none" stroke="#000000" d="M711.8415,-14547.4071C801.8935,-14540.7999 907.8101,-14533.4458 1003.6063,-14527.8701 1199.2592,-14516.4822 1422.1611,-14506.6672 1582.1363,-14500.1752"/>
<polygon fill="#000000" stroke="#000000" points="1582.7314,-14503.6541 1592.5816,-14499.7524 1582.4482,-14496.6598 1582.7314,-14503.6541"/>
</g>
<!-- monocle.function.FilterIndex[String ==&gt;&gt; Int,String,A] -->
<g id="node449" class="node">
<title>monocle.function.FilterIndex[String ==&gt;&gt; Int,String,A]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-8072.8701" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="4620.3434" y="-8076.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[String ==&gt;&gt; Int,String,A]</text>
<text text-anchor="middle" x="4774.3434" y="-8061.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.FilterIndex[String ==&gt;&gt; Int,String,A]&#45;&gt;scalaz.Order[String] -->
<g id="edge430" class="edge">
<title>monocle.function.FilterIndex[String ==&gt;&gt; Int,String,A]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M4984.4667,-8083.6911C5117.9144,-8090.6548 5294.2777,-8100.0262 5450.3374,-8108.8701 5626.8691,-8118.8741 5832.6002,-8131.432 5951.2698,-8138.7634"/>
<polygon fill="#000000" stroke="#000000" points="5951.2243,-8142.2672 5961.4212,-8139.3909 5951.6562,-8135.2805 5951.2243,-8142.2672"/>
</g>
<!-- monocle.function.Field2[(String, Int),A] -->
<g id="node450" class="node">
<title>monocle.function.Field2[(String, Int),A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-25795.8701" rx="168.0831" ry="26.7407"/>
<text text-anchor="start" x="386.8032" y="-25799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field2[(String, Int),A]</text>
<text text-anchor="middle" x="497.8032" y="-25784.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[(String, Int),shapeless.nat._1.N,A] -->
<g id="node753" class="node">
<title>shapeless.ops.hlist.At.Aux[(String, Int),shapeless.nat._1.N,A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-25795.8701" rx="250.1317" ry="26.7407"/>
<text text-anchor="start" x="1630.1015" y="-25799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(String, Int),shapeless.nat._1.N,A]</text>
<text text-anchor="middle" x="1799.1015" y="-25784.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Field2[(String, Int),A]&#45;&gt;shapeless.ops.hlist.At.Aux[(String, Int),shapeless.nat._1.N,A] -->
<g id="edge299" class="edge">
<title>monocle.function.Field2[(String, Int),A]&#45;&gt;shapeless.ops.hlist.At.Aux[(String, Int),shapeless.nat._1.N,A]</title>
<path fill="none" stroke="#000000" d="M666.2583,-25795.8701C887.5605,-25795.8701 1278.4735,-25795.8701 1538.1903,-25795.8701"/>
<polygon fill="#000000" stroke="#000000" points="1538.5286,-25799.3702 1548.5286,-25795.8701 1538.5285,-25792.3702 1538.5286,-25799.3702"/>
</g>
<!-- monocle.function.Cons1[scalaz.OneAnd[List,Int],H,T] -->
<g id="node451" class="node">
<title>monocle.function.Cons1[scalaz.OneAnd[List,Int],H,T]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-12952.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="347.3032" y="-12956.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons1[scalaz.OneAnd[List,Int],H,T]</text>
<text text-anchor="middle" x="497.8032" y="-12941.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- monocle.function.Cons1[scalaz.OneAnd[List,Int],H,T]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[scalaz.OneAnd[List,Int],H,T] -->
<g id="edge257" class="edge">
<title>monocle.function.Cons1[scalaz.OneAnd[List,Int],H,T]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[scalaz.OneAnd[List,Int],H,T]</title>
<path fill="none" stroke="#000000" d="M722.2449,-12952.8701C947.5781,-12952.8701 1294.6867,-12952.8701 1533.5801,-12952.8701"/>
<polygon fill="#000000" stroke="#000000" points="1533.8065,-12956.3702 1543.8065,-12952.8701 1533.8065,-12949.3702 1533.8065,-12956.3702"/>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int] -->
<g id="node452" class="node">
<title>monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-11638.8701" rx="263.5019" ry="26.7407"/>
<text text-anchor="start" x="4595.8434" y="-11642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int]</text>
<text text-anchor="middle" x="4774.3434" y="-11627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int] -->
<g id="edge173" class="edge">
<title>monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M5038.1654,-11638.8701C5260.7603,-11638.8701 5577.305,-11638.8701 5796.7133,-11638.8701"/>
<polygon fill="#000000" stroke="#000000" points="5796.7603,-11642.3702 5806.7603,-11638.8701 5796.7603,-11635.3702 5796.7603,-11642.3702"/>
</g>
<!-- String(&#39;connection_timeout&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node453" class="node">
<title>String(&#39;connection_timeout&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-25867.8701" rx="185.0243" ry="26.7407"/>
<text text-anchor="start" x="374.8032" y="-25871.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;connection_timeout&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-25856.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Id.Id[(StateExample.this.Person, Int)] =&gt; ?{def shouldEqual: ?} -->
<g id="node454" class="node">
<title>scalaz.Id.Id[(StateExample.this.Person, Int)] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-1250.8701" rx="286.2565" ry="26.7407"/>
<text text-anchor="start" x="303.3032" y="-1254.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Id.Id[(StateExample.this.Person, Int)] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-1239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 19ms</text>
</g>
<!-- scalaz.Id.Id[(StateExample.this.Person, Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge47" class="edge">
<title>scalaz.Id.Id[(StateExample.this.Person, Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M752.1642,-1238.4709C856.7594,-1239.4232 961.4279,-1250.3205 995.6063,-1286.8701 1010.2914,-1302.5739 988.7109,-2819.3656 1003.6063,-2834.8701 1193.1119,-3032.1227 1564.8717,-2945.9743 1723.9641,-2896.6674"/>
<polygon fill="#000000" stroke="#000000" points="1725.1796,-2899.9543 1733.6736,-2893.6217 1723.0845,-2893.2752 1725.1796,-2899.9543"/>
</g>
<!-- scalaz.Id.Id[(StateExample.this.Person, Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge523" class="edge">
<title>scalaz.Id.Id[(StateExample.this.Person, Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M632.8247,-1227.1723C739.8185,-1215.7978 888.5988,-1217.1798 995.6063,-1286.8701 1563.6758,-1656.8338 1757.2766,-2567.5502 1792.7755,-2761.9759"/>
<polygon fill="#000000" stroke="#000000" points="1789.3586,-2762.7509 1794.5757,-2771.9722 1796.2478,-2761.5102 1789.3586,-2762.7509"/>
</g>
<!-- Double =&gt; Int -->
<g id="node455" class="node">
<title>Double =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-25939.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="450.8032" y="-25943.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Double =&gt; Int</text>
<text text-anchor="middle" x="497.8032" y="-25928.6701" font-family="Times,serif" font-size="14.00" fill="#000000">57 times = 22ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: Boolean :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="node615" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: Boolean :: shapeless.HNil,shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="8260.3382" cy="-11278.8701" rx="388.8175" ry="26.7407"/>
<text text-anchor="start" x="7993.3382" y="-11282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: Boolean :: shapeless.HNil,shapeless.HNil,Out]</text>
<text text-anchor="middle" x="8260.3382" y="-11267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: Boolean :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="edge505" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: Boolean :: shapeless.HNil,shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M7572.4476,-11278.8701C7666.3265,-11278.8701 7766.7777,-11278.8701 7861.1053,-11278.8701"/>
<polygon fill="#000000" stroke="#000000" points="7861.3915,-11282.3702 7871.3915,-11278.8701 7861.3914,-11275.3702 7861.3915,-11282.3702"/>
</g>
<!-- scalaz.Unapply[scalaz.Traverse,Map[String,JsonExample.this.Json]] -->
<g id="node459" class="node">
<title>scalaz.Unapply[scalaz.Traverse,Map[String,JsonExample.this.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-26047.8701" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="1611.1015" y="-26051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Unapply[scalaz.Traverse,Map[String,JsonExample.this.Json]]</text>
<text text-anchor="middle" x="1799.1015" y="-26036.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 66ms</text>
</g>
<!-- scalaz.Traverse[[β$11$]Map[String,β$11$]] -->
<g id="node579" class="node">
<title>scalaz.Traverse[[β$11$]Map[String,β$11$]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-26083.8701" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="3224.9729" y="-26087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Traverse[[β$11$]Map[String,β$11$]]</text>
<text text-anchor="middle" x="3346.4729" y="-26072.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- scalaz.Unapply[scalaz.Traverse,Map[String,JsonExample.this.Json]]&#45;&gt;scalaz.Traverse[[β$11$]Map[String,β$11$]] -->
<g id="edge4" class="edge">
<title>scalaz.Unapply[scalaz.Traverse,Map[String,JsonExample.this.Json]]&#45;&gt;scalaz.Traverse[[β$11$]Map[String,β$11$]]</title>
<path fill="none" stroke="#000000" d="M2069.0753,-26054.1511C2379.8467,-26061.3812 2882.4114,-26073.0735 3155.3157,-26079.4227"/>
<polygon fill="#000000" stroke="#000000" points="3155.2486,-26082.922 3165.3273,-26079.6557 3155.4114,-26075.9239 3155.2486,-26082.922"/>
</g>
<!-- scalaz.Traverse[[α$10$]Map[α$10$,JsonExample.this.Json]] -->
<g id="node750" class="node">
<title>scalaz.Traverse[[α$10$]Map[α$10$,JsonExample.this.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-26011.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="3179.4729" y="-26015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Traverse[[α$10$]Map[α$10$,JsonExample.this.Json]]</text>
<text text-anchor="middle" x="3346.4729" y="-26000.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scalaz.Unapply[scalaz.Traverse,Map[String,JsonExample.this.Json]]&#45;&gt;scalaz.Traverse[[α$10$]Map[α$10$,JsonExample.this.Json]] -->
<g id="edge93" class="edge">
<title>scalaz.Unapply[scalaz.Traverse,Map[String,JsonExample.this.Json]]&#45;&gt;scalaz.Traverse[[α$10$]Map[α$10$,JsonExample.this.Json]]</title>
<path fill="none" stroke="#000000" d="M2069.0753,-26041.589C2357.8168,-26034.8714 2812.1238,-26024.3018 3093.9669,-26017.7447"/>
<polygon fill="#000000" stroke="#000000" points="3094.4204,-26021.2352 3104.3362,-26017.5034 3094.2575,-26014.2371 3094.4204,-26021.2352"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="node460" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="11491.7745" cy="-10054.8701" rx="492.2927" ry="26.7407"/>
<text text-anchor="start" x="11151.7745" y="-10058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,shapeless.HNil,Out]</text>
<text text-anchor="middle" x="11491.7745" y="-10043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[E] -->
<g id="node461" class="node">
<title>scalaz.Equal[E]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-12016.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="3299.4729" y="-12020.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[E]</text>
<text text-anchor="middle" x="3346.4729" y="-12005.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 146ms</text>
</g>
<!-- scalaz.Equal[E]&#45;&gt;scalaz.Equal[S =&gt; A] -->
<g id="edge432" class="edge">
<title>scalaz.Equal[E]&#45;&gt;scalaz.Equal[S =&gt; A]</title>
<path fill="none" stroke="#000000" d="M3424.4536,-12016.5816C3808.8897,-12015.1593 5501.5711,-12008.8971 5943.5881,-12007.2618"/>
<polygon fill="#000000" stroke="#000000" points="5943.8086,-12010.7611 5953.7956,-12007.224 5943.7827,-12003.7612 5943.8086,-12010.7611"/>
</g>
<!-- scalaz.Equal[E]&#45;&gt;scalaz.Equal[A] -->
<g id="edge119" class="edge">
<title>scalaz.Equal[E]&#45;&gt;scalaz.Equal[A]</title>
<path fill="none" stroke="#000000" d="M3424.0014,-12014.3724C3670.5384,-12006.43 4435.2133,-11981.7954 4690.4457,-11973.5729"/>
<polygon fill="#000000" stroke="#000000" points="4690.8808,-11977.0608 4700.7629,-11973.2405 4690.6553,-11970.0644 4690.8808,-11977.0608"/>
</g>
<!-- scalaz.Equal[E]&#45;&gt;scalaz.Equal[S =&gt; Option[A]] -->
<g id="edge559" class="edge">
<title>scalaz.Equal[E]&#45;&gt;scalaz.Equal[S =&gt; Option[A]]</title>
<path fill="none" stroke="#000000" d="M3421.2401,-12024.5108C3589.9231,-12040.0255 3992.9564,-12066.892 4090.3493,-11980.8701 4105.9025,-11967.1327 4082.5028,-11948.268 4098.3493,-11934.8701 4376.238,-11699.9201 5562.0137,-11852.3008 5936.0064,-11907.3536"/>
<polygon fill="#000000" stroke="#000000" points="5935.626,-11910.8353 5946.0302,-11908.8345 5936.6491,-11903.9105 5935.626,-11910.8353"/>
</g>
<!-- scalaz.Id.Id[(StateExample.this.Person, Option[Int])] =&gt; ?{def shouldEqual: ?} -->
<g id="node462" class="node">
<title>scalaz.Id.Id[(StateExample.this.Person, Option[Int])] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-1178.8701" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="279.8032" y="-1182.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Id.Id[(StateExample.this.Person, Option[Int])] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-1167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 37ms</text>
</g>
<!-- scalaz.Id.Id[(StateExample.this.Person, Option[Int])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge214" class="edge">
<title>scalaz.Id.Id[(StateExample.this.Person, Option[Int])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M785.3668,-1167.1245C878.1733,-1170.0191 965.0567,-1182.1935 995.6063,-1214.8701 1010.9725,-1231.3061 988.0199,-2818.6427 1003.6063,-2834.8701 1193.0893,-3032.1444 1564.8614,-2945.9842 1723.9606,-2896.6707"/>
<polygon fill="#000000" stroke="#000000" points="1725.1767,-2899.9575 1733.6706,-2893.6247 1723.0814,-2893.2784 1725.1767,-2899.9575"/>
</g>
<!-- scalaz.Id.Id[(StateExample.this.Person, Option[Int])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge385" class="edge">
<title>scalaz.Id.Id[(StateExample.this.Person, Option[Int])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M634.0045,-1154.5353C741.1425,-1142.9434 889.5371,-1144.345 995.6063,-1214.8701 1582.7519,-1605.261 1762.0535,-2561.9786 1793.6557,-2761.8842"/>
<polygon fill="#000000" stroke="#000000" points="1790.2152,-2762.5376 1795.2117,-2771.8803 1797.1319,-2761.4609 1790.2152,-2762.5376"/>
</g>
<!-- shapeless.ops.hlist.Last.Aux[Int :: String :: Boolean :: shapeless.HNil,L]&#45;&gt;shapeless.ops.hlist.Last[String :: Boolean :: shapeless.HNil] -->
<g id="edge6" class="edge">
<title>shapeless.ops.hlist.Last.Aux[Int :: String :: Boolean :: shapeless.HNil,L]&#45;&gt;shapeless.ops.hlist.Last[String :: Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2090.6046,-12160.8701C2379.9305,-12160.8701 2818.8582,-12160.8701 3093.8025,-12160.8701"/>
<polygon fill="#000000" stroke="#000000" points="3093.92,-12164.3702 3103.92,-12160.8701 3093.9199,-12157.3702 3093.92,-12164.3702"/>
</g>
<!-- ((Int, Int, Int, Int, Int, Int)) =&gt; ?{def shouldEqual: ?} -->
<g id="node464" class="node">
<title>((Int, Int, Int, Int, Int, Int)) =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-1106.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="351.8032" y="-1110.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Int, Int, Int, Int, Int)) =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-1095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- ((Int, Int, Int, Int, Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge461" class="edge">
<title>((Int, Int, Int, Int, Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M692.8973,-1094.8948C814.337,-1092.1943 954.9273,-1099.3498 995.6063,-1142.8701 1011.6537,-1160.0382 987.329,-2817.9198 1003.6063,-2834.8701 1193.0685,-3032.1644 1564.852,-2945.9932 1723.9574,-2896.6738"/>
<polygon fill="#000000" stroke="#000000" points="1725.174,-2899.9604 1733.6677,-2893.6274 1723.0785,-2893.2814 1725.174,-2899.9604"/>
</g>
<!-- ((Int, Int, Int, Int, Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge427" class="edge">
<title>((Int, Int, Int, Int, Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M615.8957,-1084.2417C724.1047,-1070.24 883.9787,-1067.2164 995.6063,-1142.8701 1602.0709,-1553.8907 1766.7104,-2556.8856 1794.4848,-2761.9046"/>
<polygon fill="#000000" stroke="#000000" points="1791.0221,-2762.4169 1795.811,-2771.8676 1797.9608,-2761.4932 1791.0221,-2762.4169"/>
</g>
<!-- scalaz.Equal[(List[Int], Int)] -->
<g id="node652" class="node">
<title>scalaz.Equal[(List[Int], Int)]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-9766.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="3269.4729" y="-9770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(List[Int], Int)]</text>
<text text-anchor="middle" x="3346.4729" y="-9755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 11ms</text>
</g>
<!-- scalaz.Equal[Option[(List[Int], Int)]]&#45;&gt;scalaz.Equal[(List[Int], Int)] -->
<g id="edge109" class="edge">
<title>scalaz.Equal[Option[(List[Int], Int)]]&#45;&gt;scalaz.Equal[(List[Int], Int)]</title>
<path fill="none" stroke="#000000" d="M1952.7704,-9766.8701C2257.0688,-9766.8701 2931.4389,-9766.8701 3215.8823,-9766.8701"/>
<polygon fill="#000000" stroke="#000000" points="3216.2476,-9770.3702 3226.2476,-9766.8701 3216.2475,-9763.3702 3216.2476,-9770.3702"/>
</g>
<!-- monocle.function.Wrapped[S,String] -->
<g id="node466" class="node">
<title>monocle.function.Wrapped[S,String]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-26083.8701" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="395.8032" y="-26087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Wrapped[S,String]</text>
<text text-anchor="middle" x="497.8032" y="-26072.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="edge533" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Char :: Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M7572.4476,-11350.8701C7666.3265,-11350.8701 7766.7777,-11350.8701 7861.1053,-11350.8701"/>
<polygon fill="#000000" stroke="#000000" points="7861.3915,-11354.3702 7871.3915,-11350.8701 7861.3914,-11347.3702 7861.3915,-11354.3702"/>
</g>
<!-- l.type =&gt; ?{def traverse: ?} -->
<g id="node468" class="node">
<title>l.type =&gt; ?{def traverse: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-26155.8701" rx="118.5882" ry="26.7407"/>
<text text-anchor="start" x="421.8032" y="-26159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">l.type =&gt; ?{def traverse: ?}</text>
<text text-anchor="middle" x="497.8032" y="-26144.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- scalaz.Traverse[List] -->
<g id="node776" class="node">
<title>scalaz.Traverse[List]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-26155.8701" rx="92.7622" ry="26.7407"/>
<text text-anchor="start" x="1741.6015" y="-26159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Traverse[List]</text>
<text text-anchor="middle" x="1799.1015" y="-26144.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- l.type =&gt; ?{def traverse: ?}&#45;&gt;scalaz.Traverse[List] -->
<g id="edge556" class="edge">
<title>l.type =&gt; ?{def traverse: ?}&#45;&gt;scalaz.Traverse[List]</title>
<path fill="none" stroke="#000000" d="M616.7344,-26155.8701C869.8713,-26155.8701 1458.2454,-26155.8701 1696.3412,-26155.8701"/>
<polygon fill="#000000" stroke="#000000" points="1696.3822,-26159.3702 1706.3821,-26155.8701 1696.3821,-26152.3702 1696.3822,-26159.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[String :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out] -->
<g id="node469" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[String :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-19243.8701" rx="393.717" ry="26.7407"/>
<text text-anchor="start" x="5778.9787" y="-19247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[String :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="6049.4787" y="-19232.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[String :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: String :: Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="edge130" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[String :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: String :: Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M6443.61,-19243.8701C6552.099,-19243.8701 6669.9204,-19243.8701 6778.9693,-19243.8701"/>
<polygon fill="#000000" stroke="#000000" points="6779.1561,-19247.3702 6789.1561,-19243.8701 6779.1561,-19240.3702 6779.1561,-19247.3702"/>
</g>
<!-- x$1.type =&gt; ?{def reverse: ?} -->
<g id="node470" class="node">
<title>x$1.type =&gt; ?{def reverse: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-26227.8701" rx="127.9727" ry="26.7407"/>
<text text-anchor="start" x="415.3032" y="-26231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$1.type =&gt; ?{def reverse: ?}</text>
<text text-anchor="middle" x="497.8032" y="-26216.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- StateExample.this._age.type =&gt; ?{def assign: ?} -->
<g id="node471" class="node">
<title>StateExample.this._age.type =&gt; ?{def assign: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-26299.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="363.8032" y="-26303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._age.type =&gt; ?{def assign: ?}</text>
<text text-anchor="middle" x="497.8032" y="-26288.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Unit)]] -->
<g id="node472" class="node">
<title>scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Unit)]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-15571.8701" rx="244.818" ry="26.7407"/>
<text text-anchor="start" x="1634.1015" y="-15575.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Unit)]]</text>
<text text-anchor="middle" x="1799.1015" y="-15560.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 18ms</text>
</g>
<!-- scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Unit)]]&#45;&gt;scalaz.Equal[StateExample.this.Person] -->
<g id="edge229" class="edge">
<title>scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Unit)]]&#45;&gt;scalaz.Equal[StateExample.this.Person]</title>
<path fill="none" stroke="#000000" d="M2025.8463,-15561.7668C2185.0042,-15554.6364 2402.8123,-15544.801 2594.5966,-15535.8701 2795.1039,-15526.5329 3025.6698,-15515.4408 3178.0462,-15508.0607"/>
<polygon fill="#000000" stroke="#000000" points="3178.6056,-15511.5378 3188.4245,-15507.558 3178.2668,-15504.546 3178.6056,-15511.5378"/>
</g>
<!-- StateExample.this._oldAge.type =&gt; ?{def assign: ?} -->
<g id="node473" class="node">
<title>StateExample.this._oldAge.type =&gt; ?{def assign: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-26371.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="353.3032" y="-26375.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._oldAge.type =&gt; ?{def assign: ?}</text>
<text text-anchor="middle" x="497.8032" y="-26360.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="edge242" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: Char :: Boolean :: Double :: String :: Long :: shapeless.HNil,shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M10907.0999,-10054.8701C10934.4929,-10054.8701 10962.0462,-10054.8701 10989.4735,-10054.8701"/>
<polygon fill="#000000" stroke="#000000" points="10989.5721,-10058.3702 10999.5721,-10054.8701 10989.572,-10051.3702 10989.5721,-10058.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Double :: String :: Long :: Boolean :: shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out] -->
<g id="edge8" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Double :: String :: Long :: Boolean :: shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M9872.1117,-10846.8701C9872.2769,-10846.8701 9872.4421,-10846.8701 9872.6072,-10846.8701"/>
<polygon fill="#000000" stroke="#000000" points="9870.0395,-10850.3702 9880.0395,-10846.8701 9870.0394,-10843.3702 9870.0395,-10850.3702"/>
</g>
<!-- ((Int, Char, Boolean, Double, String, Long, Boolean)) =&gt; ?{def applyIso: ?} -->
<g id="node476" class="node">
<title>((Int, Char, Boolean, Double, String, Long, Boolean)) =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-26443.8701" rx="309.0113" ry="26.7407"/>
<text text-anchor="start" x="287.3032" y="-26447.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Char, Boolean, Double, String, Long, Boolean)) =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-26432.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Int, Int, Int)) =&gt; ?{def applyTraversal: ?} -->
<g id="node477" class="node">
<title>((Int, Int, Int)) =&gt; ?{def applyTraversal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-26515.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="378.8032" y="-26519.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Int, Int)) =&gt; ?{def applyTraversal: ?}</text>
<text text-anchor="middle" x="497.8032" y="-26504.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._1.N,this.Out,(this.Out, Int :: String :: Boolean :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[String :: Boolean :: shapeless.HNil,shapeless._0,this.Out,(this.Out, String :: Boolean :: shapeless.HNil)] -->
<g id="edge213" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._1.N,this.Out,(this.Out, Int :: String :: Boolean :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[String :: Boolean :: shapeless.HNil,shapeless._0,this.Out,(this.Out, String :: Boolean :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M2414.5538,-16183.8701C2537.6551,-16183.8701 2666.3395,-16183.8701 2787.4098,-16183.8701"/>
<polygon fill="#000000" stroke="#000000" points="2787.6023,-16187.3702 2797.6022,-16183.8701 2787.6022,-16180.3702 2787.6023,-16187.3702"/>
</g>
<!-- scalaz.Equal[String ==&gt;&gt; Int]&#45;&gt;scalaz.Order[Int] -->
<g id="edge124" class="edge">
<title>scalaz.Equal[String ==&gt;&gt; Int]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M4903.3318,-8360.8701C5162.4462,-8360.8701 5740.2547,-8360.8701 5961.2189,-8360.8701"/>
<polygon fill="#000000" stroke="#000000" points="5961.4687,-8364.3702 5971.4686,-8360.8701 5961.4686,-8357.3702 5961.4687,-8364.3702"/>
</g>
<!-- scalaz.Equal[String ==&gt;&gt; Int]&#45;&gt;scalaz.Order[String] -->
<g id="edge32" class="edge">
<title>scalaz.Equal[String ==&gt;&gt; Int]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M4902.759,-8363.0901C5039.5036,-8363.3508 5261.7582,-8357.732 5450.3374,-8324.8701 5649.7549,-8290.1195 5876.3688,-8210.5634 5984.8836,-8169.8597"/>
<polygon fill="#000000" stroke="#000000" points="5986.2572,-8173.0824 5994.3822,-8166.2827 5983.7902,-8166.5315 5986.2572,-8173.0824"/>
</g>
<!-- scalaz.Equal[Option[List[Int]]] -->
<g id="node480" class="node">
<title>scalaz.Equal[Option[List[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-9694.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="3261.9729" y="-9698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[List[Int]]]</text>
<text text-anchor="middle" x="3346.4729" y="-9683.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- scalaz.Equal[Option[List[Int]]]&#45;&gt;scalaz.Equal[List[Int]] -->
<g id="edge391" class="edge">
<title>scalaz.Equal[Option[List[Int]]]&#45;&gt;scalaz.Equal[List[Int]]</title>
<path fill="none" stroke="#000000" d="M3476.9722,-9692.4938C3756.1947,-9687.4095 4407.1497,-9675.5563 4665.6871,-9670.8486"/>
<polygon fill="#000000" stroke="#000000" points="4665.9025,-9674.3453 4675.8371,-9670.6638 4665.775,-9667.3465 4665.9025,-9674.3453"/>
</g>
<!-- org.scalactic.Equality[Option[Int \/ String]] -->
<g id="node481" class="node">
<title>org.scalactic.Equality[Option[Int \/ String]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-8110.8701" rx="176.1392" ry="26.7407"/>
<text text-anchor="start" x="1682.6015" y="-8114.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[Int / String]]</text>
<text text-anchor="middle" x="1799.1015" y="-8099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 29ms</text>
</g>
<!-- org.scalactic.Equality[Option[Int \/ String]]&#45;&gt;scalaz.Equal[Option[Int \/ String]] -->
<g id="edge554" class="edge">
<title>org.scalactic.Equality[Option[Int \/ String]]&#45;&gt;scalaz.Equal[Option[Int \/ String]]</title>
<path fill="none" stroke="#000000" d="M1975.4743,-8110.8701C2281.7297,-8110.8701 2906.6387,-8110.8701 3194.7662,-8110.8701"/>
<polygon fill="#000000" stroke="#000000" points="3194.8726,-8114.3702 3204.8726,-8110.8701 3194.8726,-8107.3702 3194.8726,-8114.3702"/>
</g>
<!-- StateExample.this._nameSet.type =&gt; ?{def assign_: ?} -->
<g id="node482" class="node">
<title>StateExample.this._nameSet.type =&gt; ?{def assign_: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-26587.8701" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="346.3032" y="-26591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._nameSet.type =&gt; ?{def assign_: ?}</text>
<text text-anchor="middle" x="497.8032" y="-26576.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Boolean] -->
<g id="node483" class="node">
<title>shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-20683.8701" rx="284.9281" ry="26.7407"/>
<text text-anchor="start" x="3152.9729" y="-20687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Boolean]</text>
<text text-anchor="middle" x="3346.4729" y="-20672.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 3ms</text>
</g>
<!-- shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Boolean]&#45;&gt;shapeless.ops.coproduct.Selector[shapeless.CNil,Boolean] -->
<g id="edge506" class="edge">
<title>shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Boolean]&#45;&gt;shapeless.ops.coproduct.Selector[shapeless.CNil,Boolean]</title>
<path fill="none" stroke="#000000" d="M3631.5641,-20683.8701C3893.5079,-20683.8701 4277.8156,-20683.8701 4527.0693,-20683.8701"/>
<polygon fill="#000000" stroke="#000000" points="4527.3558,-20687.3702 4537.3558,-20683.8701 4527.3557,-20680.3702 4527.3558,-20687.3702"/>
</g>
<!-- Int(3) =&gt; ?{def applyLens: ?} -->
<g id="node484" class="node">
<title>Int(3) =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-6218.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="414.8032" y="-6222.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(3) =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-6207.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 15ms</text>
</g>
<!-- Int(3) =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge163" class="edge">
<title>Int(3) =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M626.2851,-6220.4629C727.7815,-6219.1257 872.3642,-6211.4332 995.6063,-6182.8701 1288.5867,-6114.9676 1614.0721,-5955.4795 1742.5521,-5888.8975"/>
<polygon fill="#000000" stroke="#000000" points="1744.2011,-5891.985 1751.4591,-5884.2667 1740.972,-5885.7742 1744.2011,-5891.985"/>
</g>
<!-- ((String, Int, Boolean, Double, Long, Char)) =&gt; ?{def applyLens: ?} -->
<g id="node485" class="node">
<title>((String, Int, Boolean, Double, Long, Char)) =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-26659.8701" rx="278.7002" ry="26.7407"/>
<text text-anchor="start" x="308.8032" y="-26663.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((String, Int, Boolean, Double, Long, Char)) =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-26648.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out0] -->
<g id="node541" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out0]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-10054.8701" rx="497.1922" ry="26.7407"/>
<text text-anchor="start" x="4430.8434" y="-10058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out0]</text>
<text text-anchor="middle" x="4774.3434" y="-10043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out0] -->
<g id="edge13" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out0]</title>
<path fill="none" stroke="#000000" d="M3755.6433,-10054.8701C3915.0198,-10054.8701 4099.3415,-10054.8701 4267.0237,-10054.8701"/>
<polygon fill="#000000" stroke="#000000" points="4267.0244,-10058.3702 4277.0244,-10054.8701 4267.0243,-10051.3702 4267.0244,-10058.3702"/>
</g>
<!-- shapeless.ops.hlist.Prepend[String :: shapeless.HNil,this.Out :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Prepend[shapeless.HNil,this.Out :: shapeless.HNil] -->
<g id="edge509" class="edge">
<title>shapeless.ops.hlist.Prepend[String :: shapeless.HNil,this.Out :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Prepend[shapeless.HNil,this.Out :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M3663.3637,-12232.8701C3907.6714,-12232.8701 4242.932,-12232.8701 4481.0969,-12232.8701"/>
<polygon fill="#000000" stroke="#000000" points="4481.299,-12236.3702 4491.2989,-12232.8701 4481.2989,-12229.3702 4481.299,-12236.3702"/>
</g>
<!-- String(&#39;Two&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node488" class="node">
<title>String(&#39;Two&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-6146.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="416.3032" y="-6150.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Two&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-6135.6701" font-family="Times,serif" font-size="14.00" fill="#000000">28 times = 82ms</text>
</g>
<!-- String(&#39;Two&#39;) =&gt; ?{def &#45;&gt;: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge260" class="edge">
<title>String(&#39;Two&#39;) =&gt; ?{def &#45;&gt;: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M624.4141,-6145.7778C725.6539,-6142.9753 870.7959,-6134.6217 995.6063,-6110.8701 1273.6559,-6057.9568 1590.6947,-5940.9487 1728.7242,-5887.0539"/>
<polygon fill="#000000" stroke="#000000" points="1730.3149,-5890.1899 1738.35,-5883.2843 1727.7623,-5883.6719 1730.3149,-5890.1899"/>
</g>
<!-- eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(15)]] -->
<g id="node489" class="node">
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(15)]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-6290.8701" rx="371.8763" ry="26.7407"/>
<text text-anchor="start" x="1544.1015" y="-6294.6701" font-family="Times,serif" font-size="14.00" fill="#000000">eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(15)]]</text>
<text text-anchor="middle" x="1799.1015" y="-6279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 206ms</text>
</g>
<!-- eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(15)]]&#45;&gt;eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.GreaterEqual[Int(0)],RA] -->
<g id="edge9" class="edge">
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(15)]]&#45;&gt;eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.GreaterEqual[Int(0)],RA]</title>
<path fill="none" stroke="#000000" d="M2043.0067,-6311.2038C2329.5006,-6335.0879 2802.4615,-6374.5174 3093.0228,-6398.7406"/>
<polygon fill="#000000" stroke="#000000" points="3093.0252,-6402.2529 3103.2814,-6399.5959 3093.6068,-6395.2771 3093.0252,-6402.2529"/>
</g>
<!-- eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(15)]]&#45;&gt;eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.LessEqual[Int(15)],RB] -->
<g id="edge255" class="edge">
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(15)]]&#45;&gt;eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.LessEqual[Int(15)],RB]</title>
<path fill="none" stroke="#000000" d="M2171.212,-6290.3891C2414.2032,-6290.075 2730.3092,-6289.6665 2973.4776,-6289.3522"/>
<polygon fill="#000000" stroke="#000000" points="2973.5516,-6292.8522 2983.5471,-6289.3391 2973.5425,-6285.8522 2973.5516,-6292.8522"/>
</g>
<!-- scalaz.std.map.BuildKeyConstraint[String] -->
<g id="node490" class="node">
<title>scalaz.std.map.BuildKeyConstraint[String]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-26083.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="4656.8434" y="-26087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.std.map.BuildKeyConstraint[String]</text>
<text text-anchor="middle" x="4774.3434" y="-26072.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[(Int, Int, Int)] -->
<g id="node491" class="node">
<title>org.scalactic.Equality[(Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-8758.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="3248.4729" y="-8762.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(Int, Int, Int)]</text>
<text text-anchor="middle" x="3346.4729" y="-8747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalactic.Equality[(Int, Int, Int)]&#45;&gt;scalaz.Equal[(Int, Int, Int)] -->
<g id="edge488" class="edge">
<title>org.scalactic.Equality[(Int, Int, Int)]&#45;&gt;scalaz.Equal[(Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M3496.5813,-8758.8701C3779.2119,-8758.8701 4385.5105,-8758.8701 4648.4276,-8758.8701"/>
<polygon fill="#000000" stroke="#000000" points="4648.7797,-8762.3702 4658.7796,-8758.8701 4648.7796,-8755.3702 4648.7797,-8762.3702"/>
</g>
<!-- List[Int] =&gt; ?{def applyOptional: ?} -->
<g id="node492" class="node">
<title>List[Int] =&gt; ?{def applyOptional: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-26731.8701" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="397.3032" y="-26735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Int] =&gt; ?{def applyOptional: ?}</text>
<text text-anchor="middle" x="497.8032" y="-26720.6701" font-family="Times,serif" font-size="14.00" fill="#000000">19 times = 20ms</text>
</g>
<!-- org.scalactic.Equality[Option[List[Int]]] -->
<g id="node493" class="node">
<title>org.scalactic.Equality[Option[List[Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-9694.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="1689.6015" y="-9698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[List[Int]]]</text>
<text text-anchor="middle" x="1799.1015" y="-9683.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 24ms</text>
</g>
<!-- org.scalactic.Equality[Option[List[Int]]]&#45;&gt;scalaz.Equal[Option[List[Int]]] -->
<g id="edge543" class="edge">
<title>org.scalactic.Equality[Option[List[Int]]]&#45;&gt;scalaz.Equal[Option[List[Int]]]</title>
<path fill="none" stroke="#000000" d="M1965.4318,-9694.8701C2271.6844,-9694.8701 2919.5493,-9694.8701 3205.6306,-9694.8701"/>
<polygon fill="#000000" stroke="#000000" points="3205.6536,-9698.3702 3215.6536,-9694.8701 3205.6536,-9691.3702 3205.6536,-9698.3702"/>
</g>
<!-- org.scalactic.Equality[scalaz.Tree[Int]] -->
<g id="node494" class="node">
<title>org.scalactic.Equality[scalaz.Tree[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-8542.8701" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="3239.9729" y="-8546.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scalaz.Tree[Int]]</text>
<text text-anchor="middle" x="3346.4729" y="-8531.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 15ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Tree[Int]]&#45;&gt;scalaz.Equal[scalaz.Tree[Int]] -->
<g id="edge333" class="edge">
<title>org.scalactic.Equality[scalaz.Tree[Int]]&#45;&gt;scalaz.Equal[scalaz.Tree[Int]]</title>
<path fill="none" stroke="#000000" d="M3506.8013,-8546.6877C3789.842,-8553.4274 4373.159,-8567.3172 4638.087,-8573.6256"/>
<polygon fill="#000000" stroke="#000000" points="4638.0671,-8577.126 4648.1476,-8573.8651 4638.2338,-8570.128 4638.0671,-8577.126"/>
</g>
<!-- scalaz.Equal[Option[Unit]]&#45;&gt;scalaz.Equal[Unit] -->
<g id="edge196" class="edge">
<title>scalaz.Equal[Option[Unit]]&#45;&gt;scalaz.Equal[Unit]</title>
<path fill="none" stroke="#000000" d="M1915.0892,-20755.8701C2209.9256,-20755.8701 2983.7316,-20755.8701 3252.7172,-20755.8701"/>
<polygon fill="#000000" stroke="#000000" points="3252.841,-20759.3702 3262.841,-20755.8701 3252.8409,-20752.3702 3252.841,-20759.3702"/>
</g>
<!-- monocle.function.Each[scalaz.Tree[Int],A] -->
<g id="node496" class="node">
<title>monocle.function.Each[scalaz.Tree[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-21331.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="380.3032" y="-21335.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[scalaz.Tree[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-21320.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- monocle.function.Each[scalaz.Tree[Int],A]&#45;&gt;shapeless.Generic.Aux[scalaz.Tree[Int],SGen] -->
<g id="edge491" class="edge">
<title>monocle.function.Each[scalaz.Tree[Int],A]&#45;&gt;shapeless.Generic.Aux[scalaz.Tree[Int],SGen]</title>
<path fill="none" stroke="#000000" d="M675.335,-21331.8701C916.495,-21331.8701 1346.42,-21331.8701 1598.8284,-21331.8701"/>
<polygon fill="#000000" stroke="#000000" points="1598.8488,-21335.3702 1608.8488,-21331.8701 1598.8487,-21328.3702 1598.8488,-21335.3702"/>
</g>
<!-- scala.collection.immutable.Map[String,Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node497" class="node">
<title>scala.collection.immutable.Map[String,Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-314.8701" rx="282.2713" ry="26.7407"/>
<text text-anchor="start" x="306.3032" y="-318.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[String,Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 34ms</text>
</g>
<!-- scala.collection.immutable.Map[String,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;eu.timepit.refined.api.RefType[scala.collection.immutable.Map] -->
<g id="edge456" class="edge">
<title>scala.collection.immutable.Map[String,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;eu.timepit.refined.api.RefType[scala.collection.immutable.Map]</title>
<path fill="none" stroke="#000000" d="M769.0139,-307.3671C994.1358,-301.1392 1312.4115,-292.3342 1535.4222,-286.1647"/>
<polygon fill="#000000" stroke="#000000" points="1535.7373,-289.6574 1545.6366,-285.8821 1535.5436,-282.6601 1535.7373,-289.6574"/>
</g>
<!-- scala.collection.immutable.Map[String,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge591" class="edge">
<title>scala.collection.immutable.Map[String,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M747.7816,-302.4068C853.8394,-303.0851 960.9832,-313.7726 995.6063,-350.8701 1007.3762,-363.481 991.6675,-2822.4189 1003.6063,-2834.8701 1192.9198,-3032.3071 1564.7844,-2946.058 1723.9344,-2896.6959"/>
<polygon fill="#000000" stroke="#000000" points="1725.1548,-2899.9813 1733.6475,-2893.6469 1723.0582,-2893.3026 1725.1548,-2899.9813"/>
</g>
<!-- scala.collection.immutable.Map[String,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge445" class="edge">
<title>scala.collection.immutable.Map[String,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M609.7265,-290.1838C719.7175,-272.7936 886.5015,-265.6814 995.6063,-350.8701 1411.3574,-675.4869 1743.0208,-2479.6549 1792.6739,-2761.7648"/>
<polygon fill="#000000" stroke="#000000" points="1789.274,-2762.641 1794.449,-2771.886 1796.1688,-2761.4317 1789.274,-2762.641"/>
</g>
<!-- ((Int, Int, Int)) =&gt; ?{def shouldEqual: ?} -->
<g id="node498" class="node">
<title>((Int, Int, Int)) =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-1034.8701" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="385.8032" y="-1038.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Int, Int)) =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-1023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- ((Int, Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge177" class="edge">
<title>((Int, Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M653.3624,-1024.1188C781.9263,-1019.0509 950.4203,-1022.5186 995.6063,-1070.8701 1012.3348,-1088.7704 986.6381,-2817.1969 1003.6063,-2834.8701 1193.0495,-3032.1826 1564.8433,-2946.0015 1723.9544,-2896.6767"/>
<polygon fill="#000000" stroke="#000000" points="1725.1715,-2899.9631 1733.6651,-2893.6299 1723.0759,-2893.2841 1725.1715,-2899.9631"/>
</g>
<!-- ((Int, Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge379" class="edge">
<title>((Int, Int, Int)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M602.6282,-1013.6992C710.8848,-997.939 879.8811,-991.0387 995.6063,-1070.8701 1621.3073,-1502.5006 1771.0919,-2551.2276 1795.2271,-2761.7191"/>
<polygon fill="#000000" stroke="#000000" points="1791.7796,-2762.3838 1796.3739,-2771.9306 1798.7359,-2761.6025 1791.7796,-2762.3838"/>
</g>
<!-- Option[(List[Int], Int)] =&gt; ?{def shouldEqual: ?} -->
<g id="node499" class="node">
<title>Option[(List[Int], Int)] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-962.8701" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="363.3032" y="-966.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[(List[Int], Int)] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-951.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- Option[(List[Int], Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge480" class="edge">
<title>Option[(List[Int], Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M679.736,-951.2227C803.9876,-947.715 953.4565,-953.7594 995.6063,-998.8701 1013.0159,-1017.5025 985.9471,-2816.474 1003.6063,-2834.8701 1193.032,-3032.1995 1564.8354,-2946.0092 1723.9517,-2896.6793"/>
<polygon fill="#000000" stroke="#000000" points="1725.1693,-2899.9656 1733.6627,-2893.6322 1723.0735,-2893.2866 1725.1693,-2899.9656"/>
</g>
<!-- Option[(List[Int], Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge313" class="edge">
<title>Option[(List[Int], Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M609.2106,-940.4245C717.8337,-925.0457 882.7163,-919.7046 995.6063,-998.8701 1640.7161,-1451.2605 1775.361,-2545.8726 1795.9273,-2761.5977"/>
<polygon fill="#000000" stroke="#000000" points="1792.4618,-2762.1317 1796.8733,-2771.7644 1799.4317,-2761.4832 1792.4618,-2762.1317"/>
</g>
<!-- scalaz.Equal[scalaz.Validation[Nothing,Int]] -->
<g id="node500" class="node">
<title>scalaz.Equal[scalaz.Validation[Nothing,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-12052.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="1677.1015" y="-12056.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Validation[Nothing,Int]]</text>
<text text-anchor="middle" x="1799.1015" y="-12041.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 154ms</text>
</g>
<!-- scalaz.Equal[scalaz.Validation[Nothing,Int]]&#45;&gt;scalaz.Equal[E] -->
<g id="edge517" class="edge">
<title>scalaz.Equal[scalaz.Validation[Nothing,Int]]&#45;&gt;scalaz.Equal[E]</title>
<path fill="none" stroke="#000000" d="M1980.7739,-12048.6434C2314.142,-12040.8875 3011.9315,-12024.6533 3258.1495,-12018.9249"/>
<polygon fill="#000000" stroke="#000000" points="3258.5614,-12022.4164 3268.4773,-12018.6846 3258.3985,-12015.4183 3258.5614,-12022.4164"/>
</g>
<!-- scalaz.Order[E] -->
<g id="node616" class="node">
<title>scalaz.Order[E]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-12088.8701" rx="72.25" ry="26.7407"/>
<text text-anchor="start" x="3303.4729" y="-12092.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Order[E]</text>
<text text-anchor="middle" x="3346.4729" y="-12077.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scalaz.Equal[scalaz.Validation[Nothing,Int]]&#45;&gt;scalaz.Order[E] -->
<g id="edge240" class="edge">
<title>scalaz.Equal[scalaz.Validation[Nothing,Int]]&#45;&gt;scalaz.Order[E]</title>
<path fill="none" stroke="#000000" d="M1980.7739,-12057.0967C2316.8971,-12064.9167 3023.4901,-12081.3558 3264.1611,-12086.9551"/>
<polygon fill="#000000" stroke="#000000" points="3264.1621,-12090.4559 3274.2409,-12087.1896 3264.325,-12083.4578 3264.1621,-12090.4559"/>
</g>
<!-- Int(1) =&gt; monocle.refined.IntBits -->
<g id="node501" class="node">
<title>Int(1) =&gt; monocle.refined.IntBits</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-6434.8701" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="405.3032" y="-6438.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(1) =&gt; monocle.refined.IntBits</text>
<text text-anchor="middle" x="497.8032" y="-6423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 102ms</text>
</g>
<!-- Int(1) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge198" class="edge">
<title>Int(1) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M631.1664,-6444.1688C761.2678,-6450.0283 946.5449,-6448.7574 995.6063,-6398.8701 1006.8425,-6387.4447 994.7949,-6268.2547 1003.6063,-6254.8701 1159.7099,-6017.7466 1502.4368,-5916.9061 1682.8236,-5878.9458"/>
<polygon fill="#000000" stroke="#000000" points="1683.7977,-5882.3183 1692.8781,-5876.8597 1682.3756,-5875.4643 1683.7977,-5882.3183"/>
</g>
<!-- Int(1) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge293" class="edge">
<title>Int(1) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M640.1641,-6434.8701C854.7054,-6434.8701 1264.493,-6434.8701 1534.8006,-6434.8701"/>
<polygon fill="#000000" stroke="#000000" points="1535.1581,-6438.3702 1545.158,-6434.8701 1535.158,-6431.3702 1535.1581,-6438.3702"/>
</g>
<!-- Int(1) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(31)]] -->
<g id="edge507" class="edge">
<title>Int(1) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(31)]]</title>
<path fill="none" stroke="#000000" d="M629.2718,-6445.162C731.3274,-6452.9249 876.3907,-6463.4655 1003.6063,-6470.8701 1154.0543,-6479.6268 1320.6145,-6487.4535 1462.286,-6493.5545"/>
<polygon fill="#000000" stroke="#000000" points="1462.3018,-6497.0583 1472.4428,-6493.9908 1462.6022,-6490.0648 1462.3018,-6497.0583"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: shapeless.HNil,Out] -->
<g id="edge117" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M5126.1552,-10414.8701C5302.5975,-10414.8701 5515.8544,-10414.8701 5692.9463,-10414.8701"/>
<polygon fill="#000000" stroke="#000000" points="5692.9511,-10418.3702 5702.951,-10414.8701 5692.951,-10411.3702 5692.9511,-10418.3702"/>
</g>
<!-- shapeless.ops.coproduct.Inject[shapeless.CNil,Int] -->
<g id="node503" class="node">
<title>shapeless.ops.coproduct.Inject[shapeless.CNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-18235.8701" rx="205.5364" ry="26.7407"/>
<text text-anchor="start" x="4636.8434" y="-18239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Inject[shapeless.CNil,Int]</text>
<text text-anchor="middle" x="4774.3434" y="-18224.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Char :: Int :: shapeless.HNil,Out0] -->
<g id="node504" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Char :: Int :: shapeless.HNil,Out0]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-10342.8701" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="4533.8434" y="-10346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Char :: Int :: shapeless.HNil,Out0]</text>
<text text-anchor="middle" x="4774.3434" y="-10331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Char :: Int :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: shapeless.HNil,Int :: shapeless.HNil,Out] -->
<g id="edge157" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Char :: Int :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: shapeless.HNil,Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M5126.1552,-10342.8701C5302.5975,-10342.8701 5515.8544,-10342.8701 5692.9463,-10342.8701"/>
<polygon fill="#000000" stroke="#000000" points="5692.9511,-10346.3702 5702.951,-10342.8701 5692.951,-10339.3702 5692.9511,-10346.3702"/>
</g>
<!-- monocle.function.At[scala.collection.immutable.Map[String,Int],String,Option[A]] -->
<g id="node505" class="node">
<title>monocle.function.At[scala.collection.immutable.Map[String,Int],String,Option[A]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-26803.8701" rx="334.423" ry="26.7407"/>
<text text-anchor="start" x="269.3032" y="-26807.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[scala.collection.immutable.Map[String,Int],String,Option[A]]</text>
<text text-anchor="middle" x="497.8032" y="-26792.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, String)]]&#45;&gt;scalaz.Equal[StateExample.this.Person] -->
<g id="edge345" class="edge">
<title>scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, String)]]&#45;&gt;scalaz.Equal[StateExample.this.Person]</title>
<path fill="none" stroke="#000000" d="M2050.2947,-15499.8701C2365.319,-15499.8701 2897.2875,-15499.8701 3171.4686,-15499.8701"/>
<polygon fill="#000000" stroke="#000000" points="3171.5146,-15503.3702 3181.5145,-15499.8701 3171.5145,-15496.3702 3171.5146,-15503.3702"/>
</g>
<!-- shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Boolean] -->
<g id="node695" class="node">
<title>shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-21619.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="3159.9729" y="-21623.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Boolean]</text>
<text text-anchor="middle" x="3346.4729" y="-21608.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Boolean]&#45;&gt;shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Boolean] -->
<g id="edge154" class="edge">
<title>shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Boolean]&#45;&gt;shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Boolean]</title>
<path fill="none" stroke="#000000" d="M2114.5671,-21619.8701C2392.152,-21619.8701 2792.7597,-21619.8701 3060.9927,-21619.8701"/>
<polygon fill="#000000" stroke="#000000" points="3061.2737,-21623.3702 3071.2737,-21619.8701 3061.2737,-21616.3702 3061.2737,-21623.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean)]&#45;&gt;shapeless.Generic.Aux[this.Out,L1] -->
<g id="edge376" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean)]&#45;&gt;shapeless.Generic.Aux[this.Out,L1]</title>
<path fill="none" stroke="#000000" d="M1994.882,-11260.1851C2180.9483,-11264.598 2452.7839,-11237.2788 2594.5966,-11062.8701 2611.0018,-11042.6941 2584.4988,-10613.5427 2602.5966,-10594.8701 2683.2102,-10511.6959 3015.3582,-10527.3116 3207.466,-10544.1765"/>
<polygon fill="#000000" stroke="#000000" points="3207.3702,-10547.6817 3217.6412,-10545.0824 3207.991,-10540.7093 3207.3702,-10547.6817"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean)]&#45;&gt;shapeless.ops.hlist.Tupler[Int :: Char :: Boolean :: shapeless.HNil] -->
<g id="edge484" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean)]&#45;&gt;shapeless.ops.hlist.Tupler[Int :: Char :: Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2049.4332,-11237.046C2330.6102,-11230.5044 2785.3987,-11219.9236 3074.9586,-11213.1869"/>
<polygon fill="#000000" stroke="#000000" points="3075.273,-11216.6806 3085.1889,-11212.9489 3075.1101,-11209.6825 3075.273,-11216.6806"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Boolean :: Char :: Int :: shapeless.HNil,L2] -->
<g id="node720" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[Boolean :: Char :: Int :: shapeless.HNil,L2]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-11278.8701" rx="305.4403" ry="26.7407"/>
<text text-anchor="start" x="3138.4729" y="-11282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[Boolean :: Char :: Int :: shapeless.HNil,L2]</text>
<text text-anchor="middle" x="3346.4729" y="-11267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Boolean :: Char :: Int :: shapeless.HNil,L2] -->
<g id="edge422" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Boolean :: Char :: Int :: shapeless.HNil,L2]</title>
<path fill="none" stroke="#000000" d="M2049.4332,-11248.6941C2319.7266,-11254.9825 2750.4516,-11265.0035 3040.6114,-11271.7541"/>
<polygon fill="#000000" stroke="#000000" points="3040.7947,-11275.2592 3050.8735,-11271.9929 3040.9576,-11268.2611 3040.7947,-11275.2592"/>
</g>
<!-- scalaz.Functor[F$macro$4] -->
<g id="node511" class="node">
<title>scalaz.Functor[F$macro$4]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-26875.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="422.3032" y="-26879.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$4]</text>
<text text-anchor="middle" x="497.8032" y="-26864.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[scala.collection.immutable.Vector[Int]] -->
<g id="node512" class="node">
<title>org.scalactic.Equality[scala.collection.immutable.Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-9334.8701" rx="251.0458" ry="26.7407"/>
<text text-anchor="start" x="3176.9729" y="-9338.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scala.collection.immutable.Vector[Int]]</text>
<text text-anchor="middle" x="3346.4729" y="-9323.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 22ms</text>
</g>
<!-- org.scalactic.Equality[scala.collection.immutable.Vector[Int]]&#45;&gt;scalaz.Equal[scala.collection.immutable.Vector[Int]] -->
<g id="edge136" class="edge">
<title>org.scalactic.Equality[scala.collection.immutable.Vector[Int]]&#45;&gt;scalaz.Equal[scala.collection.immutable.Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M3591.5267,-9329.0349C3861.4434,-9322.6077 4291.6665,-9312.3634 4552.1145,-9306.1617"/>
<polygon fill="#000000" stroke="#000000" points="4552.5475,-9309.6525 4562.4614,-9305.9153 4552.3808,-9302.6545 4552.5475,-9309.6525"/>
</g>
<!-- monocle.function.Field1[Int :: String :: Boolean :: shapeless.HNil,A] -->
<g id="node513" class="node">
<title>monocle.function.Field1[Int :: String :: Boolean :: shapeless.HNil,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-18379.8701" rx="277.786" ry="26.7407"/>
<text text-anchor="start" x="309.3032" y="-18383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field1[Int :: String :: Boolean :: shapeless.HNil,A]</text>
<text text-anchor="middle" x="497.8032" y="-18368.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- monocle.function.Field1[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._0.N,Int,(Int, Int :: String :: Boolean :: shapeless.HNil)] -->
<g id="edge101" class="edge">
<title>monocle.function.Field1[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._0.N,Int,(Int, Int :: String :: Boolean :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M765.0674,-18387.2638C917.546,-18391.4821 1113.6907,-18396.9084 1294.0905,-18401.8991"/>
<polygon fill="#000000" stroke="#000000" points="1294.2119,-18405.4037 1304.3049,-18402.1817 1294.4055,-18398.4064 1294.2119,-18405.4037"/>
</g>
<!-- shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._0.N,A] -->
<g id="node577" class="node">
<title>shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._0.N,A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-18343.8701" rx="359.8347" ry="26.7407"/>
<text text-anchor="start" x="1552.6015" y="-18347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._0.N,A]</text>
<text text-anchor="middle" x="1799.1015" y="-18332.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- monocle.function.Field1[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._0.N,A] -->
<g id="edge197" class="edge">
<title>monocle.function.Field1[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: shapeless.HNil,shapeless.nat._0.N,A]</title>
<path fill="none" stroke="#000000" d="M765.0674,-18372.4763C963.4877,-18366.987 1235.8514,-18359.4522 1451.2406,-18353.4935"/>
<polygon fill="#000000" stroke="#000000" points="1451.5543,-18356.9863 1461.4537,-18353.211 1451.3607,-18349.989 1451.5543,-18356.9863"/>
</g>
<!-- Float :: Char :: Long :: shapeless.HNil =&gt; ?{def ::: ?} -->
<g id="node514" class="node">
<title>Float :: Char :: Long :: shapeless.HNil =&gt; ?{def ::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-26947.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="350.3032" y="-26951.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Float :: Char :: Long :: shapeless.HNil =&gt; ?{def ::: ?}</text>
<text text-anchor="middle" x="497.8032" y="-26936.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[String] =&gt; ?{def shouldBe: ?} -->
<g id="node515" class="node">
<title>Option[String] =&gt; ?{def shouldBe: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-890.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="393.3032" y="-894.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[String] =&gt; ?{def shouldBe: ?}</text>
<text text-anchor="middle" x="497.8032" y="-879.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 15ms</text>
</g>
<!-- Option[String] =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge535" class="edge">
<title>Option[String] =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M644.5937,-880.4766C774.1466,-874.9093 949.3934,-877.4028 995.6063,-926.8701 1013.697,-946.2347 985.2562,-2815.7511 1003.6063,-2834.8701 1193.0157,-3032.215 1564.828,-2946.0162 1723.9492,-2896.6817"/>
<polygon fill="#000000" stroke="#000000" points="1725.1672,-2899.9678 1733.6605,-2893.6343 1723.0713,-2893.2889 1725.1672,-2899.9678"/>
</g>
<!-- Option[String] =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge415" class="edge">
<title>Option[String] =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M597.6401,-869.8464C706.0103,-852.9573 879.1427,-843.9407 995.6063,-926.8701 1660.6637,-1400.4321 1779.653,-2542.1136 1796.616,-2761.9133"/>
<polygon fill="#000000" stroke="#000000" points="1793.1316,-2762.2532 1797.3693,-2771.9636 1800.112,-2761.73 1793.1316,-2762.2532"/>
</g>
<!-- Option[(scala.collection.immutable.Vector[Int], Int)] =&gt; ?{def shouldEqual: ?} -->
<g id="node516" class="node">
<title>Option[(scala.collection.immutable.Vector[Int], Int)] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-818.8701" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="279.8032" y="-822.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[(scala.collection.immutable.Vector[Int], Int)] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-807.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Option[(scala.collection.immutable.Vector[Int], Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge262" class="edge">
<title>Option[(scala.collection.immutable.Vector[Int], Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M785.3824,-807.1099C878.1908,-810.0028 965.0714,-822.1798 995.6063,-854.8701 1014.3782,-874.9669 984.5653,-2815.0282 1003.6063,-2834.8701 1193.0007,-3032.2295 1564.8211,-2946.0228 1723.9469,-2896.6839"/>
<polygon fill="#000000" stroke="#000000" points="1725.1652,-2899.9699 1733.6585,-2893.6363 1723.0693,-2893.2911 1725.1652,-2899.9699"/>
</g>
<!-- Option[(scala.collection.immutable.Vector[Int], Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge88" class="edge">
<title>Option[(scala.collection.immutable.Vector[Int], Int)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M621.7196,-794.0718C730.5441,-779.5587 887.8709,-777.0544 995.6063,-854.8701 1680.1019,-1349.2705 1783.5902,-2536.386 1797.2134,-2761.6307"/>
<polygon fill="#000000" stroke="#000000" points="1793.7368,-2762.1366 1797.8125,-2771.9161 1800.725,-2761.7294 1793.7368,-2762.1366"/>
</g>
<!-- shapeless.ops.hlist.Init.Aux[(Int, Boolean),I] -->
<g id="node517" class="node">
<title>shapeless.ops.hlist.Init.Aux[(Int, Boolean),I]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-27019.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="1677.1015" y="-27023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init.Aux[(Int, Boolean),I]</text>
<text text-anchor="middle" x="1799.1015" y="-27008.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[Option[Nothing]] -->
<g id="node518" class="node">
<title>org.scalactic.Equality[Option[Nothing]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-11944.8701" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="1690.1015" y="-11948.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[Nothing]]</text>
<text text-anchor="middle" x="1799.1015" y="-11933.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 268ms</text>
</g>
<!-- org.scalactic.Equality[Option[Nothing]]&#45;&gt;scalaz.Equal[Option[Nothing]] -->
<g id="edge392" class="edge">
<title>org.scalactic.Equality[Option[Nothing]]&#45;&gt;scalaz.Equal[Option[Nothing]]</title>
<path fill="none" stroke="#000000" d="M1964.6973,-11944.8701C2270.5903,-11944.8701 2919.0781,-11944.8701 3205.4701,-11944.8701"/>
<polygon fill="#000000" stroke="#000000" points="3205.504,-11948.3702 3215.504,-11944.8701 3205.504,-11941.3702 3205.504,-11948.3702"/>
</g>
<!-- monocle.function.Each[scalaz.OneAnd[List,Int],A] -->
<g id="node519" class="node">
<title>monocle.function.Each[scalaz.OneAnd[List,Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-14923.8701" rx="210.0214" ry="26.7407"/>
<text text-anchor="start" x="357.3032" y="-14927.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[scalaz.OneAnd[List,Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-14912.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 217ms</text>
</g>
<!-- monocle.function.Each[scalaz.OneAnd[List,Int],A]&#45;&gt;shapeless.Generic.Aux[scalaz.OneAnd[List,Int],SGen] -->
<g id="edge46" class="edge">
<title>monocle.function.Each[scalaz.OneAnd[List,Int],A]&#45;&gt;shapeless.Generic.Aux[scalaz.OneAnd[List,Int],SGen]</title>
<path fill="none" stroke="#000000" d="M677.6885,-14937.8075C774.2727,-14945.0043 895.3962,-14953.5717 1003.6063,-14959.8701 1196.8958,-14971.1204 1416.78,-14980.8356 1576.3117,-14987.3282"/>
<polygon fill="#000000" stroke="#000000" points="1576.5978,-14990.8426 1586.7316,-14987.7512 1576.8818,-14983.8484 1576.5978,-14990.8426"/>
</g>
<!-- monocle.function.Each[List[Int],Int] -->
<g id="node521" class="node">
<title>monocle.function.Each[List[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-14923.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="1699.1015" y="-14927.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[List[Int],Int]</text>
<text text-anchor="middle" x="1799.1015" y="-14912.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 159ms</text>
</g>
<!-- monocle.function.Each[scalaz.OneAnd[List,Int],A]&#45;&gt;monocle.function.Each[List[Int],Int] -->
<g id="edge42" class="edge">
<title>monocle.function.Each[scalaz.OneAnd[List,Int],A]&#45;&gt;monocle.function.Each[List[Int],Int]</title>
<path fill="none" stroke="#000000" d="M707.9636,-14923.8701C966.8991,-14923.8701 1401.3034,-14923.8701 1636.3008,-14923.8701"/>
<polygon fill="#000000" stroke="#000000" points="1636.3025,-14927.3702 1646.3024,-14923.8701 1636.3024,-14920.3702 1636.3025,-14927.3702"/>
</g>
<!-- monocle.function.Each[Int :: List[Int] :: shapeless.HNil,A] -->
<g id="node761" class="node">
<title>monocle.function.Each[Int :: List[Int] :: shapeless.HNil,A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-14779.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="1638.1015" y="-14783.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: List[Int] :: shapeless.HNil,A]</text>
<text text-anchor="middle" x="1799.1015" y="-14768.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 26ms</text>
</g>
<!-- monocle.function.Each[scalaz.OneAnd[List,Int],A]&#45;&gt;monocle.function.Each[Int :: List[Int] :: shapeless.HNil,A] -->
<g id="edge263" class="edge">
<title>monocle.function.Each[scalaz.OneAnd[List,Int],A]&#45;&gt;monocle.function.Each[Int :: List[Int] :: shapeless.HNil,A]</title>
<path fill="none" stroke="#000000" d="M589.3142,-14899.5563C690.0293,-14873.9208 857.1022,-14834.6949 1003.6063,-14815.8701 1185.4133,-14792.509 1392.2842,-14783.6897 1549.4876,-14780.6155"/>
<polygon fill="#000000" stroke="#000000" points="1549.8376,-14784.1096 1559.7697,-14780.4212 1549.7053,-14777.1108 1549.8376,-14784.1096"/>
</g>
<!-- scala.languageFeature.postfixOps -->
<g id="node520" class="node">
<title>scala.languageFeature.postfixOps</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-27091.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="405.8032" y="-27095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.languageFeature.postfixOps</text>
<text text-anchor="middle" x="497.8032" y="-27080.6701" font-family="Times,serif" font-size="14.00" fill="#000000">92 times = 18ms</text>
</g>
<!-- monocle.function.Each[List[Int],Int]&#45;&gt;shapeless.Generic.Aux[List[Int],SGen] -->
<g id="edge322" class="edge">
<title>monocle.function.Each[List[Int],Int]&#45;&gt;shapeless.Generic.Aux[List[Int],SGen]</title>
<path fill="none" stroke="#000000" d="M1951.7042,-14922.0949C2241.671,-14918.7218 2870.4057,-14911.408 3174.6625,-14907.8687"/>
<polygon fill="#000000" stroke="#000000" points="3174.9447,-14911.3657 3184.9033,-14907.7495 3174.8632,-14904.3662 3174.9447,-14911.3657"/>
</g>
<!-- ComposeIssueExample.this.B[Nothing,String] =&gt; ComposeIssueExample.this.A[String,?U] -->
<g id="node522" class="node">
<title>ComposeIssueExample.this.B[Nothing,String] =&gt; ComposeIssueExample.this.A[String,?U]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-27163.8701" rx="368.3053" ry="26.7407"/>
<text text-anchor="start" x="245.3032" y="-27167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ComposeIssueExample.this.B[Nothing,String] =&gt; ComposeIssueExample.this.A[String,?U]</text>
<text text-anchor="middle" x="497.8032" y="-27152.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.LensPolyExample.Semi.type =&gt; ?{def q_=: ?} -->
<g id="node523" class="node">
<title>monocle.LensPolyExample.Semi.type =&gt; ?{def q_=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-27235.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="342.8032" y="-27239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.LensPolyExample.Semi.type =&gt; ?{def q_=: ?}</text>
<text text-anchor="middle" x="497.8032" y="-27224.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- LensPolyExample.this.Foo[Int,Symbol] =&gt; ?{def shouldEqual: ?} -->
<g id="node524" class="node">
<title>LensPolyExample.this.Foo[Int,Symbol] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-746.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="315.8032" y="-750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">LensPolyExample.this.Foo[Int,Symbol] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- LensPolyExample.this.Foo[Int,Symbol] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge80" class="edge">
<title>LensPolyExample.this.Foo[Int,Symbol] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M735.8943,-734.3819C845.7201,-734.3363 959.6769,-744.399 995.6063,-782.8701 1015.0593,-803.699 983.8743,-2814.3053 1003.6063,-2834.8701 1192.9867,-3032.2429 1564.8148,-2946.0289 1723.9447,-2896.686"/>
<polygon fill="#000000" stroke="#000000" points="1725.1634,-2899.9719 1733.6566,-2893.6381 1723.0674,-2893.2931 1725.1634,-2899.9719"/>
</g>
<!-- LensPolyExample.this.Foo[Int,Symbol] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge317" class="edge">
<title>LensPolyExample.this.Foo[Int,Symbol] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M615.358,-722.6583C724.5053,-707.1539 886.1811,-702.774 995.6063,-782.8701 1700.0361,-1298.4923 1787.5337,-2532.1692 1797.798,-2761.7546"/>
<polygon fill="#000000" stroke="#000000" points="1794.3085,-2762.0792 1798.2305,-2771.9214 1801.3022,-2761.7816 1794.3085,-2762.0792"/>
</g>
<!-- List[Int] =&gt; ?{def applyIso: ?} -->
<g id="node526" class="node">
<title>List[Int] =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-27307.8701" rx="131.5437" ry="26.7407"/>
<text text-anchor="start" x="412.8032" y="-27311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Int] =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-27296.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out] -->
<g id="edge259" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Char :: Int :: shapeless.HNil,Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M6584.382,-11134.8701C6602.4092,-11134.8701 6620.4797,-11134.8701 6638.5201,-11134.8701"/>
<polygon fill="#000000" stroke="#000000" points="6638.539,-11138.3702 6648.539,-11134.8701 6638.539,-11131.3702 6638.539,-11138.3702"/>
</g>
<!-- org.scalactic.Equality[Option[SymbolicSyntaxExample.this.Sofa]] -->
<g id="node528" class="node">
<title>org.scalactic.Equality[Option[SymbolicSyntaxExample.this.Sofa]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-27379.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="315.8032" y="-27383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[SymbolicSyntaxExample.this.Sofa]]</text>
<text text-anchor="middle" x="497.8032" y="-27368.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scalaz.Equal[Option[SymbolicSyntaxExample.this.Sofa]] -->
<g id="node608" class="node">
<title>scalaz.Equal[Option[SymbolicSyntaxExample.this.Sofa]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-27379.8701" rx="234.1047" ry="26.7407"/>
<text text-anchor="start" x="1641.6015" y="-27383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[SymbolicSyntaxExample.this.Sofa]]</text>
<text text-anchor="middle" x="1799.1015" y="-27368.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[Option[SymbolicSyntaxExample.this.Sofa]]&#45;&gt;scalaz.Equal[Option[SymbolicSyntaxExample.this.Sofa]] -->
<g id="edge457" class="edge">
<title>org.scalactic.Equality[Option[SymbolicSyntaxExample.this.Sofa]]&#45;&gt;scalaz.Equal[Option[SymbolicSyntaxExample.this.Sofa]]</title>
<path fill="none" stroke="#000000" d="M766.6437,-27379.8701C998.4457,-27379.8701 1330.2973,-27379.8701 1554.6922,-27379.8701"/>
<polygon fill="#000000" stroke="#000000" points="1554.9617,-27383.3702 1564.9617,-27379.8701 1554.9617,-27376.3702 1554.9617,-27383.3702"/>
</g>
<!-- monocle.function.At[Map[String,JsonExample.this.Json],String,A] -->
<g id="node529" class="node">
<title>monocle.function.At[Map[String,JsonExample.this.Json],String,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-27451.8701" rx="271.558" ry="26.7407"/>
<text text-anchor="start" x="313.8032" y="-27455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[Map[String,JsonExample.this.Json],String,A]</text>
<text text-anchor="middle" x="497.8032" y="-27440.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- StateExample.this._age.type =&gt; ?{def mod_: ?} -->
<g id="node532" class="node">
<title>StateExample.this._age.type =&gt; ?{def mod_: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-27523.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="365.3032" y="-27527.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._age.type =&gt; ?{def mod_: ?}</text>
<text text-anchor="middle" x="497.8032" y="-27512.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalactic.Equality[LensPolyExample.this.Foo[Int,Symbol]] -->
<g id="node533" class="node">
<title>org.scalactic.Equality[LensPolyExample.this.Foo[Int,Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-27595.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="324.8032" y="-27599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[LensPolyExample.this.Foo[Int,Symbol]]</text>
<text text-anchor="middle" x="497.8032" y="-27584.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[LensPolyExample.this.Foo[Int,Symbol]] -->
<g id="node550" class="node">
<title>scalaz.Equal[LensPolyExample.this.Foo[Int,Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-27595.8701" rx="220.7347" ry="26.7407"/>
<text text-anchor="start" x="1651.1015" y="-27599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[LensPolyExample.this.Foo[Int,Symbol]]</text>
<text text-anchor="middle" x="1799.1015" y="-27584.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalactic.Equality[LensPolyExample.this.Foo[Int,Symbol]]&#45;&gt;scalaz.Equal[LensPolyExample.this.Foo[Int,Symbol]] -->
<g id="edge62" class="edge">
<title>org.scalactic.Equality[LensPolyExample.this.Foo[Int,Symbol]]&#45;&gt;scalaz.Equal[LensPolyExample.this.Foo[Int,Symbol]]</title>
<path fill="none" stroke="#000000" d="M754.1211,-27595.8701C990.966,-27595.8701 1339.7385,-27595.8701 1568.1438,-27595.8701"/>
<polygon fill="#000000" stroke="#000000" points="1568.2499,-27599.3702 1578.2498,-27595.8701 1568.2498,-27592.3702 1568.2499,-27599.3702"/>
</g>
<!-- monocle.function.Index[List[SymbolicSyntaxExample.this.Article],Int,A] -->
<g id="node534" class="node">
<title>monocle.function.Index[List[SymbolicSyntaxExample.this.Article],Int,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-27667.8701" rx="298.2982" ry="26.7407"/>
<text text-anchor="start" x="294.8032" y="-27671.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[List[SymbolicSyntaxExample.this.Article],Int,A]</text>
<text text-anchor="middle" x="497.8032" y="-27656.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Empty[String] -->
<g id="node536" class="node">
<title>monocle.function.Empty[String]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-27739.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="408.3032" y="-27743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Empty[String]</text>
<text text-anchor="middle" x="497.8032" y="-27728.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Field6[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,A] -->
<g id="node537" class="node">
<title>monocle.function.Field6[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-12412.8701" rx="368.3053" ry="26.7407"/>
<text text-anchor="start" x="245.3032" y="-12416.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field6[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,A]</text>
<text text-anchor="middle" x="497.8032" y="-12401.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 49ms</text>
</g>
<!-- monocle.function.Field6[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._5.N,A] -->
<g id="edge280" class="edge">
<title>monocle.function.Field6[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.At.Aux[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._5.N,A]</title>
<path fill="none" stroke="#000000" d="M842.6844,-12422.4111C1007.6766,-12426.9755 1206.6217,-12432.4793 1380.2382,-12437.2823"/>
<polygon fill="#000000" stroke="#000000" points="1380.2271,-12440.7833 1390.3201,-12437.5613 1380.4208,-12433.786 1380.2271,-12440.7833"/>
</g>
<!-- monocle.function.Field6[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._5.N,this.Out,(this.Out, Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil)] -->
<g id="edge221" class="edge">
<title>monocle.function.Field6[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._5.N,this.Out,(this.Out, Int :: String :: Boolean :: Float :: Char :: Long :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M842.6844,-12403.329C944.5553,-12400.5108 1059.3697,-12397.3345 1173.1741,-12394.1861"/>
<polygon fill="#000000" stroke="#000000" points="1173.5758,-12397.6765 1183.4752,-12393.9012 1173.3822,-12390.6791 1173.5758,-12397.6765"/>
</g>
<!-- scalaz.Functor[F$macro$28] -->
<g id="node538" class="node">
<title>scalaz.Functor[F$macro$28]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-27811.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-27815.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$28]</text>
<text text-anchor="middle" x="497.8032" y="-27800.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[Int :: shapeless.HNil] -->
<g id="node539" class="node">
<title>org.scalactic.Equality[Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-12664.8701" rx="180.1247" ry="26.7407"/>
<text text-anchor="start" x="378.3032" y="-12668.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="497.8032" y="-12653.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[Int :: shapeless.HNil]&#45;&gt;scalaz.Equal[Int :: shapeless.HNil] -->
<g id="edge568" class="edge">
<title>org.scalactic.Equality[Int :: shapeless.HNil]&#45;&gt;scalaz.Equal[Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M678.4012,-12664.8701C934.9256,-12664.8701 1400.5202,-12664.8701 1642.9372,-12664.8701"/>
<polygon fill="#000000" stroke="#000000" points="1643.2437,-12668.3702 1653.2437,-12664.8701 1643.2436,-12661.3702 1643.2437,-12668.3702"/>
</g>
<!-- scalaz.Equal[(Int, Int)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge548" class="edge">
<title>scalaz.Equal[(Int, Int)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4873.1232,-8976.9383C5005.536,-8978.0473 5247.4302,-8974.2287 5450.3374,-8938.8701 5650.2742,-8904.029 5877.5492,-8824.1487 5985.729,-8783.5424"/>
<polygon fill="#000000" stroke="#000000" points="5987.071,-8786.777 5995.1944,-8779.9755 5984.6026,-8780.2267 5987.071,-8786.777"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: shapeless.HNil,String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out] -->
<g id="edge357" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: shapeless.HNil,String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M5271.4519,-10054.8701C5361.9145,-10054.8701 5456.3468,-10054.8701 5546.9643,-10054.8701"/>
<polygon fill="#000000" stroke="#000000" points="5547.1389,-10058.3702 5557.1388,-10054.8701 5547.1388,-10051.3702 5547.1389,-10058.3702"/>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,A] -->
<g id="node542" class="node">
<title>monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-11638.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="1593.1015" y="-11642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,A]</text>
<text text-anchor="middle" x="1799.1015" y="-11627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int] -->
<g id="node600" class="node">
<title>monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-11638.8701" rx="284.9281" ry="26.7407"/>
<text text-anchor="start" x="3152.9729" y="-11642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]</text>
<text text-anchor="middle" x="3346.4729" y="-11627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,A]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int] -->
<g id="edge325" class="edge">
<title>monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,A]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M2102.0443,-11638.8701C2376.6782,-11638.8701 2778.975,-11638.8701 3051.1993,-11638.8701"/>
<polygon fill="#000000" stroke="#000000" points="3051.2316,-11642.3702 3061.2316,-11638.8701 3051.2315,-11635.3702 3051.2316,-11642.3702"/>
</g>
<!-- monocle.function.Index[scala.collection.immutable.Map[String,Int],String,A] -->
<g id="node543" class="node">
<title>monocle.function.Index[scala.collection.immutable.Map[String,Int],String,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-27883.8701" rx="313.4968" ry="26.7407"/>
<text text-anchor="start" x="284.3032" y="-27887.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[scala.collection.immutable.Map[String,Int],String,A]</text>
<text text-anchor="middle" x="497.8032" y="-27872.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Int, String, Boolean)) =&gt; ?{def shouldEqual: ?} -->
<g id="node544" class="node">
<title>((Int, String, Boolean)) =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-674.8701" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="361.8032" y="-678.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, String, Boolean)) =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-663.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- ((Int, String, Boolean)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge572" class="edge">
<title>((Int, String, Boolean)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M681.3802,-663.1697C805.3085,-659.7578 953.6546,-665.9449 995.6063,-710.8701 1015.7404,-732.4312 983.1834,-2813.5824 1003.6063,-2834.8701 1192.9737,-3032.2554 1564.8089,-2946.0346 1723.9427,-2896.6879"/>
<polygon fill="#000000" stroke="#000000" points="1725.1617,-2899.9737 1733.6548,-2893.6398 1723.0656,-2893.2949 1725.1617,-2899.9737"/>
</g>
<!-- ((Int, String, Boolean)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge63" class="edge">
<title>((Int, String, Boolean)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M604.7562,-651.9801C713.9639,-635.0477 883.0055,-627.4147 995.6063,-710.8701 1720.1288,-1247.8577 1791.3616,-2528.3298 1798.3449,-2761.9539"/>
<polygon fill="#000000" stroke="#000000" points="1794.8469,-2762.0787 1798.6235,-2771.9775 1801.8442,-2761.8841 1794.8469,-2762.0787"/>
</g>
<!-- monocle.function.Reverse[scala.collection.immutable.Vector[Int],A] -->
<g id="node545" class="node">
<title>monocle.function.Reverse[scala.collection.immutable.Vector[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-14248.8701" rx="278.7002" ry="26.7407"/>
<text text-anchor="start" x="308.8032" y="-14252.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[scala.collection.immutable.Vector[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-14237.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 27ms</text>
</g>
<!-- monocle.function.Reverse[scala.collection.immutable.Vector[Int],A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[scala.collection.immutable.Vector[Int],A] -->
<g id="edge78" class="edge">
<title>monocle.function.Reverse[scala.collection.immutable.Vector[Int],A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[scala.collection.immutable.Vector[Int],A]</title>
<path fill="none" stroke="#000000" d="M775.3682,-14251.2163C984.0447,-14252.9803 1270.0521,-14255.398 1486.7274,-14257.2295"/>
<polygon fill="#000000" stroke="#000000" points="1486.963,-14260.7316 1496.9923,-14257.3163 1487.0223,-14253.7318 1486.963,-14260.7316"/>
</g>
<!-- monocle.function.Reverse[scala.collection.immutable.Vector[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[scala.collection.immutable.Vector[Int],A] -->
<g id="edge85" class="edge">
<title>monocle.function.Reverse[scala.collection.immutable.Vector[Int],A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[scala.collection.immutable.Vector[Int],A]</title>
<path fill="none" stroke="#000000" d="M745.0891,-14236.4415C827.3316,-14232.363 919.4071,-14227.8561 1003.6063,-14223.8701 1174.7084,-14215.77 1366.5317,-14207.0777 1518.937,-14200.2638"/>
<polygon fill="#000000" stroke="#000000" points="1519.5456,-14203.7402 1529.3793,-14199.7971 1519.233,-14196.7472 1519.5456,-14203.7402"/>
</g>
<!-- scala.collection.immutable.Vector[Int] =&gt; ?{def applyPrism: ?} -->
<g id="node546" class="node">
<title>scala.collection.immutable.Vector[Int] =&gt; ?{def applyPrism: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-27955.8701" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="321.8032" y="-27959.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Vector[Int] =&gt; ?{def applyPrism: ?}</text>
<text text-anchor="middle" x="497.8032" y="-27944.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- F[List[JsonExample.this.Json]] =&gt; ?{def map: ?} -->
<g id="node547" class="node">
<title>F[List[JsonExample.this.Json]] =&gt; ?{def map: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-19459.8701" rx="204.2078" ry="26.7407"/>
<text text-anchor="start" x="361.3032" y="-19463.6701" font-family="Times,serif" font-size="14.00" fill="#000000">F[List[JsonExample.this.Json]] =&gt; ?{def map: ?}</text>
<text text-anchor="middle" x="497.8032" y="-19448.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- F[List[JsonExample.this.Json]] =&gt; ?{def map: ?}&#45;&gt;scalaz.Functor[F] -->
<g id="edge227" class="edge">
<title>F[List[JsonExample.this.Json]] =&gt; ?{def map: ?}&#45;&gt;scalaz.Functor[F]</title>
<path fill="none" stroke="#000000" d="M697.9238,-19465.4063C985.1043,-19473.3511 1502.306,-19487.6593 1709.5985,-19493.394"/>
<polygon fill="#000000" stroke="#000000" points="1709.7364,-19496.899 1719.8294,-19493.677 1709.93,-19489.9017 1709.7364,-19496.899"/>
</g>
<!-- scalaz.Equal[(Int, Boolean, String)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge451" class="edge">
<title>scalaz.Equal[(Int, Boolean, String)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M4923.8032,-7424.7189C5061.2966,-7422.7338 5270.5072,-7415.0448 5450.3374,-7388.8701 5641.4761,-7361.0494 5861.0253,-7300.8435 5973.8353,-7267.7719"/>
<polygon fill="#000000" stroke="#000000" points="5975.1488,-7271.0338 5983.7541,-7264.8532 5973.1728,-7264.3185 5975.1488,-7271.0338"/>
</g>
<!-- scalaz.Equal[(Int, Boolean, String)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge504" class="edge">
<title>scalaz.Equal[(Int, Boolean, String)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M4921.2407,-7429.8799C5058.305,-7435.221 5268.412,-7445.1122 5450.3374,-7460.8701 5630.8636,-7476.5067 5840.9415,-7503.8799 5958.236,-7519.9931"/>
<polygon fill="#000000" stroke="#000000" points="5957.8683,-7523.4754 5968.2524,-7521.3727 5958.8235,-7516.5409 5957.8683,-7523.4754"/>
</g>
<!-- scalaz.Equal[(Int, Boolean, String)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge526" class="edge">
<title>scalaz.Equal[(Int, Boolean, String)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4904.9737,-7411.7454C5080.3067,-7397.3658 5378.1465,-7385.381 5450.3374,-7460.8701 5468.3078,-7479.6614 5445.5325,-8374.2408 5458.3374,-8396.8701 5570.6519,-8595.3552 5840.6216,-8698.3502 5973.2863,-8738.4628"/>
<polygon fill="#000000" stroke="#000000" points="5972.4002,-8741.8509 5982.9835,-8741.3567 5974.4019,-8735.1432 5972.4002,-8741.8509"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[String,A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,String,Out0] -->
<g id="edge496" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[String,A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,String,Out0]</title>
<path fill="none" stroke="#000000" d="M1973.9716,-13276.8701C2240.7443,-13276.8701 2751.7848,-13276.8701 3069.4104,-13276.8701"/>
<polygon fill="#000000" stroke="#000000" points="3069.6886,-13280.3702 3079.6886,-13276.8701 3069.6886,-13273.3702 3069.6886,-13280.3702"/>
</g>
<!-- scalaz.Functor[F$macro$7] -->
<g id="node552" class="node">
<title>scalaz.Functor[F$macro$7]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-28027.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="422.3032" y="-28031.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$7]</text>
<text text-anchor="middle" x="497.8032" y="-28016.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out] -->
<g id="node553" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-10846.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="5679.4787" y="-10850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="6049.4787" y="-10835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: Boolean :: shapeless.HNil,String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out] -->
<g id="edge358" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: Boolean :: shapeless.HNil,String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M6584.382,-10846.8701C6602.4092,-10846.8701 6620.4797,-10846.8701 6638.5201,-10846.8701"/>
<polygon fill="#000000" stroke="#000000" points="6638.539,-10850.3702 6648.539,-10846.8701 6638.539,-10843.3702 6638.539,-10850.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long, Boolean)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,L2] -->
<g id="edge108" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long, Boolean)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,L2]</title>
<path fill="none" stroke="#000000" d="M2179.6129,-10846.8701C2392.7735,-10846.8701 2660.1648,-10846.8701 2885.1845,-10846.8701"/>
<polygon fill="#000000" stroke="#000000" points="2885.1917,-10850.3702 2895.1916,-10846.8701 2885.1916,-10843.3702 2885.1917,-10850.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long, Boolean)]&#45;&gt;shapeless.ops.hlist.Tupler[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil] -->
<g id="edge502" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long, Boolean)]&#45;&gt;shapeless.ops.hlist.Tupler[Int :: Char :: Boolean :: Double :: String :: Long :: Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2116.9049,-10861.6576C2373.9599,-10873.6185 2735.3815,-10890.4357 2999.8514,-10902.7416"/>
<polygon fill="#000000" stroke="#000000" points="2999.8531,-10906.2454 3010.005,-10903.214 3000.1786,-10899.2529 2999.8531,-10906.2454"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long, Boolean)]&#45;&gt;shapeless.Generic.Aux[this.Out,L1] -->
<g id="edge557" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char, Boolean, Double, String, Long, Boolean)]&#45;&gt;shapeless.Generic.Aux[this.Out,L1]</title>
<path fill="none" stroke="#000000" d="M1877.0414,-10873.1975C2036.9846,-10921.7382 2403.2952,-11003.7473 2594.5966,-10810.8701 2611.509,-10793.8183 2585.7109,-10611.9482 2602.5966,-10594.8701 2683.9233,-10512.6161 3014.944,-10527.7544 3206.8991,-10544.3264"/>
<polygon fill="#000000" stroke="#000000" points="3206.7999,-10547.831 3217.0671,-10545.2167 3207.4106,-10540.8577 3206.7999,-10547.831"/>
</g>
<!-- org.scalactic.Equality[Stream[Int]] -->
<g id="node557" class="node">
<title>org.scalactic.Equality[Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-9118.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="3251.4729" y="-9122.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Stream[Int]]</text>
<text text-anchor="middle" x="3346.4729" y="-9107.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[Stream[Int]]&#45;&gt;scalaz.Equal[Stream[Int]] -->
<g id="edge281" class="edge">
<title>org.scalactic.Equality[Stream[Int]]&#45;&gt;scalaz.Equal[Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M3492.2376,-9118.8701C3774.5517,-9118.8701 4391.1248,-9118.8701 4652.9069,-9118.8701"/>
<polygon fill="#000000" stroke="#000000" points="4653.2073,-9122.3702 4663.2073,-9118.8701 4653.2073,-9115.3702 4653.2073,-9122.3702"/>
</g>
<!-- org.scalactic.Equality[Int ==&gt;&gt; String] -->
<g id="node558" class="node">
<title>org.scalactic.Equality[Int ==&gt;&gt; String]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-8182.8701" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="3238.4729" y="-8186.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Int ==&gt;&gt; String]</text>
<text text-anchor="middle" x="3346.4729" y="-8171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalactic.Equality[Int ==&gt;&gt; String]&#45;&gt;scalaz.Equal[Int ==&gt;&gt; String] -->
<g id="edge474" class="edge">
<title>org.scalactic.Equality[Int ==&gt;&gt; String]&#45;&gt;scalaz.Equal[Int ==&gt;&gt; String]</title>
<path fill="none" stroke="#000000" d="M3490.9487,-8170.0709C3681.3676,-8156.4567 4002.5163,-8145.781 4090.3493,-8218.8701 4102.282,-8228.7997 4086.4407,-8242.9115 4098.3493,-8252.8701 4178.2925,-8319.7223 4471.8805,-8311.2278 4644.747,-8299.6965"/>
<polygon fill="#000000" stroke="#000000" points="4645.1917,-8303.1745 4654.9314,-8299.0044 4644.717,-8296.1906 4645.1917,-8303.1745"/>
</g>
<!-- LensMonoExample.this.Person =&gt; ?{def shouldEqual: ?} -->
<g id="node559" class="node">
<title>LensMonoExample.this.Person =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-602.8701" rx="236.3475" ry="26.7407"/>
<text text-anchor="start" x="338.8032" y="-606.6701" font-family="Times,serif" font-size="14.00" fill="#000000">LensMonoExample.this.Person =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 15ms</text>
</g>
<!-- LensMonoExample.this.Person =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge89" class="edge">
<title>LensMonoExample.this.Person =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M708.2402,-590.5948C825.9427,-588.8358 956.6511,-597.1486 995.6063,-638.8701 1016.4215,-661.1633 982.4925,-2812.8595 1003.6063,-2834.8701 1192.9615,-3032.2671 1564.8033,-2946.0399 1723.9408,-2896.6897"/>
<polygon fill="#000000" stroke="#000000" points="1725.1602,-2899.9754 1733.6531,-2893.6414 1723.0639,-2893.2967 1725.1602,-2899.9754"/>
</g>
<!-- LensMonoExample.this.Person =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge222" class="edge">
<title>LensMonoExample.this.Person =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M608.7744,-579.1316C718.2242,-562.4151 884.7753,-555.759 995.6063,-638.8701 1371.1098,-920.4561 1733.2054,-2500.1236 1791.0789,-2762.0669"/>
<polygon fill="#000000" stroke="#000000" points="1787.6654,-2762.8407 1793.2348,-2771.8535 1794.5015,-2761.3347 1787.6654,-2762.8407"/>
</g>
<!-- scala.collection.immutable.Map[String,Int] =&gt; ?{def applyTraversal: ?} -->
<g id="node560" class="node">
<title>scala.collection.immutable.Map[String,Int] =&gt; ?{def applyTraversal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-28099.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="299.3032" y="-28103.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[String,Int] =&gt; ?{def applyTraversal: ?}</text>
<text text-anchor="middle" x="497.8032" y="-28088.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- monocle.function.Reverse[Int :: String :: Boolean :: shapeless.HNil,A] -->
<g id="node561" class="node">
<title>monocle.function.Reverse[Int :: String :: Boolean :: shapeless.HNil,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-19315.8701" rx="284.0141" ry="26.7407"/>
<text text-anchor="start" x="304.8032" y="-19319.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Reverse[Int :: String :: Boolean :: shapeless.HNil,A]</text>
<text text-anchor="middle" x="497.8032" y="-19304.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 42ms</text>
</g>
<!-- monocle.function.Reverse[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Boolean :: String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil] -->
<g id="edge444" class="edge">
<title>monocle.function.Reverse[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Boolean :: String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M718.6872,-19332.8344C807.2315,-19339.3101 910.227,-19346.4349 1003.6063,-19351.8701 1136.5193,-19359.6062 1282.0075,-19366.6165 1411.8003,-19372.3522"/>
<polygon fill="#000000" stroke="#000000" points="1411.7675,-19375.854 1421.912,-19372.7979 1412.0758,-19368.8608 1411.7675,-19375.854"/>
</g>
<!-- monocle.function.Reverse[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[Int :: String :: Boolean :: shapeless.HNil,A] -->
<g id="edge560" class="edge">
<title>monocle.function.Reverse[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.tuple.Reverse.Aux[Int :: String :: Boolean :: shapeless.HNil,A]</title>
<path fill="none" stroke="#000000" d="M782.1723,-19315.8701C988.0416,-19315.8701 1266.473,-19315.8701 1479.9453,-19315.8701"/>
<polygon fill="#000000" stroke="#000000" points="1480.061,-19319.3702 1490.061,-19315.8701 1480.0609,-19312.3702 1480.061,-19319.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Int :: String :: Boolean :: shapeless.HNil,A] -->
<g id="node686" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[Int :: String :: Boolean :: shapeless.HNil,A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-19243.8701" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="1590.1015" y="-19247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[Int :: String :: Boolean :: shapeless.HNil,A]</text>
<text text-anchor="middle" x="1799.1015" y="-19232.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- monocle.function.Reverse[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Int :: String :: Boolean :: shapeless.HNil,A] -->
<g id="edge105" class="edge">
<title>monocle.function.Reverse[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Int :: String :: Boolean :: shapeless.HNil,A]</title>
<path fill="none" stroke="#000000" d="M718.6872,-19298.9057C807.2315,-19292.43 910.227,-19285.3052 1003.6063,-19279.8701 1170.5632,-19270.1524 1357.3622,-19261.5801 1507.9702,-19255.2406"/>
<polygon fill="#000000" stroke="#000000" points="1508.4494,-19258.7237 1518.2938,-19254.8072 1508.1557,-19251.7298 1508.4494,-19258.7237"/>
</g>
<!-- JsonExample.this.Json =&gt; ?{def shouldEqual: ?} -->
<g id="node562" class="node">
<title>JsonExample.this.Json =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-530.8701" rx="202.4653" ry="26.7407"/>
<text text-anchor="start" x="362.8032" y="-534.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JsonExample.this.Json =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-519.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 18ms</text>
</g>
<!-- JsonExample.this.Json =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge463" class="edge">
<title>JsonExample.this.Json =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M680.0741,-519.2031C804.2663,-515.7102 953.5122,-521.7815 995.6063,-566.8701 1017.1027,-589.8955 981.8015,-2812.1366 1003.6063,-2834.8701 1192.9501,-3032.2781 1564.7981,-2946.0448 1723.939,-2896.6914"/>
<polygon fill="#000000" stroke="#000000" points="1725.1587,-2899.977 1733.6516,-2893.6429 1723.0623,-2893.2983 1725.1587,-2899.977"/>
</g>
<!-- JsonExample.this.Json =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge381" class="edge">
<title>JsonExample.this.Json =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M602.6008,-507.8865C712.0188,-490.2761 883.0588,-481.5378 995.6063,-566.8701 1380.9926,-859.0656 1735.5337,-2493.7512 1791.4545,-2761.7082"/>
<polygon fill="#000000" stroke="#000000" points="1788.0717,-2762.632 1793.5353,-2771.7094 1794.9249,-2761.2061 1788.0717,-2762.632"/>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,A] -->
<g id="node563" class="node">
<title>monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,A]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-11566.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="5888.4787" y="-11570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,A]</text>
<text text-anchor="middle" x="6049.4787" y="-11555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,A]&#45;&gt;monocle.function.Each[Int :: Int :: shapeless.HNil,Int] -->
<g id="edge498" class="edge">
<title>monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,A]&#45;&gt;monocle.function.Each[Int :: Int :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M6279.5856,-11574.1769C6477.7502,-11580.4694 6762.0442,-11589.4969 6958.5919,-11595.7381"/>
<polygon fill="#000000" stroke="#000000" points="6958.6574,-11599.2418 6968.7635,-11596.0611 6958.8797,-11592.2454 6958.6574,-11599.2418"/>
</g>
<!-- monocle.function.Each[(Int, Int, Int),A] -->
<g id="node564" class="node">
<title>monocle.function.Each[(Int, Int, Int),A]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-11530.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="4664.8434" y="-11534.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[(Int, Int, Int),A]</text>
<text text-anchor="middle" x="4774.3434" y="-11519.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 28ms</text>
</g>
<!-- monocle.function.Each[(Int, Int, Int),A]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,A] -->
<g id="edge482" class="edge">
<title>monocle.function.Each[(Int, Int, Int),A]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: shapeless.HNil,A]</title>
<path fill="none" stroke="#000000" d="M4938.1094,-11535.4935C5158.631,-11541.7194 5552.7024,-11552.8449 5807.4693,-11560.0376"/>
<polygon fill="#000000" stroke="#000000" points="5807.51,-11563.54 5817.6048,-11560.3237 5807.7076,-11556.5428 5807.51,-11563.54"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int),SGen] -->
<g id="node667" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int),SGen]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-11494.8701" rx="178.7961" ry="26.7407"/>
<text text-anchor="start" x="5930.9787" y="-11498.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int),SGen]</text>
<text text-anchor="middle" x="6049.4787" y="-11483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- monocle.function.Each[(Int, Int, Int),A]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int),SGen] -->
<g id="edge518" class="edge">
<title>monocle.function.Each[(Int, Int, Int),A]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int),SGen]</title>
<path fill="none" stroke="#000000" d="M4938.1094,-11526.2466C5175.5149,-11519.5441 5614.0629,-11507.1628 5863.3968,-11500.1236"/>
<polygon fill="#000000" stroke="#000000" points="5863.7578,-11503.6149 5873.655,-11499.834 5863.5602,-11496.6177 5863.7578,-11503.6149"/>
</g>
<!-- (Int =&gt; (Int =&gt; (Int =&gt; (Int =&gt; (Int =&gt; Int))))) =&gt; ?{def applyIso: ?} -->
<g id="node565" class="node">
<title>(Int =&gt; (Int =&gt; (Int =&gt; (Int =&gt; (Int =&gt; Int))))) =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-28171.8701" rx="280.0286" ry="26.7407"/>
<text text-anchor="start" x="307.8032" y="-28175.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Int =&gt; (Int =&gt; (Int =&gt; (Int =&gt; (Int =&gt; Int))))) =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-28160.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[SymbolicSyntaxExample.this.Sofa] -->
<g id="node566" class="node">
<title>scalaz.Equal[SymbolicSyntaxExample.this.Sofa]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-27379.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="3212.4729" y="-27383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[SymbolicSyntaxExample.this.Sofa]</text>
<text text-anchor="middle" x="3346.4729" y="-27368.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- StateExample.this._age.type =&gt; ?{def modo: ?} -->
<g id="node567" class="node">
<title>StateExample.this._age.type =&gt; ?{def modo: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-28243.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="365.3032" y="-28247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._age.type =&gt; ?{def modo: ?}</text>
<text text-anchor="middle" x="497.8032" y="-28232.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Validation[Nothing,Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node568" class="node">
<title>scalaz.Validation[Nothing,Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-458.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="341.8032" y="-462.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Validation[Nothing,Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-447.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Validation[Nothing,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge77" class="edge">
<title>scalaz.Validation[Nothing,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M704.5627,-446.65C823.209,-444.6617 956.2493,-452.7087 995.6063,-494.8701 1017.7838,-518.6277 981.1106,-2811.4136 1003.6063,-2834.8701 1192.9393,-3032.2883 1564.7933,-2946.0495 1723.9374,-2896.693"/>
<polygon fill="#000000" stroke="#000000" points="1725.1573,-2899.9785 1733.6501,-2893.6443 1723.0609,-2893.2998 1725.1573,-2899.9785"/>
</g>
<!-- scalaz.Validation[Nothing,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge490" class="edge">
<title>scalaz.Validation[Nothing,Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M606.3201,-435.0943C715.998,-417.6882 884.6904,-409.8986 995.6063,-494.8701 1391.1333,-797.8788 1738.1976,-2489.3776 1791.9049,-2761.8244"/>
<polygon fill="#000000" stroke="#000000" points="1788.5373,-2762.8397 1793.8997,-2771.9773 1795.406,-2761.4901 1788.5373,-2762.8397"/>
</g>
<!-- shapeless.Generic.Aux[HListExample.this.Example,A] -->
<g id="node569" class="node">
<title>shapeless.Generic.Aux[HListExample.this.Example,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-28315.8701" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="346.3032" y="-28319.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[HListExample.this.Example,A]</text>
<text text-anchor="middle" x="497.8032" y="-28304.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 29ms</text>
</g>
<!-- org.scalactic.Equality[Option[String]] -->
<g id="node570" class="node">
<title>org.scalactic.Equality[Option[String]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-7496.8701" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="3242.9729" y="-7500.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[String]]</text>
<text text-anchor="middle" x="3346.4729" y="-7485.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scalaz.Equal[Option[String]] -->
<g id="node609" class="node">
<title>scalaz.Equal[Option[String]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-7496.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="4695.8434" y="-7500.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[String]]</text>
<text text-anchor="middle" x="4774.3434" y="-7485.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[Option[String]]&#45;&gt;scalaz.Equal[Option[String]] -->
<g id="edge289" class="edge">
<title>org.scalactic.Equality[Option[String]]&#45;&gt;scalaz.Equal[Option[String]]</title>
<path fill="none" stroke="#000000" d="M3504.3924,-7496.8701C3787.7596,-7496.8701 4377.5607,-7496.8701 4641.5712,-7496.8701"/>
<polygon fill="#000000" stroke="#000000" points="4641.5927,-7500.3702 4651.5927,-7496.8701 4641.5926,-7493.3702 4641.5927,-7500.3702"/>
</g>
<!-- monocle.function.Cons[scala.collection.immutable.Vector[Int],A] -->
<g id="node571" class="node">
<title>monocle.function.Cons[scala.collection.immutable.Vector[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-28387.8701" rx="267.0729" ry="26.7407"/>
<text text-anchor="start" x="316.8032" y="-28391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons[scala.collection.immutable.Vector[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-28376.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Boolean =&gt; ?{def shouldEqual: ?} -->
<g id="node572" class="node">
<title>Boolean =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-5282.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="402.3032" y="-5286.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-5271.6701" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 360ms</text>
</g>
<!-- Boolean =&gt; ?{def shouldEqual: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge421" class="edge">
<title>Boolean =&gt; ?{def shouldEqual: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M636.2907,-5274.0838C738.3464,-5272.0567 879.0763,-5278.7001 995.6063,-5318.8701 1330.8297,-5434.4274 1659.2265,-5726.2614 1764.3825,-5825.3513"/>
<polygon fill="#000000" stroke="#000000" points="1762.1854,-5828.0909 1771.8543,-5832.4226 1766.9971,-5823.0068 1762.1854,-5828.0909"/>
</g>
<!-- Boolean =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge133" class="edge">
<title>Boolean =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M636.0623,-5291.8298C765.3924,-5296.961 945.8903,-5294.7096 995.6063,-5246.8701 1007.2065,-5235.7077 1000.0688,-5190.575 1003.6063,-5174.8701 1217.6893,-4224.4564 1690.0714,-3120.1195 1783.0386,-2907.343"/>
<polygon fill="#000000" stroke="#000000" points="1786.3732,-2908.4532 1787.1763,-2897.8888 1779.9604,-2905.6466 1786.3732,-2908.4532"/>
</g>
<!-- Boolean =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge249" class="edge">
<title>Boolean =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M634.1364,-5292.8008C764.5344,-5298.9472 948.1587,-5297.7036 995.6063,-5246.8701 1018.4649,-5222.3803 980.4197,-2859.0494 1003.6063,-2834.8701 1194.9642,-2635.32 1572.8038,-2725.573 1728.9935,-2774.6241"/>
<polygon fill="#000000" stroke="#000000" points="1728.3661,-2778.0972 1738.9566,-2777.7919 1730.4872,-2771.4263 1728.3661,-2778.0972"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil,Out0] -->
<g id="node573" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil,Out0]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-19243.8701" rx="398.2023" ry="26.7407"/>
<text text-anchor="start" x="3072.9729" y="-19247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil,Out0]</text>
<text text-anchor="middle" x="3346.4729" y="-19232.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,String :: Boolean :: shapeless.HNil,Out] -->
<g id="node733" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,String :: Boolean :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-19243.8701" rx="393.717" ry="26.7407"/>
<text text-anchor="start" x="4503.8434" y="-19247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,String :: Boolean :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="4774.3434" y="-19232.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,String :: Boolean :: shapeless.HNil,Out] -->
<g id="edge387" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,String :: Boolean :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M3744.6889,-19243.8701C3939.7454,-19243.8701 4174.1745,-19243.8701 4370.0401,-19243.8701"/>
<polygon fill="#000000" stroke="#000000" points="4370.2212,-19247.3702 4380.2212,-19243.8701 4370.2212,-19240.3702 4370.2212,-19247.3702"/>
</g>
<!-- monocle.function.Snoc1[(Int, Boolean),I,L] -->
<g id="node574" class="node">
<title>monocle.function.Snoc1[(Int, Boolean),I,L]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-27019.8701" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="377.8032" y="-27023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc1[(Int, Boolean),I,L]</text>
<text text-anchor="middle" x="497.8032" y="-27008.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- monocle.function.Snoc1[(Int, Boolean),I,L]&#45;&gt;shapeless.ops.hlist.Init.Aux[(Int, Boolean),I] -->
<g id="edge150" class="edge">
<title>monocle.function.Snoc1[(Int, Boolean),I,L]&#45;&gt;shapeless.ops.hlist.Init.Aux[(Int, Boolean),I]</title>
<path fill="none" stroke="#000000" d="M679.0853,-27019.8701C922.8515,-27019.8701 1354.5179,-27019.8701 1604.7812,-27019.8701"/>
<polygon fill="#000000" stroke="#000000" points="1605.0827,-27023.3702 1615.0826,-27019.8701 1605.0826,-27016.3702 1605.0827,-27023.3702"/>
</g>
<!-- String(&#39;cba&#39;) =&gt; ?{def failure: ?} -->
<g id="node575" class="node">
<title>String(&#39;cba&#39;) =&gt; ?{def failure: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-28459.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="408.3032" y="-28463.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;cba&#39;) =&gt; ?{def failure: ?}</text>
<text text-anchor="middle" x="497.8032" y="-28448.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Init[shapeless.HNil] -->
<g id="node653" class="node">
<title>shapeless.ops.hlist.Init[shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-12304.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="5942.4787" y="-12308.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Init[shapeless.HNil]</text>
<text text-anchor="middle" x="6049.4787" y="-12293.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Init[Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Init[shapeless.HNil] -->
<g id="edge584" class="edge">
<title>shapeless.ops.hlist.Init[Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Init[shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M4979.5699,-12304.8701C5228.3353,-12304.8701 5643.1279,-12304.8701 5876.4344,-12304.8701"/>
<polygon fill="#000000" stroke="#000000" points="5876.7181,-12308.3702 5886.7181,-12304.8701 5876.7181,-12301.3702 5876.7181,-12308.3702"/>
</g>
<!-- Option[Char] =&gt; ?{def shouldEqual: ?} -->
<g id="node578" class="node">
<title>Option[Char] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-386.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="388.3032" y="-390.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Char] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-375.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 10ms</text>
</g>
<!-- Option[Char] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge51" class="edge">
<title>Option[Char] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M650.5425,-376.2189C779.4614,-370.9801 950.1172,-374.1348 995.6063,-422.8701 1018.4649,-447.3598 980.4197,-2810.6907 1003.6063,-2834.8701 1192.9293,-3032.298 1564.7887,-2946.0539 1723.9358,-2896.6945"/>
<polygon fill="#000000" stroke="#000000" points="1725.156,-2899.98 1733.6487,-2893.6456 1723.0595,-2893.3013 1725.156,-2899.98"/>
</g>
<!-- Option[Char] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge264" class="edge">
<title>Option[Char] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M594.4787,-364.8772C703.6538,-346.02 880.9811,-334.1941 995.6063,-422.8701 1401.3203,-736.737 1740.7959,-2485.2408 1792.334,-2761.975"/>
<polygon fill="#000000" stroke="#000000" points="1788.9126,-2762.7207 1794.1789,-2771.914 1795.795,-2761.4431 1788.9126,-2762.7207"/>
</g>
<!-- scalaz.Traverse[[β$11$]Map[String,β$11$]]&#45;&gt;scalaz.std.map.BuildKeyConstraint[String] -->
<g id="edge514" class="edge">
<title>scalaz.Traverse[[β$11$]Map[String,β$11$]]&#45;&gt;scalaz.std.map.BuildKeyConstraint[String]</title>
<path fill="none" stroke="#000000" d="M3529.8548,-26083.8701C3802.4127,-26083.8701 4311.73,-26083.8701 4586.7205,-26083.8701"/>
<polygon fill="#000000" stroke="#000000" points="4586.8072,-26087.3702 4596.8071,-26083.8701 4586.8071,-26080.3702 4586.8072,-26087.3702"/>
</g>
<!-- StateExample.this._oldAge.type =&gt; ?{def extract: ?} -->
<g id="node580" class="node">
<title>StateExample.this._oldAge.type =&gt; ?{def extract: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-28531.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="351.8032" y="-28535.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._oldAge.type =&gt; ?{def extract: ?}</text>
<text text-anchor="middle" x="497.8032" y="-28520.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- StateExample.this._oldAge.type =&gt; ?{def modo: ?} -->
<g id="node581" class="node">
<title>StateExample.this._oldAge.type =&gt; ?{def modo: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-28603.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="354.8032" y="-28607.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._oldAge.type =&gt; ?{def modo: ?}</text>
<text text-anchor="middle" x="497.8032" y="-28592.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 5ms</text>
</g>
<!-- Int :: String :: Boolean :: shapeless.HNil =&gt; ?{def applyIso: ?} -->
<g id="node582" class="node">
<title>Int :: String :: Boolean :: shapeless.HNil =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-28675.8701" rx="255.0313" ry="26.7407"/>
<text text-anchor="start" x="325.3032" y="-28679.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int :: String :: Boolean :: shapeless.HNil =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-28664.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String ==&gt;&gt; Int =&gt; ?{def applyTraversal: ?} -->
<g id="node583" class="node">
<title>String ==&gt;&gt; Int =&gt; ?{def applyTraversal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-28747.8701" rx="186.8525" ry="26.7407"/>
<text text-anchor="start" x="373.8032" y="-28751.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String ==&gt;&gt; Int =&gt; ?{def applyTraversal: ?}</text>
<text text-anchor="middle" x="497.8032" y="-28736.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- Point$3 =&gt; ?{def shouldEqual: ?} -->
<g id="node584" class="node">
<title>Point$3 =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-4922.8701" rx="144.5" ry="26.7407"/>
<text text-anchor="start" x="403.8032" y="-4926.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Point$3 =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-4911.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- Point$3 =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge276" class="edge">
<title>Point$3 =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M591.2244,-4943.3521C699.4044,-4961.4179 877.7907,-4973.1077 995.6063,-4886.8701 1700.0361,-4371.2478 1787.5337,-3137.5709 1797.798,-2907.9855"/>
<polygon fill="#000000" stroke="#000000" points="1801.3022,-2907.9585 1798.2305,-2897.8188 1794.3085,-2907.6609 1801.3022,-2907.9585"/>
</g>
<!-- Point$3 =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge49" class="edge">
<title>Point$3 =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M632.3058,-4932.7085C762.8043,-4938.9474 947.9221,-4937.9273 995.6063,-4886.8701 1015.0593,-4866.0411 983.8743,-2855.4348 1003.6063,-2834.8701 1195.0223,-2635.3757 1572.8292,-2725.5974 1729.0018,-2774.6321"/>
<polygon fill="#000000" stroke="#000000" points="1728.3734,-2778.1048 1738.9638,-2777.7988 1730.4941,-2771.4338 1728.3734,-2778.1048"/>
</g>
<!-- String(&#39;Hello&#39;) =&gt; ?{def applyOptional: ?} -->
<g id="node585" class="node">
<title>String(&#39;Hello&#39;) =&gt; ?{def applyOptional: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-28819.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="381.8032" y="-28823.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Hello&#39;) =&gt; ?{def applyOptional: ?}</text>
<text text-anchor="middle" x="497.8032" y="-28808.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- scalaz.Equal[(String, Int, Boolean)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge328" class="edge">
<title>scalaz.Equal[(String, Int, Boolean)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M4921.2407,-7347.8603C5058.305,-7342.5191 5268.412,-7332.6279 5450.3374,-7316.8701 5627.6943,-7301.5079 5833.5743,-7274.8178 5951.9731,-7258.606"/>
<polygon fill="#000000" stroke="#000000" points="5952.6687,-7262.0434 5962.0997,-7257.2157 5951.7166,-7255.1084 5952.6687,-7262.0434"/>
</g>
<!-- scalaz.Equal[(String, Int, Boolean)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge331" class="edge">
<title>scalaz.Equal[(String, Int, Boolean)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M4923.8032,-7353.0212C5061.2966,-7355.0063 5270.5072,-7362.6953 5450.3374,-7388.8701 5643.0175,-7416.9151 5864.5683,-7477.8698 5976.5437,-7510.763"/>
<polygon fill="#000000" stroke="#000000" points="5975.7975,-7514.1919 5986.3791,-7513.6629 5977.7772,-7507.4777 5975.7975,-7514.1919"/>
</g>
<!-- scalaz.Equal[(String, Int, Boolean)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge21" class="edge">
<title>scalaz.Equal[(String, Int, Boolean)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4904.6104,-7339.7696C5079.9018,-7325.3692 5378.1188,-7313.3059 5450.3374,-7388.8701 5469.6839,-7409.1127 5444.555,-8372.496 5458.3374,-8396.8701 5570.5914,-8595.3895 5840.5901,-8698.368 5973.274,-8738.4698"/>
<polygon fill="#000000" stroke="#000000" points="5972.3894,-8741.8582 5982.9727,-8741.3628 5974.3904,-8735.1503 5972.3894,-8741.8582"/>
</g>
<!-- Int(79) =&gt; monocle.refined.IntBits -->
<g id="node587" class="node">
<title>Int(79) =&gt; monocle.refined.IntBits</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-6362.8701" rx="147.1565" ry="26.7407"/>
<text text-anchor="start" x="401.8032" y="-6366.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(79) =&gt; monocle.refined.IntBits</text>
<text text-anchor="middle" x="497.8032" y="-6351.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 81ms</text>
</g>
<!-- Int(79) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge168" class="edge">
<title>Int(79) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M636.6718,-6371.8539C765.9588,-6376.9538 945.9684,-6374.6345 995.6063,-6326.8701 1007.2065,-6315.7077 994.3869,-6268.0671 1003.6063,-6254.8701 1166.6229,-6021.5209 1507.8945,-5918.8304 1685.7831,-5879.6743"/>
<polygon fill="#000000" stroke="#000000" points="1686.6658,-5883.0643 1695.6949,-5877.5212 1685.1798,-5876.2238 1686.6658,-5883.0643"/>
</g>
<!-- Int(79) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge64" class="edge">
<title>Int(79) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M638.6111,-6370.6609C860.4874,-6382.9371 1293.9168,-6406.9185 1563.711,-6421.8461"/>
<polygon fill="#000000" stroke="#000000" points="1563.8584,-6425.3595 1574.0365,-6422.4174 1564.2452,-6418.3702 1563.8584,-6425.3595"/>
</g>
<!-- Int(79) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(31)]] -->
<g id="edge546" class="edge">
<title>Int(79) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(31)]]</title>
<path fill="none" stroke="#000000" d="M636.6718,-6353.8862C765.9588,-6348.7863 945.9684,-6351.1056 995.6063,-6398.8701 1018.8066,-6421.1947 980.1072,-6448.8603 1003.6063,-6470.8701 1196.2058,-6651.2621 1543.8475,-6582.6607 1708.2512,-6536.0859"/>
<polygon fill="#000000" stroke="#000000" points="1709.6874,-6539.3151 1718.3336,-6533.1919 1707.7561,-6532.5867 1709.6874,-6539.3151"/>
</g>
<!-- Option[(Int, List[Int])] =&gt; ?{def shouldEqual: ?} -->
<g id="node588" class="node">
<title>Option[(Int, List[Int])] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-4850.8701" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="363.3032" y="-4854.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[(Int, List[Int])] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-4839.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- Option[(Int, List[Int])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge91" class="edge">
<title>Option[(Int, List[Int])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M606.6228,-4873.5369C715.5597,-4889.7652 882.7783,-4896.364 995.6063,-4814.8701 1680.1019,-4320.4696 1783.5902,-3133.3542 1797.2134,-2908.1094"/>
<polygon fill="#000000" stroke="#000000" points="1800.725,-2908.0107 1797.8125,-2897.824 1793.7368,-2907.6035 1800.725,-2908.0107"/>
</g>
<!-- Option[(Int, List[Int])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge433" class="edge">
<title>Option[(Int, List[Int])] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M679.7402,-4862.5214C803.9939,-4866.031 953.4636,-4859.9874 995.6063,-4814.8701 1014.3782,-4794.7733 984.5653,-2854.7119 1003.6063,-2834.8701 1195.0364,-2635.3893 1572.8354,-2725.6033 1729.0039,-2774.634"/>
<polygon fill="#000000" stroke="#000000" points="1728.3751,-2778.1067 1738.9656,-2777.8005 1730.4957,-2771.4356 1728.3751,-2778.1067"/>
</g>
<!-- scalaz.Applicative[F] -->
<g id="node589" class="node">
<title>scalaz.Applicative[F]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-28891.8701" rx="94.0904" ry="26.7407"/>
<text text-anchor="start" x="439.3032" y="-28895.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Applicative[F]</text>
<text text-anchor="middle" x="497.8032" y="-28880.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 9ms</text>
</g>
<!-- Int(0) =&gt; monocle.refined.CharBits -->
<g id="node590" class="node">
<title>Int(0) =&gt; monocle.refined.CharBits</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-6290.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="399.8032" y="-6294.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(0) =&gt; monocle.refined.CharBits</text>
<text text-anchor="middle" x="497.8032" y="-6279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 119ms</text>
</g>
<!-- Int(0) =&gt; monocle.refined.CharBits&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge459" class="edge">
<title>Int(0) =&gt; monocle.refined.CharBits&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M646.2313,-6294.9237C746.5299,-6294.0908 881.0415,-6285.9672 995.6063,-6254.8701 1302.3609,-6171.6056 1631.4583,-5968.8799 1751.6939,-5890.5176"/>
<polygon fill="#000000" stroke="#000000" points="1753.8719,-5893.2752 1760.3245,-5884.872 1750.0399,-5887.4172 1753.8719,-5893.2752"/>
</g>
<!-- Int(0) =&gt; monocle.refined.CharBits&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge585" class="edge">
<title>Int(0) =&gt; monocle.refined.CharBits&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M640.9716,-6298.8859C740.563,-6305.0339 876.3389,-6314.5537 995.6063,-6326.8701 1222.0496,-6350.2541 1483.0865,-6387.1998 1644.618,-6411.2369"/>
<polygon fill="#000000" stroke="#000000" points="1644.2252,-6414.7169 1654.6319,-6412.7295 1645.2572,-6407.7934 1644.2252,-6414.7169"/>
</g>
<!-- Int(0) =&gt; monocle.refined.CharBits&#45;&gt;eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(15)]] -->
<g id="edge340" class="edge">
<title>Int(0) =&gt; monocle.refined.CharBits&#45;&gt;eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(15)]]</title>
<path fill="none" stroke="#000000" d="M647.7137,-6290.8701C834.188,-6290.8701 1159.3658,-6290.8701 1416.6894,-6290.8701"/>
<polygon fill="#000000" stroke="#000000" points="1416.9659,-6294.3702 1426.9659,-6290.8701 1416.9659,-6287.3702 1416.9659,-6294.3702"/>
</g>
<!-- org.scalactic.Equality[scala.collection.immutable.Set[Int]] -->
<g id="node592" class="node">
<title>org.scalactic.Equality[scala.collection.immutable.Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-8398.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="3186.9729" y="-8402.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scala.collection.immutable.Set[Int]]</text>
<text text-anchor="middle" x="3346.4729" y="-8387.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- org.scalactic.Equality[scala.collection.immutable.Set[Int]]&#45;&gt;scalaz.Equal[scala.collection.immutable.Set[Int]] -->
<g id="edge334" class="edge">
<title>org.scalactic.Equality[scala.collection.immutable.Set[Int]]&#45;&gt;scalaz.Equal[scala.collection.immutable.Set[Int]]</title>
<path fill="none" stroke="#000000" d="M3537.5908,-8382.985C3729.9221,-8371.3027 4009.3491,-8367.4669 4090.3493,-8434.8701 4102.282,-8444.7997 4086.4407,-8458.9115 4098.3493,-8468.8701 4170.2621,-8529.0069 4415.054,-8528.1741 4589.3379,-8519.0063"/>
<polygon fill="#000000" stroke="#000000" points="4589.6094,-8522.4968 4599.4064,-8518.4633 4589.2324,-8515.507 4589.6094,-8522.4968"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[String :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil] -->
<g id="node593" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[String :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="6049.4787" cy="-19387.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="5679.4787" y="-19391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[String :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="6049.4787" y="-19376.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: String :: Boolean :: shapeless.HNil,shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil] -->
<g id="node638" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: String :: Boolean :: shapeless.HNil,shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="7183.1927" cy="-19387.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="6813.1927" y="-19391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Int :: String :: Boolean :: shapeless.HNil,shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</text>
<text text-anchor="middle" x="7183.1927" y="-19376.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[String :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: String :: Boolean :: shapeless.HNil,shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil] -->
<g id="edge371" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[String :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: String :: Boolean :: shapeless.HNil,shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M6584.382,-19387.8701C6602.4092,-19387.8701 6620.4797,-19387.8701 6638.5201,-19387.8701"/>
<polygon fill="#000000" stroke="#000000" points="6638.539,-19391.3702 6648.539,-19387.8701 6638.539,-19384.3702 6638.539,-19391.3702"/>
</g>
<!-- Double =&gt; ?{def shouldEqual: ?} -->
<g id="node594" class="node">
<title>Double =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-4778.8701" rx="142.6713" ry="26.7407"/>
<text text-anchor="start" x="404.8032" y="-4782.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Double =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-4767.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 12ms</text>
</g>
<!-- Double =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge503" class="edge">
<title>Double =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M592.2761,-4799.0431C700.2235,-4816.4567 877.2016,-4827.1816 995.6063,-4742.8701 1660.6637,-4269.308 1779.653,-3127.6265 1796.616,-2907.8268"/>
<polygon fill="#000000" stroke="#000000" points="1800.112,-2908.0102 1797.3693,-2897.7765 1793.1316,-2907.4869 1800.112,-2908.0102"/>
</g>
<!-- Double =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge225" class="edge">
<title>Double =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M631.0904,-4788.6473C761.6494,-4794.9481 947.7668,-4794.0785 995.6063,-4742.8701 1013.697,-4723.5054 985.2562,-2853.989 1003.6063,-2834.8701 1195.0516,-2635.4039 1572.842,-2725.6097 1729.006,-2774.6361"/>
<polygon fill="#000000" stroke="#000000" points="1728.377,-2778.1087 1738.9675,-2777.8023 1730.4975,-2771.4376 1728.377,-2778.1087"/>
</g>
<!-- shapeless.ops.coproduct.Inject[CoproductExample.this.ISB,Float] -->
<g id="node595" class="node">
<title>shapeless.ops.coproduct.Inject[CoproductExample.this.ISB,Float]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-12880.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="317.3032" y="-12884.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Inject[CoproductExample.this.ISB,Float]</text>
<text text-anchor="middle" x="497.8032" y="-12869.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- shapeless.ops.coproduct.Inject[CoproductExample.this.ISB,Float]&#45;&gt;shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Float] -->
<g id="edge67" class="edge">
<title>shapeless.ops.coproduct.Inject[CoproductExample.this.ISB,Float]&#45;&gt;shapeless.ops.coproduct.Inject[String :+: Boolean :+: shapeless.CNil,Float]</title>
<path fill="none" stroke="#000000" d="M764.6738,-12880.8701C974.0579,-12880.8701 1265.9606,-12880.8701 1486.313,-12880.8701"/>
<polygon fill="#000000" stroke="#000000" points="1486.4218,-12884.3702 1496.4217,-12880.8701 1486.4217,-12877.3702 1486.4218,-12884.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char),A]&#45;&gt;shapeless.ops.hlist.Tupler[Char :: Int :: shapeless.HNil] -->
<g id="edge435" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char),A]&#45;&gt;shapeless.ops.hlist.Tupler[Char :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M1993.9016,-10486.8701C2277.8509,-10486.8701 2804.7792,-10486.8701 3110.3903,-10486.8701"/>
<polygon fill="#000000" stroke="#000000" points="3110.7174,-10490.3702 3120.7174,-10486.8701 3110.7173,-10483.3702 3110.7174,-10490.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Int :: Char :: shapeless.HNil,L2] -->
<g id="edge567" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char),A]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Int :: Char :: shapeless.HNil,L2]</title>
<path fill="none" stroke="#000000" d="M1983.4471,-10478.2924C2260.7167,-10465.3909 2785.6884,-10440.9637 3096.9657,-10426.4798"/>
<polygon fill="#000000" stroke="#000000" points="3097.2034,-10429.9726 3107.0299,-10426.0115 3096.878,-10422.9801 3097.2034,-10429.9726"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[(Int, Char),A]&#45;&gt;shapeless.Generic.Aux[(Int, Char),L1] -->
<g id="edge561" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[(Int, Char),A]&#45;&gt;shapeless.Generic.Aux[(Int, Char),L1]</title>
<path fill="none" stroke="#000000" d="M1925.7098,-10507.2878C2083.7046,-10531.9813 2362.3837,-10572.9539 2602.5966,-10594.8701 2799.2676,-10612.8136 3026.0608,-10622.1608 3177.0205,-10626.7819"/>
<polygon fill="#000000" stroke="#000000" points="3177.2036,-10630.2889 3187.3049,-10627.093 3177.4153,-10623.2921 3177.2036,-10630.2889"/>
</g>
<!-- shapeless.ops.coproduct.Selector[shapeless.CNil,Int] -->
<g id="node597" class="node">
<title>shapeless.ops.coproduct.Selector[shapeless.CNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-170.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="4629.8434" y="-174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.coproduct.Selector[shapeless.CNil,Int]</text>
<text text-anchor="middle" x="4774.3434" y="-159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- myStore.type =&gt; ?{def &amp;|&#45;&gt;: ?} -->
<g id="node598" class="node">
<title>myStore.type =&gt; ?{def &amp;|&#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-28963.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="408.3032" y="-28967.6701" font-family="Times,serif" font-size="14.00" fill="#000000">myStore.type =&gt; ?{def &amp;|&#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-28952.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scalaz.Equal[scalaz.Id.Id[Int]] -->
<g id="node599" class="node">
<title>scalaz.Equal[scalaz.Id.Id[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-29035.8701" rx="127.9727" ry="26.7407"/>
<text text-anchor="start" x="1716.6015" y="-29039.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scalaz.Id.Id[Int]]</text>
<text text-anchor="middle" x="1799.1015" y="-29024.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int] -->
<g id="edge294" class="edge">
<title>monocle.function.Each[Int :: Int :: Int :: Int :: Int :: shapeless.HNil,Int]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: Int :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M3631.5641,-11638.8701C3884.2782,-11638.8701 4250.885,-11638.8701 4500.2298,-11638.8701"/>
<polygon fill="#000000" stroke="#000000" points="4500.5304,-11642.3702 4510.5304,-11638.8701 4500.5303,-11635.3702 4500.5304,-11642.3702"/>
</g>
<!-- String :: Int :: shapeless.HNil =&gt; ?{def ::: ?} -->
<g id="node601" class="node">
<title>String :: Int :: shapeless.HNil =&gt; ?{def ::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-29107.8701" rx="185.0243" ry="26.7407"/>
<text text-anchor="start" x="374.8032" y="-29111.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String :: Int :: shapeless.HNil =&gt; ?{def ::: ?}</text>
<text text-anchor="middle" x="497.8032" y="-29096.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Int] =&gt; ?{def applyTraversal: ?} -->
<g id="node602" class="node">
<title>List[Int] =&gt; ?{def applyTraversal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-29179.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="395.3032" y="-29183.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Int] =&gt; ?{def applyTraversal: ?}</text>
<text text-anchor="middle" x="497.8032" y="-29168.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.At.Aux[(String, Int),shapeless.nat._0.N,A] -->
<g id="node603" class="node">
<title>shapeless.ops.hlist.At.Aux[(String, Int),shapeless.nat._0.N,A]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-29251.8701" rx="250.1317" ry="26.7407"/>
<text text-anchor="start" x="1630.1015" y="-29255.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.At.Aux[(String, Int),shapeless.nat._0.N,A]</text>
<text text-anchor="middle" x="1799.1015" y="-29240.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- StateExample.this._nameGet.type =&gt; ?{def extracts: ?} -->
<g id="node604" class="node">
<title>StateExample.this._nameGet.type =&gt; ?{def extracts: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-29323.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="344.3032" y="-29327.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._nameGet.type =&gt; ?{def extracts: ?}</text>
<text text-anchor="middle" x="497.8032" y="-29312.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Int, Symbol)) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node605" class="node">
<title>((Int, Symbol)) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-29395.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="410.3032" y="-29399.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Symbol)) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-29384.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scalaz.Equal[LensPolyExample.this.Foo[Symbol,Int]] -->
<g id="node606" class="node">
<title>scalaz.Equal[LensPolyExample.this.Foo[Symbol,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-29467.8701" rx="220.7347" ry="26.7407"/>
<text text-anchor="start" x="1651.1015" y="-29471.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[LensPolyExample.this.Foo[Symbol,Int]]</text>
<text text-anchor="middle" x="1799.1015" y="-29456.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Cons[List[Int],A] -->
<g id="node607" class="node">
<title>monocle.function.Cons[List[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-29539.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="399.8032" y="-29543.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons[List[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-29528.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[Option[SymbolicSyntaxExample.this.Sofa]]&#45;&gt;scalaz.Equal[SymbolicSyntaxExample.this.Sofa] -->
<g id="edge522" class="edge">
<title>scalaz.Equal[Option[SymbolicSyntaxExample.this.Sofa]]&#45;&gt;scalaz.Equal[SymbolicSyntaxExample.this.Sofa]</title>
<path fill="none" stroke="#000000" d="M2033.2734,-27379.8701C2332.8185,-27379.8701 2847.2131,-27379.8701 3135.2652,-27379.8701"/>
<polygon fill="#000000" stroke="#000000" points="3135.4159,-27383.3702 3145.4159,-27379.8701 3135.4158,-27376.3702 3135.4159,-27383.3702"/>
</g>
<!-- scalaz.Equal[Option[String]]&#45;&gt;scalaz.Equal[String] -->
<g id="edge76" class="edge">
<title>scalaz.Equal[Option[String]]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M4895.7427,-7500.2974C5146.7577,-7507.3842 5718.6954,-7523.5313 5949.8232,-7530.0566"/>
<polygon fill="#000000" stroke="#000000" points="5949.8083,-7533.5574 5959.9031,-7530.3411 5950.0059,-7526.5602 5949.8083,-7533.5574"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[String :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil] -->
<g id="edge311" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,String :: Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[String :: Boolean :: shapeless.HNil,Int :: shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M5309.1116,-19387.8701C5373.6656,-19387.8701 5439.6636,-19387.8701 5504.364,-19387.8701"/>
<polygon fill="#000000" stroke="#000000" points="5504.7364,-19391.3702 5514.7364,-19387.8701 5504.7364,-19384.3702 5504.7364,-19391.3702"/>
</g>
<!-- monocle.function.Index[Map[String,String],String,A] -->
<g id="node611" class="node">
<title>monocle.function.Index[Map[String,String],String,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-29611.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="350.3032" y="-29615.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[Map[String,String],String,A]</text>
<text text-anchor="middle" x="497.8032" y="-29600.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 40ms</text>
</g>
<!-- Char =&gt; ?{def shouldEqual: ?} -->
<g id="node612" class="node">
<title>Char =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-5210.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="411.8032" y="-5214.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Char =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-5199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 14ms</text>
</g>
<!-- Char =&gt; ?{def shouldEqual: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge305" class="edge">
<title>Char =&gt; ?{def shouldEqual: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M620.8958,-5200.6169C724.2729,-5196.4435 874.1363,-5200.9318 995.6063,-5246.8701 1345.2281,-5379.0921 1669.7105,-5715.4491 1768.5085,-5824.3072"/>
<polygon fill="#000000" stroke="#000000" points="1766.1981,-5826.971 1775.4986,-5832.0456 1771.3926,-5822.2787 1766.1981,-5826.971"/>
</g>
<!-- Char =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge382" class="edge">
<title>Char =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M585.6775,-5231.1462C693.7838,-5250.6441 877.468,-5265.3745 995.6063,-5174.8701 1391.1333,-4871.8613 1738.1976,-3180.3625 1791.9049,-2907.9157"/>
<polygon fill="#000000" stroke="#000000" points="1795.406,-2908.25 1793.8997,-2897.7628 1788.5373,-2906.9004 1795.406,-2908.25"/>
</g>
<!-- Char =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge153" class="edge">
<title>Char =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M622.7028,-5220.2358C753.5445,-5226.9756 946.7518,-5227.2055 995.6063,-5174.8701 1017.7838,-5151.1125 981.1106,-2858.3265 1003.6063,-2834.8701 1194.9744,-2635.3298 1572.8083,-2725.5773 1728.9949,-2774.6255"/>
<polygon fill="#000000" stroke="#000000" points="1728.3674,-2778.0985 1738.9578,-2777.7931 1730.4884,-2771.4276 1728.3674,-2778.0985"/>
</g>
<!-- scalaz.Functor[F$macro$17] -->
<g id="node614" class="node">
<title>scalaz.Functor[F$macro$17]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-29683.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-29687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$17]</text>
<text text-anchor="middle" x="497.8032" y="-29672.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Order[E]&#45;&gt;scalaz.Order[A] -->
<g id="edge54" class="edge">
<title>scalaz.Order[E]&#45;&gt;scalaz.Order[A]</title>
<path fill="none" stroke="#000000" d="M3418.7513,-12088.8701C3659.5912,-12088.8701 4434.0361,-12088.8701 4690.7755,-12088.8701"/>
<polygon fill="#000000" stroke="#000000" points="4690.7857,-12092.3702 4700.7857,-12088.8701 4690.7856,-12085.3702 4690.7857,-12092.3702"/>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Unit)]] -->
<g id="node617" class="node">
<title>org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Unit)]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-15571.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="308.3032" y="-15575.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Unit)]]</text>
<text text-anchor="middle" x="497.8032" y="-15560.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 37ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Unit)]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Unit)]] -->
<g id="edge460" class="edge">
<title>org.scalactic.Equality[scalaz.Id.Id[(StateExample.this.Person, Unit)]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Unit)]]</title>
<path fill="none" stroke="#000000" d="M777.3638,-15571.8701C1004.9368,-15571.8701 1323.496,-15571.8701 1544.1552,-15571.8701"/>
<polygon fill="#000000" stroke="#000000" points="1544.2594,-15575.3702 1554.2593,-15571.8701 1544.2593,-15568.3702 1544.2594,-15575.3702"/>
</g>
<!-- scalaz.Functor[F$macro$8] -->
<g id="node618" class="node">
<title>scalaz.Functor[F$macro$8]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-29755.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="422.3032" y="-29759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$8]</text>
<text text-anchor="middle" x="497.8032" y="-29744.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- StateExample.this._age.type =&gt; ?{def extracts: ?} -->
<g id="node619" class="node">
<title>StateExample.this._age.type =&gt; ?{def extracts: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-29827.8701" rx="206.4504" ry="26.7407"/>
<text text-anchor="start" x="359.8032" y="-29831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._age.type =&gt; ?{def extracts: ?}</text>
<text text-anchor="middle" x="497.8032" y="-29816.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.Snoc[scala.collection.immutable.Vector[Int],Int] -->
<g id="node620" class="node">
<title>monocle.function.Snoc[scala.collection.immutable.Vector[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-29899.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="314.3032" y="-29903.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc[scala.collection.immutable.Vector[Int],Int]</text>
<text text-anchor="middle" x="497.8032" y="-29888.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Functor[F$macro$3] -->
<g id="node621" class="node">
<title>scalaz.Functor[F$macro$3]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-29971.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="422.3032" y="-29975.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$3]</text>
<text text-anchor="middle" x="497.8032" y="-29960.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- String(&#39;&#39;) =&gt; ?{def applyPrism: ?} -->
<g id="node623" class="node">
<title>String(&#39;&#39;) =&gt; ?{def applyPrism: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-30043.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="404.3032" y="-30047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;&#39;) =&gt; ?{def applyPrism: ?}</text>
<text text-anchor="middle" x="497.8032" y="-30032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[scala.collection.immutable.Map[String,Int]] -->
<g id="node624" class="node">
<title>org.scalactic.Equality[scala.collection.immutable.Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-8686.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="3164.4729" y="-8690.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scala.collection.immutable.Map[String,Int]]</text>
<text text-anchor="middle" x="3346.4729" y="-8675.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 29ms</text>
</g>
<!-- scalaz.Equal[scala.collection.immutable.Map[String,Int]] -->
<g id="node654" class="node">
<title>scalaz.Equal[scala.collection.immutable.Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-8686.8701" rx="234.1047" ry="26.7407"/>
<text text-anchor="start" x="4616.8434" y="-8690.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[scala.collection.immutable.Map[String,Int]]</text>
<text text-anchor="middle" x="4774.3434" y="-8675.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 23ms</text>
</g>
<!-- org.scalactic.Equality[scala.collection.immutable.Map[String,Int]]&#45;&gt;scalaz.Equal[scala.collection.immutable.Map[String,Int]] -->
<g id="edge375" class="edge">
<title>org.scalactic.Equality[scala.collection.immutable.Map[String,Int]]&#45;&gt;scalaz.Equal[scala.collection.immutable.Map[String,Int]]</title>
<path fill="none" stroke="#000000" d="M3615.4638,-8686.8701C3878.5934,-8686.8701 4275.8165,-8686.8701 4530.1108,-8686.8701"/>
<polygon fill="#000000" stroke="#000000" points="4530.2256,-8690.3702 4540.2255,-8686.8701 4530.2255,-8683.3702 4530.2256,-8690.3702"/>
</g>
<!-- StateExample.this._oldAge.type =&gt; ?{def mod: ?} -->
<g id="node625" class="node">
<title>StateExample.this._oldAge.type =&gt; ?{def mod: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-30115.8701" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="357.8032" y="-30119.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._oldAge.type =&gt; ?{def mod: ?}</text>
<text text-anchor="middle" x="497.8032" y="-30104.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Int :: shapeless.HNil,shapeless.nat._0.N,Int,(Int, Int :: shapeless.HNil)] -->
<g id="node626" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Int :: shapeless.HNil,shapeless.nat._0.N,Int,(Int, Int :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-25291.8701" rx="422.2855" ry="26.7407"/>
<text text-anchor="start" x="1508.6015" y="-25295.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Int :: shapeless.HNil,shapeless.nat._0.N,Int,(Int, Int :: shapeless.HNil)]</text>
<text text-anchor="middle" x="1799.1015" y="-25280.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- ((Int, Char, Boolean, Double, String, Long)) =&gt; ?{def applyIso: ?} -->
<g id="node627" class="node">
<title>((Int, Char, Boolean, Double, String, Long)) =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-30187.8701" rx="271.558" ry="26.7407"/>
<text text-anchor="start" x="313.8032" y="-30191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Char, Boolean, Double, String, Long)) =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-30176.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; String -->
<g id="node628" class="node">
<title>((Nothing, Nothing)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-23995.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="411.8032" y="-23999.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; String</text>
<text text-anchor="middle" x="497.8032" y="-23984.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 12ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; String&#45;&gt;eu.timepit.refined.api.RefType[Tuple2] -->
<g id="edge104" class="edge">
<title>((Nothing, Nothing)) =&gt; String&#45;&gt;eu.timepit.refined.api.RefType[Tuple2]</title>
<path fill="none" stroke="#000000" d="M629.7399,-23999.52C866.4174,-24006.0677 1362.945,-24019.8039 1626.3894,-24027.092"/>
<polygon fill="#000000" stroke="#000000" points="1626.3423,-24030.592 1636.4353,-24027.37 1626.536,-24023.5947 1626.3423,-24030.592"/>
</g>
<!-- eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(31)]]&#45;&gt;eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.GreaterEqual[Int(0)],RA] -->
<g id="edge374" class="edge">
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(31)]]&#45;&gt;eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.GreaterEqual[Int(0)],RA]</title>
<path fill="none" stroke="#000000" d="M2124.2976,-6493.8087C2268.4189,-6487.593 2440.0055,-6479.6099 2594.5966,-6470.8701 2754.2109,-6461.8462 2932.7519,-6449.8175 3075.787,-6439.7084"/>
<polygon fill="#000000" stroke="#000000" points="3076.2954,-6443.1812 3086.0234,-6438.9839 3075.8012,-6436.1987 3076.2954,-6443.1812"/>
</g>
<!-- eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(31)]]&#45;&gt;eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.LessEqual[Int(31)],RB] -->
<g id="edge593" class="edge">
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(31)]]&#45;&gt;eu.timepit.refined.api.Validate.Aux[Int,eu.timepit.refined.numeric.LessEqual[Int(31)],RB]</title>
<path fill="none" stroke="#000000" d="M2166.7878,-6511.1472C2411.7595,-6513.9969 2732.5021,-6517.728 2977.6978,-6520.5802"/>
<polygon fill="#000000" stroke="#000000" points="2977.8101,-6524.0817 2987.8501,-6520.6983 2977.8916,-6517.0822 2977.8101,-6524.0817"/>
</g>
<!-- scalaz.Functor[F$macro$25] -->
<g id="node630" class="node">
<title>scalaz.Functor[F$macro$25]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-30259.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-30263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$25]</text>
<text text-anchor="middle" x="497.8032" y="-30248.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[(Boolean, String, Double, Int, Int)]&#45;&gt;scalaz.Equal[Boolean] -->
<g id="edge201" class="edge">
<title>scalaz.Equal[(Boolean, String, Double, Int, Int)]&#45;&gt;scalaz.Equal[Boolean]</title>
<path fill="none" stroke="#000000" d="M4969.0497,-7275.3731C5241.2582,-7267.688 5726.3116,-7253.9938 5941.5142,-7247.9181"/>
<polygon fill="#000000" stroke="#000000" points="5941.6588,-7251.4156 5951.556,-7247.6346 5941.4612,-7244.4183 5941.6588,-7251.4156"/>
</g>
<!-- scalaz.Equal[(Boolean, String, Double, Int, Int)]&#45;&gt;scalaz.Equal[String] -->
<g id="edge477" class="edge">
<title>scalaz.Equal[(Boolean, String, Double, Int, Int)]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M4970.382,-7276.2631C5106.3543,-7276.7191 5290.9394,-7284.6234 5450.3374,-7316.8701 5656.793,-7358.6365 5887.7572,-7457.8522 5992.4298,-7505.8881"/>
<polygon fill="#000000" stroke="#000000" points="5991.011,-7509.088 6001.5579,-7510.0946 5993.9407,-7502.7306 5991.011,-7509.088"/>
</g>
<!-- scalaz.Equal[(Boolean, String, Double, Int, Int)]&#45;&gt;scalaz.Equal[Double] -->
<g id="edge139" class="edge">
<title>scalaz.Equal[(Boolean, String, Double, Int, Int)]&#45;&gt;scalaz.Equal[Double]</title>
<path fill="none" stroke="#000000" d="M4937.4086,-7296.2924C5114.6357,-7309.0393 5381.7826,-7315.1911 5450.3374,-7244.8701 5472.6839,-7221.9479 5436.0785,-6979.8772 5458.3374,-6956.8701 5523.8562,-6889.1491 5798.5835,-6899.9465 5949.3589,-6911.5433"/>
<polygon fill="#000000" stroke="#000000" points="5949.3085,-6915.05 5959.5517,-6912.343 5949.8561,-6908.0714 5949.3085,-6915.05"/>
</g>
<!-- scalaz.Equal[(Boolean, String, Double, Int, Int)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge300" class="edge">
<title>scalaz.Equal[(Boolean, String, Double, Int, Int)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4936.4755,-7265.2841C5113.9344,-7252.2477 5382.3499,-7245.6954 5450.3374,-7316.8701 5460.6987,-7327.717 5450.9575,-8383.8106 5458.3374,-8396.8701 5570.5388,-8595.4191 5840.5629,-8698.3834 5973.2634,-8738.4758"/>
<polygon fill="#000000" stroke="#000000" points="5972.3801,-8741.8646 5982.9633,-8741.3681 5974.3804,-8735.1565 5972.3801,-8741.8646"/>
</g>
<!-- monocle.function.Field1[other.Custom,Int] -->
<g id="node632" class="node">
<title>monocle.function.Field1[other.Custom,Int]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-30331.8701" rx="178.7961" ry="26.7407"/>
<text text-anchor="start" x="379.3032" y="-30335.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field1[other.Custom,Int]</text>
<text text-anchor="middle" x="497.8032" y="-30320.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[Unit] =&gt; ?{def shouldBe: ?} -->
<g id="node633" class="node">
<title>Option[Unit] =&gt; ?{def shouldBe: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-4706.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="397.8032" y="-4710.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Unit] =&gt; ?{def shouldBe: ?}</text>
<text text-anchor="middle" x="497.8032" y="-4695.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- Option[Unit] =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge339" class="edge">
<title>Option[Unit] =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M596.4332,-4727.4237C704.539,-4744.1308 878.1936,-4753.2071 995.6063,-4670.8701 1640.7161,-4218.4797 1775.361,-3123.8676 1795.9273,-2908.1424"/>
<polygon fill="#000000" stroke="#000000" points="1799.4317,-2908.257 1796.8733,-2897.9757 1792.4618,-2907.6084 1799.4317,-2908.257"/>
</g>
<!-- Option[Unit] =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge3" class="edge">
<title>Option[Unit] =&gt; ?{def shouldBe: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M639.3319,-4717.0303C769.3529,-4722.887 948.7608,-4721.0062 995.6063,-4670.8701 1013.0159,-4652.2376 985.9471,-2853.2661 1003.6063,-2834.8701 1194.9509,-2635.5416 1572.3872,-2725.5064 1728.7216,-2774.5484"/>
<polygon fill="#000000" stroke="#000000" points="1728.1047,-2778.0247 1738.695,-2777.716 1730.2237,-2771.3531 1728.1047,-2778.0247"/>
</g>
<!-- String :: Boolean :: shapeless.HNil =&gt; ?{def shouldEqual: ?} -->
<g id="node634" class="node">
<title>String :: Boolean :: shapeless.HNil =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-4634.8701" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="329.8032" y="-4638.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String :: Boolean :: shapeless.HNil =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-4623.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- String :: Boolean :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge316" class="edge">
<title>String :: Boolean :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M619.3343,-4658.3321C727.6769,-4672.2747 885.6763,-4674.7037 995.6063,-4598.8701 1621.3073,-4167.2395 1771.0919,-3118.5125 1795.2271,-2908.021"/>
<polygon fill="#000000" stroke="#000000" points="1798.7359,-2908.1376 1796.3739,-2897.8095 1791.7796,-2907.3564 1798.7359,-2908.1376"/>
</g>
<!-- String :: Boolean :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge336" class="edge">
<title>String :: Boolean :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M718.9802,-4647.2644C833.7768,-4648.3519 957.8158,-4639.308 995.6063,-4598.8701 1012.3348,-4580.9697 986.6381,-2852.5432 1003.6063,-2834.8701 1194.9687,-2635.5586 1572.395,-2725.5138 1728.7242,-2774.5508"/>
<polygon fill="#000000" stroke="#000000" points="1728.1069,-2778.027 1738.6972,-2777.7181 1730.2258,-2771.3554 1728.1069,-2778.027"/>
</g>
<!-- monocle.function.Field1[Int :: shapeless.HNil,Int] -->
<g id="node635" class="node">
<title>monocle.function.Field1[Int :: shapeless.HNil,Int]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-25291.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="360.8032" y="-25295.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field1[Int :: shapeless.HNil,Int]</text>
<text text-anchor="middle" x="497.8032" y="-25280.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- monocle.function.Field1[Int :: shapeless.HNil,Int]&#45;&gt;shapeless.ops.hlist.At.Aux[Int :: shapeless.HNil,shapeless.nat._0.N,Int] -->
<g id="edge454" class="edge">
<title>monocle.function.Field1[Int :: shapeless.HNil,Int]&#45;&gt;shapeless.ops.hlist.At.Aux[Int :: shapeless.HNil,shapeless.nat._0.N,Int]</title>
<path fill="none" stroke="#000000" d="M674.4619,-25305.5669C771.5657,-25312.8127 894.1877,-25321.5014 1003.6063,-25327.8701 1176.132,-25337.9118 1369.8454,-25346.7306 1522.9177,-25353.1264"/>
<polygon fill="#000000" stroke="#000000" points="1522.8038,-25356.6246 1532.9409,-25353.5441 1523.0953,-25349.6306 1522.8038,-25356.6246"/>
</g>
<!-- monocle.function.Field1[Int :: shapeless.HNil,Int]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Int :: shapeless.HNil,shapeless.nat._0.N,Int,(Int, Int :: shapeless.HNil)] -->
<g id="edge403" class="edge">
<title>monocle.function.Field1[Int :: shapeless.HNil,Int]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Int :: shapeless.HNil,shapeless.nat._0.N,Int,(Int, Int :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M702.921,-25291.8701C880.3521,-25291.8701 1142.8281,-25291.8701 1366.4557,-25291.8701"/>
<polygon fill="#000000" stroke="#000000" points="1366.7388,-25295.3702 1376.7388,-25291.8701 1366.7387,-25288.3702 1366.7388,-25295.3702"/>
</g>
<!-- scalaz.Functor[scalaz.Id.Id] -->
<g id="node637" class="node">
<title>scalaz.Functor[scalaz.Id.Id]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-30403.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="422.3032" y="-30407.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[scalaz.Id.Id]</text>
<text text-anchor="middle" x="497.8032" y="-30392.6701" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 10ms</text>
</g>
<!-- scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Int)]]&#45;&gt;scalaz.Equal[StateExample.this.Person] -->
<g id="edge72" class="edge">
<title>scalaz.Equal[scalaz.Id.Id[(StateExample.this.Person, Int)]]&#45;&gt;scalaz.Equal[StateExample.this.Person]</title>
<path fill="none" stroke="#000000" d="M2021.1361,-15437.7623C2180.6886,-15444.9088 2400.9135,-15454.8507 2594.5966,-15463.8701 2795.1039,-15473.2072 3025.6698,-15484.2993 3178.0462,-15491.6794"/>
<polygon fill="#000000" stroke="#000000" points="3178.2668,-15495.1941 3188.4245,-15492.1822 3178.6056,-15488.2023 3178.2668,-15495.1941"/>
</g>
<!-- ((Int, Boolean, String)) =&gt; ?{def applyLens: ?} -->
<g id="node640" class="node">
<title>((Int, Boolean, String)) =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-30475.8701" rx="195.7372" ry="26.7407"/>
<text text-anchor="start" x="367.3032" y="-30479.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Boolean, String)) =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-30464.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out] -->
<g id="edge41" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M5314.1913,-10846.8701C5377.2163,-10846.8701 5441.5463,-10846.8701 5504.6384,-10846.8701"/>
<polygon fill="#000000" stroke="#000000" points="5504.7534,-10850.3702 5514.7533,-10846.8701 5504.7533,-10843.3702 5504.7534,-10850.3702"/>
</g>
<!-- scalaz.Equal[(Int, Int, Int, Int, Int, Int)] -->
<g id="node642" class="node">
<title>scalaz.Equal[(Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-8902.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="4667.3434" y="-8906.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[(Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4774.3434" y="-8891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- scalaz.Equal[(Int, Int, Int, Int, Int, Int)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge499" class="edge">
<title>scalaz.Equal[(Int, Int, Int, Int, Int, Int)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4936.3355,-8899.9295C5073.5774,-8896.079 5275.3739,-8887.2172 5450.3374,-8866.8701 5637.0887,-8845.152 5853.5866,-8801.4715 5968.3259,-8776.8355"/>
<polygon fill="#000000" stroke="#000000" points="5969.3946,-8780.1856 5978.4331,-8774.658 5967.9203,-8773.3426 5969.3946,-8780.1856"/>
</g>
<!-- Long :: shapeless.HNil =&gt; ?{def ::: ?} -->
<g id="node643" class="node">
<title>Long :: shapeless.HNil =&gt; ?{def ::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-30547.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="392.3032" y="-30551.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Long :: shapeless.HNil =&gt; ?{def ::: ?}</text>
<text text-anchor="middle" x="497.8032" y="-30536.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Cons1[(Int, Boolean, String),H,T] -->
<g id="node644" class="node">
<title>monocle.function.Cons1[(Int, Boolean, String),H,T]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-18163.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="354.8032" y="-18167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons1[(Int, Boolean, String),H,T]</text>
<text text-anchor="middle" x="497.8032" y="-18152.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- monocle.function.Cons1[(Int, Boolean, String),H,T]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[(Int, Boolean, String),H,T] -->
<g id="edge434" class="edge">
<title>monocle.function.Cons1[(Int, Boolean, String),H,T]&#45;&gt;shapeless.ops.hlist.IsHCons.Aux[(Int, Boolean, String),H,T]</title>
<path fill="none" stroke="#000000" d="M711.5929,-18163.8701C939.595,-18163.8701 1300.6158,-18163.8701 1543.4834,-18163.8701"/>
<polygon fill="#000000" stroke="#000000" points="1543.5141,-18167.3702 1553.5141,-18163.8701 1543.514,-18160.3702 1543.5141,-18167.3702"/>
</g>
<!-- scalaz.OneAnd[List,Int] =&gt; ?{def applyOptional: ?} -->
<g id="node646" class="node">
<title>scalaz.OneAnd[List,Int] =&gt; ?{def applyOptional: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-30619.8701" rx="214.007" ry="26.7407"/>
<text text-anchor="start" x="354.3032" y="-30623.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.OneAnd[List,Int] =&gt; ?{def applyOptional: ?}</text>
<text text-anchor="middle" x="497.8032" y="-30608.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- monocle.function.Each[scala.collection.immutable.Map[String,Int],A] -->
<g id="node647" class="node">
<title>monocle.function.Each[scala.collection.immutable.Map[String,Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-22843.8701" rx="284.9281" ry="26.7407"/>
<text text-anchor="start" x="304.3032" y="-22847.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[scala.collection.immutable.Map[String,Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-22832.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 21ms</text>
</g>
<!-- monocle.function.Each[scala.collection.immutable.Map[String,Int],A]&#45;&gt;shapeless.Generic.Aux[scala.collection.immutable.Map[String,Int],SGen] -->
<g id="edge96" class="edge">
<title>monocle.function.Each[scala.collection.immutable.Map[String,Int],A]&#45;&gt;shapeless.Generic.Aux[scala.collection.immutable.Map[String,Int],SGen]</title>
<path fill="none" stroke="#000000" d="M782.9763,-22843.8701C992.388,-22843.8701 1276.558,-22843.8701 1491.1408,-22843.8701"/>
<polygon fill="#000000" stroke="#000000" points="1491.3059,-22847.3702 1501.3059,-22843.8701 1491.3058,-22840.3702 1491.3059,-22847.3702"/>
</g>
<!-- monocle.function.Snoc[scala.collection.immutable.Vector[Int],A] -->
<g id="node649" class="node">
<title>monocle.function.Snoc[scala.collection.immutable.Vector[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-30691.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="317.3032" y="-30695.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc[scala.collection.immutable.Vector[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-30680.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Three&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node650" class="node">
<title>String(&#39;Three&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-6074.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="413.3032" y="-6078.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Three&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-6063.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 11ms</text>
</g>
<!-- String(&#39;Three&#39;) =&gt; ?{def &#45;&gt;: ?}&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge73" class="edge">
<title>String(&#39;Three&#39;) =&gt; ?{def &#45;&gt;: ?}&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M627.3037,-6070.7644C728.1114,-6066.3015 871.306,-6057.1845 995.6063,-6038.8701 1257.4168,-6000.2949 1560.743,-5923.3843 1708.6369,-5883.7529"/>
<polygon fill="#000000" stroke="#000000" points="1709.8333,-5887.0557 1718.5828,-5881.0811 1708.0171,-5880.2954 1709.8333,-5887.0557"/>
</g>
<!-- StateExample.this._oldAge.type =&gt; ?{def assigno: ?} -->
<g id="node651" class="node">
<title>StateExample.this._oldAge.type =&gt; ?{def assigno: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-30763.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="350.3032" y="-30767.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._oldAge.type =&gt; ?{def assigno: ?}</text>
<text text-anchor="middle" x="497.8032" y="-30752.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- scalaz.Equal[(List[Int], Int)]&#45;&gt;scalaz.Equal[List[Int]] -->
<g id="edge179" class="edge">
<title>scalaz.Equal[(List[Int], Int)]&#45;&gt;scalaz.Equal[List[Int]]</title>
<path fill="none" stroke="#000000" d="M3465.4135,-9762.6561C3612.3529,-9757.0946 3869.9456,-9746.1856 4090.3493,-9730.8701 4297.1373,-9716.5006 4538.5007,-9693.0556 4672.1183,-9679.4877"/>
<polygon fill="#000000" stroke="#000000" points="4672.7451,-9682.9421 4682.3395,-9678.4478 4672.0365,-9675.9781 4672.7451,-9682.9421"/>
</g>
<!-- scalaz.Equal[(List[Int], Int)]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge142" class="edge">
<title>scalaz.Equal[(List[Int], Int)]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M3466.0863,-9769.8239C3886.1853,-9779.3168 5278.0918,-9802.9982 5450.3374,-9704.8701 5823.1408,-9492.4845 5998.4544,-8943.1854 6039.7112,-8795.7499"/>
<polygon fill="#000000" stroke="#000000" points="6043.1599,-8796.4103 6042.4509,-8785.8392 6036.4129,-8794.5451 6043.1599,-8796.4103"/>
</g>
<!-- scalaz.Equal[scala.collection.immutable.Map[String,Int]]&#45;&gt;scalaz.Order[String] -->
<g id="edge437" class="edge">
<title>scalaz.Equal[scala.collection.immutable.Map[String,Int]]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M5003.0229,-8692.7637C5175.1689,-8691.7514 5391.2213,-8676.9965 5450.3374,-8612.8701 5472.0354,-8589.3331 5438.9259,-8350.3256 5458.3374,-8324.8701 5573.922,-8173.2969 5813.8237,-8145.4159 5949.7974,-8142.5432"/>
<polygon fill="#000000" stroke="#000000" points="5949.8677,-8146.0426 5959.8068,-8142.373 5949.7487,-8139.0437 5949.8677,-8146.0426"/>
</g>
<!-- scalaz.Equal[scala.collection.immutable.Map[String,Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge70" class="edge">
<title>scalaz.Equal[scala.collection.immutable.Map[String,Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4988.2406,-8697.8881C5121.2277,-8704.8309 5295.7445,-8714.1093 5450.3374,-8722.8701 5628.2591,-8732.9528 5835.8419,-8745.6299 5954.0568,-8752.9356"/>
<polygon fill="#000000" stroke="#000000" points="5953.9655,-8756.4365 5964.1624,-8753.5605 5954.3976,-8749.4499 5953.9655,-8756.4365"/>
</g>
<!-- ComposeIssueExample.this.aI2S.type =&gt; ?{def compose(x$1: ? &gt;: ComposeIssueExample.this.B[Nothing,String]): ?} -->
<g id="node655" class="node">
<title>ComposeIssueExample.this.aI2S.type =&gt; ?{def compose(x$1: ? &gt;: ComposeIssueExample.this.B[Nothing,String]): ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-30835.8701" rx="471.7805" ry="26.7407"/>
<text text-anchor="start" x="172.3032" y="-30839.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ComposeIssueExample.this.aI2S.type =&gt; ?{def compose(x$1: ? &gt;: ComposeIssueExample.this.B[Nothing,String]): ?}</text>
<text text-anchor="middle" x="497.8032" y="-30824.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Double :: String :: Long :: shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out] -->
<g id="node656" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Double :: String :: Long :: shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="8260.3382" cy="-10054.8701" rx="492.2927" ry="26.7407"/>
<text text-anchor="start" x="7920.3382" y="-10058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Double :: String :: Long :: shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="8260.3382" y="-10043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Double :: String :: Long :: shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Double :: String :: Long :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out] -->
<g id="edge486" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Double :: String :: Long :: shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Double :: String :: Long :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M8752.809,-10054.8701C8780.202,-10054.8701 8807.7553,-10054.8701 8835.1826,-10054.8701"/>
<polygon fill="#000000" stroke="#000000" points="8835.2812,-10058.3702 8845.2812,-10054.8701 8835.2811,-10051.3702 8835.2812,-10058.3702"/>
</g>
<!-- Stream[Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node657" class="node">
<title>Stream[Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-4562.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="393.3032" y="-4566.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Stream[Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-4551.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Stream[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge183" class="edge">
<title>Stream[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M600.8705,-4583.4411C708.8436,-4599.0368 878.6887,-4606.1089 995.6063,-4526.8701 1602.0709,-4115.8494 1766.7104,-3112.8545 1794.4848,-2907.8355"/>
<polygon fill="#000000" stroke="#000000" points="1797.9608,-2908.247 1795.811,-2897.8725 1791.0221,-2907.3232 1797.9608,-2908.247"/>
</g>
<!-- Stream[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge34" class="edge">
<title>Stream[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M644.5876,-4573.2579C774.1363,-4578.8211 949.3802,-4576.3249 995.6063,-4526.8701 1011.6537,-4509.7019 987.329,-2851.8203 1003.6063,-2834.8701 1194.9879,-2635.5771 1572.4034,-2725.5219 1728.7269,-2774.5535"/>
<polygon fill="#000000" stroke="#000000" points="1728.1093,-2778.0296 1738.6997,-2777.7205 1730.228,-2771.3579 1728.1093,-2778.0296"/>
</g>
<!-- (=&gt; Long) =&gt; Int -->
<g id="node658" class="node">
<title>(=&gt; Long) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-30907.8701" rx="79.8062" ry="26.7407"/>
<text text-anchor="start" x="449.3032" y="-30911.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Long) =&gt; Int</text>
<text text-anchor="middle" x="497.8032" y="-30896.6701" font-family="Times,serif" font-size="14.00" fill="#000000">57 times = 93ms</text>
</g>
<!-- StateExample.this._age.type =&gt; ?{def assigno: ?} -->
<g id="node659" class="node">
<title>StateExample.this._age.type =&gt; ?{def assigno: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-30979.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="360.8032" y="-30983.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._age.type =&gt; ?{def assigno: ?}</text>
<text text-anchor="middle" x="497.8032" y="-30968.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String ==&gt;&gt; Int =&gt; ?{def applyLens: ?} -->
<g id="node660" class="node">
<title>String ==&gt;&gt; Int =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-5426.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="386.3032" y="-5430.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String ==&gt;&gt; Int =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-5415.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 18ms</text>
</g>
<!-- String ==&gt;&gt; Int =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[scalaz.==&gt;&gt;] -->
<g id="edge103" class="edge">
<title>String ==&gt;&gt; Int =&gt; ?{def applyLens: ?}&#45;&gt;eu.timepit.refined.api.RefType[scalaz.==&gt;&gt;]</title>
<path fill="none" stroke="#000000" d="M662.9902,-5421.0678C760.2127,-5416.125 885.3434,-5407.1162 995.6063,-5390.8701 1253.7877,-5352.8296 1552.3419,-5277.5091 1702.3978,-5237.4222"/>
<polygon fill="#000000" stroke="#000000" points="1703.7497,-5240.6836 1712.5038,-5234.7157 1701.9387,-5233.9219 1703.7497,-5240.6836"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Char :: Int :: shapeless.HNil,L2] -->
<g id="node661" class="node">
<title>shapeless.ops.hlist.Reverse.Aux[Char :: Int :: shapeless.HNil,L2]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-10342.8701" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="3168.4729" y="-10346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Aux[Char :: Int :: shapeless.HNil,L2]</text>
<text text-anchor="middle" x="3346.4729" y="-10331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Char :: Int :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Char :: Int :: shapeless.HNil,Out0] -->
<g id="edge473" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[Char :: Int :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Char :: Int :: shapeless.HNil,Out0]</title>
<path fill="none" stroke="#000000" d="M3609.614,-10342.8701C3835.0877,-10342.8701 4162.0799,-10342.8701 4412.2354,-10342.8701"/>
<polygon fill="#000000" stroke="#000000" points="4412.5932,-10346.3702 4422.5931,-10342.8701 4412.5931,-10339.3702 4412.5932,-10346.3702"/>
</g>
<!-- scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Order[Int] -->
<g id="edge420" class="edge">
<title>scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M4890.1083,-8142.6914C5025.4834,-8142.0627 5255.8244,-8146.9741 5450.3374,-8180.8701 5651.8322,-8215.9826 5881.0928,-8296.839 5988.2361,-8337.1397"/>
<polygon fill="#000000" stroke="#000000" points="5987.0076,-8340.417 5997.5993,-8340.6755 5989.4806,-8333.8684 5987.0076,-8340.417"/>
</g>
<!-- scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Order[String] -->
<g id="edge20" class="edge">
<title>scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M4890.3172,-8144.8701C5138.1923,-8144.8701 5715.9496,-8144.8701 5949.1795,-8144.8701"/>
<polygon fill="#000000" stroke="#000000" points="5949.3506,-8148.3702 5959.3506,-8144.8701 5949.3505,-8141.3702 5949.3506,-8148.3702"/>
</g>
<!-- scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Equal[String] -->
<g id="edge90" class="edge">
<title>scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M4870.3515,-8160.0038C5005.8725,-8176.9828 5258.1637,-8192.2706 5450.3374,-8108.8701 5730.3545,-7987.3468 5956.7256,-7673.3212 6026.8906,-7567.9409"/>
<polygon fill="#000000" stroke="#000000" points="6029.8383,-7569.8286 6032.4355,-7559.557 6023.9998,-7565.967 6029.8383,-7569.8286"/>
</g>
<!-- scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge398" class="edge">
<title>scalaz.Equal[Int \&amp;/ String]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4880.7929,-8134.0273C5051.1292,-8119.2812 5373.6274,-8102.9084 5450.3374,-8180.8701 5467.1817,-8197.9891 5446.2134,-8376.1385 5458.3374,-8396.8701 5573.4662,-8593.7361 5842.0836,-8697.5091 5973.8559,-8738.1352"/>
<polygon fill="#000000" stroke="#000000" points="5972.9012,-8741.5031 5983.487,-8741.067 5974.9397,-8734.8065 5972.9012,-8741.5031"/>
</g>
<!-- monocle.generic.Example =&gt; ?{def applyIso: ?} -->
<g id="node664" class="node">
<title>monocle.generic.Example =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-31051.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="363.8032" y="-31055.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.generic.Example =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-31040.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Int @@ scalaz.Tags.Max =&gt; ?{def applyIso: ?} -->
<g id="node665" class="node">
<title>Int @@ scalaz.Tags.Max =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-31123.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="365.3032" y="-31127.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int @@ scalaz.Tags.Max =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-31112.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- m.type =&gt; ?{def traverse: ?} -->
<g id="node666" class="node">
<title>m.type =&gt; ?{def traverse: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-26011.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="417.8032" y="-26015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">m.type =&gt; ?{def traverse: ?}</text>
<text text-anchor="middle" x="497.8032" y="-26000.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 38ms</text>
</g>
<!-- m.type =&gt; ?{def traverse: ?}&#45;&gt;scalaz.Unapply[scalaz.Traverse,Map[String,JsonExample.this.Json]] -->
<g id="edge265" class="edge">
<title>m.type =&gt; ?{def traverse: ?}&#45;&gt;scalaz.Unapply[scalaz.Traverse,Map[String,JsonExample.this.Json]]</title>
<path fill="none" stroke="#000000" d="M621.3993,-26015.2893C826.8724,-26020.9737 1243.6379,-26032.5033 1522.1666,-26040.2087"/>
<polygon fill="#000000" stroke="#000000" points="1522.3357,-26043.7147 1532.4287,-26040.4926 1522.5293,-26036.7173 1522.3357,-26043.7147"/>
</g>
<!-- scalaz.Traverse[scala.collection.immutable.Iterable] -->
<g id="node748" class="node">
<title>scalaz.Traverse[scala.collection.immutable.Iterable]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-25975.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="1656.1015" y="-25979.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Traverse[scala.collection.immutable.Iterable]</text>
<text text-anchor="middle" x="1799.1015" y="-25964.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- m.type =&gt; ?{def traverse: ?}&#45;&gt;scalaz.Traverse[scala.collection.immutable.Iterable] -->
<g id="edge438" class="edge">
<title>m.type =&gt; ?{def traverse: ?}&#45;&gt;scalaz.Traverse[scala.collection.immutable.Iterable]</title>
<path fill="none" stroke="#000000" d="M621.3993,-26008.4508C841.7561,-26002.3547 1305.1243,-25989.5358 1580.3844,-25981.9208"/>
<polygon fill="#000000" stroke="#000000" points="1580.603,-25985.4162 1590.5023,-25981.6409 1580.4093,-25978.4189 1580.603,-25985.4162"/>
</g>
<!-- shapeless.Generic.Aux[String,L1] -->
<g id="node668" class="node">
<title>shapeless.Generic.Aux[String,L1]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-13204.8701" rx="142.6713" ry="26.7407"/>
<text text-anchor="start" x="3253.4729" y="-13208.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[String,L1]</text>
<text text-anchor="middle" x="3346.4729" y="-13193.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalactic.Equality[LensPolyExample.this.Foo[Symbol,Int]] -->
<g id="node669" class="node">
<title>org.scalactic.Equality[LensPolyExample.this.Foo[Symbol,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-29467.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="324.8032" y="-29471.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[LensPolyExample.this.Foo[Symbol,Int]]</text>
<text text-anchor="middle" x="497.8032" y="-29456.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[LensPolyExample.this.Foo[Symbol,Int]]&#45;&gt;scalaz.Equal[LensPolyExample.this.Foo[Symbol,Int]] -->
<g id="edge589" class="edge">
<title>org.scalactic.Equality[LensPolyExample.this.Foo[Symbol,Int]]&#45;&gt;scalaz.Equal[LensPolyExample.this.Foo[Symbol,Int]]</title>
<path fill="none" stroke="#000000" d="M754.1211,-29467.8701C990.966,-29467.8701 1339.7385,-29467.8701 1568.1438,-29467.8701"/>
<polygon fill="#000000" stroke="#000000" points="1568.2499,-29471.3702 1578.2498,-29467.8701 1568.2498,-29464.3702 1568.2499,-29471.3702"/>
</g>
<!-- scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Order[Int] -->
<g id="edge582" class="edge">
<title>scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Order[Int]</title>
<path fill="none" stroke="#000000" d="M4882.4059,-8218.4629C5016.1576,-8221.3912 5250.7127,-8229.6549 5450.3374,-8252.8701 5640.1461,-8274.9436 5860.6832,-8319.7047 5973.8788,-8344.0991"/>
<polygon fill="#000000" stroke="#000000" points="5973.3169,-8347.5584 5983.8307,-8346.251 5974.7964,-8340.7166 5973.3169,-8347.5584"/>
</g>
<!-- scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Order[String] -->
<g id="edge573" class="edge">
<title>scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Order[String]</title>
<path fill="none" stroke="#000000" d="M4880.3178,-8211.45C5013.4228,-8204.5909 5248.8092,-8192.2906 5450.3374,-8180.8701 5626.8691,-8170.866 5832.6002,-8158.3081 5951.2698,-8150.9767"/>
<polygon fill="#000000" stroke="#000000" points="5951.6562,-8154.4596 5961.4212,-8150.3492 5951.2243,-8147.473 5951.6562,-8154.4596"/>
</g>
<!-- scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Equal[String] -->
<g id="edge586" class="edge">
<title>scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Equal[String]</title>
<path fill="none" stroke="#000000" d="M4875.4246,-8226.6805C5043.5292,-8240.5973 5370.0619,-8256.6612 5450.3374,-8180.8701 5462.043,-8169.8184 5451.2698,-8123.3341 5458.3374,-8108.8701 5586.3255,-7846.94 5884.2408,-7637.5399 6001.1566,-7562.608"/>
<polygon fill="#000000" stroke="#000000" points="6003.3652,-7565.351 6009.9196,-7557.0269 5999.6048,-7559.4468 6003.3652,-7565.351"/>
</g>
<!-- scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge174" class="edge">
<title>scalaz.Equal[Int \/ String]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4874.531,-8206.7121C5042.9127,-8192.0716 5371.9744,-8174.6866 5450.3374,-8252.8701 5461.6816,-8264.1882 5450.1204,-8383.1125 5458.3374,-8396.8701 5575.4307,-8592.916 5843.7153,-8697.2205 5974.7288,-8738.076"/>
<polygon fill="#000000" stroke="#000000" points="5973.7151,-8741.426 5984.3023,-8741.0245 5975.7755,-8734.7361 5973.7151,-8741.426"/>
</g>
<!-- scalaz.Equal[Vector[Int]] -->
<g id="node671" class="node">
<title>scalaz.Equal[Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-8830.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="4704.8434" y="-8834.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Vector[Int]]</text>
<text text-anchor="middle" x="4774.3434" y="-8819.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[Vector[Int]]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge231" class="edge">
<title>scalaz.Equal[Vector[Int]]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4881.775,-8825.3749C5015.1355,-8818.5014 5249.5426,-8806.2491 5450.3374,-8794.8701 5628.2591,-8784.7873 5835.8419,-8772.1102 5954.0568,-8764.8045"/>
<polygon fill="#000000" stroke="#000000" points="5954.3976,-8768.2902 5964.1624,-8764.1796 5953.9655,-8761.3036 5954.3976,-8768.2902"/>
</g>
<!-- monocle.function.FilterIndex[scala.collection.immutable.Vector[Int],Int,A] -->
<g id="node672" class="node">
<title>monocle.function.FilterIndex[scala.collection.immutable.Vector[Int],Int,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-31195.8701" rx="303.1977" ry="26.7407"/>
<text text-anchor="start" x="291.3032" y="-31199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[scala.collection.immutable.Vector[Int],Int,A]</text>
<text text-anchor="middle" x="497.8032" y="-31184.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Curry[F,Int =&gt; (Int =&gt; (Int =&gt; (Int =&gt; (Int =&gt; Int))))] -->
<g id="node673" class="node">
<title>monocle.function.Curry[F,Int =&gt; (Int =&gt; (Int =&gt; (Int =&gt; (Int =&gt; Int))))]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-31267.8701" rx="292.9846" ry="26.7407"/>
<text text-anchor="start" x="298.8032" y="-31271.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Curry[F,Int =&gt; (Int =&gt; (Int =&gt; (Int =&gt; (Int =&gt; Int))))]</text>
<text text-anchor="middle" x="497.8032" y="-31256.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- Int(&#45;1) =&gt; monocle.refined.IntBits -->
<g id="node674" class="node">
<title>Int(&#45;1) =&gt; monocle.refined.IntBits</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-6578.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="402.8032" y="-6582.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(&#45;1) =&gt; monocle.refined.IntBits</text>
<text text-anchor="middle" x="497.8032" y="-6567.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 71ms</text>
</g>
<!-- Int(&#45;1) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[F] -->
<g id="edge223" class="edge">
<title>Int(&#45;1) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[F]</title>
<path fill="none" stroke="#000000" d="M576.7209,-6601.4789C687.7324,-6627.8958 888.3946,-6654.9533 995.6063,-6542.8701 1006.6703,-6531.3034 994.9913,-6268.36 1003.6063,-6254.8701 1156.2797,-6015.8054 1500.0041,-5915.8692 1681.5847,-5878.5315"/>
<polygon fill="#000000" stroke="#000000" points="1682.3351,-5881.9507 1691.4405,-5876.5337 1680.9444,-5875.0902 1682.3351,-5881.9507"/>
</g>
<!-- Int(&#45;1) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] -->
<g id="edge446" class="edge">
<title>Int(&#45;1) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined]</title>
<path fill="none" stroke="#000000" d="M579.6571,-6601.1868C689.9795,-6625.7796 885.2477,-6649.0633 995.6063,-6542.8701 1018.8066,-6520.5454 980.1072,-6492.8798 1003.6063,-6470.8701 1197.1941,-6289.5523 1547.4195,-6359.79 1710.7676,-6406.3695"/>
<polygon fill="#000000" stroke="#000000" points="1710.2003,-6409.8486 1720.7789,-6409.2616 1712.1431,-6403.1236 1710.2003,-6409.8486"/>
</g>
<!-- Int(&#45;1) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(31)]] -->
<g id="edge342" class="edge">
<title>Int(&#45;1) =&gt; monocle.refined.IntBits&#45;&gt;eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Interval.Closed[Int(0),Int(31)]]</title>
<path fill="none" stroke="#000000" d="M637.3736,-6571.1477C840.5148,-6559.908 1222.8491,-6538.7537 1493.3357,-6523.7879"/>
<polygon fill="#000000" stroke="#000000" points="1493.9224,-6527.2609 1503.7138,-6523.2137 1493.5357,-6520.2716 1493.9224,-6527.2609"/>
</g>
<!-- scalaz.Functor[F$macro$20] -->
<g id="node675" class="node">
<title>scalaz.Functor[F$macro$20]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-31339.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-31343.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$20]</text>
<text text-anchor="middle" x="497.8032" y="-31328.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Functor[F$macro$13] -->
<g id="node676" class="node">
<title>scalaz.Functor[F$macro$13]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-31411.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-31415.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$13]</text>
<text text-anchor="middle" x="497.8032" y="-31400.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(123) =&gt; ?{def success: ?} -->
<g id="node677" class="node">
<title>Int(123) =&gt; ?{def success: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-31483.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="416.3032" y="-31487.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(123) =&gt; ?{def success: ?}</text>
<text text-anchor="middle" x="497.8032" y="-31472.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Long :: shapeless.HNil,shapeless._0,this.Out,(this.Out, Long :: shapeless.HNil)] -->
<g id="node678" class="node">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Long :: shapeless.HNil,shapeless._0,this.Out,(this.Out, Long :: shapeless.HNil)]</title>
<ellipse fill="none" stroke="#000000" cx="8260.3382" cy="-12376.8701" rx="457.4962" ry="26.7407"/>
<text text-anchor="start" x="7944.8382" y="-12380.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.ReplaceAt.Aux[Long :: shapeless.HNil,shapeless._0,this.Out,(this.Out, Long :: shapeless.HNil)]</text>
<text text-anchor="middle" x="8260.3382" y="-12365.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- ((String, Int)) =&gt; ?{def applyLens: ?} -->
<g id="node679" class="node">
<title>((String, Int)) =&gt; ?{def applyLens: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-31555.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="393.8032" y="-31559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((String, Int)) =&gt; ?{def applyLens: ?}</text>
<text text-anchor="middle" x="497.8032" y="-31544.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scalaz.Functor[F$macro$11] -->
<g id="node680" class="node">
<title>scalaz.Functor[F$macro$11]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-31627.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-31631.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$11]</text>
<text text-anchor="middle" x="497.8032" y="-31616.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- (=&gt; List[?A]) =&gt; S -->
<g id="node681" class="node">
<title>(=&gt; List[?A]) =&gt; S</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-31699.8701" rx="86.9483" ry="26.7407"/>
<text text-anchor="start" x="444.3032" y="-31703.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[?A]) =&gt; S</text>
<text text-anchor="middle" x="497.8032" y="-31688.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; monocle.function.Each[?,?] -->
<g id="node683" class="node">
<title>(=&gt; Unit) =&gt; monocle.function.Each[?,?]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-31771.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="383.3032" y="-31775.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; monocle.function.Each[?,?]</text>
<text text-anchor="middle" x="497.8032" y="-31760.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Id.Id[(StateExample.this.Person, Unit)] =&gt; ?{def shouldEqual: ?} -->
<g id="node684" class="node">
<title>scalaz.Id.Id[(StateExample.this.Person, Unit)] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-4490.8701" rx="292.9846" ry="26.7407"/>
<text text-anchor="start" x="298.8032" y="-4494.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Id.Id[(StateExample.this.Person, Unit)] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-4479.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 20ms</text>
</g>
<!-- scalaz.Id.Id[(StateExample.this.Person, Unit)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge384" class="edge">
<title>scalaz.Id.Id[(StateExample.this.Person, Unit)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M630.7378,-4514.846C738.1097,-4526.8181 888.4548,-4526.1148 995.6063,-4454.8701 1582.7519,-4064.4791 1762.0535,-3107.7615 1793.6557,-2907.8559"/>
<polygon fill="#000000" stroke="#000000" points="1797.1319,-2908.2792 1795.2117,-2897.8599 1790.2152,-2907.2025 1797.1319,-2908.2792"/>
</g>
<!-- scalaz.Id.Id[(StateExample.this.Person, Unit)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge29" class="edge">
<title>scalaz.Id.Id[(StateExample.this.Person, Unit)] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M757.9408,-4503.2101C860.5915,-4501.9115 962.0609,-4490.751 995.6063,-4454.8701 1010.9725,-4438.434 988.0199,-2851.0974 1003.6063,-2834.8701 1195.0088,-2635.5972 1572.4126,-2725.5307 1728.73,-2774.5564"/>
<polygon fill="#000000" stroke="#000000" points="1728.112,-2778.0323 1738.7023,-2777.723 1730.2305,-2771.3606 1728.112,-2778.0323"/>
</g>
<!-- org.scalactic.Equality[scalaz.IList[Int]] -->
<g id="node685" class="node">
<title>org.scalactic.Equality[scalaz.IList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-8326.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="3239.4729" y="-8330.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scalaz.IList[Int]]</text>
<text text-anchor="middle" x="3346.4729" y="-8315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 16ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.IList[Int]]&#45;&gt;scalaz.Equal[scalaz.IList[Int]] -->
<g id="edge298" class="edge">
<title>org.scalactic.Equality[scalaz.IList[Int]]&#45;&gt;scalaz.Equal[scalaz.IList[Int]]</title>
<path fill="none" stroke="#000000" d="M3490.1415,-8314.1287C3680.4586,-8300.4871 4002.3921,-8289.6777 4090.3493,-8362.8701 4102.282,-8372.7997 4086.4407,-8386.9115 4098.3493,-8396.8701 4178.4582,-8463.8609 4473.0987,-8455.1923 4645.8207,-8443.6248"/>
<polygon fill="#000000" stroke="#000000" points="4646.2564,-8447.1033 4655.9949,-8442.9306 4645.7798,-8440.1195 4646.2564,-8447.1033"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil,Out0] -->
<g id="edge303" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[Int :: String :: Boolean :: shapeless.HNil,A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: String :: Boolean :: shapeless.HNil,Out0]</title>
<path fill="none" stroke="#000000" d="M2106.1995,-19243.8701C2344.5879,-19243.8701 2677.3085,-19243.8701 2938.128,-19243.8701"/>
<polygon fill="#000000" stroke="#000000" points="2938.1533,-19247.3702 2948.1532,-19243.8701 2938.1532,-19240.3702 2938.1533,-19247.3702"/>
</g>
<!-- CoproductExample.this.ISB =&gt; ?{def shouldEqual: ?} -->
<g id="node687" class="node">
<title>CoproductExample.this.ISB =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-4418.8701" rx="223.3915" ry="26.7407"/>
<text text-anchor="start" x="347.8032" y="-4422.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoproductExample.this.ISB =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-4407.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- CoproductExample.this.ISB =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge239" class="edge">
<title>CoproductExample.this.ISB =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M621.2888,-4441.275C728.9104,-4453.9523 884.6961,-4455.102 995.6063,-4382.8701 1563.6758,-4012.9063 1757.2766,-3102.1899 1792.7755,-2907.7642"/>
<polygon fill="#000000" stroke="#000000" points="1796.2478,-2908.2299 1794.5757,-2897.7679 1789.3586,-2906.9892 1796.2478,-2908.2299"/>
</g>
<!-- CoproductExample.this.ISB =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge128" class="edge">
<title>CoproductExample.this.ISB =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M697.5369,-4430.9377C817.8906,-4433.3495 955.4356,-4425.8276 995.6063,-4382.8701 1010.2914,-4367.1662 988.7109,-2850.3745 1003.6063,-2834.8701 1195.0317,-2635.6192 1572.4226,-2725.5404 1728.7333,-2774.5596"/>
<polygon fill="#000000" stroke="#000000" points="1728.1148,-2778.0353 1738.7051,-2777.7257 1730.2332,-2771.3636 1728.1148,-2778.0353"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out] -->
<g id="node688" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out]</title>
<ellipse fill="none" stroke="#000000" cx="11491.7745" cy="-11134.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="11121.7745" y="-11138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out]</text>
<text text-anchor="middle" x="11491.7745" y="-11123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,shapeless.HNil,Out] -->
<g id="edge187" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M12026.4026,-11134.8701C12026.5678,-11134.8701 12026.733,-11134.8701 12026.8981,-11134.8701"/>
<polygon fill="#000000" stroke="#000000" points="12024.3304,-11138.3702 12034.3304,-11134.8701 12024.3303,-11131.3702 12024.3304,-11138.3702"/>
</g>
<!-- org.scalactic.Equality[scalaz.Validation[Nothing,Int]] -->
<g id="node690" class="node">
<title>org.scalactic.Equality[scalaz.Validation[Nothing,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-12052.8701" rx="218.492" ry="26.7407"/>
<text text-anchor="start" x="351.3032" y="-12056.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scalaz.Validation[Nothing,Int]]</text>
<text text-anchor="middle" x="497.8032" y="-12041.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 156ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Validation[Nothing,Int]]&#45;&gt;scalaz.Equal[scalaz.Validation[Nothing,Int]] -->
<g id="edge283" class="edge">
<title>org.scalactic.Equality[scalaz.Validation[Nothing,Int]]&#45;&gt;scalaz.Equal[scalaz.Validation[Nothing,Int]]</title>
<path fill="none" stroke="#000000" d="M716.3448,-12052.8701C964.8852,-12052.8701 1366.9505,-12052.8701 1604.899,-12052.8701"/>
<polygon fill="#000000" stroke="#000000" points="1605.0499,-12056.3702 1615.0498,-12052.8701 1605.0498,-12049.3702 1605.0499,-12056.3702"/>
</g>
<!-- Boolean :: shapeless.HNil =&gt; ?{def ::: ?} -->
<g id="node691" class="node">
<title>Boolean :: shapeless.HNil =&gt; ?{def ::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-31843.8701" rx="172.5681" ry="26.7407"/>
<text text-anchor="start" x="383.8032" y="-31847.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean :: shapeless.HNil =&gt; ?{def ::: ?}</text>
<text text-anchor="middle" x="497.8032" y="-31832.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 14ms</text>
</g>
<!-- monocle.function.Each[scalaz.IList[Int],Int] -->
<g id="node692" class="node">
<title>monocle.function.Each[scalaz.IList[Int],Int]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-31915.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="377.3032" y="-31919.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[scalaz.IList[Int],Int]</text>
<text text-anchor="middle" x="497.8032" y="-31904.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Vector[Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node693" class="node">
<title>Vector[Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-4346.8701" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="394.3032" y="-4350.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Vector[Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-4335.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Vector[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge106" class="edge">
<title>Vector[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M604.4682,-4366.6989C711.8944,-4380.7377 878.1147,-4385.6853 995.6063,-4310.8701 1544.5632,-3961.3107 1752.163,-3097.0707 1791.7801,-2907.8611"/>
<polygon fill="#000000" stroke="#000000" points="1795.2502,-2908.3633 1793.8481,-2897.8617 1788.3953,-2906.9456 1795.2502,-2908.3633"/>
</g>
<!-- Vector[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge511" class="edge">
<title>Vector[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M643.6479,-4357.2104C773.2811,-4362.8204 949.2521,-4360.4276 995.6063,-4310.8701 1009.6103,-4295.8984 989.4018,-2849.6516 1003.6063,-2834.8701 1195.0568,-2635.6433 1572.4336,-2725.551 1728.7369,-2774.5631"/>
<polygon fill="#000000" stroke="#000000" points="1728.118,-2778.0387 1738.7083,-2777.7288 1730.2362,-2771.3668 1728.118,-2778.0387"/>
</g>
<!-- org.scalactic.Equality[scala.collection.immutable.Stream[Int]] -->
<g id="node694" class="node">
<title>org.scalactic.Equality[scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-9046.8701" rx="252.3743" ry="26.7407"/>
<text text-anchor="start" x="3175.9729" y="-9050.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="3346.4729" y="-9035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 14ms</text>
</g>
<!-- org.scalactic.Equality[scala.collection.immutable.Stream[Int]]&#45;&gt;scalaz.Equal[scala.collection.immutable.Stream[Int]] -->
<g id="edge75" class="edge">
<title>org.scalactic.Equality[scala.collection.immutable.Stream[Int]]&#45;&gt;scalaz.Equal[scala.collection.immutable.Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M3599.281,-9046.8701C3867.5378,-9046.8701 4287.6109,-9046.8701 4546.1193,-9046.8701"/>
<polygon fill="#000000" stroke="#000000" points="4546.3929,-9050.3702 4556.3929,-9046.8701 4546.3928,-9043.3702 4546.3929,-9050.3702"/>
</g>
<!-- Int ==&gt;&gt; String =&gt; ?{def shouldEqual: ?} -->
<g id="node696" class="node">
<title>Int ==&gt;&gt; String =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-4274.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="380.3032" y="-4278.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int ==&gt;&gt; String =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-4263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Int ==&gt;&gt; String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge314" class="edge">
<title>Int ==&gt;&gt; String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M613.2628,-4295.2778C720.5413,-4307.9647 880.6066,-4310.3237 995.6063,-4238.8701 1525.7487,-3909.4729 1746.9147,-3091.3741 1790.7203,-2907.818"/>
<polygon fill="#000000" stroke="#000000" points="1794.1813,-2908.3903 1793.0719,-2897.8537 1787.3684,-2906.7824 1794.1813,-2908.3903"/>
</g>
<!-- Int ==&gt;&gt; String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge39" class="edge">
<title>Int ==&gt;&gt; String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M660.0109,-4285.8616C787.6581,-4290.5355 951.1692,-4286.3648 995.6063,-4238.8701 1008.9292,-4224.6305 990.0927,-2848.9287 1003.6063,-2834.8701 1195.0845,-2635.6699 1572.4458,-2725.5626 1728.7409,-2774.5669"/>
<polygon fill="#000000" stroke="#000000" points="1728.1215,-2778.0423 1738.7118,-2777.7321 1730.2395,-2771.3704 1728.1215,-2778.0423"/>
</g>
<!-- monocle.function.Field1[(String, Int),A] -->
<g id="node697" class="node">
<title>monocle.function.Field1[(String, Int),A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-29251.8701" rx="168.0831" ry="26.7407"/>
<text text-anchor="start" x="386.8032" y="-29255.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Field1[(String, Int),A]</text>
<text text-anchor="middle" x="497.8032" y="-29240.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- monocle.function.Field1[(String, Int),A]&#45;&gt;shapeless.ops.hlist.At.Aux[(String, Int),shapeless.nat._0.N,A] -->
<g id="edge367" class="edge">
<title>monocle.function.Field1[(String, Int),A]&#45;&gt;shapeless.ops.hlist.At.Aux[(String, Int),shapeless.nat._0.N,A]</title>
<path fill="none" stroke="#000000" d="M666.2583,-29251.8701C887.5605,-29251.8701 1278.4735,-29251.8701 1538.1903,-29251.8701"/>
<polygon fill="#000000" stroke="#000000" points="1538.5286,-29255.3702 1548.5286,-29251.8701 1538.5285,-29248.3702 1538.5286,-29255.3702"/>
</g>
<!-- shapeless.ops.hlist.ReplaceAt.Aux[Char :: Long :: shapeless.HNil,shapeless.nat._1,this.Out,(this.Out, Char :: Long :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Long :: shapeless.HNil,shapeless._0,this.Out,(this.Out, Long :: shapeless.HNil)] -->
<g id="edge228" class="edge">
<title>shapeless.ops.hlist.ReplaceAt.Aux[Char :: Long :: shapeless.HNil,shapeless.nat._1,this.Out,(this.Out, Char :: Long :: shapeless.HNil)]&#45;&gt;shapeless.ops.hlist.ReplaceAt.Aux[Long :: shapeless.HNil,shapeless._0,this.Out,(this.Out, Long :: shapeless.HNil)]</title>
<path fill="none" stroke="#000000" d="M7713.8764,-12376.8701C7740.2457,-12376.8701 7766.6401,-12376.8701 7792.8069,-12376.8701"/>
<polygon fill="#000000" stroke="#000000" points="7792.8239,-12380.3702 7802.8239,-12376.8701 7792.8238,-12373.3702 7792.8239,-12380.3702"/>
</g>
<!-- scalaz.Validation[?X,Int] =&gt; scalaz.Validation[E,A] -->
<g id="node699" class="node">
<title>scalaz.Validation[?X,Int] =&gt; scalaz.Validation[E,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-31987.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="354.8032" y="-31991.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Validation[?X,Int] =&gt; scalaz.Validation[E,A]</text>
<text text-anchor="middle" x="497.8032" y="-31976.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.ops.hlist.At[Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._3]&#45;&gt;shapeless.ops.hlist.At[Float :: Char :: Long :: shapeless.HNil,shapeless.nat._2] -->
<g id="edge475" class="edge">
<title>shapeless.ops.hlist.At[Boolean :: Float :: Char :: Long :: shapeless.HNil,shapeless.nat._3]&#45;&gt;shapeless.ops.hlist.At[Float :: Char :: Long :: shapeless.HNil,shapeless.nat._2]</title>
<path fill="none" stroke="#000000" d="M5131.6595,-12448.8701C5317.6694,-12448.8701 5543.4119,-12448.8701 5724.4699,-12448.8701"/>
<polygon fill="#000000" stroke="#000000" points="5724.6904,-12452.3702 5734.6904,-12448.8701 5724.6904,-12445.3702 5724.6904,-12452.3702"/>
</g>
<!-- monocle.function.Each[(Int, Int, Int, Int, Int, Int),A] -->
<g id="node701" class="node">
<title>monocle.function.Each[(Int, Int, Int, Int, Int, Int),A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-11692.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="354.8032" y="-11696.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[(Int, Int, Int, Int, Int, Int),A]</text>
<text text-anchor="middle" x="497.8032" y="-11681.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 41ms</text>
</g>
<!-- monocle.function.Each[(Int, Int, Int, Int, Int, Int),A]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int),SGen] -->
<g id="edge1" class="edge">
<title>monocle.function.Each[(Int, Int, Int, Int, Int, Int),A]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int),SGen]</title>
<path fill="none" stroke="#000000" d="M710.1385,-11695.8072C944.6222,-11699.0506 1321.0667,-11704.2577 1564.2136,-11707.621"/>
<polygon fill="#000000" stroke="#000000" points="1564.1996,-11711.1211 1574.2471,-11707.7598 1564.2965,-11704.1217 1564.1996,-11711.1211"/>
</g>
<!-- monocle.function.Each[(Int, Int, Int, Int, Int, Int),A]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,A] -->
<g id="edge579" class="edge">
<title>monocle.function.Each[(Int, Int, Int, Int, Int, Int),A]&#45;&gt;monocle.function.Each[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil,A]</title>
<path fill="none" stroke="#000000" d="M700.7737,-11684.4474C919.3565,-11675.3768 1268.783,-11660.8767 1514.6952,-11650.6721"/>
<polygon fill="#000000" stroke="#000000" points="1515.0147,-11654.1619 1524.8609,-11650.2502 1514.7244,-11647.1679 1515.0147,-11654.1619"/>
</g>
<!-- Option[Int \/ String] =&gt; ?{def shouldEqual: ?} -->
<g id="node702" class="node">
<title>Option[Int \/ String] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-4202.8701" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="371.8032" y="-4206.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Int / String] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-4191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 15ms</text>
</g>
<!-- Option[Int \/ String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge513" class="edge">
<title>Option[Int \/ String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M619.8843,-4223.4274C726.7681,-4234.9442 882.2627,-4235.4299 995.6063,-4166.8701 1507.2547,-3857.3819 1741.5421,-3085.0975 1789.5963,-2907.6276"/>
<polygon fill="#000000" stroke="#000000" points="1793.0386,-2908.3036 1792.247,-2897.7383 1786.2772,-2906.4912 1793.0386,-2908.3036"/>
</g>
<!-- Option[Int \/ String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge347" class="edge">
<title>Option[Int \/ String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M669.9604,-4214.2015C796.0137,-4218.2856 952.3091,-4213.1322 995.6063,-4166.8701 1008.2481,-4153.3627 990.7837,-2848.2058 1003.6063,-2834.8701 1195.1152,-2635.6994 1572.4592,-2725.5756 1728.7453,-2774.5711"/>
<polygon fill="#000000" stroke="#000000" points="1728.1253,-2778.0464 1738.7156,-2777.7358 1730.2431,-2771.3744 1728.1253,-2778.0464"/>
</g>
<!-- StateExample.this._coolGuy.type =&gt; ?{def modo: ?} -->
<g id="node703" class="node">
<title>StateExample.this._coolGuy.type =&gt; ?{def modo: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-32059.8701" rx="218.492" ry="26.7407"/>
<text text-anchor="start" x="351.3032" y="-32063.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._coolGuy.type =&gt; ?{def modo: ?}</text>
<text text-anchor="middle" x="497.8032" y="-32048.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- ((Int, Double) =&gt; Double) =&gt; ?{def applyIso: ?} -->
<g id="node704" class="node">
<title>((Int, Double) =&gt; Double) =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-32131.8701" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="363.3032" y="-32135.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Double) =&gt; Double) =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-32120.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[Int] =&gt; ?{def applyTraversal: ?} -->
<g id="node705" class="node">
<title>Option[Int] =&gt; ?{def applyTraversal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-32203.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="387.3032" y="-32207.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Int] =&gt; ?{def applyTraversal: ?}</text>
<text text-anchor="middle" x="497.8032" y="-32192.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[Int]] -->
<g id="node706" class="node">
<title>org.scalactic.Equality[scalaz.Id.Id[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-29035.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="390.8032" y="-29039.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[scalaz.Id.Id[Int]]</text>
<text text-anchor="middle" x="497.8032" y="-29024.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- org.scalactic.Equality[scalaz.Id.Id[Int]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[Int]] -->
<g id="edge275" class="edge">
<title>org.scalactic.Equality[scalaz.Id.Id[Int]]&#45;&gt;scalaz.Equal[scalaz.Id.Id[Int]]</title>
<path fill="none" stroke="#000000" d="M660.6386,-29035.8701C918.9758,-29035.8701 1418.2341,-29035.8701 1660.5048,-29035.8701"/>
<polygon fill="#000000" stroke="#000000" points="1660.7839,-29039.3702 1670.7838,-29035.8701 1660.7838,-29032.3702 1660.7839,-29039.3702"/>
</g>
<!-- Boolean :: String :: Int :: shapeless.HNil =&gt; ?{def shouldEqual: ?} -->
<g id="node707" class="node">
<title>Boolean :: String :: Int :: shapeless.HNil =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-4130.8701" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="314.8032" y="-4134.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean :: String :: Int :: shapeless.HNil =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-4119.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- Boolean :: String :: Int :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge165" class="edge">
<title>Boolean :: String :: Int :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M647.6538,-4153.2578C752.1793,-4161.3037 891.097,-4156.2508 995.6063,-4094.8701 1488.8157,-3805.1968 1735.7656,-3079.096 1788.3158,-2907.586"/>
<polygon fill="#000000" stroke="#000000" points="1791.6687,-2908.59 1791.2252,-2898.0045 1784.9706,-2906.5561 1791.6687,-2908.59"/>
</g>
<!-- Boolean :: String :: Int :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge521" class="edge">
<title>Boolean :: String :: Int :: shapeless.HNil =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M737.2113,-4143.3217C846.6072,-4143.2743 959.7778,-4133.1389 995.6063,-4094.8701 1007.5669,-4082.0948 991.4746,-2847.4829 1003.6063,-2834.8701 1195.1494,-2635.7323 1572.4742,-2725.59 1728.7502,-2774.5759"/>
<polygon fill="#000000" stroke="#000000" points="1728.1296,-2778.0509 1738.7199,-2777.7399 1730.2471,-2771.3788 1728.1296,-2778.0509"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[String :: Long :: shapeless.HNil,Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: String :: Long :: shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out] -->
<g id="edge330" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[String :: Long :: shapeless.HNil,Double :: Boolean :: Char :: Int :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Double :: String :: Long :: shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M7675.6635,-10054.8701C7703.0566,-10054.8701 7730.6099,-10054.8701 7758.0372,-10054.8701"/>
<polygon fill="#000000" stroke="#000000" points="7758.1357,-10058.3702 7768.1357,-10054.8701 7758.1357,-10051.3702 7758.1357,-10058.3702"/>
</g>
<!-- Unit =&gt; monocle.function.Each[?,?] -->
<g id="node709" class="node">
<title>Unit =&gt; monocle.function.Each[?,?]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-32275.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="397.8032" y="-32279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; monocle.function.Each[?,?]</text>
<text text-anchor="middle" x="497.8032" y="-32264.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out0] -->
<g id="node712" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out0]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-11278.8701" rx="393.717" ry="26.7407"/>
<text text-anchor="start" x="4503.8434" y="-11282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out0]</text>
<text text-anchor="middle" x="4774.3434" y="-11267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out] -->
<g id="edge57" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Boolean :: shapeless.HNil,Char :: Int :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M5168.6362,-11278.8701C5321.7283,-11278.8701 5496.8358,-11278.8701 5650.383,-11278.8701"/>
<polygon fill="#000000" stroke="#000000" points="5650.4653,-11282.3702 5660.4652,-11278.8701 5650.4652,-11275.3702 5650.4653,-11282.3702"/>
</g>
<!-- String =&gt; Double -->
<g id="node713" class="node">
<title>String =&gt; Double</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-32347.8701" rx="79.8062" ry="26.7407"/>
<text text-anchor="start" x="449.3032" y="-32351.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; Double</text>
<text text-anchor="middle" x="497.8032" y="-32336.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Functor[F$macro$12] -->
<g id="node714" class="node">
<title>scalaz.Functor[F$macro$12]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-32419.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-32423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$12]</text>
<text text-anchor="middle" x="497.8032" y="-32408.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.coproduct.Selector[String :+: Boolean :+: shapeless.CNil,Boolean]&#45;&gt;shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Boolean] -->
<g id="edge550" class="edge">
<title>shapeless.ops.coproduct.Selector[String :+: Boolean :+: shapeless.CNil,Boolean]&#45;&gt;shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Boolean]</title>
<path fill="none" stroke="#000000" d="M2123.9527,-20683.8701C2397.7421,-20683.8701 2786.1632,-20683.8701 3051.2354,-20683.8701"/>
<polygon fill="#000000" stroke="#000000" points="3051.3991,-20687.3702 3061.3991,-20683.8701 3051.399,-20680.3702 3051.3991,-20687.3702"/>
</g>
<!-- scalaz.Functor[F$macro$132] -->
<g id="node716" class="node">
<title>scalaz.Functor[F$macro$132]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-32491.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="415.8032" y="-32495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$132]</text>
<text text-anchor="middle" x="497.8032" y="-32480.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- monocle.function.FilterIndex[scala.collection.immutable.Map[String,Int],String,A] -->
<g id="node717" class="node">
<title>monocle.function.FilterIndex[scala.collection.immutable.Map[String,Int],String,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-32563.8701" rx="334.423" ry="26.7407"/>
<text text-anchor="start" x="269.3032" y="-32567.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.FilterIndex[scala.collection.immutable.Map[String,Int],String,A]</text>
<text text-anchor="middle" x="497.8032" y="-32552.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;siblings&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node718" class="node">
<title>String(&#39;siblings&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-32635.8701" rx="138.6859" ry="26.7407"/>
<text text-anchor="start" x="407.8032" y="-32639.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;siblings&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-32624.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 8ms</text>
</g>
<!-- monocle.function.Plated[JsonExample.this.Json] -->
<g id="node719" class="node">
<title>monocle.function.Plated[JsonExample.this.Json]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-32707.8701" rx="200.2225" ry="26.7407"/>
<text text-anchor="start" x="364.3032" y="-32711.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Plated[JsonExample.this.Json]</text>
<text text-anchor="middle" x="497.8032" y="-32696.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Boolean :: Char :: Int :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out0] -->
<g id="edge55" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[Boolean :: Char :: Int :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Boolean :: Char :: Int :: shapeless.HNil,Out0]</title>
<path fill="none" stroke="#000000" d="M3652.3488,-11278.8701C3861.9552,-11278.8701 4142.2095,-11278.8701 4370.1842,-11278.8701"/>
<polygon fill="#000000" stroke="#000000" points="4370.3165,-11282.3702 4380.3165,-11278.8701 4370.3165,-11275.3702 4370.3165,-11282.3702"/>
</g>
<!-- org.scalactic.Equality[Int] -->
<g id="node721" class="node">
<title>org.scalactic.Equality[Int]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-9596.8701" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="4703.3434" y="-9600.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Int]</text>
<text text-anchor="middle" x="4774.3434" y="-9585.6701" font-family="Times,serif" font-size="14.00" fill="#000000">26 times = 53ms</text>
</g>
<!-- org.scalactic.Equality[Int]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge301" class="edge">
<title>org.scalactic.Equality[Int]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M4861.9474,-9613.6717C4997.1882,-9634.9684 5260.9641,-9657.7028 5450.3374,-9555.8701 5782.0628,-9377.4897 5982.709,-8926.5954 6035.4608,-8795.2795"/>
<polygon fill="#000000" stroke="#000000" points="6038.8364,-8796.263 6039.2823,-8785.6775 6032.3325,-8793.6745 6038.8364,-8796.263"/>
</g>
<!-- monocle.function.Each[S,A] -->
<g id="node722" class="node">
<title>monocle.function.Each[S,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-14347.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="419.3032" y="-14351.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[S,A]</text>
<text text-anchor="middle" x="497.8032" y="-14336.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 44ms</text>
</g>
<!-- monocle.function.Each[S,A]&#45;&gt;monocle.function.Each[T[A],A] -->
<g id="edge565" class="edge">
<title>monocle.function.Each[S,A]&#45;&gt;monocle.function.Each[T[A],A]</title>
<path fill="none" stroke="#000000" d="M618.7662,-14351.9601C859.0915,-14360.0861 1395.7437,-14378.2316 1654.3331,-14386.9751"/>
<polygon fill="#000000" stroke="#000000" points="1654.4343,-14390.4804 1664.5469,-14387.3204 1654.6709,-14383.4844 1654.4343,-14390.4804"/>
</g>
<!-- monocle.function.Each[S,A]&#45;&gt;scalaz.Traverse[S] -->
<g id="edge405" class="edge">
<title>monocle.function.Each[S,A]&#45;&gt;scalaz.Traverse[S]</title>
<path fill="none" stroke="#000000" d="M620.4068,-14347.9887C943.4095,-14348.377 1844.4921,-14349.9498 2594.5966,-14355.8701 2831.7904,-14357.7421 3111.0575,-14361.4907 3253.1784,-14363.5089"/>
<polygon fill="#000000" stroke="#000000" points="3253.5388,-14367.0143 3263.5876,-14363.6571 3253.6385,-14360.015 3253.5388,-14367.0143"/>
</g>
<!-- Int :: shapeless.HNil =&gt; ?{def ::: ?} -->
<g id="node723" class="node">
<title>Int :: shapeless.HNil =&gt; ?{def ::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-32779.8701" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="398.8032" y="-32783.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int :: shapeless.HNil =&gt; ?{def ::: ?}</text>
<text text-anchor="middle" x="497.8032" y="-32768.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaz.Equal[(Int, scalaz.Tree[Int])]&#45;&gt;scalaz.Equal[scalaz.Tree[Int]] -->
<g id="edge205" class="edge">
<title>scalaz.Equal[(Int, scalaz.Tree[Int])]&#45;&gt;scalaz.Equal[scalaz.Tree[Int]]</title>
<path fill="none" stroke="#000000" d="M3494.236,-8610.9376C3772.2855,-8603.5379 4369.4422,-8587.6457 4638.2679,-8580.4914"/>
<polygon fill="#000000" stroke="#000000" points="4638.5705,-8583.9847 4648.4738,-8580.2198 4638.3842,-8576.9872 4638.5705,-8583.9847"/>
</g>
<!-- scalaz.Equal[(Int, scalaz.Tree[Int])]&#45;&gt;scalaz.Equal[Int] -->
<g id="edge208" class="edge">
<title>scalaz.Equal[(Int, scalaz.Tree[Int])]&#45;&gt;scalaz.Equal[Int]</title>
<path fill="none" stroke="#000000" d="M3495.8744,-8614.2954C3910.6517,-8613.1994 5070.7532,-8613.6562 5450.3374,-8650.8701 5638.2161,-8669.2894 5855.5787,-8714.5784 5969.8291,-8740.2774"/>
<polygon fill="#000000" stroke="#000000" points="5969.3629,-8743.7602 5979.8883,-8742.5495 5970.9052,-8736.9322 5969.3629,-8743.7602"/>
</g>
<!-- scalaz.Equal[Stream[scalaz.Tree[Int]]]&#45;&gt;scalaz.Equal[scalaz.Tree[Int]] -->
<g id="edge468" class="edge">
<title>scalaz.Equal[Stream[scalaz.Tree[Int]]]&#45;&gt;scalaz.Equal[scalaz.Tree[Int]]</title>
<path fill="none" stroke="#000000" d="M3488.5318,-8458.2443C3678.6379,-8444.5488 4002.1436,-8433.4709 4090.3493,-8506.8701 4102.282,-8516.7997 4086.4407,-8530.9115 4098.3493,-8540.8701 4178.5687,-8607.9533 4473.912,-8599.1682 4646.5347,-8587.5769"/>
<polygon fill="#000000" stroke="#000000" points="4646.9642,-8591.0558 4656.702,-8586.8814 4646.4865,-8584.0721 4646.9642,-8591.0558"/>
</g>
<!-- scalaz.Id.Id[Int] =&gt; ?{def shouldEqual: ?} -->
<g id="node727" class="node">
<title>scalaz.Id.Id[Int] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-4058.8701" rx="176.1392" ry="26.7407"/>
<text text-anchor="start" x="381.3032" y="-4062.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Id.Id[Int] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-4047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 8ms</text>
</g>
<!-- scalaz.Id.Id[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge99" class="edge">
<title>scalaz.Id.Id[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M620.8327,-4078.104C727.0835,-4088.453 881.1106,-4087.9674 995.6063,-4022.8701 1470.5576,-3752.8334 1729.625,-3073.0216 1786.8789,-2907.585"/>
<polygon fill="#000000" stroke="#000000" points="1790.2744,-2908.4732 1790.2099,-2897.8786 1783.6534,-2906.2011 1790.2744,-2908.4732"/>
</g>
<!-- scalaz.Id.Id[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge292" class="edge">
<title>scalaz.Id.Id[Int] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M658.7241,-4069.8028C786.5473,-4074.5437 950.9966,-4070.4998 995.6063,-4022.8701 1018.1653,-3998.7839 980.7247,-2858.6498 1003.6063,-2834.8701 1195.1877,-2635.7691 1572.491,-2725.6061 1728.7558,-2774.5812"/>
<polygon fill="#000000" stroke="#000000" points="1728.1344,-2778.056 1738.7247,-2777.7445 1730.2517,-2771.3838 1728.1344,-2778.056"/>
</g>
<!-- Char :: Long :: shapeless.HNil =&gt; ?{def ::: ?} -->
<g id="node728" class="node">
<title>Char :: Long :: shapeless.HNil =&gt; ?{def ::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-32851.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="371.3032" y="-32855.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Char :: Long :: shapeless.HNil =&gt; ?{def ::: ?}</text>
<text text-anchor="middle" x="497.8032" y="-32840.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- StateExample.this._oldAge.type =&gt; ?{def mod_: ?} -->
<g id="node729" class="node">
<title>StateExample.this._oldAge.type =&gt; ?{def mod_: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-32923.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="354.8032" y="-32927.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._oldAge.type =&gt; ?{def mod_: ?}</text>
<text text-anchor="middle" x="497.8032" y="-32912.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- monocle.function.At[Char,monocle.refined.CharBits,A] -->
<g id="node730" class="node">
<title>monocle.function.At[Char,monocle.refined.CharBits,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-32995.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="344.3032" y="-32999.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.At[Char,monocle.refined.CharBits,A]</text>
<text text-anchor="middle" x="497.8032" y="-32984.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- monocle.function.Cons[scala.collection.immutable.Stream[Int],A] -->
<g id="node731" class="node">
<title>monocle.function.Cons[scala.collection.immutable.Stream[Int],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-33067.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="315.8032" y="-33071.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Cons[scala.collection.immutable.Stream[Int],A]</text>
<text text-anchor="middle" x="497.8032" y="-33056.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- other.Custom =&gt; ?{def shouldEqual: ?} -->
<g id="node732" class="node">
<title>other.Custom =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-3986.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="387.8032" y="-3990.6701" font-family="Times,serif" font-size="14.00" fill="#000000">other.Custom =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-3975.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- other.Custom =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge199" class="edge">
<title>other.Custom =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M620.0849,-4005.2087C726.032,-4015.0247 880.033,-4014.2599 995.6063,-3950.8701 1452.7008,-3700.1623 1723.2972,-3066.2979 1785.3336,-2907.4186"/>
<polygon fill="#000000" stroke="#000000" points="1788.6058,-2908.6608 1788.9557,-2898.0717 1782.0788,-2906.1314 1788.6058,-2908.6608"/>
</g>
<!-- other.Custom =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge82" class="edge">
<title>other.Custom =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M651.1263,-3997.5046C779.9407,-4002.6796 950.0975,-3999.4386 995.6063,-3950.8701 1016.8031,-3928.2482 982.1065,-2857.204 1003.6063,-2834.8701 1195.2309,-2635.8107 1572.51,-2725.6244 1728.762,-2774.5872"/>
<polygon fill="#000000" stroke="#000000" points="1728.1399,-2778.0617 1738.7301,-2777.7497 1730.2568,-2771.3894 1728.1399,-2778.0617"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,String :: Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[String :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out] -->
<g id="edge553" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,String :: Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[String :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M5168.6362,-19243.8701C5320.1178,-19243.8701 5493.1539,-19243.8701 5645.5298,-19243.8701"/>
<polygon fill="#000000" stroke="#000000" points="5645.5363,-19247.3702 5655.5363,-19243.8701 5645.5362,-19240.3702 5645.5363,-19247.3702"/>
</g>
<!-- monocle.function.Snoc[String,A] -->
<g id="node734" class="node">
<title>monocle.function.Snoc[String,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-33139.8701" rx="140.9288" ry="26.7407"/>
<text text-anchor="start" x="406.3032" y="-33143.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc[String,A]</text>
<text text-anchor="middle" x="497.8032" y="-33128.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Stream[Int] =&gt; ?{def applyTraversal: ?} -->
<g id="node735" class="node">
<title>scala.collection.immutable.Stream[Int] =&gt; ?{def applyTraversal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-33211.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="311.3032" y="-33215.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Stream[Int] =&gt; ?{def applyTraversal: ?}</text>
<text text-anchor="middle" x="497.8032" y="-33200.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- org.scalactic.Equality[Option[(Int, scala.collection.immutable.Vector[Int])]] -->
<g id="node736" class="node">
<title>org.scalactic.Equality[Option[(Int, scala.collection.immutable.Vector[Int])]]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-9406.8701" rx="306.3546" ry="26.7407"/>
<text text-anchor="start" x="289.3032" y="-9410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Option[(Int, scala.collection.immutable.Vector[Int])]]</text>
<text text-anchor="middle" x="497.8032" y="-9395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- scalaz.Equal[Option[(Int, scala.collection.immutable.Vector[Int])]] -->
<g id="node765" class="node">
<title>scalaz.Equal[Option[(Int, scala.collection.immutable.Vector[Int])]]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-9406.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="1615.6015" y="-9410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Equal[Option[(Int, scala.collection.immutable.Vector[Int])]]</text>
<text text-anchor="middle" x="1799.1015" y="-9395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalactic.Equality[Option[(Int, scala.collection.immutable.Vector[Int])]]&#45;&gt;scalaz.Equal[Option[(Int, scala.collection.immutable.Vector[Int])]] -->
<g id="edge158" class="edge">
<title>org.scalactic.Equality[Option[(Int, scala.collection.immutable.Vector[Int])]]&#45;&gt;scalaz.Equal[Option[(Int, scala.collection.immutable.Vector[Int])]]</title>
<path fill="none" stroke="#000000" d="M804.1334,-9406.8701C1020.273,-9406.8701 1307.619,-9406.8701 1517.9294,-9406.8701"/>
<polygon fill="#000000" stroke="#000000" points="1518.1997,-9410.3702 1528.1996,-9406.8701 1518.1996,-9403.3702 1518.1997,-9410.3702"/>
</g>
<!-- scalaz.IList[Int] =&gt; ?{def applyTraversal: ?} -->
<g id="node737" class="node">
<title>scalaz.IList[Int] =&gt; ?{def applyTraversal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-33283.8701" rx="185.0243" ry="26.7407"/>
<text text-anchor="start" x="374.8032" y="-33287.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.IList[Int] =&gt; ?{def applyTraversal: ?}</text>
<text text-anchor="middle" x="497.8032" y="-33272.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalactic.Equality[Vector[Int]] -->
<g id="node738" class="node">
<title>org.scalactic.Equality[Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-8830.8701" rx="144.5" ry="26.7407"/>
<text text-anchor="start" x="3252.4729" y="-8834.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[Vector[Int]]</text>
<text text-anchor="middle" x="3346.4729" y="-8819.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalactic.Equality[Vector[Int]]&#45;&gt;scalaz.Equal[Vector[Int]] -->
<g id="edge306" class="edge">
<title>org.scalactic.Equality[Vector[Int]]&#45;&gt;scalaz.Equal[Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M3490.9115,-8830.8701C3773.0421,-8830.8701 4392.583,-8830.8701 4654.0931,-8830.8701"/>
<polygon fill="#000000" stroke="#000000" points="4654.3808,-8834.3702 4664.3808,-8830.8701 4654.3808,-8827.3702 4654.3808,-8834.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char)]&#45;&gt;shapeless.ops.hlist.Tupler[Int :: Char :: shapeless.HNil] -->
<g id="edge596" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char)]&#45;&gt;shapeless.ops.hlist.Tupler[Int :: Char :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M1967.8469,-10361.7216C2130.324,-10345.6902 2383.0574,-10322.0123 2602.5966,-10306.8701 2776.4469,-10294.8791 2973.4271,-10285.5357 3120.995,-10279.3757"/>
<polygon fill="#000000" stroke="#000000" points="3121.2419,-10282.8685 3131.0879,-10278.9561 3120.9511,-10275.8746 3121.2419,-10282.8685"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char)]&#45;&gt;shapeless.Generic.Aux[this.Out,L1] -->
<g id="edge537" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char)]&#45;&gt;shapeless.Generic.Aux[this.Out,L1]</title>
<path fill="none" stroke="#000000" d="M1890.9724,-10354.4383C2056.6238,-10316.5259 2405.6584,-10265.7462 2594.5966,-10450.8701 2617.5942,-10473.4034 2579.1319,-10500.8235 2602.5966,-10522.8701 2686.5488,-10601.7484 3014.0216,-10588.2626 3205.3412,-10572.7767"/>
<polygon fill="#000000" stroke="#000000" points="3205.798,-10576.251 3215.4779,-10571.944 3205.2249,-10569.2745 3205.798,-10576.251"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Char :: Int :: shapeless.HNil,L2] -->
<g id="edge494" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[this.Out,(Int, Char)]&#45;&gt;shapeless.ops.hlist.Reverse.Aux[Char :: Int :: shapeless.HNil,L2]</title>
<path fill="none" stroke="#000000" d="M2013.8503,-10373.8739C2292.2939,-10367.3958 2777.8908,-10356.0983 3079.689,-10349.0769"/>
<polygon fill="#000000" stroke="#000000" points="3079.9849,-10352.571 3089.9008,-10348.8393 3079.8221,-10345.5729 3079.9849,-10352.571"/>
</g>
<!-- ((Int, Boolean, String)) =&gt; ?{def shouldEqual: ?} -->
<g id="node740" class="node">
<title>((Int, Boolean, String)) =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-3914.8701" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="361.8032" y="-3918.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Boolean, String)) =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-3903.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- ((Int, Boolean, String)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge152" class="edge">
<title>((Int, Boolean, String)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M641.55,-3933.9565C745.7449,-3941.0278 886.8495,-3936.1835 995.6063,-3878.8701 1435.377,-3647.1166 1716.9074,-3058.6625 1783.7171,-2906.9785"/>
<polygon fill="#000000" stroke="#000000" points="1787.0065,-2908.192 1787.8066,-2897.6274 1780.5929,-2905.3871 1787.0065,-2908.192"/>
</g>
<!-- ((Int, Boolean, String)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge25" class="edge">
<title>((Int, Boolean, String)) =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M681.3281,-3926.5217C805.2305,-3929.9094 953.5672,-3923.7134 995.6063,-3878.8701 1015.4408,-3857.7125 983.4884,-2855.7582 1003.6063,-2834.8701 1195.2801,-2635.8581 1572.5315,-2725.6452 1728.7691,-2774.594"/>
<polygon fill="#000000" stroke="#000000" points="1728.146,-2778.0682 1738.7363,-2777.7557 1730.2626,-2771.3958 1728.146,-2778.0682"/>
</g>
<!-- Map[Int,String] =&gt; ?{def shouldEqual: ?} -->
<g id="node741" class="node">
<title>Map[Int,String] =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-3842.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="381.8032" y="-3846.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Map[Int,String] =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-3831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- Map[Int,String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge245" class="edge">
<title>Map[Int,String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M631.9728,-3860.1772C736.6061,-3867.5068 882.6329,-3863.8039 995.6063,-3806.8701 1417.6524,-3594.1767 1709.139,-3052.6429 1781.5383,-2907.26"/>
<polygon fill="#000000" stroke="#000000" points="1784.8841,-2908.39 1786.1808,-2897.8748 1778.6098,-2905.2863 1784.8841,-2908.39"/>
</g>
<!-- Map[Int,String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge243" class="edge">
<title>Map[Int,String] =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M658.3879,-3853.7741C786.245,-3858.5229 950.9239,-3854.506 995.6063,-3806.8701 1014.0786,-3787.1768 984.8702,-2854.3125 1003.6063,-2834.8701 1195.3366,-2635.9125 1572.5563,-2725.669 1728.7772,-2774.6019"/>
<polygon fill="#000000" stroke="#000000" points="1728.1531,-2778.0757 1738.7433,-2777.7625 1730.2693,-2771.4032 1728.1531,-2778.0757"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char, Boolean, Double, String, Long, Boolean),Out0] -->
<g id="edge97" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[(Int, Char, Boolean, Double, String, Long, Boolean),A]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,(Int, Char, Boolean, Double, String, Long, Boolean),Out0]</title>
<path fill="none" stroke="#000000" d="M2153.1296,-10774.8701C2372.0118,-10774.8701 2655.1485,-10774.8701 2890.6955,-10774.8701"/>
<polygon fill="#000000" stroke="#000000" points="2890.8156,-10778.3702 2900.8155,-10774.8701 2890.8155,-10771.3702 2890.8156,-10778.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: shapeless.HNil,Out0] -->
<g id="node758" class="node">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: shapeless.HNil,Out0]</title>
<ellipse fill="none" stroke="#000000" cx="4774.3434" cy="-11350.8701" rx="393.717" ry="26.7407"/>
<text text-anchor="start" x="4503.8434" y="-11354.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: shapeless.HNil,Out0]</text>
<text text-anchor="middle" x="4774.3434" y="-11339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: shapeless.HNil,Out0] -->
<g id="edge471" class="edge">
<title>shapeless.ops.hlist.Reverse.Aux[Int :: Char :: Boolean :: shapeless.HNil,L2]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: shapeless.HNil,Out0]</title>
<path fill="none" stroke="#000000" d="M3652.3488,-11350.8701C3861.9552,-11350.8701 4142.2095,-11350.8701 4370.1842,-11350.8701"/>
<polygon fill="#000000" stroke="#000000" points="4370.3165,-11354.3702 4380.3165,-11350.8701 4370.3165,-11347.3702 4370.3165,-11354.3702"/>
</g>
<!-- monocle.function.Index[List[JsonExample.this.Json],Int,A] -->
<g id="node744" class="node">
<title>monocle.function.Index[List[JsonExample.this.Json],Int,A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-33355.8701" rx="241.6612" ry="26.7407"/>
<text text-anchor="start" x="334.8032" y="-33359.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Index[List[JsonExample.this.Json],Int,A]</text>
<text text-anchor="middle" x="497.8032" y="-33344.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 23ms</text>
</g>
<!-- org.scalactic.Equality[LensMonoExample.this.Person] -->
<g id="node746" class="node">
<title>org.scalactic.Equality[LensMonoExample.this.Person]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-21691.8701" rx="222.9775" ry="26.7407"/>
<text text-anchor="start" x="348.3032" y="-21695.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[LensMonoExample.this.Person]</text>
<text text-anchor="middle" x="497.8032" y="-21680.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 12ms</text>
</g>
<!-- org.scalactic.Equality[LensMonoExample.this.Person]&#45;&gt;scalaz.Equal[LensMonoExample.this.Person] -->
<g id="edge350" class="edge">
<title>org.scalactic.Equality[LensMonoExample.this.Person]&#45;&gt;scalaz.Equal[LensMonoExample.this.Person]</title>
<path fill="none" stroke="#000000" d="M720.7646,-21691.8701C968.1469,-21691.8701 1363.6126,-21691.8701 1600.6562,-21691.8701"/>
<polygon fill="#000000" stroke="#000000" points="1600.7716,-21695.3702 1610.7716,-21691.8701 1600.7716,-21688.3702 1600.7716,-21695.3702"/>
</g>
<!-- shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Int]&#45;&gt;shapeless.ops.coproduct.Selector[shapeless.CNil,Int] -->
<g id="edge363" class="edge">
<title>shapeless.ops.coproduct.Selector[Boolean :+: shapeless.CNil,Int]&#45;&gt;shapeless.ops.coproduct.Selector[shapeless.CNil,Int]</title>
<path fill="none" stroke="#000000" d="M3610.447,-170.8701C3879.8748,-170.8701 4293.6263,-170.8701 4548.3932,-170.8701"/>
<polygon fill="#000000" stroke="#000000" points="4548.5182,-174.3702 4558.5182,-170.8701 4548.5182,-167.3702 4548.5182,-174.3702"/>
</g>
<!-- monocle.function.Snoc1[(Int, Boolean, String),I,L] -->
<g id="node749" class="node">
<title>monocle.function.Snoc1[(Int, Boolean, String),I,L]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-20251.8701" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="357.8032" y="-20255.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Snoc1[(Int, Boolean, String),I,L]</text>
<text text-anchor="middle" x="497.8032" y="-20240.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- monocle.function.Snoc1[(Int, Boolean, String),I,L]&#45;&gt;shapeless.ops.hlist.Init.Aux[(Int, Boolean, String),I] -->
<g id="edge247" class="edge">
<title>monocle.function.Snoc1[(Int, Boolean, String),I,L]&#45;&gt;shapeless.ops.hlist.Init.Aux[(Int, Boolean, String),I]</title>
<path fill="none" stroke="#000000" d="M707.2405,-20251.8701C945.324,-20251.8701 1332.425,-20251.8701 1576.0285,-20251.8701"/>
<polygon fill="#000000" stroke="#000000" points="1576.075,-20255.3702 1586.075,-20251.8701 1576.075,-20248.3702 1576.075,-20255.3702"/>
</g>
<!-- monocle.function.Each[List[JsonExample.this.Json],A] -->
<g id="node752" class="node">
<title>monocle.function.Each[List[JsonExample.this.Json],A]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-33427.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="345.8032" y="-33431.6701" font-family="Times,serif" font-size="14.00" fill="#000000">monocle.function.Each[List[JsonExample.this.Json],A]</text>
<text text-anchor="middle" x="497.8032" y="-33416.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 313ms</text>
</g>
<!-- shapeless.Generic.Aux[List[JsonExample.this.Json],SGen] -->
<g id="node767" class="node">
<title>shapeless.Generic.Aux[List[JsonExample.this.Json],SGen]</title>
<ellipse fill="none" stroke="#000000" cx="1799.1015" cy="-33427.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="1638.1015" y="-33431.6701" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[List[JsonExample.this.Json],SGen]</text>
<text text-anchor="middle" x="1799.1015" y="-33416.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 308ms</text>
</g>
<!-- monocle.function.Each[List[JsonExample.this.Json],A]&#45;&gt;shapeless.Generic.Aux[List[JsonExample.this.Json],SGen] -->
<g id="edge320" class="edge">
<title>monocle.function.Each[List[JsonExample.this.Json],A]&#45;&gt;shapeless.Generic.Aux[List[JsonExample.this.Json],SGen]</title>
<path fill="none" stroke="#000000" d="M724.1003,-33427.8701C954.6585,-33427.8701 1311.2988,-33427.8701 1549.829,-33427.8701"/>
<polygon fill="#000000" stroke="#000000" points="1550.0336,-33431.3702 1560.0336,-33427.8701 1550.0336,-33424.3702 1550.0336,-33431.3702"/>
</g>
<!-- String =&gt; Int -->
<g id="node754" class="node">
<title>String =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-33499.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="450.8032" y="-33503.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; Int</text>
<text text-anchor="middle" x="497.8032" y="-33488.6701" font-family="Times,serif" font-size="14.00" fill="#000000">52 times = 16ms</text>
</g>
<!-- scalaz.Functor[F$macro$133] -->
<g id="node755" class="node">
<title>scalaz.Functor[F$macro$133]</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-33571.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="415.8032" y="-33575.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaz.Functor[F$macro$133]</text>
<text text-anchor="middle" x="497.8032" y="-33560.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: shapeless.HNil,Out] -->
<g id="edge15" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[shapeless.HNil,Int :: Char :: Boolean :: shapeless.HNil,Out0]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Int :: shapeless.HNil,Char :: Boolean :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M5168.6362,-11350.8701C5321.7283,-11350.8701 5496.8358,-11350.8701 5650.383,-11350.8701"/>
<polygon fill="#000000" stroke="#000000" points="5650.4653,-11354.3702 5660.4652,-11350.8701 5650.4652,-11347.3702 5650.4653,-11354.3702"/>
</g>
<!-- shapeless.ops.hlist.Reverse.Reverse0[String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Long :: Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out] -->
<g id="edge469" class="edge">
<title>shapeless.ops.hlist.Reverse.Reverse0[String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Long :: Boolean :: shapeless.HNil,Out]&#45;&gt;shapeless.ops.hlist.Reverse.Reverse0[Long :: String :: Double :: Boolean :: Char :: Int :: shapeless.HNil,Boolean :: shapeless.HNil,Out]</title>
<path fill="none" stroke="#000000" d="M10949.2572,-11134.8701C10949.4224,-11134.8701 10949.5875,-11134.8701 10949.7527,-11134.8701"/>
<polygon fill="#000000" stroke="#000000" points="10947.185,-11138.3702 10957.1849,-11134.8701 10947.1849,-11131.3702 10947.185,-11138.3702"/>
</g>
<!-- shapeless.ops.tuple.Reverse.Aux[String,A]&#45;&gt;shapeless.Generic.Aux[String,L1] -->
<g id="edge59" class="edge">
<title>shapeless.ops.tuple.Reverse.Aux[String,A]&#45;&gt;shapeless.Generic.Aux[String,L1]</title>
<path fill="none" stroke="#000000" d="M1976.6047,-13204.8701C2282.7691,-13204.8701 2904.9764,-13204.8701 3193.3675,-13204.8701"/>
<polygon fill="#000000" stroke="#000000" points="3193.4847,-13208.3702 3203.4846,-13204.8701 3193.4846,-13201.3702 3193.4847,-13208.3702"/>
</g>
<!-- monocle.function.Each[Int :: List[Int] :: shapeless.HNil,A]&#45;&gt;shapeless.Generic.Aux[Int :: List[Int] :: shapeless.HNil,SGen] -->
<g id="edge409" class="edge">
<title>monocle.function.Each[Int :: List[Int] :: shapeless.HNil,A]&#45;&gt;shapeless.Generic.Aux[Int :: List[Int] :: shapeless.HNil,SGen]</title>
<path fill="none" stroke="#000000" d="M2037.0645,-14782.6382C2320.5713,-14785.9361 2792.6022,-14791.4271 3085.767,-14794.8374"/>
<polygon fill="#000000" stroke="#000000" points="3086.0797,-14798.3411 3096.1198,-14794.9578 3086.1612,-14791.3416 3086.0797,-14798.3411"/>
</g>
<!-- monocle.function.Each[Int :: List[Int] :: shapeless.HNil,A]&#45;&gt;monocle.function.Each[List[Int] :: shapeless.HNil,Int] -->
<g id="edge519" class="edge">
<title>monocle.function.Each[Int :: List[Int] :: shapeless.HNil,A]&#45;&gt;monocle.function.Each[List[Int] :: shapeless.HNil,Int]</title>
<path fill="none" stroke="#000000" d="M2027.4215,-14771.9022C2322.0534,-14761.6201 2831.3754,-14743.8459 3123.4213,-14733.6541"/>
<polygon fill="#000000" stroke="#000000" points="3123.8461,-14737.1415 3133.7179,-14733.2948 3123.6019,-14730.1457 3123.8461,-14737.1415"/>
</g>
<!-- shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Int]&#45;&gt;shapeless.ops.coproduct.Inject[shapeless.CNil,Int] -->
<g id="edge66" class="edge">
<title>shapeless.ops.coproduct.Inject[Boolean :+: shapeless.CNil,Int]&#45;&gt;shapeless.ops.coproduct.Inject[shapeless.CNil,Int]</title>
<path fill="none" stroke="#000000" d="M3600.5132,-18235.8701C3873.0189,-18235.8701 4301.1547,-18235.8701 4558.11,-18235.8701"/>
<polygon fill="#000000" stroke="#000000" points="4558.3162,-18239.3702 4568.3162,-18235.8701 4558.3161,-18232.3702 4558.3162,-18239.3702"/>
</g>
<!-- scalaz.Equal[Option[(Int, scala.collection.immutable.Vector[Int])]]&#45;&gt;scalaz.Equal[(Int, scala.collection.immutable.Vector[Int])] -->
<g id="edge297" class="edge">
<title>scalaz.Equal[Option[(Int, scala.collection.immutable.Vector[Int])]]&#45;&gt;scalaz.Equal[(Int, scala.collection.immutable.Vector[Int])]</title>
<path fill="none" stroke="#000000" d="M2069.9606,-9406.8701C2360.0247,-9406.8701 2816.4364,-9406.8701 3097.7005,-9406.8701"/>
<polygon fill="#000000" stroke="#000000" points="3098.0471,-9410.3702 3108.0471,-9406.8701 3098.0471,-9403.3702 3098.0471,-9410.3702"/>
</g>
<!-- Int \&amp;/ String =&gt; ?{def shouldEqual: ?} -->
<g id="node766" class="node">
<title>Int \&amp;/ String =&gt; ?{def shouldEqual: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-3770.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="389.3032" y="-3774.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int &amp;/ String =&gt; ?{def shouldEqual: ?}</text>
<text text-anchor="middle" x="497.8032" y="-3759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- Int \&amp;/ String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge193" class="edge">
<title>Int \&amp;/ String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M630.2883,-3786.8585C734.6532,-3793.5942 881.1328,-3789.7343 995.6063,-3734.8701 1400.9871,-3540.5817 1701.8164,-3044.46 1779.4397,-2906.782"/>
<polygon fill="#000000" stroke="#000000" points="1782.5999,-2908.3021 1784.4354,-2897.8674 1776.4934,-2904.88 1782.5999,-2908.3021"/>
</g>
<!-- Int \&amp;/ String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier -->
<g id="edge472" class="edge">
<title>Int \&amp;/ String =&gt; ?{def shouldEqual: ?}&#45;&gt;org.scalactic.Prettifier</title>
<path fill="none" stroke="#000000" d="M649.5363,-3781.4224C778.5208,-3786.674 949.8704,-3783.5969 995.6063,-3734.8701 1012.7164,-3716.6411 986.2521,-2852.8667 1003.6063,-2834.8701 1195.4021,-2635.9756 1572.585,-2725.6967 1728.7867,-2774.611"/>
<polygon fill="#000000" stroke="#000000" points="1728.1614,-2778.0844 1738.7515,-2777.7704 1730.277,-2771.4117 1728.1614,-2778.0844"/>
</g>
<!-- scala.collection.immutable.Vector[Int] =&gt; ?{def applyOptional: ?} -->
<g id="node768" class="node">
<title>scala.collection.immutable.Vector[Int] =&gt; ?{def applyOptional: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-33643.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="314.3032" y="-33647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Vector[Int] =&gt; ?{def applyOptional: ?}</text>
<text text-anchor="middle" x="497.8032" y="-33632.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 3ms</text>
</g>
<!-- StateExample.this._oldAge.type =&gt; ?{def extracts: ?} -->
<g id="node769" class="node">
<title>StateExample.this._oldAge.type =&gt; ?{def extracts: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-33715.8701" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="349.3032" y="-33719.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._oldAge.type =&gt; ?{def extracts: ?}</text>
<text text-anchor="middle" x="497.8032" y="-33704.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- String(&#39;hello&#39;) =&gt; ?{def applyOptional: ?} -->
<g id="node770" class="node">
<title>String(&#39;hello&#39;) =&gt; ?{def applyOptional: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-33787.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="383.3032" y="-33791.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;hello&#39;) =&gt; ?{def applyOptional: ?}</text>
<text text-anchor="middle" x="497.8032" y="-33776.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- StateExample.this._nameGet.type =&gt; ?{def extract: ?} -->
<g id="node772" class="node">
<title>StateExample.this._nameGet.type =&gt; ?{def extract: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-33859.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="347.3032" y="-33863.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StateExample.this._nameGet.type =&gt; ?{def extract: ?}</text>
<text text-anchor="middle" x="497.8032" y="-33848.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scalaz.Equal[Option[(Int, List[Int])]]&#45;&gt;scalaz.Equal[(Int, List[Int])] -->
<g id="edge266" class="edge">
<title>scalaz.Equal[Option[(Int, List[Int])]]&#45;&gt;scalaz.Equal[(Int, List[Int])]</title>
<path fill="none" stroke="#000000" d="M1952.7704,-9550.8701C2257.0688,-9550.8701 2931.4389,-9550.8701 3215.8823,-9550.8701"/>
<polygon fill="#000000" stroke="#000000" points="3216.2476,-9554.3702 3226.2476,-9550.8701 3216.2475,-9547.3702 3216.2476,-9554.3702"/>
</g>
<!-- Int(5) =&gt; ?{def left: ?} -->
<g id="node774" class="node">
<title>Int(5) =&gt; ?{def left: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-33931.8701" rx="101.2327" ry="26.7407"/>
<text text-anchor="start" x="434.3032" y="-33935.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(5) =&gt; ?{def left: ?}</text>
<text text-anchor="middle" x="497.8032" y="-33920.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Int, Char, Boolean)) =&gt; ?{def applyIso: ?} -->
<g id="node775" class="node">
<title>((Int, Char, Boolean)) =&gt; ?{def applyIso: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-34003.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="375.8032" y="-34007.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Char, Boolean)) =&gt; ?{def applyIso: ?}</text>
<text text-anchor="middle" x="497.8032" y="-33992.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.Equality[(Int, Int, Int, Int, Int, Int)] -->
<g id="node777" class="node">
<title>org.scalactic.Equality[(Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="3346.4729" cy="-8902.8701" rx="197.9798" ry="26.7407"/>
<text text-anchor="start" x="3214.4729" y="-8906.6701" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Equality[(Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="3346.4729" y="-8891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalactic.Equality[(Int, Int, Int, Int, Int, Int)]&#45;&gt;scalaz.Equal[(Int, Int, Int, Int, Int, Int)] -->
<g id="edge191" class="edge">
<title>org.scalactic.Equality[(Int, Int, Int, Int, Int, Int)]&#45;&gt;scalaz.Equal[(Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M3544.637,-8902.8701C3825.5855,-8902.8701 4335.0812,-8902.8701 4601.4927,-8902.8701"/>
<polygon fill="#000000" stroke="#000000" points="4601.6482,-8906.3702 4611.6482,-8902.8701 4601.6481,-8899.3702 4601.6482,-8906.3702"/>
</g>
<!-- String(&#39;socket_timeout&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node778" class="node">
<title>String(&#39;socket_timeout&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="497.8032" cy="-34075.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="387.3032" y="-34079.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;socket_timeout&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="497.8032" y="-34064.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
</g>
</svg>
