<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: implicit&#45;searches&#45;1510220504366 Pages: 1 -->
<svg width="20655pt" height="81476pt"
 viewBox="0.00 0.00 20655.18 81475.81" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 81471.8056)">
<title>implicit&#45;searches&#45;1510220504366</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-81471.8056 20651.185,-81471.8056 20651.185,4 -4,4"/>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc19] -->
<g id="node1" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc19]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-3158.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-3162.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc19]</text>
<text text-anchor="middle" x="572.0494" y="-3147.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc19]] -->
<g id="node1396" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc19]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-3158.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="1531.604" y="-3162.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc19]]</text>
<text text-anchor="middle" x="1749.604" y="-3147.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc19]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc19]] -->
<g id="edge1363" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc19]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc19]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-3158.9355C944.0278,-3158.9355 1209.2209,-3158.9355 1419.4845,-3158.9355"/>
<polygon fill="#000000" stroke="#000000" points="1419.7702,-3162.4356 1429.7702,-3158.9355 1419.7702,-3155.4356 1419.7702,-3162.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.tests.examples.Foo] -->
<g id="node2" class="node">
<title>org.scalacheck.Arbitrary[io.circe.tests.examples.Foo]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-3230.9355" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="426.0494" y="-3234.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.tests.examples.Foo]</text>
<text text-anchor="middle" x="572.0494" y="-3219.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- scala.reflect.ClassTag[io.circe.tests.examples.Foo] -->
<g id="node941" class="node">
<title>scala.reflect.ClassTag[io.circe.tests.examples.Foo]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-3230.9355" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="1611.104" y="-3234.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[io.circe.tests.examples.Foo]</text>
<text text-anchor="middle" x="1749.604" y="-3219.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.tests.examples.Foo]&#45;&gt;scala.reflect.ClassTag[io.circe.tests.examples.Foo] -->
<g id="edge416" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.tests.examples.Foo]&#45;&gt;scala.reflect.ClassTag[io.circe.tests.examples.Foo]</title>
<path fill="none" stroke="#000000" d="M790.0906,-3230.9355C1001.535,-3230.9355 1320.5274,-3230.9355 1531.8682,-3230.9355"/>
<polygon fill="#000000" stroke="#000000" points="1532.1641,-3234.4356 1542.1641,-3230.9355 1532.1641,-3227.4356 1532.1641,-3234.4356"/>
</g>
<!-- io.circe.Decoder[io.circe.JsonNumber] -->
<g id="node3" class="node">
<title>io.circe.Decoder[io.circe.JsonNumber]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-5510.9355" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="465.5494" y="-5514.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[io.circe.JsonNumber]</text>
<text text-anchor="middle" x="572.0494" y="-5499.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Set[Int] =&gt; Traversable[Int] -->
<g id="node4" class="node">
<title>Set[Int] =&gt; Traversable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-15858.9355" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="5090.7166" y="-15862.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Set[Int] =&gt; Traversable[Int]</text>
<text text-anchor="middle" x="5167.7166" y="-15847.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[io.circe.DecodingFailure] -->
<g id="node5" class="node">
<title>cats.Eq[io.circe.DecodingFailure]</title>
<ellipse fill="none" stroke="#000000" cx="19994.3036" cy="-14724.9355" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="19902.3036" y="-14728.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[io.circe.DecodingFailure]</text>
<text text-anchor="middle" x="19994.3036" y="-14713.7355" font-family="Times,serif" font-size="14.00" fill="#000000">43 times = 177ms</text>
</g>
<!-- shapeless.IsTuple[io.circe.DecodingFailure] -->
<g id="node535" class="node">
<title>shapeless.IsTuple[io.circe.DecodingFailure]</title>
<ellipse fill="none" stroke="#000000" cx="20465.4585" cy="-14752.9355" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="20344.9585" y="-14756.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.DecodingFailure]</text>
<text text-anchor="middle" x="20465.4585" y="-14741.7355" font-family="Times,serif" font-size="14.00" fill="#000000">52 times = 37ms</text>
</g>
<!-- cats.Eq[io.circe.DecodingFailure]&#45;&gt;shapeless.IsTuple[io.circe.DecodingFailure] -->
<g id="edge287" class="edge">
<title>cats.Eq[io.circe.DecodingFailure]&#45;&gt;shapeless.IsTuple[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M20129.3177,-14732.9592C20178.2383,-14735.8665 20234.2818,-14739.1971 20286.4024,-14742.2945"/>
<polygon fill="#000000" stroke="#000000" points="20286.2379,-14745.7908 20296.4279,-14742.8903 20286.6532,-14738.8032 20286.2379,-14745.7908"/>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc17] -->
<g id="node6" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc17]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-19070.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-19074.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc17]</text>
<text text-anchor="middle" x="572.0494" y="-19059.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc17]] -->
<g id="node1824" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc17]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-19070.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="1549.604" y="-19074.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc17]]</text>
<text text-anchor="middle" x="1749.604" y="-19059.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc17]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc17]] -->
<g id="edge1502" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc17]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc17]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-19070.9355C951.3519,-19070.9355 1231.2937,-19070.9355 1445.2652,-19070.9355"/>
<polygon fill="#000000" stroke="#000000" points="1445.4039,-19074.4356 1455.4038,-19070.9355 1445.4038,-19067.4356 1445.4039,-19074.4356"/>
</g>
<!-- io.circe.Decoder[Int] -->
<g id="node7" class="node">
<title>io.circe.Decoder[Int]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="5167.7166" cy="-12942.9355" rx="92.7622" ry="26.7407"/>
<text text-anchor="start" x="5110.2166" y="-12946.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Int]</text>
<text text-anchor="middle" x="5167.7166" y="-12931.7355" font-family="Times,serif" font-size="14.00" fill="#000000">316 times = 810ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int)] -->
<g id="node8" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-22985.9355" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="477.0494" y="-22989.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-22974.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- io.circe.Encoder[Int] -->
<g id="node1167" class="node">
<title>io.circe.Encoder[Int]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="1749.604" cy="-21302.9355" rx="91.8478" ry="26.7407"/>
<text text-anchor="start" x="1692.604" y="-21306.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Int]</text>
<text text-anchor="middle" x="1749.604" y="-21291.7355" font-family="Times,serif" font-size="14.00" fill="#000000">356 times = 708ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge446" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M669.5775,-23005.9147C799.8072,-23026.222 1027.5779,-23038.2221 1144.0988,-22904.9355 1155.1233,-22892.3247 1144.1261,-21713.6668 1152.0988,-21698.9355 1265.5068,-21489.3903 1543.4868,-21371.7809 1676.4438,-21325.798"/>
<polygon fill="#000000" stroke="#000000" points="1677.8183,-21329.027 1686.1482,-21322.4801 1675.5537,-21322.4035 1677.8183,-21329.027"/>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int)]] -->
<g id="node1827" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-23030.9355" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="1566.104" y="-23034.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-23019.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int)]] -->
<g id="edge1460" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M714.9697,-22991.3972C906.0446,-22998.6991 1248.2658,-23011.777 1486.5801,-23020.8841"/>
<polygon fill="#000000" stroke="#000000" points="1486.6578,-23024.3896 1496.7842,-23021.2741 1486.9251,-23017.3947 1486.6578,-23024.3896"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc2] -->
<g id="node9" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc2]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-23138.9355" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="430.5494" y="-23142.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc2]</text>
<text text-anchor="middle" x="572.0494" y="-23127.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc2] -->
<g id="node754" class="node">
<title>Fractional[ProductCodecSuite.this.Cc2]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-23174.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="1641.104" y="-23178.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc2]</text>
<text text-anchor="middle" x="1749.604" y="-23163.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc2]&#45;&gt;Fractional[ProductCodecSuite.this.Cc2] -->
<g id="edge1353" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc2]&#45;&gt;Fractional[ProductCodecSuite.this.Cc2]</title>
<path fill="none" stroke="#000000" d="M777.8371,-23145.2269C1004.4907,-23152.1561 1364.9051,-23163.1746 1577.2555,-23169.6665"/>
<polygon fill="#000000" stroke="#000000" points="1577.152,-23173.1649 1587.2544,-23169.9722 1577.366,-23166.1682 1577.152,-23173.1649"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc2] -->
<g id="node806" class="node">
<title>Integral[ProductCodecSuite.this.Cc2]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-23102.9355" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="1647.104" y="-23106.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc2]</text>
<text text-anchor="middle" x="1749.604" y="-23091.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc2]&#45;&gt;Integral[ProductCodecSuite.this.Cc2] -->
<g id="edge1002" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc2]&#45;&gt;Integral[ProductCodecSuite.this.Cc2]</title>
<path fill="none" stroke="#000000" d="M777.8371,-23132.6442C1007.2972,-23125.6292 1373.8512,-23114.423 1585.075,-23107.9655"/>
<polygon fill="#000000" stroke="#000000" points="1585.4381,-23111.4561 1595.3265,-23107.6521 1585.2242,-23104.4594 1585.4381,-23111.4561"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node10" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="8203.9914" cy="-17530.9355" rx="470.4521" ry="26.7407"/>
<text text-anchor="start" x="7879.4914" y="-17534.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="8203.9914" y="-17519.7355" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 654ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node741" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="9131.2303" cy="-17458.9355" rx="449.0256" ry="26.7407"/>
<text text-anchor="start" x="8821.7303" y="-17462.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="9131.2303" y="-17447.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 685ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1017" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M8482.8222,-17509.2844C8597.8712,-17500.3508 8731.0728,-17490.0077 8846.7092,-17481.0286"/>
<polygon fill="#000000" stroke="#000000" points="8847.0755,-17484.5108 8856.7745,-17480.247 8846.5335,-17477.5318 8847.0755,-17484.5108"/>
</g>
<!-- cats.kernel.Eq[Int] -->
<g id="node1220" class="node">
<title>cats.kernel.Eq[Int]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="19994.3036" cy="-16152.9355" rx="86.9483" ry="26.7407"/>
<text text-anchor="start" x="19940.8036" y="-16156.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int]</text>
<text text-anchor="middle" x="19994.3036" y="-16141.7355" font-family="Times,serif" font-size="14.00" fill="#000000">303 times = 722ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge120" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M8267.9431,-17557.7005C8464.4311,-17639.8014 9076.9888,-17894.764 9588.2431,-18096.9355 9970.3421,-18248.0337 10051.7024,-18333.5631 10451.8423,-18426.9355 10877.5157,-18526.2663 11978.8122,-18533.9355 12415.9214,-18533.9355 12415.9214,-18533.9355 12415.9214,-18533.9355 18607.2235,-18533.9355 19114.2721,-18533.9355 19415.5328,-18639.324 19704.8751,-18222.9355 19715.2583,-18207.9932 19710.9812,-17586.0325 19712.8751,-17567.9355 19770.9726,-17012.7744 19941.1935,-16351.8567 19984.2951,-16190.0303"/>
<polygon fill="#000000" stroke="#000000" points="19987.7485,-16190.6638 19986.9477,-16180.0993 19980.9856,-16188.8573 19987.7485,-16190.6638"/>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc1] -->
<g id="node11" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc1]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-23246.9355" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="446.0494" y="-23250.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc1]</text>
<text text-anchor="middle" x="572.0494" y="-23235.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc1]] -->
<g id="node1534" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc1]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-23246.9355" rx="314.8251" ry="26.7407"/>
<text text-anchor="start" x="1535.104" y="-23250.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc1]]</text>
<text text-anchor="middle" x="1749.604" y="-23235.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc1]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc1]] -->
<g id="edge629" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc1]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc1]]</title>
<path fill="none" stroke="#000000" d="M761.5708,-23246.9355C940.1781,-23246.9355 1211.4625,-23246.9355 1424.6075,-23246.9355"/>
<polygon fill="#000000" stroke="#000000" points="1424.7127,-23250.4356 1434.7127,-23246.9355 1424.7127,-23243.4356 1424.7127,-23250.4356"/>
</g>
<!-- scala.reflect.ClassTag[A] -->
<g id="node12" class="node">
<title>scala.reflect.ClassTag[A]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-23318.9355" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="502.5494" y="-23322.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[A]</text>
<text text-anchor="middle" x="572.0494" y="-23307.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 8ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node13" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-22454.9355" rx="384.8322" ry="26.7407"/>
<text text-anchor="start" x="308.0494" y="-22458.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-22443.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 33ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node19" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-22454.9355" rx="509.648" ry="26.7407"/>
<text text-anchor="start" x="1397.104" y="-22458.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-22443.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge424" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M956.8099,-22454.9355C1043.9618,-22454.9355 1137.9189,-22454.9355 1229.6192,-22454.9355"/>
<polygon fill="#000000" stroke="#000000" points="1229.6337,-22458.4356 1239.6337,-22454.9355 1229.6336,-22451.4356 1229.6337,-22458.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge848" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M869.932,-22471.9574C988.1043,-22471.6282 1105.1703,-22459.9321 1144.0988,-22418.9355 1157.8712,-22404.4314 1142.5394,-21716.5045 1152.0988,-21698.9355 1265.9756,-21489.6447 1543.7232,-21371.9092 1676.5332,-21325.8465"/>
<polygon fill="#000000" stroke="#000000" points="1677.9027,-21329.077 1686.2268,-21322.5227 1675.6322,-21322.4555 1677.9027,-21329.077"/>
</g>
<!-- String(&#39;A list decoder&#39;) =&gt; ?{def should: ?} -->
<g id="node14" class="node">
<title>String(&#39;A list decoder&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-33038.9355" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="453.0494" y="-33042.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;A list decoder&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-33027.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalactic.source.Position -->
<g id="node1001" class="node">
<title>org.scalactic.source.Position</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="1749.604" cy="-28214.9355" rx="121.7449" ry="26.7407"/>
<text text-anchor="start" x="1671.604" y="-28218.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.source.Position</text>
<text text-anchor="middle" x="1749.604" y="-28203.7355" font-family="Times,serif" font-size="14.00" fill="#000000">949 times = 645ms</text>
</g>
<!-- String(&#39;A list decoder&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge389" class="edge">
<title>String(&#39;A list decoder&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M733.4615,-33050.7717C881.6683,-33057.8513 1086.6983,-33056.832 1144.0988,-33002.9355 1513.8902,-32655.7182 1725.8918,-28681.0062 1747.7293,-28252.345"/>
<polygon fill="#000000" stroke="#000000" points="1751.24,-28252.2211 1748.2515,-28242.0565 1744.249,-28251.8661 1751.24,-28252.2211"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Long,Int]] -->
<g id="node15" class="node">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-8930.9355" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="2743.4013" y="-8934.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.collection.immutable.Map[Long,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-8919.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- scala.collection.immutable.Map[Long,Int] =&gt; Traversable[(Long, Int)] -->
<g id="node195" class="node">
<title>scala.collection.immutable.Map[Long,Int] =&gt; Traversable[(Long, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-8824.9355" rx="287.1707" ry="26.7407"/>
<text text-anchor="start" x="3875.7721" y="-8828.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[Long,Int] =&gt; Traversable[(Long, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-8813.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Long,Int]]&#45;&gt;scala.collection.immutable.Map[Long,Int] =&gt; Traversable[(Long, Int)] -->
<g id="edge125" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Long,Int]]&#45;&gt;scala.collection.immutable.Map[Long,Int] =&gt; Traversable[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M3174.6837,-8943.8768C3308.6442,-8945.6736 3457.6609,-8937.1668 3507.6933,-8894.9355 3519.5561,-8884.9224 3503.8424,-8870.9628 3515.6933,-8860.9355 3559.7925,-8823.6225 3683.902,-8813.3222 3803.6082,-8812.936"/>
<polygon fill="#000000" stroke="#000000" points="3803.6949,-8816.436 3813.6915,-8812.9265 3803.6882,-8809.436 3803.6949,-8816.436"/>
</g>
<!-- scala.reflect.ClassTag[scala.collection.immutable.Map[Long,Int]] -->
<g id="node570" class="node">
<title>scala.reflect.ClassTag[scala.collection.immutable.Map[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-8752.9355" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="3890.2721" y="-8756.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.collection.immutable.Map[Long,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-8741.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Long,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Map[Long,Int]] -->
<g id="edge776" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Long,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Map[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M3159.8242,-8946.1669C3298.9809,-8950.0174 3459.0918,-8942.9121 3507.6933,-8894.9355 3524.5047,-8878.3403 3498.9016,-8805.5507 3515.6933,-8788.9355 3560.5596,-8744.5407 3704.3354,-8736.0974 3834.3114,-8738.4656"/>
<polygon fill="#000000" stroke="#000000" points="3834.3704,-8741.9675 3844.4397,-8738.6723 3834.5132,-8734.9689 3834.3704,-8741.9675"/>
</g>
<!-- org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.Map[Long,Int]] -->
<g id="node1818" class="node">
<title>org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.Map[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-8896.9355" rx="339.3225" ry="26.7407"/>
<text text-anchor="start" x="3838.7721" y="-8900.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.Map[Long,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-8885.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Long,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.Map[Long,Int]] -->
<g id="edge298" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Long,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.Map[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M3196.3771,-8923.0284C3359.3902,-8918.1639 3569.57,-8911.8919 3743.0088,-8906.7163"/>
<polygon fill="#000000" stroke="#000000" points="3743.1762,-8910.213 3753.0674,-8906.4162 3742.9674,-8903.2161 3743.1762,-8910.213"/>
</g>
<!-- org.scalacheck.Arbitrary[(Long, Int)] -->
<g id="node1866" class="node">
<title>org.scalacheck.Arbitrary[(Long, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-9874.9355" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="3968.7721" y="-9878.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Long, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-9863.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 24ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Long,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Long, Int)] -->
<g id="edge878" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Long,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M3153.9844,-8914.888C3295.1678,-8910.1548 3459.9291,-8916.5596 3507.6933,-8966.9355 3524.36,-8984.5136 3499.0475,-9821.3377 3515.6933,-9838.9355 3569.0772,-9895.3728 3774.6036,-9895.0908 3919.9526,-9887.091"/>
<polygon fill="#000000" stroke="#000000" points="3920.5256,-9890.5642 3930.3109,-9886.5024 3920.1284,-9883.5755 3920.5256,-9890.5642"/>
</g>
<!-- org.scalacheck.util.Buildable[(Symbol, Int),scala.collection.immutable.Map[Symbol,Int]] -->
<g id="node16" class="node">
<title>org.scalacheck.util.Buildable[(Symbol, Int),scala.collection.immutable.Map[Symbol,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-4238.9355" rx="359.8347" ry="26.7407"/>
<text text-anchor="start" x="3824.2721" y="-4242.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(Symbol, Int),scala.collection.immutable.Map[Symbol,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-4227.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(Symbol, Int),scala.collection.immutable.Map[Symbol,Int]] -->
<g id="node364" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(Symbol, Int),scala.collection.immutable.Map[Symbol,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-4238.9355" rx="406.6728" ry="26.7407"/>
<text text-anchor="start" x="4888.2166" y="-4242.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(Symbol, Int),scala.collection.immutable.Map[Symbol,Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-4227.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(Symbol, Int),scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Symbol, Int),scala.collection.immutable.Map[Symbol,Int]] -->
<g id="edge919" class="edge">
<title>org.scalacheck.util.Buildable[(Symbol, Int),scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Symbol, Int),scala.collection.immutable.Map[Symbol,Int]]</title>
<path fill="none" stroke="#000000" d="M4430.7122,-4238.9355C4532.9778,-4238.9355 4645.1995,-4238.9355 4750.5535,-4238.9355"/>
<polygon fill="#000000" stroke="#000000" points="4750.7271,-4242.4356 4760.727,-4238.9355 4750.727,-4235.4356 4750.7271,-4242.4356"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; (?A =&gt; ?ASSERTION) -->
<g id="node17" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; (?A =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-33110.9355" rx="233.1906" ry="26.7407"/>
<text text-anchor="start" x="415.0494" y="-33114.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; (?A =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-33099.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int)] -->
<g id="node18" class="node">
<title>cats.kernel.Eq[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-17712.9355" rx="105.218" ry="26.7407"/>
<text text-anchor="start" x="10791.9287" y="-17716.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int)]</text>
<text text-anchor="middle" x="10858.4287" y="-17701.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 32ms</text>
</g>
<!-- shapeless.Generic.Aux[(Int, Int),L] -->
<g id="node336" class="node">
<title>shapeless.Generic.Aux[(Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-17822.9355" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="11561.8883" y="-17826.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int),L]</text>
<text text-anchor="middle" x="11658.3883" y="-17811.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int),L] -->
<g id="edge1491" class="edge">
<title>cats.kernel.Eq[(Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M10937.9463,-17695.1753C11028.3135,-17680.015 11174.9145,-17671.3918 11265.0151,-17748.9355 11276.4536,-17758.78 11261.664,-17771.9904 11273.0151,-17781.9355 11345.8383,-17845.739 11458.5579,-17850.768 11543.3117,-17842.9381"/>
<polygon fill="#000000" stroke="#000000" points="11543.9006,-17846.3968 11553.5043,-17841.9225 11543.2066,-17839.4313 11543.9006,-17846.3968"/>
</g>
<!-- cats.kernel.Order[Int] -->
<g id="node365" class="node">
<title>cats.kernel.Order[Int]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-16112.9355" rx="94.5053" ry="26.7407"/>
<text text-anchor="start" x="11599.3883" y="-16116.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[Int]</text>
<text text-anchor="middle" x="11658.3883" y="-16101.7355" font-family="Times,serif" font-size="14.00" fill="#000000">276 times = 236ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge1035" class="edge">
<title>cats.kernel.Eq[(Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10917.8803,-17690.6977C11011.7606,-17651.943 11191.2402,-17562.2076 11265.0151,-17418.9355 11273.0903,-17403.2533 11261.0954,-16161.9381 11273.0151,-16148.9355 11348.6551,-16066.4237 11489.0294,-16076.0504 11577.8653,-16092.8427"/>
<polygon fill="#000000" stroke="#000000" points="11577.4133,-16096.3206 11587.9001,-16094.8112 11578.7609,-16089.4516 11577.4133,-16096.3206"/>
</g>
<!-- cats.kernel.PartialOrder[Int] -->
<g id="node550" class="node">
<title>cats.kernel.PartialOrder[Int]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-17712.9355" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="11581.3883" y="-17716.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.PartialOrder[Int]</text>
<text text-anchor="middle" x="11658.3883" y="-17701.7355" font-family="Times,serif" font-size="14.00" fill="#000000">263 times = 387ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge1140" class="edge">
<title>cats.kernel.Eq[(Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M10963.832,-17712.9355C11109.0307,-17712.9355 11370.4455,-17712.9355 11527.8374,-17712.9355"/>
<polygon fill="#000000" stroke="#000000" points="11528.0518,-17716.4356 11538.0517,-17712.9355 11528.0517,-17709.4356 11528.0518,-17716.4356"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: shapeless.HNil] -->
<g id="node1691" class="node">
<title>cats.kernel.Eq[Int :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="18607.2235" cy="-17531.9355" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="18492.7235" y="-17535.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="18607.2235" y="-17520.7355" font-family="Times,serif" font-size="14.00" fill="#000000">24 times = 336ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: shapeless.HNil] -->
<g id="edge337" class="edge">
<title>cats.kernel.Eq[(Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M10955.8837,-17723.3376C11039.8148,-17731.8313 11164.2468,-17743.316 11273.0151,-17748.9355 11780.367,-17775.1481 11907.8929,-17767.9355 12415.9214,-17767.9355 12415.9214,-17767.9355 12415.9214,-17767.9355 16788.8083,-17767.9355 17442.0259,-17767.9355 18216.3393,-17616.317 18497.9638,-17556.1337"/>
<polygon fill="#000000" stroke="#000000" points="18498.7285,-17559.5494 18507.7732,-17554.0318 18497.2618,-17552.7048 18498.7285,-17559.5494"/>
</g>
<!-- shapeless.IsTuple[(Int, Int)] -->
<g id="node1918" class="node">
<title>shapeless.IsTuple[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-17894.9355" rx="118.5882" ry="26.7407"/>
<text text-anchor="start" x="11582.3883" y="-17898.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int)]</text>
<text text-anchor="middle" x="11658.3883" y="-17883.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int)] -->
<g id="edge1286" class="edge">
<title>cats.kernel.Eq[(Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int)]</title>
<path fill="none" stroke="#000000" d="M10933.409,-17693.9639C11025.3616,-17675.682 11179.5083,-17662.0746 11265.0151,-17748.9355 11282.2089,-17766.4016 11255.8635,-17841.4279 11273.0151,-17858.9355 11347.8392,-17935.313 11478.5296,-17930.653 11566.7319,-17916.1869"/>
<polygon fill="#000000" stroke="#000000" points="11567.4686,-17919.6118 11576.7348,-17914.4747 11566.2876,-17912.7121 11567.4686,-17919.6118"/>
</g>
<!-- String(&#39;deleteGoLast&#39;) =&gt; ?{def should: ?} -->
<g id="node20" class="node">
<title>String(&#39;deleteGoLast&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-32966.9355" rx="176.1392" ry="26.7407"/>
<text text-anchor="start" x="455.5494" y="-32970.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;deleteGoLast&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-32955.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;deleteGoLast&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge815" class="edge">
<title>String(&#39;deleteGoLast&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M730.6367,-32978.613C879.0322,-32985.8206 1086.2841,-32985.1176 1144.0988,-32930.9355 1508.6491,-32589.2904 1725.2244,-28676.0295 1747.667,-28252.1096"/>
<polygon fill="#000000" stroke="#000000" points="1751.1722,-28252.1014 1748.204,-28241.9309 1744.1819,-28251.7326 1751.1722,-28252.1014"/>
</g>
<!-- cats.kernel.Eq[String :: Char :: shapeless.HNil] -->
<g id="node21" class="node">
<title>cats.kernel.Eq[String :: Char :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-14921.9355" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="12286.9214" y="-14925.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[String :: Char :: shapeless.HNil]</text>
<text text-anchor="middle" x="12415.9214" y="-14910.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 82ms</text>
</g>
<!-- cats.kernel.Eq[String] -->
<g id="node24" class="node">
<title>cats.kernel.Eq[String]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-15282.9355" rx="96.3333" ry="26.7407"/>
<text text-anchor="start" x="13071.0282" y="-15286.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[String]</text>
<text text-anchor="middle" x="13131.0282" y="-15271.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 61ms</text>
</g>
<!-- cats.kernel.Eq[String :: Char :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[String] -->
<g id="edge683" class="edge">
<title>cats.kernel.Eq[String :: Char :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[String]</title>
<path fill="none" stroke="#000000" d="M12603.737,-14928.6033C12669.1862,-14940.8715 12736.9634,-14966.7209 12780.0814,-15018.9355 12796.2519,-15038.5175 12773.4443,-15112.1824 12788.0814,-15132.9355 12844.9232,-15213.5283 12954.8918,-15251.2823 13035.0234,-15268.6657"/>
<polygon fill="#000000" stroke="#000000" points="13034.6294,-15272.1591 13045.1349,-15270.7861 13036.0661,-15265.3082 13034.6294,-15272.1591"/>
</g>
<!-- cats.kernel.Eq[Char :: shapeless.HNil] -->
<g id="node71" class="node">
<title>cats.kernel.Eq[Char :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-14912.9355" rx="159.6125" ry="26.7407"/>
<text text-anchor="start" x="13026.0282" y="-14916.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Char :: shapeless.HNil]</text>
<text text-anchor="middle" x="13131.0282" y="-14901.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- cats.kernel.Eq[String :: Char :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Char :: shapeless.HNil] -->
<g id="edge902" class="edge">
<title>cats.kernel.Eq[String :: Char :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Char :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M12608.9685,-14919.5059C12718.9694,-14918.1215 12855.5338,-14916.4028 12961.3956,-14915.0705"/>
<polygon fill="#000000" stroke="#000000" points="12961.5874,-14918.5684 12971.5425,-14914.9428 12961.4992,-14911.569 12961.5874,-14918.5684"/>
</g>
<!-- shapeless.IsTuple[String :: Char :: shapeless.HNil] -->
<g id="node1772" class="node">
<title>shapeless.IsTuple[String :: Char :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-15096.9355" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="12992.5282" y="-15100.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[String :: Char :: shapeless.HNil]</text>
<text text-anchor="middle" x="13131.0282" y="-15085.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[String :: Char :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[String :: Char :: shapeless.HNil] -->
<g id="edge1308" class="edge">
<title>cats.kernel.Eq[String :: Char :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[String :: Char :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M12577.3914,-14907.0065C12649.2869,-14909.5646 12729.0631,-14926.7087 12780.0814,-14980.9355 12792.3241,-14993.9481 12775.4791,-15048.271 12788.0814,-15060.9355 12842.3263,-15115.448 12928.4836,-15124.3175 13000.8682,-15119.6245"/>
<polygon fill="#000000" stroke="#000000" points="13001.2715,-15123.1043 13010.9859,-15118.8756 13000.7547,-15116.1234 13001.2715,-15123.1043"/>
</g>
<!-- Int(101) =&gt; ?{def asJson: ?} -->
<g id="node22" class="node">
<title>Int(101) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-33182.9355" rx="123.0732" ry="26.7407"/>
<text text-anchor="start" x="493.0494" y="-33186.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Int(101) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-33171.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; String -->
<g id="node23" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-33254.9355" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="473.0494" y="-33258.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; String</text>
<text text-anchor="middle" x="572.0494" y="-33243.7355" font-family="Times,serif" font-size="14.00" fill="#000000">21 times = 8ms</text>
</g>
<!-- shapeless.IsTuple[String] -->
<g id="node1679" class="node">
<title>shapeless.IsTuple[String]</title>
<ellipse fill="none" stroke="#000000" cx="13803.7086" cy="-15282.9355" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="13734.2086" y="-15286.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[String]</text>
<text text-anchor="middle" x="13803.7086" y="-15271.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[String]&#45;&gt;shapeless.IsTuple[String] -->
<g id="edge890" class="edge">
<title>cats.kernel.Eq[String]&#45;&gt;shapeless.IsTuple[String]</title>
<path fill="none" stroke="#000000" d="M13227.4069,-15282.9355C13347.6993,-15282.9355 13553.4399,-15282.9355 13683.7928,-15282.9355"/>
<polygon fill="#000000" stroke="#000000" points="13683.8244,-15286.4356 13693.8243,-15282.9355 13683.8243,-15279.4356 13683.8244,-15286.4356"/>
</g>
<!-- io.circe.Decoder[io.circe.tests.examples.WrappedOptionalField] -->
<g id="node25" class="node">
<title>io.circe.Decoder[io.circe.tests.examples.WrappedOptionalField]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-33326.9355" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="396.0494" y="-33330.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[io.circe.tests.examples.WrappedOptionalField]</text>
<text text-anchor="middle" x="572.0494" y="-33315.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[io.circe.tests.examples.WrappedOptionalField]] -->
<g id="node54" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[io.circe.tests.examples.WrappedOptionalField]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-33326.9355" rx="359.8347" ry="26.7407"/>
<text text-anchor="start" x="1503.104" y="-33330.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[io.circe.tests.examples.WrappedOptionalField]]</text>
<text text-anchor="middle" x="1749.604" y="-33315.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[io.circe.tests.examples.WrappedOptionalField]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[io.circe.tests.examples.WrappedOptionalField]] -->
<g id="edge647" class="edge">
<title>io.circe.Decoder[io.circe.tests.examples.WrappedOptionalField]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[io.circe.tests.examples.WrappedOptionalField]]</title>
<path fill="none" stroke="#000000" d="M832.2914,-33326.9355C993.0068,-33326.9355 1201.7582,-33326.9355 1379.5122,-33326.9355"/>
<polygon fill="#000000" stroke="#000000" points="1379.56,-33330.4356 1389.56,-33326.9355 1379.5599,-33323.4356 1379.56,-33330.4356"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node26" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-17200.9355" rx="402.1876" ry="26.7407"/>
<text text-anchor="start" x="5945.7346" y="-17204.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="6222.2346" y="-17189.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.NonEmptyList[Int]] -->
<g id="node27" class="node">
<title>org.scalacheck.Shrink[cats.data.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-33470.9355" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="429.0494" y="-33474.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[cats.data.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="572.0494" y="-33459.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.data.NonEmptyList[Int] =&gt; Traversable[Int] -->
<g id="node513" class="node">
<title>cats.data.NonEmptyList[Int] =&gt; Traversable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-33542.9355" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="1615.604" y="-33546.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.data.NonEmptyList[Int] =&gt; Traversable[Int]</text>
<text text-anchor="middle" x="1749.604" y="-33531.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.NonEmptyList[Int]]&#45;&gt;cats.data.NonEmptyList[Int] =&gt; Traversable[Int] -->
<g id="edge934" class="edge">
<title>org.scalacheck.Shrink[cats.data.NonEmptyList[Int]]&#45;&gt;cats.data.NonEmptyList[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M763.4146,-33482.8995C876.4795,-33489.9465 1022.4364,-33499.0058 1152.0988,-33506.9355 1287.0317,-33515.1876 1439.1143,-33524.3487 1556.0773,-33531.3642"/>
<polygon fill="#000000" stroke="#000000" points="1556.0218,-33534.8671 1566.2134,-33531.9721 1556.4409,-33527.8797 1556.0218,-33534.8671"/>
</g>
<!-- Integral[cats.data.NonEmptyList[Int]] -->
<g id="node546" class="node">
<title>Integral[cats.data.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-33470.9355" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="1645.604" y="-33474.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[cats.data.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="1749.604" y="-33459.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.NonEmptyList[Int]]&#45;&gt;Integral[cats.data.NonEmptyList[Int]] -->
<g id="edge871" class="edge">
<title>org.scalacheck.Shrink[cats.data.NonEmptyList[Int]]&#45;&gt;Integral[cats.data.NonEmptyList[Int]]</title>
<path fill="none" stroke="#000000" d="M785.6369,-33470.9355C1013.9212,-33470.9355 1371.1895,-33470.9355 1580.6707,-33470.9355"/>
<polygon fill="#000000" stroke="#000000" points="1580.8428,-33474.4356 1590.8427,-33470.9355 1580.8427,-33467.4356 1580.8428,-33474.4356"/>
</g>
<!-- Fractional[cats.data.NonEmptyList[Int]] -->
<g id="node740" class="node">
<title>Fractional[cats.data.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-33398.9355" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="1639.604" y="-33402.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[cats.data.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="1749.604" y="-33387.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.NonEmptyList[Int]]&#45;&gt;Fractional[cats.data.NonEmptyList[Int]] -->
<g id="edge458" class="edge">
<title>org.scalacheck.Shrink[cats.data.NonEmptyList[Int]]&#45;&gt;Fractional[cats.data.NonEmptyList[Int]]</title>
<path fill="none" stroke="#000000" d="M763.4146,-33458.9716C876.4795,-33451.9246 1022.4364,-33442.8653 1152.0988,-33434.9355 1297.6348,-33426.035 1463.1217,-33416.077 1582.9744,-33408.8942"/>
<polygon fill="#000000" stroke="#000000" points="1583.2001,-33412.3871 1592.9729,-33408.2951 1582.7814,-33405.3996 1583.2001,-33412.3871"/>
</g>
<!-- cats.Eq[Option[Short]] -->
<g id="node28" class="node">
<title>cats.Eq[Option[Short]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-33614.9355" rx="99.9045" ry="26.7407"/>
<text text-anchor="start" x="1687.104" y="-33618.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[Short]]</text>
<text text-anchor="middle" x="1749.604" y="-33603.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 20ms</text>
</g>
<!-- cats.kernel.Eq[Short] -->
<g id="node539" class="node">
<title>cats.kernel.Eq[Short]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-33650.9355" rx="93.1765" ry="26.7407"/>
<text text-anchor="start" x="2873.4013" y="-33654.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Short]</text>
<text text-anchor="middle" x="2931.4013" y="-33639.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 8ms</text>
</g>
<!-- cats.Eq[Option[Short]]&#45;&gt;cats.kernel.Eq[Short] -->
<g id="edge542" class="edge">
<title>cats.Eq[Option[Short]]&#45;&gt;cats.kernel.Eq[Short]</title>
<path fill="none" stroke="#000000" d="M1848.8372,-33617.9584C2070.3185,-33624.7052 2603.1309,-33640.9358 2828.241,-33647.7931"/>
<polygon fill="#000000" stroke="#000000" points="2828.2981,-33651.2963 2838.4001,-33648.1025 2828.5113,-33644.2996 2828.2981,-33651.2963"/>
</g>
<!-- cats.kernel.Order[Short] -->
<g id="node863" class="node">
<title>cats.kernel.Order[Short]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-33578.9355" rx="105.218" ry="26.7407"/>
<text text-anchor="start" x="2864.9013" y="-33582.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[Short]</text>
<text text-anchor="middle" x="2931.4013" y="-33567.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- cats.Eq[Option[Short]]&#45;&gt;cats.kernel.Order[Short] -->
<g id="edge1556" class="edge">
<title>cats.Eq[Option[Short]]&#45;&gt;cats.kernel.Order[Short]</title>
<path fill="none" stroke="#000000" d="M1848.8372,-33611.9127C2066.596,-33605.2793 2585.3084,-33589.4783 2816.6326,-33582.4316"/>
<polygon fill="#000000" stroke="#000000" points="2816.8681,-33585.9262 2826.7569,-33582.1232 2816.6549,-33578.9294 2816.8681,-33585.9262"/>
</g>
<!-- scala.reflect.ClassTag[Short] -->
<g id="node29" class="node">
<title>scala.reflect.ClassTag[Short]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-15570.9355" rx="123.0732" ry="26.7407"/>
<text text-anchor="start" x="6143.2346" y="-15574.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Short]</text>
<text text-anchor="middle" x="6222.2346" y="-15559.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 1ms</text>
</g>
<!-- Fractional[(String, Int)] -->
<g id="node30" class="node">
<title>Fractional[(String, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-5858.9355" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="5103.2166" y="-5862.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(String, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-5847.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Decoder.Result[Double] =&gt; ?{def ===: ?} -->
<g id="node31" class="node">
<title>io.circe.Decoder.Result[Double] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-33686.9355" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="432.0494" y="-33690.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[Double] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-33675.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node32" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-16438.9355" rx="277.786" ry="26.7407"/>
<text text-anchor="start" x="11469.8883" y="-16442.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="11658.3883" y="-16427.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc12] -->
<g id="node33" class="node">
<title>Fractional[ProductCodecSuite.this.Cc12]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-33758.9355" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="1637.604" y="-33762.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc12]</text>
<text text-anchor="middle" x="1749.604" y="-33747.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int)] -->
<g id="node34" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-22382.9355" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="465.5494" y="-22386.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-22371.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int)]] -->
<g id="node566" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-22382.9355" rx="287.1707" ry="26.7407"/>
<text text-anchor="start" x="1554.604" y="-22386.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-22371.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int)]] -->
<g id="edge559" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M734.2385,-22382.9355C918.9583,-22382.9355 1224.6191,-22382.9355 1452.399,-22382.9355"/>
<polygon fill="#000000" stroke="#000000" points="1452.5054,-22386.4356 1462.5054,-22382.9355 1452.5053,-22379.4356 1452.5054,-22386.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge778" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M716.75,-22395.1184C866.9126,-22404.1967 1087.6179,-22406.3434 1144.0988,-22346.9355 1156.5022,-22333.8893 1143.4854,-21714.7425 1152.0988,-21698.9355 1266.1048,-21489.715 1543.7883,-21371.9447 1676.5578,-21325.8599"/>
<polygon fill="#000000" stroke="#000000" points="1677.9259,-21329.0909 1686.2484,-21322.5345 1675.6538,-21322.4699 1677.9259,-21329.0909"/>
</g>
<!-- Fractional[Long] -->
<g id="node35" class="node">
<title>Fractional[Long]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-9582.9355" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="6175.2346" y="-9586.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Long]</text>
<text text-anchor="middle" x="6222.2346" y="-9571.7355" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 16ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc20]] -->
<g id="node36" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc20]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-33830.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="1549.604" y="-33834.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc20]]</text>
<text text-anchor="middle" x="1749.604" y="-33819.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; Int -->
<g id="node37" class="node">
<title>String =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-33902.9355" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="525.0494" y="-33906.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; Int</text>
<text text-anchor="middle" x="572.0494" y="-33891.7355" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 28ms</text>
</g>
<!-- result2.type =&gt; ?{def ===: ?} -->
<g id="node38" class="node">
<title>result2.type =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-19680.9355" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="10774.9287" y="-19684.7355" font-family="Times,serif" font-size="14.00" fill="#000000">result2.type =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10858.4287" y="-19669.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.Eq[io.circe.JsonObject] -->
<g id="node40" class="node">
<title>cats.Eq[io.circe.JsonObject]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-19625.9355" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="11581.3883" y="-19629.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[io.circe.JsonObject]</text>
<text text-anchor="middle" x="11658.3883" y="-19614.7355" font-family="Times,serif" font-size="14.00" fill="#000000">38 times = 223ms</text>
</g>
<!-- result2.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonObject] -->
<g id="edge745" class="edge">
<title>result2.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonObject]</title>
<path fill="none" stroke="#000000" d="M10981.6692,-19672.4623C11131.4047,-19662.1675 11382.6299,-19644.8949 11533.227,-19634.5408"/>
<polygon fill="#000000" stroke="#000000" points="11533.7097,-19638.016 11543.446,-19633.8382 11533.2295,-19631.0325 11533.7097,-19638.016"/>
</g>
<!-- cats.Eq[Option[io.circe.JsonObject]] -->
<g id="node1238" class="node">
<title>cats.Eq[Option[io.circe.JsonObject]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-19752.9355" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="11558.3883" y="-19756.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[io.circe.JsonObject]]</text>
<text text-anchor="middle" x="11658.3883" y="-19741.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 50ms</text>
</g>
<!-- result2.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[io.circe.JsonObject]] -->
<g id="edge908" class="edge">
<title>result2.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[io.circe.JsonObject]]</title>
<path fill="none" stroke="#000000" d="M10977.6361,-19691.3972C11058.6779,-19698.5324 11168.3224,-19708.2304 11265.0151,-19716.9355 11346.8847,-19724.3062 11438.326,-19732.6668 11512.428,-19739.4745"/>
<polygon fill="#000000" stroke="#000000" points="11512.4879,-19742.9947 11522.7663,-19740.4246 11513.1285,-19736.0241 11512.4879,-19742.9947"/>
</g>
<!-- cats.Applicative[[x]cats.data.Const[List[io.circe.Json],x]] -->
<g id="node39" class="node">
<title>cats.Applicative[[x]cats.data.Const[List[io.circe.Json],x]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-33974.9355" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="415.5494" y="-33978.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Applicative[[x]cats.data.Const[List[io.circe.Json],x]]</text>
<text text-anchor="middle" x="572.0494" y="-33963.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- cats.Monoid[List[io.circe.Json]] -->
<g id="node1696" class="node">
<title>cats.Monoid[List[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-33974.9355" rx="135.5294" ry="26.7407"/>
<text text-anchor="start" x="1661.604" y="-33978.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Monoid[List[io.circe.Json]]</text>
<text text-anchor="middle" x="1749.604" y="-33963.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.Applicative[[x]cats.data.Const[List[io.circe.Json],x]]&#45;&gt;cats.Monoid[List[io.circe.Json]] -->
<g id="edge240" class="edge">
<title>cats.Applicative[[x]cats.data.Const[List[io.circe.Json],x]]&#45;&gt;cats.Monoid[List[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M804.6963,-33974.9355C1042.1972,-33974.9355 1403.5363,-33974.9355 1603.5513,-33974.9355"/>
<polygon fill="#000000" stroke="#000000" points="1603.8365,-33978.4356 1613.8365,-33974.9355 1603.8364,-33971.4356 1603.8365,-33978.4356"/>
</g>
<!-- shapeless.IsTuple[io.circe.JsonObject] -->
<g id="node383" class="node">
<title>shapeless.IsTuple[io.circe.JsonObject]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-19724.9355" rx="159.6125" ry="26.7407"/>
<text text-anchor="start" x="13026.0282" y="-19728.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.JsonObject]</text>
<text text-anchor="middle" x="13131.0282" y="-19713.7355" font-family="Times,serif" font-size="14.00" fill="#000000">46 times = 26ms</text>
</g>
<!-- cats.Eq[io.circe.JsonObject]&#45;&gt;shapeless.IsTuple[io.circe.JsonObject] -->
<g id="edge836" class="edge">
<title>cats.Eq[io.circe.JsonObject]&#45;&gt;shapeless.IsTuple[io.circe.JsonObject]</title>
<path fill="none" stroke="#000000" d="M11775.6042,-19619.9775C11980.2994,-19611.3411 12415.8522,-19600.8208 12780.0814,-19644.9355 12869.9948,-19655.8257 12970.5857,-19680.0266 13040.945,-19698.9762"/>
<polygon fill="#000000" stroke="#000000" points="13040.1006,-19702.3736 13050.6681,-19701.6133 13041.933,-19695.6176 13040.1006,-19702.3736"/>
</g>
<!-- (String =&gt; Boolean) =&gt; Traversable[(String, Boolean)] -->
<g id="node41" class="node">
<title>(String =&gt; Boolean) =&gt; Traversable[(String, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-34190.9355" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="1598.104" y="-34194.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(String =&gt; Boolean) =&gt; Traversable[(String, Boolean)]</text>
<text text-anchor="middle" x="1749.604" y="-34179.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Set[Either[Int,String]]] -->
<g id="node42" class="node">
<title>org.scalacheck.Arbitrary[Set[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-11286.9355" rx="197.9798" ry="26.7407"/>
<text text-anchor="start" x="1617.604" y="-11290.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Set[Either[Int,String]]]</text>
<text text-anchor="middle" x="1749.604" y="-11275.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- scala.reflect.ClassTag[Set[Either[Int,String]]] -->
<g id="node177" class="node">
<title>scala.reflect.ClassTag[Set[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-11394.9355" rx="187.2667" ry="26.7407"/>
<text text-anchor="start" x="2806.9013" y="-11398.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Set[Either[Int,String]]]</text>
<text text-anchor="middle" x="2931.4013" y="-11383.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Set[Either[Int,String]]]&#45;&gt;scala.reflect.ClassTag[Set[Either[Int,String]]] -->
<g id="edge152" class="edge">
<title>org.scalacheck.Arbitrary[Set[Either[Int,String]]]&#45;&gt;scala.reflect.ClassTag[Set[Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M1890.0718,-11305.8974C2012.6441,-11321.9027 2195.3812,-11344.4615 2355.1092,-11358.9355 2484.6076,-11370.6703 2630.826,-11379.7556 2743.5755,-11385.8637"/>
<polygon fill="#000000" stroke="#000000" points="2743.5176,-11389.3656 2753.6914,-11386.4086 2743.8942,-11382.3757 2743.5176,-11389.3656"/>
</g>
<!-- Set[Either[Int,String]] =&gt; Traversable[Either[Int,String]] -->
<g id="node1399" class="node">
<title>Set[Either[Int,String]] =&gt; Traversable[Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-11322.9355" rx="231.4481" ry="26.7407"/>
<text text-anchor="start" x="2775.9013" y="-11326.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Set[Either[Int,String]] =&gt; Traversable[Either[Int,String]]</text>
<text text-anchor="middle" x="2931.4013" y="-11311.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Set[Either[Int,String]]]&#45;&gt;Set[Either[Int,String]] =&gt; Traversable[Either[Int,String]] -->
<g id="edge233" class="edge">
<title>org.scalacheck.Arbitrary[Set[Either[Int,String]]]&#45;&gt;Set[Either[Int,String]] =&gt; Traversable[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M1943.1001,-11292.8298C2149.5742,-11299.1195 2476.7055,-11309.0846 2697.4863,-11315.81"/>
<polygon fill="#000000" stroke="#000000" points="2697.4879,-11319.3116 2707.5899,-11316.1178 2697.7011,-11312.3148 2697.4879,-11319.3116"/>
</g>
<!-- org.scalacheck.util.Buildable[Either[Int,String],Set[Either[Int,String]]] -->
<g id="node1498" class="node">
<title>org.scalacheck.util.Buildable[Either[Int,String],Set[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-11250.9355" rx="283.5996" ry="26.7407"/>
<text text-anchor="start" x="2738.9013" y="-11254.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Either[Int,String],Set[Either[Int,String]]]</text>
<text text-anchor="middle" x="2931.4013" y="-11239.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Set[Either[Int,String]]]&#45;&gt;org.scalacheck.util.Buildable[Either[Int,String],Set[Either[Int,String]]] -->
<g id="edge365" class="edge">
<title>org.scalacheck.Arbitrary[Set[Either[Int,String]]]&#45;&gt;org.scalacheck.util.Buildable[Either[Int,String],Set[Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M1943.1001,-11281.0413C2135.632,-11275.1763 2433.0763,-11266.1156 2651.3765,-11259.4657"/>
<polygon fill="#000000" stroke="#000000" points="2651.4964,-11262.9638 2661.3851,-11259.1608 2651.2832,-11255.967 2651.4964,-11262.9638"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[Int,String]] -->
<g id="node1981" class="node">
<title>org.scalacheck.Arbitrary[Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-10382.9355" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="2812.4013" y="-10386.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Either[Int,String]]</text>
<text text-anchor="middle" x="2931.4013" y="-10371.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 88ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Set[Either[Int,String]]]&#45;&gt;org.scalacheck.Arbitrary[Either[Int,String]] -->
<g id="edge1137" class="edge">
<title>org.scalacheck.Arbitrary[Set[Either[Int,String]]]&#45;&gt;org.scalacheck.Arbitrary[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M1866.977,-11308.6278C2004.7346,-11326.5257 2229.2902,-11330.6358 2347.1092,-11196.9355 2359.6744,-11182.6767 2346.7747,-10872.0157 2355.1092,-10854.9355 2465.077,-10629.5757 2739.0667,-10474.8225 2865.528,-10413.0023"/>
<polygon fill="#000000" stroke="#000000" points="2867.2687,-10416.0481 2874.74,-10408.5361 2864.2149,-10409.7493 2867.2687,-10416.0481"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node43" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-34298.9355" rx="422.2855" ry="26.7407"/>
<text text-anchor="start" x="281.5494" y="-34302.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-34287.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node271" class="node">
<title>Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-34334.9355" rx="376.3617" ry="26.7407"/>
<text text-anchor="start" x="1491.604" y="-34338.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-34323.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge867" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M952.7414,-34310.574C1094.1757,-34314.8979 1253.9946,-34319.7839 1393.1797,-34324.039"/>
<polygon fill="#000000" stroke="#000000" points="1393.4874,-34327.55 1403.5897,-34324.3573 1393.7013,-34320.5532 1393.4874,-34327.55"/>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node989" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-34262.9355" rx="366.9768" ry="26.7407"/>
<text text-anchor="start" x="1498.104" y="-34266.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-34251.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge574" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M952.7414,-34287.2971C1096.614,-34282.8986 1259.5106,-34277.9186 1400.3597,-34273.6126"/>
<polygon fill="#000000" stroke="#000000" points="1400.5738,-34277.1078 1410.4621,-34273.3037 1400.3598,-34270.111 1400.5738,-34277.1078"/>
</g>
<!-- org.scalacheck.Arbitrary[(Short, Int)] -->
<g id="node44" class="node">
<title>org.scalacheck.Arbitrary[(Short, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-15642.9355" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="3968.2721" y="-15646.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Short, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-15631.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Short] -->
<g id="node1000" class="node">
<title>org.scalacheck.Arbitrary[Short]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-15570.9355" rx="133.7865" ry="26.7407"/>
<text text-anchor="start" x="5081.2166" y="-15574.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Short]</text>
<text text-anchor="middle" x="5167.7166" y="-15559.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 10ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Short, Int)]&#45;&gt;org.scalacheck.Arbitrary[Short] -->
<g id="edge420" class="edge">
<title>org.scalacheck.Arbitrary[(Short, Int)]&#45;&gt;org.scalacheck.Arbitrary[Short]</title>
<path fill="none" stroke="#000000" d="M4217.1555,-15633.5048C4329.0781,-15626.279 4487.2088,-15616.0369 4625.8509,-15606.9355 4763.6093,-15597.8922 4921.0574,-15587.4161 5030.6004,-15580.105"/>
<polygon fill="#000000" stroke="#000000" points="5030.973,-15583.588 5040.7176,-15579.4297 5030.5067,-15576.6036 5030.973,-15583.588"/>
</g>
<!-- org.scalacheck.Arbitrary[Int] -->
<g id="node1715" class="node">
<title>org.scalacheck.Arbitrary[Int]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="5167.7166" cy="-1998.9355" rx="123.9879" ry="26.7407"/>
<text text-anchor="start" x="5088.2166" y="-2002.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Int]</text>
<text text-anchor="middle" x="5167.7166" y="-1987.7355" font-family="Times,serif" font-size="14.00" fill="#000000">369 times = 1228ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Short, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge831" class="edge">
<title>org.scalacheck.Arbitrary[(Short, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4211.6598,-15654.6109C4357.4893,-15663.2135 4571.4746,-15664.9165 4625.8509,-15606.9355 4641.1047,-15590.6706 4627.1492,-2784.2032 4633.8509,-2762.9355 4736.0946,-2438.469 5030.4663,-2131.6607 5132.44,-2032.3415"/>
<polygon fill="#000000" stroke="#000000" points="5134.9832,-2034.7508 5139.7282,-2025.2779 5130.1115,-2029.7242 5134.9832,-2034.7508"/>
</g>
<!-- scala.reflect.ClassTag[(Short, Int)] -->
<g id="node1844" class="node">
<title>scala.reflect.ClassTag[(Short, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-15642.9355" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="5072.7166" y="-15646.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Short, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-15631.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Short, Int)]&#45;&gt;scala.reflect.ClassTag[(Short, Int)] -->
<g id="edge202" class="edge">
<title>org.scalacheck.Arbitrary[(Short, Int)]&#45;&gt;scala.reflect.ClassTag[(Short, Int)]</title>
<path fill="none" stroke="#000000" d="M4227.0635,-15642.9355C4435.7796,-15642.9355 4803.3561,-15642.9355 5011.8542,-15642.9355"/>
<polygon fill="#000000" stroke="#000000" points="5011.9687,-15646.4356 5021.9686,-15642.9355 5011.9686,-15639.4356 5011.9687,-15646.4356"/>
</g>
<!-- io.circe.Decoder.Result[Float] =&gt; ?{def ===: ?} -->
<g id="node45" class="node">
<title>io.circe.Decoder.Result[Float] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-34370.9355" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="438.0494" y="-34374.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[Float] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-34359.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node46" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-1710.9355" rx="352.6926" ry="26.7407"/>
<text text-anchor="start" x="3829.2721" y="-1714.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-1699.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 49ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1163" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-1710.9355" rx="342.4795" ry="26.7407"/>
<text text-anchor="start" x="4933.7166" y="-1714.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-1699.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge960" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4423.8903,-1710.9355C4549.0513,-1710.9355 4689.8247,-1710.9355 4814.9559,-1710.9355"/>
<polygon fill="#000000" stroke="#000000" points="4815.0871,-1714.4356 4825.087,-1710.9355 4815.087,-1707.4356 4815.0871,-1714.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge988" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4359.373,-1695.4609C4473.9512,-1696.0975 4587.5981,-1707.6064 4625.8509,-1746.9355 4642.5959,-1764.1517 4617.128,-1945.6979 4633.8509,-1962.9355 4750.087,-2082.7493 4966.1909,-2052.0956 5084.6862,-2023.179"/>
<polygon fill="#000000" stroke="#000000" points="5085.5868,-2026.5617 5094.4439,-2020.7477 5083.8944,-2019.7693 5085.5868,-2026.5617"/>
</g>
<!-- cats.kernel.Eq[Option[Int]] -->
<g id="node47" class="node">
<title>cats.kernel.Eq[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-15930.9355" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="10784.4287" y="-15934.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Option[Int]]</text>
<text text-anchor="middle" x="10858.4287" y="-15919.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[Option[Int]]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge699" class="edge">
<title>cats.kernel.Eq[Option[Int]]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10941.8604,-15912.1199C11034.0891,-15896.7266 11180.7257,-15889.1781 11265.0151,-15971.9355 11286.4143,-15992.9458 11252.574,-16016.9919 11273.0151,-16038.9355 11345.2268,-16116.4554 11471.909,-16127.1021 11560.24,-16123.5154"/>
<polygon fill="#000000" stroke="#000000" points="11560.4532,-16127.0093 11570.2765,-16123.0403 11560.1222,-16120.0171 11560.4532,-16127.0093"/>
</g>
<!-- shapeless.IsTuple[Option[Int]] -->
<g id="node1612" class="node">
<title>shapeless.IsTuple[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-15858.9355" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="11574.8883" y="-15862.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Option[Int]]</text>
<text text-anchor="middle" x="11658.3883" y="-15847.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[Option[Int]]&#45;&gt;shapeless.IsTuple[Option[Int]] -->
<g id="edge150" class="edge">
<title>cats.kernel.Eq[Option[Int]]&#45;&gt;shapeless.IsTuple[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M10967.1564,-15921.3963C11049.0491,-15914.1901 11164.0876,-15904.0219 11265.0151,-15894.9355 11353.4256,-15886.976 11452.9981,-15877.8621 11529.843,-15870.7959"/>
<polygon fill="#000000" stroke="#000000" points="11530.4157,-15874.2581 11540.053,-15869.8568 11529.7745,-15867.2875 11530.4157,-15874.2581"/>
</g>
<!-- String(&#39;truncateToInt&#39;) =&gt; ?{def should: ?} -->
<g id="node48" class="node">
<title>String(&#39;truncateToInt&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-32894.9355" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="454.5494" y="-32898.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;truncateToInt&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-32883.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;truncateToInt&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1483" class="edge">
<title>String(&#39;truncateToInt&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M732.0133,-32906.6562C880.292,-32913.7727 1086.4128,-32912.8911 1144.0988,-32858.9355 1503.3197,-32522.9448 1724.4393,-28672.9634 1747.5861,-28252.1882"/>
<polygon fill="#000000" stroke="#000000" points="1751.0876,-28252.254 1748.1404,-28242.0774 1744.0981,-28251.8708 1751.0876,-28252.254"/>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc2] -->
<g id="node49" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc2]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-34442.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="1620.104" y="-34446.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc2]</text>
<text text-anchor="middle" x="1749.604" y="-34431.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.IsTuple[(String, io.circe.Json)] -->
<g id="node50" class="node">
<title>shapeless.IsTuple[(String, io.circe.Json)]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-15426.9355" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="12304.4214" y="-15430.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(String, io.circe.Json)]</text>
<text text-anchor="middle" x="12415.9214" y="-15415.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- String(&#39;withNumber&#39;) =&gt; ?{def should: ?} -->
<g id="node51" class="node">
<title>String(&#39;withNumber&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-32822.9355" rx="173.8966" ry="26.7407"/>
<text text-anchor="start" x="457.0494" y="-32826.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;withNumber&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-32811.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;withNumber&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1567" class="edge">
<title>String(&#39;withNumber&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M729.1949,-32834.4959C877.6482,-32841.7377 1085.9946,-32841.1723 1144.0988,-32786.9355 1498.0872,-32456.5081 1723.7604,-28667.8329 1747.5216,-28251.932"/>
<polygon fill="#000000" stroke="#000000" points="1751.0166,-28252.1174 1748.0909,-28241.9346 1744.0279,-28251.7194 1751.0166,-28252.1174"/>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc7]] -->
<g id="node52" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc7]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-34514.9355" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="1552.604" y="-34518.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc7]]</text>
<text text-anchor="middle" x="1749.604" y="-34503.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc1] -->
<g id="node53" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc1]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-34586.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="1620.104" y="-34590.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc1]</text>
<text text-anchor="middle" x="1749.604" y="-34575.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc7] -->
<g id="node55" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc7]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-34514.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="445.5494" y="-34518.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc7]</text>
<text text-anchor="middle" x="572.0494" y="-34503.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc7]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc7]] -->
<g id="edge726" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc7]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc7]]</title>
<path fill="none" stroke="#000000" d="M762.5526,-34514.9355C948.131,-34514.9355 1233.0868,-34514.9355 1449.2048,-34514.9355"/>
<polygon fill="#000000" stroke="#000000" points="1449.4435,-34518.4356 1459.4434,-34514.9355 1449.4434,-34511.4356 1449.4435,-34518.4356"/>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node56" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-1638.9355" rx="405.7586" ry="26.7407"/>
<text text-anchor="start" x="4888.7166" y="-1642.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-1627.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[Map[Int,Int]] -->
<g id="node57" class="node">
<title>io.circe.Encoder[Map[Int,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-22760.9355" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="488.5494" y="-22764.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Map[Int,Int]]</text>
<text text-anchor="middle" x="572.0494" y="-22749.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.KeyEncoder[Int] -->
<g id="node414" class="node">
<title>io.circe.KeyEncoder[Int]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-22814.9355" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="1681.604" y="-22818.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.KeyEncoder[Int]</text>
<text text-anchor="middle" x="1749.604" y="-22803.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- io.circe.Encoder[Map[Int,Int]]&#45;&gt;io.circe.KeyEncoder[Int] -->
<g id="edge935" class="edge">
<title>io.circe.Encoder[Map[Int,Int]]&#45;&gt;io.circe.KeyEncoder[Int]</title>
<path fill="none" stroke="#000000" d="M698.6273,-22766.7401C928.5404,-22777.2834 1411.4502,-22799.4286 1633.4566,-22809.6093"/>
<polygon fill="#000000" stroke="#000000" points="1633.3563,-22813.1083 1643.5062,-22810.0701 1633.677,-22806.1156 1633.3563,-22813.1083"/>
</g>
<!-- io.circe.Encoder[Map[Int,Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge31" class="edge">
<title>io.circe.Encoder[Map[Int,Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M651.1139,-22782.2183C776.4862,-22810.6147 1019.4305,-22842.8391 1144.0988,-22706.9355 1163.0271,-22686.3014 1138.7551,-21723.5525 1152.0988,-21698.9355 1265.6433,-21489.4642 1543.5556,-21371.8182 1676.4698,-21325.8121"/>
<polygon fill="#000000" stroke="#000000" points="1677.8429,-21329.0416 1686.1711,-21322.4925 1675.5765,-21322.4186 1677.8429,-21329.0416"/>
</g>
<!-- shapeless.IsTuple[io.circe.AccumulatingDecoder[Int]] -->
<g id="node58" class="node">
<title>shapeless.IsTuple[io.circe.AccumulatingDecoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19994.3036" cy="-15020.9355" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="19845.8036" y="-15024.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.AccumulatingDecoder[Int]]</text>
<text text-anchor="middle" x="19994.3036" y="-15009.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node59" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-1350.9355" rx="310.3398" ry="26.7407"/>
<text text-anchor="start" x="4956.2166" y="-1354.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-1339.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[Float] -->
<g id="node60" class="node">
<title>shapeless.IsTuple[Float]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-34658.9355" rx="105.218" ry="26.7407"/>
<text text-anchor="start" x="2864.9013" y="-34662.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Float]</text>
<text text-anchor="middle" x="2931.4013" y="-34647.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[io.circe.tests.examples.WrappedOptionalField] -->
<g id="node61" class="node">
<title>org.scalacheck.Shrink[io.circe.tests.examples.WrappedOptionalField]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-34766.9355" rx="281.357" ry="26.7407"/>
<text text-anchor="start" x="381.0494" y="-34770.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[io.circe.tests.examples.WrappedOptionalField]</text>
<text text-anchor="middle" x="572.0494" y="-34755.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- Fractional[io.circe.tests.examples.WrappedOptionalField] -->
<g id="node1545" class="node">
<title>Fractional[io.circe.tests.examples.WrappedOptionalField]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-34802.9355" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="1591.104" y="-34806.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[io.circe.tests.examples.WrappedOptionalField]</text>
<text text-anchor="middle" x="1749.604" y="-34791.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[io.circe.tests.examples.WrappedOptionalField]&#45;&gt;Fractional[io.circe.tests.examples.WrappedOptionalField] -->
<g id="edge159" class="edge">
<title>org.scalacheck.Shrink[io.circe.tests.examples.WrappedOptionalField]&#45;&gt;Fractional[io.circe.tests.examples.WrappedOptionalField]</title>
<path fill="none" stroke="#000000" d="M840.3596,-34775.1383C1042.6701,-34781.3233 1317.5807,-34789.7278 1511.9954,-34795.6714"/>
<polygon fill="#000000" stroke="#000000" points="1511.9601,-34799.1719 1522.0625,-34795.9792 1512.1741,-34792.1751 1511.9601,-34799.1719"/>
</g>
<!-- Integral[io.circe.tests.examples.WrappedOptionalField] -->
<g id="node1950" class="node">
<title>Integral[io.circe.tests.examples.WrappedOptionalField]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-34730.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="1597.604" y="-34734.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[io.circe.tests.examples.WrappedOptionalField]</text>
<text text-anchor="middle" x="1749.604" y="-34719.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[io.circe.tests.examples.WrappedOptionalField]&#45;&gt;Integral[io.circe.tests.examples.WrappedOptionalField] -->
<g id="edge224" class="edge">
<title>org.scalacheck.Shrink[io.circe.tests.examples.WrappedOptionalField]&#45;&gt;Integral[io.circe.tests.examples.WrappedOptionalField]</title>
<path fill="none" stroke="#000000" d="M840.3596,-34758.7328C1045.5054,-34752.4611 1325.3006,-34743.9073 1520.1216,-34737.9512"/>
<polygon fill="#000000" stroke="#000000" points="1520.3174,-34741.447 1530.2058,-34737.643 1520.1035,-34734.4503 1520.3174,-34741.447"/>
</g>
<!-- io.circe.KeyDecoder[String] -->
<g id="node62" class="node">
<title>io.circe.KeyDecoder[String]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-11250.9355" rx="120.8306" ry="26.7407"/>
<text text-anchor="start" x="5090.2166" y="-11254.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.KeyDecoder[String]</text>
<text text-anchor="middle" x="5167.7166" y="-11239.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 1ms</text>
</g>
<!-- Integral[(Symbol, Int)] -->
<g id="node63" class="node">
<title>Integral[(Symbol, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-4670.9355" rx="100.3184" ry="26.7407"/>
<text text-anchor="start" x="5104.7166" y="-4674.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Symbol, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-4659.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;last&#39;) =&gt; ?{def should: ?} -->
<g id="node64" class="node">
<title>String(&#39;last&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-32750.9355" rx="138.6859" ry="26.7407"/>
<text text-anchor="start" x="482.0494" y="-32754.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;last&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-32739.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;last&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1513" class="edge">
<title>String(&#39;last&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M700.7381,-32760.9581C849.5705,-32769.5369 1082.1155,-32772.6727 1144.0988,-32714.9355 1492.6833,-32390.2307 1722.8455,-28666.3853 1747.4193,-28252.289"/>
<polygon fill="#000000" stroke="#000000" points="1750.9277,-28252.2483 1748.0244,-28242.059 1743.94,-28251.8348 1750.9277,-28252.2483"/>
</g>
<!-- String(&#39;first&#39;) =&gt; ?{def should: ?} -->
<g id="node65" class="node">
<title>String(&#39;first&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-32678.9355" rx="140.9288" ry="26.7407"/>
<text text-anchor="start" x="480.5494" y="-32682.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;first&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-32667.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;first&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge350" class="edge">
<title>String(&#39;first&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M702.6887,-32689.0485C851.5744,-32697.5185 1082.3268,-32700.352 1144.0988,-32642.9355 1487.4611,-32323.7834 1722.1529,-28661.0709 1747.3521,-28252.0079"/>
<polygon fill="#000000" stroke="#000000" points="1750.8533,-28252.0942 1747.973,-28241.8984 1743.8665,-28251.6651 1750.8533,-28252.0942"/>
</g>
<!-- String(&#39;transformations&#39;) =&gt; ?{def should: ?} -->
<g id="node66" class="node">
<title>String(&#39;transformations&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-32606.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="448.5494" y="-32610.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;transformations&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-32595.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 3ms</text>
</g>
<!-- String(&#39;transformations&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge387" class="edge">
<title>String(&#39;transformations&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M738.9586,-32618.8766C886.5724,-32625.5441 1087.0969,-32623.8006 1144.0988,-32570.9355 1482.1559,-32257.4125 1721.333,-28657.5419 1747.2641,-28252.0292"/>
<polygon fill="#000000" stroke="#000000" points="1750.7601,-28252.2026 1747.9036,-28242.0001 1743.7743,-28251.7571 1750.7601,-28252.2026"/>
</g>
<!-- cats.kernel.Eq[Vector[String]] -->
<g id="node67" class="node">
<title>cats.kernel.Eq[Vector[String]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-14770.9355" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="11575.3883" y="-14774.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Vector[String]]</text>
<text text-anchor="middle" x="11658.3883" y="-14759.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 12ms</text>
</g>
<!-- cats.kernel.Eq[Vector[String]]&#45;&gt;cats.kernel.Eq[String] -->
<g id="edge377" class="edge">
<title>cats.kernel.Eq[Vector[String]]&#45;&gt;cats.kernel.Eq[String]</title>
<path fill="none" stroke="#000000" d="M11739.6203,-14750.0863C11827.9668,-14732.8343 11966.8281,-14722.5379 12043.7615,-14802.9355 12059.5981,-14819.4853 12035.7284,-14992.576 12051.7615,-15008.9355 12165.244,-15124.7288 12664.8038,-14937.9292 12780.0814,-15051.9355 12798.1382,-15069.7931 12772.5905,-15145.8117 12788.0814,-15165.9355 12844.0166,-15238.5996 12947.441,-15266.4472 13026.1391,-15276.9564"/>
<polygon fill="#000000" stroke="#000000" points="13025.7362,-15280.4332 13036.0955,-15278.2118 13026.612,-15273.4882 13025.7362,-15280.4332"/>
</g>
<!-- cats.kernel.Order[String] -->
<g id="node128" class="node">
<title>cats.kernel.Order[String]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-15087.9355" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="12347.9214" y="-15091.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[String]</text>
<text text-anchor="middle" x="12415.9214" y="-15076.7355" font-family="Times,serif" font-size="14.00" fill="#000000">72 times = 62ms</text>
</g>
<!-- cats.kernel.Eq[Vector[String]]&#45;&gt;cats.kernel.Order[String] -->
<g id="edge372" class="edge">
<title>cats.kernel.Eq[Vector[String]]&#45;&gt;cats.kernel.Order[String]</title>
<path fill="none" stroke="#000000" d="M11746.074,-14751.1839C11834.9103,-14736.917 11969.5108,-14732.1397 12043.7615,-14811.9355 12061.559,-14831.0622 12034.0226,-15027.7545 12051.7615,-15046.9355 12119.5259,-15120.2094 12240.9845,-15119.0767 12324.8852,-15107.2132"/>
<polygon fill="#000000" stroke="#000000" points="12325.5497,-15110.6529 12334.9247,-15105.7175 12324.5181,-15103.7293 12325.5497,-15110.6529"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J] -->
<g id="node68" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-34838.9355" rx="374.119" ry="26.7407"/>
<text text-anchor="start" x="315.5494" y="-34842.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J]</text>
<text text-anchor="middle" x="572.0494" y="-34827.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node69" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-21158.9355" rx="478.0084" ry="26.7407"/>
<text text-anchor="start" x="1419.604" y="-21162.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-21147.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; (?A =&gt; ?ASSERTION) -->
<g id="node70" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; (?A =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-34910.9355" rx="219.4064" ry="26.7407"/>
<text text-anchor="start" x="425.0494" y="-34914.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; (?A =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-34899.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- cats.kernel.Eq[shapeless.HNil] -->
<g id="node205" class="node">
<title>cats.kernel.Eq[shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="19994.3036" cy="-14865.9355" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="19909.8036" y="-14869.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[shapeless.HNil]</text>
<text text-anchor="middle" x="19994.3036" y="-14854.7355" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 81ms</text>
</g>
<!-- cats.kernel.Eq[Char :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[shapeless.HNil] -->
<g id="edge180" class="edge">
<title>cats.kernel.Eq[Char :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M13259.1581,-14896.8147C13325.5415,-14889.1258 13407.9904,-14880.6045 13481.975,-14875.9355 13904.3338,-14849.2818 14010.7636,-14855.9355 14433.9626,-14855.9355 14433.9626,-14855.9355 14433.9626,-14855.9355 18607.2235,-14855.9355 19062.6803,-14855.9355 19602.2382,-14861.3935 19853.044,-14864.245"/>
<polygon fill="#000000" stroke="#000000" points="19853.2668,-14867.7477 19863.3061,-14864.362 19853.3467,-14860.7481 19853.2668,-14867.7477"/>
</g>
<!-- shapeless.IsTuple[Char :: shapeless.HNil] -->
<g id="node1576" class="node">
<title>shapeless.IsTuple[Char :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="13803.7086" cy="-14983.9355" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="13689.2086" y="-14987.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Char :: shapeless.HNil]</text>
<text text-anchor="middle" x="13803.7086" y="-14972.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[Char :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[Char :: shapeless.HNil] -->
<g id="edge1150" class="edge">
<title>cats.kernel.Eq[Char :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[Char :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M13266.7503,-14927.2607C13377.7855,-14938.9803 13534.7897,-14955.5517 13650.3567,-14967.7496"/>
<polygon fill="#000000" stroke="#000000" points="13650.0417,-14971.2357 13660.3538,-14968.8048 13650.7765,-14964.2744 13650.0417,-14971.2357"/>
</g>
<!-- cats.kernel.Eq[Char] -->
<g id="node1633" class="node">
<title>cats.kernel.Eq[Char]</title>
<ellipse fill="none" stroke="#000000" cx="13803.7086" cy="-14911.9355" rx="91.4341" ry="26.7407"/>
<text text-anchor="start" x="13747.2086" y="-14915.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Char]</text>
<text text-anchor="middle" x="13803.7086" y="-14900.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- cats.kernel.Eq[Char :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Char] -->
<g id="edge866" class="edge">
<title>cats.kernel.Eq[Char :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Char]</title>
<path fill="none" stroke="#000000" d="M13290.8705,-14912.6979C13418.4166,-14912.5083 13593.2115,-14912.2485 13702.2456,-14912.0864"/>
<polygon fill="#000000" stroke="#000000" points="13702.2668,-14915.5865 13712.2615,-14912.0715 13702.2563,-14908.5865 13702.2668,-14915.5865"/>
</g>
<!-- io.circe.Encoder[io.circe.JsonObject] -->
<g id="node72" class="node">
<title>io.circe.Encoder[io.circe.JsonObject]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-34982.9355" rx="154.7129" ry="26.7407"/>
<text text-anchor="start" x="470.5494" y="-34986.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[io.circe.JsonObject]</text>
<text text-anchor="middle" x="572.0494" y="-34971.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(String, io.circe.Json),List[(String, io.circe.Json)]] -->
<g id="node73" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(String, io.circe.Json),List[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-5102.9355" rx="366.9768" ry="26.7407"/>
<text text-anchor="start" x="4916.2166" y="-5106.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(String, io.circe.Json),List[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="5167.7166" y="-5091.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION) -->
<g id="node74" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-35054.9355" rx="318.3962" ry="26.7407"/>
<text text-anchor="start" x="355.0494" y="-35058.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-35043.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam -->
<g id="node75" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-35126.9355" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="349.5494" y="-35130.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-35115.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.Decoder[scala.util.Either[io.circe.DecodingFailure,Unit]]] -->
<g id="node76" class="node">
<title>cats.kernel.Eq[io.circe.Decoder[scala.util.Either[io.circe.DecodingFailure,Unit]]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-13356.9355" rx="324.624" ry="26.7407"/>
<text text-anchor="start" x="11436.8883" y="-13360.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.Decoder[scala.util.Either[io.circe.DecodingFailure,Unit]]]</text>
<text text-anchor="middle" x="11658.3883" y="-13345.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 22ms</text>
</g>
<!-- cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Unit]] -->
<g id="node519" class="node">
<title>cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-13572.9355" rx="254.6169" ry="26.7407"/>
<text text-anchor="start" x="12243.9214" y="-13576.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Unit]]</text>
<text text-anchor="middle" x="12415.9214" y="-13561.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.Decoder[scala.util.Either[io.circe.DecodingFailure,Unit]]]&#45;&gt;cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Unit]] -->
<g id="edge451" class="edge">
<title>cats.kernel.Eq[io.circe.Decoder[scala.util.Either[io.circe.DecodingFailure,Unit]]]&#45;&gt;cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Unit]]</title>
<path fill="none" stroke="#000000" d="M11936.0734,-13370.8704C11972.663,-13376.1944 12009.3741,-13383.3512 12043.7615,-13392.9355 12165.4233,-13426.8449 12295.6762,-13499.1885 12365.2222,-13541.1045"/>
<polygon fill="#000000" stroke="#000000" points="12363.4416,-13544.1179 12373.8071,-13546.3104 12367.0712,-13538.1324 12363.4416,-13544.1179"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int),L] -->
<g id="node77" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-15930.9355" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="11550.8883" y="-15934.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int),L]</text>
<text text-anchor="middle" x="11658.3883" y="-15919.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- String(&#39;c&#39;) =&gt; ?{def :=: ?} -->
<g id="node78" class="node">
<title>String(&#39;c&#39;) =&gt; ?{def :=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-35198.9355" rx="112.36" ry="26.7407"/>
<text text-anchor="start" x="500.5494" y="-35202.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;c&#39;) =&gt; ?{def :=: ?}</text>
<text text-anchor="middle" x="572.0494" y="-35187.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;asNumber&#39;) =&gt; ?{def should: ?} -->
<g id="node79" class="node">
<title>String(&#39;asNumber&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-32534.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="463.5494" y="-32538.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;asNumber&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-32523.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;asNumber&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge246" class="edge">
<title>String(&#39;asNumber&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M722.1734,-32546.0464C870.9145,-32553.553 1084.8452,-32553.7627 1144.0988,-32498.9355 1476.8608,-32191.0318 1720.5089,-28653.817 1747.175,-28252.0227"/>
<polygon fill="#000000" stroke="#000000" points="1750.6821,-28252.0307 1747.8501,-28241.8214 1743.6973,-28251.5684 1750.6821,-28252.0307"/>
</g>
<!-- org.scalacheck.util.Buildable[Int,Some[Int]] -->
<g id="node80" class="node">
<title>org.scalacheck.util.Buildable[Int,Some[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-7058.9355" rx="182.3671" ry="26.7407"/>
<text text-anchor="start" x="5046.7166" y="-7062.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Int,Some[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-7047.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Int,Some[Int]] -->
<g id="node1826" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Int,Some[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-7058.9355" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="6068.2346" y="-7062.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Int,Some[Int]]</text>
<text text-anchor="middle" x="6222.2346" y="-7047.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Int,Some[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,Some[Int]] -->
<g id="edge937" class="edge">
<title>org.scalacheck.util.Buildable[Int,Some[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,Some[Int]]</title>
<path fill="none" stroke="#000000" d="M5350.1957,-7058.9355C5525.2359,-7058.9355 5790.5536,-7058.9355 5982.5607,-7058.9355"/>
<polygon fill="#000000" stroke="#000000" points="5982.7959,-7062.4356 5992.7959,-7058.9355 5982.7958,-7055.4356 5982.7959,-7062.4356"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Gen[=?Nothing] -->
<g id="node81" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Gen[=?Nothing]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-35270.9355" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="387.0494" y="-35274.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Gen[=?Nothing]</text>
<text text-anchor="middle" x="572.0494" y="-35259.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.laws.discipline.CartesianTests.Isomorphisms[io.circe.Decoder] -->
<g id="node82" class="node">
<title>cats.laws.discipline.CartesianTests.Isomorphisms[io.circe.Decoder]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-35342.9355" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="387.0494" y="-35346.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.laws.discipline.CartesianTests.Isomorphisms[io.circe.Decoder]</text>
<text text-anchor="middle" x="572.0494" y="-35331.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.functor.Invariant[io.circe.Decoder] -->
<g id="node928" class="node">
<title>cats.functor.Invariant[io.circe.Decoder]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-35342.9355" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="1641.604" y="-35346.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.functor.Invariant[io.circe.Decoder]</text>
<text text-anchor="middle" x="1749.604" y="-35331.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.laws.discipline.CartesianTests.Isomorphisms[io.circe.Decoder]&#45;&gt;cats.functor.Invariant[io.circe.Decoder] -->
<g id="edge518" class="edge">
<title>cats.laws.discipline.CartesianTests.Isomorphisms[io.circe.Decoder]&#45;&gt;cats.functor.Invariant[io.circe.Decoder]</title>
<path fill="none" stroke="#000000" d="M845.1639,-35342.9355C1070.2696,-35342.9355 1382.7765,-35342.9355 1575.3037,-35342.9355"/>
<polygon fill="#000000" stroke="#000000" points="1575.5218,-35346.4356 1585.5217,-35342.9355 1575.5217,-35339.4356 1575.5218,-35346.4356"/>
</g>
<!-- cats.Eq[Vector[(String, io.circe.Json)]] -->
<g id="node83" class="node">
<title>cats.Eq[Vector[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-15354.9355" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="10751.9287" y="-15358.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Vector[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="10858.4287" y="-15343.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 96ms</text>
</g>
<!-- cats.kernel.Eq[(String, io.circe.Json)] -->
<g id="node595" class="node">
<title>cats.kernel.Eq[(String, io.circe.Json)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-15426.9355" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="11555.8883" y="-15430.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(String, io.circe.Json)]</text>
<text text-anchor="middle" x="11658.3883" y="-15415.7355" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 251ms</text>
</g>
<!-- cats.Eq[Vector[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Eq[(String, io.circe.Json)] -->
<g id="edge551" class="edge">
<title>cats.Eq[Vector[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Eq[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M11001.9151,-15367.5362C11079.7653,-15374.399 11177.674,-15383.0723 11265.0151,-15390.9355 11346.0693,-15398.2328 11436.5054,-15406.5003 11510.2087,-15413.2706"/>
<polygon fill="#000000" stroke="#000000" points="11510.2164,-15416.786 11520.4948,-15414.2158 11510.857,-15409.8154 11510.2164,-15416.786"/>
</g>
<!-- cats.kernel.PartialOrder[(String, io.circe.Json)] -->
<g id="node1389" class="node">
<title>cats.kernel.PartialOrder[(String, io.circe.Json)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-15498.9355" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="11530.3883" y="-15502.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.PartialOrder[(String, io.circe.Json)]</text>
<text text-anchor="middle" x="11658.3883" y="-15487.7355" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 117ms</text>
</g>
<!-- cats.Eq[Vector[(String, io.circe.Json)]]&#45;&gt;cats.kernel.PartialOrder[(String, io.circe.Json)] -->
<g id="edge308" class="edge">
<title>cats.Eq[Vector[(String, io.circe.Json)]]&#45;&gt;cats.kernel.PartialOrder[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M10952.4428,-15332.9555C11044.9609,-15317.4366 11183.8241,-15311.5389 11265.0151,-15390.9355 11288.0347,-15413.4464 11250.0499,-15440.3691 11273.0151,-15462.9355 11342.747,-15531.457 11457.6891,-15533.7219 11543.9314,-15522.9085"/>
<polygon fill="#000000" stroke="#000000" points="11544.5841,-15526.3526 11554.0359,-15521.5658 11543.662,-15519.4136 11544.5841,-15526.3526"/>
</g>
<!-- shapeless.IsTuple[Vector[(String, io.circe.Json)]] -->
<g id="node1394" class="node">
<title>shapeless.IsTuple[Vector[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-15354.9355" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="11523.8883" y="-15358.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Vector[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="11658.3883" y="-15343.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[Vector[(String, io.circe.Json)]]&#45;&gt;shapeless.IsTuple[Vector[(String, io.circe.Json)]] -->
<g id="edge756" class="edge">
<title>cats.Eq[Vector[(String, io.circe.Json)]]&#45;&gt;shapeless.IsTuple[Vector[(String, io.circe.Json)]]</title>
<path fill="none" stroke="#000000" d="M11020.7943,-15354.9355C11143.5283,-15354.9355 11313.0859,-15354.9355 11446.496,-15354.9355"/>
<polygon fill="#000000" stroke="#000000" points="11446.8478,-15358.4356 11456.8478,-15354.9355 11446.8477,-15351.4356 11446.8478,-15358.4356"/>
</g>
<!-- cats.kernel.Order[(String, io.circe.Json)] -->
<g id="node1812" class="node">
<title>cats.kernel.Order[(String, io.circe.Json)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-15642.9355" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="11547.8883" y="-15646.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[(String, io.circe.Json)]</text>
<text text-anchor="middle" x="11658.3883" y="-15631.7355" font-family="Times,serif" font-size="14.00" fill="#000000">20 times = 56ms</text>
</g>
<!-- cats.Eq[Vector[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Order[(String, io.circe.Json)] -->
<g id="edge249" class="edge">
<title>cats.Eq[Vector[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Order[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M10948.9204,-15332.5807C11042.3785,-15315.4952 11185.4596,-15307.1912 11265.0151,-15390.9355 11281.5562,-15408.3476 11256.5161,-15589.4835 11273.0151,-15606.9355 11343.1349,-15681.1056 11465.7177,-15679.9331 11553.8201,-15666.7139"/>
<polygon fill="#000000" stroke="#000000" points="11554.5136,-15670.1479 11563.8477,-15665.1355 11553.4251,-15663.2331 11554.5136,-15670.1479"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K] -->
<g id="node84" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-35414.9355" rx="423.6139" ry="26.7407"/>
<text text-anchor="start" x="280.5494" y="-35418.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K]</text>
<text text-anchor="middle" x="572.0494" y="-35403.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; EncoderSuite.this.PropertyCheckConfigParam -->
<g id="node85" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; EncoderSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-35486.9355" rx="293.3986" ry="26.7407"/>
<text text-anchor="start" x="372.5494" y="-35490.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; EncoderSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-35475.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- d.type =&gt; ?{def isWhole: ?} -->
<g id="node86" class="node">
<title>d.type =&gt; ?{def isWhole: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-35558.9355" rx="123.0732" ry="26.7407"/>
<text text-anchor="start" x="493.0494" y="-35562.7355" font-family="Times,serif" font-size="14.00" fill="#000000">d.type =&gt; ?{def isWhole: ?}</text>
<text text-anchor="middle" x="572.0494" y="-35547.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder.Result[scala.collection.immutable.Set[Int]] =&gt; ?{def ===: ?} -->
<g id="node87" class="node">
<title>io.circe.Decoder.Result[scala.collection.immutable.Set[Int]] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-35630.9355" rx="317.4819" ry="26.7407"/>
<text text-anchor="start" x="355.5494" y="-35634.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[scala.collection.immutable.Set[Int]] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-35619.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int)] -->
<g id="node88" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-414.9355" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="5046.2166" y="-418.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-403.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[List[Int]] -->
<g id="node89" class="node">
<title>scala.reflect.ClassTag[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-7562.9355" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="5080.7166" y="-7566.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[List[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-7551.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S] -->
<g id="node90" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-35702.9355" rx="531.9887" ry="26.7407"/>
<text text-anchor="start" x="204.0494" y="-35706.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S]</text>
<text text-anchor="middle" x="572.0494" y="-35691.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;3&#39;) =&gt; ?{def asJson: ?} -->
<g id="node91" class="node">
<title>String(&#39;3&#39;) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-35774.9355" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="488.5494" y="-35778.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;3&#39;) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-35763.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Fractional[Symbol] -->
<g id="node92" class="node">
<title>Fractional[Symbol]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-4634.9355" rx="86.9483" ry="26.7407"/>
<text text-anchor="start" x="6168.7346" y="-4638.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Symbol]</text>
<text text-anchor="middle" x="6222.2346" y="-4623.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalatest.enablers.CheckerAsserting[Any] -->
<g id="node93" class="node">
<title>org.scalatest.enablers.CheckerAsserting[Any]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-35846.9355" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="447.0494" y="-35850.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalatest.enablers.CheckerAsserting[Any]</text>
<text text-anchor="middle" x="572.0494" y="-35835.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[Byte] -->
<g id="node94" class="node">
<title>shapeless.IsTuple[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-35882.9355" rx="103.8894" ry="26.7407"/>
<text text-anchor="start" x="4005.2721" y="-35886.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Byte]</text>
<text text-anchor="middle" x="4070.7721" y="-35871.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- Integral[List[io.circe.CursorOp]] -->
<g id="node95" class="node">
<title>Integral[List[io.circe.CursorOp]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-36278.9355" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="1660.104" y="-36282.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[List[io.circe.CursorOp]]</text>
<text text-anchor="middle" x="1749.604" y="-36267.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Integral[cats.data.NonEmptyVector[Int]] -->
<g id="node96" class="node">
<title>Integral[cats.data.NonEmptyVector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-36494.9355" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="1638.104" y="-36498.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[cats.data.NonEmptyVector[Int]]</text>
<text text-anchor="middle" x="1749.604" y="-36483.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.Validated[String,Int]] -->
<g id="node97" class="node">
<title>org.scalacheck.Shrink[cats.data.Validated[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-36638.9355" rx="219.4064" ry="26.7407"/>
<text text-anchor="start" x="425.0494" y="-36642.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[cats.data.Validated[String,Int]]</text>
<text text-anchor="middle" x="572.0494" y="-36627.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- Integral[cats.data.Validated[String,Int]] -->
<g id="node380" class="node">
<title>Integral[cats.data.Validated[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-36710.9355" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="1641.604" y="-36714.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[cats.data.Validated[String,Int]]</text>
<text text-anchor="middle" x="1749.604" y="-36699.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.Validated[String,Int]]&#45;&gt;Integral[cats.data.Validated[String,Int]] -->
<g id="edge1246" class="edge">
<title>org.scalacheck.Shrink[cats.data.Validated[String,Int]]&#45;&gt;Integral[cats.data.Validated[String,Int]]</title>
<path fill="none" stroke="#000000" d="M767.3797,-36651.1466C879.8782,-36658.1574 1023.9471,-36667.0982 1152.0988,-36674.9355 1298.6437,-36683.8978 1465.4171,-36693.9322 1585.4604,-36701.1258"/>
<polygon fill="#000000" stroke="#000000" points="1585.2808,-36704.6213 1595.4723,-36701.7257 1585.6996,-36697.6338 1585.2808,-36704.6213"/>
</g>
<!-- cats.data.Validated[String,Int] =&gt; Traversable[(String, Int)] -->
<g id="node790" class="node">
<title>cats.data.Validated[String,Int] =&gt; Traversable[(String, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-36638.9355" rx="241.6612" ry="26.7407"/>
<text text-anchor="start" x="1586.604" y="-36642.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.data.Validated[String,Int] =&gt; Traversable[(String, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-36627.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.Validated[String,Int]]&#45;&gt;cats.data.Validated[String,Int] =&gt; Traversable[(String, Int)] -->
<g id="edge1482" class="edge">
<title>org.scalacheck.Shrink[cats.data.Validated[String,Int]]&#45;&gt;cats.data.Validated[String,Int] =&gt; Traversable[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M791.4675,-36638.9355C991.7168,-36638.9355 1287.5874,-36638.9355 1497.485,-36638.9355"/>
<polygon fill="#000000" stroke="#000000" points="1497.7276,-36642.4356 1507.7276,-36638.9355 1497.7276,-36635.4356 1497.7276,-36642.4356"/>
</g>
<!-- Fractional[cats.data.Validated[String,Int]] -->
<g id="node1623" class="node">
<title>Fractional[cats.data.Validated[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-36566.9355" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="1635.104" y="-36570.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[cats.data.Validated[String,Int]]</text>
<text text-anchor="middle" x="1749.604" y="-36555.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.Validated[String,Int]]&#45;&gt;Fractional[cats.data.Validated[String,Int]] -->
<g id="edge1571" class="edge">
<title>org.scalacheck.Shrink[cats.data.Validated[String,Int]]&#45;&gt;Fractional[cats.data.Validated[String,Int]]</title>
<path fill="none" stroke="#000000" d="M767.3797,-36626.7245C879.8782,-36619.7137 1023.9471,-36610.7729 1152.0988,-36602.9355 1295.4729,-36594.1672 1458.2095,-36584.3726 1577.6032,-36577.2162"/>
<polygon fill="#000000" stroke="#000000" points="1578.158,-36580.6893 1587.9307,-36576.5972 1577.7392,-36573.7018 1578.158,-36580.6893"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(String, io.circe.Json)],(String, io.circe.Json),List[(String, io.circe.Json)]] -->
<g id="node98" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(String, io.circe.Json)],(String, io.circe.Json),List[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-36710.9355" rx="465.9667" ry="26.7407"/>
<text text-anchor="start" x="250.5494" y="-36714.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(String, io.circe.Json)],(String, io.circe.Json),List[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="572.0494" y="-36699.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A] -->
<g id="node99" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-36782.9355" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="389.0494" y="-36786.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A]</text>
<text text-anchor="middle" x="572.0494" y="-36771.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node100" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-20870.9355" rx="414.2292" ry="26.7407"/>
<text text-anchor="start" x="1464.604" y="-20874.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-20859.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Long] -->
<g id="node101" class="node">
<title>scala.reflect.ClassTag[Long]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-9874.9355" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="6143.7346" y="-9878.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Long]</text>
<text text-anchor="middle" x="6222.2346" y="-9863.7355" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 10ms</text>
</g>
<!-- scala.io.Codec -->
<g id="node102" class="node">
<title>scala.io.Codec</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-36854.9355" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="528.5494" y="-36858.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.io.Codec</text>
<text text-anchor="middle" x="572.0494" y="-36843.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 11ms</text>
</g>
<!-- Integral[List[io.circe.Json]] -->
<g id="node103" class="node">
<title>Integral[List[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-14994.9355" rx="117.2596" ry="26.7407"/>
<text text-anchor="start" x="5092.7166" y="-14998.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[List[io.circe.Json]]</text>
<text text-anchor="middle" x="5167.7166" y="-14983.7355" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 17ms</text>
</g>
<!-- cats.functor.Contravariant[io.circe.Encoder] -->
<g id="node104" class="node">
<title>cats.functor.Contravariant[io.circe.Encoder]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-36926.9355" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="451.5494" y="-36930.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.functor.Contravariant[io.circe.Encoder]</text>
<text text-anchor="middle" x="572.0494" y="-36915.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node105" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-36998.9355" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="382.5494" y="-37002.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-36987.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1021" class="node">
<title>Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-37034.9355" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="1593.104" y="-37038.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-37023.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge607" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M838.519,-37007.082C1041.7443,-37013.295 1319.0203,-37021.7718 1514.1423,-37027.7371"/>
<polygon fill="#000000" stroke="#000000" points="1514.1424,-37031.2386 1524.2447,-37028.0459 1514.3564,-37024.2419 1514.1424,-37031.2386"/>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1111" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-36962.9355" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="1599.104" y="-36966.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-36951.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge508" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M838.519,-36990.7891C1044.5785,-36984.4895 1326.7684,-36975.8624 1522.2574,-36969.886"/>
<polygon fill="#000000" stroke="#000000" points="1522.4865,-36973.3807 1532.3748,-36969.5766 1522.2725,-36966.3839 1522.4865,-36973.3807"/>
</g>
<!-- cats.data.NonEmptyVector[Int] =&gt; Traversable[Int] -->
<g id="node106" class="node">
<title>cats.data.NonEmptyVector[Int] =&gt; Traversable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-36422.9355" rx="212.2642" ry="26.7407"/>
<text text-anchor="start" x="1607.604" y="-36426.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.data.NonEmptyVector[Int] =&gt; Traversable[Int]</text>
<text text-anchor="middle" x="1749.604" y="-36411.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;asString&#39;) =&gt; ?{def should: ?} -->
<g id="node107" class="node">
<title>String(&#39;asString&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-32462.9355" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="469.5494" y="-32466.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;asString&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-32451.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;asString&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge674" class="edge">
<title>String(&#39;asString&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M715.32,-32473.6672C864.2381,-32481.4826 1083.8663,-32482.5362 1144.0988,-32426.9355 1471.5688,-32124.6473 1719.6707,-28650.0415 1747.0832,-28252.0127"/>
<polygon fill="#000000" stroke="#000000" points="1750.5842,-28252.1159 1747.7777,-28241.8996 1743.6007,-28251.6363 1750.5842,-28252.1159"/>
</g>
<!-- Fractional[None.type] -->
<g id="node108" class="node">
<title>Fractional[None.type]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-37178.9355" rx="96.7474" ry="26.7407"/>
<text text-anchor="start" x="1689.104" y="-37182.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[None.type]</text>
<text text-anchor="middle" x="1749.604" y="-37167.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder.Result[Int] =&gt; ?{def leftMap: ?} -->
<g id="node109" class="node">
<title>io.circe.Decoder.Result[Int] =&gt; ?{def leftMap: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-37214.9355" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="435.0494" y="-37218.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[Int] =&gt; ?{def leftMap: ?}</text>
<text text-anchor="middle" x="572.0494" y="-37203.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node110" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-12042.9355" rx="389.7317" ry="26.7407"/>
<text text-anchor="start" x="4900.2166" y="-12046.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-12031.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[BigInt] -->
<g id="node111" class="node">
<title>cats.Eq[BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-37286.9355" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="528.5494" y="-37290.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[BigInt]</text>
<text text-anchor="middle" x="572.0494" y="-37275.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- shapeless.IsTuple[BigInt] -->
<g id="node764" class="node">
<title>shapeless.IsTuple[BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-37286.9355" rx="110.1176" ry="26.7407"/>
<text text-anchor="start" x="1679.604" y="-37290.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[BigInt]</text>
<text text-anchor="middle" x="1749.604" y="-37275.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- cats.Eq[BigInt]&#45;&gt;shapeless.IsTuple[BigInt] -->
<g id="edge540" class="edge">
<title>cats.Eq[BigInt]&#45;&gt;shapeless.IsTuple[BigInt]</title>
<path fill="none" stroke="#000000" d="M645.2658,-37286.9355C842.2937,-37286.9355 1385.2639,-37286.9355 1628.7295,-37286.9355"/>
<polygon fill="#000000" stroke="#000000" points="1629.0333,-37290.4356 1639.0333,-37286.9355 1629.0332,-37283.4356 1629.0333,-37290.4356"/>
</g>
<!-- String(&#39;instanceTry&#39;) =&gt; ?{def should: ?} -->
<g id="node112" class="node">
<title>String(&#39;instanceTry&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-32390.9355" rx="170.3255" ry="26.7407"/>
<text text-anchor="start" x="459.5494" y="-32394.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;instanceTry&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-32379.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;instanceTry&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1379" class="edge">
<title>String(&#39;instanceTry&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M726.9543,-32402.2277C875.414,-32409.4456 1085.3538,-32409.03 1144.0988,-32354.9355 1466.2835,-32058.2559 1718.8233,-28646.1428 1746.9893,-28251.9867"/>
<polygon fill="#000000" stroke="#000000" points="1750.4837,-28252.1883 1747.7035,-28241.9648 1743.5014,-28251.6907 1750.4837,-28252.1883"/>
</g>
<!-- Integral[cats.data.NonEmptyList[Either[Int,String]]] -->
<g id="node113" class="node">
<title>Integral[cats.data.NonEmptyList[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-37502.9355" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="1606.604" y="-37506.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[cats.data.NonEmptyList[Either[Int,String]]]</text>
<text text-anchor="middle" x="1749.604" y="-37491.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node114" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-18842.9355" rx="290.7418" ry="26.7407"/>
<text text-anchor="start" x="11460.8883" y="-18846.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="11658.3883" y="-18831.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 17ms</text>
</g>
<!-- Unit =&gt; Int -->
<g id="node115" class="node">
<title>Unit =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-37502.9355" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="532.0494" y="-37506.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Int</text>
<text text-anchor="middle" x="572.0494" y="-37491.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; ((?A, ?B, ?C) =&gt; ?ASSERTION) -->
<g id="node116" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; ((?A, ?B, ?C) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-37574.9355" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="408.0494" y="-37578.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; ((?A, ?B, ?C) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-37563.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.math.BigDecimal] -->
<g id="node117" class="node">
<title>org.scalacheck.Arbitrary[scala.math.BigDecimal]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-37646.9355" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="436.0494" y="-37650.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.math.BigDecimal]</text>
<text text-anchor="middle" x="572.0494" y="-37635.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.math.BigDecimal] -->
<g id="node1725" class="node">
<title>scala.reflect.ClassTag[scala.math.BigDecimal]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-37646.9355" rx="193.0803" ry="26.7407"/>
<text text-anchor="start" x="1621.104" y="-37650.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.math.BigDecimal]</text>
<text text-anchor="middle" x="1749.604" y="-37635.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.math.BigDecimal]&#45;&gt;scala.reflect.ClassTag[scala.math.BigDecimal] -->
<g id="edge1386" class="edge">
<title>org.scalacheck.Arbitrary[scala.math.BigDecimal]&#45;&gt;scala.reflect.ClassTag[scala.math.BigDecimal]</title>
<path fill="none" stroke="#000000" d="M775.8194,-37646.9355C991.5965,-37646.9355 1330.2271,-37646.9355 1545.9574,-37646.9355"/>
<polygon fill="#000000" stroke="#000000" points="1546.1364,-37650.4356 1556.1363,-37646.9355 1546.1363,-37643.4356 1546.1364,-37650.4356"/>
</g>
<!-- printed.type =&gt; ?{def ===: ?} -->
<g id="node118" class="node">
<title>printed.type =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-15608.9355" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="12331.4214" y="-15612.7355" font-family="Times,serif" font-size="14.00" fill="#000000">printed.type =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="12415.9214" y="-15597.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- cats.Eq[String] -->
<g id="node1067" class="node">
<title>cats.Eq[String]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-15608.9355" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="13084.0282" y="-15612.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[String]</text>
<text text-anchor="middle" x="13131.0282" y="-15597.7355" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 32ms</text>
</g>
<!-- printed.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[String] -->
<g id="edge1042" class="edge">
<title>printed.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[String]</title>
<path fill="none" stroke="#000000" d="M12547.0831,-15608.9355C12691.2122,-15608.9355 12918.7148,-15608.9355 13042.9273,-15608.9355"/>
<polygon fill="#000000" stroke="#000000" points="13043.154,-15612.4356 13053.154,-15608.9355 13043.1539,-15605.4356 13043.154,-15612.4356"/>
</g>
<!-- cats.kernel.Eq[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]] -->
<g id="node119" class="node">
<title>cats.kernel.Eq[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]</title>
<ellipse fill="none" stroke="#000000" cx="18607.2235" cy="-14724.9355" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="18395.2235" y="-14728.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]</text>
<text text-anchor="middle" x="18607.2235" y="-14713.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 26ms</text>
</g>
<!-- cats.kernel.Order[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="node326" class="node">
<title>cats.kernel.Order[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-14508.9355" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="19147.6796" y="-14512.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[cats.data.NonEmptyList[io.circe.DecodingFailure]]</text>
<text text-anchor="middle" x="19337.1796" y="-14497.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 8ms</text>
</g>
<!-- cats.kernel.Eq[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.Order[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="edge1156" class="edge">
<title>cats.kernel.Eq[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.Order[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<path fill="none" stroke="#000000" d="M18811.5201,-14704.5415C18867.9375,-14688.9124 18923.9091,-14662.2061 18961.484,-14616.9355 18971.7657,-14604.5481 18958.0266,-14556.2443 18969.484,-14544.9355 19029.0095,-14486.1825 19123.2923,-14477.942 19201.481,-14483.9994"/>
<polygon fill="#000000" stroke="#000000" points="19201.6469,-14487.5266 19211.9106,-14484.8985 19202.2481,-14480.5525 19201.6469,-14487.5266"/>
</g>
<!-- cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="node882" class="node">
<title>cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-14724.9355" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="19155.6796" y="-14728.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]</text>
<text text-anchor="middle" x="19337.1796" y="-14713.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 45ms</text>
</g>
<!-- cats.kernel.Eq[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="edge839" class="edge">
<title>cats.kernel.Eq[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<path fill="none" stroke="#000000" d="M18918.3784,-14724.9355C18965.0715,-14724.9355 19012.9663,-14724.9355 19058.9148,-14724.9355"/>
<polygon fill="#000000" stroke="#000000" points="19058.9966,-14728.4356 19068.9965,-14724.9355 19058.9965,-14721.4356 19058.9966,-14728.4356"/>
</g>
<!-- cats.kernel.Eq[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1249" class="edge">
<title>cats.kernel.Eq[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M18866.3466,-14739.8601C18903.115,-14753.1658 18936.7613,-14773.4807 18961.484,-14803.9355 18972.7945,-14817.8684 18957.0898,-15436.9573 18969.484,-15449.9355 19026.0135,-15509.1284 19637.6919,-15446.1832 19704.8751,-15492.9355 19923.2226,-15644.8821 19978.5233,-15999.6815 19990.9964,-16115.5813"/>
<polygon fill="#000000" stroke="#000000" points="19987.5349,-16116.1361 19992.043,-16125.724 19994.498,-16115.4176 19987.5349,-16116.1361"/>
</g>
<!-- cats.kernel.PartialOrder[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="node1521" class="node">
<title>cats.kernel.PartialOrder[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-14580.9355" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="19129.6796" y="-14584.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.PartialOrder[cats.data.NonEmptyList[io.circe.DecodingFailure]]</text>
<text text-anchor="middle" x="19337.1796" y="-14569.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 17ms</text>
</g>
<!-- cats.kernel.Eq[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.PartialOrder[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="edge1307" class="edge">
<title>cats.kernel.Eq[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.PartialOrder[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<path fill="none" stroke="#000000" d="M18680.0773,-14698.701C18752.5026,-14673.7007 18867.2474,-14636.9867 18969.484,-14616.9355 19007.4903,-14609.4816 19048.0241,-14603.5411 19087.7787,-14598.8148"/>
<polygon fill="#000000" stroke="#000000" points="19088.3393,-14602.2732 19097.867,-14597.6392 19087.529,-14595.3203 19088.3393,-14602.2732"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q] -->
<g id="node120" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-37718.9355" rx="484.2363" ry="26.7407"/>
<text text-anchor="start" x="237.5494" y="-37722.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q]</text>
<text text-anchor="middle" x="572.0494" y="-37707.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node121" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-1638.9355" rx="416.4718" ry="26.7407"/>
<text text-anchor="start" x="3784.2721" y="-1642.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-1627.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 54ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1566" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4487.4351,-1638.9355C4573.8433,-1638.9355 4664.891,-1638.9355 4751.2907,-1638.9355"/>
<polygon fill="#000000" stroke="#000000" points="4751.531,-1642.4356 4761.531,-1638.9355 4751.5309,-1635.4356 4751.531,-1642.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge190" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4428.4018,-1625.1483C4517.0587,-1629.7148 4595.4867,-1643.4267 4625.8509,-1674.9355 4648.0645,-1697.9865 4611.6669,-1939.8561 4633.8509,-1962.9355 4749.6882,-2083.4484 4966.4455,-2052.3315 5085.0194,-2023.2038"/>
<polygon fill="#000000" stroke="#000000" points="5085.9342,-2026.5829 5094.7824,-2020.7554 5084.2314,-2019.7931 5085.9342,-2026.5829"/>
</g>
<!-- result.type =&gt; ?{def ===: ?} -->
<g id="node122" class="node">
<title>result.type =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-16992.9355" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="10778.4287" y="-16996.7355" font-family="Times,serif" font-size="14.00" fill="#000000">result.type =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10858.4287" y="-16981.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 30ms</text>
</g>
<!-- result.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonObject] -->
<g id="edge1487" class="edge">
<title>result.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonObject]</title>
<path fill="none" stroke="#000000" d="M10958.4147,-16976.847C11053.1059,-16967.9649 11191.431,-16972.722 11265.0151,-17058.9355 11287.683,-17085.494 11250.0268,-19546.6539 11273.0151,-19572.9355 11341.6229,-19651.3725 11467.532,-19654.5093 11556.7406,-19644.6234"/>
<polygon fill="#000000" stroke="#000000" points="11557.365,-19648.074 11566.8858,-19643.4259 11556.5445,-19641.1223 11557.365,-19648.074"/>
</g>
<!-- cats.Eq[List[String]] -->
<g id="node174" class="node">
<title>cats.Eq[List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-15282.9355" rx="90.5193" ry="26.7407"/>
<text text-anchor="start" x="11602.3883" y="-15286.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[List[String]]</text>
<text text-anchor="middle" x="11658.3883" y="-15271.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 26ms</text>
</g>
<!-- result.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[String]] -->
<g id="edge1557" class="edge">
<title>result.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[String]]</title>
<path fill="none" stroke="#000000" d="M10938.4666,-17013.6613C11031.8189,-17032.4579 11183.697,-17045.3374 11265.0151,-16956.9355 11280.4171,-16940.1918 11257.6536,-15335.7165 11273.0151,-15318.9355 11349.252,-15235.6544 11491.4281,-15246.1872 11580.1435,-15263.2619"/>
<polygon fill="#000000" stroke="#000000" points="11579.6639,-15266.7352 11590.1556,-15265.2602 11581.0341,-15259.8705 11579.6639,-15266.7352"/>
</g>
<!-- cats.Eq[Boolean] -->
<g id="node214" class="node">
<title>cats.Eq[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-17166.9355" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="11611.3883" y="-17170.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Boolean]</text>
<text text-anchor="middle" x="11658.3883" y="-17155.7355" font-family="Times,serif" font-size="14.00" fill="#000000">24 times = 71ms</text>
</g>
<!-- result.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Boolean] -->
<g id="edge1348" class="edge">
<title>result.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Boolean]</title>
<path fill="none" stroke="#000000" d="M10962.6842,-16978.141C11055.6921,-16971.3605 11188.6314,-16978.6125 11265.0151,-17058.9355 11287.2024,-17082.2672 11250.0499,-17108.3691 11273.0151,-17130.9355 11354.5035,-17211.0093 11497.7315,-17200.6023 11584.75,-17184.5788"/>
<polygon fill="#000000" stroke="#000000" points="11585.6498,-17187.9703 11594.8146,-17182.6544 11584.3351,-17181.0948 11585.6498,-17187.9703"/>
</g>
<!-- cats.Eq[Option[Vector[io.circe.Json]]] -->
<g id="node253" class="node">
<title>cats.Eq[Option[Vector[io.circe.Json]]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-16950.9355" rx="159.6125" ry="26.7407"/>
<text text-anchor="start" x="11553.3883" y="-16954.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[Vector[io.circe.Json]]]</text>
<text text-anchor="middle" x="11658.3883" y="-16939.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 34ms</text>
</g>
<!-- result.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Vector[io.circe.Json]]] -->
<g id="edge318" class="edge">
<title>result.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Vector[io.circe.Json]]]</title>
<path fill="none" stroke="#000000" d="M10979.4908,-16986.5795C11117.0818,-16979.3556 11342.3562,-16967.5281 11495.3343,-16959.4963"/>
<polygon fill="#000000" stroke="#000000" points="11495.9601,-16962.9684 11505.7628,-16958.9488 11495.593,-16955.978 11495.9601,-16962.9684"/>
</g>
<!-- cats.Eq[List[io.circe.Json]] -->
<g id="node426" class="node">
<title>cats.Eq[List[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-16560.9355" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="12341.9214" y="-16564.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[List[io.circe.Json]]</text>
<text text-anchor="middle" x="12415.9214" y="-16549.7355" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 111ms</text>
</g>
<!-- result.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[io.circe.Json]] -->
<g id="edge1397" class="edge">
<title>result.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M10940.3756,-17013.2901C11033.0116,-17030.8731 11181.7287,-17041.7561 11265.0151,-16956.9355 11282.8079,-16938.815 11254.8719,-16860.7053 11273.0151,-16842.9355 11334.2714,-16782.9402 11983.4612,-16865.8918 12043.7615,-16804.9355 12060.0268,-16788.4932 12035.9061,-16613.7736 12051.7615,-16596.9355 12119.8749,-16524.6007 12240.6741,-16527.2103 12324.3661,-16540.1919"/>
<polygon fill="#000000" stroke="#000000" points="12323.95,-16543.6702 12334.3824,-16541.8221 12325.0745,-16536.7611 12323.95,-16543.6702"/>
</g>
<!-- cats.Eq[Int] -->
<g id="node1221" class="node">
<title>cats.Eq[Int]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-19464.9355" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="11611.3883" y="-19468.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Int]</text>
<text text-anchor="middle" x="11658.3883" y="-19453.7355" font-family="Times,serif" font-size="14.00" fill="#000000">28 times = 79ms</text>
</g>
<!-- result.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Int] -->
<g id="edge1270" class="edge">
<title>result.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M10958.4111,-16976.8501C11053.0995,-16967.9704 11191.4227,-16972.7291 11265.0151,-17058.9355 11286.387,-17083.9707 11250.8072,-19404.6389 11273.0151,-19428.9355 11351.0444,-19514.304 11498.3505,-19501.1538 11586.508,-19483.3702"/>
<polygon fill="#000000" stroke="#000000" points="11587.3561,-19486.7687 11596.4297,-19481.2988 11585.9255,-19479.9164 11587.3561,-19486.7687"/>
</g>
<!-- cats.Eq[Option[io.circe.Decoder.Result[List[Boolean]]]] -->
<g id="node1699" class="node">
<title>cats.Eq[Option[io.circe.Decoder.Result[List[Boolean]]]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-14406.9355" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="11504.3883" y="-14410.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[io.circe.Decoder.Result[List[Boolean]]]]</text>
<text text-anchor="middle" x="11658.3883" y="-14395.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 103ms</text>
</g>
<!-- result.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[io.circe.Decoder.Result[List[Boolean]]]] -->
<g id="edge9" class="edge">
<title>result.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[io.circe.Decoder.Result[List[Boolean]]]]</title>
<path fill="none" stroke="#000000" d="M10938.0796,-17013.6016C11031.4215,-17032.4663 11183.6524,-17045.5371 11265.0151,-16956.9355 11288.632,-16931.2174 11249.4603,-14468.7107 11273.0151,-14442.9355 11339.7968,-14369.8585 11457.3415,-14368.9676 11545.1069,-14381.381"/>
<polygon fill="#000000" stroke="#000000" points="11544.7103,-14384.8605 11555.1169,-14382.8722 11545.7417,-14377.9369 11544.7103,-14384.8605"/>
</g>
<!-- cats.kernel.Order[Char] -->
<g id="node123" class="node">
<title>cats.kernel.Order[Char]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-14588.9355" rx="103.4757" ry="26.7407"/>
<text text-anchor="start" x="11593.3883" y="-14592.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[Char]</text>
<text text-anchor="middle" x="11658.3883" y="-14577.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc22] -->
<g id="node124" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc22]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-37790.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="420.0494" y="-37794.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc22]</text>
<text text-anchor="middle" x="572.0494" y="-37779.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc22] -->
<g id="node411" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc22]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-37790.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="1605.104" y="-37794.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc22]</text>
<text text-anchor="middle" x="1749.604" y="-37779.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc22]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc22] -->
<g id="edge1113" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc22]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc22]</title>
<path fill="none" stroke="#000000" d="M798.3967,-37790.9355C1007.0924,-37790.9355 1315.2165,-37790.9355 1523.754,-37790.9355"/>
<polygon fill="#000000" stroke="#000000" points="1523.9188,-37794.4356 1533.9188,-37790.9355 1523.9187,-37787.4356 1523.9188,-37794.4356"/>
</g>
<!-- String(&#39;emapTry&#39;) =&gt; ?{def should: ?} -->
<g id="node125" class="node">
<title>String(&#39;emapTry&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-32318.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="466.5494" y="-32322.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;emapTry&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-32307.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;emapTry&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1388" class="edge">
<title>String(&#39;emapTry&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M719.0094,-32329.803C867.7938,-32337.3885 1084.2319,-32337.9232 1144.0988,-32282.9355 1460.9269,-31991.9293 1717.8402,-28643.7712 1746.872,-28252.2333"/>
<polygon fill="#000000" stroke="#000000" points="1750.3804,-28252.2476 1747.6275,-28242.0167 1743.3995,-28251.7313 1750.3804,-28252.2476"/>
</g>
<!-- org.scalacheck.Shrink[(Int, String, Char)] -->
<g id="node126" class="node">
<title>org.scalacheck.Shrink[(Int, String, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-15138.9355" rx="172.5681" ry="26.7407"/>
<text text-anchor="start" x="3956.7721" y="-15142.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, String, Char)]</text>
<text text-anchor="middle" x="4070.7721" y="-15127.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- Integral[(Int, String, Char)] -->
<g id="node141" class="node">
<title>Integral[(Int, String, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-15210.9355" rx="117.2596" ry="26.7407"/>
<text text-anchor="start" x="5092.7166" y="-15214.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, String, Char)]</text>
<text text-anchor="middle" x="5167.7166" y="-15199.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, String, Char)]&#45;&gt;Integral[(Int, String, Char)] -->
<g id="edge768" class="edge">
<title>org.scalacheck.Shrink[(Int, String, Char)]&#45;&gt;Integral[(Int, String, Char)]</title>
<path fill="none" stroke="#000000" d="M4229.9841,-15149.3857C4450.6738,-15163.8711 4844.8694,-15189.7449 5044.5442,-15202.8509"/>
<polygon fill="#000000" stroke="#000000" points="5044.5733,-15206.3603 5054.7811,-15203.5228 5045.0318,-15199.3753 5044.5733,-15206.3603"/>
</g>
<!-- org.scalacheck.Shrink[Char] -->
<g id="node529" class="node">
<title>org.scalacheck.Shrink[Char]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-15138.9355" rx="121.7449" ry="26.7407"/>
<text text-anchor="start" x="5089.7166" y="-15142.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Char]</text>
<text text-anchor="middle" x="5167.7166" y="-15127.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, String, Char)]&#45;&gt;org.scalacheck.Shrink[Char] -->
<g id="edge1515" class="edge">
<title>org.scalacheck.Shrink[(Int, String, Char)]&#45;&gt;org.scalacheck.Shrink[Char]</title>
<path fill="none" stroke="#000000" d="M4243.3764,-15138.9355C4462.9487,-15138.9355 4837.3754,-15138.9355 5035.5881,-15138.9355"/>
<polygon fill="#000000" stroke="#000000" points="5035.7656,-15142.4356 5045.7655,-15138.9355 5035.7655,-15135.4356 5035.7656,-15142.4356"/>
</g>
<!-- org.scalacheck.Shrink[String] -->
<g id="node1406" class="node">
<title>org.scalacheck.Shrink[String]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-8278.9355" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="5086.2166" y="-8282.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[String]</text>
<text text-anchor="middle" x="5167.7166" y="-8267.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 10ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, String, Char)]&#45;&gt;org.scalacheck.Shrink[String] -->
<g id="edge1220" class="edge">
<title>org.scalacheck.Shrink[(Int, String, Char)]&#45;&gt;org.scalacheck.Shrink[String]</title>
<path fill="none" stroke="#000000" d="M4240.6201,-15134.172C4369.3489,-15120.5338 4538.5065,-15078.9287 4625.8509,-14958.9355 4639.3478,-14940.3936 4618.7939,-8371.2346 4633.8509,-8353.9355 4739.4169,-8232.651 4943.7198,-8240.373 5066.6989,-8258.5748"/>
<polygon fill="#000000" stroke="#000000" points="5066.4594,-8262.0788 5076.8738,-8260.1321 5067.5185,-8255.1594 5066.4594,-8262.0788"/>
</g>
<!-- org.scalacheck.Shrink[Int] -->
<g id="node1784" class="node">
<title>org.scalacheck.Shrink[Int]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-6554.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="5095.2166" y="-6558.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Int]</text>
<text text-anchor="middle" x="5167.7166" y="-6543.7355" font-family="Times,serif" font-size="14.00" fill="#000000">96 times = 389ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, String, Char)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge1176" class="edge">
<title>org.scalacheck.Shrink[(Int, String, Char)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4240.6285,-15134.1782C4369.362,-15120.5433 4538.5218,-15078.9398 4625.8509,-14958.9355 4642.9474,-14935.4422 4613.9986,-6612.1513 4633.8509,-6590.9355 4688.3807,-6532.6607 4910.2162,-6536.3951 5050.2034,-6545.1513"/>
<polygon fill="#000000" stroke="#000000" points="5050.3512,-6548.6679 5060.5552,-6545.8172 5050.8006,-6541.6824 5050.3512,-6548.6679"/>
</g>
<!-- Fractional[(Int, String, Char)] -->
<g id="node1802" class="node">
<title>Fractional[(Int, String, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-15282.9355" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="5086.2166" y="-15286.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(Int, String, Char)]</text>
<text text-anchor="middle" x="5167.7166" y="-15271.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, String, Char)]&#45;&gt;Fractional[(Int, String, Char)] -->
<g id="edge1317" class="edge">
<title>org.scalacheck.Shrink[(Int, String, Char)]&#45;&gt;Fractional[(Int, String, Char)]</title>
<path fill="none" stroke="#000000" d="M4167.5925,-15161.2449C4279.3181,-15186.115 4468.8667,-15225.6317 4633.8509,-15246.9355 4768.8682,-15264.3699 4924.2551,-15273.6409 5032.4433,-15278.3815"/>
<polygon fill="#000000" stroke="#000000" points="5032.2941,-15281.8782 5042.4357,-15278.8123 5032.5958,-15274.8847 5032.2941,-15281.8782"/>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc7] -->
<g id="node127" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc7]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-37862.9355" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="1608.604" y="-37866.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc7]</text>
<text text-anchor="middle" x="1749.604" y="-37851.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,(Long, Int),scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="node129" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-11754.9355" rx="436.984" ry="26.7407"/>
<text text-anchor="start" x="4866.7166" y="-11758.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-11743.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- Ordering[Long] -->
<g id="node1540" class="node">
<title>Ordering[Long]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-11466.9355" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="6178.7346" y="-11470.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Ordering[Long]</text>
<text text-anchor="middle" x="6222.2346" y="-11455.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 5ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;Ordering[Long] -->
<g id="edge1277" class="edge">
<title>scala.collection.generic.CanBuildFrom[Nothing,(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;Ordering[Long]</title>
<path fill="none" stroke="#000000" d="M5570.1736,-11744.4455C5614.9138,-11738.3668 5659.4904,-11730.0901 5701.5822,-11718.9355 5889.2788,-11669.1948 6090.4658,-11550.8291 6177.6847,-11495.8815"/>
<polygon fill="#000000" stroke="#000000" points="6179.6862,-11498.7568 6186.2625,-11490.4499 6175.9414,-11492.8427 6179.6862,-11498.7568"/>
</g>
<!-- io.circe.Decoder.Result[Long] =&gt; ?{def ===: ?} -->
<g id="node130" class="node">
<title>io.circe.Decoder.Result[Long] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-37934.9355" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="437.5494" y="-37938.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[Long] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-37923.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- x$15.type =&gt; ?{def asJson: ?} -->
<g id="node131" class="node">
<title>x$15.type =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-38006.9355" rx="130.2154" ry="26.7407"/>
<text text-anchor="start" x="488.0494" y="-38010.7355" font-family="Times,serif" font-size="14.00" fill="#000000">x$15.type =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-37995.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Integral[Option[Int]] -->
<g id="node132" class="node">
<title>Integral[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-7418.9355" rx="91.4341" ry="26.7407"/>
<text text-anchor="start" x="5111.2166" y="-7422.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Option[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-7407.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc12] -->
<g id="node133" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc12]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-38078.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-38082.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc12]</text>
<text text-anchor="middle" x="572.0494" y="-38067.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc12]] -->
<g id="node1850" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc12]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-38078.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="1549.604" y="-38082.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc12]]</text>
<text text-anchor="middle" x="1749.604" y="-38067.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc12]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc12]] -->
<g id="edge977" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc12]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc12]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-38078.9355C951.3519,-38078.9355 1231.2937,-38078.9355 1445.2652,-38078.9355"/>
<polygon fill="#000000" stroke="#000000" points="1445.4039,-38082.4356 1455.4038,-38078.9355 1445.4038,-38075.4356 1445.4039,-38082.4356"/>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc16] -->
<g id="node134" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc16]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-38150.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="448.5494" y="-38154.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc16]</text>
<text text-anchor="middle" x="572.0494" y="-38139.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc16] -->
<g id="node664" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc16]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-38150.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="1617.104" y="-38154.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc16]</text>
<text text-anchor="middle" x="1749.604" y="-38139.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc16]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc16] -->
<g id="edge1065" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc16]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc16]</title>
<path fill="none" stroke="#000000" d="M758.3114,-38150.9355C971.0895,-38150.9355 1318.412,-38150.9355 1540.352,-38150.9355"/>
<polygon fill="#000000" stroke="#000000" points="1540.4954,-38154.4356 1550.4954,-38150.9355 1540.4954,-38147.4356 1540.4954,-38154.4356"/>
</g>
<!-- org.scalacheck.Shrink[(String, io.circe.Json, Boolean)] -->
<g id="node135" class="node">
<title>org.scalacheck.Shrink[(String, io.circe.Json, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-7516.9355" rx="223.3915" ry="26.7407"/>
<text text-anchor="start" x="3920.7721" y="-7520.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(String, io.circe.Json, Boolean)]</text>
<text text-anchor="middle" x="4070.7721" y="-7505.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- org.scalacheck.Shrink[io.circe.Json] -->
<g id="node722" class="node">
<title>org.scalacheck.Shrink[io.circe.Json]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-8389.9355" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="5068.7166" y="-8393.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[io.circe.Json]</text>
<text text-anchor="middle" x="5167.7166" y="-8378.7355" font-family="Times,serif" font-size="14.00" fill="#000000">163 times = 56ms</text>
</g>
<!-- org.scalacheck.Shrink[(String, io.circe.Json, Boolean)]&#45;&gt;org.scalacheck.Shrink[io.circe.Json] -->
<g id="edge681" class="edge">
<title>org.scalacheck.Shrink[(String, io.circe.Json, Boolean)]&#45;&gt;org.scalacheck.Shrink[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M4261.5019,-7502.8862C4402.1578,-7497.2036 4577.1657,-7501.534 4625.8509,-7552.9355 4640.4073,-7568.304 4619.8795,-8299.0335 4633.8509,-8314.9355 4737.1999,-8432.5656 4933.4673,-8428.4824 5057.0712,-8411.5301"/>
<polygon fill="#000000" stroke="#000000" points="5057.9123,-8414.9458 5067.3197,-8410.0723 5056.9264,-8408.0155 5057.9123,-8414.9458"/>
</g>
<!-- org.scalacheck.Shrink[Boolean] -->
<g id="node1146" class="node">
<title>org.scalacheck.Shrink[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-6986.9355" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="5080.2166" y="-6990.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Boolean]</text>
<text text-anchor="middle" x="5167.7166" y="-6975.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 11ms</text>
</g>
<!-- org.scalacheck.Shrink[(String, io.circe.Json, Boolean)]&#45;&gt;org.scalacheck.Shrink[Boolean] -->
<g id="edge1553" class="edge">
<title>org.scalacheck.Shrink[(String, io.circe.Json, Boolean)]&#45;&gt;org.scalacheck.Shrink[Boolean]</title>
<path fill="none" stroke="#000000" d="M4261.7637,-7530.9063C4402.3033,-7536.5148 4577.0286,-7532.1235 4625.8509,-7480.9355 4643.4151,-7462.5204 4616.3104,-7041.3732 4633.8509,-7022.9355 4686.5174,-6967.5751 4891.9545,-6968.4989 5032.0698,-6976.2303"/>
<polygon fill="#000000" stroke="#000000" points="5032.2798,-6979.7478 5042.4628,-6976.8227 5032.6782,-6972.7592 5032.2798,-6979.7478"/>
</g>
<!-- Fractional[(String, io.circe.Json, Boolean)] -->
<g id="node1232" class="node">
<title>Fractional[(String, io.circe.Json, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-7850.9355" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="5050.2166" y="-7854.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(String, io.circe.Json, Boolean)]</text>
<text text-anchor="middle" x="5167.7166" y="-7839.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(String, io.circe.Json, Boolean)]&#45;&gt;Fractional[(String, io.circe.Json, Boolean)] -->
<g id="edge390" class="edge">
<title>org.scalacheck.Shrink[(String, io.circe.Json, Boolean)]&#45;&gt;Fractional[(String, io.circe.Json, Boolean)]</title>
<path fill="none" stroke="#000000" d="M4262.6599,-7503.0983C4402.9117,-7497.6529 4576.8212,-7502.1977 4625.8509,-7552.9355 4646.0896,-7573.8793 4613.6391,-7793.9658 4633.8509,-7814.9355 4682.6718,-7865.5872 4860.5969,-7868.9052 4997.7707,-7863.1684"/>
<polygon fill="#000000" stroke="#000000" points="4998.1524,-7866.6552 5007.9898,-7862.7213 4997.8463,-7859.6619 4998.1524,-7866.6552"/>
</g>
<!-- org.scalacheck.Shrink[(String, io.circe.Json, Boolean)]&#45;&gt;org.scalacheck.Shrink[String] -->
<g id="edge1229" class="edge">
<title>org.scalacheck.Shrink[(String, io.circe.Json, Boolean)]&#45;&gt;org.scalacheck.Shrink[String]</title>
<path fill="none" stroke="#000000" d="M4261.4865,-7502.9008C4402.1338,-7497.2264 4577.1376,-7501.5606 4625.8509,-7552.9355 4639.0396,-7566.8448 4620.6801,-8229.0093 4633.8509,-8242.9355 4748.7096,-8364.3814 4965.8641,-8332.8859 5084.7603,-8303.4509"/>
<polygon fill="#000000" stroke="#000000" points="5085.7127,-8306.8203 5094.5503,-8300.9768 5083.9975,-8300.0337 5085.7127,-8306.8203"/>
</g>
<!-- Integral[(String, io.circe.Json, Boolean)] -->
<g id="node1842" class="node">
<title>Integral[(String, io.circe.Json, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-7922.9355" rx="168.0831" ry="26.7407"/>
<text text-anchor="start" x="5056.7166" y="-7926.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(String, io.circe.Json, Boolean)]</text>
<text text-anchor="middle" x="5167.7166" y="-7911.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(String, io.circe.Json, Boolean)]&#45;&gt;Integral[(String, io.circe.Json, Boolean)] -->
<g id="edge58" class="edge">
<title>org.scalacheck.Shrink[(String, io.circe.Json, Boolean)]&#45;&gt;Integral[(String, io.circe.Json, Boolean)]</title>
<path fill="none" stroke="#000000" d="M4262.0325,-7503.0376C4402.4597,-7497.4994 4576.9048,-7501.9496 4625.8509,-7552.9355 4638.7049,-7566.3252 4621.0142,-7873.5294 4633.8509,-7886.9355 4683.406,-7938.6885 4867.0959,-7941.1416 5005.2679,-7934.918"/>
<polygon fill="#000000" stroke="#000000" points="5005.7281,-7938.4003 5015.5529,-7934.4351 5005.3997,-7931.408 5005.7281,-7938.4003"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Int]] -->
<g id="node136" class="node">
<title>org.scalacheck.Arbitrary[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-7300.9355" rx="144.9138" ry="26.7407"/>
<text text-anchor="start" x="3976.2721" y="-7304.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[List[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-7289.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 32ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[Int]]&#45;&gt;scala.reflect.ClassTag[List[Int]] -->
<g id="edge526" class="edge">
<title>org.scalacheck.Arbitrary[List[Int]]&#45;&gt;scala.reflect.ClassTag[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4203.649,-7290.1326C4349.1293,-7281.5369 4569.3141,-7279.1015 4625.8509,-7336.9355 4640.6215,-7352.0451 4619.0997,-7511.8071 4633.8509,-7526.9355 4687.1948,-7581.6436 4892.4386,-7580.9059 5032.3293,-7573.3909"/>
<polygon fill="#000000" stroke="#000000" points="5032.9149,-7576.8638 5042.7054,-7572.8147 5032.5267,-7569.8746 5032.9149,-7576.8638"/>
</g>
<!-- List[Int] =&gt; Traversable[Int] -->
<g id="node626" class="node">
<title>List[Int] =&gt; Traversable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-7634.9355" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="5089.2166" y="-7638.7355" font-family="Times,serif" font-size="14.00" fill="#000000">List[Int] =&gt; Traversable[Int]</text>
<text text-anchor="middle" x="5167.7166" y="-7623.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[Int]]&#45;&gt;List[Int] =&gt; Traversable[Int] -->
<g id="edge847" class="edge">
<title>org.scalacheck.Arbitrary[List[Int]]&#45;&gt;List[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M4203.4433,-7290.0354C4349.0322,-7281.3156 4569.6073,-7278.7324 4625.8509,-7336.9355 4646.0896,-7357.8793 4613.6391,-7577.9658 4633.8509,-7598.9355 4688.2143,-7655.3375 4902.6592,-7653.0485 5042.6651,-7644.9205"/>
<polygon fill="#000000" stroke="#000000" points="5043.2595,-7648.3913 5053.0326,-7644.3002 5042.8413,-7641.4038 5043.2595,-7648.3913"/>
</g>
<!-- org.scalacheck.util.Buildable[Int,List[Int]] -->
<g id="node947" class="node">
<title>org.scalacheck.util.Buildable[Int,List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-7706.9355" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="5051.7166" y="-7710.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Int,List[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-7695.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 9ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,List[Int]] -->
<g id="edge25" class="edge">
<title>org.scalacheck.Arbitrary[List[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,List[Int]]</title>
<path fill="none" stroke="#000000" d="M4203.1861,-7289.989C4348.8354,-7281.1921 4569.7572,-7278.5042 4625.8509,-7336.9355 4638.7049,-7350.3252 4621.0142,-7657.5294 4633.8509,-7670.9355 4682.74,-7721.993 4862.183,-7725.0667 4999.6731,-7719.1641"/>
<polygon fill="#000000" stroke="#000000" points="5000.0806,-7722.6494 5009.9137,-7718.7047 4999.7669,-7715.6565 5000.0806,-7722.6494"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge550" class="edge">
<title>org.scalacheck.Arbitrary[List[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4202.7666,-7312.0622C4348.6249,-7321.0965 4570.3257,-7324.0731 4625.8509,-7264.9355 4636.5509,-7253.5395 4629.1442,-2777.8421 4633.8509,-2762.9355 4736.2818,-2438.528 5030.5333,-2131.6818 5132.458,-2032.3472"/>
<polygon fill="#000000" stroke="#000000" points="5135.0006,-2034.7569 5139.7426,-2025.2825 5130.1273,-2029.7318 5135.0006,-2034.7569"/>
</g>
<!-- cats.Order[String] -->
<g id="node137" class="node">
<title>cats.Order[String]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-19176.9355" rx="81.135" ry="26.7407"/>
<text text-anchor="start" x="11608.8883" y="-19180.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Order[String]</text>
<text text-anchor="middle" x="11658.3883" y="-19165.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- field._1.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node138" class="node">
<title>field._1.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-38222.9355" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="492.0494" y="-38226.7355" font-family="Times,serif" font-size="14.00" fill="#000000">field._1.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="572.0494" y="-38211.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.ArrayEncoder[Int]] -->
<g id="node139" class="node">
<title>org.scalacheck.Arbitrary[io.circe.ArrayEncoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-3086.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="2786.9013" y="-3090.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.ArrayEncoder[Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-3075.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Cogen[Int] -->
<g id="node757" class="node">
<title>org.scalacheck.Cogen[Int]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-3086.9355" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="3998.7721" y="-3090.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Int]</text>
<text text-anchor="middle" x="4070.7721" y="-3075.7355" font-family="Times,serif" font-size="14.00" fill="#000000">31 times = 48ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.ArrayEncoder[Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge516" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.ArrayEncoder[Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M3147.383,-3086.9355C3384.1573,-3086.9355 3755.8201,-3086.9355 3947.4198,-3086.9355"/>
<polygon fill="#000000" stroke="#000000" points="3947.5297,-3090.4356 3957.5297,-3086.9355 3947.5297,-3083.4356 3947.5297,-3090.4356"/>
</g>
<!-- Integral[scala.collection.immutable.Map[Long,Int]] -->
<g id="node140" class="node">
<title>Integral[scala.collection.immutable.Map[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-8968.9355" rx="212.2642" ry="26.7407"/>
<text text-anchor="start" x="3928.7721" y="-8972.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[scala.collection.immutable.Map[Long,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-8957.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Fractional[Double] -->
<g id="node142" class="node">
<title>Fractional[Double]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-38294.9355" rx="84.7059" ry="26.7407"/>
<text text-anchor="start" x="1697.604" y="-38298.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Double]</text>
<text text-anchor="middle" x="1749.604" y="-38283.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 8ms</text>
</g>
<!-- String(&#39;contains&#39;) =&gt; ?{def should: ?} -->
<g id="node143" class="node">
<title>String(&#39;contains&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-32246.9355" rx="156.9554" ry="26.7407"/>
<text text-anchor="start" x="469.0494" y="-32250.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;contains&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-32235.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;contains&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1522" class="edge">
<title>String(&#39;contains&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M716.2571,-32257.6325C865.0865,-32265.3233 1083.7929,-32266.1808 1144.0988,-32210.9355 1455.6565,-31925.5225 1716.9724,-28639.5956 1746.7735,-28252.1715"/>
<polygon fill="#000000" stroke="#000000" points="1750.2744,-28252.2936 1747.5497,-28242.0551 1743.2949,-28251.758 1750.2744,-28252.2936"/>
</g>
<!-- cats.Eq[Short] -->
<g id="node144" class="node">
<title>cats.Eq[Short]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-33722.9355" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="2891.4013" y="-33726.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Short]</text>
<text text-anchor="middle" x="2931.4013" y="-33711.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- shapeless.IsTuple[Short] -->
<g id="node567" class="node">
<title>shapeless.IsTuple[Short]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-33686.9355" rx="106.5467" ry="26.7407"/>
<text text-anchor="start" x="4003.2721" y="-33690.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Short]</text>
<text text-anchor="middle" x="4070.7721" y="-33675.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- cats.Eq[Short]&#45;&gt;shapeless.IsTuple[Short] -->
<g id="edge139" class="edge">
<title>cats.Eq[Short]&#45;&gt;shapeless.IsTuple[Short]</title>
<path fill="none" stroke="#000000" d="M2999.262,-33720.7914C3187.5874,-33714.841 3718.3689,-33698.0702 3954.7288,-33690.6021"/>
<polygon fill="#000000" stroke="#000000" points="3954.8452,-33694.1003 3964.7296,-33690.2861 3954.6241,-33687.1038 3954.8452,-33694.1003"/>
</g>
<!-- Seq[Int] =&gt; Traversable[Int] -->
<g id="node145" class="node">
<title>Seq[Int] =&gt; Traversable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-4814.9355" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="5089.2166" y="-4818.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Seq[Int] =&gt; Traversable[Int]</text>
<text text-anchor="middle" x="5167.7166" y="-4803.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.IsTuple[scala.collection.immutable.Map[String,Int]] -->
<g id="node146" class="node">
<title>shapeless.IsTuple[scala.collection.immutable.Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19994.3036" cy="-15308.9355" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="19822.8036" y="-15312.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[scala.collection.immutable.Map[String,Int]]</text>
<text text-anchor="middle" x="19994.3036" y="-15297.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(String, Either[Int,String])] -->
<g id="node147" class="node">
<title>org.scalacheck.Shrink[(String, Either[Int,String])]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-8570.9355" rx="204.2078" ry="26.7407"/>
<text text-anchor="start" x="1613.104" y="-8574.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(String, Either[Int,String])]</text>
<text text-anchor="middle" x="1749.604" y="-8559.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 17ms</text>
</g>
<!-- Integral[(String, Either[Int,String])] -->
<g id="node893" class="node">
<title>Integral[(String, Either[Int,String])]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-10272.9355" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="2833.9013" y="-10276.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(String, Either[Int,String])]</text>
<text text-anchor="middle" x="2931.4013" y="-10261.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[(String, Either[Int,String])]&#45;&gt;Integral[(String, Either[Int,String])] -->
<g id="edge1049" class="edge">
<title>org.scalacheck.Shrink[(String, Either[Int,String])]&#45;&gt;Integral[(String, Either[Int,String])]</title>
<path fill="none" stroke="#000000" d="M1921.9242,-8556.4214C2077.6614,-8547.564 2290.8619,-8547.4902 2347.1092,-8606.9355 2362.6691,-8623.3801 2339.5675,-10220.4738 2355.1092,-10236.9355 2411.9125,-10297.1014 2635.0977,-10294.6412 2786.461,-10285.3049"/>
<polygon fill="#000000" stroke="#000000" points="2787.0194,-10288.7767 2796.778,-10284.6512 2786.5767,-10281.7907 2787.0194,-10288.7767"/>
</g>
<!-- org.scalacheck.Shrink[Either[Int,String]] -->
<g id="node1316" class="node">
<title>org.scalacheck.Shrink[Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-8498.9355" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="2819.9013" y="-8502.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Either[Int,String]]</text>
<text text-anchor="middle" x="2931.4013" y="-8487.7355" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 62ms</text>
</g>
<!-- org.scalacheck.Shrink[(String, Either[Int,String])]&#45;&gt;org.scalacheck.Shrink[Either[Int,String]] -->
<g id="edge1359" class="edge">
<title>org.scalacheck.Shrink[(String, Either[Int,String])]&#45;&gt;org.scalacheck.Shrink[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M1935.6489,-8559.7914C2053.5571,-8552.7125 2209.279,-8543.3338 2347.1092,-8534.9355 2487.5727,-8526.3769 2647.0225,-8516.5449 2763.8279,-8509.3208"/>
<polygon fill="#000000" stroke="#000000" points="2764.166,-8512.8066 2773.9308,-8508.6959 2763.7338,-8505.82 2764.166,-8512.8066"/>
</g>
<!-- org.scalacheck.Shrink[(String, Either[Int,String])]&#45;&gt;org.scalacheck.Shrink[String] -->
<g id="edge1283" class="edge">
<title>org.scalacheck.Shrink[(String, Either[Int,String])]&#45;&gt;org.scalacheck.Shrink[String]</title>
<path fill="none" stroke="#000000" d="M1926.8581,-8584.406C2081.0104,-8591.9284 2288.599,-8590.5643 2347.1092,-8534.9355 2358.7762,-8523.8431 2343.2041,-8473.7719 2355.1092,-8462.9355 2448.4147,-8378.0065 4532.4798,-8509.7925 4625.8509,-8424.9355 4637.601,-8414.2569 4622.7784,-8365.3153 4633.8509,-8353.9355 4744.1565,-8240.569 4941.4844,-8244.1958 5062.8673,-8259.7543"/>
<polygon fill="#000000" stroke="#000000" points="5062.5463,-8263.2423 5072.9207,-8261.0924 5063.47,-8256.3035 5062.5463,-8263.2423"/>
</g>
<!-- (=&gt; String) =&gt; Int -->
<g id="node148" class="node">
<title>(=&gt; String) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-38366.9355" rx="83.3772" ry="26.7407"/>
<text text-anchor="start" x="521.0494" y="-38370.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; String) =&gt; Int</text>
<text text-anchor="middle" x="572.0494" y="-38355.7355" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 15ms</text>
</g>
<!-- scala.reflect.ClassTag[((String, io.circe.Json), Boolean)] -->
<g id="node149" class="node">
<title>scala.reflect.ClassTag[((String, io.circe.Json), Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-7732.9355" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="3916.7721" y="-7736.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((String, io.circe.Json), Boolean)]</text>
<text text-anchor="middle" x="4070.7721" y="-7721.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Map[String,Int]] -->
<g id="node150" class="node">
<title>scala.reflect.ClassTag[Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-5246.9355" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="3963.2721" y="-5250.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Map[String,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-5235.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- Fractional[Option[Int]] -->
<g id="node151" class="node">
<title>Fractional[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-7346.9355" rx="100.3184" ry="26.7407"/>
<text text-anchor="start" x="5104.7166" y="-7350.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Option[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-7335.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;parseFile and decodeFile(Accumulating)&#39;) =&gt; ?{def should: ?} -->
<g id="node152" class="node">
<title>String(&#39;parseFile and decodeFile(Accumulating)&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-32174.9355" rx="282.2713" ry="26.7407"/>
<text text-anchor="start" x="380.5494" y="-32178.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;parseFile and decodeFile(Accumulating)&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-32163.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- String(&#39;parseFile and decodeFile(Accumulating)&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1036" class="edge">
<title>String(&#39;parseFile and decodeFile(Accumulating)&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M812.8362,-32188.9997C946.7432,-32191.3267 1095.8859,-32182.9823 1144.0988,-32138.9355 1450.4718,-31859.0366 1716.2322,-28633.6384 1746.6966,-28251.7977"/>
<polygon fill="#000000" stroke="#000000" points="1750.1859,-28252.0698 1747.4903,-28241.8236 1743.208,-28251.5144 1750.1859,-28252.0698"/>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc18] -->
<g id="node153" class="node">
<title>Fractional[ProductCodecSuite.this.Cc18]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-38438.9355" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="1637.604" y="-38442.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc18]</text>
<text text-anchor="middle" x="1749.604" y="-38427.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;withObject&#39;) =&gt; ?{def should: ?} -->
<g id="node154" class="node">
<title>String(&#39;withObject&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-32102.9355" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="461.5494" y="-32106.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;withObject&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-32091.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;withObject&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge593" class="edge">
<title>String(&#39;withObject&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M725.1035,-32114.0129C873.5621,-32121.2139 1084.8357,-32120.9247 1144.0988,-32066.9355 1445.1398,-31792.6845 1715.2154,-28630.8067 1746.5715,-28251.9847"/>
<polygon fill="#000000" stroke="#000000" points="1750.0746,-28252.0906 1747.4094,-28241.8365 1743.0983,-28251.5145 1750.0746,-28252.0906"/>
</g>
<!-- Option[BigInt] =&gt; ?{def ===: ?} -->
<g id="node155" class="node">
<title>Option[BigInt] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-38510.9355" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="480.0494" y="-38514.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[BigInt] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-38499.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.Eq[Option[BigInt]] -->
<g id="node1674" class="node">
<title>cats.Eq[Option[BigInt]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-38510.9355" rx="103.4757" ry="26.7407"/>
<text text-anchor="start" x="1684.604" y="-38514.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[BigInt]]</text>
<text text-anchor="middle" x="1749.604" y="-38499.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 8ms</text>
</g>
<!-- Option[BigInt] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[BigInt]] -->
<g id="edge312" class="edge">
<title>Option[BigInt] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[BigInt]]</title>
<path fill="none" stroke="#000000" d="M713.5047,-38510.9355C949.7601,-38510.9355 1419.986,-38510.9355 1636.1296,-38510.9355"/>
<polygon fill="#000000" stroke="#000000" points="1636.2282,-38514.4356 1646.2282,-38510.9355 1636.2282,-38507.4356 1636.2282,-38514.4356"/>
</g>
<!-- List[io.circe.CursorOp] =&gt; ?{def ===: ?} -->
<g id="node156" class="node">
<title>List[io.circe.CursorOp] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-38690.9355" rx="174.8109" ry="26.7407"/>
<text text-anchor="start" x="456.5494" y="-38694.7355" font-family="Times,serif" font-size="14.00" fill="#000000">List[io.circe.CursorOp] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-38679.7355" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 182ms</text>
</g>
<!-- cats.Eq[List[io.circe.CursorOp]] -->
<g id="node1056" class="node">
<title>cats.Eq[List[io.circe.CursorOp]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-38690.9355" rx="136.4432" ry="26.7407"/>
<text text-anchor="start" x="1661.104" y="-38694.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[List[io.circe.CursorOp]]</text>
<text text-anchor="middle" x="1749.604" y="-38679.7355" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 314ms</text>
</g>
<!-- List[io.circe.CursorOp] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[io.circe.CursorOp]] -->
<g id="edge176" class="edge">
<title>List[io.circe.CursorOp] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[io.circe.CursorOp]]</title>
<path fill="none" stroke="#000000" d="M746.7523,-38690.9355C979.072,-38690.9355 1385.5801,-38690.9355 1602.8465,-38690.9355"/>
<polygon fill="#000000" stroke="#000000" points="1603.0481,-38694.4356 1613.0481,-38690.9355 1603.048,-38687.4356 1603.0481,-38694.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with cats.data.NonEmptyStream[Int]] -->
<g id="node157" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with cats.data.NonEmptyStream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-14274.9355" rx="423.6139" ry="26.7407"/>
<text text-anchor="start" x="4876.2166" y="-14278.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with cats.data.NonEmptyStream[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-14263.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def &#45;&gt;: ?} -->
<g id="node158" class="node">
<title>String =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-38762.9355" rx="98.9899" ry="26.7407"/>
<text text-anchor="start" x="510.0494" y="-38766.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="572.0494" y="-38751.7355" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 12ms</text>
</g>
<!-- String(&#39;toByte&#39;) =&gt; ?{def should: ?} -->
<g id="node159" class="node">
<title>String(&#39;toByte&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-32030.9355" rx="150.7276" ry="26.7407"/>
<text text-anchor="start" x="473.5494" y="-32034.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;toByte&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-32019.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;toByte&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1078" class="edge">
<title>String(&#39;toByte&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M711.1048,-32041.2715C859.9111,-32049.1153 1082.8694,-32050.5527 1144.0988,-31994.9355 1439.8904,-31726.2561 1714.3206,-28626.2628 1746.4669,-28251.8716"/>
<polygon fill="#000000" stroke="#000000" points="1749.9603,-28252.0973 1747.3266,-28241.8351 1742.9858,-28251.4998 1749.9603,-28252.0973"/>
</g>
<!-- Option[Unit] =&gt; ?{def ===: ?} -->
<g id="node160" class="node">
<title>Option[Unit] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-13428.9355" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="9929.0427" y="-13432.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Unit] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10016.0427" y="-13417.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.Eq[Option[Unit]] -->
<g id="node802" class="node">
<title>cats.Eq[Option[Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-13428.9355" rx="96.3333" ry="26.7407"/>
<text text-anchor="start" x="10798.4287" y="-13432.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[Unit]]</text>
<text text-anchor="middle" x="10858.4287" y="-13417.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 8ms</text>
</g>
<!-- Option[Unit] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Unit]] -->
<g id="edge392" class="edge">
<title>Option[Unit] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Unit]]</title>
<path fill="none" stroke="#000000" d="M10150.4527,-13428.9355C10317.439,-13428.9355 10598.955,-13428.9355 10751.8497,-13428.9355"/>
<polygon fill="#000000" stroke="#000000" points="10752.1823,-13432.4356 10762.1823,-13428.9355 10752.1822,-13425.4356 10752.1823,-13432.4356"/>
</g>
<!-- scala.concurrent.Future[List[String]] =&gt; PrinterWriterReuseSuite.this.FutureConcept[?] -->
<g id="node161" class="node">
<title>scala.concurrent.Future[List[String]] =&gt; PrinterWriterReuseSuite.this.FutureConcept[?]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-38834.9355" rx="350.9501" ry="26.7407"/>
<text text-anchor="start" x="332.0494" y="-38838.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.concurrent.Future[List[String]] =&gt; PrinterWriterReuseSuite.this.FutureConcept[?]</text>
<text text-anchor="middle" x="572.0494" y="-38823.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- String(&#39;fromDoubleOrString&#39;) =&gt; ?{def should: ?} -->
<g id="node162" class="node">
<title>String(&#39;fromDoubleOrString&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-31958.9355" rx="205.5364" ry="26.7407"/>
<text text-anchor="start" x="434.5494" y="-31962.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;fromDoubleOrString&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-31947.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;fromDoubleOrString&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge199" class="edge">
<title>String(&#39;fromDoubleOrString&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M755.1543,-31971.2424C900.6415,-31976.8063 1088.5938,-31973.1996 1144.0988,-31922.9355 1434.5018,-31659.9529 1713.1358,-28624.6578 1746.3102,-28252.3021"/>
<polygon fill="#000000" stroke="#000000" points="1749.8206,-28252.3384 1747.2198,-28242.0678 1742.8481,-28251.7186 1749.8206,-28252.3384"/>
</g>
<!-- Fractional[((String, io.circe.Json)) =&gt; Boolean] -->
<g id="node163" class="node">
<title>Fractional[((String, io.circe.Json)) =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-38978.9355" rx="195.3231" ry="26.7407"/>
<text text-anchor="start" x="1619.604" y="-38982.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[((String, io.circe.Json)) =&gt; Boolean]</text>
<text text-anchor="middle" x="1749.604" y="-38967.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Map[String,Either[Int,String]]] -->
<g id="node164" class="node">
<title>org.scalacheck.Shrink[Map[String,Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-10219.9355" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="424.5494" y="-10223.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Map[String,Either[Int,String]]]</text>
<text text-anchor="middle" x="572.0494" y="-10208.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 26ms</text>
</g>
<!-- org.scalacheck.Shrink[Map[String,Either[Int,String]]]&#45;&gt;org.scalacheck.Shrink[(String, Either[Int,String])] -->
<g id="edge598" class="edge">
<title>org.scalacheck.Shrink[Map[String,Either[Int,String]]]&#45;&gt;org.scalacheck.Shrink[(String, Either[Int,String])]</title>
<path fill="none" stroke="#000000" d="M679.795,-10243.4236C811.2271,-10264.9946 1029.9606,-10276.6649 1144.0988,-10147.9355 1158.2982,-10131.9209 1137.3863,-8622.4801 1152.0988,-8606.9355 1207.1459,-8548.7752 1412.4646,-8547.5946 1567.1726,-8555.8669"/>
<polygon fill="#000000" stroke="#000000" points="1567.1099,-8559.3687 1577.2876,-8556.4249 1567.4956,-8552.3793 1567.1099,-8559.3687"/>
</g>
<!-- Integral[Map[String,Either[Int,String]]] -->
<g id="node373" class="node">
<title>Integral[Map[String,Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-10526.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="1641.104" y="-10530.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Map[String,Either[Int,String]]]</text>
<text text-anchor="middle" x="1749.604" y="-10515.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[Map[String,Either[Int,String]]]&#45;&gt;Integral[Map[String,Either[Int,String]]] -->
<g id="edge649" class="edge">
<title>org.scalacheck.Shrink[Map[String,Either[Int,String]]]&#45;&gt;Integral[Map[String,Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M613.9766,-10246.3773C706.7073,-10303.278 937.9776,-10436.5756 1152.0988,-10490.9355 1293.0561,-10526.721 1458.4529,-10534.1402 1579.4489,-10533.5122"/>
<polygon fill="#000000" stroke="#000000" points="1579.5716,-10537.0115 1589.5465,-10533.4406 1579.5219,-10530.0117 1579.5716,-10537.0115"/>
</g>
<!-- Fractional[Map[String,Either[Int,String]]] -->
<g id="node511" class="node">
<title>Fractional[Map[String,Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-10454.9355" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="1635.104" y="-10458.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Map[String,Either[Int,String]]]</text>
<text text-anchor="middle" x="1749.604" y="-10443.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[Map[String,Either[Int,String]]]&#45;&gt;Fractional[Map[String,Either[Int,String]]] -->
<g id="edge945" class="edge">
<title>org.scalacheck.Shrink[Map[String,Either[Int,String]]]&#45;&gt;Fractional[Map[String,Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M630.7027,-10246.0207C733.7904,-10290.5008 955.2295,-10379.9835 1152.0988,-10418.9355 1289.2944,-10446.0807 1447.3672,-10454.6346 1566.4527,-10456.6421"/>
<polygon fill="#000000" stroke="#000000" points="1566.7115,-10460.1464 1576.7643,-10456.8012 1566.8195,-10453.1472 1566.7115,-10460.1464"/>
</g>
<!-- Map[String,Either[Int,String]] =&gt; Traversable[(String, Either[Int,String])] -->
<g id="node1581" class="node">
<title>Map[String,Either[Int,String]] =&gt; Traversable[(String, Either[Int,String])]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-10219.9355" rx="298.2982" ry="26.7407"/>
<text text-anchor="start" x="1546.604" y="-10223.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Map[String,Either[Int,String]] =&gt; Traversable[(String, Either[Int,String])]</text>
<text text-anchor="middle" x="1749.604" y="-10208.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Map[String,Either[Int,String]]]&#45;&gt;Map[String,Either[Int,String]] =&gt; Traversable[(String, Either[Int,String])] -->
<g id="edge1475" class="edge">
<title>org.scalacheck.Shrink[Map[String,Either[Int,String]]]&#45;&gt;Map[String,Either[Int,String]] =&gt; Traversable[(String, Either[Int,String])]</title>
<path fill="none" stroke="#000000" d="M792.157,-10219.9355C974.9615,-10219.9355 1237.1053,-10219.9355 1440.8915,-10219.9355"/>
<polygon fill="#000000" stroke="#000000" points="1441.1619,-10223.4356 1451.1618,-10219.9355 1441.1618,-10216.4356 1441.1619,-10223.4356"/>
</g>
<!-- org.scalacheck.util.Buildable[(String, Either[Int,String]),Map[String,Either[Int,String]]] -->
<g id="node1813" class="node">
<title>org.scalacheck.util.Buildable[(String, Either[Int,String]),Map[String,Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-10147.9355" rx="350.9501" ry="26.7407"/>
<text text-anchor="start" x="1509.604" y="-10151.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(String, Either[Int,String]),Map[String,Either[Int,String]]]</text>
<text text-anchor="middle" x="1749.604" y="-10136.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- org.scalacheck.Shrink[Map[String,Either[Int,String]]]&#45;&gt;org.scalacheck.util.Buildable[(String, Either[Int,String]),Map[String,Either[Int,String]]] -->
<g id="edge1392" class="edge">
<title>org.scalacheck.Shrink[Map[String,Either[Int,String]]]&#45;&gt;org.scalacheck.util.Buildable[(String, Either[Int,String]),Map[String,Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M768.0431,-10207.6831C880.4442,-10200.6786 1024.1988,-10191.7575 1152.0988,-10183.9355 1253.3854,-10177.7412 1364.3352,-10171.0346 1462.8404,-10165.1078"/>
<polygon fill="#000000" stroke="#000000" points="1463.1727,-10168.5942 1472.9445,-10164.5 1462.7523,-10161.6069 1463.1727,-10168.5942"/>
</g>
<!-- Either[io.circe.Error,io.circe.Json] =&gt; ?{def ===: ?} -->
<g id="node165" class="node">
<title>Either[io.circe.Error,io.circe.Json] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-38978.9355" rx="216.2494" ry="26.7407"/>
<text text-anchor="start" x="427.0494" y="-38982.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Either[io.circe.Error,io.circe.Json] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-38967.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- cats.Eq[Option[List[String]]] -->
<g id="node166" class="node">
<title>cats.Eq[Option[List[String]]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-15060.9355" rx="123.9879" ry="26.7407"/>
<text text-anchor="start" x="10778.9287" y="-15064.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[List[String]]]</text>
<text text-anchor="middle" x="10858.4287" y="-15049.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 19ms</text>
</g>
<!-- cats.kernel.Order[List[String]] -->
<g id="node455" class="node">
<title>cats.kernel.Order[List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-15024.9355" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="11575.3883" y="-15028.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[List[String]]</text>
<text text-anchor="middle" x="11658.3883" y="-15013.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- cats.Eq[Option[List[String]]]&#45;&gt;cats.kernel.Order[List[String]] -->
<g id="edge1300" class="edge">
<title>cats.Eq[Option[List[String]]]&#45;&gt;cats.kernel.Order[List[String]]</title>
<path fill="none" stroke="#000000" d="M10979.9253,-15055.4679C11125.8364,-15048.9016 11369.9032,-15037.918 11522.0991,-15031.0689"/>
<polygon fill="#000000" stroke="#000000" points="11522.6098,-15034.5495 11532.4423,-15030.6034 11522.295,-15027.5566 11522.6098,-15034.5495"/>
</g>
<!-- cats.kernel.Eq[List[String]] -->
<g id="node597" class="node">
<title>cats.kernel.Eq[List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-15096.9355" rx="117.2596" ry="26.7407"/>
<text text-anchor="start" x="11583.3883" y="-15100.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[List[String]]</text>
<text text-anchor="middle" x="11658.3883" y="-15085.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 10ms</text>
</g>
<!-- cats.Eq[Option[List[String]]]&#45;&gt;cats.kernel.Eq[List[String]] -->
<g id="edge733" class="edge">
<title>cats.Eq[Option[List[String]]]&#45;&gt;cats.kernel.Eq[List[String]]</title>
<path fill="none" stroke="#000000" d="M10979.9253,-15066.4032C11129.2545,-15073.1233 11381.3921,-15084.4701 11532.6414,-15091.2767"/>
<polygon fill="#000000" stroke="#000000" points="11532.7577,-15094.7853 11542.9049,-15091.7385 11533.0724,-15087.7924 11532.7577,-15094.7853"/>
</g>
<!-- io.circe.Decoder[io.circe.JsonObject] -->
<g id="node167" class="node">
<title>io.circe.Decoder[io.circe.JsonObject]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-39050.9355" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="470.0494" y="-39054.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[io.circe.JsonObject]</text>
<text text-anchor="middle" x="572.0494" y="-39039.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.Decoder[String] -->
<g id="node168" class="node">
<title>io.circe.Decoder[String]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="5167.7166" cy="-10836.9355" rx="105.218" ry="26.7407"/>
<text text-anchor="start" x="5101.2166" y="-10840.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[String]</text>
<text text-anchor="middle" x="5167.7166" y="-10825.7355" font-family="Times,serif" font-size="14.00" fill="#000000">282 times = 998ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[io.circe.Json],(io.circe.Json, Int),That] -->
<g id="node169" class="node">
<title>scala.collection.generic.CanBuildFrom[List[io.circe.Json],(io.circe.Json, Int),That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-39122.9355" rx="331.7662" ry="26.7407"/>
<text text-anchor="start" x="345.5494" y="-39126.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[io.circe.Json],(io.circe.Json, Int),That]</text>
<text text-anchor="middle" x="572.0494" y="-39111.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[Int]] -->
<g id="node170" class="node">
<title>org.scalacheck.Arbitrary[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-7156.9355" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="3968.2721" y="-7160.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Option[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-7145.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Int,Option[Int]] -->
<g id="node672" class="node">
<title>org.scalacheck.util.Buildable[Int,Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-7274.9355" rx="186.8525" ry="26.7407"/>
<text text-anchor="start" x="5043.7166" y="-7278.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Int,Option[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-7263.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Option[Int]] -->
<g id="edge712" class="edge">
<title>org.scalacheck.Arbitrary[Option[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4215.7898,-7146.8397C4359.869,-7140.1372 4567.5152,-7140.5526 4625.8509,-7192.9355 4641.2909,-7206.8 4618.4287,-7225.0513 4633.8509,-7238.9355 4684.4083,-7284.4511 4851.8557,-7289.6701 4985.8977,-7285.8029"/>
<polygon fill="#000000" stroke="#000000" points="4986.008,-7289.3013 4995.8958,-7285.496 4985.7931,-7282.3046 4986.008,-7289.3013"/>
</g>
<!-- scala.reflect.ClassTag[Option[Int]] -->
<g id="node798" class="node">
<title>scala.reflect.ClassTag[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-7202.9355" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="5072.7166" y="-7206.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Option[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-7191.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Option[Int]]&#45;&gt;scala.reflect.ClassTag[Option[Int]] -->
<g id="edge1196" class="edge">
<title>org.scalacheck.Arbitrary[Option[Int]]&#45;&gt;scala.reflect.ClassTag[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4222.7213,-7163.3075C4431.79,-7172.0747 4805.9915,-7187.7667 5015.304,-7196.5442"/>
<polygon fill="#000000" stroke="#000000" points="5015.3158,-7200.0477 5025.4537,-7196.9698 5015.6092,-7193.0538 5015.3158,-7200.0477"/>
</g>
<!-- org.scalacheck.Arbitrary[Option[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge731" class="edge">
<title>org.scalacheck.Arbitrary[Option[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4211.6464,-7168.5983C4357.4642,-7177.1899 4571.4395,-7178.8835 4625.8509,-7120.9355 4636.2089,-7109.9043 4629.2943,-2777.3652 4633.8509,-2762.9355 4736.2914,-2438.531 5030.5367,-2131.6829 5132.4589,-2032.3475"/>
<polygon fill="#000000" stroke="#000000" points="5135.0015,-2034.7572 5139.7433,-2025.2827 5130.1281,-2029.7322 5135.0015,-2034.7572"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V] -->
<g id="node171" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-39194.9355" rx="572.0988" ry="26.7407"/>
<text text-anchor="start" x="175.5494" y="-39198.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V]</text>
<text text-anchor="middle" x="572.0494" y="-39183.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node172" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="15567.1913" cy="-16449.9355" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="15392.6913" y="-16453.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="15567.1913" y="-16438.7355" font-family="Times,serif" font-size="14.00" fill="#000000">17 times = 627ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge322" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M15771.5655,-16433.4883C16014.0425,-16415.4215 16430.5995,-16388.9355 16788.8083,-16388.9355 16788.8083,-16388.9355 16788.8083,-16388.9355 18607.2235,-16388.9355 19096.0882,-16388.9355 19237.3652,-16460.8452 19704.8751,-16317.9355 19800.9581,-16288.5646 19899.907,-16223.0832 19953.594,-16184.0193"/>
<polygon fill="#000000" stroke="#000000" points="19955.8235,-16186.7245 19961.8144,-16177.9861 19951.6818,-16181.0812 19955.8235,-16186.7245"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node1404" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="16070.166" cy="-16492.9355" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="15910.666" y="-16496.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="16070.166" y="-16481.7355" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 566ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge875" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M15766.7026,-16466.992C15800.902,-16469.9158 15836.4424,-16472.9542 15870.6421,-16475.878"/>
<polygon fill="#000000" stroke="#000000" points="15870.4663,-16479.3756 15880.7282,-16476.7402 15871.0627,-16472.4011 15870.4663,-16479.3756"/>
</g>
<!-- io.circe.Decoder[BigDecimal] -->
<g id="node173" class="node">
<title>io.circe.Decoder[BigDecimal]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-39266.9355" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="489.0494" y="-39270.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[BigDecimal]</text>
<text text-anchor="middle" x="572.0494" y="-39255.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- cats.Eq[List[String]]&#45;&gt;cats.kernel.Order[String] -->
<g id="edge162" class="edge">
<title>cats.Eq[List[String]]&#45;&gt;cats.kernel.Order[String]</title>
<path fill="none" stroke="#000000" d="M11726.9504,-15265.2867C11865.761,-15229.5548 12179.6894,-15148.7451 12331.102,-15109.7693"/>
<polygon fill="#000000" stroke="#000000" points="12332.0249,-15113.1459 12340.8367,-15107.2635 12330.2799,-15106.3669 12332.0249,-15113.1459"/>
</g>
<!-- shapeless.IsTuple[List[String]] -->
<g id="node650" class="node">
<title>shapeless.IsTuple[List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-16260.9355" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="12331.4214" y="-16264.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[List[String]]</text>
<text text-anchor="middle" x="12415.9214" y="-16249.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[List[String]]&#45;&gt;shapeless.IsTuple[List[String]] -->
<g id="edge2" class="edge">
<title>cats.Eq[List[String]]&#45;&gt;shapeless.IsTuple[List[String]]</title>
<path fill="none" stroke="#000000" d="M11726.946,-15265.2301C11814.6135,-15247.1962 11964.5296,-15232.7248 12043.7615,-15318.9355 12060.7918,-15337.466 12034.7811,-16206.3593 12051.7615,-16224.9355 12117.6638,-16297.0318 12235.7599,-16295.5134 12319.5848,-16282.7988"/>
<polygon fill="#000000" stroke="#000000" points="12320.3075,-16286.2279 12329.6317,-16281.1969 12319.2053,-16279.3152 12320.3075,-16286.2279"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int)] -->
<g id="node175" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-1566.9355" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="3930.7721" y="-1570.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-1555.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 31ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int)] -->
<g id="node653" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-1566.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="5035.2166" y="-1570.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-1555.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int)] -->
<g id="edge1252" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4280.3282,-1566.9355C4475.1589,-1566.9355 4763.8265,-1566.9355 4958.5364,-1566.9355"/>
<polygon fill="#000000" stroke="#000000" points="4958.6065,-1570.4356 4968.6065,-1566.9355 4958.6065,-1563.4356 4958.6065,-1570.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge489" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4252.0429,-1553.4292C4394.083,-1547.2773 4575.7795,-1550.6872 4625.8509,-1602.9355 4639.6925,-1617.3789 4620.0279,-1948.4745 4633.8509,-1962.9355 4749.5093,-2083.9328 4966.8329,-2052.4376 5085.4113,-2023.1704"/>
<polygon fill="#000000" stroke="#000000" points="5086.3315,-2026.548 5095.1733,-2020.7108 5084.6212,-2019.7601 5086.3315,-2026.548"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, io.circe.Json)] -->
<g id="node176" class="node">
<title>org.scalacheck.Arbitrary[(String, io.circe.Json)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-8536.9355" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="3939.7721" y="-8540.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(String, io.circe.Json)]</text>
<text text-anchor="middle" x="4070.7721" y="-8525.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 40ms</text>
</g>
<!-- org.scalacheck.Arbitrary[String] -->
<g id="node795" class="node">
<title>org.scalacheck.Arbitrary[String]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="5167.7166" cy="-9728.9355" rx="136.4432" ry="26.7407"/>
<text text-anchor="start" x="5079.2166" y="-9732.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[String]</text>
<text text-anchor="middle" x="5167.7166" y="-9717.7355" font-family="Times,serif" font-size="14.00" fill="#000000">291 times = 1486ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String, io.circe.Json)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge843" class="edge">
<title>org.scalacheck.Arbitrary[(String, io.circe.Json)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M4242.003,-8523.7068C4385.5405,-8516.8329 4574.973,-8519.0387 4625.8509,-8572.9355 4647.1695,-8595.5191 4612.6035,-9668.2851 4633.8509,-9690.9355 4685.9085,-9746.4308 4889.8601,-9746.4724 5030.0504,-9739.3003"/>
<polygon fill="#000000" stroke="#000000" points="5030.6513,-9742.7734 5040.4521,-9738.749 5030.2808,-9735.7832 5030.6513,-9742.7734"/>
</g>
<!-- scala.reflect.ClassTag[(String, io.circe.Json)] -->
<g id="node1085" class="node">
<title>scala.reflect.ClassTag[(String, io.circe.Json)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-8500.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="5044.2166" y="-8504.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(String, io.circe.Json)]</text>
<text text-anchor="middle" x="5167.7166" y="-8489.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String, io.circe.Json)]&#45;&gt;scala.reflect.ClassTag[(String, io.circe.Json)] -->
<g id="edge275" class="edge">
<title>org.scalacheck.Arbitrary[(String, io.circe.Json)]&#45;&gt;scala.reflect.ClassTag[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M4262.1588,-8530.6545C4462.6185,-8524.0758 4775.6464,-8513.8027 4976.1671,-8507.2219"/>
<polygon fill="#000000" stroke="#000000" points="4976.3455,-8510.718 4986.2253,-8506.8918 4976.1158,-8503.7218 4976.3455,-8510.718"/>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.Json] -->
<g id="node1900" class="node">
<title>org.scalacheck.Arbitrary[io.circe.Json]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-8860.9355" rx="161.441" ry="26.7407"/>
<text text-anchor="start" x="5061.7166" y="-8864.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.Json]</text>
<text text-anchor="middle" x="5167.7166" y="-8849.7355" font-family="Times,serif" font-size="14.00" fill="#000000">165 times = 104ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String, io.circe.Json)]&#45;&gt;org.scalacheck.Arbitrary[io.circe.Json] -->
<g id="edge757" class="edge">
<title>org.scalacheck.Arbitrary[(String, io.circe.Json)]&#45;&gt;org.scalacheck.Arbitrary[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M4243.0883,-8523.9445C4386.245,-8517.3525 4574.4823,-8519.8416 4625.8509,-8572.9355 4645.3301,-8593.0689 4614.3976,-8804.7772 4633.8509,-8824.9355 4684.2364,-8877.1472 4871.9228,-8879.0431 5010.5815,-8872.5885"/>
<polygon fill="#000000" stroke="#000000" points="5011.0773,-8876.0687 5020.8962,-8872.0889 5010.7386,-8869.0769 5011.0773,-8876.0687"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I] -->
<g id="node178" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-39338.9355" rx="372.7906" ry="26.7407"/>
<text text-anchor="start" x="316.5494" y="-39342.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I]</text>
<text text-anchor="middle" x="572.0494" y="-39327.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; EncoderSuite.this.PropertyCheckConfigParam -->
<g id="node179" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; EncoderSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-39410.9355" rx="328.6094" ry="26.7407"/>
<text text-anchor="start" x="347.5494" y="-39414.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; EncoderSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-39399.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; (?A =&gt; ?ASSERTION) -->
<g id="node180" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; (?A =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-39482.9355" rx="255.0313" ry="26.7407"/>
<text text-anchor="start" x="399.5494" y="-39486.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; (?A =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-39471.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.DecodingFailure] -->
<g id="node181" class="node">
<title>org.scalacheck.Arbitrary[io.circe.DecodingFailure]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-39554.9355" rx="208.693" ry="26.7407"/>
<text text-anchor="start" x="1610.104" y="-39558.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.DecodingFailure]</text>
<text text-anchor="middle" x="1749.604" y="-39543.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.Map[String,Int]] -->
<g id="node182" class="node">
<title>io.circe.Encoder[scala.collection.immutable.Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-19718.9355" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="404.0494" y="-19722.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[scala.collection.immutable.Map[String,Int]]</text>
<text text-anchor="middle" x="572.0494" y="-19707.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.KeyEncoder[String] -->
<g id="node836" class="node">
<title>io.circe.KeyEncoder[String]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-19646.9355" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="1672.604" y="-19650.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.KeyEncoder[String]</text>
<text text-anchor="middle" x="1749.604" y="-19635.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 2ms</text>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.Map[String,Int]]&#45;&gt;io.circe.KeyEncoder[String] -->
<g id="edge1118" class="edge">
<title>io.circe.Encoder[scala.collection.immutable.Map[String,Int]]&#45;&gt;io.circe.KeyEncoder[String]</title>
<path fill="none" stroke="#000000" d="M788.7168,-19705.6877C1033.5561,-19690.7173 1423.8657,-19666.8524 1623.3049,-19654.6579"/>
<polygon fill="#000000" stroke="#000000" points="1623.7653,-19658.1364 1633.533,-19654.0326 1623.338,-19651.1495 1623.7653,-19658.1364"/>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.Map[String,Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge133" class="edge">
<title>io.circe.Encoder[scala.collection.immutable.Map[String,Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M776.8555,-19703.6469C920.3665,-19697.9665 1094.9577,-19702.8814 1144.0988,-19754.9355 1158.5148,-19770.2061 1137.6624,-21251.6842 1152.0988,-21266.9355 1287.7329,-21410.2263 1550.8259,-21360.7791 1677.7203,-21325.6632"/>
<polygon fill="#000000" stroke="#000000" points="1679.0479,-21328.9255 1687.7248,-21322.8459 1677.1505,-21322.1876 1679.0479,-21328.9255"/>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc12] -->
<g id="node183" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc12]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-39626.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="1617.104" y="-39630.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc12]</text>
<text text-anchor="middle" x="1749.604" y="-39615.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int)]] -->
<g id="node184" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-11970.9355" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="4990.2166" y="-11974.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-11959.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.math.BigInt] -->
<g id="node185" class="node">
<title>org.scalacheck.Arbitrary[scala.math.BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-39698.9355" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="451.5494" y="-39702.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.math.BigInt]</text>
<text text-anchor="middle" x="572.0494" y="-39687.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.math.BigInt] -->
<g id="node824" class="node">
<title>scala.reflect.ClassTag[scala.math.BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-39698.9355" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="1636.604" y="-39702.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.math.BigInt]</text>
<text text-anchor="middle" x="1749.604" y="-39687.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.math.BigInt]&#45;&gt;scala.reflect.ClassTag[scala.math.BigInt] -->
<g id="edge882" class="edge">
<title>org.scalacheck.Arbitrary[scala.math.BigInt]&#45;&gt;scala.reflect.ClassTag[scala.math.BigInt]</title>
<path fill="none" stroke="#000000" d="M753.7835,-39698.9355C975.1279,-39698.9355 1346.7878,-39698.9355 1568.0505,-39698.9355"/>
<polygon fill="#000000" stroke="#000000" points="1568.1448,-39702.4356 1578.1448,-39698.9355 1568.1448,-39695.4356 1568.1448,-39702.4356"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C] -->
<g id="node186" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-39770.9355" rx="282.2713" ry="26.7407"/>
<text text-anchor="start" x="380.5494" y="-39774.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C]</text>
<text text-anchor="middle" x="572.0494" y="-39759.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.Decoder[Unit]] -->
<g id="node187" class="node">
<title>org.scalacheck.Arbitrary[io.circe.Decoder[Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-39986.9355" rx="200.2225" ry="26.7407"/>
<text text-anchor="start" x="438.5494" y="-39990.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.Decoder[Unit]]</text>
<text text-anchor="middle" x="572.0494" y="-39975.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Unit] -->
<g id="node1192" class="node">
<title>org.scalacheck.Arbitrary[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-39914.9355" rx="130.2154" ry="26.7407"/>
<text text-anchor="start" x="1665.604" y="-39918.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Unit]</text>
<text text-anchor="middle" x="1749.604" y="-39903.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 13ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.Decoder[Unit]]&#45;&gt;org.scalacheck.Arbitrary[Unit] -->
<g id="edge671" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.Decoder[Unit]]&#45;&gt;org.scalacheck.Arbitrary[Unit]</title>
<path fill="none" stroke="#000000" d="M754.4278,-39975.7843C992.2199,-39961.2448 1402.7052,-39936.1462 1614.4987,-39923.1964"/>
<polygon fill="#000000" stroke="#000000" points="1614.9752,-39926.6739 1624.7429,-39922.57 1614.5479,-39919.6869 1614.9752,-39926.6739"/>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc10] -->
<g id="node188" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc10]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-40058.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="1605.104" y="-40062.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc10]</text>
<text text-anchor="middle" x="1749.604" y="-40047.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- WeekDay$1.Fri.type =&gt; ?{def asJson: ?} -->
<g id="node189" class="node">
<title>WeekDay$1.Fri.type =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-40130.9355" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="457.5494" y="-40134.7355" font-family="Times,serif" font-size="14.00" fill="#000000">WeekDay$1.Fri.type =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-40119.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node190" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-14670.9355" rx="385.2464" ry="26.7407"/>
<text text-anchor="start" x="3806.2721" y="-14674.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-14659.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 49ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1163" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4196.0979,-14696.3798C4324.9362,-14714.3904 4521.0802,-14717.5684 4625.8509,-14598.9355 4640.4142,-14582.4454 4619.3295,-13031.4625 4633.8509,-13014.9355 4745.0812,-12888.3438 4964.2101,-12904.2855 5084.2462,-12924.8309"/>
<polygon fill="#000000" stroke="#000000" points="5083.6747,-12928.284 5094.1302,-12926.5715 5084.8888,-12921.3901 5083.6747,-12928.284"/>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node394" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-14706.9355" rx="485.1505" ry="26.7407"/>
<text text-anchor="start" x="4832.7166" y="-14710.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-14695.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge501" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4419.7364,-14682.388C4521.5196,-14685.7284 4633.9157,-14689.417 4739.9745,-14692.8977"/>
<polygon fill="#000000" stroke="#000000" points="4740.1084,-14696.4039 4750.2179,-14693.2339 4740.3381,-14689.4077 4740.1084,-14696.4039"/>
</g>
<!-- Integral[Long] -->
<g id="node191" class="node">
<title>Integral[Long]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-9510.9355" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="6175.2346" y="-9514.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Long]</text>
<text text-anchor="middle" x="6222.2346" y="-9499.7355" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 22ms</text>
</g>
<!-- Fractional[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]] -->
<g id="node192" class="node">
<title>Fractional[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-40202.9355" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="1537.604" y="-40206.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]</text>
<text text-anchor="middle" x="1749.604" y="-40191.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int)] -->
<g id="node193" class="node">
<title>cats.kernel.Eq[(Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-16095.9355" rx="121.7449" ry="26.7407"/>
<text text-anchor="start" x="10780.4287" y="-16099.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int)]</text>
<text text-anchor="middle" x="10858.4287" y="-16084.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 153ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int),L] -->
<g id="edge342" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M10919.2007,-16072.626C10999.0925,-16043.0097 11144.4001,-15992.6594 11273.0151,-15966.9355 11343.5233,-15952.8334 11422.4198,-15944.2306 11490.3728,-15938.9937"/>
<polygon fill="#000000" stroke="#000000" points="11491.0393,-15942.4536 11500.7487,-15938.2135 11490.5144,-15935.4733 11491.0393,-15942.4536"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge1456" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10979.9253,-16098.5175C11136.4112,-16101.843 11405.7959,-16107.5677 11553.67,-16110.7102"/>
<polygon fill="#000000" stroke="#000000" points="11553.5956,-16114.2093 11563.6678,-16110.9226 11553.7444,-16107.2109 11553.5956,-16114.2093"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge1052" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M10893.8729,-16121.6874C10977.8917,-16185.2056 11187.8751,-16359.0889 11265.0151,-16562.9355 11270.4912,-16577.4067 11262.5545,-17665.5347 11273.0151,-17676.9355 11345.9575,-17756.4343 11478.9974,-17750.372 11568.0554,-17734.8029"/>
<polygon fill="#000000" stroke="#000000" points="11568.939,-17738.1997 11578.1503,-17732.9648 11567.685,-17731.3129 11568.939,-17738.1997"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: shapeless.HNil] -->
<g id="node637" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="17757.7665" cy="-16333.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="17628.2665" y="-16337.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="17757.7665" y="-16322.7355" font-family="Times,serif" font-size="14.00" fill="#000000">23 times = 453ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1061" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M10976.7857,-16089.5927C11059.6961,-16085.3745 11173.0911,-16080.0552 11273.0151,-16076.9355 11780.7962,-16061.0827 11907.8929,-16057.9355 12415.9214,-16057.9355 12415.9214,-16057.9355 12415.9214,-16057.9355 15021.7901,-16057.9355 16028.498,-16057.9355 17233.0934,-16245.2016 17626.5203,-16311.2274"/>
<polygon fill="#000000" stroke="#000000" points="17626.0693,-16314.7006 17636.5112,-16312.9074 17627.2301,-16307.7976 17626.0693,-16314.7006"/>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int)] -->
<g id="node1911" class="node">
<title>shapeless.IsTuple[(Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-16002.9355" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="11570.8883" y="-16006.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int)]</text>
<text text-anchor="middle" x="11658.3883" y="-15991.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int)] -->
<g id="edge430" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M10963.1525,-16082.2484C11046.935,-16071.4314 11167.4495,-16056.1704 11273.0151,-16043.9355 11357.5937,-16034.1331 11452.7229,-16024.0031 11527.3042,-16016.2648"/>
<polygon fill="#000000" stroke="#000000" points="11528.1023,-16019.7009 11537.6883,-16015.189 11527.3809,-16012.7382 11528.1023,-16019.7009"/>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc19] -->
<g id="node194" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc19]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-40274.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-40278.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc19]</text>
<text text-anchor="middle" x="572.0494" y="-40263.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc19]] -->
<g id="node1019" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc19]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-40274.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="1549.604" y="-40278.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc19]]</text>
<text text-anchor="middle" x="1749.604" y="-40263.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc19]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc19]] -->
<g id="edge538" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc19]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc19]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-40274.9355C951.3519,-40274.9355 1231.2937,-40274.9355 1445.2652,-40274.9355"/>
<polygon fill="#000000" stroke="#000000" points="1445.4039,-40278.4356 1455.4038,-40274.9355 1445.4038,-40271.4356 1445.4039,-40278.4356"/>
</g>
<!-- org.scalacheck.Cogen[(String, io.circe.Json)] -->
<g id="node196" class="node">
<title>org.scalacheck.Cogen[(String, io.circe.Json)]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-7634.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="2807.9013" y="-7638.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[(String, io.circe.Json)]</text>
<text text-anchor="middle" x="2931.4013" y="-7623.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Cogen[io.circe.Json] -->
<g id="node1182" class="node">
<title>org.scalacheck.Cogen[io.circe.Json]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-7660.9355" rx="150.7276" ry="26.7407"/>
<text text-anchor="start" x="3972.2721" y="-7664.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[io.circe.Json]</text>
<text text-anchor="middle" x="4070.7721" y="-7649.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[(String, io.circe.Json)]&#45;&gt;org.scalacheck.Cogen[io.circe.Json] -->
<g id="edge533" class="edge">
<title>org.scalacheck.Cogen[(String, io.circe.Json)]&#45;&gt;org.scalacheck.Cogen[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M3115.0936,-7639.1273C3335.562,-7644.1583 3701.6437,-7652.5122 3910.9279,-7657.288"/>
<polygon fill="#000000" stroke="#000000" points="3911.0056,-7660.7906 3921.0828,-7657.5197 3911.1653,-7653.7924 3911.0056,-7660.7906"/>
</g>
<!-- org.scalacheck.Cogen[String] -->
<g id="node1189" class="node">
<title>org.scalacheck.Cogen[String]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-7880.9355" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="3989.7721" y="-7884.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[String]</text>
<text text-anchor="middle" x="4070.7721" y="-7869.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Cogen[(String, io.circe.Json)]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge1350" class="edge">
<title>org.scalacheck.Cogen[(String, io.circe.Json)]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M3095.959,-7622.3041C3245.5435,-7614.7614 3451.2528,-7615.5609 3507.6933,-7670.9355 3523.2903,-7686.238 3501.1779,-7752.6035 3515.6933,-7768.9355 3623.2341,-7889.9355 3822.0865,-7901.6138 3950.289,-7894.5449"/>
<polygon fill="#000000" stroke="#000000" points="3950.7729,-7898.0223 3960.5459,-7893.9311 3950.3547,-7891.0348 3950.7729,-7898.0223"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Any],Some[io.circe.Json],That] -->
<g id="node197" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Any],Some[io.circe.Json],That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-40346.9355" rx="306.3546" ry="26.7407"/>
<text text-anchor="start" x="363.5494" y="-40350.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Any],Some[io.circe.Json],That]</text>
<text text-anchor="middle" x="572.0494" y="-40335.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node198" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-1494.9355" rx="336.6657" ry="26.7407"/>
<text text-anchor="start" x="3840.7721" y="-1498.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-1483.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 45ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1403" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-1494.9355" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="4945.2166" y="-1498.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-1483.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge796" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4407.7202,-1494.9355C4542.2618,-1494.9355 4696.8571,-1494.9355 4831.3417,-1494.9355"/>
<polygon fill="#000000" stroke="#000000" points="4831.3997,-1498.4356 4841.3997,-1494.9355 4831.3997,-1491.4356 4831.3997,-1498.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1419" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4343.0651,-1479.1262C4463.1822,-1478.6537 4586.1297,-1489.3334 4625.8509,-1530.9355 4642.4274,-1548.2969 4617.2967,-1945.5529 4633.8509,-1962.9355 4749.2851,-2084.1467 4966.7001,-2052.5643 5085.3523,-2023.2266"/>
<polygon fill="#000000" stroke="#000000" points="5086.2812,-2026.602 5095.1205,-2020.7611 5084.568,-2019.8149 5086.2812,-2026.602"/>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node199" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="8203.9914" cy="-17932.9355" rx="341.5652" ry="26.7407"/>
<text text-anchor="start" x="7970.4914" y="-17936.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="8203.9914" y="-17921.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc8] -->
<g id="node200" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc8]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-40418.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="445.5494" y="-40422.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc8]</text>
<text text-anchor="middle" x="572.0494" y="-40407.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc8]] -->
<g id="node230" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc8]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-40418.9355" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="1552.604" y="-40422.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc8]]</text>
<text text-anchor="middle" x="1749.604" y="-40407.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc8]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc8]] -->
<g id="edge1121" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc8]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc8]]</title>
<path fill="none" stroke="#000000" d="M762.5526,-40418.9355C948.131,-40418.9355 1233.0868,-40418.9355 1449.2048,-40418.9355"/>
<polygon fill="#000000" stroke="#000000" points="1449.4435,-40422.4356 1459.4434,-40418.9355 1449.4434,-40415.4356 1449.4435,-40422.4356"/>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc19] -->
<g id="node201" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc19]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-40490.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="1617.104" y="-40494.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc19]</text>
<text text-anchor="middle" x="1749.604" y="-40479.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.Generic.Aux[Unit,L] -->
<g id="node202" class="node">
<title>shapeless.Generic.Aux[Unit,L]</title>
<ellipse fill="none" stroke="#000000" cx="19994.3036" cy="-14400.9355" rx="131.5437" ry="26.7407"/>
<text text-anchor="start" x="19909.3036" y="-14404.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[Unit,L]</text>
<text text-anchor="middle" x="19994.3036" y="-14389.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc9] -->
<g id="node203" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc9]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-40598.9355" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="430.5494" y="-40602.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc9]</text>
<text text-anchor="middle" x="572.0494" y="-40587.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc9] -->
<g id="node1213" class="node">
<title>Fractional[ProductCodecSuite.this.Cc9]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-40634.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="1641.104" y="-40638.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc9]</text>
<text text-anchor="middle" x="1749.604" y="-40623.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc9]&#45;&gt;Fractional[ProductCodecSuite.this.Cc9] -->
<g id="edge1385" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc9]&#45;&gt;Fractional[ProductCodecSuite.this.Cc9]</title>
<path fill="none" stroke="#000000" d="M777.8371,-40605.2269C1004.4907,-40612.1561 1364.9051,-40623.1746 1577.2555,-40629.6665"/>
<polygon fill="#000000" stroke="#000000" points="1577.152,-40633.1649 1587.2544,-40629.9722 1577.366,-40626.1682 1577.152,-40633.1649"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc9] -->
<g id="node1767" class="node">
<title>Integral[ProductCodecSuite.this.Cc9]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-40562.9355" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="1647.104" y="-40566.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc9]</text>
<text text-anchor="middle" x="1749.604" y="-40551.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc9]&#45;&gt;Integral[ProductCodecSuite.this.Cc9] -->
<g id="edge906" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc9]&#45;&gt;Integral[ProductCodecSuite.this.Cc9]</title>
<path fill="none" stroke="#000000" d="M777.8371,-40592.6442C1007.2972,-40585.6292 1373.8512,-40574.423 1585.075,-40567.9655"/>
<polygon fill="#000000" stroke="#000000" points="1585.4381,-40571.4561 1595.3265,-40567.6521 1585.2242,-40564.4594 1585.4381,-40571.4561"/>
</g>
<!-- cats.kernel.PartialOrder[Char] -->
<g id="node204" class="node">
<title>cats.kernel.PartialOrder[Char]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-14080.9355" rx="127.9727" ry="26.7407"/>
<text text-anchor="start" x="11575.8883" y="-14084.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.PartialOrder[Char]</text>
<text text-anchor="middle" x="11658.3883" y="-14069.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.IsTuple[shapeless.HNil] -->
<g id="node407" class="node">
<title>shapeless.IsTuple[shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="20465.4585" cy="-14865.9355" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="20371.9585" y="-14869.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[shapeless.HNil]</text>
<text text-anchor="middle" x="20465.4585" y="-14854.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[shapeless.HNil]&#45;&gt;shapeless.IsTuple[shapeless.HNil] -->
<g id="edge1472" class="edge">
<title>cats.kernel.Eq[shapeless.HNil]&#45;&gt;shapeless.IsTuple[shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M20125.2336,-14865.9355C20182.8956,-14865.9355 20251.0558,-14865.9355 20311.1681,-14865.9355"/>
<polygon fill="#000000" stroke="#000000" points="20311.5164,-14869.4356 20321.5164,-14865.9355 20311.5163,-14862.4356 20311.5164,-14869.4356"/>
</g>
<!-- Integral[Either[Int,String]] -->
<g id="node206" class="node">
<title>Integral[Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-9692.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="3998.2721" y="-9696.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Either[Int,String]]</text>
<text text-anchor="middle" x="4070.7721" y="-9681.7355" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 6ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam -->
<g id="node207" class="node">
<title>(Any =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-40670.9355" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="375.0494" y="-40674.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-40659.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 1ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int)] -->
<g id="node208" class="node">
<title>io.circe.Encoder[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-22868.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="499.5494" y="-22872.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-22857.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int)]&#45;&gt;io.circe.KeyEncoder[Int] -->
<g id="edge993" class="edge">
<title>io.circe.Encoder[(Int, Int)]&#45;&gt;io.circe.KeyEncoder[Int]</title>
<path fill="none" stroke="#000000" d="M683.8925,-22863.8067C907.2281,-22853.565 1406.4217,-22830.6731 1633.3429,-22820.267"/>
<polygon fill="#000000" stroke="#000000" points="1633.7817,-22823.7507 1643.6108,-22819.7962 1633.461,-22816.758 1633.7817,-22823.7507"/>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int)]] -->
<g id="node1031" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-22958.9355" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="1588.604" y="-22962.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-22947.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int)]] -->
<g id="edge513" class="edge">
<title>io.circe.Encoder[(Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M676.4857,-22879.6932C792.549,-22891.407 985.5824,-22910.1717 1152.0988,-22922.9355 1274.4317,-22932.3127 1411.0108,-22940.6974 1522.6776,-22947.0107"/>
<polygon fill="#000000" stroke="#000000" points="1522.538,-22950.5083 1532.7191,-22947.5767 1522.9319,-22943.5194 1522.538,-22950.5083"/>
</g>
<!-- io.circe.Encoder[(Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1015" class="edge">
<title>io.circe.Encoder[(Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M653.5736,-22887.7746C780.0929,-22911.6085 1021.8476,-22934.5246 1144.0988,-22796.9355 1164.3578,-22774.1348 1137.5725,-21725.7551 1152.0988,-21698.9355 1265.5752,-21489.4273 1543.5212,-21371.7996 1676.4568,-21325.8051"/>
<polygon fill="#000000" stroke="#000000" points="1677.8306,-21329.0343 1686.1597,-21322.4863 1675.5651,-21322.411 1677.8306,-21329.0343"/>
</g>
<!-- ((Int, Int)) =&gt; Iterable[(Int, Int)] -->
<g id="node1616" class="node">
<title>((Int, Int)) =&gt; Iterable[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-22886.9355" rx="136.4432" ry="26.7407"/>
<text text-anchor="start" x="1661.104" y="-22890.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Int, Int)) =&gt; Iterable[(Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-22875.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int)]&#45;&gt;((Int, Int)) =&gt; Iterable[(Int, Int)] -->
<g id="edge339" class="edge">
<title>io.circe.Encoder[(Int, Int)]&#45;&gt;((Int, Int)) =&gt; Iterable[(Int, Int)]</title>
<path fill="none" stroke="#000000" d="M685.7603,-22870.6737C900.5634,-22873.9572 1365.7014,-22881.0672 1603.3766,-22884.7003"/>
<polygon fill="#000000" stroke="#000000" points="1603.4236,-22888.2014 1613.476,-22884.8547 1603.5307,-22881.2022 1603.4236,-22888.2014"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H] -->
<g id="node209" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-40742.9355" rx="370.5479" ry="26.7407"/>
<text text-anchor="start" x="318.0494" y="-40746.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H]</text>
<text text-anchor="middle" x="572.0494" y="-40731.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[io.circe.ACursor] -->
<g id="node210" class="node">
<title>shapeless.IsTuple[io.circe.ACursor]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-40814.9355" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="2833.4013" y="-40818.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.ACursor]</text>
<text text-anchor="middle" x="2931.4013" y="-40803.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc3] -->
<g id="node211" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc3]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-40886.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="445.5494" y="-40890.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc3]</text>
<text text-anchor="middle" x="572.0494" y="-40875.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc3]] -->
<g id="node1023" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc3]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-40886.9355" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="1552.604" y="-40890.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc3]]</text>
<text text-anchor="middle" x="1749.604" y="-40875.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc3]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc3]] -->
<g id="edge1426" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc3]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc3]]</title>
<path fill="none" stroke="#000000" d="M762.5526,-40886.9355C948.131,-40886.9355 1233.0868,-40886.9355 1449.2048,-40886.9355"/>
<polygon fill="#000000" stroke="#000000" points="1449.4435,-40890.4356 1459.4434,-40886.9355 1449.4434,-40883.4356 1449.4435,-40890.4356"/>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc7] -->
<g id="node212" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc7]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-40958.9355" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="446.0494" y="-40962.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc7]</text>
<text text-anchor="middle" x="572.0494" y="-40947.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc7]] -->
<g id="node1707" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc7]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-40958.9355" rx="314.8251" ry="26.7407"/>
<text text-anchor="start" x="1535.104" y="-40962.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc7]]</text>
<text text-anchor="middle" x="1749.604" y="-40947.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc7]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc7]] -->
<g id="edge854" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc7]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc7]]</title>
<path fill="none" stroke="#000000" d="M761.5708,-40958.9355C940.1781,-40958.9355 1211.4625,-40958.9355 1424.6075,-40958.9355"/>
<polygon fill="#000000" stroke="#000000" points="1424.7127,-40962.4356 1434.7127,-40958.9355 1424.7127,-40955.4356 1424.7127,-40962.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,String,Array[String]] -->
<g id="node213" class="node">
<title>scala.collection.generic.CanBuildFrom[F,String,Array[String]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-11106.9355" rx="254.6169" ry="26.7407"/>
<text text-anchor="start" x="4995.7166" y="-11110.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,String,Array[String]]</text>
<text text-anchor="middle" x="5167.7166" y="-11095.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[String] -->
<g id="node1047" class="node">
<title>scala.reflect.ClassTag[String]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-10926.9355" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="6141.2346" y="-10930.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[String]</text>
<text text-anchor="middle" x="6222.2346" y="-10915.7355" font-family="Times,serif" font-size="14.00" fill="#000000">292 times = 317ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,String,Array[String]]&#45;&gt;scala.reflect.ClassTag[String] -->
<g id="edge1279" class="edge">
<title>scala.collection.generic.CanBuildFrom[F,String,Array[String]]&#45;&gt;scala.reflect.ClassTag[String]</title>
<path fill="none" stroke="#000000" d="M5338.5884,-11087.0028C5443.5902,-11073.9828 5580.7018,-11055.5976 5701.5822,-11034.9355 5850.7792,-11009.4333 6022.4373,-10972.2959 6126.5836,-10948.8885"/>
<polygon fill="#000000" stroke="#000000" points="6127.4618,-10952.2784 6136.4486,-10946.6669 6125.9239,-10945.4495 6127.4618,-10952.2784"/>
</g>
<!-- shapeless.IsTuple[Boolean] -->
<g id="node1133" class="node">
<title>shapeless.IsTuple[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="14433.9626" cy="-17305.9355" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="14358.4626" y="-17309.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Boolean]</text>
<text text-anchor="middle" x="14433.9626" y="-17294.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 3ms</text>
</g>
<!-- cats.Eq[Boolean]&#45;&gt;shapeless.IsTuple[Boolean] -->
<g id="edge302" class="edge">
<title>cats.Eq[Boolean]&#45;&gt;shapeless.IsTuple[Boolean]</title>
<path fill="none" stroke="#000000" d="M11720.8589,-17150.8818C11807.0014,-17132.9235 11960.9754,-17116.6053 12043.7615,-17202.9355 12055.7742,-17215.4626 12039.1785,-17346.9813 12051.7615,-17358.9355 12135.2833,-17438.284 14010.6543,-17368.7234 14125.4422,-17358.9355 14197.5117,-17352.7902 14278.0327,-17338.7097 14338.7385,-17326.6058"/>
<polygon fill="#000000" stroke="#000000" points="14339.5745,-17330.0078 14348.6879,-17324.6044 14338.194,-17323.1453 14339.5745,-17330.0078"/>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc9] -->
<g id="node215" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc9]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-41030.9355" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="1608.604" y="-41034.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc9]</text>
<text text-anchor="middle" x="1749.604" y="-41019.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N] -->
<g id="node216" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-41102.9355" rx="451.6825" ry="26.7407"/>
<text text-anchor="start" x="260.5494" y="-41106.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N]</text>
<text text-anchor="middle" x="572.0494" y="-41091.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[List[Int]] -->
<g id="node217" class="node">
<title>org.scalacheck.Shrink[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-7372.9355" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="3983.2721" y="-7376.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[List[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-7361.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 28ms</text>
</g>
<!-- Integral[List[Int]] -->
<g id="node579" class="node">
<title>Integral[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-7778.9355" rx="79.8062" ry="26.7407"/>
<text text-anchor="start" x="5119.2166" y="-7782.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[List[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-7767.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- org.scalacheck.Shrink[List[Int]]&#45;&gt;Integral[List[Int]] -->
<g id="edge948" class="edge">
<title>org.scalacheck.Shrink[List[Int]]&#45;&gt;Integral[List[Int]]</title>
<path fill="none" stroke="#000000" d="M4195.4454,-7362.4665C4340.8808,-7353.3077 4568.754,-7349.4592 4625.8509,-7408.9355 4638.7049,-7422.3252 4621.0142,-7729.5294 4633.8509,-7742.9355 4693.14,-7804.8543 4944.4357,-7796.2031 5080.0607,-7786.554"/>
<polygon fill="#000000" stroke="#000000" points="5080.7006,-7790.0168 5090.4197,-7785.7991 5080.1917,-7783.0353 5080.7006,-7790.0168"/>
</g>
<!-- org.scalacheck.Shrink[List[Int]]&#45;&gt;List[Int] =&gt; Traversable[Int] -->
<g id="edge421" class="edge">
<title>org.scalacheck.Shrink[List[Int]]&#45;&gt;List[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M4195.586,-7362.6198C4340.8565,-7353.6488 4568.2593,-7350.0225 4625.8509,-7408.9355 4640.6215,-7424.0451 4619.0997,-7583.8071 4633.8509,-7598.9355 4688.4997,-7654.9819 4902.5711,-7652.8366 5042.4751,-7644.8279"/>
<polygon fill="#000000" stroke="#000000" points="5043.059,-7648.2996 5052.8354,-7644.2164 5042.6465,-7641.3118 5043.059,-7648.2996"/>
</g>
<!-- org.scalacheck.Shrink[List[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,List[Int]] -->
<g id="edge978" class="edge">
<title>org.scalacheck.Shrink[List[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,List[Int]]</title>
<path fill="none" stroke="#000000" d="M4195.3805,-7362.5291C4340.7508,-7353.433 4568.5587,-7349.6473 4625.8509,-7408.9355 4646.0896,-7429.8793 4613.6391,-7649.9658 4633.8509,-7670.9355 4682.8683,-7721.7911 4862.0315,-7724.9311 4999.4254,-7719.0987"/>
<polygon fill="#000000" stroke="#000000" points="4999.8241,-7722.5846 5009.6591,-7718.6446 4999.5137,-7715.5914 4999.8241,-7722.5846"/>
</g>
<!-- org.scalacheck.Shrink[List[Int]]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge116" class="edge">
<title>org.scalacheck.Shrink[List[Int]]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4195.2571,-7383.5093C4340.8097,-7392.8081 4569.107,-7396.8319 4625.8509,-7336.9355 4640.1033,-7321.8913 4619.6178,-6605.998 4633.8509,-6590.9355 4688.6258,-6532.9689 4910.0882,-6536.5655 5049.9975,-6545.2194"/>
<polygon fill="#000000" stroke="#000000" points="5050.142,-6548.7356 5060.3441,-6545.8777 5050.5865,-6541.7497 5050.142,-6548.7356"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node218" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-41174.9355" rx="358.5063" ry="26.7407"/>
<text text-anchor="start" x="326.5494" y="-41178.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-41163.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node565" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-41210.9355" rx="303.1977" ry="26.7407"/>
<text text-anchor="start" x="1543.104" y="-41214.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-41199.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1024" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M904.3749,-41185.0953C1076.5873,-41190.3602 1285.1799,-41196.7373 1452.0545,-41201.8389"/>
<polygon fill="#000000" stroke="#000000" points="1452.3782,-41205.3504 1462.4806,-41202.1577 1452.5922,-41198.3536 1452.3782,-41205.3504"/>
</g>
<!-- Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1315" class="node">
<title>Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-41138.9355" rx="312.5824" ry="26.7407"/>
<text text-anchor="start" x="1536.604" y="-41142.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-41127.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge33" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M904.3749,-41164.7757C1074.0891,-41159.5873 1279.1355,-41153.3186 1444.7659,-41148.255"/>
<polygon fill="#000000" stroke="#000000" points="1445.2286,-41151.7426 1455.1169,-41147.9386 1445.0146,-41144.7459 1445.2286,-41151.7426"/>
</g>
<!-- org.scalacheck.Shrink[Float] -->
<g id="node219" class="node">
<title>org.scalacheck.Shrink[Float]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-41354.9355" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="493.5494" y="-41358.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Float]</text>
<text text-anchor="middle" x="572.0494" y="-41343.7355" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 34ms</text>
</g>
<!-- Fractional[Float] -->
<g id="node1302" class="node">
<title>Fractional[Float]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-41354.9355" rx="76.2353" ry="26.7407"/>
<text text-anchor="start" x="1703.604" y="-41358.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Float]</text>
<text text-anchor="middle" x="1749.604" y="-41343.7355" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 9ms</text>
</g>
<!-- org.scalacheck.Shrink[Float]&#45;&gt;Fractional[Float] -->
<g id="edge1352" class="edge">
<title>org.scalacheck.Shrink[Float]&#45;&gt;Fractional[Float]</title>
<path fill="none" stroke="#000000" d="M694.4599,-41354.9355C933.2693,-41354.9355 1456.0033,-41354.9355 1662.8556,-41354.9355"/>
<polygon fill="#000000" stroke="#000000" points="1663.0588,-41358.4356 1673.0588,-41354.9355 1663.0587,-41351.4356 1663.0588,-41358.4356"/>
</g>
<!-- Integral[Float] -->
<g id="node1562" class="node">
<title>Integral[Float]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-41282.9355" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="1706.104" y="-41286.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Float]</text>
<text text-anchor="middle" x="1749.604" y="-41271.7355" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 8ms</text>
</g>
<!-- org.scalacheck.Shrink[Float]&#45;&gt;Integral[Float] -->
<g id="edge532" class="edge">
<title>org.scalacheck.Shrink[Float]&#45;&gt;Integral[Float]</title>
<path fill="none" stroke="#000000" d="M689.8054,-41347.5647C806.9944,-41340.244 991.9721,-41328.7284 1152.0988,-41318.9355 1336.1078,-41307.6821 1552.0101,-41294.7382 1667.2463,-41287.8505"/>
<polygon fill="#000000" stroke="#000000" points="1667.6281,-41291.334 1677.4014,-41287.2436 1667.2104,-41284.3465 1667.6281,-41291.334"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C) =&gt; ?ASSERTION) -->
<g id="node220" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-41426.9355" rx="257.2738" ry="26.7407"/>
<text text-anchor="start" x="398.0494" y="-41430.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-41415.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node221" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-17784.9355" rx="280.943" ry="26.7407"/>
<text text-anchor="start" x="9825.5427" y="-17788.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="10016.0427" y="-17773.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 119ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge1084" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10038.6255,-17758.0951C10114.236,-17666.2825 10358.5267,-17353.417 10443.8423,-17045.9355 10447.4299,-17033.0055 10442.5276,-16572.5944 10451.8423,-16562.9355 10514.6498,-16497.8078 11202.045,-16584.9061 11265.0151,-16519.9355 11279.363,-16505.1318 11258.9684,-16164.0255 11273.0151,-16148.9355 11349.1723,-16067.1217 11489.0627,-16076.4282 11577.7104,-16092.9829"/>
<polygon fill="#000000" stroke="#000000" points="11577.2414,-16096.4571 11587.7248,-16094.9244 11578.5738,-16089.585 11577.2414,-16096.4571"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node450" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-17784.9355" rx="322.3814" ry="26.7407"/>
<text text-anchor="start" x="10638.4287" y="-17788.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="10858.4287" y="-17773.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge1214" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M10296.8377,-17784.9355C10370.1134,-17784.9355 10449.7907,-17784.9355 10525.4865,-17784.9355"/>
<polygon fill="#000000" stroke="#000000" points="10525.6572,-17788.4356 10535.6572,-17784.9355 10525.6572,-17781.4356 10525.6572,-17788.4356"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge1442" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M10209.9931,-17804.4029C10285.406,-17811.0684 10372.576,-17817.6671 10451.8423,-17820.9355 10542.1181,-17824.6579 11194.1865,-17877.0328 11265.0151,-17820.9355 11277.1844,-17811.2973 11261.8134,-17797.6831 11273.0151,-17786.9355 11341.7483,-17720.9891 11450.3555,-17705.0037 11534.7793,-17704.0771"/>
<polygon fill="#000000" stroke="#000000" points="11534.9649,-17707.5765 11544.9508,-17704.0364 11534.9368,-17700.5765 11534.9649,-17707.5765"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node619" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="10858.4287" cy="-17238.9355" rx="406.6728" ry="26.7407"/>
<text text-anchor="start" x="10578.9287" y="-17242.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="10858.4287" y="-17227.7355" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 738ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge457" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M10029.3383,-17757.7897C10074.2566,-17669.4468 10230.0554,-17389.2752 10451.8423,-17274.9355 10466.1864,-17267.5406 10481.1961,-17261.1764 10496.6394,-17255.7182"/>
<polygon fill="#000000" stroke="#000000" points="10497.9648,-17258.9645 10506.309,-17252.4356 10495.7146,-17252.336 10497.9648,-17258.9645"/>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1977" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-17894.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="10658.4287" y="-17898.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="10858.4287" y="-17883.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge164" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M10152.178,-17808.5174C10237.9784,-17822.8765 10351.1847,-17840.9025 10451.8423,-17853.9355 10512.3256,-17861.7669 10578.0354,-17868.9619 10638.6414,-17875.0649"/>
<polygon fill="#000000" stroke="#000000" points="10638.4149,-17878.5596 10648.714,-17876.0739 10639.1127,-17871.5945 10638.4149,-17878.5596"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node222" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-1422.9355" rx="432.0845" ry="26.7407"/>
<text text-anchor="start" x="3773.2721" y="-1426.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-1411.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 60ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node827" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-1422.9355" rx="421.3713" ry="26.7407"/>
<text text-anchor="start" x="4877.7166" y="-1426.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-1411.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge61" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4503.1325,-1422.9355C4579.5672,-1422.9355 4659.1549,-1422.9355 4735.5834,-1422.9355"/>
<polygon fill="#000000" stroke="#000000" points="4735.8582,-1426.4356 4745.8581,-1422.9355 4735.8581,-1419.4356 4735.8582,-1426.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1493" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4453.6401,-1410.4822C4531.783,-1416.2645 4598.5466,-1430.2625 4625.8509,-1458.9355 4645.1625,-1479.2151 4614.5654,-1942.6312 4633.8509,-1962.9355 4749.1247,-2084.2992 4966.6051,-2052.6546 5085.3101,-2023.2668"/>
<polygon fill="#000000" stroke="#000000" points="5086.2451,-2026.6406 5095.0828,-2020.7971 5084.53,-2019.854 5086.2451,-2026.6406"/>
</g>
<!-- Integral[(Int,)] -->
<g id="node223" class="node">
<title>Integral[(Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-41570.9355" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="1709.604" y="-41574.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int,)]</text>
<text text-anchor="middle" x="1749.604" y="-41559.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.Eq[(Int, String, Char)] -->
<g id="node224" class="node">
<title>cats.Eq[(Int, String, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-14626.9355" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="10784.4287" y="-14630.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[(Int, String, Char)]</text>
<text text-anchor="middle" x="10858.4287" y="-14615.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.Order[Char] -->
<g id="edge705" class="edge">
<title>cats.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.Order[Char]</title>
<path fill="none" stroke="#000000" d="M10972.1938,-14621.5314C11124.9431,-14614.2755 11394.6416,-14601.4641 11546.4512,-14594.2528"/>
<polygon fill="#000000" stroke="#000000" points="11546.9033,-14597.7354 11556.726,-14593.7648 11546.5711,-14590.7433 11546.9033,-14597.7354"/>
</g>
<!-- cats.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.Order[String] -->
<g id="edge1462" class="edge">
<title>cats.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.Order[String]</title>
<path fill="none" stroke="#000000" d="M10974.5236,-14626.2029C11265.7043,-14624.9308 12006.5125,-14625.4158 12043.7615,-14662.9355 12057.3079,-14676.5805 12039.5204,-14994.1083 12051.7615,-15008.9355 12111.7216,-15081.5638 12221.2537,-15097.1359 12304.5856,-15097.0575"/>
<polygon fill="#000000" stroke="#000000" points="12304.6429,-15100.5573 12314.6131,-15096.9732 12304.5839,-15093.5575 12304.6429,-15100.5573"/>
</g>
<!-- cats.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge858" class="edge">
<title>cats.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10935.5804,-14606.8064C11028.6478,-14587.7153 11182.8159,-14573.6592 11265.0151,-14662.9355 11277.9601,-14676.9952 11260.7992,-16024.238 11273.0151,-16038.9355 11341.7812,-16121.6716 11472.3472,-16130.4933 11562.3044,-16125.1076"/>
<polygon fill="#000000" stroke="#000000" points="11562.774,-16128.5841 11572.5183,-16124.425 11562.3071,-16121.5996 11562.774,-16128.5841"/>
</g>
<!-- org.scalacheck.Arbitrary[Float] -->
<g id="node225" class="node">
<title>org.scalacheck.Arbitrary[Float]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-41642.9355" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="486.0494" y="-41646.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Float]</text>
<text text-anchor="middle" x="572.0494" y="-41631.7355" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 25ms</text>
</g>
<!-- scala.reflect.ClassTag[Float] -->
<g id="node1735" class="node">
<title>scala.reflect.ClassTag[Float]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-41642.9355" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="1671.104" y="-41646.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Float]</text>
<text text-anchor="middle" x="1749.604" y="-41631.7355" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Float]&#45;&gt;scala.reflect.ClassTag[Float] -->
<g id="edge1570" class="edge">
<title>org.scalacheck.Arbitrary[Float]&#45;&gt;scala.reflect.ClassTag[Float]</title>
<path fill="none" stroke="#000000" d="M705.1261,-41642.9355C931.8365,-41642.9355 1390.3609,-41642.9355 1616.8506,-41642.9355"/>
<polygon fill="#000000" stroke="#000000" points="1617.1275,-41646.4356 1627.1275,-41642.9355 1617.1275,-41639.4356 1617.1275,-41646.4356"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc7] -->
<g id="node226" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc7]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-41750.9355" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="430.5494" y="-41754.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc7]</text>
<text text-anchor="middle" x="572.0494" y="-41739.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc7] -->
<g id="node830" class="node">
<title>Fractional[ProductCodecSuite.this.Cc7]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-41786.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="1641.104" y="-41790.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc7]</text>
<text text-anchor="middle" x="1749.604" y="-41775.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc7]&#45;&gt;Fractional[ProductCodecSuite.this.Cc7] -->
<g id="edge182" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc7]&#45;&gt;Fractional[ProductCodecSuite.this.Cc7]</title>
<path fill="none" stroke="#000000" d="M777.8371,-41757.2269C1004.4907,-41764.1561 1364.9051,-41775.1746 1577.2555,-41781.6665"/>
<polygon fill="#000000" stroke="#000000" points="1577.152,-41785.1649 1587.2544,-41781.9722 1577.366,-41778.1682 1577.152,-41785.1649"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc7] -->
<g id="node1584" class="node">
<title>Integral[ProductCodecSuite.this.Cc7]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-41714.9355" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="1647.104" y="-41718.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc7]</text>
<text text-anchor="middle" x="1749.604" y="-41703.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc7]&#45;&gt;Integral[ProductCodecSuite.this.Cc7] -->
<g id="edge1399" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc7]&#45;&gt;Integral[ProductCodecSuite.this.Cc7]</title>
<path fill="none" stroke="#000000" d="M777.8371,-41744.6442C1007.2972,-41737.6292 1373.8512,-41726.423 1585.075,-41719.9655"/>
<polygon fill="#000000" stroke="#000000" points="1585.4381,-41723.4561 1595.3265,-41719.6521 1585.2242,-41716.4594 1585.4381,-41723.4561"/>
</g>
<!-- Integral[Short] -->
<g id="node227" class="node">
<title>Integral[Short]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-15390.9355" rx="68.6788" ry="26.7407"/>
<text text-anchor="start" x="6181.7346" y="-15394.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Short]</text>
<text text-anchor="middle" x="6222.2346" y="-15379.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- ShowErrorSuite.this.PropertyCheckConfigurable -->
<g id="node228" class="node">
<title>ShowErrorSuite.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-41822.9355" rx="200.2225" ry="26.7407"/>
<text text-anchor="start" x="438.5494" y="-41826.7355" font-family="Times,serif" font-size="14.00" fill="#000000">ShowErrorSuite.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-41811.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(String, io.circe.Json)],(String, io.circe.Json),That] -->
<g id="node229" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(String, io.circe.Json)],(String, io.circe.Json),That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-41894.9355" rx="379.0185" ry="26.7407"/>
<text text-anchor="start" x="312.0494" y="-41898.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(String, io.circe.Json)],(String, io.circe.Json),That]</text>
<text text-anchor="middle" x="572.0494" y="-41883.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc1] -->
<g id="node231" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc1]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-41966.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="445.5494" y="-41970.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc1]</text>
<text text-anchor="middle" x="572.0494" y="-41955.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc1]] -->
<g id="node1069" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc1]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-41966.9355" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="1552.604" y="-41970.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc1]]</text>
<text text-anchor="middle" x="1749.604" y="-41955.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc1]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc1]] -->
<g id="edge926" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc1]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc1]]</title>
<path fill="none" stroke="#000000" d="M762.5526,-41966.9355C948.131,-41966.9355 1233.0868,-41966.9355 1449.2048,-41966.9355"/>
<polygon fill="#000000" stroke="#000000" points="1449.4435,-41970.4356 1459.4434,-41966.9355 1449.4434,-41963.4356 1449.4435,-41970.4356"/>
</g>
<!-- io.circe.Encoder[cats.data.NonEmptyStream[Int]] -->
<g id="node232" class="node">
<title>io.circe.Encoder[cats.data.NonEmptyStream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-22670.9355" rx="204.2078" ry="26.7407"/>
<text text-anchor="start" x="435.5494" y="-22674.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[cats.data.NonEmptyStream[Int]]</text>
<text text-anchor="middle" x="572.0494" y="-22659.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- Stream[Int] =&gt; Iterable[Int] -->
<g id="node592" class="node">
<title>Stream[Int] =&gt; Iterable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-22742.9355" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="1673.104" y="-22746.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Stream[Int] =&gt; Iterable[Int]</text>
<text text-anchor="middle" x="1749.604" y="-22731.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[cats.data.NonEmptyStream[Int]]&#45;&gt;Stream[Int] =&gt; Iterable[Int] -->
<g id="edge884" class="edge">
<title>io.circe.Encoder[cats.data.NonEmptyStream[Int]]&#45;&gt;Stream[Int] =&gt; Iterable[Int]</title>
<path fill="none" stroke="#000000" d="M756.8658,-22682.4913C870.8051,-22689.5942 1019.9187,-22698.8518 1152.0988,-22706.9355 1315.0386,-22716.9005 1502.9862,-22728.1908 1623.902,-22735.4281"/>
<polygon fill="#000000" stroke="#000000" points="1623.7475,-22738.925 1633.9387,-22736.0287 1624.1657,-22731.9375 1623.7475,-22738.925"/>
</g>
<!-- io.circe.Encoder[cats.data.NonEmptyStream[Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge391" class="edge">
<title>io.circe.Encoder[cats.data.NonEmptyStream[Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M718.7641,-22689.6878C852.0207,-22697.5539 1042.7598,-22684.0514 1144.0988,-22562.9355 1159.5005,-22544.5281 1140.6472,-21720.0285 1152.0988,-21698.9355 1265.7818,-21489.5393 1543.6254,-21371.8561 1676.4962,-21325.8264"/>
<polygon fill="#000000" stroke="#000000" points="1677.8678,-21329.0563 1686.1943,-21322.505 1675.5997,-21322.434 1677.8678,-21329.0563"/>
</g>
<!-- cats.data.NonEmptyStream[Int] =&gt; Iterable[Int] -->
<g id="node1908" class="node">
<title>cats.data.NonEmptyStream[Int] =&gt; Iterable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-22670.9355" rx="197.9798" ry="26.7407"/>
<text text-anchor="start" x="1617.604" y="-22674.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.data.NonEmptyStream[Int] =&gt; Iterable[Int]</text>
<text text-anchor="middle" x="1749.604" y="-22659.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Encoder[cats.data.NonEmptyStream[Int]]&#45;&gt;cats.data.NonEmptyStream[Int] =&gt; Iterable[Int] -->
<g id="edge615" class="edge">
<title>io.circe.Encoder[cats.data.NonEmptyStream[Int]]&#45;&gt;cats.data.NonEmptyStream[Int] =&gt; Iterable[Int]</title>
<path fill="none" stroke="#000000" d="M776.4912,-22670.9355C990.7586,-22670.9355 1325.6305,-22670.9355 1541.3246,-22670.9355"/>
<polygon fill="#000000" stroke="#000000" points="1541.5048,-22674.4356 1551.5047,-22670.9355 1541.5047,-22667.4356 1541.5048,-22674.4356"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc5] -->
<g id="node233" class="node">
<title>Integral[ProductCodecSuite.this.Cc5]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-42110.9355" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="1647.104" y="-42114.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc5]</text>
<text text-anchor="middle" x="1749.604" y="-42099.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Order[io.circe.JsonObject] -->
<g id="node234" class="node">
<title>cats.kernel.Order[io.circe.JsonObject]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-19680.9355" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="12311.9214" y="-19684.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[io.circe.JsonObject]</text>
<text text-anchor="middle" x="12415.9214" y="-19669.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.Decoder[(Int, Int, Int)]] -->
<g id="node235" class="node">
<title>cats.kernel.Eq[io.circe.Decoder[(Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-16222.9355" rx="191.752" ry="26.7407"/>
<text text-anchor="start" x="9888.5427" y="-16226.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.Decoder[(Int, Int, Int)]]</text>
<text text-anchor="middle" x="10016.0427" y="-16211.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 37ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.Decoder[(Int, Int, Int)]]&#45;&gt;cats.kernel.Eq[(Int, Int, Int)] -->
<g id="edge918" class="edge">
<title>cats.kernel.Eq[io.circe.Decoder[(Int, Int, Int)]]&#45;&gt;cats.kernel.Eq[(Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M10194.8788,-16213.1764C10271.775,-16207.6152 10362.5001,-16199.2302 10443.8423,-16186.9355 10557.3842,-16169.774 10686.3141,-16139.7871 10769.8277,-16118.9476"/>
<polygon fill="#000000" stroke="#000000" points="10770.6807,-16122.3422 10779.5302,-16116.5167 10768.9793,-16115.5521 10770.6807,-16122.3422"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; String -->
<g id="node236" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-42164.9355" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="463.0494" y="-42168.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; String</text>
<text text-anchor="middle" x="572.0494" y="-42153.7355" font-family="Times,serif" font-size="14.00" fill="#000000">21 times = 7ms</text>
</g>
<!-- String(&#39;Decoder[Enumeration]&#39;) =&gt; ?{def should: ?} -->
<g id="node237" class="node">
<title>String(&#39;Decoder[Enumeration]&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-31886.9355" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="429.0494" y="-31890.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Decoder[Enumeration]&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-31875.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- String(&#39;Decoder[Enumeration]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge810" class="edge">
<title>String(&#39;Decoder[Enumeration]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M761.3005,-31899.4268C905.8572,-31904.6227 1089.2996,-31900.4037 1144.0988,-31850.9355 1429.2695,-31593.507 1712.2186,-28619.8071 1746.2001,-28252.1465"/>
<polygon fill="#000000" stroke="#000000" points="1749.6995,-28252.3137 1747.1326,-28242.0345 1742.729,-28251.6708 1749.6995,-28252.3137"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc1] -->
<g id="node238" class="node">
<title>Integral[ProductCodecSuite.this.Cc1]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-42290.9355" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="1647.104" y="-42294.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc1]</text>
<text text-anchor="middle" x="1749.604" y="-42279.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- String(&#39;b&#39;) =&gt; ?{def :=: ?} -->
<g id="node239" class="node">
<title>String(&#39;b&#39;) =&gt; ?{def :=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-42308.9355" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="500.0494" y="-42312.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;b&#39;) =&gt; ?{def :=: ?}</text>
<text text-anchor="middle" x="572.0494" y="-42297.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Long] -->
<g id="node240" class="node">
<title>org.scalacheck.Shrink[Long]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-9510.9355" rx="123.0732" ry="26.7407"/>
<text text-anchor="start" x="5088.7166" y="-9514.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Long]</text>
<text text-anchor="middle" x="5167.7166" y="-9499.7355" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 68ms</text>
</g>
<!-- org.scalacheck.Shrink[Long]&#45;&gt;Fractional[Long] -->
<g id="edge15" class="edge">
<title>org.scalacheck.Shrink[Long]&#45;&gt;Fractional[Long]</title>
<path fill="none" stroke="#000000" d="M5285.4102,-9518.8142C5393.5865,-9526.0694 5558.3921,-9537.1573 5701.5822,-9546.9355 5854.459,-9557.3752 6032.5709,-9569.7326 6135.8582,-9576.9179"/>
<polygon fill="#000000" stroke="#000000" points="6135.7051,-9580.4157 6145.9239,-9577.6183 6136.191,-9573.4325 6135.7051,-9580.4157"/>
</g>
<!-- org.scalacheck.Shrink[Long]&#45;&gt;Integral[Long] -->
<g id="edge63" class="edge">
<title>org.scalacheck.Shrink[Long]&#45;&gt;Integral[Long]</title>
<path fill="none" stroke="#000000" d="M5291.0059,-9510.9355C5506.5141,-9510.9355 5946.6234,-9510.9355 6134.2891,-9510.9355"/>
<polygon fill="#000000" stroke="#000000" points="6134.3883,-9514.4356 6144.3883,-9510.9355 6134.3882,-9507.4356 6134.3883,-9514.4356"/>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc11] -->
<g id="node241" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc11]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-42380.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="1617.104" y="-42384.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc11]</text>
<text text-anchor="middle" x="1749.604" y="-42369.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.KeyDecoder[Int]] -->
<g id="node242" class="node">
<title>cats.kernel.Eq[io.circe.KeyDecoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-15380.9355" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="19225.6796" y="-15384.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.KeyDecoder[Int]]</text>
<text text-anchor="middle" x="19337.1796" y="-15369.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 18ms</text>
</g>
<!-- shapeless.IsTuple[io.circe.KeyDecoder[Int]] -->
<g id="node300" class="node">
<title>shapeless.IsTuple[io.circe.KeyDecoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19994.3036" cy="-15380.9355" rx="182.3671" ry="26.7407"/>
<text text-anchor="start" x="19873.3036" y="-15384.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.KeyDecoder[Int]]</text>
<text text-anchor="middle" x="19994.3036" y="-15369.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.KeyDecoder[Int]]&#45;&gt;shapeless.IsTuple[io.circe.KeyDecoder[Int]] -->
<g id="edge281" class="edge">
<title>cats.kernel.Eq[io.circe.KeyDecoder[Int]]&#45;&gt;shapeless.IsTuple[io.circe.KeyDecoder[Int]]</title>
<path fill="none" stroke="#000000" d="M19506.4053,-15380.9355C19596.6644,-15380.9355 19708.0906,-15380.9355 19801.6617,-15380.9355"/>
<polygon fill="#000000" stroke="#000000" points="19801.8171,-15384.4356 19811.8171,-15380.9355 19801.817,-15377.4356 19801.8171,-15384.4356"/>
</g>
<!-- cats.kernel.Eq[io.circe.KeyDecoder[Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge885" class="edge">
<title>cats.kernel.Eq[io.circe.KeyDecoder[Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M19468.9383,-15364.0978C19545.1022,-15361.4979 19638.6514,-15371.3384 19704.8751,-15421.9355 19937.7859,-15599.8874 19983.6039,-15993.6568 19992.3227,-16115.9599"/>
<polygon fill="#000000" stroke="#000000" points="19988.8314,-16116.2071 19992.9943,-16125.9498 19995.8156,-16115.7376 19988.8314,-16116.2071"/>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node243" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-21230.9355" rx="382.5895" ry="26.7407"/>
<text text-anchor="start" x="1487.104" y="-21234.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-21219.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.util.Either[Int,String]] -->
<g id="node244" class="node">
<title>org.scalacheck.Arbitrary[scala.util.Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-9112.9355" rx="216.2494" ry="26.7407"/>
<text text-anchor="start" x="2786.4013" y="-9116.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.util.Either[Int,String]]</text>
<text text-anchor="middle" x="2931.4013" y="-9101.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(Int, String),scala.util.Either[Int,String]] -->
<g id="node462" class="node">
<title>org.scalacheck.util.Buildable[(Int, String),scala.util.Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-9112.9355" rx="281.357" ry="26.7407"/>
<text text-anchor="start" x="3879.7721" y="-9116.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(Int, String),scala.util.Either[Int,String]]</text>
<text text-anchor="middle" x="4070.7721" y="-9101.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.util.Either[Int,String]]&#45;&gt;org.scalacheck.util.Buildable[(Int, String),scala.util.Either[Int,String]] -->
<g id="edge582" class="edge">
<title>org.scalacheck.Arbitrary[scala.util.Either[Int,String]]&#45;&gt;org.scalacheck.util.Buildable[(Int, String),scala.util.Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M3148.0542,-9112.9355C3326.8248,-9112.9355 3582.1562,-9112.9355 3778.9255,-9112.9355"/>
<polygon fill="#000000" stroke="#000000" points="3779.1354,-9116.4356 3789.1353,-9112.9355 3779.1353,-9109.4356 3779.1354,-9116.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.util.Either[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge1126" class="edge">
<title>org.scalacheck.Arbitrary[scala.util.Either[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M3031.3386,-9136.8643C3166.4495,-9175.1265 3402.5533,-9264.2433 3507.6933,-9438.9355 3516.0044,-9452.7446 3504.1406,-9717.6972 3515.6933,-9728.9355 3569.2612,-9781.0461 4630.945,-9748.2924 5023.4677,-9734.3282"/>
<polygon fill="#000000" stroke="#000000" points="5023.5977,-9737.8259 5033.4665,-9733.9714 5023.348,-9730.8304 5023.5977,-9737.8259"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, String)] -->
<g id="node1453" class="node">
<title>org.scalacheck.Arbitrary[(Int, String)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-10018.9355" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="3966.7721" y="-10022.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, String)]</text>
<text text-anchor="middle" x="4070.7721" y="-10007.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.util.Either[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[(Int, String)] -->
<g id="edge34" class="edge">
<title>org.scalacheck.Arbitrary[scala.util.Either[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[(Int, String)]</title>
<path fill="none" stroke="#000000" d="M3031.944,-9136.7543C3167.4749,-9174.8383 3403.7533,-9263.6937 3507.6933,-9438.9355 3515.4029,-9451.9339 3505.2778,-9971.9851 3515.6933,-9982.9355 3568.9081,-10038.8833 3772.2305,-10038.9818 3917.3648,-10031.1737"/>
<polygon fill="#000000" stroke="#000000" points="3917.9208,-10034.6483 3927.711,-10030.5986 3917.5322,-10027.6591 3917.9208,-10034.6483"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.util.Either[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1466" class="edge">
<title>org.scalacheck.Arbitrary[scala.util.Either[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M3039.4913,-9136.2659C3171.9609,-9157.7597 3392.9218,-9169.2182 3507.6933,-9038.9355 3522.0086,-9022.6855 3500.6833,-2817.5462 3515.6933,-2801.9355 3601.2582,-2712.9463 4517.2368,-2815.616 4625.8509,-2756.9355 4933.8204,-2590.5502 5108.309,-2163.8662 5154.9322,-2035.8105"/>
<polygon fill="#000000" stroke="#000000" points="5158.3429,-2036.6693 5158.4388,-2026.0749 5151.7571,-2034.2971 5158.3429,-2036.6693"/>
</g>
<!-- scala.reflect.ClassTag[scala.util.Either[Int,String]] -->
<g id="node1736" class="node">
<title>scala.reflect.ClassTag[scala.util.Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-9040.9355" rx="205.5364" ry="26.7407"/>
<text text-anchor="start" x="3933.2721" y="-9044.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.util.Either[Int,String]]</text>
<text text-anchor="middle" x="4070.7721" y="-9029.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.util.Either[Int,String]]&#45;&gt;scala.reflect.ClassTag[scala.util.Either[Int,String]] -->
<g id="edge1298" class="edge">
<title>org.scalacheck.Arbitrary[scala.util.Either[Int,String]]&#45;&gt;scala.reflect.ClassTag[scala.util.Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M3124.3576,-9100.7421C3333.4081,-9087.5316 3665.1325,-9066.569 3875.1997,-9053.2943"/>
<polygon fill="#000000" stroke="#000000" points="3875.6623,-9056.7722 3885.4216,-9052.6484 3875.2208,-9049.7861 3875.6623,-9056.7722"/>
</g>
<!-- String(&#39;fromDouble&#39;) =&gt; ?{def should: ?} -->
<g id="node245" class="node">
<title>String(&#39;fromDouble&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-31814.9355" rx="172.5681" ry="26.7407"/>
<text text-anchor="start" x="458.0494" y="-31818.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;fromDouble&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-31803.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- String(&#39;fromDouble&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge242" class="edge">
<title>String(&#39;fromDouble&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M729.1258,-31826.0571C877.2344,-31832.9296 1085.0577,-31832.0579 1144.0988,-31778.9355 1702.2715,-31276.718 1746.0036,-28599.8741 1749.3356,-28252.1703"/>
<polygon fill="#000000" stroke="#000000" points="1752.8358,-28252.1498 1749.4266,-28242.1185 1745.8361,-28252.0863 1752.8358,-28252.1498"/>
</g>
<!-- cats.ApplicativeError[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="node246" class="node">
<title>cats.ApplicativeError[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-42452.9355" rx="416.4718" ry="26.7407"/>
<text text-anchor="start" x="285.5494" y="-42456.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.ApplicativeError[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure]]</text>
<text text-anchor="middle" x="572.0494" y="-42441.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node247" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-702.9355" rx="389.7317" ry="26.7407"/>
<text text-anchor="start" x="4900.2166" y="-706.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-691.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam -->
<g id="node248" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-42524.9355" rx="329.5235" ry="26.7407"/>
<text text-anchor="start" x="347.0494" y="-42528.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-42513.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[(String, Int)] -->
<g id="node249" class="node">
<title>scala.reflect.ClassTag[(String, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-5642.9355" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="5071.2166" y="-5646.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(String, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-5631.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; ((?A, ?B) =&gt; ?ASSERTION) -->
<g id="node250" class="node">
<title>(Any =&gt; Nothing) =&gt; ((?A, ?B) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-42596.9355" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="429.0494" y="-42600.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; ((?A, ?B) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-42585.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Integral[Boolean] -->
<g id="node251" class="node">
<title>Integral[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-6986.9355" rx="79.8062" ry="26.7407"/>
<text text-anchor="start" x="6173.7346" y="-6990.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Boolean]</text>
<text text-anchor="middle" x="6222.2346" y="-6975.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- String(&#39;A JSON array&#39;) =&gt; ?{def should: ?} -->
<g id="node252" class="node">
<title>String(&#39;A JSON array&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-31742.9355" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="453.0494" y="-31746.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;A JSON array&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-31731.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;A JSON array&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge613" class="edge">
<title>String(&#39;A JSON array&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M735.0325,-31754.2833C882.6728,-31760.8208 1085.7546,-31759.2516 1144.0988,-31706.9355 1691.7332,-31215.8833 1744.6005,-28596.1869 1749.1955,-28252.2109"/>
<polygon fill="#000000" stroke="#000000" points="1752.6973,-28252.0806 1749.326,-28242.0365 1745.6979,-28251.9907 1752.6973,-28252.0806"/>
</g>
<!-- cats.kernel.Order[Vector[io.circe.Json]] -->
<g id="node306" class="node">
<title>cats.kernel.Order[Vector[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-16704.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="12307.4214" y="-16708.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[Vector[io.circe.Json]]</text>
<text text-anchor="middle" x="12415.9214" y="-16693.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- cats.Eq[Option[Vector[io.circe.Json]]]&#45;&gt;cats.kernel.Order[Vector[io.circe.Json]] -->
<g id="edge1365" class="edge">
<title>cats.Eq[Option[Vector[io.circe.Json]]]&#45;&gt;cats.kernel.Order[Vector[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M11751.5178,-16972.7842C11840.0381,-16987.4394 11970.2484,-16992.0031 12043.7615,-16914.9355 12057.1199,-16900.9312 12038.4408,-16754.9758 12051.7615,-16740.9355 12115.6689,-16673.5755 12225.3004,-16671.3951 12307.6168,-16681.9259"/>
<polygon fill="#000000" stroke="#000000" points="12307.3886,-16685.427 12317.769,-16683.3062 12308.3316,-16678.4908 12307.3886,-16685.427"/>
</g>
<!-- cats.kernel.PartialOrder[Vector[io.circe.Json]] -->
<g id="node1148" class="node">
<title>cats.kernel.PartialOrder[Vector[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-16776.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="12289.4214" y="-16780.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.PartialOrder[Vector[io.circe.Json]]</text>
<text text-anchor="middle" x="12415.9214" y="-16765.7355" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 42ms</text>
</g>
<!-- cats.Eq[Option[Vector[io.circe.Json]]]&#45;&gt;cats.kernel.PartialOrder[Vector[io.circe.Json]] -->
<g id="edge953" class="edge">
<title>cats.Eq[Option[Vector[io.circe.Json]]]&#45;&gt;cats.kernel.PartialOrder[Vector[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M11753.0725,-16972.5984C11841.1423,-16986.5892 11969.6019,-16990.2065 12043.7615,-16914.9355 12059.7184,-16898.7395 12035.8482,-16829.1746 12051.7615,-16812.9355 12114.3379,-16749.0779 12218.1644,-16744.5499 12298.9773,-16753.4189"/>
<polygon fill="#000000" stroke="#000000" points="12298.8738,-16756.9309 12309.2151,-16754.6269 12299.6941,-16749.9792 12298.8738,-16756.9309"/>
</g>
<!-- cats.kernel.Eq[Vector[io.circe.Json]] -->
<g id="node1496" class="node">
<title>cats.kernel.Eq[Vector[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-16632.9355" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="12315.4214" y="-16636.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Vector[io.circe.Json]]</text>
<text text-anchor="middle" x="12415.9214" y="-16621.7355" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 83ms</text>
</g>
<!-- cats.Eq[Option[Vector[io.circe.Json]]]&#45;&gt;cats.kernel.Eq[Vector[io.circe.Json]] -->
<g id="edge1285" class="edge">
<title>cats.Eq[Option[Vector[io.circe.Json]]]&#45;&gt;cats.kernel.Eq[Vector[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M11750.9057,-16972.8578C11839.6108,-16987.7839 11970.5375,-16992.7398 12043.7615,-16914.9355 12062.5042,-16895.0204 12033.0725,-16688.9011 12051.7615,-16668.9355 12116.3225,-16599.9645 12228.7543,-16598.974 12311.6584,-16610.2593"/>
<polygon fill="#000000" stroke="#000000" points="12311.2204,-16613.7323 12321.6171,-16611.6927 12312.2177,-16606.8037 12311.2204,-16613.7323"/>
</g>
<!-- cats.Eq[scala.collection.immutable.Set[Int]] -->
<g id="node254" class="node">
<title>cats.Eq[scala.collection.immutable.Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-42740.9355" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="451.5494" y="-42744.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[scala.collection.immutable.Set[Int]]</text>
<text text-anchor="middle" x="572.0494" y="-42729.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.IsTuple[scala.collection.immutable.Set[Int]] -->
<g id="node651" class="node">
<title>shapeless.IsTuple[scala.collection.immutable.Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-42704.9355" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="1600.604" y="-42708.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[scala.collection.immutable.Set[Int]]</text>
<text text-anchor="middle" x="1749.604" y="-42693.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- cats.Eq[scala.collection.immutable.Set[Int]]&#45;&gt;shapeless.IsTuple[scala.collection.immutable.Set[Int]] -->
<g id="edge1452" class="edge">
<title>cats.Eq[scala.collection.immutable.Set[Int]]&#45;&gt;shapeless.IsTuple[scala.collection.immutable.Set[Int]]</title>
<path fill="none" stroke="#000000" d="M750.255,-42735.4875C957.1584,-42729.1621 1298.7592,-42718.7187 1524.0009,-42711.8326"/>
<polygon fill="#000000" stroke="#000000" points="1524.4146,-42715.3217 1534.303,-42711.5177 1524.2007,-42708.325 1524.4146,-42715.3217"/>
</g>
<!-- org.scalacheck.Arbitrary[List[(String, io.circe.Json)]] -->
<g id="node255" class="node">
<title>org.scalacheck.Arbitrary[List[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-5138.9355" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="2785.4013" y="-5142.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[List[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="2931.4013" y="-5127.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 56ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[(String, io.circe.Json)]]&#45;&gt;org.scalacheck.Arbitrary[(String, io.circe.Json)] -->
<g id="edge226" class="edge">
<title>org.scalacheck.Arbitrary[List[(String, io.circe.Json)]]&#45;&gt;org.scalacheck.Arbitrary[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M3081.1066,-5158.5346C3218.2075,-5185.2848 3413.6529,-5247.5885 3507.6933,-5390.9355 3519.2505,-5408.5524 3502.3279,-8408.6478 3515.6933,-8424.9355 3607.9096,-8537.3144 3778.7927,-8557.237 3906.6963,-8554.0179"/>
<polygon fill="#000000" stroke="#000000" points="3907.101,-8557.5073 3916.9907,-8553.7068 3906.8895,-8550.5105 3907.101,-8557.5073"/>
</g>
<!-- scala.reflect.ClassTag[List[(String, io.circe.Json)]] -->
<g id="node354" class="node">
<title>scala.reflect.ClassTag[List[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-5174.9355" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="3932.2721" y="-5178.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[List[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="4070.7721" y="-5163.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[(String, io.circe.Json)]]&#45;&gt;scala.reflect.ClassTag[List[(String, io.circe.Json)]] -->
<g id="edge23" class="edge">
<title>org.scalacheck.Arbitrary[List[(String, io.circe.Json)]]&#45;&gt;scala.reflect.ClassTag[List[(String, io.circe.Json)]]</title>
<path fill="none" stroke="#000000" d="M3142.705,-5145.612C3346.9189,-5152.0644 3654.5868,-5161.7856 3858.9691,-5168.2433"/>
<polygon fill="#000000" stroke="#000000" points="3859.1253,-5171.7499 3869.2309,-5168.5676 3859.3464,-5164.7534 3859.1253,-5171.7499"/>
</g>
<!-- org.scalacheck.util.Buildable[(String, io.circe.Json),List[(String, io.circe.Json)]] -->
<g id="node498" class="node">
<title>org.scalacheck.util.Buildable[(String, io.circe.Json),List[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-5102.9355" rx="320.1388" ry="26.7407"/>
<text text-anchor="start" x="3852.2721" y="-5106.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(String, io.circe.Json),List[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="4070.7721" y="-5091.7355" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 12ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[(String, io.circe.Json)]]&#45;&gt;org.scalacheck.util.Buildable[(String, io.circe.Json),List[(String, io.circe.Json)]] -->
<g id="edge765" class="edge">
<title>org.scalacheck.Arbitrary[List[(String, io.circe.Json)]]&#45;&gt;org.scalacheck.util.Buildable[(String, io.circe.Json),List[(String, io.circe.Json)]]</title>
<path fill="none" stroke="#000000" d="M3142.705,-5132.2591C3316.3034,-5126.774 3564.6616,-5118.9268 3760.7792,-5112.7302"/>
<polygon fill="#000000" stroke="#000000" points="3761.0764,-5116.2227 3770.9609,-5112.4085 3760.8553,-5109.2261 3761.0764,-5116.2227"/>
</g>
<!-- List[(String, io.circe.Json)] =&gt; Traversable[(String, io.circe.Json)] -->
<g id="node551" class="node">
<title>List[(String, io.circe.Json)] =&gt; Traversable[(String, io.circe.Json)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-5030.9355" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="3889.2721" y="-5034.7355" font-family="Times,serif" font-size="14.00" fill="#000000">List[(String, io.circe.Json)] =&gt; Traversable[(String, io.circe.Json)]</text>
<text text-anchor="middle" x="4070.7721" y="-5019.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[(String, io.circe.Json)]]&#45;&gt;List[(String, io.circe.Json)] =&gt; Traversable[(String, io.circe.Json)] -->
<g id="edge1541" class="edge">
<title>org.scalacheck.Arbitrary[List[(String, io.circe.Json)]]&#45;&gt;List[(String, io.circe.Json)] =&gt; Traversable[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M3075.8196,-5118.7793C3193.9153,-5102.866 3365.3449,-5081.0625 3515.6933,-5066.9355 3615.9827,-5057.5122 3726.6993,-5049.7913 3822.6959,-5043.95"/>
<polygon fill="#000000" stroke="#000000" points="3823.0608,-5047.4344 3832.8312,-5043.3369 3822.6381,-5040.4472 3823.0608,-5047.4344"/>
</g>
<!-- String(&#39;encodeVector&#39;) =&gt; ?{def should: ?} -->
<g id="node256" class="node">
<title>String(&#39;encodeVector&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-31670.9355" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="454.0494" y="-31674.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;encodeVector&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-31659.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;encodeVector&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge554" class="edge">
<title>String(&#39;encodeVector&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M733.938,-31682.1908C881.6338,-31688.7486 1085.5229,-31687.2725 1144.0988,-31634.9355 1681.348,-31154.9092 1743.2012,-28591.0669 1749.0541,-28251.9756"/>
<polygon fill="#000000" stroke="#000000" points="1752.5542,-28251.9965 1749.222,-28241.9393 1745.5551,-28251.8794 1752.5542,-28251.9965"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[Int],io.circe.Json,Vector[io.circe.Json]] -->
<g id="node257" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[Int],io.circe.Json,Vector[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-42812.9355" rx="452.5967" ry="26.7407"/>
<text text-anchor="start" x="260.0494" y="-42816.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[Int],io.circe.Json,Vector[io.circe.Json]]</text>
<text text-anchor="middle" x="572.0494" y="-42801.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION) -->
<g id="node258" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-42884.9355" rx="295.6413" ry="26.7407"/>
<text text-anchor="start" x="371.0494" y="-42888.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-42873.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(2) =&gt; ?{def asJson: ?} -->
<g id="node259" class="node">
<title>Int(2) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-42956.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="499.5494" y="-42960.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Int(2) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-42945.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- StdLibCodecSuite.this.PropertyCheckConfigurable -->
<g id="node260" class="node">
<title>StdLibCodecSuite.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-43028.9355" rx="208.693" ry="26.7407"/>
<text text-anchor="start" x="432.5494" y="-43032.7355" font-family="Times,serif" font-size="14.00" fill="#000000">StdLibCodecSuite.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-43017.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node261" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-918.9355" rx="357.5922" ry="26.7407"/>
<text text-anchor="start" x="4922.7166" y="-922.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-907.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Order[Long] -->
<g id="node262" class="node">
<title>cats.kernel.Order[Long]</title>
<ellipse fill="none" stroke="#000000" cx="7234.3262" cy="-10037.9355" rx="104.8038" ry="26.7407"/>
<text text-anchor="start" x="7168.3262" y="-10041.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[Long]</text>
<text text-anchor="middle" x="7234.3262" y="-10026.7355" font-family="Times,serif" font-size="14.00" fill="#000000">23 times = 18ms</text>
</g>
<!-- Integral[(Byte, Int)] -->
<g id="node263" class="node">
<title>Integral[(Byte, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-3014.9355" rx="88.2768" ry="26.7407"/>
<text text-anchor="start" x="5113.2166" y="-3018.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Byte, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-3003.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[Option[Int]] -->
<g id="node264" class="node">
<title>cats.Eq[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-15170.9355" rx="89.6056" ry="26.7407"/>
<text text-anchor="start" x="10802.9287" y="-15174.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[Int]]</text>
<text text-anchor="middle" x="10858.4287" y="-15159.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 22ms</text>
</g>
<!-- cats.Eq[Option[Int]]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge343" class="edge">
<title>cats.Eq[Option[Int]]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10939.5236,-15159.1642C11033.9044,-15150.6027 11186.783,-15153.6874 11265.0151,-15246.9355 11279.1558,-15263.7905 11258.9159,-16022.0459 11273.0151,-16038.9355 11341.9584,-16121.524 11472.483,-16130.3803 11562.3824,-16125.0426"/>
<polygon fill="#000000" stroke="#000000" points="11562.8432,-16128.5198 11572.5896,-16124.3656 11562.3799,-16121.5351 11562.8432,-16128.5198"/>
</g>
<!-- cats.Eq[Option[Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge730" class="edge">
<title>cats.Eq[Option[Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M10948.4082,-15171.6034C11331.5932,-15174.5567 12865.3857,-15187.4835 14125.4422,-15213.9355 14881.0753,-15229.7984 15075.6541,-15166.571 15825.2853,-15262.9355 16534.7105,-15354.1317 18470.6678,-15466.6468 18961.484,-15986.9355 18976.0242,-16002.3489 18953.7465,-16019.7469 18969.484,-16033.9355 19030.3,-16088.7662 19623.946,-16069.4667 19704.8751,-16081.9355 19779.799,-16093.4792 19863.7711,-16115.0678 19921.8893,-16131.4211"/>
<polygon fill="#000000" stroke="#000000" points="19921.1342,-16134.8448 19931.7096,-16134.2037 19923.0426,-16128.11 19921.1342,-16134.8448"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node265" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-14058.9355" rx="400.8591" ry="26.7407"/>
<text text-anchor="start" x="3795.2721" y="-14062.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-14047.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 48ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge870" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4400.6129,-14074.2355C4500.5102,-14071.2385 4592.6505,-14058.0784 4625.8509,-14022.9355 4645.08,-14002.5814 4615.3384,-13035.9435 4633.8509,-13014.9355 4745.1134,-12888.675 4963.7272,-12904.338 5083.808,-12924.7902"/>
<polygon fill="#000000" stroke="#000000" points="5083.243,-12928.2445 5093.6971,-12926.5234 5084.4514,-12921.3496 5083.243,-12928.2445"/>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node1609" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-14058.9355" rx="500.7632" ry="26.7407"/>
<text text-anchor="start" x="4821.7166" y="-14062.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-14047.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge994" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4471.839,-14058.9355C4531.9743,-14058.9355 4594.6633,-14058.9355 4656.7098,-14058.9355"/>
<polygon fill="#000000" stroke="#000000" points="4657.0658,-14062.4356 4667.0657,-14058.9355 4657.0657,-14055.4356 4657.0658,-14062.4356"/>
</g>
<!-- scala.reflect.ClassTag[scala.collection.immutable.Map[String,Int]] -->
<g id="node266" class="node">
<title>scala.reflect.ClassTag[scala.collection.immutable.Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-6254.9355" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="3887.7721" y="-6258.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.collection.immutable.Map[String,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-6243.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P] -->
<g id="node267" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-43100.9355" rx="442.7977" ry="26.7407"/>
<text text-anchor="start" x="267.0494" y="-43104.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P]</text>
<text text-anchor="middle" x="572.0494" y="-43089.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;kleisli&#39;) =&gt; ?{def should: ?} -->
<g id="node268" class="node">
<title>String(&#39;kleisli&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-31598.9355" rx="148.4848" ry="26.7407"/>
<text text-anchor="start" x="475.0494" y="-31602.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;kleisli&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-31587.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;kleisli&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge129" class="edge">
<title>String(&#39;kleisli&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M709.8954,-31608.992C858.5158,-31616.6763 1082.1746,-31618.059 1144.0988,-31562.9355 1670.8485,-31094.0349 1741.7493,-28587.0722 1748.9037,-28251.9697"/>
<polygon fill="#000000" stroke="#000000" points="1752.4058,-28251.8975 1749.1147,-28241.8269 1745.4074,-28251.7519 1752.4058,-28251.8975"/>
</g>
<!-- cats.kernel.Eq[Either[Unit,Int]] -->
<g id="node269" class="node">
<title>cats.kernel.Eq[Either[Unit,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-14461.9355" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="10772.4287" y="-14465.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Either[Unit,Int]]</text>
<text text-anchor="middle" x="10858.4287" y="-14450.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[Either[Unit,Int]]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge185" class="edge">
<title>cats.kernel.Eq[Either[Unit,Int]]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10940.5367,-14440.7994C11034.0459,-14422.2373 11184.2832,-14410.198 11265.0151,-14497.9355 11279.5074,-14513.6855 11259.3395,-16022.4713 11273.0151,-16038.9355 11341.7555,-16121.693 11472.3275,-16130.5097 11562.293,-16125.117"/>
<polygon fill="#000000" stroke="#000000" points="11562.7639,-16128.5934 11572.5079,-16124.4336 11562.2966,-16121.609 11562.7639,-16128.5934"/>
</g>
<!-- cats.kernel.Order[Unit] -->
<g id="node393" class="node">
<title>cats.kernel.Order[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-13754.9355" rx="101.2327" ry="26.7407"/>
<text text-anchor="start" x="11594.8883" y="-13758.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[Unit]</text>
<text text-anchor="middle" x="11658.3883" y="-13743.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[Either[Unit,Int]]&#45;&gt;cats.kernel.Order[Unit] -->
<g id="edge578" class="edge">
<title>cats.kernel.Eq[Either[Unit,Int]]&#45;&gt;cats.kernel.Order[Unit]</title>
<path fill="none" stroke="#000000" d="M10898.8617,-14436.2276C10985.276,-14378.619 11186.4635,-14229.6347 11265.0151,-14044.9355 11270.5405,-14031.9436 11263.3445,-13801.2215 11273.0151,-13790.9355 11348.691,-13710.4435 11486.1186,-13718.4929 11574.7648,-13734.5548"/>
<polygon fill="#000000" stroke="#000000" points="11574.3152,-13738.0316 11584.7902,-13736.4429 11575.6108,-13731.1525 11574.3152,-13738.0316"/>
</g>
<!-- cats.Eq[scala.collection.immutable.Set[B]] -->
<g id="node270" class="node">
<title>cats.Eq[scala.collection.immutable.Set[B]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-43172.9355" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="1632.104" y="-43176.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[scala.collection.immutable.Set[B]]</text>
<text text-anchor="middle" x="1749.604" y="-43161.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.IsTuple[scala.collection.immutable.Set[B]] -->
<g id="node400" class="node">
<title>shapeless.IsTuple[scala.collection.immutable.Set[B]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-43172.9355" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="2785.4013" y="-43176.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[scala.collection.immutable.Set[B]]</text>
<text text-anchor="middle" x="2931.4013" y="-43161.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- cats.Eq[scala.collection.immutable.Set[B]]&#45;&gt;shapeless.IsTuple[scala.collection.immutable.Set[B]] -->
<g id="edge714" class="edge">
<title>cats.Eq[scala.collection.immutable.Set[B]]&#45;&gt;shapeless.IsTuple[scala.collection.immutable.Set[B]]</title>
<path fill="none" stroke="#000000" d="M1927.1703,-43172.9355C2134.2354,-43172.9355 2476.968,-43172.9355 2703.502,-43172.9355"/>
<polygon fill="#000000" stroke="#000000" points="2703.5272,-43176.4356 2713.5272,-43172.9355 2703.5272,-43169.4356 2703.5272,-43176.4356"/>
</g>
<!-- List[io.circe.Json] =&gt; Traversable[io.circe.Json] -->
<g id="node272" class="node">
<title>List[io.circe.Json] =&gt; Traversable[io.circe.Json]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-14922.9355" rx="197.9798" ry="26.7407"/>
<text text-anchor="start" x="5035.7166" y="-14926.7355" font-family="Times,serif" font-size="14.00" fill="#000000">List[io.circe.Json] =&gt; Traversable[io.circe.Json]</text>
<text text-anchor="middle" x="5167.7166" y="-14911.7355" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 9ms</text>
</g>
<!-- cats.Order[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]] -->
<g id="node273" class="node">
<title>cats.Order[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-13898.9355" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="11477.8883" y="-13902.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Order[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]]</text>
<text text-anchor="middle" x="11658.3883" y="-13887.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc22] -->
<g id="node274" class="node">
<title>Fractional[ProductCodecSuite.this.Cc22]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-43334.9355" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="1637.604" y="-43338.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc22]</text>
<text text-anchor="middle" x="1749.604" y="-43323.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D] -->
<g id="node275" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-43370.9355" rx="332.1805" ry="26.7407"/>
<text text-anchor="start" x="345.0494" y="-43374.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D]</text>
<text text-anchor="middle" x="572.0494" y="-43359.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node276" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-43478.9355" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="1576.604" y="-43482.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-43467.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;JsonObject.fromFoldable&#39;) =&gt; ?{def should: ?} -->
<g id="node277" class="node">
<title>String(&#39;JsonObject.fromFoldable&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-31526.9355" rx="222.9775" ry="26.7407"/>
<text text-anchor="start" x="422.5494" y="-31530.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;JsonObject.fromFoldable&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-31515.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;JsonObject.fromFoldable&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge32" class="edge">
<title>String(&#39;JsonObject.fromFoldable&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M769.5067,-31539.4503C912.548,-31544.0288 1089.933,-31538.9663 1144.0988,-31490.9355 1660.23,-31033.2633 1740.2275,-28584.2398 1748.7406,-28252.2082"/>
<polygon fill="#000000" stroke="#000000" points="1752.241,-28252.2306 1748.9931,-28242.1459 1745.2432,-28252.055 1752.241,-28252.2306"/>
</g>
<!-- String(&#39;A JSON object&#39;) =&gt; ?{def should: ?} -->
<g id="node278" class="node">
<title>String(&#39;A JSON object&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-31454.9355" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="450.0494" y="-31458.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;A JSON object&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-31443.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;A JSON object&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge877" class="edge">
<title>String(&#39;A JSON object&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M739.0875,-31466.2676C886.2237,-31472.4445 1085.9209,-31470.3158 1144.0988,-31418.9355 1649.6511,-30972.4529 1738.674,-28581.0616 1748.5702,-28252.3908"/>
<polygon fill="#000000" stroke="#000000" points="1752.0804,-28252.0948 1748.8773,-28241.9958 1745.0834,-28251.8881 1752.0804,-28252.0948"/>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node279" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-43622.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="1531.604" y="-43626.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-43611.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.IsTuple[scala.math.BigDecimal] -->
<g id="node280" class="node">
<title>shapeless.IsTuple[scala.math.BigDecimal]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-43694.9355" rx="176.5537" ry="26.7407"/>
<text text-anchor="start" x="1632.604" y="-43698.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[scala.math.BigDecimal]</text>
<text text-anchor="middle" x="1749.604" y="-43683.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int)] -->
<g id="node281" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-3446.9355" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="3975.7721" y="-3450.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-3435.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 57ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int)] -->
<g id="node791" class="node">
<title>scala.reflect.ClassTag[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-3446.9355" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="5080.2166" y="-3450.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-3435.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int)] -->
<g id="edge872" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4216.4379,-3446.9355C4426.59,-3446.9355 4812.5799,-3446.9355 5022.488,-3446.9355"/>
<polygon fill="#000000" stroke="#000000" points="5022.6579,-3450.4356 5032.6578,-3446.9355 5022.6578,-3443.4356 5022.6579,-3450.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge521" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4203.6333,-3458.0177C4349.399,-3466.9068 4570.1387,-3469.6476 4625.8509,-3410.9355 4638.2419,-3397.8774 4628.3402,-2780.0727 4633.8509,-2762.9355 4737.9946,-2439.0738 5031.1456,-2131.8769 5132.6221,-2032.3995"/>
<polygon fill="#000000" stroke="#000000" points="5135.1605,-2034.8129 5139.8744,-2025.3245 5130.2723,-2029.8022 5135.1605,-2034.8129"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(Int, String),Either[Int,String]] -->
<g id="node282" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(Int, String),Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-11682.9355" rx="291.1561" ry="26.7407"/>
<text text-anchor="start" x="4969.7166" y="-11686.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(Int, String),Either[Int,String]]</text>
<text text-anchor="middle" x="5167.7166" y="-11671.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc10]] -->
<g id="node283" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc10]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-43766.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="1531.604" y="-43770.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc10]]</text>
<text text-anchor="middle" x="1749.604" y="-43755.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION) -->
<g id="node284" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-43838.9355" rx="273.8007" ry="26.7407"/>
<text text-anchor="start" x="386.5494" y="-43842.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-43827.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Integral[scala.collection.immutable.Map[Symbol,Int]] -->
<g id="node285" class="node">
<title>Integral[scala.collection.immutable.Map[Symbol,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-4526.9355" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="3921.7721" y="-4530.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[scala.collection.immutable.Map[Symbol,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-4515.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc5] -->
<g id="node286" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc5]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-43910.9355" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="446.0494" y="-43914.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc5]</text>
<text text-anchor="middle" x="572.0494" y="-43899.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc5]] -->
<g id="node1892" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc5]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-43910.9355" rx="314.8251" ry="26.7407"/>
<text text-anchor="start" x="1535.104" y="-43914.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc5]]</text>
<text text-anchor="middle" x="1749.604" y="-43899.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc5]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc5]] -->
<g id="edge1071" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc5]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc5]]</title>
<path fill="none" stroke="#000000" d="M761.5708,-43910.9355C940.1781,-43910.9355 1211.4625,-43910.9355 1424.6075,-43910.9355"/>
<polygon fill="#000000" stroke="#000000" points="1424.7127,-43914.4356 1434.7127,-43910.9355 1424.7127,-43907.4356 1424.7127,-43914.4356"/>
</g>
<!-- String(&#39;a&#39;) =&gt; ?{def :=: ?} -->
<g id="node287" class="node">
<title>String(&#39;a&#39;) =&gt; ?{def :=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-43982.9355" rx="112.36" ry="26.7407"/>
<text text-anchor="start" x="500.5494" y="-43986.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;a&#39;) =&gt; ?{def :=: ?}</text>
<text text-anchor="middle" x="572.0494" y="-43971.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc6] -->
<g id="node288" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc6]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-44054.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="1620.104" y="-44058.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc6]</text>
<text text-anchor="middle" x="1749.604" y="-44043.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node289" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-1350.9355" rx="321.053" ry="26.7407"/>
<text text-anchor="start" x="3851.7721" y="-1354.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-1339.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 46ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge409" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4392.1103,-1350.9355C4535.3503,-1350.9355 4703.6934,-1350.9355 4846.8752,-1350.9355"/>
<polygon fill="#000000" stroke="#000000" points="4847.1401,-1354.4356 4857.1401,-1350.9355 4847.1401,-1347.4356 4847.1401,-1354.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1026" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4330.6813,-1335.138C4454.6711,-1333.8526 4584.854,-1343.7978 4625.8509,-1386.9355 4647.8976,-1410.1334 4611.834,-1939.7094 4633.8509,-1962.9355 4749.0043,-2084.4135 4966.5338,-2052.7223 5085.2784,-2023.2968"/>
<polygon fill="#000000" stroke="#000000" points="5086.218,-2026.6695 5095.0544,-2020.824 5084.5014,-2019.8832 5086.218,-2026.6695"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Int,Seq[Int]] -->
<g id="node290" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Int,Seq[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-4886.9355" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="6073.7346" y="-4890.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Int,Seq[Int]]</text>
<text text-anchor="middle" x="6222.2346" y="-4875.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.IsTuple[Option[io.circe.JsonNumber]] -->
<g id="node291" class="node">
<title>shapeless.IsTuple[Option[io.circe.JsonNumber]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-44270.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="2798.9013" y="-44274.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Option[io.circe.JsonNumber]]</text>
<text text-anchor="middle" x="2931.4013" y="-44259.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node292" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-342.9355" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="5012.7166" y="-346.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-331.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc11] -->
<g id="node293" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc11]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-42380.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="448.5494" y="-42384.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc11]</text>
<text text-anchor="middle" x="572.0494" y="-42369.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc11]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc11] -->
<g id="edge191" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc11]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc11]</title>
<path fill="none" stroke="#000000" d="M758.3114,-42380.9355C971.0895,-42380.9355 1318.412,-42380.9355 1540.352,-42380.9355"/>
<polygon fill="#000000" stroke="#000000" points="1540.4954,-42384.4356 1550.4954,-42380.9355 1540.4954,-42377.4356 1540.4954,-42384.4356"/>
</g>
<!-- cats.kernel.Eq[Unit] -->
<g id="node294" class="node">
<title>cats.kernel.Eq[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-14364.9355" rx="89.6056" ry="26.7407"/>
<text text-anchor="start" x="19281.6796" y="-14368.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Unit]</text>
<text text-anchor="middle" x="19337.1796" y="-14353.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 42ms</text>
</g>
<!-- cats.kernel.Eq[Unit]&#45;&gt;shapeless.Generic.Aux[Unit,L] -->
<g id="edge1578" class="edge">
<title>cats.kernel.Eq[Unit]&#45;&gt;shapeless.Generic.Aux[Unit,L]</title>
<path fill="none" stroke="#000000" d="M19425.8022,-14369.7907C19536.5965,-14375.8604 19727.4275,-14386.315 19857.1449,-14393.4214"/>
<polygon fill="#000000" stroke="#000000" points="19856.9797,-14396.9175 19867.1563,-14393.9699 19857.3627,-14389.928 19856.9797,-14396.9175"/>
</g>
<!-- cats.kernel.Eq[Unit]&#45;&gt;cats.kernel.Eq[shapeless.HNil] -->
<g id="edge845" class="edge">
<title>cats.kernel.Eq[Unit]&#45;&gt;cats.kernel.Eq[shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M19406.4682,-14347.7493C19490.4772,-14331.5314 19630.0778,-14320.2766 19704.8751,-14400.9355 19718.4777,-14415.6041 19701.2848,-14744.6302 19712.8751,-14760.9355 19748.5767,-14811.1609 19811.2798,-14837.3911 19868.4513,-14851.0767"/>
<polygon fill="#000000" stroke="#000000" points="19867.7836,-14854.5142 19878.3118,-14853.3282 19869.3419,-14847.6899 19867.7836,-14854.5142"/>
</g>
<!-- shapeless.IsTuple[Unit] -->
<g id="node959" class="node">
<title>shapeless.IsTuple[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="19994.3036" cy="-14328.9355" rx="103.4757" ry="26.7407"/>
<text text-anchor="start" x="19929.3036" y="-14332.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Unit]</text>
<text text-anchor="middle" x="19994.3036" y="-14317.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- cats.kernel.Eq[Unit]&#45;&gt;shapeless.IsTuple[Unit] -->
<g id="edge528" class="edge">
<title>cats.kernel.Eq[Unit]&#45;&gt;shapeless.IsTuple[Unit]</title>
<path fill="none" stroke="#000000" d="M19425.8022,-14360.0804C19544.16,-14353.5963 19753.855,-14342.1083 19882.8115,-14335.0436"/>
<polygon fill="#000000" stroke="#000000" points="19883.3138,-14338.5214 19893.1073,-14334.4795 19882.9308,-14331.5319 19883.3138,-14338.5214"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node295" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-17386.9355" rx="226.9626" ry="26.7407"/>
<text text-anchor="start" x="11505.8883" y="-17390.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="11658.3883" y="-17375.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- cats.kernel.Eq[Option[io.circe.Json]] -->
<g id="node296" class="node">
<title>cats.kernel.Eq[Option[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-17140.9355" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="12314.9214" y="-17144.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Option[io.circe.Json]]</text>
<text text-anchor="middle" x="12415.9214" y="-17129.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 67ms</text>
</g>
<!-- cats.kernel.Order[io.circe.Json] -->
<g id="node367" class="node">
<title>cats.kernel.Order[io.circe.Json]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-16810.9355" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="13045.0282" y="-16814.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[io.circe.Json]</text>
<text text-anchor="middle" x="13131.0282" y="-16799.7355" font-family="Times,serif" font-size="14.00" fill="#000000">250 times = 197ms</text>
</g>
<!-- cats.kernel.Eq[Option[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json] -->
<g id="edge1244" class="edge">
<title>cats.kernel.Eq[Option[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12510.5749,-17162.1868C12594.158,-17174.7819 12712.8846,-17176.4819 12780.0814,-17104.9355 12797.0553,-17086.863 12772.0851,-16900.8788 12788.0814,-16881.9355 12838.0047,-16822.8154 12923.0454,-16804.929 12995.9504,-16801.8903"/>
<polygon fill="#000000" stroke="#000000" points="12996.2716,-16805.3817 13006.1521,-16801.5573 12996.0432,-16798.3855 12996.2716,-16805.3817"/>
</g>
<!-- cats.kernel.Eq[io.circe.Json] -->
<g id="node645" class="node">
<title>cats.kernel.Eq[io.circe.Json]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="13803.7086" cy="-16480.9355" rx="120.8306" ry="26.7407"/>
<text text-anchor="start" x="13726.2086" y="-16484.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.Json]</text>
<text text-anchor="middle" x="13803.7086" y="-16469.7355" font-family="Times,serif" font-size="14.00" fill="#000000">179 times = 571ms</text>
</g>
<!-- cats.kernel.Eq[Option[io.circe.Json]]&#45;&gt;cats.kernel.Eq[io.circe.Json] -->
<g id="edge395" class="edge">
<title>cats.kernel.Eq[Option[io.circe.Json]]&#45;&gt;cats.kernel.Eq[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12552.7046,-17153.4329C12803.3471,-17173.6629 13324.2874,-17202.5261 13473.975,-17108.9355 13695.4649,-16970.4514 13776.292,-16630.2741 13797.4906,-16517.7447"/>
<polygon fill="#000000" stroke="#000000" points="13800.9374,-16518.3525 13799.3041,-16507.8844 13794.0529,-16517.0863 13800.9374,-16518.3525"/>
</g>
<!-- cats.kernel.PartialOrder[io.circe.Json] -->
<g id="node709" class="node">
<title>cats.kernel.PartialOrder[io.circe.Json]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-16917.9355" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="13027.5282" y="-16921.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.PartialOrder[io.circe.Json]</text>
<text text-anchor="middle" x="13131.0282" y="-16906.7355" font-family="Times,serif" font-size="14.00" fill="#000000">210 times = 276ms</text>
</g>
<!-- cats.kernel.Eq[Option[io.circe.Json]]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json] -->
<g id="edge900" class="edge">
<title>cats.kernel.Eq[Option[io.circe.Json]]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12514.4939,-17161.5956C12596.8467,-17172.5873 12711.5078,-17172.2474 12780.0814,-17104.9355 12801.798,-17083.6186 12769.019,-17060.6557 12788.0814,-17036.9355 12835.3044,-16978.1742 12913.2715,-16948.345 12982.9421,-16933.2397"/>
<polygon fill="#000000" stroke="#000000" points="12984.0783,-16936.5784 12993.1566,-16931.1162 12982.6535,-16929.725 12984.0783,-16936.5784"/>
</g>
<!-- shapeless.IsTuple[Option[io.circe.Json]] -->
<g id="node1455" class="node">
<title>shapeless.IsTuple[Option[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-17072.9355" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="13021.0282" y="-17076.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Option[io.circe.Json]]</text>
<text text-anchor="middle" x="13131.0282" y="-17061.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- cats.kernel.Eq[Option[io.circe.Json]]&#45;&gt;shapeless.IsTuple[Option[io.circe.Json]] -->
<g id="edge1329" class="edge">
<title>cats.kernel.Eq[Option[io.circe.Json]]&#45;&gt;shapeless.IsTuple[Option[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M12551.2683,-17128.0653C12672.4969,-17116.5376 12850.1875,-17099.6409 12976.8558,-17087.5959"/>
<polygon fill="#000000" stroke="#000000" points="12977.4087,-17091.0592 12987.0324,-17086.6282 12976.7459,-17084.0907 12977.4087,-17091.0592"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,io.circe.Json,Vector[io.circe.Json]] -->
<g id="node297" class="node">
<title>scala.collection.generic.CanBuildFrom[F,io.circe.Json,Vector[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-9222.9355" rx="308.0972" ry="26.7407"/>
<text text-anchor="start" x="6012.2346" y="-9226.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,io.circe.Json,Vector[io.circe.Json]]</text>
<text text-anchor="middle" x="6222.2346" y="-9211.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node298" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-20510.9355" rx="557.4004" ry="26.7407"/>
<text text-anchor="start" x="1363.604" y="-20514.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-20499.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;emap&#39;) =&gt; ?{def should: ?} -->
<g id="node299" class="node">
<title>String(&#39;emap&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-31382.9355" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="476.5494" y="-31386.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;emap&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-31371.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;emap&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge126" class="edge">
<title>String(&#39;emap&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M708.4395,-31392.787C856.9415,-31400.4069 1081.6568,-31401.8492 1144.0988,-31346.9355 1639.3438,-30911.3998 1737.1823,-28575.3543 1748.4086,-28252.0606"/>
<polygon fill="#000000" stroke="#000000" points="1751.9145,-28251.9431 1748.758,-28241.8294 1744.9186,-28251.7041 1751.9145,-28251.9431"/>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc8] -->
<g id="node301" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc8]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-44558.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="1620.104" y="-44562.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc8]</text>
<text text-anchor="middle" x="1749.604" y="-44547.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="node302" class="node">
<title>cats.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-14652.9355" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="19174.6796" y="-14656.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]</text>
<text text-anchor="middle" x="19337.1796" y="-14641.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 39ms</text>
</g>
<!-- cats.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.Eq[io.circe.DecodingFailure] -->
<g id="edge920" class="edge">
<title>cats.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.Eq[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M19522.9194,-14670.1673C19581.1995,-14675.83 19645.748,-14682.365 19704.8751,-14688.9355 19758.1886,-14694.8601 19816.9412,-14702.0461 19867.5017,-14708.435"/>
<polygon fill="#000000" stroke="#000000" points="19867.1399,-14711.917 19877.5005,-14709.7015 19868.0197,-14704.9725 19867.1399,-14711.917"/>
</g>
<!-- cats.Order[io.circe.DecodingFailure] -->
<g id="node378" class="node">
<title>cats.Order[io.circe.DecodingFailure]</title>
<ellipse fill="none" stroke="#000000" cx="19994.3036" cy="-14508.9355" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="19893.8036" y="-14512.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Order[io.circe.DecodingFailure]</text>
<text text-anchor="middle" x="19994.3036" y="-14497.7355" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 19ms</text>
</g>
<!-- cats.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.Order[io.circe.DecodingFailure] -->
<g id="edge912" class="edge">
<title>cats.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.Order[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M19456.3178,-14676.3606C19537.3604,-14684.8514 19641.0793,-14679.9035 19704.8751,-14616.9355 19727.7899,-14594.318 19690.2978,-14567.8901 19712.8751,-14544.9355 19750.7593,-14506.4183 19807.8409,-14494.2976 19860.7158,-14493.025"/>
<polygon fill="#000000" stroke="#000000" points="19860.9206,-14496.523 19870.8803,-14492.9099 19860.8413,-14489.5234 19860.9206,-14496.523"/>
</g>
<!-- shapeless.IsTuple[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="node1860" class="node">
<title>shapeless.IsTuple[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<ellipse fill="none" stroke="#000000" cx="19994.3036" cy="-14652.9355" rx="281.357" ry="26.7407"/>
<text text-anchor="start" x="19803.3036" y="-14656.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[cats.data.NonEmptyList[io.circe.DecodingFailure]]</text>
<text text-anchor="middle" x="19994.3036" y="-14641.7355" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 4ms</text>
</g>
<!-- cats.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;shapeless.IsTuple[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="edge1351" class="edge">
<title>cats.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;shapeless.IsTuple[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<path fill="none" stroke="#000000" d="M19578.6028,-14652.9355C19618.9374,-14652.9355 19661.1604,-14652.9355 19702.5919,-14652.9355"/>
<polygon fill="#000000" stroke="#000000" points="19702.8227,-14656.4356 19712.8226,-14652.9355 19702.8226,-14649.4356 19702.8227,-14656.4356"/>
</g>
<!-- cats.PartialOrder[io.circe.DecodingFailure] -->
<g id="node1861" class="node">
<title>cats.PartialOrder[io.circe.DecodingFailure]</title>
<ellipse fill="none" stroke="#000000" cx="19994.3036" cy="-14580.9355" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="19876.3036" y="-14584.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.PartialOrder[io.circe.DecodingFailure]</text>
<text text-anchor="middle" x="19994.3036" y="-14569.7355" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 21ms</text>
</g>
<!-- cats.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.PartialOrder[io.circe.DecodingFailure] -->
<g id="edge605" class="edge">
<title>cats.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.PartialOrder[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M19522.9194,-14635.7038C19581.1995,-14630.0411 19645.748,-14623.5061 19704.8751,-14616.9355 19751.8775,-14611.7124 19803.1076,-14605.5087 19849.2244,-14599.7351"/>
<polygon fill="#000000" stroke="#000000" points="19849.8034,-14603.19 19859.2896,-14598.4717 19848.9315,-14596.2445 19849.8034,-14603.19"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S] -->
<g id="node303" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-44630.9355" rx="495.8638" ry="26.7407"/>
<text text-anchor="start" x="229.5494" y="-44634.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S]</text>
<text text-anchor="middle" x="572.0494" y="-44619.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc20] -->
<g id="node304" class="node">
<title>Fractional[ProductCodecSuite.this.Cc20]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-44738.9355" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="1637.604" y="-44742.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc20]</text>
<text text-anchor="middle" x="1749.604" y="-44727.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F] -->
<g id="node305" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-44774.9355" rx="342.8936" ry="26.7407"/>
<text text-anchor="start" x="337.5494" y="-44778.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F]</text>
<text text-anchor="middle" x="572.0494" y="-44763.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Order[Vector[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json] -->
<g id="edge1477" class="edge">
<title>cats.kernel.Order[Vector[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12525.7692,-16684.8477C12605.7414,-16676.8569 12711.6089,-16680.9869 12780.0814,-16740.9355 12791.7613,-16751.1614 12776.4326,-16764.6744 12788.0814,-16774.9355 12850.6156,-16830.0203 12946.5434,-16835.8436 13021.0589,-16829.691"/>
<polygon fill="#000000" stroke="#000000" points="13021.784,-16833.1396 13031.4255,-16828.7473 13021.1493,-16826.1684 13021.784,-16833.1396"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U] -->
<g id="node307" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-44846.9355" rx="543.5303" ry="26.7407"/>
<text text-anchor="start" x="195.5494" y="-44850.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U]</text>
<text text-anchor="middle" x="572.0494" y="-44835.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[String] -->
<g id="node308" class="node">
<title>io.circe.Encoder[String]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="1749.604" cy="-21014.9355" rx="104.8038" ry="26.7407"/>
<text text-anchor="start" x="1683.604" y="-21018.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[String]</text>
<text text-anchor="middle" x="1749.604" y="-21003.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 13ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]] -->
<g id="node309" class="node">
<title>org.scalacheck.Shrink[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-40202.9355" rx="357.5922" ry="26.7407"/>
<text text-anchor="start" x="327.0494" y="-40206.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]</text>
<text text-anchor="middle" x="572.0494" y="-40191.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]&#45;&gt;Fractional[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]] -->
<g id="edge1224" class="edge">
<title>org.scalacheck.Shrink[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]&#45;&gt;Fractional[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]</title>
<path fill="none" stroke="#000000" d="M930.1507,-40202.9355C1088.7259,-40202.9355 1273.8183,-40202.9355 1427.9295,-40202.9355"/>
<polygon fill="#000000" stroke="#000000" points="1428.0352,-40206.4356 1438.0351,-40202.9355 1428.0351,-40199.4356 1428.0352,-40206.4356"/>
</g>
<!-- Integral[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]] -->
<g id="node1962" class="node">
<title>Integral[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-40130.9355" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="1543.604" y="-40134.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]</text>
<text text-anchor="middle" x="1749.604" y="-40119.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]&#45;&gt;Integral[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]] -->
<g id="edge1569" class="edge">
<title>org.scalacheck.Shrink[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]&#45;&gt;Integral[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]</title>
<path fill="none" stroke="#000000" d="M847.1854,-40185.7575C943.6136,-40179.7641 1052.649,-40173.0176 1152.0988,-40166.9355 1262.2569,-40160.1986 1383.8453,-40152.8558 1488.423,-40146.5693"/>
<polygon fill="#000000" stroke="#000000" points="1488.7174,-40150.058 1498.4893,-40145.9642 1488.2973,-40143.0706 1488.7174,-40150.058"/>
</g>
<!-- shapeless.IsTuple[io.circe.Decoder[Int]] -->
<g id="node310" class="node">
<title>shapeless.IsTuple[io.circe.Decoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19994.3036" cy="-15164.9355" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="19884.3036" y="-15168.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.Decoder[Int]]</text>
<text text-anchor="middle" x="19994.3036" y="-15153.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;encodeList&#39;) =&gt; ?{def should: ?} -->
<g id="node311" class="node">
<title>String(&#39;encodeList&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-31310.9355" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="462.0494" y="-31314.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;encodeList&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-31299.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;encodeList&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge888" class="edge">
<title>String(&#39;encodeList&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M725.3595,-31321.5587C873.4361,-31328.338 1083.8763,-31327.6638 1144.0988,-31274.9355 1628.8019,-30850.5501 1735.5625,-28571.9027 1748.2233,-28252.2074"/>
<polygon fill="#000000" stroke="#000000" points="1751.7259,-28252.2068 1748.6187,-28242.0779 1744.7312,-28251.9337 1751.7259,-28252.2068"/>
</g>
<!-- String(&#39;up&#39;) =&gt; ?{def should: ?} -->
<g id="node312" class="node">
<title>String(&#39;up&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-31238.9355" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="484.5494" y="-31242.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;up&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-31227.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;up&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1357" class="edge">
<title>String(&#39;up&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M699.1284,-31248.205C847.291,-31256.1308 1080.0984,-31258.7129 1144.0988,-31202.9355 1618.3005,-30789.6611 1733.9132,-28568.1108 1748.0308,-28252.2959"/>
<polygon fill="#000000" stroke="#000000" points="1751.5464,-28252.016 1748.4906,-28241.8715 1744.5532,-28251.7075 1751.5464,-28252.016"/>
</g>
<!-- scala.reflect.ClassTag[Byte] -->
<g id="node313" class="node">
<title>scala.reflect.ClassTag[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-2870.9355" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="6145.2346" y="-2874.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Byte]</text>
<text text-anchor="middle" x="6222.2346" y="-2859.7355" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 8ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String) -->
<g id="node314" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-44918.9355" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="389.0494" y="-44922.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String)</text>
<text text-anchor="middle" x="572.0494" y="-44907.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int)] -->
<g id="node315" class="node">
<title>io.circe.Decoder[(Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-13986.9355" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="3986.2721" y="-13990.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-13975.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge864" class="edge">
<title>io.circe.Decoder[(Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4191.7807,-13997.3039C4337.1674,-14006.7799 4568.7162,-14011.3761 4625.8509,-13950.9355 4643.7124,-13932.0406 4616.6547,-13034.4378 4633.8509,-13014.9355 4745.1519,-12888.709 4963.7501,-12904.3582 5083.8182,-12924.7992"/>
<polygon fill="#000000" stroke="#000000" points="5083.2522,-12928.2533 5093.7062,-12926.5315 5084.4602,-12921.3583 5083.2522,-12928.2533"/>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int)]] -->
<g id="node699" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-13986.9355" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="5012.7166" y="-13990.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-13975.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int)]] -->
<g id="edge1261" class="edge">
<title>io.circe.Decoder[(Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4201.7278,-13986.9355C4380.3699,-13986.9355 4703.6944,-13986.9355 4926.757,-13986.9355"/>
<polygon fill="#000000" stroke="#000000" points="4926.9701,-13990.4356 4936.9701,-13986.9355 4926.97,-13983.4356 4926.9701,-13990.4356"/>
</g>
<!-- String =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node316" class="node">
<title>String =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-44990.9355" rx="205.5364" ry="26.7407"/>
<text text-anchor="start" x="434.5494" y="-44994.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="572.0494" y="-44979.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Either[Int,String]],io.circe.Json,That] -->
<g id="node317" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Either[Int,String]],io.circe.Json,That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-45062.9355" rx="327.2809" ry="26.7407"/>
<text text-anchor="start" x="348.5494" y="-45066.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Either[Int,String]],io.circe.Json,That]</text>
<text text-anchor="middle" x="572.0494" y="-45051.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node318" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-18888.9355" rx="465.9667" ry="26.7407"/>
<text text-anchor="start" x="1428.104" y="-18892.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="1749.604" y="-18877.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Int,scala.collection.immutable.Stream[Int]] -->
<g id="node319" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Int,scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-1926.9355" rx="340.651" ry="26.7407"/>
<text text-anchor="start" x="5989.2346" y="-1930.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Int,scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="6222.2346" y="-1915.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;A JSON string&#39;) =&gt; ?{def should: ?} -->
<g id="node320" class="node">
<title>String(&#39;A JSON string&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-31166.9355" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="451.5494" y="-31170.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;A JSON string&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-31155.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;A JSON string&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge11" class="edge">
<title>String(&#39;A JSON string&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M737.8183,-31177.9841C884.9047,-31184.0453 1085.3209,-31181.9136 1144.0988,-31130.9355 1607.8153,-30728.7538 1732.2232,-28564.2096 1747.8288,-28252.3741"/>
<polygon fill="#000000" stroke="#000000" points="1751.3401,-28252.2294 1748.3384,-28242.0687 1744.3486,-28251.8836 1751.3401,-28252.2294"/>
</g>
<!-- io.circe.Decoder[Float] -->
<g id="node321" class="node">
<title>io.circe.Decoder[Float]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-45134.9355" rx="101.2327" ry="26.7407"/>
<text text-anchor="start" x="508.5494" y="-45138.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Float]</text>
<text text-anchor="middle" x="572.0494" y="-45123.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION) -->
<g id="node322" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-45206.9355" rx="325.0384" ry="26.7407"/>
<text text-anchor="start" x="350.0494" y="-45210.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-45195.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;d&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node323" class="node">
<title>String(&#39;d&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-45278.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="499.5494" y="-45282.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;d&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="572.0494" y="-45267.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- io.circe.Encoder[List[Int]] -->
<g id="node324" class="node">
<title>io.circe.Encoder[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-21518.9355" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="500.0494" y="-21522.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[List[Int]]</text>
<text text-anchor="middle" x="572.0494" y="-21507.7355" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 22ms</text>
</g>
<!-- io.circe.Encoder[List[Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1043" class="edge">
<title>io.circe.Encoder[List[Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M685.2873,-21519.3187C801.3438,-21517.9607 986.6038,-21510.9283 1144.0988,-21482.9355 1345.0784,-21447.2139 1573.8987,-21368.2812 1683.8282,-21327.8572"/>
<polygon fill="#000000" stroke="#000000" points="1685.2834,-21331.051 1693.4526,-21324.3046 1682.8593,-21324.4841 1685.2834,-21331.051"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R] -->
<g id="node325" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-45350.9355" rx="455.2536" ry="26.7407"/>
<text text-anchor="start" x="258.0494" y="-45354.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R]</text>
<text text-anchor="middle" x="572.0494" y="-45339.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Order[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.Order[io.circe.DecodingFailure] -->
<g id="edge204" class="edge">
<title>cats.kernel.Order[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.Order[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M19616.8121,-14508.9355C19689.5945,-14508.9355 19765.6535,-14508.9355 19830.2695,-14508.9355"/>
<polygon fill="#000000" stroke="#000000" points="19830.5395,-14512.4356 19840.5394,-14508.9355 19830.5394,-14505.4356 19830.5395,-14512.4356"/>
</g>
<!-- io.circe.Decoder.Result[BigInt] =&gt; ?{def isEmpty: ?} -->
<g id="node327" class="node">
<title>io.circe.Decoder.Result[BigInt] =&gt; ?{def isEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-45566.9355" rx="220.7347" ry="26.7407"/>
<text text-anchor="start" x="424.0494" y="-45570.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[BigInt] =&gt; ?{def isEmpty: ?}</text>
<text text-anchor="middle" x="572.0494" y="-45555.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.Foldable[io.circe.Decoder.Result] -->
<g id="node1183" class="node">
<title>cats.Foldable[io.circe.Decoder.Result]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-45494.9355" rx="159.6125" ry="26.7407"/>
<text text-anchor="start" x="1644.604" y="-45498.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Foldable[io.circe.Decoder.Result]</text>
<text text-anchor="middle" x="1749.604" y="-45483.7355" font-family="Times,serif" font-size="14.00" fill="#000000">20 times = 13ms</text>
</g>
<!-- io.circe.Decoder.Result[BigInt] =&gt; ?{def isEmpty: ?}&#45;&gt;cats.Foldable[io.circe.Decoder.Result] -->
<g id="edge128" class="edge">
<title>io.circe.Decoder.Result[BigInt] =&gt; ?{def isEmpty: ?}&#45;&gt;cats.Foldable[io.circe.Decoder.Result]</title>
<path fill="none" stroke="#000000" d="M769.4773,-45554.8641C999.7888,-45540.782 1376.1102,-45517.7723 1589.2143,-45504.7424"/>
<polygon fill="#000000" stroke="#000000" points="1589.4698,-45508.2334 1599.2375,-45504.1295 1589.0425,-45501.2464 1589.4698,-45508.2334"/>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc3]] -->
<g id="node328" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc3]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-45638.9355" rx="314.8251" ry="26.7407"/>
<text text-anchor="start" x="1535.104" y="-45642.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc3]]</text>
<text text-anchor="middle" x="1749.604" y="-45627.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.PartialOrder[io.circe.CursorOp] -->
<g id="node329" class="node">
<title>cats.kernel.PartialOrder[io.circe.CursorOp]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-38798.9355" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="2813.4013" y="-38802.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.PartialOrder[io.circe.CursorOp]</text>
<text text-anchor="middle" x="2931.4013" y="-38787.7355" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 43ms</text>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc11] -->
<g id="node330" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc11]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-45710.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="1605.104" y="-45714.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc11]</text>
<text text-anchor="middle" x="1749.604" y="-45699.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Symbol] -->
<g id="node331" class="node">
<title>org.scalacheck.Arbitrary[Symbol]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-4130.9355" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="5074.2166" y="-4134.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Symbol]</text>
<text text-anchor="middle" x="5167.7166" y="-4119.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.collection.mutable.HashMap[Long,Int]] -->
<g id="node332" class="node">
<title>scala.reflect.ClassTag[scala.collection.mutable.HashMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-9946.9355" rx="275.5435" ry="26.7407"/>
<text text-anchor="start" x="3883.7721" y="-9950.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.collection.mutable.HashMap[Long,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-9935.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with Option[Int]] -->
<g id="node333" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-12474.9355" rx="343.8079" ry="26.7407"/>
<text text-anchor="start" x="4932.7166" y="-12478.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with Option[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-12463.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[BigDecimal] -->
<g id="node334" class="node">
<title>io.circe.Encoder[BigDecimal]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-45782.9355" rx="127.9727" ry="26.7407"/>
<text text-anchor="start" x="489.5494" y="-45786.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[BigDecimal]</text>
<text text-anchor="middle" x="572.0494" y="-45771.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc2] -->
<g id="node335" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc2]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-45854.9355" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="1608.604" y="-45858.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc2]</text>
<text text-anchor="middle" x="1749.604" y="-45843.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[(Symbol, Int)] -->
<g id="node337" class="node">
<title>org.scalacheck.Shrink[(Symbol, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-4598.9355" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="3968.7721" y="-4602.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Symbol, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-4587.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- org.scalacheck.Shrink[(Symbol, Int)]&#45;&gt;Integral[(Symbol, Int)] -->
<g id="edge1045" class="edge">
<title>org.scalacheck.Shrink[(Symbol, Int)]&#45;&gt;Integral[(Symbol, Int)]</title>
<path fill="none" stroke="#000000" d="M4216.5724,-4608.3286C4328.5285,-4615.5565 4486.9679,-4625.8184 4625.8509,-4634.9355 4776.3816,-4644.8173 4950.4224,-4656.4099 5059.7801,-4663.7143"/>
<polygon fill="#000000" stroke="#000000" points="5059.6191,-4667.2113 5069.8302,-4664.3857 5060.0858,-4660.2269 5059.6191,-4667.2113"/>
</g>
<!-- org.scalacheck.Shrink[Symbol] -->
<g id="node1605" class="node">
<title>org.scalacheck.Shrink[Symbol]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-4598.9355" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="5081.7166" y="-4602.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Symbol]</text>
<text text-anchor="middle" x="5167.7166" y="-4587.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Shrink[(Symbol, Int)]&#45;&gt;org.scalacheck.Shrink[Symbol] -->
<g id="edge716" class="edge">
<title>org.scalacheck.Shrink[(Symbol, Int)]&#45;&gt;org.scalacheck.Shrink[Symbol]</title>
<path fill="none" stroke="#000000" d="M4226.4818,-4598.9355C4439.2931,-4598.9355 4818.0371,-4598.9355 5024.2541,-4598.9355"/>
<polygon fill="#000000" stroke="#000000" points="5024.549,-4602.4356 5034.5489,-4598.9355 5024.5489,-4595.4356 5024.549,-4602.4356"/>
</g>
<!-- org.scalacheck.Shrink[(Symbol, Int)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge89" class="edge">
<title>org.scalacheck.Shrink[(Symbol, Int)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4211.2877,-4587.3174C4357.0894,-4578.7306 4571.3283,-4577.0093 4625.8509,-4634.9355 4643.7855,-4653.9897 4615.9409,-6499.8584 4633.8509,-6518.9355 4688.4765,-6577.1206 4910.2792,-6573.417 5050.2344,-6564.6907"/>
<polygon fill="#000000" stroke="#000000" points="5050.8284,-6568.1599 5060.5839,-6564.027 5050.3804,-6561.1742 5050.8284,-6568.1599"/>
</g>
<!-- Double(200.2) =&gt; ?{def asJson: ?} -->
<g id="node338" class="node">
<title>Double(200.2) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-45926.9355" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="475.5494" y="-45930.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Double(200.2) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-45915.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.util.Buildable[io.circe.CursorOp,List[io.circe.CursorOp]] -->
<g id="node339" class="node">
<title>org.scalacheck.util.Buildable[io.circe.CursorOp,List[io.circe.CursorOp]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-36206.9355" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="1551.104" y="-36210.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[io.circe.CursorOp,List[io.circe.CursorOp]]</text>
<text text-anchor="middle" x="1749.604" y="-36195.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,io.circe.CursorOp,List[io.circe.CursorOp]] -->
<g id="node925" class="node">
<title>scala.collection.generic.CanBuildFrom[F,io.circe.CursorOp,List[io.circe.CursorOp]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-36206.9355" rx="338.9084" ry="26.7407"/>
<text text-anchor="start" x="2699.9013" y="-36210.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,io.circe.CursorOp,List[io.circe.CursorOp]]</text>
<text text-anchor="middle" x="2931.4013" y="-36195.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[io.circe.CursorOp,List[io.circe.CursorOp]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,io.circe.CursorOp,List[io.circe.CursorOp]] -->
<g id="edge329" class="edge">
<title>org.scalacheck.util.Buildable[io.circe.CursorOp,List[io.circe.CursorOp]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,io.circe.CursorOp,List[io.circe.CursorOp]]</title>
<path fill="none" stroke="#000000" d="M2041.7337,-36206.9355C2205.3398,-36206.9355 2410.4136,-36206.9355 2582.427,-36206.9355"/>
<polygon fill="#000000" stroke="#000000" points="2582.6668,-36210.4356 2592.6668,-36206.9355 2582.6667,-36203.4356 2582.6668,-36210.4356"/>
</g>
<!-- Int(4) =&gt; ?{def asJson: ?} -->
<g id="node340" class="node">
<title>Int(4) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-45998.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="499.5494" y="-46002.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Int(4) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-45987.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- io.circe.Decoder[(Int, String, Double)] -->
<g id="node341" class="node">
<title>io.circe.Decoder[(Int, String, Double)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-11394.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="3965.2721" y="-11398.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, String, Double)]</text>
<text text-anchor="middle" x="4070.7721" y="-11383.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- io.circe.Decoder[(Int, String, Double)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge93" class="edge">
<title>io.circe.Decoder[(Int, String, Double)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4215.2689,-11383.1017C4360.944,-11374.7356 4571.7788,-11373.5799 4625.8509,-11430.9355 4638.8846,-11444.7607 4622.2527,-12783.8858 4633.8509,-12798.9355 4734.9485,-12930.119 4942.2503,-12949.888 5066.6928,-12948.8323"/>
<polygon fill="#000000" stroke="#000000" points="5067.0346,-12952.3282 5076.9873,-12948.6959 5066.9418,-12945.3288 5067.0346,-12952.3282"/>
</g>
<!-- io.circe.Decoder[(Int, String, Double)]&#45;&gt;io.circe.Decoder[String] -->
<g id="edge1301" class="edge">
<title>io.circe.Decoder[(Int, String, Double)]&#45;&gt;io.circe.Decoder[String]</title>
<path fill="none" stroke="#000000" d="M4215.4767,-11406.6683C4361.0336,-11414.9162 4571.4988,-11415.9426 4625.8509,-11358.9355 4643.7949,-11340.1151 4616.249,-10910.0763 4633.8509,-10890.9355 4747.1659,-10767.7141 4964.4497,-10790.875 5083.9077,-10815.6279"/>
<polygon fill="#000000" stroke="#000000" points="5083.2373,-10819.0634 5093.7461,-10817.716 5084.6907,-10812.216 5083.2373,-10819.0634"/>
</g>
<!-- io.circe.Decoder[Double] -->
<g id="node703" class="node">
<title>io.circe.Decoder[Double]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-11394.9355" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="5098.2166" y="-11398.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Double]</text>
<text text-anchor="middle" x="5167.7166" y="-11383.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 5ms</text>
</g>
<!-- io.circe.Decoder[(Int, String, Double)]&#45;&gt;io.circe.Decoder[Double] -->
<g id="edge808" class="edge">
<title>io.circe.Decoder[(Int, String, Double)]&#45;&gt;io.circe.Decoder[Double]</title>
<path fill="none" stroke="#000000" d="M4231.452,-11394.9355C4453.576,-11394.9355 4849.4344,-11394.9355 5047.6607,-11394.9355"/>
<polygon fill="#000000" stroke="#000000" points="5047.8192,-11398.4356 5057.8192,-11394.9355 5047.8192,-11391.4356 5047.8192,-11398.4356"/>
</g>
<!-- io.circe.Encoder[Map[Symbol,Int]] -->
<g id="node342" class="node">
<title>io.circe.Encoder[Map[Symbol,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-22310.9355" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="474.5494" y="-22314.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Map[Symbol,Int]]</text>
<text text-anchor="middle" x="572.0494" y="-22299.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.Encoder[Map[Symbol,Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge463" class="edge">
<title>io.circe.Encoder[Map[Symbol,Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M706.9264,-22322.494C857.0887,-22332.042 1086.3283,-22335.606 1144.0988,-22274.9355 1155.1332,-22263.3472 1144.4315,-21712.9805 1152.0988,-21698.9355 1266.2662,-21489.803 1543.8696,-21371.9891 1676.5886,-21325.8767"/>
<polygon fill="#000000" stroke="#000000" points="1677.9549,-21329.1082 1686.2754,-21322.5492 1675.6808,-21322.4879 1677.9549,-21329.1082"/>
</g>
<!-- io.circe.KeyEncoder[Symbol] -->
<g id="node1607" class="node">
<title>io.circe.KeyEncoder[Symbol]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-22310.9355" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="1667.604" y="-22314.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.KeyEncoder[Symbol]</text>
<text text-anchor="middle" x="1749.604" y="-22299.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[Map[Symbol,Int]]&#45;&gt;io.circe.KeyEncoder[Symbol] -->
<g id="edge1340" class="edge">
<title>io.circe.Encoder[Map[Symbol,Int]]&#45;&gt;io.circe.KeyEncoder[Symbol]</title>
<path fill="none" stroke="#000000" d="M721.4862,-22310.9355C951.5299,-22310.9355 1389.0989,-22310.9355 1611.868,-22310.9355"/>
<polygon fill="#000000" stroke="#000000" points="1611.9858,-22314.4356 1621.9857,-22310.9355 1611.9857,-22307.4356 1611.9858,-22314.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.JsonNumber] -->
<g id="node343" class="node">
<title>org.scalacheck.Arbitrary[io.circe.JsonNumber]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-46070.9355" rx="193.0803" ry="26.7407"/>
<text text-anchor="start" x="443.5494" y="-46074.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.JsonNumber]</text>
<text text-anchor="middle" x="572.0494" y="-46059.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[Short] -->
<g id="node344" class="node">
<title>io.circe.Encoder[Short]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-46142.9355" rx="101.6471" ry="26.7407"/>
<text text-anchor="start" x="508.0494" y="-46146.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Short]</text>
<text text-anchor="middle" x="572.0494" y="-46131.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Byte, Int)] -->
<g id="node345" class="node">
<title>org.scalacheck.Arbitrary[(Byte, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-2870.9355" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="3970.2721" y="-2874.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Byte, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-2859.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- scala.reflect.ClassTag[(Byte, Int)] -->
<g id="node423" class="node">
<title>scala.reflect.ClassTag[(Byte, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-2798.9355" rx="142.6713" ry="26.7407"/>
<text text-anchor="start" x="5074.7166" y="-2802.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Byte, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-2787.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Byte, Int)]&#45;&gt;scala.reflect.ClassTag[(Byte, Int)] -->
<g id="edge502" class="edge">
<title>org.scalacheck.Arbitrary[(Byte, Int)]&#45;&gt;scala.reflect.ClassTag[(Byte, Int)]</title>
<path fill="none" stroke="#000000" d="M4214.4601,-2861.5043C4424.1087,-2847.7436 4811.7292,-2822.3014 5022.3327,-2808.4781"/>
<polygon fill="#000000" stroke="#000000" points="5022.7867,-2811.9559 5032.536,-2807.8084 5022.3282,-2804.9709 5022.7867,-2811.9559"/>
</g>
<!-- org.scalacheck.Arbitrary[Byte] -->
<g id="node1226" class="node">
<title>org.scalacheck.Arbitrary[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-2870.9355" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="5083.2166" y="-2874.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Byte]</text>
<text text-anchor="middle" x="5167.7166" y="-2859.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 35ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Byte, Int)]&#45;&gt;org.scalacheck.Arbitrary[Byte] -->
<g id="edge316" class="edge">
<title>org.scalacheck.Arbitrary[(Byte, Int)]&#45;&gt;org.scalacheck.Arbitrary[Byte]</title>
<path fill="none" stroke="#000000" d="M4224.4526,-2870.9355C4437.547,-2870.9355 4819.7796,-2870.9355 5026.2045,-2870.9355"/>
<polygon fill="#000000" stroke="#000000" points="5026.5071,-2874.4356 5036.507,-2870.9355 5026.507,-2867.4356 5026.5071,-2874.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Byte, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge911" class="edge">
<title>org.scalacheck.Arbitrary[(Byte, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4215.1077,-2880.1926C4359.7746,-2886.0922 4568.9655,-2884.311 4625.8509,-2829.9355 4636.6902,-2819.5746 4628.5074,-2776.9458 4633.8509,-2762.9355 4755.1029,-2445.0254 5037.3442,-2133.9243 5134.3062,-2032.927"/>
<polygon fill="#000000" stroke="#000000" points="5137.0797,-2035.093 5141.5011,-2025.4648 5132.0405,-2030.2343 5137.0797,-2035.093"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N] -->
<g id="node346" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-46214.9355" rx="429.8419" ry="26.7407"/>
<text text-anchor="start" x="276.0494" y="-46218.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N]</text>
<text text-anchor="middle" x="572.0494" y="-46203.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[io.circe.JsonNumber] =&gt; ?{def ===: ?} -->
<g id="node347" class="node">
<title>Option[io.circe.JsonNumber] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-44126.9355" rx="197.0658" ry="26.7407"/>
<text text-anchor="start" x="440.5494" y="-44130.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[io.circe.JsonNumber] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-44115.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 43ms</text>
</g>
<!-- cats.Eq[Option[io.circe.JsonNumber]] -->
<g id="node624" class="node">
<title>cats.Eq[Option[io.circe.JsonNumber]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-44126.9355" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="1645.104" y="-44130.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[io.circe.JsonNumber]]</text>
<text text-anchor="middle" x="1749.604" y="-44115.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 77ms</text>
</g>
<!-- Option[io.circe.JsonNumber] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[io.circe.JsonNumber]] -->
<g id="edge764" class="edge">
<title>Option[io.circe.JsonNumber] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[io.circe.JsonNumber]]</title>
<path fill="none" stroke="#000000" d="M769.4773,-44126.9355C996.5654,-44126.9355 1365.6049,-44126.9355 1580.1715,-44126.9355"/>
<polygon fill="#000000" stroke="#000000" points="1580.2711,-44130.4356 1590.271,-44126.9355 1580.271,-44123.4356 1580.2711,-44130.4356"/>
</g>
<!-- Option[List[String]] =&gt; ?{def ===: ?} -->
<g id="node348" class="node">
<title>Option[List[String]] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-15060.9355" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="9909.5427" y="-15064.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[List[String]] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10016.0427" y="-15049.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- Option[List[String]] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[List[String]]] -->
<g id="edge1441" class="edge">
<title>Option[List[String]] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[List[String]]]</title>
<path fill="none" stroke="#000000" d="M10178.4632,-15060.9355C10337.2495,-15060.9355 10576.1467,-15060.9355 10724.411,-15060.9355"/>
<polygon fill="#000000" stroke="#000000" points="10724.4854,-15064.4356 10734.4854,-15060.9355 10724.4853,-15057.4356 10724.4854,-15064.4356"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; AccumulatingDecoderSpec.this.PropertyCheckConfigParam -->
<g id="node349" class="node">
<title>(Any =&gt; Nothing) =&gt; AccumulatingDecoderSpec.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-46286.9355" rx="333.0946" ry="26.7407"/>
<text text-anchor="start" x="344.5494" y="-46290.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; AccumulatingDecoderSpec.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-46275.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 1ms</text>
</g>
<!-- shapeless.IsTuple[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]] -->
<g id="node350" class="node">
<title>shapeless.IsTuple[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-13826.9355" rx="332.1805" ry="26.7407"/>
<text text-anchor="start" x="11431.3883" y="-13830.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]]</text>
<text text-anchor="middle" x="11658.3883" y="-13815.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[cats.data.NonEmptyList[Int]] -->
<g id="node351" class="node">
<title>shapeless.IsTuple[cats.data.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-19392.9355" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="11527.3883" y="-19396.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[cats.data.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="11658.3883" y="-19381.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Int,Seq[Int]] -->
<g id="node352" class="node">
<title>org.scalacheck.util.Buildable[Int,Seq[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-4886.9355" rx="174.8109" ry="26.7407"/>
<text text-anchor="start" x="5052.2166" y="-4890.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Int,Seq[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-4875.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 25ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Int,Seq[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,Seq[Int]] -->
<g id="edge1080" class="edge">
<title>org.scalacheck.util.Buildable[Int,Seq[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,Seq[Int]]</title>
<path fill="none" stroke="#000000" d="M5342.4403,-4886.9355C5519.7826,-4886.9355 5795.3242,-4886.9355 5990.7419,-4886.9355"/>
<polygon fill="#000000" stroke="#000000" points="5990.8615,-4890.4356 6000.8615,-4886.9355 5990.8615,-4883.4356 5990.8615,-4890.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,Int,Stream[Int]] -->
<g id="node353" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,Int,Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-14346.9355" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="4991.7166" y="-14350.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,Int,Stream[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-14335.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION) -->
<g id="node355" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-46358.9355" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="376.5494" y="-46362.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-46347.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Int =&gt; Int] -->
<g id="node356" class="node">
<title>scala.reflect.ClassTag[Int =&gt; Int]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-3374.9355" rx="140.9288" ry="26.7407"/>
<text text-anchor="start" x="3979.2721" y="-3378.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Int =&gt; Int]</text>
<text text-anchor="middle" x="4070.7721" y="-3363.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 4ms</text>
</g>
<!-- scala.reflect.ClassTag[(java.util.UUID, Int)] -->
<g id="node357" class="node">
<title>scala.reflect.ClassTag[(java.util.UUID, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-3626.9355" rx="182.3671" ry="26.7407"/>
<text text-anchor="start" x="5046.7166" y="-3630.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(java.util.UUID, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-3615.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc3] -->
<g id="node358" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc3]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-46430.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="1620.104" y="-46434.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc3]</text>
<text text-anchor="middle" x="1749.604" y="-46419.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Vector[(String, io.circe.Json)] =&gt; ?{def ===: ?} -->
<g id="node359" class="node">
<title>Vector[(String, io.circe.Json)] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-15354.9355" rx="200.2225" ry="26.7407"/>
<text text-anchor="start" x="9882.5427" y="-15358.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Vector[(String, io.circe.Json)] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10016.0427" y="-15343.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 51ms</text>
</g>
<!-- Vector[(String, io.circe.Json)] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Vector[(String, io.circe.Json)]] -->
<g id="edge709" class="edge">
<title>Vector[(String, io.circe.Json)] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Vector[(String, io.circe.Json)]]</title>
<path fill="none" stroke="#000000" d="M10216.2104,-15354.9355C10359.335,-15354.9355 10549.9695,-15354.9355 10686.2891,-15354.9355"/>
<polygon fill="#000000" stroke="#000000" points="10686.4197,-15358.4356 10696.4197,-15354.9355 10686.4196,-15351.4356 10686.4197,-15358.4356"/>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node360" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-17272.9355" rx="373.2048" ry="26.7407"/>
<text text-anchor="start" x="5966.2346" y="-17276.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="6222.2346" y="-17261.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.IsTuple[Option[Unit]] -->
<g id="node361" class="node">
<title>shapeless.IsTuple[Option[Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-13428.9355" rx="135.5294" ry="26.7407"/>
<text text-anchor="start" x="11570.3883" y="-13432.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Option[Unit]]</text>
<text text-anchor="middle" x="11658.3883" y="-13417.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.functor.Contravariant[io.circe.ArrayEncoder] -->
<g id="node362" class="node">
<title>cats.functor.Contravariant[io.circe.ArrayEncoder]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-46502.9355" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="436.0494" y="-46506.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.functor.Contravariant[io.circe.ArrayEncoder]</text>
<text text-anchor="middle" x="572.0494" y="-46491.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Map[Int,Int]] -->
<g id="node363" class="node">
<title>cats.kernel.Eq[scala.collection.immutable.Map[Int,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-15888.9355" rx="227.8769" ry="26.7407"/>
<text text-anchor="start" x="19184.1796" y="-15892.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.collection.immutable.Map[Int,Int]]</text>
<text text-anchor="middle" x="19337.1796" y="-15877.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Map[Int,Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1417" class="edge">
<title>cats.kernel.Eq[scala.collection.immutable.Map[Int,Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M19560.7293,-15894.2609C19609.4822,-15900.765 19659.9076,-15911.7784 19704.8751,-15929.9355 19812.5729,-15973.4222 19914.2729,-16068.781 19963.4605,-16119.5641"/>
<polygon fill="#000000" stroke="#000000" points="19961.1651,-16122.2271 19970.6142,-16127.0194 19966.2161,-16117.3806 19961.1651,-16122.2271"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int)] -->
<g id="node366" class="node">
<title>io.circe.Encoder[(Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-22238.9355" rx="130.2154" ry="26.7407"/>
<text text-anchor="start" x="488.0494" y="-22242.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-22227.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int)]] -->
<g id="node762" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-22238.9355" rx="255.0313" ry="26.7407"/>
<text text-anchor="start" x="1577.104" y="-22242.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-22227.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int)]] -->
<g id="edge418" class="edge">
<title>io.circe.Encoder[(Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M702.2845,-22238.9355C889.9229,-22238.9355 1240.487,-22238.9355 1484.076,-22238.9355"/>
<polygon fill="#000000" stroke="#000000" points="1484.1431,-22242.4356 1494.1431,-22238.9355 1484.1431,-22235.4356 1484.1431,-22242.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1530" class="edge">
<title>io.circe.Encoder[(Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M691.8098,-22249.479C841.1919,-22259.6857 1084.2933,-22265.6186 1144.0988,-22202.9355 1163.4297,-22182.6745 1138.6562,-21723.5017 1152.0988,-21698.9355 1266.4735,-21489.9163 1543.9742,-21372.0462 1676.6281,-21325.8983"/>
<polygon fill="#000000" stroke="#000000" points="1677.9923,-21329.1304 1686.3102,-21322.5682 1675.7155,-21322.511 1677.9923,-21329.1304"/>
</g>
<!-- org.scalacheck.Shrink[Option[Int]] -->
<g id="node368" class="node">
<title>org.scalacheck.Shrink[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-7228.9355" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="3975.2721" y="-7232.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Option[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-7217.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- org.scalacheck.Shrink[Option[Int]]&#45;&gt;Integral[Option[Int]] -->
<g id="edge495" class="edge">
<title>org.scalacheck.Shrink[Option[Int]]&#45;&gt;Integral[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4205.3405,-7218.2821C4350.587,-7210.0222 4568.8346,-7208.0859 4625.8509,-7264.9355 4644.4626,-7283.4928 4615.2631,-7364.3544 4633.8509,-7382.9355 4692.9385,-7442.0017 4932.5571,-7435.8372 5069.8422,-7426.9479"/>
<polygon fill="#000000" stroke="#000000" points="5070.2062,-7430.4315 5079.9522,-7426.2764 5069.7422,-7423.4469 5070.2062,-7430.4315"/>
</g>
<!-- org.scalacheck.Shrink[Option[Int]]&#45;&gt;Fractional[Option[Int]] -->
<g id="edge1455" class="edge">
<title>org.scalacheck.Shrink[Option[Int]]&#45;&gt;Fractional[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4207.5433,-7219.2343C4351.8212,-7212.1404 4566.3925,-7211.5444 4625.8509,-7264.9355 4641.2909,-7278.8 4618.4287,-7297.0513 4633.8509,-7310.9355 4694.4692,-7365.5088 4923.1291,-7362.1515 5060.768,-7354.6607"/>
<polygon fill="#000000" stroke="#000000" points="5061.1378,-7358.1455 5070.9262,-7354.0914 5060.746,-7351.1565 5061.1378,-7358.1455"/>
</g>
<!-- org.scalacheck.Shrink[Option[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Option[Int]] -->
<g id="edge1258" class="edge">
<title>org.scalacheck.Shrink[Option[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4213.6157,-7234.9256C4409.0939,-7243.123 4760.4248,-7257.8559 4977.8642,-7266.9742"/>
<polygon fill="#000000" stroke="#000000" points="4977.9782,-7270.4819 4988.1161,-7267.4041 4978.2716,-7263.4881 4977.9782,-7270.4819"/>
</g>
<!-- Option[Int] =&gt; Traversable[Int] -->
<g id="node1347" class="node">
<title>Option[Int] =&gt; Traversable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-7490.9355" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="5080.7166" y="-7494.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Int] =&gt; Traversable[Int]</text>
<text text-anchor="middle" x="5167.7166" y="-7479.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Option[Int]]&#45;&gt;Option[Int] =&gt; Traversable[Int] -->
<g id="edge657" class="edge">
<title>org.scalacheck.Shrink[Option[Int]]&#45;&gt;Option[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M4204.9538,-7218.0558C4350.4424,-7209.5229 4569.4829,-7207.2741 4625.8509,-7264.9355 4640.6215,-7280.0451 4619.0997,-7439.8071 4633.8509,-7454.9355 4687.1948,-7509.6436 4892.4386,-7508.9059 5032.3293,-7501.3909"/>
<polygon fill="#000000" stroke="#000000" points="5032.9149,-7504.8638 5042.7054,-7500.8147 5032.5267,-7497.8746 5032.9149,-7504.8638"/>
</g>
<!-- org.scalacheck.Shrink[Option[Int]]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge1175" class="edge">
<title>org.scalacheck.Shrink[Option[Int]]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4204.276,-7240.048C4350.038,-7248.8967 4570.1941,-7251.5338 4625.8509,-7192.9355 4648.8853,-7168.6838 4610.8477,-6615.2168 4633.8509,-6590.9355 4688.7001,-6533.0392 4910.1372,-6536.6118 5050.0217,-6545.2423"/>
<polygon fill="#000000" stroke="#000000" points="5050.1647,-6548.7583 5060.3664,-6545.8989 5050.6082,-6541.7724 5050.1647,-6548.7583"/>
</g>
<!-- String(&#39;a&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node369" class="node">
<title>String(&#39;a&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-46574.9355" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="500.0494" y="-46578.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;a&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="572.0494" y="-46563.7355" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 12ms</text>
</g>
<!-- Either[io.circe.ParsingFailure,io.circe.Json] =&gt; ?{def ===: ?} -->
<g id="node370" class="node">
<title>Either[io.circe.ParsingFailure,io.circe.Json] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-46646.9355" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="402.0494" y="-46650.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Either[io.circe.ParsingFailure,io.circe.Json] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-46635.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- cats.Eq[Option[String]] -->
<g id="node371" class="node">
<title>cats.Eq[Option[String]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-14008.9355" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="11593.8883" y="-14012.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[String]]</text>
<text text-anchor="middle" x="11658.3883" y="-13997.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 30ms</text>
</g>
<!-- cats.Eq[Option[String]]&#45;&gt;cats.kernel.Order[String] -->
<g id="edge743" class="edge">
<title>cats.Eq[Option[String]]&#45;&gt;cats.kernel.Order[String]</title>
<path fill="none" stroke="#000000" d="M11732.3039,-13990.1477C11820.6093,-13972.6538 11966.1239,-13960.4538 12043.7615,-14044.9355 12060.9228,-14063.6097 12037.0595,-14937.2694 12051.7615,-14957.9355 12108.0392,-15037.0439 12216.95,-15068.2599 12301.0657,-15080.4481"/>
<polygon fill="#000000" stroke="#000000" points="12300.8118,-15083.946 12311.1956,-15081.842 12301.7661,-15077.0114 12300.8118,-15083.946"/>
</g>
<!-- shapeless.IsTuple[Option[String]] -->
<g id="node593" class="node">
<title>shapeless.IsTuple[Option[String]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-14008.9355" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="12323.4214" y="-14012.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Option[String]]</text>
<text text-anchor="middle" x="12415.9214" y="-13997.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[Option[String]]&#45;&gt;shapeless.IsTuple[Option[String]] -->
<g id="edge1485" class="edge">
<title>cats.Eq[Option[String]]&#45;&gt;shapeless.IsTuple[Option[String]]</title>
<path fill="none" stroke="#000000" d="M11760.9465,-14008.9355C11890.348,-14008.9355 12114.0048,-14008.9355 12263.4518,-14008.9355"/>
<polygon fill="#000000" stroke="#000000" points="12263.6337,-14012.4356 12273.6337,-14008.9355 12263.6337,-14005.4356 12263.6337,-14012.4356"/>
</g>
<!-- Integral[(Int, Int, Int, Int)] -->
<g id="node372" class="node">
<title>Integral[(Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-6338.9355" rx="112.36" ry="26.7407"/>
<text text-anchor="start" x="5096.2166" y="-6342.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-6327.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[Bomb$3]] -->
<g id="node374" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[Bomb$3]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-46718.9355" rx="214.9209" ry="26.7407"/>
<text text-anchor="start" x="2787.4013" y="-46722.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[Bomb$3]]</text>
<text text-anchor="middle" x="2931.4013" y="-46707.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="node375" class="node">
<title>scala.reflect.ClassTag[scala.collection.immutable.SortedMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-10272.9355" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="3872.2721" y="-10276.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.collection.immutable.SortedMap[Long,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-10261.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Char] -->
<g id="node376" class="node">
<title>scala.reflect.ClassTag[Char]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-9438.9355" rx="120.8306" ry="26.7407"/>
<text text-anchor="start" x="6144.7346" y="-9442.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Char]</text>
<text text-anchor="middle" x="6222.2346" y="-9427.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Integral[io.circe.tests.examples.Foo] -->
<g id="node377" class="node">
<title>Integral[io.circe.tests.examples.Foo]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-46862.9355" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="1649.604" y="-46866.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[io.circe.tests.examples.Foo]</text>
<text text-anchor="middle" x="1749.604" y="-46851.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.Decoder[Int]] -->
<g id="node379" class="node">
<title>org.scalacheck.Arbitrary[io.circe.Decoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-1926.9355" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="3941.7721" y="-1930.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.Decoder[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-1915.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 12ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.Decoder[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge43" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.Decoder[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4246.1029,-1938.4437C4467.3407,-1952.9651 4842.6131,-1977.5968 5039.0817,-1990.4924"/>
<polygon fill="#000000" stroke="#000000" points="5038.958,-1993.9917 5049.1658,-1991.1542 5039.4165,-1987.0067 5038.958,-1993.9917"/>
</g>
<!-- io.circe.Encoder[List[Boolean]] -->
<g id="node381" class="node">
<title>io.circe.Encoder[List[Boolean]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-19574.9355" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="1662.604" y="-19578.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[List[Boolean]]</text>
<text text-anchor="middle" x="1749.604" y="-19563.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 9ms</text>
</g>
<!-- io.circe.Encoder[Boolean] -->
<g id="node1194" class="node">
<title>io.circe.Encoder[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-19574.9355" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="2859.4013" y="-19578.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Boolean]</text>
<text text-anchor="middle" x="2931.4013" y="-19563.7355" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 11ms</text>
</g>
<!-- io.circe.Encoder[List[Boolean]]&#45;&gt;io.circe.Encoder[Boolean] -->
<g id="edge5" class="edge">
<title>io.circe.Encoder[List[Boolean]]&#45;&gt;io.circe.Encoder[Boolean]</title>
<path fill="none" stroke="#000000" d="M1884.0206,-19574.9355C2115.1985,-19574.9355 2584.7192,-19574.9355 2808.0402,-19574.9355"/>
<polygon fill="#000000" stroke="#000000" points="2808.1609,-19578.4356 2818.1609,-19574.9355 2808.1609,-19571.4356 2808.1609,-19578.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[io.circe.Json],(io.circe.Json, Int),That] -->
<g id="node382" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[io.circe.Json],(io.circe.Json, Int),That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-46898.9355" rx="449.0256" ry="26.7407"/>
<text text-anchor="start" x="262.5494" y="-46902.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[io.circe.Json],(io.circe.Json, Int),That]</text>
<text text-anchor="middle" x="572.0494" y="-46887.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc16] -->
<g id="node384" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc16]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-46970.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="1605.104" y="-46974.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc16]</text>
<text text-anchor="middle" x="1749.604" y="-46959.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; Double) =&gt; Int -->
<g id="node385" class="node">
<title>(=&gt; Double) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-47042.9355" rx="88.2768" ry="26.7407"/>
<text text-anchor="start" x="517.5494" y="-47046.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Double) =&gt; Int</text>
<text text-anchor="middle" x="572.0494" y="-47031.7355" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 16ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION) -->
<g id="node386" class="node">
<title>(Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-47114.9355" rx="275.5435" ry="26.7407"/>
<text text-anchor="start" x="385.0494" y="-47118.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-47103.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc14] -->
<g id="node387" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc14]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-47186.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="1605.104" y="-47190.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc14]</text>
<text text-anchor="middle" x="1749.604" y="-47175.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Integral[Symbol] -->
<g id="node388" class="node">
<title>Integral[Symbol]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-4562.9355" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="6175.2346" y="-4566.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Symbol]</text>
<text text-anchor="middle" x="6222.2346" y="-4551.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Map[String,Int]] -->
<g id="node389" class="node">
<title>cats.kernel.Eq[scala.collection.immutable.Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-15308.9355" rx="240.3326" ry="26.7407"/>
<text text-anchor="start" x="19175.1796" y="-15312.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.collection.immutable.Map[String,Int]]</text>
<text text-anchor="middle" x="19337.1796" y="-15297.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Map[String,Int]]&#45;&gt;shapeless.IsTuple[scala.collection.immutable.Map[String,Int]] -->
<g id="edge1303" class="edge">
<title>cats.kernel.Eq[scala.collection.immutable.Map[String,Int]]&#45;&gt;shapeless.IsTuple[scala.collection.immutable.Map[String,Int]]</title>
<path fill="none" stroke="#000000" d="M19577.6713,-15308.9355C19627.3158,-15308.9355 19679.8566,-15308.9355 19730.2857,-15308.9355"/>
<polygon fill="#000000" stroke="#000000" points="19730.3419,-15312.4356 19740.3419,-15308.9355 19730.3419,-15305.4356 19730.3419,-15312.4356"/>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Map[String,Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge635" class="edge">
<title>cats.kernel.Eq[scala.collection.immutable.Map[String,Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M19455.8831,-15285.5562C19536.9892,-15277.0022 19640.9652,-15281.855 19704.8751,-15344.9355 19716.3325,-15356.2443 19709.0807,-15401.2906 19712.8751,-15416.9355 19780.5699,-15696.0506 19926.5106,-16012.3688 19976.829,-16117.1463"/>
<polygon fill="#000000" stroke="#000000" points="19973.7621,-16118.8445 19981.2567,-16126.3333 19980.0679,-16115.8053 19973.7621,-16118.8445"/>
</g>
<!-- result1.type =&gt; ?{def ===: ?} -->
<g id="node390" class="node">
<title>result1.type =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-19752.9355" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="10774.9287" y="-19756.7355" font-family="Times,serif" font-size="14.00" fill="#000000">result1.type =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10858.4287" y="-19741.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- result1.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonObject] -->
<g id="edge1470" class="edge">
<title>result1.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonObject]</title>
<path fill="none" stroke="#000000" d="M10983.9961,-19746.3388C11064.6331,-19740.9896 11171.4123,-19731.8321 11265.0151,-19716.9355 11372.064,-19699.8991 11493.3192,-19670.2408 11572.5587,-19649.4252"/>
<polygon fill="#000000" stroke="#000000" points="11573.7148,-19652.74 11582.4909,-19646.8046 11571.9289,-19645.9717 11573.7148,-19652.74"/>
</g>
<!-- result1.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[io.circe.JsonObject]] -->
<g id="edge1414" class="edge">
<title>result1.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[io.circe.JsonObject]]</title>
<path fill="none" stroke="#000000" d="M10987.8451,-19752.9355C11126.0624,-19752.9355 11345.4263,-19752.9355 11495.347,-19752.9355"/>
<polygon fill="#000000" stroke="#000000" points="11495.5694,-19756.4356 11505.5693,-19752.9355 11495.5693,-19749.4356 11495.5694,-19756.4356"/>
</g>
<!-- org.scalacheck.util.Buildable[(Long, Int),scala.collection.mutable.HashMap[Long,Int]] -->
<g id="node391" class="node">
<title>org.scalacheck.util.Buildable[(Long, Int),scala.collection.mutable.HashMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-9802.9355" rx="348.7073" ry="26.7407"/>
<text text-anchor="start" x="3832.2721" y="-9806.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(Long, Int),scala.collection.mutable.HashMap[Long,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-9791.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.mutable.HashMap[Long,Int]] -->
<g id="node1454" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.mutable.HashMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-9802.9355" rx="395.0455" ry="26.7407"/>
<text text-anchor="start" x="4896.2166" y="-9806.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.mutable.HashMap[Long,Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-9791.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(Long, Int),scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.mutable.HashMap[Long,Int]] -->
<g id="edge1216" class="edge">
<title>org.scalacheck.util.Buildable[(Long, Int),scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.mutable.HashMap[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M4419.7364,-9802.9355C4528.5747,-9802.9355 4649.5483,-9802.9355 4761.9321,-9802.9355"/>
<polygon fill="#000000" stroke="#000000" points="4762.0837,-9806.4356 4772.0837,-9802.9355 4762.0837,-9799.4356 4762.0837,-9806.4356"/>
</g>
<!-- key.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node392" class="node">
<title>key.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-47258.9355" rx="108.789" ry="26.7407"/>
<text text-anchor="start" x="503.0494" y="-47262.7355" font-family="Times,serif" font-size="14.00" fill="#000000">key.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="572.0494" y="-47247.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc14]] -->
<g id="node395" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc14]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-47330.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="1531.604" y="-47334.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc14]]</text>
<text text-anchor="middle" x="1749.604" y="-47319.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V] -->
<g id="node396" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-47402.9355" rx="535.9739" ry="26.7407"/>
<text text-anchor="start" x="201.0494" y="-47406.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V]</text>
<text text-anchor="middle" x="572.0494" y="-47391.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam -->
<g id="node397" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-47474.9355" rx="311.6683" ry="26.7407"/>
<text text-anchor="start" x="359.5494" y="-47478.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-47463.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Either[String,(String, io.circe.Json, Boolean)] =&gt; Traversable[(String, (String, io.circe.Json, Boolean))] -->
<g id="node398" class="node">
<title>Either[String,(String, io.circe.Json, Boolean)] =&gt; Traversable[(String, (String, io.circe.Json, Boolean))]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-6470.9355" rx="411.5723" ry="26.7407"/>
<text text-anchor="start" x="3787.7721" y="-6474.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Either[String,(String, io.circe.Json, Boolean)] =&gt; Traversable[(String, (String, io.circe.Json, Boolean))]</text>
<text text-anchor="middle" x="4070.7721" y="-6459.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.mutable.HashMap[Long,Int]] -->
<g id="node399" class="node">
<title>org.scalacheck.Arbitrary[scala.collection.mutable.HashMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-9838.9355" rx="286.2565" ry="26.7407"/>
<text text-anchor="start" x="2736.9013" y="-9842.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.collection.mutable.HashMap[Long,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-9827.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.mutable.HashMap[Long,Int]] -->
<g id="edge231" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.mutable.HashMap[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M3091.7092,-9861.2251C3208.958,-9876.9087 3371.9592,-9897.4301 3515.6933,-9910.9355 3614.2415,-9920.1953 3722.8581,-9927.8112 3817.6829,-9933.6151"/>
<polygon fill="#000000" stroke="#000000" points="3817.5032,-9937.1106 3827.6973,-9934.2245 3817.9284,-9930.1235 3817.5032,-9937.1106"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Long, Int),scala.collection.mutable.HashMap[Long,Int]] -->
<g id="edge795" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Long, Int),scala.collection.mutable.HashMap[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M3202.8614,-9830.3584C3363.3121,-9825.2887 3567.7178,-9818.8302 3737.8522,-9813.4546"/>
<polygon fill="#000000" stroke="#000000" points="3738.0937,-9816.9488 3747.9782,-9813.1347 3737.8726,-9809.9523 3738.0937,-9816.9488"/>
</g>
<!-- scala.collection.mutable.HashMap[Long,Int] =&gt; Traversable[(Long, Int)] -->
<g id="node880" class="node">
<title>scala.collection.mutable.HashMap[Long,Int] =&gt; Traversable[(Long, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-9510.9355" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="3869.2721" y="-9514.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.mutable.HashMap[Long,Int] =&gt; Traversable[(Long, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-9499.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;scala.collection.mutable.HashMap[Long,Int] =&gt; Traversable[(Long, Int)] -->
<g id="edge1095" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;scala.collection.mutable.HashMap[Long,Int] =&gt; Traversable[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M2970.5919,-9812.3078C3061.5327,-9752.149 3295.9332,-9606.3638 3515.6933,-9546.9355 3595.3078,-9525.4059 3683.5791,-9514.2346 3765.8707,-9508.9065"/>
<polygon fill="#000000" stroke="#000000" points="3766.1117,-9512.3983 3775.8756,-9508.2853 3765.6779,-9505.4118 3766.1117,-9512.3983"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Long, Int)] -->
<g id="edge1096" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M3202.8614,-9847.5127C3422.2858,-9854.4457 3723.9146,-9863.9761 3907.6775,-9869.7823"/>
<polygon fill="#000000" stroke="#000000" points="3907.594,-9873.2814 3917.6996,-9870.099 3907.8151,-9866.2849 3907.594,-9873.2814"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node401" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-1278.9355" rx="257.2738" ry="26.7407"/>
<text text-anchor="start" x="3896.7721" y="-1282.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-1267.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 34ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1589" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-1278.9355" rx="246.5607" ry="26.7407"/>
<text text-anchor="start" x="5001.2166" y="-1282.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-1267.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge750" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4328.3033,-1278.9355C4503.8008,-1278.9355 4735.2301,-1278.9355 4910.6325,-1278.9355"/>
<polygon fill="#000000" stroke="#000000" points="4910.7835,-1282.4356 4920.7834,-1278.9355 4910.7834,-1275.4356 4910.7835,-1282.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1197" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4285.5136,-1264.0555C4421.4107,-1259.8789 4579.8603,-1266.4686 4625.8509,-1314.9355 4638.2419,-1327.9937 4621.4768,-1949.8616 4633.8509,-1962.9355 4748.9105,-2084.5023 4966.4782,-2052.7749 5085.2538,-2023.3202"/>
<polygon fill="#000000" stroke="#000000" points="5086.197,-2026.6919 5095.0323,-2020.8449 5084.4792,-2019.906 5086.197,-2026.6919"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc6] -->
<g id="node402" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc6]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-47546.9355" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="430.5494" y="-47550.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc6]</text>
<text text-anchor="middle" x="572.0494" y="-47535.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc6] -->
<g id="node477" class="node">
<title>Fractional[ProductCodecSuite.this.Cc6]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-47582.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="1641.104" y="-47586.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc6]</text>
<text text-anchor="middle" x="1749.604" y="-47571.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc6]&#45;&gt;Fractional[ProductCodecSuite.this.Cc6] -->
<g id="edge8" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc6]&#45;&gt;Fractional[ProductCodecSuite.this.Cc6]</title>
<path fill="none" stroke="#000000" d="M777.8371,-47553.2269C1004.4907,-47560.1561 1364.9051,-47571.1746 1577.2555,-47577.6665"/>
<polygon fill="#000000" stroke="#000000" points="1577.152,-47581.1649 1587.2544,-47577.9722 1577.366,-47574.1682 1577.152,-47581.1649"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc6] -->
<g id="node1186" class="node">
<title>Integral[ProductCodecSuite.this.Cc6]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-47510.9355" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="1647.104" y="-47514.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc6]</text>
<text text-anchor="middle" x="1749.604" y="-47499.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc6]&#45;&gt;Integral[ProductCodecSuite.this.Cc6] -->
<g id="edge1085" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc6]&#45;&gt;Integral[ProductCodecSuite.this.Cc6]</title>
<path fill="none" stroke="#000000" d="M777.8371,-47540.6442C1007.2972,-47533.6292 1373.8512,-47522.423 1585.075,-47515.9655"/>
<polygon fill="#000000" stroke="#000000" points="1585.4381,-47519.4561 1595.3265,-47515.6521 1585.2242,-47512.4594 1585.4381,-47519.4561"/>
</g>
<!-- List[Either[Int,String]] =&gt; Traversable[Either[Int,String]] -->
<g id="node403" class="node">
<title>List[Either[Int,String]] =&gt; Traversable[Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-8642.9355" rx="234.1047" ry="26.7407"/>
<text text-anchor="start" x="2773.9013" y="-8646.7355" font-family="Times,serif" font-size="14.00" fill="#000000">List[Either[Int,String]] =&gt; Traversable[Either[Int,String]]</text>
<text text-anchor="middle" x="2931.4013" y="-8631.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[Set[Int]] -->
<g id="node404" class="node">
<title>org.scalacheck.Shrink[Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-15858.9355" rx="132.4583" ry="26.7407"/>
<text text-anchor="start" x="3985.2721" y="-15862.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Set[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-15847.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- org.scalacheck.Shrink[Set[Int]]&#45;&gt;Set[Int] =&gt; Traversable[Int] -->
<g id="edge1527" class="edge">
<title>org.scalacheck.Shrink[Set[Int]]&#45;&gt;Set[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M4203.0892,-15858.9355C4414.5943,-15858.9355 4826.3945,-15858.9355 5036.9292,-15858.9355"/>
<polygon fill="#000000" stroke="#000000" points="5037.1095,-15862.4356 5047.1094,-15858.9355 5037.1094,-15855.4356 5037.1095,-15862.4356"/>
</g>
<!-- org.scalacheck.util.Buildable[Int,Set[Int]] -->
<g id="node545" class="node">
<title>org.scalacheck.util.Buildable[Int,Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-15786.9355" rx="172.5681" ry="26.7407"/>
<text text-anchor="start" x="5053.7166" y="-15790.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Int,Set[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-15775.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Shrink[Set[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Set[Int]] -->
<g id="edge147" class="edge">
<title>org.scalacheck.Shrink[Set[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Set[Int]]</title>
<path fill="none" stroke="#000000" d="M4196.9864,-15850.8066C4309.4952,-15843.5469 4478.6566,-15832.5983 4625.8509,-15822.9355 4750.825,-15814.7315 4892.004,-15805.3482 4998.9193,-15798.2186"/>
<polygon fill="#000000" stroke="#000000" points="4999.4124,-15801.6936 5009.1573,-15797.5358 4998.9465,-15794.7091 4999.4124,-15801.6936"/>
</g>
<!-- Integral[Set[Int]] -->
<g id="node942" class="node">
<title>Integral[Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-15930.9355" rx="77.1494" ry="26.7407"/>
<text text-anchor="start" x="5121.2166" y="-15934.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Set[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-15919.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[Set[Int]]&#45;&gt;Integral[Set[Int]] -->
<g id="edge545" class="edge">
<title>org.scalacheck.Shrink[Set[Int]]&#45;&gt;Integral[Set[Int]]</title>
<path fill="none" stroke="#000000" d="M4196.6056,-15867.1949C4422.0364,-15881.9914 4889.1653,-15912.6523 5081.796,-15925.296"/>
<polygon fill="#000000" stroke="#000000" points="5081.6616,-15928.7946 5091.8694,-15925.9572 5082.1201,-15921.8096 5081.6616,-15928.7946"/>
</g>
<!-- org.scalacheck.Shrink[Set[Int]]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge423" class="edge">
<title>org.scalacheck.Shrink[Set[Int]]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4144.0475,-15881.4604C4264.3469,-15913.364 4502.6315,-15954.2912 4625.8509,-15822.9355 4647.782,-15799.5563 4611.9499,-6614.3429 4633.8509,-6590.9355 4688.3781,-6532.6583 4910.2145,-6536.3935 5050.2025,-6545.1505"/>
<polygon fill="#000000" stroke="#000000" points="5050.3504,-6548.6672 5060.5545,-6545.8165 5050.7998,-6541.6816 5050.3504,-6548.6672"/>
</g>
<!-- List[String] =&gt; ?{def ===: ?} -->
<g id="node405" class="node">
<title>List[String] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-15282.9355" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="10775.4287" y="-15286.7355" font-family="Times,serif" font-size="14.00" fill="#000000">List[String] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10858.4287" y="-15271.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 13ms</text>
</g>
<!-- List[String] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[String]] -->
<g id="edge1354" class="edge">
<title>List[String] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[String]]</title>
<path fill="none" stroke="#000000" d="M10987.4003,-15282.9355C11146.2191,-15282.9355 11412.6621,-15282.9355 11557.4003,-15282.9355"/>
<polygon fill="#000000" stroke="#000000" points="11557.608,-15286.4356 11567.608,-15282.9355 11557.608,-15279.4356 11557.608,-15286.4356"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam -->
<g id="node406" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-47636.9355" rx="304.1118" ry="26.7407"/>
<text text-anchor="start" x="365.0494" y="-47640.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-47625.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 1ms</text>
</g>
<!-- Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node408" class="node">
<title>Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-47726.9355" rx="408.0012" ry="26.7407"/>
<text text-anchor="start" x="1469.104" y="-47730.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-47715.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,((String, io.circe.Json), Boolean),((String, io.circe.Json)) =&gt; Boolean] -->
<g id="node409" class="node">
<title>scala.collection.generic.CanBuildFrom[F,((String, io.circe.Json), Boolean),((String, io.circe.Json)) =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-7588.9355" rx="444.5404" ry="26.7407"/>
<text text-anchor="start" x="3764.2721" y="-7592.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,((String, io.circe.Json), Boolean),((String, io.circe.Json)) =&gt; Boolean]</text>
<text text-anchor="middle" x="4070.7721" y="-7577.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K] -->
<g id="node410" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-47780.9355" rx="387.489" ry="26.7407"/>
<text text-anchor="start" x="306.0494" y="-47784.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K]</text>
<text text-anchor="middle" x="572.0494" y="-47769.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[List[io.circe.Json]] -->
<g id="node412" class="node">
<title>io.circe.Encoder[List[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-19142.9355" rx="150.7276" ry="26.7407"/>
<text text-anchor="start" x="473.5494" y="-19146.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[List[io.circe.Json]]</text>
<text text-anchor="middle" x="572.0494" y="-19131.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- io.circe.Encoder[io.circe.Json] -->
<g id="node1704" class="node">
<title>io.circe.Encoder[io.circe.Json]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-19286.9355" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="1666.104" y="-19290.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[io.circe.Json]</text>
<text text-anchor="middle" x="1749.604" y="-19275.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 16ms</text>
</g>
<!-- io.circe.Encoder[List[io.circe.Json]]&#45;&gt;io.circe.Encoder[io.circe.Json] -->
<g id="edge1480" class="edge">
<title>io.circe.Encoder[List[io.circe.Json]]&#45;&gt;io.circe.Encoder[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M720.6284,-19147.6544C836.3444,-19152.447 1000.8405,-19161.7084 1144.0988,-19178.9355 1323.3966,-19200.4966 1530.056,-19240.7043 1649.6748,-19265.5118"/>
<polygon fill="#000000" stroke="#000000" points="1649.051,-19268.9569 1659.5542,-19267.5667 1650.4765,-19262.1036 1649.051,-19268.9569"/>
</g>
<!-- ((io.circe.Json, io.circe.Json, io.circe.Json)) =&gt; ?{def asJson: ?} -->
<g id="node413" class="node">
<title>((io.circe.Json, io.circe.Json, io.circe.Json)) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-47852.9355" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="396.0494" y="-47856.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((io.circe.Json, io.circe.Json, io.circe.Json)) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-47841.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(Int, Int),Int =&gt; Int] -->
<g id="node415" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(Int, Int),Int =&gt; Int]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-3518.9355" rx="250.1317" ry="26.7407"/>
<text text-anchor="start" x="4998.7166" y="-3522.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(Int, Int),Int =&gt; Int]</text>
<text text-anchor="middle" x="5167.7166" y="-3507.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc10] -->
<g id="node416" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc10]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-40058.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="420.0494" y="-40062.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc10]</text>
<text text-anchor="middle" x="572.0494" y="-40047.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc10]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc10] -->
<g id="edge654" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc10]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc10]</title>
<path fill="none" stroke="#000000" d="M798.3967,-40058.9355C1007.0924,-40058.9355 1315.2165,-40058.9355 1523.754,-40058.9355"/>
<polygon fill="#000000" stroke="#000000" points="1523.9188,-40062.4356 1533.9188,-40058.9355 1523.9187,-40055.4356 1523.9188,-40062.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Symbol,Int]] -->
<g id="node417" class="node">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Symbol,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-4130.9355" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="2735.9013" y="-4134.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.collection.immutable.Map[Symbol,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-4119.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Symbol, Int),scala.collection.immutable.Map[Symbol,Int]] -->
<g id="edge177" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Symbol, Int),scala.collection.immutable.Map[Symbol,Int]]</title>
<path fill="none" stroke="#000000" d="M3092.0206,-4153.2667C3209.2465,-4168.945 3372.0864,-4189.442 3515.6933,-4202.9355 3597.6904,-4210.6401 3686.6578,-4217.2066 3768.8514,-4222.5383"/>
<polygon fill="#000000" stroke="#000000" points="3768.636,-4226.0316 3778.8405,-4223.1824 3769.0864,-4219.0461 3768.636,-4226.0316"/>
</g>
<!-- scala.collection.immutable.Map[Symbol,Int] =&gt; Traversable[(Symbol, Int)] -->
<g id="node493" class="node">
<title>scala.collection.immutable.Map[Symbol,Int] =&gt; Traversable[(Symbol, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-4166.9355" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="3861.7721" y="-4170.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[Symbol,Int] =&gt; Traversable[(Symbol, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-4155.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;scala.collection.immutable.Map[Symbol,Int] =&gt; Traversable[(Symbol, Int)] -->
<g id="edge1443" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;scala.collection.immutable.Map[Symbol,Int] =&gt; Traversable[(Symbol, Int)]</title>
<path fill="none" stroke="#000000" d="M3204.309,-4139.5584C3375.3675,-4144.9633 3595.9551,-4151.933 3771.7475,-4157.4875"/>
<polygon fill="#000000" stroke="#000000" points="3771.8283,-4160.9917 3781.9339,-4157.8093 3772.0495,-4153.9952 3771.8283,-4160.9917"/>
</g>
<!-- scala.reflect.ClassTag[scala.collection.immutable.Map[Symbol,Int]] -->
<g id="node1276" class="node">
<title>scala.reflect.ClassTag[scala.collection.immutable.Map[Symbol,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-4022.9355" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="3882.7721" y="-4026.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.collection.immutable.Map[Symbol,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-4011.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Map[Symbol,Int]] -->
<g id="edge536" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Map[Symbol,Int]]</title>
<path fill="none" stroke="#000000" d="M3092.0206,-4108.6044C3209.2465,-4092.9261 3372.0864,-4072.4291 3515.6933,-4058.9355 3613.8933,-4049.7085 3722.0906,-4042.1138 3816.6771,-4036.3176"/>
<polygon fill="#000000" stroke="#000000" points="3816.8984,-4039.8107 3826.667,-4035.7089 3816.4726,-4032.8236 3816.8984,-4039.8107"/>
</g>
<!-- org.scalacheck.Arbitrary[(Symbol, Int)] -->
<g id="node1960" class="node">
<title>org.scalacheck.Arbitrary[(Symbol, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-4094.9355" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="3961.7721" y="-4098.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Symbol, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-4083.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Symbol, Int)] -->
<g id="edge253" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Symbol, Int)]</title>
<path fill="none" stroke="#000000" d="M3204.309,-4122.3127C3419.9005,-4115.5007 3714.1667,-4106.203 3898.2713,-4100.386"/>
<polygon fill="#000000" stroke="#000000" points="3898.4357,-4103.8826 3908.3201,-4100.0684 3898.2146,-4096.8861 3898.4357,-4103.8826"/>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc6] -->
<g id="node418" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc6]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-44054.9355" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="452.0494" y="-44058.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc6]</text>
<text text-anchor="middle" x="572.0494" y="-44043.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc6]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc6] -->
<g id="edge991" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc6]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc6]</title>
<path fill="none" stroke="#000000" d="M753.14,-44054.9355C966.8731,-44054.9355 1321.4043,-44054.9355 1544.915,-44054.9355"/>
<polygon fill="#000000" stroke="#000000" points="1545.1268,-44058.4356 1555.1268,-44054.9355 1545.1267,-44051.4356 1545.1268,-44058.4356"/>
</g>
<!-- cats.kernel.Eq[List[(String, io.circe.Json)]] -->
<g id="node419" class="node">
<title>cats.kernel.Eq[List[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-15498.9355" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="10740.9287" y="-15502.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[List[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="10858.4287" y="-15487.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 83ms</text>
</g>
<!-- cats.kernel.Eq[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Eq[(String, io.circe.Json)] -->
<g id="edge201" class="edge">
<title>cats.kernel.Eq[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Eq[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M11012.4113,-15485.4094C11088.4475,-15478.7028 11181.5558,-15470.4493 11265.0151,-15462.9355 11346.0693,-15455.6383 11436.5054,-15447.3708 11510.2087,-15440.6004"/>
<polygon fill="#000000" stroke="#000000" points="11510.857,-15444.0557 11520.4948,-15439.6553 11510.2164,-15437.0851 11510.857,-15444.0557"/>
</g>
<!-- shapeless.IsTuple[List[(String, io.circe.Json)]] -->
<g id="node1014" class="node">
<title>shapeless.IsTuple[List[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-15570.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="11531.8883" y="-15574.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[List[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="11658.3883" y="-15559.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[List[(String, io.circe.Json)]]&#45;&gt;shapeless.IsTuple[List[(String, io.circe.Json)]] -->
<g id="edge99" class="edge">
<title>cats.kernel.Eq[List[(String, io.circe.Json)]]&#45;&gt;shapeless.IsTuple[List[(String, io.circe.Json)]]</title>
<path fill="none" stroke="#000000" d="M11012.4113,-15512.4617C11088.4475,-15519.1683 11181.5558,-15527.4218 11265.0151,-15534.9355 11338.4169,-15541.5438 11419.5127,-15548.9479 11488.908,-15555.3151"/>
<polygon fill="#000000" stroke="#000000" points="11488.7814,-15558.8181 11499.0594,-15556.2468 11489.4212,-15551.8474 11488.7814,-15558.8181"/>
</g>
<!-- cats.kernel.Eq[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.PartialOrder[(String, io.circe.Json)] -->
<g id="edge225" class="edge">
<title>cats.kernel.Eq[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.PartialOrder[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M11035.9656,-15498.9355C11160.2319,-15498.9355 11326.5,-15498.9355 11455.9277,-15498.9355"/>
<polygon fill="#000000" stroke="#000000" points="11455.967,-15502.4356 11465.9669,-15498.9355 11455.9669,-15495.4356 11455.967,-15502.4356"/>
</g>
<!-- cats.kernel.Eq[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Order[(String, io.circe.Json)] -->
<g id="edge1237" class="edge">
<title>cats.kernel.Eq[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Order[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M10955.9283,-15476.3791C11048.4181,-15461.3027 11184.8374,-15456.5298 11265.0151,-15534.9355 11288.0347,-15557.4464 11250.0499,-15584.3691 11273.0151,-15606.9355 11344.3607,-15677.0426 11463.033,-15677.7913 11549.8715,-15666.1374"/>
<polygon fill="#000000" stroke="#000000" points="11550.6214,-15669.5663 11560.0317,-15664.6984 11549.6397,-15662.6354 11550.6214,-15669.5663"/>
</g>
<!-- cats.Foldable[List] -->
<g id="node420" class="node">
<title>cats.Foldable[List]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-47924.9355" rx="84.2917" ry="26.7407"/>
<text text-anchor="start" x="520.5494" y="-47928.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Foldable[List]</text>
<text text-anchor="middle" x="572.0494" y="-47913.7355" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 6ms</text>
</g>
<!-- List[Either[String,(String, io.circe.Json, Boolean)]] =&gt; Traversable[Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="node421" class="node">
<title>List[Either[String,(String, io.circe.Json, Boolean)]] =&gt; Traversable[Either[String,(String, io.circe.Json, Boolean)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-7230.9355" rx="453.011" ry="26.7407"/>
<text text-anchor="start" x="1437.104" y="-7234.7355" font-family="Times,serif" font-size="14.00" fill="#000000">List[Either[String,(String, io.circe.Json, Boolean)]] =&gt; Traversable[Either[String,(String, io.circe.Json, Boolean)]]</text>
<text text-anchor="middle" x="1749.604" y="-7219.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION) -->
<g id="node422" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-47996.9355" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="385.5494" y="-48000.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-47985.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.ACursor =&gt; ?{def ===: ?} -->
<g id="node424" class="node">
<title>io.circe.ACursor =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-40814.9355" rx="148.4848" ry="26.7407"/>
<text text-anchor="start" x="475.0494" y="-40818.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.ACursor =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-40803.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.Eq[io.circe.ACursor] -->
<g id="node1774" class="node">
<title>cats.Eq[io.circe.ACursor]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-40814.9355" rx="110.1176" ry="26.7407"/>
<text text-anchor="start" x="1679.604" y="-40818.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[io.circe.ACursor]</text>
<text text-anchor="middle" x="1749.604" y="-40803.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- io.circe.ACursor =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.ACursor] -->
<g id="edge690" class="edge">
<title>io.circe.ACursor =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.ACursor]</title>
<path fill="none" stroke="#000000" d="M720.5909,-40814.9355C956.4357,-40814.9355 1412.0108,-40814.9355 1629.01,-40814.9355"/>
<polygon fill="#000000" stroke="#000000" points="1629.1612,-40818.4356 1639.1612,-40814.9355 1629.1611,-40811.4356 1629.1612,-40818.4356"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M] -->
<g id="node425" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-48068.9355" rx="416.4718" ry="26.7407"/>
<text text-anchor="start" x="285.5494" y="-48072.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M]</text>
<text text-anchor="middle" x="572.0494" y="-48057.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[List[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json] -->
<g id="edge804" class="edge">
<title>cats.Eq[List[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12497.7498,-16541.8482C12581.4763,-16527.6959 12709.0652,-16522.0052 12780.0814,-16596.9355 12793.7002,-16611.3049 12774.5062,-16760.525 12788.0814,-16774.9355 12848.1896,-16838.7422 12951.7341,-16841.3347 13029.3612,-16831.8644"/>
<polygon fill="#000000" stroke="#000000" points="13030.1914,-16835.2858 13039.654,-16830.5203 13029.285,-16828.3447 13030.1914,-16835.2858"/>
</g>
<!-- cats.Eq[List[io.circe.Json]]&#45;&gt;cats.kernel.Eq[io.circe.Json] -->
<g id="edge393" class="edge">
<title>cats.Eq[List[io.circe.Json]]&#45;&gt;cats.kernel.Eq[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12531.1007,-16557.3921C12725.5882,-16551.0076 13131.4078,-16535.9576 13473.975,-16511.9355 13543.6562,-16507.0492 13621.4596,-16499.8193 13683.9837,-16493.5704"/>
<polygon fill="#000000" stroke="#000000" points="13684.6796,-16497.0182 13694.2798,-16492.5365 13683.9801,-16490.0533 13684.6796,-16497.0182"/>
</g>
<!-- cats.Eq[List[io.circe.Json]]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json] -->
<g id="edge1490" class="edge">
<title>cats.Eq[List[io.circe.Json]]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12497.5573,-16541.7312C12581.4379,-16527.3799 12709.4424,-16521.4319 12780.0814,-16596.9355 12799.0687,-16617.2304 12770.1918,-16825.6669 12788.0814,-16846.9355 12832.1955,-16899.3819 12903.9453,-16919.4088 12970.4438,-16925.3972"/>
<polygon fill="#000000" stroke="#000000" points="12970.3921,-16928.9041 12980.6389,-16926.2109 12970.9491,-16921.9263 12970.3921,-16928.9041"/>
</g>
<!-- shapeless.IsTuple[List[io.circe.Json]] -->
<g id="node719" class="node">
<title>shapeless.IsTuple[List[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-16628.9355" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="13029.0282" y="-16632.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[List[io.circe.Json]]</text>
<text text-anchor="middle" x="13131.0282" y="-16617.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[List[io.circe.Json]]&#45;&gt;shapeless.IsTuple[List[io.circe.Json]] -->
<g id="edge335" class="edge">
<title>cats.Eq[List[io.circe.Json]]&#45;&gt;shapeless.IsTuple[List[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M12523.367,-16571.1526C12646.0416,-16582.8178 12847.4107,-16601.9662 12984.434,-16614.9958"/>
<polygon fill="#000000" stroke="#000000" points="12984.3115,-16618.4999 12994.5979,-16615.9623 12984.9742,-16611.5313 12984.3115,-16618.4999"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[io.circe.Json],(String, io.circe.Json),Iterable[(String, io.circe.Json)]] -->
<g id="node427" class="node">
<title>scala.collection.generic.CanBuildFrom[List[io.circe.Json],(String, io.circe.Json),Iterable[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-48140.9355" rx="445.4545" ry="26.7407"/>
<text text-anchor="start" x="265.0494" y="-48144.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[io.circe.Json],(String, io.circe.Json),Iterable[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="572.0494" y="-48129.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;A tuple encoder&#39;) =&gt; ?{def should: ?} -->
<g id="node428" class="node">
<title>String(&#39;A tuple encoder&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-31094.9355" rx="186.8525" ry="26.7407"/>
<text text-anchor="start" x="448.0494" y="-31098.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;A tuple encoder&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-31083.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;A tuple encoder&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1343" class="edge">
<title>String(&#39;A tuple encoder&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M742.0061,-31106.0875C888.6363,-31111.884 1085.7579,-31109.2779 1144.0988,-31058.9355 1597.5955,-30667.6134 1730.6367,-28557.8878 1747.6448,-28251.9375"/>
<polygon fill="#000000" stroke="#000000" points="1751.1467,-28251.9978 1748.2012,-28241.8206 1744.1572,-28251.6133 1751.1467,-28251.9978"/>
</g>
<!-- io.circe.ParsingFailure =&gt; ?{def show: ?} -->
<g id="node429" class="node">
<title>io.circe.ParsingFailure =&gt; ?{def show: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-48212.9355" rx="173.8966" ry="26.7407"/>
<text text-anchor="start" x="457.0494" y="-48216.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.ParsingFailure =&gt; ?{def show: ?}</text>
<text text-anchor="middle" x="572.0494" y="-48201.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.Show[io.circe.ParsingFailure] -->
<g id="node973" class="node">
<title>cats.Show[io.circe.ParsingFailure]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-48212.9355" rx="144.5" ry="26.7407"/>
<text text-anchor="start" x="1655.604" y="-48216.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Show[io.circe.ParsingFailure]</text>
<text text-anchor="middle" x="1749.604" y="-48201.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- io.circe.ParsingFailure =&gt; ?{def show: ?}&#45;&gt;cats.Show[io.circe.ParsingFailure] -->
<g id="edge1186" class="edge">
<title>io.circe.ParsingFailure =&gt; ?{def show: ?}&#45;&gt;cats.Show[io.circe.ParsingFailure]</title>
<path fill="none" stroke="#000000" d="M746.1183,-48212.9355C975.4352,-48212.9355 1375.2547,-48212.9355 1594.6211,-48212.9355"/>
<polygon fill="#000000" stroke="#000000" points="1594.9293,-48216.4356 1604.9293,-48212.9355 1594.9293,-48209.4356 1594.9293,-48216.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Int,List[Int]] -->
<g id="node430" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Int,List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-7706.9355" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="6073.2346" y="-7710.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Int,List[Int]]</text>
<text text-anchor="middle" x="6222.2346" y="-7695.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Either[Int,String]],Option[io.circe.Json],That] -->
<g id="node431" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Either[Int,String]],Option[io.circe.Json],That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-48284.9355" rx="463.7241" ry="26.7407"/>
<text text-anchor="start" x="252.0494" y="-48288.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Either[Int,String]],Option[io.circe.Json],That]</text>
<text text-anchor="middle" x="572.0494" y="-48273.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Order[io.circe.Decoder.Result[List[Boolean]]] -->
<g id="node432" class="node">
<title>cats.kernel.Order[io.circe.Decoder.Result[List[Boolean]]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-14406.9355" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="12257.9214" y="-14410.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[io.circe.Decoder.Result[List[Boolean]]]</text>
<text text-anchor="middle" x="12415.9214" y="-14395.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 7ms</text>
</g>
<!-- cats.kernel.Order[io.circe.DecodingFailure] -->
<g id="node1501" class="node">
<title>cats.kernel.Order[io.circe.DecodingFailure]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-14251.9355" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="13012.0282" y="-14255.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[io.circe.DecodingFailure]</text>
<text text-anchor="middle" x="13131.0282" y="-14240.7355" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 12ms</text>
</g>
<!-- cats.kernel.Order[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;cats.kernel.Order[io.circe.DecodingFailure] -->
<g id="edge799" class="edge">
<title>cats.kernel.Order[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;cats.kernel.Order[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M12624.6993,-14394.55C12675.872,-14389.2525 12730.2475,-14381.6994 12780.0814,-14370.9355 12879.9321,-14349.3683 12990.9287,-14308.7757 13060.8324,-14281.0552"/>
<polygon fill="#000000" stroke="#000000" points="13062.4259,-14284.1878 13070.418,-14277.2325 13059.8328,-14277.6858 13062.4259,-14284.1878"/>
</g>
<!-- String(&#39;parse and decode(Accumulating)&#39;) =&gt; ?{def should: ?} -->
<g id="node433" class="node">
<title>String(&#39;parse and decode(Accumulating)&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-31022.9355" rx="252.3743" ry="26.7407"/>
<text text-anchor="start" x="401.5494" y="-31026.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;parse and decode(Accumulating)&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-31011.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- String(&#39;parse and decode(Accumulating)&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge256" class="edge">
<title>String(&#39;parse and decode(Accumulating)&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M794.8041,-31035.6177C932.4725,-31038.5065 1092.421,-31031.2906 1144.0988,-30986.9355 1587.1641,-30606.6522 1728.886,-28553.5941 1747.4278,-28251.9499"/>
<polygon fill="#000000" stroke="#000000" points="1750.9215,-28252.1582 1748.0357,-28241.964 1743.9344,-28251.7328 1750.9215,-28252.1582"/>
</g>
<!-- org.scalacheck.Arbitrary[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="node434" class="node">
<title>org.scalacheck.Arbitrary[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-39554.9355" rx="308.0972" ry="26.7407"/>
<text text-anchor="start" x="362.0494" y="-39558.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[cats.data.NonEmptyList[io.circe.DecodingFailure]]</text>
<text text-anchor="middle" x="572.0494" y="-39543.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;org.scalacheck.Arbitrary[io.circe.DecodingFailure] -->
<g id="edge460" class="edge">
<title>org.scalacheck.Arbitrary[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;org.scalacheck.Arbitrary[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M880.6687,-39554.9355C1084.9186,-39554.9355 1347.8233,-39554.9355 1530.7075,-39554.9355"/>
<polygon fill="#000000" stroke="#000000" points="1530.7199,-39558.4356 1540.7199,-39554.9355 1530.7199,-39551.4356 1530.7199,-39558.4356"/>
</g>
<!-- shapeless.IsTuple[io.circe.CursorOp] -->
<g id="node435" class="node">
<title>shapeless.IsTuple[io.circe.CursorOp]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-38726.9355" rx="154.7129" ry="26.7407"/>
<text text-anchor="start" x="3969.2721" y="-38730.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.CursorOp]</text>
<text text-anchor="middle" x="4070.7721" y="-38715.7355" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 24ms</text>
</g>
<!-- org.scalacheck.Arbitrary[cats.data.NonEmptyList[Either[Int,String]]] -->
<g id="node436" class="node">
<title>org.scalacheck.Arbitrary[cats.data.NonEmptyList[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-10310.9355" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="1560.104" y="-10314.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[cats.data.NonEmptyList[Either[Int,String]]]</text>
<text text-anchor="middle" x="1749.604" y="-10299.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- org.scalacheck.Arbitrary[cats.data.NonEmptyList[Either[Int,String]]]&#45;&gt;org.scalacheck.Arbitrary[Either[Int,String]] -->
<g id="edge357" class="edge">
<title>org.scalacheck.Arbitrary[cats.data.NonEmptyList[Either[Int,String]]]&#45;&gt;org.scalacheck.Arbitrary[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M1986.9461,-10325.1613C2096.5721,-10331.7511 2228.4689,-10339.7066 2347.1092,-10346.9355 2484.1228,-10355.284 2639.2013,-10364.844 2755.1449,-10372.0134"/>
<polygon fill="#000000" stroke="#000000" points="2754.9845,-10375.51 2765.1815,-10372.634 2755.4166,-10368.5234 2754.9845,-10375.51"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; String -->
<g id="node437" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-48356.9355" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="483.0494" y="-48360.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; String</text>
<text text-anchor="middle" x="572.0494" y="-48345.7355" font-family="Times,serif" font-size="14.00" fill="#000000">101 times = 23ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P] -->
<g id="node438" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-48428.9355" rx="427.5993" ry="26.7407"/>
<text text-anchor="start" x="277.5494" y="-48432.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P]</text>
<text text-anchor="middle" x="572.0494" y="-48417.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[Either[Int,String]] -->
<g id="node439" class="node">
<title>io.circe.Decoder[Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-11322.9355" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="3974.2721" y="-11326.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Either[Int,String]]</text>
<text text-anchor="middle" x="4070.7721" y="-11311.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- io.circe.Decoder[Either[Int,String]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1338" class="edge">
<title>io.circe.Decoder[Either[Int,String]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4205.339,-11311.6861C4351.1811,-11302.8139 4570.5453,-11300.2544 4625.8509,-11358.9355 4639.5685,-11373.4903 4621.6446,-12783.092 4633.8509,-12798.9355 4734.9293,-12930.1338 4942.2378,-12949.8976 5066.6867,-12948.837"/>
<polygon fill="#000000" stroke="#000000" points="5067.0292,-12952.3329 5076.9817,-12948.7002 5066.9361,-12945.3335 5067.0292,-12952.3329"/>
</g>
<!-- io.circe.Decoder[Either[Int,String]]&#45;&gt;io.circe.Decoder[String] -->
<g id="edge1146" class="edge">
<title>io.circe.Decoder[Either[Int,String]]&#45;&gt;io.circe.Decoder[String]</title>
<path fill="none" stroke="#000000" d="M4205.511,-11334.0572C4351.2115,-11342.7782 4570.1588,-11345.1666 4625.8509,-11286.9355 4641.0599,-11271.0332 4618.931,-10907.1094 4633.8509,-10890.9355 4747.3572,-10767.8903 4964.5637,-10790.98 5083.9587,-10815.6748"/>
<polygon fill="#000000" stroke="#000000" points="5083.2834,-10819.1094 5093.7918,-10817.7581 5084.7344,-10812.2614 5083.2834,-10819.1094"/>
</g>
<!-- org.scalacheck.Shrink[cats.data.NonEmptyList[Either[Int,String]]] -->
<g id="node440" class="node">
<title>org.scalacheck.Shrink[cats.data.NonEmptyList[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-37430.9355" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="390.0494" y="-37434.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[cats.data.NonEmptyList[Either[Int,String]]]</text>
<text text-anchor="middle" x="572.0494" y="-37419.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.NonEmptyList[Either[Int,String]]]&#45;&gt;Integral[cats.data.NonEmptyList[Either[Int,String]]] -->
<g id="edge1381" class="edge">
<title>org.scalacheck.Shrink[cats.data.NonEmptyList[Either[Int,String]]]&#45;&gt;Integral[cats.data.NonEmptyList[Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M800.0088,-37445.179C906.9088,-37451.8339 1036.0321,-37459.8373 1152.0988,-37466.9355 1283.3781,-37474.9642 1430.8909,-37483.8533 1546.4999,-37490.7897"/>
<polygon fill="#000000" stroke="#000000" points="1546.3343,-37494.286 1556.526,-37491.3912 1546.7535,-37487.2985 1546.3343,-37494.286"/>
</g>
<!-- cats.data.NonEmptyList[Either[Int,String]] =&gt; Traversable[Either[Int,String]] -->
<g id="node1331" class="node">
<title>cats.data.NonEmptyList[Either[Int,String]] =&gt; Traversable[Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-37430.9355" rx="312.5824" ry="26.7407"/>
<text text-anchor="start" x="1536.604" y="-37434.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.data.NonEmptyList[Either[Int,String]] =&gt; Traversable[Either[Int,String]]</text>
<text text-anchor="middle" x="1749.604" y="-37419.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.NonEmptyList[Either[Int,String]]]&#45;&gt;cats.data.NonEmptyList[Either[Int,String]] =&gt; Traversable[Either[Int,String]] -->
<g id="edge173" class="edge">
<title>org.scalacheck.Shrink[cats.data.NonEmptyList[Either[Int,String]]]&#45;&gt;cats.data.NonEmptyList[Either[Int,String]] =&gt; Traversable[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M841.097,-37430.9355C1015.2427,-37430.9355 1242.9505,-37430.9355 1426.8305,-37430.9355"/>
<polygon fill="#000000" stroke="#000000" points="1426.9349,-37434.4356 1436.9349,-37430.9355 1426.9348,-37427.4356 1426.9349,-37434.4356"/>
</g>
<!-- Fractional[cats.data.NonEmptyList[Either[Int,String]]] -->
<g id="node1452" class="node">
<title>Fractional[cats.data.NonEmptyList[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-37358.9355" rx="222.9775" ry="26.7407"/>
<text text-anchor="start" x="1600.104" y="-37362.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[cats.data.NonEmptyList[Either[Int,String]]]</text>
<text text-anchor="middle" x="1749.604" y="-37347.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.NonEmptyList[Either[Int,String]]]&#45;&gt;Fractional[cats.data.NonEmptyList[Either[Int,String]]] -->
<g id="edge589" class="edge">
<title>org.scalacheck.Shrink[cats.data.NonEmptyList[Either[Int,String]]]&#45;&gt;Fractional[cats.data.NonEmptyList[Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M800.0088,-37416.6921C906.9088,-37410.0372 1036.0321,-37402.0338 1152.0988,-37394.9355 1280.7289,-37387.0689 1424.944,-37378.3762 1539.4625,-37371.5037"/>
<polygon fill="#000000" stroke="#000000" points="1539.9766,-37374.9792 1549.749,-37370.8865 1539.5573,-37367.9918 1539.9766,-37374.9792"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String) -->
<g id="node441" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-48500.9355" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="373.5494" y="-48504.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String)</text>
<text text-anchor="middle" x="572.0494" y="-48489.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node442" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-18663.9355" rx="421.3713" ry="26.7407"/>
<text text-anchor="start" x="2641.4013" y="-18667.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="2931.4013" y="-18652.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION) -->
<g id="node443" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-48572.9355" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="396.0494" y="-48576.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-48561.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- pz.type =&gt; ?{def =!=: ?} -->
<g id="node444" class="node">
<title>pz.type =&gt; ?{def =!=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-44486.9355" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="1680.104" y="-44490.7355" font-family="Times,serif" font-size="14.00" fill="#000000">pz.type =&gt; ?{def =!=: ?}</text>
<text text-anchor="middle" x="1749.604" y="-44475.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.Eq[io.circe.JsonNumber] -->
<g id="node1832" class="node">
<title>cats.Eq[io.circe.JsonNumber]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-44342.9355" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="2849.9013" y="-44346.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[io.circe.JsonNumber]</text>
<text text-anchor="middle" x="2931.4013" y="-44331.7355" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 38ms</text>
</g>
<!-- pz.type =&gt; ?{def =!=: ?}&#45;&gt;cats.Eq[io.circe.JsonNumber] -->
<g id="edge109" class="edge">
<title>pz.type =&gt; ?{def =!=: ?}&#45;&gt;cats.Eq[io.circe.JsonNumber]</title>
<path fill="none" stroke="#000000" d="M1858.7254,-44484.3739C1978.7911,-44480.6222 2177.2889,-44471.6669 2347.1092,-44450.9355 2519.9866,-44429.831 2718.9664,-44389.5909 2834.4312,-44364.6335"/>
<polygon fill="#000000" stroke="#000000" points="2835.2803,-44368.0308 2844.3115,-44362.4911 2833.7969,-44361.1897 2835.2803,-44368.0308"/>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc6] -->
<g id="node445" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc6]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-48644.9355" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="446.0494" y="-48648.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc6]</text>
<text text-anchor="middle" x="572.0494" y="-48633.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc6]] -->
<g id="node667" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc6]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-48644.9355" rx="314.8251" ry="26.7407"/>
<text text-anchor="start" x="1535.104" y="-48648.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc6]]</text>
<text text-anchor="middle" x="1749.604" y="-48633.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc6]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc6]] -->
<g id="edge744" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc6]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc6]]</title>
<path fill="none" stroke="#000000" d="M761.5708,-48644.9355C940.1781,-48644.9355 1211.4625,-48644.9355 1424.6075,-48644.9355"/>
<polygon fill="#000000" stroke="#000000" points="1424.7127,-48648.4356 1434.7127,-48644.9355 1424.7127,-48641.4356 1424.7127,-48648.4356"/>
</g>
<!-- scala.reflect.ClassTag[scala.collection.immutable.Set[Int]] -->
<g id="node446" class="node">
<title>scala.reflect.ClassTag[scala.collection.immutable.Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-4310.9355" rx="238.0901" ry="26.7407"/>
<text text-anchor="start" x="5007.2166" y="-4314.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.collection.immutable.Set[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-4299.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc9]] -->
<g id="node447" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc9]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-48716.9355" rx="314.8251" ry="26.7407"/>
<text text-anchor="start" x="1535.104" y="-48720.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc9]]</text>
<text text-anchor="middle" x="1749.604" y="-48705.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K] -->
<g id="node448" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-48788.9355" rx="402.1876" ry="26.7407"/>
<text text-anchor="start" x="295.5494" y="-48792.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K]</text>
<text text-anchor="middle" x="572.0494" y="-48777.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[List[Boolean]] -->
<g id="node449" class="node">
<title>cats.kernel.Eq[List[Boolean]]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-17250.9355" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="13050.0282" y="-17254.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[List[Boolean]]</text>
<text text-anchor="middle" x="13131.0282" y="-17239.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 24ms</text>
</g>
<!-- cats.kernel.Order[Boolean] -->
<g id="node1370" class="node">
<title>cats.kernel.Order[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="13803.7086" cy="-17322.9355" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="13729.7086" y="-17326.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[Boolean]</text>
<text text-anchor="middle" x="13803.7086" y="-17311.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[List[Boolean]]&#45;&gt;cats.kernel.Order[Boolean] -->
<g id="edge588" class="edge">
<title>cats.kernel.Eq[List[Boolean]]&#45;&gt;cats.kernel.Order[Boolean]</title>
<path fill="none" stroke="#000000" d="M13244.5758,-17262.7352C13311.3748,-17269.7068 13397.4838,-17278.7452 13473.975,-17286.9355 13545.3102,-17294.5738 13625.3069,-17303.3037 13688.6397,-17310.2538"/>
<polygon fill="#000000" stroke="#000000" points="13688.3351,-17313.7413 13698.6573,-17311.3535 13689.099,-17306.7831 13688.3351,-17313.7413"/>
</g>
<!-- cats.kernel.Eq[Boolean] -->
<g id="node1894" class="node">
<title>cats.kernel.Eq[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="13803.7086" cy="-17250.9355" rx="104.8038" ry="26.7407"/>
<text text-anchor="start" x="13737.7086" y="-17254.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Boolean]</text>
<text text-anchor="middle" x="13803.7086" y="-17239.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 13ms</text>
</g>
<!-- cats.kernel.Eq[List[Boolean]]&#45;&gt;cats.kernel.Eq[Boolean] -->
<g id="edge746" class="edge">
<title>cats.kernel.Eq[List[Boolean]]&#45;&gt;cats.kernel.Eq[Boolean]</title>
<path fill="none" stroke="#000000" d="M13257.1595,-17250.9355C13381.0859,-17250.9355 13568.5629,-17250.9355 13688.5576,-17250.9355"/>
<polygon fill="#000000" stroke="#000000" points="13688.8745,-17254.4356 13698.8744,-17250.9355 13688.8744,-17247.4356 13688.8745,-17254.4356"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc21] -->
<g id="node451" class="node">
<title>Integral[ProductCodecSuite.this.Cc21]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-48860.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="1644.104" y="-48864.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc21]</text>
<text text-anchor="middle" x="1749.604" y="-48849.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E] -->
<g id="node452" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-48932.9355" rx="309.0113" ry="26.7407"/>
<text text-anchor="start" x="361.5494" y="-48936.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E]</text>
<text text-anchor="middle" x="572.0494" y="-48921.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]] -->
<g id="node453" class="node">
<title>cats.kernel.Eq[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-13754.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="10640.4287" y="-13758.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]]</text>
<text text-anchor="middle" x="10858.4287" y="-13743.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 24ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]]&#45;&gt;cats.Order[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]] -->
<g id="edge1238" class="edge">
<title>cats.kernel.Eq[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]]&#45;&gt;cats.Order[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]]</title>
<path fill="none" stroke="#000000" d="M10941.7207,-13780.884C11024.8176,-13805.7591 11156.5382,-13842.4626 11273.0151,-13862.9355 11321.8759,-13871.5237 11374.6059,-13878.1525 11424.9097,-13883.2377"/>
<polygon fill="#000000" stroke="#000000" points="11424.6391,-13886.728 11434.9363,-13884.2343 11425.3315,-13879.7623 11424.6391,-13886.728"/>
</g>
<!-- cats.kernel.Eq[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]]&#45;&gt;shapeless.IsTuple[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]] -->
<g id="edge1432" class="edge">
<title>cats.kernel.Eq[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]]&#45;&gt;shapeless.IsTuple[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]]</title>
<path fill="none" stroke="#000000" d="M11076.7568,-13774.5861C11184.9851,-13784.3271 11315.7428,-13796.0959 11425.8452,-13806.0056"/>
<polygon fill="#000000" stroke="#000000" points="11425.8217,-13809.5176 11436.0952,-13806.9282 11426.4492,-13802.5457 11425.8217,-13809.5176"/>
</g>
<!-- cats.PartialOrder[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]] -->
<g id="node676" class="node">
<title>cats.PartialOrder[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-13682.9355" rx="291.1561" ry="26.7407"/>
<text text-anchor="start" x="11460.3883" y="-13686.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.PartialOrder[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]]</text>
<text text-anchor="middle" x="11658.3883" y="-13671.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]]&#45;&gt;cats.PartialOrder[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]] -->
<g id="edge1429" class="edge">
<title>cats.kernel.Eq[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]]&#45;&gt;cats.PartialOrder[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]]</title>
<path fill="none" stroke="#000000" d="M11076.7568,-13735.285C11189.4725,-13725.1401 11326.6245,-13712.7958 11439.4309,-13702.6427"/>
<polygon fill="#000000" stroke="#000000" points="11439.9309,-13706.1119 11449.5769,-13701.7295 11439.3033,-13699.1401 11439.9309,-13706.1119"/>
</g>
<!-- cats.Eq[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]] -->
<g id="node767" class="node">
<title>cats.Eq[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-13610.9355" rx="254.6169" ry="26.7407"/>
<text text-anchor="start" x="11486.3883" y="-13614.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]]</text>
<text text-anchor="middle" x="11658.3883" y="-13599.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]]&#45;&gt;cats.Eq[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]] -->
<g id="edge157" class="edge">
<title>cats.kernel.Eq[cats.data.EitherT[io.circe.Decoder,io.circe.DecodingFailure,Int]]&#45;&gt;cats.Eq[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]]</title>
<path fill="none" stroke="#000000" d="M10941.7207,-13728.9871C11024.8176,-13704.112 11156.5382,-13667.4085 11273.0151,-13646.9355 11323.9206,-13637.988 11379.026,-13631.1672 11431.2119,-13626.003"/>
<polygon fill="#000000" stroke="#000000" points="11431.6496,-13629.477 11441.2636,-13625.025 11430.9717,-13622.5099 11431.6496,-13629.477"/>
</g>
<!-- Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node454" class="node">
<title>Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-49040.9355" rx="217.1636" ry="26.7407"/>
<text text-anchor="start" x="1604.104" y="-49044.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-49029.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Order[List[String]]&#45;&gt;cats.kernel.Order[String] -->
<g id="edge876" class="edge">
<title>cats.kernel.Order[List[String]]&#45;&gt;cats.kernel.Order[String]</title>
<path fill="none" stroke="#000000" d="M11778.0036,-15034.8833C11922.197,-15046.8751 12162.6551,-15066.8727 12303.537,-15078.5891"/>
<polygon fill="#000000" stroke="#000000" points="12303.6678,-15082.112 12313.9235,-15079.4529 12304.248,-15075.1361 12303.6678,-15082.112"/>
</g>
<!-- io.circe.Encoder[Long] -->
<g id="node456" class="node">
<title>io.circe.Encoder[Long]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-49112.9355" rx="101.2327" ry="26.7407"/>
<text text-anchor="start" x="1686.104" y="-49116.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Long]</text>
<text text-anchor="middle" x="1749.604" y="-49101.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 6ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I] -->
<g id="node457" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-49184.9355" rx="358.5063" ry="26.7407"/>
<text text-anchor="start" x="326.5494" y="-49188.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I]</text>
<text text-anchor="middle" x="572.0494" y="-49173.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- a.type =&gt; ?{def ++: ?} -->
<g id="node458" class="node">
<title>a.type =&gt; ?{def ++: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-49256.9355" rx="101.6471" ry="26.7407"/>
<text text-anchor="start" x="508.0494" y="-49260.7355" font-family="Times,serif" font-size="14.00" fill="#000000">a.type =&gt; ?{def ++: ?}</text>
<text text-anchor="middle" x="572.0494" y="-49245.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Symbol,Int]] -->
<g id="node459" class="node">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Symbol,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-4310.9355" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="2743.4013" y="-4314.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[scala.collection.immutable.Map[Symbol,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-4299.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 17ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Symbol, Int),scala.collection.immutable.Map[Symbol,Int]] -->
<g id="edge775" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Symbol, Int),scala.collection.immutable.Map[Symbol,Int]]</title>
<path fill="none" stroke="#000000" d="M3163.687,-4296.2568C3343.5744,-4284.8892 3593.6277,-4269.0876 3785.6458,-4256.9535"/>
<polygon fill="#000000" stroke="#000000" points="3786.1371,-4260.4295 3795.8965,-4256.3057 3785.6956,-4253.4434 3786.1371,-4260.4295"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;Integral[scala.collection.immutable.Map[Symbol,Int]] -->
<g id="edge208" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;Integral[scala.collection.immutable.Map[Symbol,Int]]</title>
<path fill="none" stroke="#000000" d="M2998.0388,-4337.0956C3105.2067,-4377.8737 3323.346,-4455.576 3515.6933,-4490.9355 3620.9479,-4510.2847 3739.0927,-4519.628 3839.2439,-4524.0023"/>
<polygon fill="#000000" stroke="#000000" points="3839.3587,-4527.5102 3849.4976,-4524.4356 3839.6543,-4520.5164 3839.3587,-4527.5102"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;org.scalacheck.Shrink[(Symbol, Int)] -->
<g id="edge352" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;org.scalacheck.Shrink[(Symbol, Int)]</title>
<path fill="none" stroke="#000000" d="M2977.9512,-4337.6328C3074.5087,-4391.4888 3305.1689,-4512.3137 3515.6933,-4562.9355 3644.6609,-4593.9466 3795.0297,-4602.0438 3906.7078,-4602.8882"/>
<polygon fill="#000000" stroke="#000000" points="3906.6922,-4606.3881 3916.7121,-4602.9453 3906.7322,-4599.3882 3906.6922,-4606.3881"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;scala.collection.immutable.Map[Symbol,Int] =&gt; Traversable[(Symbol, Int)] -->
<g id="edge1115" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;scala.collection.immutable.Map[Symbol,Int] =&gt; Traversable[(Symbol, Int)]</title>
<path fill="none" stroke="#000000" d="M3042.8051,-4286.2901C3159.9257,-4261.3354 3349.8559,-4223.5668 3515.6933,-4202.9355 3602.3441,-4192.1556 3697.0316,-4184.4996 3783.2688,-4179.1056"/>
<polygon fill="#000000" stroke="#000000" points="3783.7062,-4182.5853 3793.4714,-4178.4755 3783.2747,-4175.5987 3783.7062,-4182.5853"/>
</g>
<!-- Fractional[scala.collection.immutable.Map[Symbol,Int]] -->
<g id="node1009" class="node">
<title>Fractional[scala.collection.immutable.Map[Symbol,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-4310.9355" rx="231.4481" ry="26.7407"/>
<text text-anchor="start" x="3915.2721" y="-4314.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[scala.collection.immutable.Map[Symbol,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-4299.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;Fractional[scala.collection.immutable.Map[Symbol,Int]] -->
<g id="edge385" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;Fractional[scala.collection.immutable.Map[Symbol,Int]]</title>
<path fill="none" stroke="#000000" d="M3208.6658,-4310.9355C3398.4084,-4310.9355 3647.5289,-4310.9355 3829.1563,-4310.9355"/>
<polygon fill="#000000" stroke="#000000" points="3829.3843,-4314.4356 3839.3843,-4310.9355 3829.3843,-4307.4356 3829.3843,-4314.4356"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; AccumulatingDecoderSpec.this.PropertyCheckConfigParam -->
<g id="node460" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; AccumulatingDecoderSpec.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-49328.9355" rx="397.2881" ry="26.7407"/>
<text text-anchor="start" x="299.0494" y="-49332.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; AccumulatingDecoderSpec.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-49317.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Functor[io.circe.Decoder.Result] -->
<g id="node461" class="node">
<title>cats.Functor[io.circe.Decoder.Result]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-49400.9355" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="469.5494" y="-49404.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Functor[io.circe.Decoder.Result]</text>
<text text-anchor="middle" x="572.0494" y="-49389.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(Int, String),scala.util.Either[Int,String]] -->
<g id="node1181" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(Int, String),scala.util.Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-9078.9355" rx="328.1951" ry="26.7407"/>
<text text-anchor="start" x="4943.7166" y="-9082.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(Int, String),scala.util.Either[Int,String]]</text>
<text text-anchor="middle" x="5167.7166" y="-9067.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(Int, String),scala.util.Either[Int,String]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Int, String),scala.util.Either[Int,String]] -->
<g id="edge553" class="edge">
<title>org.scalacheck.util.Buildable[(Int, String),scala.util.Either[Int,String]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Int, String),scala.util.Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M4338.764,-9104.6291C4493.2985,-9099.8393 4688.4776,-9093.7897 4850.622,-9088.764"/>
<polygon fill="#000000" stroke="#000000" points="4850.8757,-9092.2579 4860.7624,-9088.4496 4850.6587,-9085.2612 4850.8757,-9092.2579"/>
</g>
<!-- Vector[Int] =&gt; Traversable[Int] -->
<g id="node463" class="node">
<title>Vector[Int] =&gt; Traversable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-5426.9355" rx="133.7865" ry="26.7407"/>
<text text-anchor="start" x="5081.2166" y="-5430.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Vector[Int] =&gt; Traversable[Int]</text>
<text text-anchor="middle" x="5167.7166" y="-5415.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int)]] -->
<g id="node464" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-13842.9355" rx="246.1463" ry="26.7407"/>
<text text-anchor="start" x="5001.7166" y="-13846.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-13831.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;leftAt&#39;) =&gt; ?{def should: ?} -->
<g id="node465" class="node">
<title>String(&#39;leftAt&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-30950.9355" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="475.5494" y="-30954.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;leftAt&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-30939.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;leftAt&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1089" class="edge">
<title>String(&#39;leftAt&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M710.148,-30960.5482C858.3927,-30967.7695 1081.1337,-30968.6756 1144.0988,-30914.9355 1576.5496,-30545.8429 1726.9521,-28551.0484 1747.1721,-28252.3669"/>
<polygon fill="#000000" stroke="#000000" points="1750.6851,-28252.2889 1747.8624,-28242.077 1743.7008,-28251.8203 1750.6851,-28252.2889"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; SerializableSuite.this.PropertyCheckConfigParam -->
<g id="node466" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; SerializableSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-49472.9355" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="363.0494" y="-49476.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; SerializableSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-49461.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int)] -->
<g id="node467" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-18313.9355" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="10769.4287" y="-18317.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="10858.4287" y="-18302.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 50ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge727" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10983.77,-18324.8804C11076.9459,-18325.3742 11198.9294,-18308.3369 11265.0151,-18226.9355 11283.206,-18204.5287 11253.5382,-16170.2341 11273.0151,-16148.9355 11348.6631,-16066.2118 11489.3647,-16076.0139 11578.2132,-16092.8818"/>
<polygon fill="#000000" stroke="#000000" points="11577.7601,-16096.3597 11588.248,-16094.8586 11579.1131,-16089.4917 11577.7601,-16096.3597"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge577" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M10984.4049,-18324.6164C11077.2814,-18324.8442 11198.5774,-18307.5828 11265.0151,-18226.9355 11280.5603,-18208.0656 11257.2718,-17805.6406 11273.0151,-17786.9355 11337.1168,-17710.7743 11453.592,-17697.447 11541.7702,-17700.0376"/>
<polygon fill="#000000" stroke="#000000" points="11541.7134,-17703.5378 11551.8345,-17700.4054 11541.969,-17696.5424 11541.7134,-17703.5378"/>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int)] -->
<g id="node884" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-18440.9355" rx="150.7276" ry="26.7407"/>
<text text-anchor="start" x="11559.8883" y="-18444.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="11658.3883" y="-18429.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int)] -->
<g id="edge1387" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M10941.6325,-18335.3606C11024.9386,-18356.0618 11157.0631,-18386.8643 11273.0151,-18404.9355 11349.4288,-18416.8447 11435.0248,-18425.322 11506.1028,-18431.046"/>
<polygon fill="#000000" stroke="#000000" points="11506.2357,-18434.5675 11516.4815,-18431.8707 11506.7902,-18427.5895 11506.2357,-18434.5675"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int),L] -->
<g id="node992" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-18368.9355" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="11539.3883" y="-18372.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="11658.3883" y="-18357.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int),L] -->
<g id="edge754" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M10988.2905,-18322.864C11123.3472,-18332.1496 11335.5331,-18346.7381 11484.8838,-18357.0065"/>
<polygon fill="#000000" stroke="#000000" points="11484.8609,-18360.5131 11495.0775,-18357.7074 11485.3411,-18353.5296 11484.8609,-18360.5131"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node1264" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="16788.8083" cy="-16816.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="16644.3083" y="-16820.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="16788.8083" y="-16805.7355" font-family="Times,serif" font-size="14.00" fill="#000000">19 times = 483ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1060" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M10990.6493,-18321.2264C11210.3368,-18331.2379 11663.975,-18342.9765 12043.7615,-18294.9355 12196.2784,-18275.643 14587.5431,-17694.1274 14734.483,-17648.9355 14991.78,-17569.8029 15050.8521,-17534.1379 15301.0973,-17434.9355 15850.67,-17217.0735 16506.9552,-16937.6552 16719.0528,-16846.8632"/>
<polygon fill="#000000" stroke="#000000" points="16720.7003,-16849.9652 16728.5154,-16842.8115 16717.945,-16843.5302 16720.7003,-16849.9652"/>
</g>
<!-- cats.kernel.Eq[io.circe.ObjectEncoder[Int]] -->
<g id="node468" class="node">
<title>cats.kernel.Eq[io.circe.ObjectEncoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-1206.9355" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="3952.7721" y="-1210.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.ObjectEncoder[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-1195.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 10ms</text>
</g>
<!-- shapeless.IsTuple[io.circe.ObjectEncoder[Int]] -->
<g id="node1549" class="node">
<title>shapeless.IsTuple[io.circe.ObjectEncoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-1206.9355" rx="191.752" ry="26.7407"/>
<text text-anchor="start" x="5040.2166" y="-1210.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.ObjectEncoder[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-1195.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.ObjectEncoder[Int]]&#45;&gt;shapeless.IsTuple[io.circe.ObjectEncoder[Int]] -->
<g id="edge82" class="edge">
<title>cats.kernel.Eq[io.circe.ObjectEncoder[Int]]&#45;&gt;shapeless.IsTuple[io.circe.ObjectEncoder[Int]]</title>
<path fill="none" stroke="#000000" d="M4249.1507,-1206.9355C4445.5102,-1206.9355 4760.4996,-1206.9355 4965.7836,-1206.9355"/>
<polygon fill="#000000" stroke="#000000" points="4966.0854,-1210.4356 4976.0854,-1206.9355 4966.0854,-1203.4356 4966.0854,-1210.4356"/>
</g>
<!-- cats.kernel.Eq[io.circe.ObjectEncoder[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge193" class="edge">
<title>cats.kernel.Eq[io.circe.ObjectEncoder[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4228.7671,-1194.4151C4373.6002,-1186.8251 4573.2888,-1187.4747 4625.8509,-1242.9355 4639.6095,-1257.4528 4620.111,-1948.4006 4633.8509,-1962.9355 4748.8355,-2084.5733 4966.4338,-2052.8169 5085.234,-2023.3389"/>
<polygon fill="#000000" stroke="#000000" points="5086.1801,-2026.7099 5095.0146,-2020.8616 5084.4613,-2019.9241 5086.1801,-2026.7099"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String) -->
<g id="node469" class="node">
<title>(Any =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-49544.9355" rx="227.8769" ry="26.7407"/>
<text text-anchor="start" x="419.0494" y="-49548.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String)</text>
<text text-anchor="middle" x="572.0494" y="-49533.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node470" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-20222.9355" rx="493.6211" ry="26.7407"/>
<text text-anchor="start" x="1408.604" y="-20226.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-20211.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="node471" class="node">
<title>org.scalacheck.Arbitrary[Either[String,(String, io.circe.Json, Boolean)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-8157.9355" rx="289.4135" ry="26.7407"/>
<text text-anchor="start" x="1553.104" y="-8161.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Either[String,(String, io.circe.Json, Boolean)]]</text>
<text text-anchor="middle" x="1749.604" y="-8146.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 30ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge1342" class="edge">
<title>org.scalacheck.Arbitrary[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M1969.6063,-8175.3798C2102.378,-8198.5474 2261.8688,-8251.5455 2347.1092,-8371.9355 2359.1721,-8388.9727 2341.2652,-9859.3112 2355.1092,-9874.9355 2697.5441,-10261.4053 3123.9043,-9675.4989 3507.6933,-10020.9355 3519.2316,-10031.3208 3503.524,-10045.2973 3515.6933,-10054.9355 3564.0415,-10093.228 4581.6385,-10097.9369 4625.8509,-10054.9355 4648.7992,-10032.6159 4611.71,-9790.0563 4633.8509,-9766.9355 4686.3994,-9712.0617 4889.6636,-9711.7881 5029.6462,-9718.7497"/>
<polygon fill="#000000" stroke="#000000" points="5029.8662,-9722.2656 5040.0331,-9719.2852 5030.2266,-9715.2749 5029.8662,-9722.2656"/>
</g>
<!-- scala.reflect.ClassTag[Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="node828" class="node">
<title>scala.reflect.ClassTag[Either[String,(String, io.circe.Json, Boolean)]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-8058.9355" rx="278.7002" ry="26.7407"/>
<text text-anchor="start" x="2742.4013" y="-8062.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Either[String,(String, io.circe.Json, Boolean)]]</text>
<text text-anchor="middle" x="2931.4013" y="-8047.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;scala.reflect.ClassTag[Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="edge10" class="edge">
<title>org.scalacheck.Arbitrary[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;scala.reflect.ClassTag[Either[String,(String, io.circe.Json, Boolean)]]</title>
<path fill="none" stroke="#000000" d="M1931.5823,-8137.0216C2051.7147,-8123.7039 2212.6561,-8106.7907 2355.1092,-8094.9355 2460.3851,-8086.1744 2576.6417,-8078.5259 2676.9997,-8072.5587"/>
<polygon fill="#000000" stroke="#000000" points="2677.5067,-8076.0349 2687.2823,-8071.9499 2677.0929,-8069.0472 2677.5067,-8076.0349"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, (String, io.circe.Json, Boolean))] -->
<g id="node964" class="node">
<title>org.scalacheck.Arbitrary[(String, (String, io.circe.Json, Boolean))]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-8257.9355" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="2749.4013" y="-8261.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(String, (String, io.circe.Json, Boolean))]</text>
<text text-anchor="middle" x="2931.4013" y="-8246.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;org.scalacheck.Arbitrary[(String, (String, io.circe.Json, Boolean))] -->
<g id="edge60" class="edge">
<title>org.scalacheck.Arbitrary[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;org.scalacheck.Arbitrary[(String, (String, io.circe.Json, Boolean))]</title>
<path fill="none" stroke="#000000" d="M1963.6186,-8176.0448C2176.7449,-8194.0789 2502.1377,-8221.6126 2715.8142,-8239.6932"/>
<polygon fill="#000000" stroke="#000000" points="2715.6444,-8243.1913 2725.9039,-8240.547 2716.2347,-8236.2162 2715.6444,-8243.1913"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, io.circe.Json, Boolean)] -->
<g id="node1528" class="node">
<title>org.scalacheck.Arbitrary[(String, io.circe.Json, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-8608.9355" rx="233.1906" ry="26.7407"/>
<text text-anchor="start" x="3913.7721" y="-8612.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(String, io.circe.Json, Boolean)]</text>
<text text-anchor="middle" x="4070.7721" y="-8597.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 16ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;org.scalacheck.Arbitrary[(String, io.circe.Json, Boolean)] -->
<g id="edge622" class="edge">
<title>org.scalacheck.Arbitrary[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;org.scalacheck.Arbitrary[(String, io.circe.Json, Boolean)]</title>
<path fill="none" stroke="#000000" d="M1840.5329,-8183.4437C1958.228,-8215.2813 2170.1719,-8268.6199 2355.1092,-8293.9355 2482.157,-8311.3268 3417.6925,-8261.5931 3507.6933,-8352.9355 3524.8611,-8370.3593 3498.6445,-8555.3953 3515.6933,-8572.9355 3562.8491,-8621.4508 3724.6744,-8627.6424 3861.5165,-8623.3069"/>
<polygon fill="#000000" stroke="#000000" points="3861.8645,-8626.7972 3871.7408,-8622.9621 3861.6285,-8619.8012 3861.8645,-8626.7972"/>
</g>
<!-- org.scalacheck.util.Buildable[(String, (String, io.circe.Json, Boolean)),Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="node1776" class="node">
<title>org.scalacheck.util.Buildable[(String, (String, io.circe.Json, Boolean)),Either[String,(String, io.circe.Json, Boolean)]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-7959.9355" rx="463.7241" ry="26.7407"/>
<text text-anchor="start" x="2611.4013" y="-7963.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(String, (String, io.circe.Json, Boolean)),Either[String,(String, io.circe.Json, Boolean)]]</text>
<text text-anchor="middle" x="2931.4013" y="-7948.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;org.scalacheck.util.Buildable[(String, (String, io.circe.Json, Boolean)),Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="edge719" class="edge">
<title>org.scalacheck.Arbitrary[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;org.scalacheck.util.Buildable[(String, (String, io.circe.Json, Boolean)),Either[String,(String, io.circe.Json, Boolean)]]</title>
<path fill="none" stroke="#000000" d="M1847.5371,-8132.5944C1966.7297,-8102.5677 2174.4738,-8052.8518 2355.1092,-8022.9355 2454.486,-8006.4771 2564.2416,-7993.2585 2661.0718,-7983.262"/>
<polygon fill="#000000" stroke="#000000" points="2661.7118,-7986.7148 2671.3025,-7982.2128 2660.9976,-7979.7513 2661.7118,-7986.7148"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc8] -->
<g id="node472" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc8]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-49616.9355" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="430.5494" y="-49620.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc8]</text>
<text text-anchor="middle" x="572.0494" y="-49605.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- Integral[ProductCodecSuite.this.Cc8] -->
<g id="node1225" class="node">
<title>Integral[ProductCodecSuite.this.Cc8]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-49652.9355" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="1647.104" y="-49656.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc8]</text>
<text text-anchor="middle" x="1749.604" y="-49641.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc8]&#45;&gt;Integral[ProductCodecSuite.this.Cc8] -->
<g id="edge124" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc8]&#45;&gt;Integral[ProductCodecSuite.this.Cc8]</title>
<path fill="none" stroke="#000000" d="M777.8371,-49623.2269C1007.2972,-49630.2419 1373.8512,-49641.4481 1585.075,-49647.9056"/>
<polygon fill="#000000" stroke="#000000" points="1585.2242,-49651.4117 1595.3265,-49648.219 1585.4381,-49644.415 1585.2242,-49651.4117"/>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc8] -->
<g id="node1671" class="node">
<title>Fractional[ProductCodecSuite.this.Cc8]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-49580.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="1641.104" y="-49584.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc8]</text>
<text text-anchor="middle" x="1749.604" y="-49569.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc8]&#45;&gt;Fractional[ProductCodecSuite.this.Cc8] -->
<g id="edge961" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc8]&#45;&gt;Fractional[ProductCodecSuite.this.Cc8]</title>
<path fill="none" stroke="#000000" d="M777.8371,-49610.6442C1004.4907,-49603.715 1364.9051,-49592.6965 1577.2555,-49586.2046"/>
<polygon fill="#000000" stroke="#000000" points="1577.366,-49589.7029 1587.2544,-49585.8989 1577.152,-49582.7062 1577.366,-49589.7029"/>
</g>
<!-- (=&gt; Unit) =&gt; String -->
<g id="node473" class="node">
<title>(=&gt; Unit) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-49688.9355" rx="89.6056" ry="26.7407"/>
<text text-anchor="start" x="516.5494" y="-49692.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; String</text>
<text text-anchor="middle" x="572.0494" y="-49677.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def ===: ?} -->
<g id="node474" class="node">
<title>String =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-15680.9355" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="12347.9214" y="-15684.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="12415.9214" y="-15669.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 19ms</text>
</g>
<!-- String =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[String] -->
<g id="edge230" class="edge">
<title>String =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[String]</title>
<path fill="none" stroke="#000000" d="M12516.0125,-15671.1409C12589.1752,-15663.957 12690.7965,-15653.9282 12780.0814,-15644.9355 12870.9815,-15635.7802 12975.1005,-15625.0718 13046.1727,-15617.7284"/>
<polygon fill="#000000" stroke="#000000" points="13046.8263,-15621.1796 13056.4134,-15616.67 13046.1066,-15614.2167 13046.8263,-15621.1796"/>
</g>
<!-- scala.collection.immutable.SortedMap[Long,Int] =&gt; Iterable[(Long, Int)] -->
<g id="node475" class="node">
<title>scala.collection.immutable.SortedMap[Long,Int] =&gt; Iterable[(Long, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-22166.9355" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="1548.104" y="-22170.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.SortedMap[Long,Int] =&gt; Iterable[(Long, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-22155.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc13]] -->
<g id="node476" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc13]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-49760.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="1549.604" y="-49764.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc13]]</text>
<text text-anchor="middle" x="1749.604" y="-49749.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- result.type =&gt; ?{def isEmpty: ?} -->
<g id="node478" class="node">
<title>result.type =&gt; ?{def isEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-45422.9355" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="481.5494" y="-45426.7355" font-family="Times,serif" font-size="14.00" fill="#000000">result.type =&gt; ?{def isEmpty: ?}</text>
<text text-anchor="middle" x="572.0494" y="-45411.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- result.type =&gt; ?{def isEmpty: ?}&#45;&gt;cats.Foldable[io.circe.Decoder.Result] -->
<g id="edge1158" class="edge">
<title>result.type =&gt; ?{def isEmpty: ?}&#45;&gt;cats.Foldable[io.circe.Decoder.Result]</title>
<path fill="none" stroke="#000000" d="M704.8004,-45431.243C822.366,-45438.5838 998.644,-45449.5507 1152.0988,-45458.9355 1300.031,-45467.9826 1468.5764,-45478.1223 1588.857,-45485.3294"/>
<polygon fill="#000000" stroke="#000000" points="1588.6937,-45488.8258 1598.8852,-45485.9302 1589.1124,-45481.8383 1588.6937,-45488.8258"/>
</g>
<!-- cats.Monoid[io.circe.Decoder.Result[Byte]] -->
<g id="node1857" class="node">
<title>cats.Monoid[io.circe.Decoder.Result[Byte]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-45422.9355" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="1629.104" y="-45426.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Monoid[io.circe.Decoder.Result[Byte]]</text>
<text text-anchor="middle" x="1749.604" y="-45411.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- result.type =&gt; ?{def isEmpty: ?}&#45;&gt;cats.Monoid[io.circe.Decoder.Result[Byte]] -->
<g id="edge715" class="edge">
<title>result.type =&gt; ?{def isEmpty: ?}&#45;&gt;cats.Monoid[io.circe.Decoder.Result[Byte]]</title>
<path fill="none" stroke="#000000" d="M711.4637,-45422.9355C921.639,-45422.9355 1320.2517,-45422.9355 1557.7084,-45422.9355"/>
<polygon fill="#000000" stroke="#000000" points="1557.8398,-45426.4356 1567.8398,-45422.9355 1557.8398,-45419.4356 1557.8398,-45426.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[Int],io.circe.Printer.Pieces,Seq[io.circe.Printer.Pieces]] -->
<g id="node479" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[Int],io.circe.Printer.Pieces,Seq[io.circe.Printer.Pieces]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-49832.9355" rx="394.6312" ry="26.7407"/>
<text text-anchor="start" x="301.0494" y="-49836.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[Int],io.circe.Printer.Pieces,Seq[io.circe.Printer.Pieces]]</text>
<text text-anchor="middle" x="572.0494" y="-49821.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc18]] -->
<g id="node480" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc18]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-49904.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="1531.604" y="-49908.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc18]]</text>
<text text-anchor="middle" x="1749.604" y="-49893.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Some[Int]] -->
<g id="node481" class="node">
<title>org.scalacheck.Shrink[Some[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-7084.9355" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="3978.2721" y="-7088.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Some[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-7073.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Shrink[Some[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Some[Int]] -->
<g id="edge3" class="edge">
<title>org.scalacheck.Shrink[Some[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Some[Int]]</title>
<path fill="none" stroke="#000000" d="M4211.9327,-7081.5897C4406.8802,-7076.969 4759.1076,-7068.6205 4977.2221,-7063.4507"/>
<polygon fill="#000000" stroke="#000000" points="4977.5918,-7066.943 4987.506,-7063.2069 4977.4259,-7059.945 4977.5918,-7066.943"/>
</g>
<!-- Some[Int] =&gt; Traversable[Int] -->
<g id="node856" class="node">
<title>Some[Int] =&gt; Traversable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-6914.9355" rx="130.2154" ry="26.7407"/>
<text text-anchor="start" x="5083.7166" y="-6918.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Some[Int] =&gt; Traversable[Int]</text>
<text text-anchor="middle" x="5167.7166" y="-6903.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Some[Int]]&#45;&gt;Some[Int] =&gt; Traversable[Int] -->
<g id="edge1179" class="edge">
<title>org.scalacheck.Shrink[Some[Int]]&#45;&gt;Some[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M4202.2713,-7095.2801C4347.3646,-7103.5473 4568.0575,-7105.7725 4625.8509,-7048.9355 4641.4297,-7033.6146 4618.2918,-6966.2765 4633.8509,-6950.9355 4688.584,-6896.97 4895.637,-6897.7304 5035.2135,-6905.0148"/>
<polygon fill="#000000" stroke="#000000" points="5035.388,-6908.5292 5045.5621,-6905.5732 5035.7652,-6901.5394 5035.388,-6908.5292"/>
</g>
<!-- Integral[Some[Int]] -->
<g id="node1409" class="node">
<title>Integral[Some[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-6842.9355" rx="86.9483" ry="26.7407"/>
<text text-anchor="start" x="5114.2166" y="-6846.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Some[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-6831.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Some[Int]]&#45;&gt;Integral[Some[Int]] -->
<g id="edge640" class="edge">
<title>org.scalacheck.Shrink[Some[Int]]&#45;&gt;Integral[Some[Int]]</title>
<path fill="none" stroke="#000000" d="M4201.6487,-7095.5731C4347.0559,-7104.2148 4568.9176,-7106.888 4625.8509,-7048.9355 4639.103,-7035.4462 4620.6161,-6892.4419 4633.8509,-6878.9355 4692.9196,-6818.6551 4937.0896,-6825.8098 5073.8419,-6835.0401"/>
<polygon fill="#000000" stroke="#000000" points="5073.6845,-6838.5375 5083.9022,-6835.7359 5074.1676,-6831.5542 5073.6845,-6838.5375"/>
</g>
<!-- Fractional[Some[Int]] -->
<g id="node1570" class="node">
<title>Fractional[Some[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-7130.9355" rx="96.3333" ry="26.7407"/>
<text text-anchor="start" x="5107.7166" y="-7134.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Some[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-7119.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Some[Int]]&#45;&gt;Fractional[Some[Int]] -->
<g id="edge1012" class="edge">
<title>org.scalacheck.Shrink[Some[Int]]&#45;&gt;Fractional[Some[Int]]</title>
<path fill="none" stroke="#000000" d="M4209.7009,-7090.7615C4432.1134,-7100.0883 4863.2759,-7118.1689 5062.3243,-7126.516"/>
<polygon fill="#000000" stroke="#000000" points="5062.3561,-7130.0203 5072.494,-7126.9424 5062.6495,-7123.0264 5062.3561,-7130.0203"/>
</g>
<!-- org.scalacheck.Shrink[Some[Int]]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge1471" class="edge">
<title>org.scalacheck.Shrink[Some[Int]]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4200.9797,-7095.8077C4346.6563,-7104.7739 4569.6553,-7107.8541 4625.8509,-7048.9355 4643.4151,-7030.5204 4616.3104,-6609.3732 4633.8509,-6590.9355 4688.8209,-6533.1538 4910.2167,-6536.6874 5050.061,-6545.2796"/>
<polygon fill="#000000" stroke="#000000" points="5050.2018,-6548.7954 5060.4027,-6545.9333 5050.6434,-6541.8093 5050.2018,-6548.7954"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V] -->
<g id="node482" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-49976.9355" rx="521.6897" ry="26.7407"/>
<text text-anchor="start" x="211.0494" y="-49980.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V]</text>
<text text-anchor="middle" x="572.0494" y="-49965.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[Byte] -->
<g id="node483" class="node">
<title>cats.kernel.Eq[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-35954.9355" rx="90.5193" ry="26.7407"/>
<text text-anchor="start" x="2875.4013" y="-35958.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Byte]</text>
<text text-anchor="middle" x="2931.4013" y="-35943.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 7ms</text>
</g>
<!-- cats.kernel.Eq[Byte]&#45;&gt;shapeless.IsTuple[Byte] -->
<g id="edge369" class="edge">
<title>cats.kernel.Eq[Byte]&#45;&gt;shapeless.IsTuple[Byte]</title>
<path fill="none" stroke="#000000" d="M3020.2563,-35949.4253C3133.45,-35942.3964 3335.1137,-35929.8428 3507.6933,-35918.9355 3664.6295,-35909.017 3846.1579,-35897.3819 3959.7265,-35890.0832"/>
<polygon fill="#000000" stroke="#000000" points="3960.0662,-35893.5686 3969.8211,-35889.4343 3959.6171,-35886.5831 3960.0662,-35893.5686"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(Short, Int),scala.collection.immutable.Map[Short,Int]] -->
<g id="node484" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(Short, Int),scala.collection.immutable.Map[Short,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-15498.9355" rx="387.489" ry="26.7407"/>
<text text-anchor="start" x="4901.7166" y="-15502.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(Short, Int),scala.collection.immutable.Map[Short,Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-15487.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc5] -->
<g id="node485" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc5]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-50048.9355" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="1608.604" y="-50052.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc5]</text>
<text text-anchor="middle" x="1749.604" y="-50037.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L] -->
<g id="node486" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-50120.9355" rx="415.1434" ry="26.7407"/>
<text text-anchor="start" x="286.5494" y="-50124.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L]</text>
<text text-anchor="middle" x="572.0494" y="-50109.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.concurrent.ExecutionContext -->
<g id="node487" class="node">
<title>scala.concurrent.ExecutionContext</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-50192.9355" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="477.0494" y="-50196.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.concurrent.ExecutionContext</text>
<text text-anchor="middle" x="572.0494" y="-50181.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 6ms</text>
</g>
<!-- Integral[ProductCodecSuite.this.Cc22] -->
<g id="node488" class="node">
<title>Integral[ProductCodecSuite.this.Cc22]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-43262.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="1644.104" y="-43266.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc22]</text>
<text text-anchor="middle" x="1749.604" y="-43251.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Decoder.Result[Vector[Int]] =&gt; ?{def ===: ?} -->
<g id="node489" class="node">
<title>io.circe.Decoder.Result[Vector[Int]] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-50264.9355" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="421.5494" y="-50268.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[Vector[Int]] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-50253.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node490" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-48968.9355" rx="207.7788" ry="26.7407"/>
<text text-anchor="start" x="1610.604" y="-48972.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-48957.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node491" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-1062.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="4967.7166" y="-1066.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-1051.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[io.circe.Json],String,List[String]] -->
<g id="node492" class="node">
<title>scala.collection.generic.CanBuildFrom[List[io.circe.Json],String,List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-50336.9355" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="360.0494" y="-50340.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[io.circe.Json],String,List[String]]</text>
<text text-anchor="middle" x="572.0494" y="-50325.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Long] -->
<g id="node494" class="node">
<title>org.scalacheck.Arbitrary[Long]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-9874.9355" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="5081.7166" y="-9878.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Long]</text>
<text text-anchor="middle" x="5167.7166" y="-9863.7355" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 71ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Long]&#45;&gt;scala.reflect.ClassTag[Long] -->
<g id="edge1520" class="edge">
<title>org.scalacheck.Arbitrary[Long]&#45;&gt;scala.reflect.ClassTag[Long]</title>
<path fill="none" stroke="#000000" d="M5300.7377,-9874.9355C5503.4272,-9874.9355 5887.3453,-9874.9355 6089.7278,-9874.9355"/>
<polygon fill="#000000" stroke="#000000" points="6089.8206,-9878.4356 6099.8206,-9874.9355 6089.8205,-9871.4356 6089.8206,-9878.4356"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node495" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-18384.9355" rx="555.1577" ry="26.7407"/>
<text text-anchor="start" x="3686.2721" y="-18388.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="4070.7721" y="-18373.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 335ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge773" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M4373.7452,-18407.464C5739.3058,-18509.0351 11255.9758,-18919.7115 11265.0151,-18925.9355 11271.8927,-18930.6712 11266.0259,-18938.3661 11273.0151,-18942.9355 11379.3433,-19012.452 12288.8851,-18973.9355 12415.9214,-18973.9355 12415.9214,-18973.9355 12415.9214,-18973.9355 18607.2235,-18973.9355 18852.3901,-18973.9355 19541.3378,-19045.5888 19704.8751,-18862.9355 19716.8729,-18849.5353 19711.057,-17585.8299 19712.8751,-17567.9355 19769.297,-17012.6016 19940.7597,-16351.8119 19984.2108,-16190.0216"/>
<polygon fill="#000000" stroke="#000000" points="19987.6638,-16190.659 19986.8852,-16180.0928 19980.9047,-16188.8384 19987.6638,-16190.659"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node1510" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-17676.9355" rx="533.7313" ry="26.7407"/>
<text text-anchor="start" x="4798.2166" y="-17680.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="5167.7166" y="-17665.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 430ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge957" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M4112.4341,-18358.0457C4283.4776,-18247.6492 4931.4842,-17829.4068 5117.5076,-17709.3418"/>
<polygon fill="#000000" stroke="#000000" points="5119.509,-17712.2159 5126.0129,-17703.8523 5115.713,-17706.3345 5119.509,-17712.2159"/>
</g>
<!-- io.circe.KeyEncoder[Byte] -->
<g id="node496" class="node">
<title>io.circe.KeyEncoder[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-20798.9355" rx="115.0173" ry="26.7407"/>
<text text-anchor="start" x="1676.104" y="-20802.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.KeyEncoder[Byte]</text>
<text text-anchor="middle" x="1749.604" y="-20787.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[None.type] -->
<g id="node497" class="node">
<title>org.scalacheck.Shrink[None.type]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-37142.9355" rx="142.6713" ry="26.7407"/>
<text text-anchor="start" x="479.0494" y="-37146.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[None.type]</text>
<text text-anchor="middle" x="572.0494" y="-37131.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Shrink[None.type]&#45;&gt;Fractional[None.type] -->
<g id="edge594" class="edge">
<title>org.scalacheck.Shrink[None.type]&#45;&gt;Fractional[None.type]</title>
<path fill="none" stroke="#000000" d="M713.2124,-37147.2512C951.7851,-37154.5448 1429.5367,-37169.1505 1642.6777,-37175.6666"/>
<polygon fill="#000000" stroke="#000000" points="1642.8322,-37179.1729 1652.9345,-37175.9802 1643.0461,-37172.1761 1642.8322,-37179.1729"/>
</g>
<!-- Integral[None.type] -->
<g id="node554" class="node">
<title>Integral[None.type]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-37106.9355" rx="87.8629" ry="26.7407"/>
<text text-anchor="start" x="1695.604" y="-37110.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[None.type]</text>
<text text-anchor="middle" x="1749.604" y="-37095.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[None.type]&#45;&gt;Integral[None.type] -->
<g id="edge1041" class="edge">
<title>org.scalacheck.Shrink[None.type]&#45;&gt;Integral[None.type]</title>
<path fill="none" stroke="#000000" d="M713.2124,-37138.6199C955.3907,-37131.2161 1444.0322,-37116.2774 1652.1584,-37109.9146"/>
<polygon fill="#000000" stroke="#000000" points="1652.2676,-37113.413 1662.156,-37109.609 1652.0537,-37106.4163 1652.2676,-37113.413"/>
</g>
<!-- org.scalacheck.util.Buildable[(String, io.circe.Json),List[(String, io.circe.Json)]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(String, io.circe.Json),List[(String, io.circe.Json)]] -->
<g id="edge1394" class="edge">
<title>org.scalacheck.util.Buildable[(String, io.circe.Json),List[(String, io.circe.Json)]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(String, io.circe.Json),List[(String, io.circe.Json)]]</title>
<path fill="none" stroke="#000000" d="M4391.3718,-5102.9355C4516.3216,-5102.9355 4660.462,-5102.9355 4790.3687,-5102.9355"/>
<polygon fill="#000000" stroke="#000000" points="4790.4922,-5106.4356 4800.4921,-5102.9355 4790.4921,-5099.4356 4790.4922,-5106.4356"/>
</g>
<!-- scala.reflect.ClassTag[((String, io.circe.Json)) =&gt; Boolean] -->
<g id="node499" class="node">
<title>scala.reflect.ClassTag[((String, io.circe.Json)) =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-7706.9355" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="2768.9013" y="-7710.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[((String, io.circe.Json)) =&gt; Boolean]</text>
<text text-anchor="middle" x="2931.4013" y="-7695.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; JawnParserSuite.this.PropertyCheckConfigParam -->
<g id="node500" class="node">
<title>(Any =&gt; Nothing) =&gt; JawnParserSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-50408.9355" rx="290.7418" ry="26.7407"/>
<text text-anchor="start" x="374.5494" y="-50412.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; JawnParserSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-50397.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc20]] -->
<g id="node501" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc20]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-50480.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="1531.604" y="-50484.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc20]]</text>
<text text-anchor="middle" x="1749.604" y="-50469.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Byte,Int]] -->
<g id="node502" class="node">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Byte,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-2633.9355" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="2744.9013" y="-2637.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.collection.immutable.Map[Byte,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-2622.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Byte, Int)] -->
<g id="edge1457" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Byte, Int)]</title>
<path fill="none" stroke="#000000" d="M3050.9251,-2658.1802C3167.5093,-2681.8825 3349.841,-2719.0951 3507.6933,-2751.9355 3666.3877,-2784.9512 3850.074,-2823.9109 3963.3481,-2848.0225"/>
<polygon fill="#000000" stroke="#000000" points="3962.8997,-2851.5053 3973.4093,-2850.1644 3964.3573,-2844.6588 3962.8997,-2851.5053"/>
</g>
<!-- scala.collection.immutable.Map[Byte,Int] =&gt; Traversable[(Byte, Int)] -->
<g id="node590" class="node">
<title>scala.collection.immutable.Map[Byte,Int] =&gt; Traversable[(Byte, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-2468.9355" rx="282.6855" ry="26.7407"/>
<text text-anchor="start" x="3878.7721" y="-2472.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[Byte,Int] =&gt; Traversable[(Byte, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-2457.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;scala.collection.immutable.Map[Byte,Int] =&gt; Traversable[(Byte, Int)] -->
<g id="edge825" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;scala.collection.immutable.Map[Byte,Int] =&gt; Traversable[(Byte, Int)]</title>
<path fill="none" stroke="#000000" d="M3024.9619,-2608.6445C3139.6738,-2578.7152 3340.4608,-2529.8137 3515.6933,-2504.9355 3605.8918,-2492.1299 3704.9916,-2483.8735 3794.1834,-2478.5524"/>
<polygon fill="#000000" stroke="#000000" points="3794.3936,-2482.0462 3804.1714,-2477.9663 3793.9835,-2475.0582 3794.3936,-2482.0462"/>
</g>
<!-- scala.reflect.ClassTag[scala.collection.immutable.Map[Byte,Int]] -->
<g id="node1514" class="node">
<title>scala.reflect.ClassTag[scala.collection.immutable.Map[Byte,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-2324.9355" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="3891.7721" y="-2328.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.collection.immutable.Map[Byte,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-2313.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Map[Byte,Int]] -->
<g id="edge1023" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Map[Byte,Int]]</title>
<path fill="none" stroke="#000000" d="M2973.6538,-2607.3729C3067.0997,-2550.1991 3300.1303,-2416.191 3515.6933,-2360.9355 3605.8592,-2337.8233 3706.8163,-2327.0116 3797.6568,-2322.5144"/>
<polygon fill="#000000" stroke="#000000" points="3798.005,-2326.002 3807.8291,-2322.035 3797.6754,-2319.0098 3798.005,-2326.002"/>
</g>
<!-- org.scalacheck.util.Buildable[(Byte, Int),scala.collection.immutable.Map[Byte,Int]] -->
<g id="node1968" class="node">
<title>org.scalacheck.util.Buildable[(Byte, Int),scala.collection.immutable.Map[Byte,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-2942.9355" rx="335.3373" ry="26.7407"/>
<text text-anchor="start" x="3841.7721" y="-2946.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(Byte, Int),scala.collection.immutable.Map[Byte,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-2931.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Byte, Int),scala.collection.immutable.Map[Byte,Int]] -->
<g id="edge798" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Byte, Int),scala.collection.immutable.Map[Byte,Int]]</title>
<path fill="none" stroke="#000000" d="M3158.1464,-2618.6977C3280.3586,-2623.7245 3423.0472,-2653.4955 3507.6933,-2751.9355 3518.9369,-2765.0114 3503.5799,-2894.6612 3515.6933,-2906.9355 3554.458,-2946.2153 3669.251,-2957.5971 3784.4582,-2958.1621"/>
<polygon fill="#000000" stroke="#000000" points="3784.523,-2961.6622 3794.5307,-2958.1844 3784.5385,-2954.6622 3784.523,-2961.6622"/>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="node503" class="node">
<title>io.circe.Encoder[scala.collection.immutable.SortedMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-22166.9355" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="388.5494" y="-22170.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[scala.collection.immutable.SortedMap[Long,Int]]</text>
<text text-anchor="middle" x="572.0494" y="-22155.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;scala.collection.immutable.SortedMap[Long,Int] =&gt; Iterable[(Long, Int)] -->
<g id="edge590" class="edge">
<title>io.circe.Encoder[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;scala.collection.immutable.SortedMap[Long,Int] =&gt; Iterable[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M842.9432,-22166.9355C1021.9918,-22166.9355 1257.0548,-22166.9355 1442.9671,-22166.9355"/>
<polygon fill="#000000" stroke="#000000" points="1443.1782,-22170.4356 1453.1782,-22166.9355 1443.1781,-22163.4356 1443.1782,-22170.4356"/>
</g>
<!-- io.circe.KeyEncoder[Long] -->
<g id="node629" class="node">
<title>io.circe.KeyEncoder[Long]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-21878.9355" rx="117.2596" ry="26.7407"/>
<text text-anchor="start" x="1674.604" y="-21882.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.KeyEncoder[Long]</text>
<text text-anchor="middle" x="1749.604" y="-21867.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;io.circe.KeyEncoder[Long] -->
<g id="edge474" class="edge">
<title>io.circe.Encoder[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;io.circe.KeyEncoder[Long]</title>
<path fill="none" stroke="#000000" d="M794.0797,-22182.384C933.6911,-22186.7295 1096.1782,-22180.1101 1144.0988,-22130.9355 1160.8602,-22113.7355 1135.3143,-21932.1132 1152.0988,-21914.9355 1216.104,-21849.4307 1475.2084,-21857.0606 1630.4215,-21868.1703"/>
<polygon fill="#000000" stroke="#000000" points="1630.2631,-21871.6679 1640.4917,-21868.9063 1630.7735,-21864.6866 1630.2631,-21871.6679"/>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1465" class="edge">
<title>io.circe.Encoder[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M792.4737,-22182.6038C932.6379,-22187.195 1096.4203,-22180.776 1144.0988,-22130.9355 1160.6919,-22113.59 1140.5482,-21719.978 1152.0988,-21698.9355 1266.7498,-21490.0678 1544.1135,-21372.1226 1676.6808,-21325.9272"/>
<polygon fill="#000000" stroke="#000000" points="1678.042,-21329.1602 1686.3565,-21322.5936 1675.7618,-21322.542 1678.042,-21329.1602"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T] -->
<g id="node504" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-50552.9355" rx="529.746" ry="26.7407"/>
<text text-anchor="start" x="205.5494" y="-50556.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T]</text>
<text text-anchor="middle" x="572.0494" y="-50541.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node505" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-13698.9355" rx="309.9257" ry="26.7407"/>
<text text-anchor="start" x="4956.7166" y="-13702.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-13687.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int)] -->
<g id="node506" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-7012.9355" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="3971.2721" y="-7016.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-7001.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 22ms</text>
</g>
<!-- Integral[(Int, Int, Int)] -->
<g id="node750" class="node">
<title>Integral[(Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-6770.9355" rx="96.7474" ry="26.7407"/>
<text text-anchor="start" x="5107.2166" y="-6774.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-6759.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int)] -->
<g id="edge197" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4209.4984,-7024.0293C4354.9154,-7032.2908 4569.9327,-7033.8547 4625.8509,-6976.9355 4639.103,-6963.4462 4620.6161,-6820.4419 4633.8509,-6806.9355 4691.6113,-6747.9902 4926.3648,-6753.5259 5064.6008,-6762.4306"/>
<polygon fill="#000000" stroke="#000000" points="5064.5841,-6765.937 5074.7933,-6763.1045 5065.046,-6758.9523 5064.5841,-6765.937"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge597" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4208.7918,-7024.2467C4354.4718,-7032.8003 4570.5609,-7034.716 4625.8509,-6976.9355 4640.6801,-6961.4385 4619.0417,-6606.4516 4633.8509,-6590.9355 4688.8758,-6533.2844 4909.9643,-6536.7414 5049.7935,-6545.2905"/>
<polygon fill="#000000" stroke="#000000" points="5049.9346,-6548.8062 5060.1347,-6545.941 5050.3742,-6541.82 5049.9346,-6548.8062"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node507" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-50624.9355" rx="438.3124" ry="26.7407"/>
<text text-anchor="start" x="270.0494" y="-50628.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-50613.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node899" class="node">
<title>Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-50660.9355" rx="391.9745" ry="26.7407"/>
<text text-anchor="start" x="1480.604" y="-50664.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-50649.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge465" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M964.5672,-50636.9355C1099.0319,-50641.0464 1248.9178,-50645.6287 1381.3898,-50649.6786"/>
<polygon fill="#000000" stroke="#000000" points="1381.605,-50653.1867 1391.7073,-50649.994 1381.819,-50646.19 1381.605,-50653.1867"/>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1560" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-50588.9355" rx="383.0039" ry="26.7407"/>
<text text-anchor="start" x="1486.604" y="-50592.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-50577.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge729" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M964.5672,-50612.9356C1101.2876,-50608.7558 1253.9509,-50604.0886 1388.0418,-50599.9892"/>
<polygon fill="#000000" stroke="#000000" points="1388.1849,-50603.4865 1398.0732,-50599.6825 1387.9709,-50596.4898 1388.1849,-50603.4865"/>
</g>
<!-- io.circe.Encoder[(Int,)] -->
<g id="node508" class="node">
<title>io.circe.Encoder[(Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-22526.9355" rx="101.2327" ry="26.7407"/>
<text text-anchor="start" x="508.5494" y="-22530.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int,)]</text>
<text text-anchor="middle" x="572.0494" y="-22515.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- io.circe.Encoder[(Int,)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge987" class="edge">
<title>io.circe.Encoder[(Int,)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M637.7164,-22547.5606C757.9085,-22580.7477 1012.9508,-22629.1904 1144.0988,-22490.9355 1159.2402,-22474.9736 1141.5933,-21718.2665 1152.0988,-21698.9355 1265.8699,-21489.5872 1543.6699,-21371.8802 1676.513,-21325.8356"/>
<polygon fill="#000000" stroke="#000000" points="1677.8836,-21329.0658 1686.2091,-21322.5131 1675.6145,-21322.4437 1677.8836,-21329.0658"/>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int,)]] -->
<g id="node1450" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int,)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-22598.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="1597.604" y="-22602.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int,)]]</text>
<text text-anchor="middle" x="1749.604" y="-22587.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[(Int,)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int,)]] -->
<g id="edge112" class="edge">
<title>io.circe.Encoder[(Int,)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int,)]]</title>
<path fill="none" stroke="#000000" d="M670.5737,-22533.1047C785.9739,-22540.3179 982.9083,-22552.5884 1152.0988,-22562.9355 1279.8479,-22570.7483 1422.9692,-22579.3758 1537.1052,-22586.2259"/>
<polygon fill="#000000" stroke="#000000" points="1537.1673,-22589.7359 1547.359,-22586.8412 1537.5867,-22582.7484 1537.1673,-22589.7359"/>
</g>
<!-- ((Int,)) =&gt; Iterable[Int] -->
<g id="node1755" class="node">
<title>((Int,)) =&gt; Iterable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-22526.9355" rx="101.2327" ry="26.7407"/>
<text text-anchor="start" x="1686.104" y="-22530.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Int,)) =&gt; Iterable[Int]</text>
<text text-anchor="middle" x="1749.604" y="-22515.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Encoder[(Int,)]&#45;&gt;((Int,)) =&gt; Iterable[Int] -->
<g id="edge140" class="edge">
<title>io.circe.Encoder[(Int,)]&#45;&gt;((Int,)) =&gt; Iterable[Int]</title>
<path fill="none" stroke="#000000" d="M673.211,-22526.9355C892.4053,-22526.9355 1409.7774,-22526.9355 1638.0572,-22526.9355"/>
<polygon fill="#000000" stroke="#000000" points="1638.3758,-22530.4356 1648.3757,-22526.9355 1638.3757,-22523.4356 1638.3758,-22530.4356"/>
</g>
<!-- Int(1) =&gt; ?{def to: ?} -->
<g id="node509" class="node">
<title>Int(1) =&gt; ?{def to: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-50696.9355" rx="96.3333" ry="26.7407"/>
<text text-anchor="start" x="512.0494" y="-50700.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Int(1) =&gt; ?{def to: ?}</text>
<text text-anchor="middle" x="572.0494" y="-50685.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- scala.concurrent.Future[Seq[io.circe.Printer.Pieces]] =&gt; MemoizedPiecesSuite.this.FutureConcept[?] -->
<g id="node510" class="node">
<title>scala.concurrent.Future[Seq[io.circe.Printer.Pieces]] =&gt; MemoizedPiecesSuite.this.FutureConcept[?]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-50768.9355" rx="402.1876" ry="26.7407"/>
<text text-anchor="start" x="295.5494" y="-50772.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.concurrent.Future[Seq[io.circe.Printer.Pieces]] =&gt; MemoizedPiecesSuite.this.FutureConcept[?]</text>
<text text-anchor="middle" x="572.0494" y="-50757.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Fractional[scala.math.BigInt] -->
<g id="node512" class="node">
<title>Fractional[scala.math.BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-50849.9355" rx="125.316" ry="26.7407"/>
<text text-anchor="start" x="1669.104" y="-50853.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[scala.math.BigInt]</text>
<text text-anchor="middle" x="1749.604" y="-50838.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node514" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-22094.9355" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="420.5494" y="-22098.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-22083.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 22ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge954" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M762.5096,-22109.4005C908.3213,-22115.8157 1092.8821,-22112.2767 1144.0988,-22058.9355 1157.9541,-22044.5055 1142.4402,-21716.4544 1152.0988,-21698.9355 1267.1363,-21490.2804 1544.3084,-21372.2298 1676.7545,-21325.9677"/>
<polygon fill="#000000" stroke="#000000" points="1678.1116,-21329.202 1686.4212,-21322.6292 1675.8264,-21322.5854 1678.1116,-21329.202"/>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node1257" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-22094.9355" rx="350.9501" ry="26.7407"/>
<text text-anchor="start" x="1509.604" y="-22098.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-22083.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge462" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M797.7005,-22094.9355C964.8376,-22094.9355 1196.0246,-22094.9355 1388.7086,-22094.9355"/>
<polygon fill="#000000" stroke="#000000" points="1388.7238,-22098.4356 1398.7237,-22094.9355 1388.7237,-22091.4356 1388.7238,-22098.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Either[String,(String, io.circe.Json, Boolean)],List[Either[String,(String, io.circe.Json, Boolean)]]] -->
<g id="node515" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Either[String,(String, io.circe.Json, Boolean)],List[Either[String,(String, io.circe.Json, Boolean)]]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-7302.9355" rx="552.915" ry="26.7407"/>
<text text-anchor="start" x="2548.4013" y="-7306.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Either[String,(String, io.circe.Json, Boolean)],List[Either[String,(String, io.circe.Json, Boolean)]]]</text>
<text text-anchor="middle" x="2931.4013" y="-7291.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc22] -->
<g id="node516" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc22]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-43280.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-43284.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc22]</text>
<text text-anchor="middle" x="572.0494" y="-43269.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc22]&#45;&gt;Fractional[ProductCodecSuite.this.Cc22] -->
<g id="edge144" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc22]&#45;&gt;Fractional[ProductCodecSuite.this.Cc22]</title>
<path fill="none" stroke="#000000" d="M774.4782,-43290.2185C1000.5491,-43300.5856 1362.6778,-43317.192 1576.2174,-43326.9844"/>
<polygon fill="#000000" stroke="#000000" points="1576.1226,-43330.4837 1586.2725,-43327.4455 1576.4434,-43323.491 1576.1226,-43330.4837"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc22]&#45;&gt;Integral[ProductCodecSuite.this.Cc22] -->
<g id="edge603" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc22]&#45;&gt;Integral[ProductCodecSuite.this.Cc22]</title>
<path fill="none" stroke="#000000" d="M786.32,-43277.6602C1014.2185,-43274.1766 1370.1024,-43268.7366 1579.5286,-43265.5353"/>
<polygon fill="#000000" stroke="#000000" points="1579.7537,-43269.0324 1589.699,-43265.3798 1579.6467,-43262.0332 1579.7537,-43269.0324"/>
</g>
<!-- org.scalacheck.Arbitrary[None.type] -->
<g id="node517" class="node">
<title>org.scalacheck.Arbitrary[None.type]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-50912.9355" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="472.0494" y="-50916.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[None.type]</text>
<text text-anchor="middle" x="572.0494" y="-50901.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[(Int,)] -->
<g id="node518" class="node">
<title>cats.kernel.Eq[(Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-18190.9355" rx="92.7622" ry="26.7407"/>
<text text-anchor="start" x="10800.9287" y="-18194.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int,)]</text>
<text text-anchor="middle" x="10858.4287" y="-18179.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 39ms</text>
</g>
<!-- cats.kernel.Eq[(Int,)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge766" class="edge">
<title>cats.kernel.Eq[(Int,)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10926.831,-18209.2352C11018.7229,-18229.1943 11180.2601,-18247.1566 11265.0151,-18154.9355 11283.8681,-18134.4217 11254.2117,-16169.4949 11273.0151,-16148.9355 11348.6689,-16066.217 11489.3687,-16076.0175 11578.2153,-16092.8837"/>
<polygon fill="#000000" stroke="#000000" points="11577.762,-16096.3616 11588.2499,-16094.8603 11579.1149,-16089.4935 11577.762,-16096.3616"/>
</g>
<!-- cats.kernel.Eq[(Int,)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge677" class="edge">
<title>cats.kernel.Eq[(Int,)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M10926.9859,-18209.1016C11018.6742,-18228.7762 11179.5661,-18246.2715 11265.0151,-18154.9355 11278.9856,-18140.0025 11259.8192,-17802.5574 11273.0151,-17786.9355 11337.2522,-17710.8884 11453.7082,-17697.545 11541.845,-17700.1007"/>
<polygon fill="#000000" stroke="#000000" points="11541.7845,-17703.6007 11551.9044,-17700.4643 11542.0375,-17696.6052 11541.7845,-17703.6007"/>
</g>
<!-- shapeless.IsTuple[(Int,)] -->
<g id="node591" class="node">
<title>shapeless.IsTuple[(Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-18258.9355" rx="105.218" ry="26.7407"/>
<text text-anchor="start" x="11591.8883" y="-18262.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int,)]</text>
<text text-anchor="middle" x="11658.3883" y="-18247.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[(Int,)]&#45;&gt;shapeless.IsTuple[(Int,)] -->
<g id="edge299" class="edge">
<title>cats.kernel.Eq[(Int,)]&#45;&gt;shapeless.IsTuple[(Int,)]</title>
<path fill="none" stroke="#000000" d="M10947.4799,-18198.5053C11094.5276,-18211.005 11387.7326,-18235.9287 11547.8172,-18249.5365"/>
<polygon fill="#000000" stroke="#000000" points="11547.9057,-18253.0566 11558.1662,-18250.4162 11548.4986,-18246.0817 11547.9057,-18253.0566"/>
</g>
<!-- shapeless.Generic.Aux[(Int,),L] -->
<g id="node937" class="node">
<title>shapeless.Generic.Aux[(Int,),L]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-18186.9355" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="11571.3883" y="-18190.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int,),L]</text>
<text text-anchor="middle" x="11658.3883" y="-18175.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 17ms</text>
</g>
<!-- cats.kernel.Eq[(Int,)]&#45;&gt;shapeless.Generic.Aux[(Int,),L] -->
<g id="edge656" class="edge">
<title>cats.kernel.Eq[(Int,)]&#45;&gt;shapeless.Generic.Aux[(Int,),L]</title>
<path fill="none" stroke="#000000" d="M10951.3674,-18190.4708C11089.5886,-18189.7797 11350.5281,-18188.4749 11513.8238,-18187.6584"/>
<polygon fill="#000000" stroke="#000000" points="11513.9679,-18191.1578 11523.9502,-18187.6078 11513.9328,-18184.1579 11513.9679,-18191.1578"/>
</g>
<!-- cats.kernel.Eq[Int :: shapeless.HNil] -->
<g id="node1414" class="node">
<title>cats.kernel.Eq[Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-17603.9355" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="19237.6796" y="-17607.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="19337.1796" y="-17592.7355" font-family="Times,serif" font-size="14.00" fill="#000000">25 times = 211ms</text>
</g>
<!-- cats.kernel.Eq[(Int,)]&#45;&gt;cats.kernel.Eq[Int :: shapeless.HNil] -->
<g id="edge604" class="edge">
<title>cats.kernel.Eq[(Int,)]&#45;&gt;cats.kernel.Eq[Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M10951.0327,-18192.5028C11034.6163,-18191.637 11160.1845,-18184.6243 11265.0151,-18154.9355 11268.8399,-18153.8523 11269.1657,-18151.928 11273.0151,-18150.9355 11426.5945,-18111.3403 13967.0264,-18041.6059 14125.4422,-18033.9355 16143.639,-17936.2166 18591.7108,-17683.4161 19196.9059,-17619.0314"/>
<polygon fill="#000000" stroke="#000000" points="19197.4085,-17622.4977 19206.9817,-17617.9587 19196.6674,-17615.5371 19197.4085,-17622.4977"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Unit]]&#45;&gt;cats.kernel.Eq[Unit] -->
<g id="edge697" class="edge">
<title>cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Unit]]&#45;&gt;cats.kernel.Eq[Unit]</title>
<path fill="none" stroke="#000000" d="M12657.7119,-13581.3397C12699.0247,-13586.4118 12741.1493,-13593.9237 12780.0814,-13604.9355 12783.9066,-13606.0175 12784.2718,-13607.8001 12788.0814,-13608.9355 13223.5772,-13738.7302 13349.2824,-13726.9355 13803.7086,-13726.9355 13803.7086,-13726.9355 13803.7086,-13726.9355 17757.7665,-13726.9355 18413.8923,-13726.9355 19119.0469,-14206.1435 19295.4247,-14333.9331"/>
<polygon fill="#000000" stroke="#000000" points="19293.5166,-14336.8732 19303.6624,-14339.9252 19297.6343,-14331.2124 19293.5166,-14336.8732"/>
</g>
<!-- shapeless.IsTuple[scala.util.Either[io.circe.DecodingFailure,Unit]] -->
<g id="node1236" class="node">
<title>shapeless.IsTuple[scala.util.Either[io.circe.DecodingFailure,Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-13572.9355" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="12949.5282" y="-13576.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[scala.util.Either[io.circe.DecodingFailure,Unit]]</text>
<text text-anchor="middle" x="13131.0282" y="-13561.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Unit]]&#45;&gt;shapeless.IsTuple[scala.util.Either[io.circe.DecodingFailure,Unit]] -->
<g id="edge403" class="edge">
<title>cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Unit]]&#45;&gt;shapeless.IsTuple[scala.util.Either[io.circe.DecodingFailure,Unit]]</title>
<path fill="none" stroke="#000000" d="M12670.5587,-13572.9355C12729.6673,-13572.9355 12792.8777,-13572.9355 12852.9374,-13572.9355"/>
<polygon fill="#000000" stroke="#000000" points="12852.9375,-13576.4356 12862.9375,-13572.9355 12852.9374,-13569.4356 12852.9375,-13576.4356"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Unit]]&#45;&gt;cats.kernel.Order[io.circe.DecodingFailure] -->
<g id="edge892" class="edge">
<title>cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Unit]]&#45;&gt;cats.kernel.Order[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M12474.2844,-13599.1066C12559.5231,-13640.9301 12714.9872,-13731.7066 12780.0814,-13862.9355 12788.7983,-13880.5085 12774.7904,-14201.5084 12788.0814,-14215.9355 12843.9821,-14276.6146 12939.0825,-14282.3957 13014.9778,-14274.8006"/>
<polygon fill="#000000" stroke="#000000" points="13015.5168,-14278.2627 13025.079,-14273.7004 13014.7588,-14271.3038 13015.5168,-14278.2627"/>
</g>
<!-- cats.kernel.Eq[io.circe.DecodingFailure] -->
<g id="node1594" class="node">
<title>cats.kernel.Eq[io.circe.DecodingFailure]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-13997.9355" rx="168.0831" ry="26.7407"/>
<text text-anchor="start" x="13020.0282" y="-14001.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.DecodingFailure]</text>
<text text-anchor="middle" x="13131.0282" y="-13986.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 29ms</text>
</g>
<!-- cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Unit]]&#45;&gt;cats.kernel.Eq[io.circe.DecodingFailure] -->
<g id="edge1003" class="edge">
<title>cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Unit]]&#45;&gt;cats.kernel.Eq[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M12546.4885,-13549.8236C12625.3649,-13543.9438 12721.6287,-13552.5334 12780.0814,-13613.9355 12799.5792,-13634.4171 12774.641,-13716.0557 12788.0814,-13740.9355 12848.3512,-13852.5021 12980.3732,-13929.426 13061.8967,-13968.3851"/>
<polygon fill="#000000" stroke="#000000" points="13060.5527,-13971.6209 13071.0904,-13972.7201 13063.5382,-13965.2894 13060.5527,-13971.6209"/>
</g>
<!-- cats.kernel.PartialOrder[io.circe.DecodingFailure] -->
<g id="node1991" class="node">
<title>cats.kernel.PartialOrder[io.circe.DecodingFailure]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-14179.9355" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="12994.0282" y="-14183.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.PartialOrder[io.circe.DecodingFailure]</text>
<text text-anchor="middle" x="13131.0282" y="-14168.7355" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 16ms</text>
</g>
<!-- cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Unit]]&#45;&gt;cats.kernel.PartialOrder[io.circe.DecodingFailure] -->
<g id="edge788" class="edge">
<title>cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Unit]]&#45;&gt;cats.kernel.PartialOrder[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M12473.5311,-13599.1357C12558.1756,-13641.1423 12713.3194,-13732.3203 12780.0814,-13862.9355 12788.7383,-13879.8721 12777.2236,-14018.3184 12788.0814,-14033.9355 12834.3044,-14100.4193 12917.2776,-14136.7916 12990.0306,-14156.6048"/>
<polygon fill="#000000" stroke="#000000" points="12989.2017,-14160.0058 12999.7639,-14159.1746 12990.9887,-14153.2377 12989.2017,-14160.0058"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node520" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-22022.9355" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="443.0494" y="-22026.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-22011.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 25ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge71" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M740.326,-22036.2717C888.9119,-22043.9311 1090.099,-22042.8636 1144.0988,-21986.9355 1155.2166,-21975.4207 1144.3319,-21712.931 1152.0988,-21698.9355 1267.7151,-21490.6005 1544.6002,-21372.3912 1676.8649,-21326.0288"/>
<polygon fill="#000000" stroke="#000000" points="1678.2159,-21329.2649 1686.5182,-21322.6828 1675.9234,-21322.6509 1678.2159,-21329.2649"/>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node1513" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-22022.9355" rx="318.8103" ry="26.7407"/>
<text text-anchor="start" x="1532.104" y="-22026.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-22011.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge1111" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M765.8389,-22022.9355C943.2855,-22022.9355 1209.5684,-22022.9355 1420.3629,-22022.9355"/>
<polygon fill="#000000" stroke="#000000" points="1420.6744,-22026.4356 1430.6743,-22022.9355 1420.6743,-22019.4356 1420.6744,-22026.4356"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc11] -->
<g id="node521" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc11]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-50984.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-50988.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc11]</text>
<text text-anchor="middle" x="572.0494" y="-50973.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc11] -->
<g id="node1026" class="node">
<title>Fractional[ProductCodecSuite.this.Cc11]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-51002.9355" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="1637.604" y="-51006.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc11]</text>
<text text-anchor="middle" x="1749.604" y="-50991.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc11]&#45;&gt;Fractional[ProductCodecSuite.this.Cc11] -->
<g id="edge1415" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc11]&#45;&gt;Fractional[ProductCodecSuite.this.Cc11]</title>
<path fill="none" stroke="#000000" d="M786.32,-50988.2109C1010.9559,-50991.6446 1359.9386,-50996.9792 1570.4447,-51000.1969"/>
<polygon fill="#000000" stroke="#000000" points="1570.6222,-51003.7 1580.6746,-51000.3533 1570.7293,-50996.7008 1570.6222,-51003.7"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc11] -->
<g id="node1952" class="node">
<title>Integral[ProductCodecSuite.this.Cc11]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-50930.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="1644.104" y="-50934.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc11]</text>
<text text-anchor="middle" x="1749.604" y="-50919.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc11]&#45;&gt;Integral[ProductCodecSuite.this.Cc11] -->
<g id="edge1225" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc11]&#45;&gt;Integral[ProductCodecSuite.this.Cc11]</title>
<path fill="none" stroke="#000000" d="M774.4782,-50975.6526C1003.462,-50965.1519 1372.0323,-50948.2501 1584.397,-50938.5116"/>
<polygon fill="#000000" stroke="#000000" points="1584.5612,-50942.0078 1594.3904,-50938.0533 1584.2405,-50935.0152 1584.5612,-50942.0078"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[java.util.UUID,Int]] -->
<g id="node522" class="node">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[java.util.UUID,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-3230.9355" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="2723.9013" y="-3234.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[scala.collection.immutable.Map[java.util.UUID,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-3219.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- Integral[scala.collection.immutable.Map[java.util.UUID,Int]] -->
<g id="node627" class="node">
<title>Integral[scala.collection.immutable.Map[java.util.UUID,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-2612.9355" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="3902.2721" y="-2616.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[scala.collection.immutable.Map[java.util.UUID,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-2601.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;Integral[scala.collection.immutable.Map[java.util.UUID,Int]] -->
<g id="edge1056" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;Integral[scala.collection.immutable.Map[java.util.UUID,Int]]</title>
<path fill="none" stroke="#000000" d="M3016.4645,-3256.752C3143.6343,-3289.4736 3381.7993,-3326.9874 3507.6933,-3194.9355 3528.6264,-3172.9785 3494.7863,-2670.9175 3515.6933,-2648.9355 3561.2243,-2601.0636 3716.6514,-2594.0806 3851.4942,-2597.9535"/>
<polygon fill="#000000" stroke="#000000" points="3851.4737,-2601.4544 3861.5768,-2598.2641 3851.6894,-2594.4577 3851.4737,-2601.4544"/>
</g>
<!-- org.scalacheck.util.Buildable[(java.util.UUID, Int),scala.collection.immutable.Map[java.util.UUID,Int]] -->
<g id="node991" class="node">
<title>org.scalacheck.util.Buildable[(java.util.UUID, Int),scala.collection.immutable.Map[java.util.UUID,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-3302.9355" rx="415.1434" ry="26.7407"/>
<text text-anchor="start" x="3785.2721" y="-3306.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(java.util.UUID, Int),scala.collection.immutable.Map[java.util.UUID,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-3291.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;org.scalacheck.util.Buildable[(java.util.UUID, Int),scala.collection.immutable.Map[java.util.UUID,Int]] -->
<g id="edge936" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;org.scalacheck.util.Buildable[(java.util.UUID, Int),scala.collection.immutable.Map[java.util.UUID,Int]]</title>
<path fill="none" stroke="#000000" d="M3179.3301,-3246.6029C3350.8797,-3257.4436 3580.348,-3271.9443 3763.5071,-3283.5186"/>
<polygon fill="#000000" stroke="#000000" points="3763.3683,-3287.0167 3773.5692,-3284.1545 3763.8099,-3280.0307 3763.3683,-3287.0167"/>
</g>
<!-- org.scalacheck.Shrink[(java.util.UUID, Int)] -->
<g id="node1003" class="node">
<title>org.scalacheck.Shrink[(java.util.UUID, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-3158.9355" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="3949.2721" y="-3162.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(java.util.UUID, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-3147.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;org.scalacheck.Shrink[(java.util.UUID, Int)] -->
<g id="edge791" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;org.scalacheck.Shrink[(java.util.UUID, Int)]</title>
<path fill="none" stroke="#000000" d="M3180.6745,-3215.4436C3282.1279,-3209.1176 3400.5189,-3201.7091 3507.6933,-3194.9355 3636.5051,-3186.7945 3781.8847,-3177.497 3892.6538,-3170.3901"/>
<polygon fill="#000000" stroke="#000000" points="3893.1699,-3173.8643 3902.9252,-3169.731 3892.7216,-3166.8787 3893.1699,-3173.8643"/>
</g>
<!-- scala.collection.immutable.Map[java.util.UUID,Int] =&gt; Traversable[(java.util.UUID, Int)] -->
<g id="node1541" class="node">
<title>scala.collection.immutable.Map[java.util.UUID,Int] =&gt; Traversable[(java.util.UUID, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-3230.9355" rx="362.0773" ry="26.7407"/>
<text text-anchor="start" x="3822.7721" y="-3234.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[java.util.UUID,Int] =&gt; Traversable[(java.util.UUID, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-3219.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;scala.collection.immutable.Map[java.util.UUID,Int] =&gt; Traversable[(java.util.UUID, Int)] -->
<g id="edge1469" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;scala.collection.immutable.Map[java.util.UUID,Int] =&gt; Traversable[(java.util.UUID, Int)]</title>
<path fill="none" stroke="#000000" d="M3236.3574,-3230.9355C3378.4428,-3230.9355 3548.7811,-3230.9355 3698.4014,-3230.9355"/>
<polygon fill="#000000" stroke="#000000" points="3698.6816,-3234.4356 3708.6815,-3230.9355 3698.6815,-3227.4356 3698.6816,-3234.4356"/>
</g>
<!-- Fractional[scala.collection.immutable.Map[java.util.UUID,Int]] -->
<g id="node1571" class="node">
<title>Fractional[scala.collection.immutable.Map[java.util.UUID,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-2684.9355" rx="258.6023" ry="26.7407"/>
<text text-anchor="start" x="3895.7721" y="-2688.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[scala.collection.immutable.Map[java.util.UUID,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-2673.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;Fractional[scala.collection.immutable.Map[java.util.UUID,Int]] -->
<g id="edge535" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;Fractional[scala.collection.immutable.Map[java.util.UUID,Int]]</title>
<path fill="none" stroke="#000000" d="M3016.6868,-3256.7814C3143.8696,-3289.4374 3381.7272,-3326.7453 3507.6933,-3194.9355 3525.6977,-3176.0959 3497.796,-2744.877 3515.6933,-2725.9355 3559.1499,-2679.9436 3703.4129,-2670.2782 3833.9692,-2671.8084"/>
<polygon fill="#000000" stroke="#000000" points="3834.0952,-2675.3104 3844.1431,-2671.9504 3834.1929,-2668.3111 3834.0952,-2675.3104"/>
</g>
<!-- org.scalacheck.Arbitrary[Seq[Int]] -->
<g id="node523" class="node">
<title>org.scalacheck.Arbitrary[Seq[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-4814.9355" rx="144.5" ry="26.7407"/>
<text text-anchor="start" x="3976.7721" y="-4818.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Seq[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-4803.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Seq[Int]]&#45;&gt;Seq[Int] =&gt; Traversable[Int] -->
<g id="edge428" class="edge">
<title>org.scalacheck.Arbitrary[Seq[Int]]&#45;&gt;Seq[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M4215.0241,-4814.9355C4429.1498,-4814.9355 4828.0361,-4814.9355 5035.1814,-4814.9355"/>
<polygon fill="#000000" stroke="#000000" points="5035.2029,-4818.4356 5045.2029,-4814.9355 5035.2028,-4811.4356 5035.2029,-4818.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[Seq[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Seq[Int]] -->
<g id="edge963" class="edge">
<title>org.scalacheck.Arbitrary[Seq[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Seq[Int]]</title>
<path fill="none" stroke="#000000" d="M4207.3597,-4823.7339C4319.7188,-4830.986 4483.1134,-4841.5653 4625.8509,-4850.9355 4750.1415,-4859.0948 4890.4601,-4868.4203 4997.162,-4875.5353"/>
<polygon fill="#000000" stroke="#000000" points="4997.1706,-4879.0436 5007.3813,-4876.2169 4997.6364,-4872.0591 4997.1706,-4879.0436"/>
</g>
<!-- scala.reflect.ClassTag[Seq[Int]] -->
<g id="node655" class="node">
<title>scala.reflect.ClassTag[Seq[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-4742.9355" rx="133.7865" ry="26.7407"/>
<text text-anchor="start" x="5081.2166" y="-4746.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Seq[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-4731.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Seq[Int]]&#45;&gt;scala.reflect.ClassTag[Seq[Int]] -->
<g id="edge1507" class="edge">
<title>org.scalacheck.Arbitrary[Seq[Int]]&#45;&gt;scala.reflect.ClassTag[Seq[Int]]</title>
<path fill="none" stroke="#000000" d="M4207.3597,-4806.1372C4319.7188,-4798.8851 4483.1134,-4788.3057 4625.8509,-4778.9355 4763.6093,-4769.8922 4921.0574,-4759.4161 5030.6004,-4752.105"/>
<polygon fill="#000000" stroke="#000000" points="5030.973,-4755.588 5040.7176,-4751.4297 5030.5067,-4748.6036 5030.973,-4755.588"/>
</g>
<!-- org.scalacheck.Arbitrary[Seq[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge213" class="edge">
<title>org.scalacheck.Arbitrary[Seq[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4202.4182,-4826.0205C4348.2504,-4835.0503 4570.2196,-4838.0562 4625.8509,-4778.9355 4635.445,-4768.7397 4629.6209,-2776.2813 4633.8509,-2762.9355 4736.6372,-2438.6404 5030.6603,-2131.722 5132.492,-2032.358"/>
<polygon fill="#000000" stroke="#000000" points="5135.0338,-2034.7684 5139.77,-2025.2911 5130.1574,-2029.7464 5135.0338,-2034.7684"/>
</g>
<!-- shapeless.IsTuple[java.util.UUID] -->
<g id="node524" class="node">
<title>shapeless.IsTuple[java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-51092.9355" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="1656.104" y="-51096.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[java.util.UUID]</text>
<text text-anchor="middle" x="1749.604" y="-51081.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Unit] -->
<g id="node525" class="node">
<title>scala.reflect.ClassTag[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-39914.9355" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="2854.9013" y="-39918.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Unit]</text>
<text text-anchor="middle" x="2931.4013" y="-39903.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int,)] -->
<g id="node526" class="node">
<title>org.scalacheck.Arbitrary[(Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-1854.9355" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="3984.7721" y="-1858.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int,)]</text>
<text text-anchor="middle" x="4070.7721" y="-1843.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int,)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1574" class="edge">
<title>org.scalacheck.Arbitrary[(Int,)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4194.9234,-1845.2901C4339.532,-1836.9888 4566.2735,-1834.0314 4625.8509,-1890.9355 4649.134,-1913.1739 4610.5964,-1940.6674 4633.8509,-1962.9355 4753.3196,-2077.337 4964.8732,-2050.0114 5082.6153,-2022.7687"/>
<polygon fill="#000000" stroke="#000000" points="5083.7413,-2026.099 5092.6667,-2020.3904 5082.1294,-2019.2871 5083.7413,-2026.099"/>
</g>
<!-- cats.kernel.PartialOrder[io.circe.JsonObject] -->
<g id="node527" class="node">
<title>cats.kernel.PartialOrder[io.circe.JsonObject]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-19752.9355" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="12294.4214" y="-19756.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.PartialOrder[io.circe.JsonObject]</text>
<text text-anchor="middle" x="12415.9214" y="-19741.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 7ms</text>
</g>
<!-- cats.Eq[List[(String, io.circe.Json)]] -->
<g id="node528" class="node">
<title>cats.Eq[List[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-15426.9355" rx="150.7276" ry="26.7407"/>
<text text-anchor="start" x="10759.9287" y="-15430.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[List[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="10858.4287" y="-15415.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 160ms</text>
</g>
<!-- cats.Eq[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Eq[(String, io.circe.Json)] -->
<g id="edge1152" class="edge">
<title>cats.Eq[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Eq[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M11009.3649,-15426.9355C11146.879,-15426.9355 11349.6216,-15426.9355 11491.8205,-15426.9355"/>
<polygon fill="#000000" stroke="#000000" points="11491.9525,-15430.4356 11501.9525,-15426.9355 11491.9524,-15423.4356 11491.9525,-15430.4356"/>
</g>
<!-- cats.Eq[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.PartialOrder[(String, io.circe.Json)] -->
<g id="edge1390" class="edge">
<title>cats.Eq[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.PartialOrder[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M10993.9664,-15438.8356C11073.0278,-15445.8023 11174.6744,-15454.8023 11265.0151,-15462.9355 11337.9286,-15469.4999 11418.4341,-15476.8494 11487.5216,-15483.1879"/>
<polygon fill="#000000" stroke="#000000" points="11487.3517,-15486.6869 11497.6297,-15484.1156 11487.9915,-15479.7162 11487.3517,-15486.6869"/>
</g>
<!-- cats.Eq[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Order[(String, io.circe.Json)] -->
<g id="edge1259" class="edge">
<title>cats.Eq[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Order[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M10946.9056,-15405.184C11040.0635,-15388.1347 11184.1964,-15379.4205 11265.0151,-15462.9355 11287.3025,-15485.9666 11250.7833,-15583.8507 11273.0151,-15606.9355 11343.4806,-15680.1051 11465.1093,-15679.4119 11552.9027,-15666.5757"/>
<polygon fill="#000000" stroke="#000000" points="11553.5447,-15670.0183 11562.8976,-15665.0411 11552.4822,-15663.0994 11553.5447,-15670.0183"/>
</g>
<!-- Fractional[Char] -->
<g id="node1415" class="node">
<title>Fractional[Char]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-15174.9355" rx="75.8212" ry="26.7407"/>
<text text-anchor="start" x="6176.7346" y="-15178.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Char]</text>
<text text-anchor="middle" x="6222.2346" y="-15163.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[Char]&#45;&gt;Fractional[Char] -->
<g id="edge524" class="edge">
<title>org.scalacheck.Shrink[Char]&#45;&gt;Fractional[Char]</title>
<path fill="none" stroke="#000000" d="M5287.9128,-15143.0389C5503.2377,-15150.3898 5949.705,-15165.6317 6136.8119,-15172.0193"/>
<polygon fill="#000000" stroke="#000000" points="6136.7595,-15175.5195 6146.8731,-15172.3628 6136.9984,-15168.5235 6136.7595,-15175.5195"/>
</g>
<!-- Integral[Char] -->
<g id="node1547" class="node">
<title>Integral[Char]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-15102.9355" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="6182.2346" y="-15106.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Char]</text>
<text text-anchor="middle" x="6222.2346" y="-15091.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[Char]&#45;&gt;Integral[Char] -->
<g id="edge698" class="edge">
<title>org.scalacheck.Shrink[Char]&#45;&gt;Integral[Char]</title>
<path fill="none" stroke="#000000" d="M5287.9128,-15134.8322C5506.1786,-15127.3809 5961.944,-15111.8216 6144.3322,-15105.595"/>
<polygon fill="#000000" stroke="#000000" points="6144.5053,-15109.0913 6154.38,-15105.252 6144.2664,-15102.0953 6144.5053,-15109.0913"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A] -->
<g id="node530" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-51164.9355" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="384.0494" y="-51168.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A]</text>
<text text-anchor="middle" x="572.0494" y="-51153.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[Vector[Int]] -->
<g id="node531" class="node">
<title>shapeless.IsTuple[Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-15714.9355" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="11575.3883" y="-15718.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Vector[Int]]</text>
<text text-anchor="middle" x="11658.3883" y="-15703.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node532" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-51236.9355" rx="294.7271" ry="26.7407"/>
<text text-anchor="start" x="371.5494" y="-51240.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-51225.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1002" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-51272.9355" rx="239.9186" ry="26.7407"/>
<text text-anchor="start" x="1588.104" y="-51276.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-51261.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge624" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M851.8599,-51245.4899C1051.4952,-51251.5931 1317.2546,-51259.7178 1507.7274,-51265.5409"/>
<polygon fill="#000000" stroke="#000000" points="1507.7761,-51269.044 1517.8784,-51265.8513 1507.9901,-51262.0472 1507.7761,-51269.044"/>
</g>
<!-- Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1622" class="node">
<title>Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-51200.9355" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="1581.604" y="-51204.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-51189.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge758" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M851.8599,-51228.3812C1048.6552,-51222.3648 1309.7066,-51214.384 1499.5531,-51208.5801"/>
<polygon fill="#000000" stroke="#000000" points="1499.7862,-51212.0747 1509.6745,-51208.2706 1499.5722,-51205.0779 1499.7862,-51212.0747"/>
</g>
<!-- cats.kernel.Eq[io.circe.Json :: shapeless.HNil] -->
<g id="node533" class="node">
<title>cats.kernel.Eq[io.circe.Json :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-15788.9355" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="13005.0282" y="-15792.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.Json :: shapeless.HNil]</text>
<text text-anchor="middle" x="13131.0282" y="-15777.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 19ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.Json :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[shapeless.HNil] -->
<g id="edge1128" class="edge">
<title>cats.kernel.Eq[io.circe.Json :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M13288.7089,-15773.9539C13346.9934,-15768.0028 13413.5602,-15760.7194 13473.975,-15752.9355 15924.5356,-15437.2061 16510.7062,-15156.5418 18969.484,-14912.9355 19136.8968,-14896.3489 19615.2945,-14878.6482 19854.5388,-14870.5099"/>
<polygon fill="#000000" stroke="#000000" points="19854.8229,-14874.0024 19864.6984,-14870.1652 19854.5854,-14867.0064 19854.8229,-14874.0024"/>
</g>
<!-- cats.kernel.Eq[io.circe.Json :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[io.circe.Json] -->
<g id="edge1029" class="edge">
<title>cats.kernel.Eq[io.circe.Json :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M13170.2953,-15815.2591C13245.8233,-15868.513 13409.5531,-15997.3026 13473.975,-16152.9355 13479.7782,-16166.9551 13472.0228,-16414.4823 13481.975,-16425.9355 13531.7488,-16483.2163 13617.4868,-16495.6196 13687.9432,-16494.4225"/>
<polygon fill="#000000" stroke="#000000" points="13688.3174,-16497.9139 13698.2215,-16494.1509 13688.1325,-16490.9163 13688.3174,-16497.9139"/>
</g>
<!-- shapeless.IsTuple[io.circe.Json :: shapeless.HNil] -->
<g id="node1425" class="node">
<title>shapeless.IsTuple[io.circe.Json :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="13803.7086" cy="-15788.9355" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="13668.2086" y="-15792.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.Json :: shapeless.HNil]</text>
<text text-anchor="middle" x="13803.7086" y="-15777.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.Json :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[io.circe.Json :: shapeless.HNil] -->
<g id="edge482" class="edge">
<title>cats.kernel.Eq[io.circe.Json :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[io.circe.Json :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M13320.6456,-15788.9355C13404.6477,-15788.9355 13503.8369,-15788.9355 13590.411,-15788.9355"/>
<polygon fill="#000000" stroke="#000000" points="13590.6333,-15792.4356 13600.6333,-15788.9355 13590.6333,-15785.4356 13590.6333,-15792.4356"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node534" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="7234.3262" cy="-17530.9355" rx="386.1606" ry="26.7407"/>
<text text-anchor="start" x="6969.3262" y="-17534.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="7234.3262" y="-17519.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int)] -->
<g id="node536" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-1134.9355" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="3953.2721" y="-1138.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-1123.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int)] -->
<g id="node885" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-1134.9355" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="5057.7166" y="-1138.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-1123.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int)] -->
<g id="edge1497" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4248.5396,-1134.9355C4452.8336,-1134.9355 4786.1189,-1134.9355 4990.2754,-1134.9355"/>
<polygon fill="#000000" stroke="#000000" points="4990.5034,-1138.4356 5000.5034,-1134.9355 4990.5033,-1131.4356 4990.5034,-1138.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge956" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4228.0933,-1122.4396C4372.9903,-1114.803 4573.2338,-1115.3606 4625.8509,-1170.9355 4640.9771,-1186.912 4618.7453,-1946.9397 4633.8509,-1962.9355 4748.9291,-2084.7956 4966.9849,-2052.7653 5085.6984,-2023.2347"/>
<polygon fill="#000000" stroke="#000000" points="5086.6392,-2026.607 5095.4703,-2020.7536 5084.9165,-2019.8223 5086.6392,-2026.607"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node537" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-43622.9355" rx="374.5333" ry="26.7407"/>
<text text-anchor="start" x="315.0494" y="-43626.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-43611.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1504" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M947.0626,-43622.9355C1098.9295,-43622.9355 1272.7516,-43622.9355 1419.7072,-43622.9355"/>
<polygon fill="#000000" stroke="#000000" points="1419.7938,-43626.4356 1429.7938,-43622.9355 1419.7938,-43619.4356 1419.7938,-43626.4356"/>
</g>
<!-- Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1741" class="node">
<title>Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-43550.9355" rx="328.1951" ry="26.7407"/>
<text text-anchor="start" x="1525.604" y="-43554.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-43539.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge660" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M854.9016,-43605.278C949.4036,-43599.4059 1055.2926,-43592.8559 1152.0988,-43586.9355 1257.3776,-43580.497 1373.0965,-43573.5051 1474.4288,-43567.4107"/>
<polygon fill="#000000" stroke="#000000" points="1474.7312,-43570.8989 1484.5031,-43566.8049 1474.311,-43563.9116 1474.7312,-43570.8989"/>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc17] -->
<g id="node538" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc17]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-51344.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="1605.104" y="-51348.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc17]</text>
<text text-anchor="middle" x="1749.604" y="-51333.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[Short]&#45;&gt;shapeless.IsTuple[Short] -->
<g id="edge673" class="edge">
<title>cats.kernel.Eq[Short]&#45;&gt;shapeless.IsTuple[Short]</title>
<path fill="none" stroke="#000000" d="M3024.6408,-33653.8816C3231.3956,-33660.4143 3727.9011,-33676.1021 3954.4874,-33683.2614"/>
<polygon fill="#000000" stroke="#000000" points="3954.636,-33686.7677 3964.7416,-33683.5854 3954.8571,-33679.7712 3954.636,-33686.7677"/>
</g>
<!-- Integral[(String, Int)] -->
<g id="node540" class="node">
<title>Integral[(String, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-5786.9355" rx="93.1765" ry="26.7407"/>
<text text-anchor="start" x="5109.7166" y="-5790.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(String, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-5775.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ObjectEncoderSuite.this.PropertyCheckConfigurable -->
<g id="node541" class="node">
<title>ObjectEncoderSuite.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-51416.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-51420.7355" font-family="Times,serif" font-size="14.00" fill="#000000">ObjectEncoderSuite.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-51405.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node542" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-18888.9355" rx="423.6139" ry="26.7407"/>
<text text-anchor="start" x="280.5494" y="-18892.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-18877.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 195ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge1382" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M995.9258,-18888.9355C1086.0052,-18888.9355 1181.686,-18888.9355 1273.5621,-18888.9355"/>
<polygon fill="#000000" stroke="#000000" points="1273.5897,-18892.4356 1283.5897,-18888.9355 1273.5896,-18885.4356 1273.5897,-18892.4356"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge327" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M579.1883,-18862.0151C645.3783,-18618.292 1176.2446,-16784.9643 2355.1092,-16047.9355 2573.5404,-15911.3719 2673.7935,-15985.9355 2931.4013,-15985.9355 2931.4013,-15985.9355 2931.4013,-15985.9355 10016.0427,-15985.9355 10154.8688,-15985.9355 11150.4169,-15941.5777 11265.0151,-16019.9355 11272.5785,-16025.1071 11265.8963,-16033.1672 11273.0151,-16038.9355 11352.2354,-16103.1282 11470.545,-16117.5555 11555.1609,-16118.4655"/>
<polygon fill="#000000" stroke="#000000" points="11555.2921,-16121.9661 11565.308,-16118.5119 11555.3242,-16114.9661 11555.2921,-16121.9661"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge236" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M680.5578,-18914.9728C796.4943,-18941.4168 986.0503,-18980.7144 1152.0988,-18996.9355 1545.6485,-19035.3812 2535.9782,-19015.9355 2931.4013,-19015.9355 2931.4013,-19015.9355 2931.4013,-19015.9355 4070.7721,-19015.9355 6129.8094,-19015.9355 6653.5847,-18890.7609 8674.2174,-18494.9355 9462.2946,-18340.5577 9885.9648,-18707.5781 10443.8423,-18129.9355 10458.5624,-18114.6939 10436.0261,-18097.0365 10451.8423,-18082.9355 10519.382,-18022.7204 11201.7508,-18103.628 11265.0151,-18038.9355 11284.6017,-18018.9067 11254.8309,-17808.2458 11273.0151,-17786.9355 11337.4187,-17711.4601 11453.2674,-17697.9104 11541.1837,-17700.2549"/>
<polygon fill="#000000" stroke="#000000" points="11541.1069,-17703.7542 11551.2195,-17700.5942 11541.3435,-17696.7582 11541.1069,-17703.7542"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node810" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-18816.9355" rx="597.5105" ry="26.7407"/>
<text text-anchor="start" x="1335.104" y="-18820.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="1749.604" y="-18805.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 120ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge205" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M874.2222,-18870.0779C963.6826,-18864.523 1061.8387,-18858.4556 1152.0988,-18852.9355 1226.0555,-18848.4126 1305.1643,-18843.6165 1380.8185,-18839.0504"/>
<polygon fill="#000000" stroke="#000000" points="1381.216,-18842.5328 1390.987,-18838.4368 1380.7943,-18835.5456 1381.216,-18842.5328"/>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1509" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-18960.9355" rx="436.984" ry="26.7407"/>
<text text-anchor="start" x="1448.604" y="-18964.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-18949.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge110" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M874.2222,-18907.7932C963.6826,-18913.3481 1061.8387,-18919.4155 1152.0988,-18924.9355 1240.9907,-18930.3719 1337.3256,-18936.2028 1426.1589,-18941.5548"/>
<polygon fill="#000000" stroke="#000000" points="1426.2031,-18945.0637 1436.3955,-18942.1714 1426.624,-18938.0764 1426.2031,-18945.0637"/>
</g>
<!-- Fractional[List[(String, io.circe.Json)]] -->
<g id="node543" class="node">
<title>Fractional[List[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-4742.9355" rx="161.441" ry="26.7407"/>
<text text-anchor="start" x="3964.7721" y="-4746.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[List[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="4070.7721" y="-4731.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node544" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-6940.9355" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="3903.7721" y="-6944.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-6929.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 42ms</text>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node707" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-6698.9355" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="5039.7166" y="-6702.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-6687.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge97" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4280.9486,-6955.1851C4417.4862,-6959.3809 4578.5615,-6953.0714 4625.8509,-6904.9355 4639.103,-6891.4462 4620.6161,-6748.4419 4633.8509,-6734.9355 4681.6212,-6686.1852 4850.4544,-6681.54 4985.627,-6686.4287"/>
<polygon fill="#000000" stroke="#000000" points="4985.5833,-6689.9295 4995.7094,-6686.8131 4985.8501,-6682.9346 4985.5833,-6689.9295"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge440" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4279.4387,-6955.4398C4416.5164,-6959.8963 4578.8738,-6953.7957 4625.8509,-6904.9355 4637.9452,-6892.3564 4621.7728,-6603.5302 4633.8509,-6590.9355 4689.0125,-6533.4153 4910.0545,-6536.8277 5049.8381,-6545.3332"/>
<polygon fill="#000000" stroke="#000000" points="5049.9767,-6548.8486 5060.1759,-6545.9804 5050.4141,-6541.8623 5049.9767,-6548.8486"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Int,Set[Int]] -->
<g id="node1431" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Int,Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-15786.9355" rx="219.4064" ry="26.7407"/>
<text text-anchor="start" x="6075.2346" y="-15790.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Int,Set[Int]]</text>
<text text-anchor="middle" x="6222.2346" y="-15775.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Int,Set[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,Set[Int]] -->
<g id="edge924" class="edge">
<title>org.scalacheck.util.Buildable[Int,Set[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,Set[Int]]</title>
<path fill="none" stroke="#000000" d="M5340.3732,-15786.9355C5518.2161,-15786.9355 5796.3783,-15786.9355 5992.6668,-15786.9355"/>
<polygon fill="#000000" stroke="#000000" points="5992.8302,-15790.4356 6002.8302,-15786.9355 5992.8302,-15783.4356 5992.8302,-15790.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node547" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-1062.9355" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="3863.2721" y="-1066.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-1051.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 58ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge805" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4375.6037,-1062.9355C4527.5991,-1062.9355 4710.9257,-1062.9355 4862.9167,-1062.9355"/>
<polygon fill="#000000" stroke="#000000" points="4863.3433,-1066.4356 4873.3432,-1062.9355 4863.3432,-1059.4356 4863.3433,-1066.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1525" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4318.3346,-1047.2298C4445.9609,-1045.1257 4583.5851,-1054.2561 4625.8509,-1098.9355 4642.3447,-1116.3712 4617.3795,-1945.4787 4633.8509,-1962.9355 4748.8778,-2084.844 4966.9547,-2052.7938 5085.685,-2023.2474"/>
<polygon fill="#000000" stroke="#000000" points="5086.6278,-2026.6192 5095.4583,-2020.7649 5084.9044,-2019.8346 5086.6278,-2026.6192"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc16] -->
<g id="node548" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc16]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-46970.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="420.0494" y="-46974.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc16]</text>
<text text-anchor="middle" x="572.0494" y="-46959.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc16]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc16] -->
<g id="edge313" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc16]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc16]</title>
<path fill="none" stroke="#000000" d="M798.3967,-46970.9355C1007.0924,-46970.9355 1315.2165,-46970.9355 1523.754,-46970.9355"/>
<polygon fill="#000000" stroke="#000000" points="1523.9188,-46974.4356 1533.9188,-46970.9355 1523.9187,-46967.4356 1523.9188,-46974.4356"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; JsonNumberSuite.this.PropertyCheckConfigParam -->
<g id="node549" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; JsonNumberSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-51488.9355" rx="310.3398" ry="26.7407"/>
<text text-anchor="start" x="360.5494" y="-51492.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; JsonNumberSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-51477.7355" font-family="Times,serif" font-size="14.00" fill="#000000">15 times = 2ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N] -->
<g id="node552" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-51560.9355" rx="465.9667" ry="26.7407"/>
<text text-anchor="start" x="250.5494" y="-51564.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N]</text>
<text text-anchor="middle" x="572.0494" y="-51549.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Set[io.circe.Json] =&gt; ?{def asJson: ?} -->
<g id="node553" class="node">
<title>scala.collection.immutable.Set[io.circe.Json] =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-51632.9355" rx="265.3302" ry="26.7407"/>
<text text-anchor="start" x="392.5494" y="-51636.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[io.circe.Json] =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-51621.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node555" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-990.9355" rx="289.4135" ry="26.7407"/>
<text text-anchor="start" x="3874.2721" y="-994.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-979.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 48ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1068" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-990.9355" rx="278.7002" ry="26.7407"/>
<text text-anchor="start" x="4978.7166" y="-994.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-979.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1051" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4360.0573,-990.9355C4520.311,-990.9355 4718.9,-990.9355 4879.0542,-990.9355"/>
<polygon fill="#000000" stroke="#000000" points="4879.0625,-994.4356 4889.0625,-990.9355 4879.0625,-987.4356 4879.0625,-994.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge883" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4307.1028,-975.4332C4437.7908,-972.6037 4582.3572,-980.9253 4625.8509,-1026.9355 4643.7124,-1045.8305 4616.0137,-1944.0177 4633.8509,-1962.9355 4748.8344,-2084.8849 4966.929,-2052.818 5085.6736,-2023.2581"/>
<polygon fill="#000000" stroke="#000000" points="5086.6181,-2026.6294 5095.4482,-2020.7745 5084.8942,-2019.845 5086.6181,-2026.6294"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc13] -->
<g id="node556" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc13]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-51704.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="420.0494" y="-51708.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc13]</text>
<text text-anchor="middle" x="572.0494" y="-51693.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc13] -->
<g id="node1234" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc13]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-51704.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="1605.104" y="-51708.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc13]</text>
<text text-anchor="middle" x="1749.604" y="-51693.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc13]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc13] -->
<g id="edge286" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc13]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc13]</title>
<path fill="none" stroke="#000000" d="M798.3967,-51704.9355C1007.0924,-51704.9355 1315.2165,-51704.9355 1523.754,-51704.9355"/>
<polygon fill="#000000" stroke="#000000" points="1523.9188,-51708.4356 1533.9188,-51704.9355 1523.9187,-51701.4356 1523.9188,-51708.4356"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J] -->
<g id="node557" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-51776.9355" rx="345.5506" ry="26.7407"/>
<text text-anchor="start" x="335.5494" y="-51780.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J]</text>
<text text-anchor="middle" x="572.0494" y="-51765.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node558" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-13482.9355" rx="341.5652" ry="26.7407"/>
<text text-anchor="start" x="4934.2166" y="-13486.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-13471.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[io.circe.JsonObject] =&gt; ?{def ===: ?} -->
<g id="node559" class="node">
<title>Option[io.circe.JsonObject] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-19824.9355" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="10731.4287" y="-19828.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[io.circe.JsonObject] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10858.4287" y="-19813.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- Option[io.circe.JsonObject] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[io.circe.JsonObject]] -->
<g id="edge737" class="edge">
<title>Option[io.circe.JsonObject] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[io.circe.JsonObject]]</title>
<path fill="none" stroke="#000000" d="M11020.6746,-19810.6804C11095.1278,-19804.1104 11184.5554,-19796.1792 11265.0151,-19788.9355 11346.8847,-19781.5649 11438.326,-19773.2043 11512.428,-19766.3966"/>
<polygon fill="#000000" stroke="#000000" points="11513.1285,-19769.847 11522.7663,-19765.4465 11512.4879,-19762.8764 11513.1285,-19769.847"/>
</g>
<!-- io.circe.Decoder[Map[String,String]] -->
<g id="node560" class="node">
<title>io.circe.Decoder[Map[String,String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-11106.9355" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="3968.7721" y="-11110.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Map[String,String]]</text>
<text text-anchor="middle" x="4070.7721" y="-11095.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- io.circe.Decoder[Map[String,String]]&#45;&gt;io.circe.KeyDecoder[String] -->
<g id="edge264" class="edge">
<title>io.circe.Decoder[Map[String,String]]&#45;&gt;io.circe.KeyDecoder[String]</title>
<path fill="none" stroke="#000000" d="M4224.1493,-11111.4432C4335.8972,-11116.0488 4490.7293,-11125.1671 4625.8509,-11142.9355 4785.4024,-11163.9165 4968.5417,-11203.7792 5075.8343,-11228.7662"/>
<polygon fill="#000000" stroke="#000000" points="5075.124,-11232.1945 5085.6581,-11231.0619 5076.7169,-11225.3781 5075.124,-11232.1945"/>
</g>
<!-- io.circe.Decoder[Map[String,String]]&#45;&gt;io.circe.Decoder[String] -->
<g id="edge652" class="edge">
<title>io.circe.Decoder[Map[String,String]]&#45;&gt;io.circe.Decoder[String]</title>
<path fill="none" stroke="#000000" d="M4212.1744,-11118.2065C4357.5648,-11126.3596 4570.3449,-11127.5827 4625.8509,-11070.9355 4639.8623,-11056.6362 4620.0995,-10905.4851 4633.8509,-10890.9355 4748.5275,-10769.6028 4964.2751,-10791.6837 5083.3859,-10815.8467"/>
<polygon fill="#000000" stroke="#000000" points="5082.6949,-10819.2778 5093.1979,-10817.8864 5084.1196,-10812.4243 5082.6949,-10819.2778"/>
</g>
<!-- String(&#39;filter&#39;) =&gt; ?{def should: ?} -->
<g id="node561" class="node">
<title>String(&#39;filter&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-30878.9355" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="478.5494" y="-30882.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;filter&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-30867.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;filter&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1000" class="edge">
<title>String(&#39;filter&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M706.7629,-30888.3181C854.9277,-30895.6247 1080.5028,-30896.8938 1144.0988,-30842.9355 1566.1851,-30484.8147 1725.1241,-28546.2502 1746.935,-28252.2972"/>
<polygon fill="#000000" stroke="#000000" points="1750.4376,-28252.3888 1747.681,-28242.1589 1743.4565,-28251.8751 1750.4376,-28252.3888"/>
</g>
<!-- io.circe.Encoder[cats.data.NonEmptyVector[Int]] -->
<g id="node562" class="node">
<title>io.circe.Encoder[cats.data.NonEmptyVector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-21950.9355" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="436.5494" y="-21954.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[cats.data.NonEmptyVector[Int]]</text>
<text text-anchor="middle" x="572.0494" y="-21939.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- io.circe.Encoder[cats.data.NonEmptyVector[Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge115" class="edge">
<title>io.circe.Encoder[cats.data.NonEmptyVector[Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M747.3762,-21964.5146C895.1094,-21971.6861 1090.709,-21969.7224 1144.0988,-21914.9355 1160.8602,-21897.7355 1140.348,-21719.881 1152.0988,-21698.9355 1268.6773,-21491.1374 1545.0854,-21372.6619 1677.0484,-21326.1312"/>
<polygon fill="#000000" stroke="#000000" points="1678.3894,-21329.3703 1686.6793,-21322.7728 1676.0845,-21322.7606 1678.3894,-21329.3703"/>
</g>
<!-- cats.data.NonEmptyVector[Int] =&gt; Iterable[Int] -->
<g id="node1561" class="node">
<title>cats.data.NonEmptyVector[Int] =&gt; Iterable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-21950.9355" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="1618.604" y="-21954.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.data.NonEmptyVector[Int] =&gt; Iterable[Int]</text>
<text text-anchor="middle" x="1749.604" y="-21939.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[cats.data.NonEmptyVector[Int]]&#45;&gt;cats.data.NonEmptyVector[Int] =&gt; Iterable[Int] -->
<g id="edge950" class="edge">
<title>io.circe.Encoder[cats.data.NonEmptyVector[Int]]&#45;&gt;cats.data.NonEmptyVector[Int] =&gt; Iterable[Int]</title>
<path fill="none" stroke="#000000" d="M775.1484,-21950.9355C989.842,-21950.9355 1326.6996,-21950.9355 1542.7899,-21950.9355"/>
<polygon fill="#000000" stroke="#000000" points="1542.9877,-21954.4356 1552.9877,-21950.9355 1542.9876,-21947.4356 1542.9877,-21954.4356"/>
</g>
<!-- String(&#39;b&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node563" class="node">
<title>String(&#39;b&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-51848.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="499.5494" y="-51852.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;b&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="572.0494" y="-51837.7355" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 7ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[io.circe.DecodingFailure],io.circe.Json,That] -->
<g id="node564" class="node">
<title>scala.collection.generic.CanBuildFrom[List[io.circe.DecodingFailure],io.circe.Json,That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-51920.9355" rx="356.2637" ry="26.7407"/>
<text text-anchor="start" x="328.0494" y="-51924.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[io.circe.DecodingFailure],io.circe.Json,That]</text>
<text text-anchor="middle" x="572.0494" y="-51909.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;y&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node568" class="node">
<title>String(&#39;y&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-51992.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="499.5494" y="-51996.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;y&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="572.0494" y="-51981.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[(Long, Int)] -->
<g id="node569" class="node">
<title>scala.reflect.ClassTag[(Long, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-9946.9355" rx="144.9138" ry="26.7407"/>
<text text-anchor="start" x="5073.2166" y="-9950.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Long, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-9935.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node571" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-20078.9355" rx="525.2607" ry="26.7407"/>
<text text-anchor="start" x="1386.104" y="-20082.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-20067.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; String -->
<g id="node572" class="node">
<title>Unit =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-52064.9355" rx="69.0935" ry="26.7407"/>
<text text-anchor="start" x="531.0494" y="-52068.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; String</text>
<text text-anchor="middle" x="572.0494" y="-52053.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[scala.util.Either[Unit,Unit]] -->
<g id="node573" class="node">
<title>shapeless.IsTuple[scala.util.Either[Unit,Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-13500.9355" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="11532.3883" y="-13504.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[scala.util.Either[Unit,Unit]]</text>
<text text-anchor="middle" x="11658.3883" y="-13489.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc21] -->
<g id="node574" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc21]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-52136.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-52140.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc21]</text>
<text text-anchor="middle" x="572.0494" y="-52125.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc21]] -->
<g id="node1913" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc21]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-52136.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="1549.604" y="-52140.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc21]]</text>
<text text-anchor="middle" x="1749.604" y="-52125.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc21]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc21]] -->
<g id="edge494" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc21]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc21]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-52136.9355C951.3519,-52136.9355 1231.2937,-52136.9355 1445.2652,-52136.9355"/>
<polygon fill="#000000" stroke="#000000" points="1445.4039,-52140.4356 1455.4038,-52136.9355 1445.4038,-52133.4356 1445.4039,-52140.4356"/>
</g>
<!-- String(&#39;c&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node575" class="node">
<title>String(&#39;c&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-52208.9355" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="500.0494" y="-52212.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;c&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="572.0494" y="-52197.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 6ms</text>
</g>
<!-- Integral[Int] -->
<g id="node576" class="node">
<title>Integral[Int]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-6590.9355" rx="82.0488" ry="26.7407"/>
<text text-anchor="start" x="6172.2346" y="-6594.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Int]</text>
<text text-anchor="middle" x="6222.2346" y="-6579.7355" font-family="Times,serif" font-size="14.00" fill="#000000">96 times = 106ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc13] -->
<g id="node577" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc13]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-52280.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-52284.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc13]</text>
<text text-anchor="middle" x="572.0494" y="-52269.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc13] -->
<g id="node971" class="node">
<title>Fractional[ProductCodecSuite.this.Cc13]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-52316.9355" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="1637.604" y="-52320.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc13]</text>
<text text-anchor="middle" x="1749.604" y="-52305.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc13]&#45;&gt;Fractional[ProductCodecSuite.this.Cc13] -->
<g id="edge940" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc13]&#45;&gt;Fractional[ProductCodecSuite.this.Cc13]</title>
<path fill="none" stroke="#000000" d="M781.5546,-52287.3405C1006.7591,-52294.2254 1360.8493,-52305.0506 1572.6085,-52311.5245"/>
<polygon fill="#000000" stroke="#000000" points="1572.7945,-52315.0317 1582.8968,-52311.839 1573.0085,-52308.035 1572.7945,-52315.0317"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc13] -->
<g id="node1252" class="node">
<title>Integral[ProductCodecSuite.this.Cc13]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-52244.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="1644.104" y="-52248.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc13]</text>
<text text-anchor="middle" x="1749.604" y="-52233.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc13]&#45;&gt;Integral[ProductCodecSuite.this.Cc13] -->
<g id="edge1016" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc13]&#45;&gt;Integral[ProductCodecSuite.this.Cc13]</title>
<path fill="none" stroke="#000000" d="M781.5546,-52274.5306C1009.8486,-52267.5512 1370.5887,-52256.5227 1581.2424,-52250.0827"/>
<polygon fill="#000000" stroke="#000000" points="1581.5818,-52253.574 1591.4702,-52249.77 1581.3678,-52246.5773 1581.5818,-52253.574"/>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc4]] -->
<g id="node578" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc4]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-52388.9355" rx="314.8251" ry="26.7407"/>
<text text-anchor="start" x="1535.104" y="-52392.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc4]]</text>
<text text-anchor="middle" x="1749.604" y="-52377.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node580" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-17568.9355" rx="214.007" ry="26.7407"/>
<text text-anchor="start" x="11514.8883" y="-17572.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="11658.3883" y="-17557.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.KeyDecoder[Long] -->
<g id="node581" class="node">
<title>io.circe.KeyDecoder[Long]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-11898.9355" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="5092.2166" y="-11902.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.KeyDecoder[Long]</text>
<text text-anchor="middle" x="5167.7166" y="-11887.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- String(&#39;4&#39;) =&gt; ?{def asJson: ?} -->
<g id="node582" class="node">
<title>String(&#39;4&#39;) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-52460.9355" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="488.5494" y="-52464.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;4&#39;) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-52449.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M] -->
<g id="node583" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-52532.9355" rx="438.3124" ry="26.7407"/>
<text text-anchor="start" x="270.0494" y="-52536.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M]</text>
<text text-anchor="middle" x="572.0494" y="-52521.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Float =&gt; Int -->
<g id="node584" class="node">
<title>Float =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-52604.9355" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="525.0494" y="-52608.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Float =&gt; Int</text>
<text text-anchor="middle" x="572.0494" y="-52593.7355" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 17ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F] -->
<g id="node585" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-52676.9355" rx="335.3373" ry="26.7407"/>
<text text-anchor="start" x="343.0494" y="-52680.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F]</text>
<text text-anchor="middle" x="572.0494" y="-52665.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[Some[Int]] -->
<g id="node586" class="node">
<title>io.circe.Decoder[Some[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-13914.9355" rx="120.8306" ry="26.7407"/>
<text text-anchor="start" x="3993.2721" y="-13918.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Some[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-13903.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- io.circe.Decoder[Some[Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge751" class="edge">
<title>io.circe.Decoder[Some[Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4183.6386,-13924.7565C4328.3539,-13934.5702 4567.6162,-13940.4958 4625.8509,-13878.9355 4642.3447,-13861.4998 4617.971,-13032.9321 4633.8509,-13014.9355 4745.1968,-12888.7486 4963.7768,-12904.3818 5083.8301,-12924.8097"/>
<polygon fill="#000000" stroke="#000000" points="5083.263,-12928.2636 5093.7169,-12926.5409 5084.4704,-12921.3685 5083.263,-12928.2636"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with Some[Int]] -->
<g id="node1522" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with Some[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-13914.9355" rx="339.3225" ry="26.7407"/>
<text text-anchor="start" x="4935.7166" y="-13918.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with Some[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-13903.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[Some[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with Some[Int]] -->
<g id="edge1202" class="edge">
<title>io.circe.Decoder[Some[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with Some[Int]]</title>
<path fill="none" stroke="#000000" d="M4191.8284,-13914.9355C4341.6326,-13914.9355 4603.2029,-13914.9355 4817.8524,-13914.9355"/>
<polygon fill="#000000" stroke="#000000" points="4818.0377,-13918.4356 4828.0377,-13914.9355 4818.0377,-13911.4356 4818.0377,-13918.4356"/>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc1] -->
<g id="node587" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc1]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-52748.9355" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="1608.604" y="-52752.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc1]</text>
<text text-anchor="middle" x="1749.604" y="-52737.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc22]] -->
<g id="node588" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc22]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-52820.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="1549.604" y="-52824.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc22]]</text>
<text text-anchor="middle" x="1749.604" y="-52809.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node589" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-52928.9355" rx="390.146" ry="26.7407"/>
<text text-anchor="start" x="304.0494" y="-52932.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-52917.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1433" class="node">
<title>Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-52964.9355" rx="344.2221" ry="26.7407"/>
<text text-anchor="start" x="1514.104" y="-52968.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-52953.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge207" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M928.9502,-52939.8467C1084.5937,-52944.605 1265.9666,-52950.1499 1418.5623,-52954.815"/>
<polygon fill="#000000" stroke="#000000" points="1418.469,-52958.3137 1428.5713,-52955.121 1418.6829,-52951.317 1418.469,-52958.3137"/>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1608" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-52892.9355" rx="335.3373" ry="26.7407"/>
<text text-anchor="start" x="1520.604" y="-52896.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-52881.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1223" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M928.9502,-52918.0244C1087.0774,-52913.1902 1271.7616,-52907.5441 1425.8452,-52902.8334"/>
<polygon fill="#000000" stroke="#000000" points="1426.0612,-52906.3286 1435.9495,-52902.5245 1425.8472,-52899.3318 1426.0612,-52906.3286"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node594" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="15021.7901" cy="-17398.9355" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="14832.2901" y="-17402.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="15021.7901" y="-17387.7355" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 674ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1207" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M15037.2344,-17372.0625C15114.4078,-17237.7805 15458.0329,-16639.8716 15546.411,-16486.0933"/>
<polygon fill="#000000" stroke="#000000" points="15549.6734,-16487.4408 15551.6217,-16477.0266 15543.6043,-16483.9528 15549.6734,-16487.4408"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1377" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M15301.0157,-17399.7577C15512.2338,-17400.3093 15809.4367,-17400.9355 16070.166,-17400.9355 16070.166,-17400.9355 16070.166,-17400.9355 18607.2235,-17400.9355 18854.8114,-17400.9355 19521.6899,-17376.4976 19704.8751,-17209.9355 19863.0971,-17066.0714 19966.6161,-16359.8523 19989.503,-16189.8131"/>
<polygon fill="#000000" stroke="#000000" points="19992.9793,-16190.2233 19990.8343,-16179.8479 19986.0409,-16189.2964 19992.9793,-16190.2233"/>
</g>
<!-- cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;cats.kernel.Eq[String] -->
<g id="edge976" class="edge">
<title>cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;cats.kernel.Eq[String]</title>
<path fill="none" stroke="#000000" d="M11788.8597,-15441.8856C11865.3438,-15449.8962 11963.9,-15458.9236 12051.7615,-15462.9355 12375.1223,-15477.7011 12465.4288,-15538.9221 12780.0814,-15462.9355 12899.2779,-15434.1504 13023.442,-15357.5577 13087.2975,-15314.1276"/>
<polygon fill="#000000" stroke="#000000" points="13089.633,-15316.7699 13095.9008,-15308.2279 13085.6742,-15310.9969 13089.633,-15316.7699"/>
</g>
<!-- cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;shapeless.IsTuple[(String, io.circe.Json)] -->
<g id="edge1579" class="edge">
<title>cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;shapeless.IsTuple[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M11814.8901,-15426.9355C11937.5353,-15426.9355 12108.2929,-15426.9355 12236.4682,-15426.9355"/>
<polygon fill="#000000" stroke="#000000" points="12236.7862,-15430.4356 12246.7862,-15426.9355 12236.7861,-15423.4356 12236.7862,-15430.4356"/>
</g>
<!-- cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;cats.kernel.Order[String] -->
<g id="edge1547" class="edge">
<title>cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;cats.kernel.Order[String]</title>
<path fill="none" stroke="#000000" d="M11751.358,-15448.631C11839.7583,-15463.1712 11969.8811,-15467.651 12043.7615,-15390.9355 12054.8773,-15379.3931 12042.6168,-15260.0948 12051.7615,-15246.9355 12111.1198,-15161.5185 12226.884,-15121.5625 12312.0181,-15103.1473"/>
<polygon fill="#000000" stroke="#000000" points="12312.9113,-15106.5362 12321.981,-15101.0598 12311.4757,-15099.685 12312.9113,-15106.5362"/>
</g>
<!-- cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;cats.kernel.Order[io.circe.Json] -->
<g id="edge749" class="edge">
<title>cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;cats.kernel.Order[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M11749.2132,-15405.0029C11838.2467,-15389.521 11970.895,-15383.6517 12043.7615,-15462.9355 12060.7731,-15481.4454 12034.3738,-16349.7784 12051.7615,-16367.9355 12107.808,-16426.4623 12723.6604,-16347.7698 12780.0814,-16405.9355 12794.3581,-16420.6537 12774.1957,-16759.848 12788.0814,-16774.9355 12847.7352,-16839.7524 12952.1133,-16841.9518 13030.0946,-16832.1026"/>
<polygon fill="#000000" stroke="#000000" points="13030.99,-16835.5136 13040.4321,-16830.7077 13030.0538,-16828.5765 13030.99,-16835.5136"/>
</g>
<!-- cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;cats.kernel.Eq[io.circe.Json] -->
<g id="edge707" class="edge">
<title>cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;cats.kernel.Eq[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M11749.2006,-15405.0144C11838.2244,-15389.5415 11970.8652,-15383.6791 12043.7615,-15462.9355 12059.445,-15479.9875 12036.1123,-16279.852 12051.7615,-16296.9355 12161.6042,-16416.8462 12666.5542,-16251.5072 12780.0814,-16367.9355 12797.3467,-16385.642 12769.9932,-16462.0708 12788.0814,-16478.9355 12851.7141,-16538.2641 13420.8841,-16507.3027 13678.2822,-16490.0066"/>
<polygon fill="#000000" stroke="#000000" points="13678.6883,-16493.4873 13688.4296,-16489.321 13678.2163,-16486.5032 13678.6883,-16493.4873"/>
</g>
<!-- cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json] -->
<g id="edge941" class="edge">
<title>cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M11749.2667,-15404.9538C11838.3421,-15389.4335 11971.0225,-15383.5347 12043.7615,-15462.9355 12057.1027,-15477.4987 12037.9711,-16870.7969 12051.7615,-16884.9355 12067.4386,-16901.0087 12664.4318,-16911.51 12963.6356,-16915.7745"/>
<polygon fill="#000000" stroke="#000000" points="12963.6655,-16919.2752 12973.7142,-16915.9174 12963.7648,-16912.2759 12963.6655,-16919.2752"/>
</g>
<!-- shapeless.Generic.Aux[(String, io.circe.Json),L] -->
<g id="node730" class="node">
<title>shapeless.Generic.Aux[(String, io.circe.Json),L]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-15282.9355" rx="197.9798" ry="26.7407"/>
<text text-anchor="start" x="12283.9214" y="-15286.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(String, io.circe.Json),L]</text>
<text text-anchor="middle" x="12415.9214" y="-15271.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;shapeless.Generic.Aux[(String, io.circe.Json),L] -->
<g id="edge228" class="edge">
<title>cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;shapeless.Generic.Aux[(String, io.circe.Json),L]</title>
<path fill="none" stroke="#000000" d="M11753.79,-15448.2518C11841.431,-15461.6853 11968.7522,-15464.6426 12043.7615,-15390.9355 12066.7266,-15368.3691 12028.8572,-15341.5638 12051.7615,-15318.9355 12114.1718,-15257.2771 12215.2148,-15251.6639 12295.0509,-15259.5727"/>
<polygon fill="#000000" stroke="#000000" points="12294.8573,-15263.072 12305.1736,-15260.6584 12295.6039,-15256.1119 12294.8573,-15263.072"/>
</g>
<!-- cats.kernel.PartialOrder[String] -->
<g id="node797" class="node">
<title>cats.kernel.PartialOrder[String]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-15354.9355" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="12329.9214" y="-15358.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.PartialOrder[String]</text>
<text text-anchor="middle" x="12415.9214" y="-15343.7355" font-family="Times,serif" font-size="14.00" fill="#000000">34 times = 46ms</text>
</g>
<!-- cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;cats.kernel.PartialOrder[String] -->
<g id="edge259" class="edge">
<title>cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;cats.kernel.PartialOrder[String]</title>
<path fill="none" stroke="#000000" d="M11796.1825,-15414.174C11869.6781,-15407.3394 11961.6482,-15398.7424 12043.7615,-15390.9355 12124.3039,-15383.2781 12214.6359,-15374.5435 12286.1333,-15367.5958"/>
<polygon fill="#000000" stroke="#000000" points="12286.4795,-15371.0788 12296.0939,-15366.6276 12285.8022,-15364.1116 12286.4795,-15371.0788"/>
</g>
<!-- cats.kernel.Eq[String :: io.circe.Json :: shapeless.HNil] -->
<g id="node1559" class="node">
<title>cats.kernel.Eq[String :: io.circe.Json :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-15752.9355" rx="223.3915" ry="26.7407"/>
<text text-anchor="start" x="12265.9214" y="-15756.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[String :: io.circe.Json :: shapeless.HNil]</text>
<text text-anchor="middle" x="12415.9214" y="-15741.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 31ms</text>
</g>
<!-- cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;cats.kernel.Eq[String :: io.circe.Json :: shapeless.HNil] -->
<g id="edge181" class="edge">
<title>cats.kernel.Eq[(String, io.circe.Json)]&#45;&gt;cats.kernel.Eq[String :: io.circe.Json :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M11750.0872,-15405.1383C11838.8169,-15390.0909 11970.3472,-15384.849 12043.7615,-15462.9355 12063.1025,-15483.5075 12032.4759,-15696.3115 12051.7615,-15716.9355 12112.2029,-15781.5719 12214.6827,-15786.5276 12295.5597,-15777.6124"/>
<polygon fill="#000000" stroke="#000000" points="12296.2955,-15781.0497 12305.8135,-15776.3959 12295.4708,-15774.0985 12296.2955,-15781.0497"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalacheck.Gen[=?Nothing] -->
<g id="node596" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalacheck.Gen[=?Nothing]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-53000.9355" rx="222.9775" ry="26.7407"/>
<text text-anchor="start" x="422.5494" y="-53004.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalacheck.Gen[=?Nothing]</text>
<text text-anchor="middle" x="572.0494" y="-52989.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[List[String]]&#45;&gt;cats.kernel.Eq[String] -->
<g id="edge678" class="edge">
<title>cats.kernel.Eq[List[String]]&#45;&gt;cats.kernel.Eq[String]</title>
<path fill="none" stroke="#000000" d="M11761.3561,-15109.9408C12033.1417,-15144.2683 12767.1517,-15236.9766 13033.1117,-15270.5683"/>
<polygon fill="#000000" stroke="#000000" points="13032.7774,-15274.0538 13043.1372,-15271.8346 13033.6546,-15267.109 13032.7774,-15274.0538"/>
</g>
<!-- cats.kernel.Eq[List[String]]&#45;&gt;cats.kernel.Order[String] -->
<g id="edge401" class="edge">
<title>cats.kernel.Eq[List[String]]&#45;&gt;cats.kernel.Order[String]</title>
<path fill="none" stroke="#000000" d="M11775.9217,-15095.5392C11918.1685,-15093.8492 12156.257,-15091.0205 12298.4679,-15089.331"/>
<polygon fill="#000000" stroke="#000000" points="12298.5811,-15092.83 12308.5388,-15089.2113 12298.4979,-15085.8305 12298.5811,-15092.83"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node598" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-47708.9355" rx="453.9251" ry="26.7407"/>
<text text-anchor="start" x="259.0494" y="-47712.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-47697.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1326" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M1011.7831,-47715.6573C1119.8675,-47717.3094 1235.1249,-47719.0713 1341.6389,-47720.6994"/>
<polygon fill="#000000" stroke="#000000" points="1341.8665,-47724.2032 1351.9188,-47720.8566 1341.9735,-47717.204 1341.8665,-47724.2032"/>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1980" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-47654.9355" rx="398.6165" ry="26.7407"/>
<text text-anchor="start" x="1475.604" y="-47658.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-47643.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge503" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M930.9517,-47692.4771C1083.053,-47685.5021 1259.4343,-47677.4136 1409.4412,-47670.5346"/>
<polygon fill="#000000" stroke="#000000" points="1409.9098,-47674.0169 1419.7389,-47670.0624 1409.5891,-47667.0243 1409.9098,-47674.0169"/>
</g>
<!-- Map[String,Int] =&gt; Traversable[(String, Int)] -->
<g id="node599" class="node">
<title>Map[String,Int] =&gt; Traversable[(String, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-5318.9355" rx="186.8525" ry="26.7407"/>
<text text-anchor="start" x="3946.7721" y="-5322.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Map[String,Int] =&gt; Traversable[(String, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-5307.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- ACursorSuite.this.PropertyCheckConfigurable -->
<g id="node600" class="node">
<title>ACursorSuite.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-53072.9355" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="445.0494" y="-53076.7355" font-family="Times,serif" font-size="14.00" fill="#000000">ACursorSuite.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-53061.7355" font-family="Times,serif" font-size="14.00" fill="#000000">26 times = 12ms</text>
</g>
<!-- String(&#39;isEmpty&#39;) =&gt; ?{def should: ?} -->
<g id="node601" class="node">
<title>String(&#39;isEmpty&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-30806.9355" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="468.5494" y="-30810.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;isEmpty&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-30795.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;isEmpty&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge492" class="edge">
<title>String(&#39;isEmpty&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M718.7947,-30816.8173C866.8053,-30823.5147 1082.0488,-30823.2546 1144.0988,-30770.9355 1555.8644,-30423.7449 1723.2716,-28541.1219 1746.6908,-28252.1639"/>
<polygon fill="#000000" stroke="#000000" points="1750.2101,-28252.0627 1747.523,-28241.8143 1743.2327,-28251.5016 1750.2101,-28252.0627"/>
</g>
<!-- String(&#39;setLefts&#39;) =&gt; ?{def should: ?} -->
<g id="node602" class="node">
<title>String(&#39;setLefts&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-30734.9355" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="470.0494" y="-30738.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;setLefts&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-30723.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;setLefts&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge145" class="edge">
<title>String(&#39;setLefts&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M717.3692,-30744.6765C865.3617,-30751.3698 1081.6886,-30751.2127 1144.0988,-30698.9355 1545.5649,-30362.6525 1721.3768,-28535.8768 1746.4356,-28252.0149"/>
<polygon fill="#000000" stroke="#000000" points="1749.9411,-28252.1039 1747.3276,-28241.8365 1742.9678,-28251.4927 1749.9411,-28252.1039"/>
</g>
<!-- String(&#39;deleteGoLeft&#39;) =&gt; ?{def should: ?} -->
<g id="node603" class="node">
<title>String(&#39;deleteGoLeft&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-30662.9355" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="456.0494" y="-30666.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;deleteGoLeft&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-30651.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;deleteGoLeft&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge143" class="edge">
<title>String(&#39;deleteGoLeft&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M734.1878,-30673.3053C881.2091,-30679.1263 1083.8526,-30677.0495 1144.0988,-30626.9355 1535.2995,-30301.5269 1719.4487,-28530.408 1746.1711,-28251.8248"/>
<polygon fill="#000000" stroke="#000000" points="1749.6595,-28252.1117 1747.1239,-28241.8248 1742.691,-28251.4477 1749.6595,-28252.1117"/>
</g>
<!-- ((Int,)) =&gt; Traversable[Int] -->
<g id="node604" class="node">
<title>((Int,)) =&gt; Traversable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-41498.9355" rx="116.8455" ry="26.7407"/>
<text text-anchor="start" x="1675.104" y="-41502.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Int,)) =&gt; Traversable[Int]</text>
<text text-anchor="middle" x="1749.604" y="-41487.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node605" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-16366.9355" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="11449.3883" y="-16370.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="11658.3883" y="-16355.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- String(&#39;focus&#39;) =&gt; ?{def should: ?} -->
<g id="node606" class="node">
<title>String(&#39;focus&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-30590.9355" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="477.0494" y="-30594.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;focus&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-30579.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;focus&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge151" class="edge">
<title>String(&#39;focus&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M709.1625,-30600.1372C857.1163,-30607.0441 1080.1703,-30607.7215 1144.0988,-30554.9355 1524.6814,-30240.6875 1717.0958,-28528.2085 1745.8099,-28252.4316"/>
<polygon fill="#000000" stroke="#000000" points="1749.3253,-28252.4619 1746.8731,-28242.1548 1742.3625,-28251.7415 1749.3253,-28252.4619"/>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Map[java.util.UUID,Int]] -->
<g id="node607" class="node">
<title>cats.kernel.Eq[scala.collection.immutable.Map[java.util.UUID,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-15816.9355" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="19150.6796" y="-15820.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.collection.immutable.Map[java.util.UUID,Int]]</text>
<text text-anchor="middle" x="19337.1796" y="-15805.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge608" class="edge">
<title>cats.kernel.Eq[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M19608.8078,-15821.5185C19642.1669,-15828.4038 19674.9931,-15838.4838 19704.8751,-15852.9355 19829.9469,-15913.4237 19930.1934,-16051.8919 19972.5155,-16117.3738"/>
<polygon fill="#000000" stroke="#000000" points="19969.766,-16119.5711 19978.0995,-16126.1135 19975.6648,-16115.8022 19969.766,-16119.5711"/>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc5]] -->
<g id="node608" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc5]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-53144.9355" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="1552.604" y="-53148.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc5]]</text>
<text text-anchor="middle" x="1749.604" y="-53133.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M] -->
<g id="node609" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-53216.9355" rx="452.5967" ry="26.7407"/>
<text text-anchor="start" x="260.0494" y="-53220.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M]</text>
<text text-anchor="middle" x="572.0494" y="-53205.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(Int, Int),scala.collection.immutable.Map[Int,Int]] -->
<g id="node610" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(Int, Int),scala.collection.immutable.Map[Int,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-3806.9355" rx="366.9768" ry="26.7407"/>
<text text-anchor="start" x="4916.2166" y="-3810.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(Int, Int),scala.collection.immutable.Map[Int,Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-3795.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node611" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-53324.9355" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="1509.104" y="-53328.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-53313.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int)] -->
<g id="node612" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-54.9355" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="5068.7166" y="-58.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-43.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Option[Vector[io.circe.Json]] =&gt; ?{def ===: ?} -->
<g id="node613" class="node">
<title>Option[Vector[io.circe.Json]] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-16920.9355" rx="197.9798" ry="26.7407"/>
<text text-anchor="start" x="10726.4287" y="-16924.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Vector[io.circe.Json]] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10858.4287" y="-16909.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- Option[Vector[io.circe.Json]] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Vector[io.circe.Json]]] -->
<g id="edge999" class="edge">
<title>Option[Vector[io.circe.Json]] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Vector[io.circe.Json]]]</title>
<path fill="none" stroke="#000000" d="M11049.2765,-16928.0927C11184.0428,-16933.1467 11362.8794,-16939.8534 11491.8725,-16944.6909"/>
<polygon fill="#000000" stroke="#000000" points="11492.1167,-16948.2024 11502.2408,-16945.0797 11492.3791,-16941.2073 11492.1167,-16948.2024"/>
</g>
<!-- io.circe.Encoder[cats.data.NonEmptyList[Int]] -->
<g id="node614" class="node">
<title>io.circe.Encoder[cats.data.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-21446.9355" rx="191.752" ry="26.7407"/>
<text text-anchor="start" x="444.5494" y="-21450.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[cats.data.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="572.0494" y="-21435.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Encoder[cats.data.NonEmptyList[Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1500" class="edge">
<title>io.circe.Encoder[cats.data.NonEmptyList[Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M758.3524,-21440.5671C870.4306,-21435.4053 1015.7838,-21426.3658 1144.0988,-21410.9355 1331.5865,-21388.3896 1548.9927,-21345.4547 1665.5109,-21321.0595"/>
<polygon fill="#000000" stroke="#000000" points="1666.3714,-21324.4552 1675.4386,-21318.9746 1664.9327,-21317.6046 1666.3714,-21324.4552"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,io.circe.Json,List[io.circe.Json]] -->
<g id="node615" class="node">
<title>scala.collection.generic.CanBuildFrom[F,io.circe.Json,List[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-14850.9355" rx="296.9697" ry="26.7407"/>
<text text-anchor="start" x="6020.2346" y="-14854.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,io.circe.Json,List[io.circe.Json]]</text>
<text text-anchor="middle" x="6222.2346" y="-14839.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- shapeless.IsTuple[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]] -->
<g id="node616" class="node">
<title>shapeless.IsTuple[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-14442.9355" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="9833.0427" y="-14446.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]]</text>
<text text-anchor="middle" x="10016.0427" y="-14431.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc9] -->
<g id="node617" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc9]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-53396.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="445.5494" y="-53400.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc9]</text>
<text text-anchor="middle" x="572.0494" y="-53385.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc9]] -->
<g id="node1714" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc9]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-53396.9355" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="1552.604" y="-53400.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc9]]</text>
<text text-anchor="middle" x="1749.604" y="-53385.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc9]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc9]] -->
<g id="edge360" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc9]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc9]]</title>
<path fill="none" stroke="#000000" d="M762.5526,-53396.9355C948.131,-53396.9355 1233.0868,-53396.9355 1449.2048,-53396.9355"/>
<polygon fill="#000000" stroke="#000000" points="1449.4435,-53400.4356 1459.4434,-53396.9355 1449.4434,-53393.4356 1449.4435,-53400.4356"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H] -->
<g id="node618" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-53468.9355" rx="384.8322" ry="26.7407"/>
<text text-anchor="start" x="308.0494" y="-53472.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H]</text>
<text text-anchor="middle" x="572.0494" y="-53457.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1004" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M11104.3742,-17260.3543C11157.3679,-17265.0694 11213.0659,-17270.1009 11265.0151,-17274.9355 11351.5795,-17282.9917 11979.4249,-17292.4625 12043.7615,-17350.9355 12057.5006,-17363.4226 12037.79,-17379.709 12051.7615,-17391.9355 12298.4709,-17607.8327 12460.7594,-17417.566 12788.0814,-17435.9355 12940.4722,-17444.4878 12978.3976,-17453.9355 13131.0282,-17453.9355 13131.0282,-17453.9355 13131.0282,-17453.9355 14433.9626,-17453.9355 16446.269,-17453.9355 16954.4618,-17560.6713 18961.484,-17414.9355 19294.0999,-17390.7833 19456.6594,-17535.6587 19704.8751,-17312.9355 19879.6341,-17156.1249 19971.5563,-16370.4793 19990.5647,-16189.9548"/>
<polygon fill="#000000" stroke="#000000" points="19994.0574,-16190.2058 19991.614,-16179.8966 19987.0952,-16189.4795 19994.0574,-16190.2058"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node1926" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="11658.3883" cy="-17238.9355" rx="385.2464" ry="26.7407"/>
<text text-anchor="start" x="11393.8883" y="-17242.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="11658.3883" y="-17227.7355" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 761ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge326" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M11265.1461,-17238.9355C11265.309,-17238.9355 11265.472,-17238.9355 11265.6349,-17238.9355"/>
<polygon fill="#000000" stroke="#000000" points="11262.9645,-17242.4357 11272.9645,-17238.9355 11262.9644,-17235.4357 11262.9645,-17242.4357"/>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc10] -->
<g id="node620" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc10]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-53540.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="448.5494" y="-53544.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc10]</text>
<text text-anchor="middle" x="572.0494" y="-53529.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc10] -->
<g id="node1412" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc10]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-53540.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="1617.104" y="-53544.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc10]</text>
<text text-anchor="middle" x="1749.604" y="-53529.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc10]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc10] -->
<g id="edge621" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc10]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc10]</title>
<path fill="none" stroke="#000000" d="M758.3114,-53540.9355C971.0895,-53540.9355 1318.412,-53540.9355 1540.352,-53540.9355"/>
<polygon fill="#000000" stroke="#000000" points="1540.4954,-53544.4356 1550.4954,-53540.9355 1540.4954,-53537.4356 1540.4954,-53544.4356"/>
</g>
<!-- String(&#39;Printer#reuseWriters&#39;) =&gt; ?{def should: ?} -->
<g id="node621" class="node">
<title>String(&#39;Printer#reuseWriters&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-30518.9355" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="435.0494" y="-30522.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Printer#reuseWriters&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-30507.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- String(&#39;Printer#reuseWriters&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge571" class="edge">
<title>String(&#39;Printer#reuseWriters&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M759.3502,-30529.9822C903.2997,-30534.3824 1086.8958,-30529.7997 1144.0988,-30482.9355 1514.4978,-30179.4817 1715.0856,-28522.1815 1745.5212,-28252.1398"/>
<polygon fill="#000000" stroke="#000000" points="1749.0146,-28252.3936 1746.6499,-28242.0661 1742.0581,-28251.6141 1749.0146,-28252.3936"/>
</g>
<!-- scala.reflect.ClassTag[Array[String]] -->
<g id="node622" class="node">
<title>scala.reflect.ClassTag[Array[String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-14130.9355" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="3969.7721" y="-14134.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Array[String]]</text>
<text text-anchor="middle" x="4070.7721" y="-14119.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node623" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-18770.9355" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="11480.8883" y="-18774.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="11658.3883" y="-18759.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.Eq[Option[io.circe.JsonNumber]]&#45;&gt;shapeless.IsTuple[Option[io.circe.JsonNumber]] -->
<g id="edge22" class="edge">
<title>cats.Eq[Option[io.circe.JsonNumber]]&#45;&gt;shapeless.IsTuple[Option[io.circe.JsonNumber]]</title>
<path fill="none" stroke="#000000" d="M1893.2397,-44115.2837C2049.1127,-44106.0423 2284.2214,-44103.1447 2347.1092,-44162.9355 2370.4432,-44185.1204 2331.7998,-44212.7249 2355.1092,-44234.9355 2409.7364,-44286.9875 2599.4004,-44290.27 2746.3939,-44284.1411"/>
<polygon fill="#000000" stroke="#000000" points="2746.6179,-44287.6348 2756.4566,-44283.7042 2746.3142,-44280.6414 2746.6179,-44287.6348"/>
</g>
<!-- cats.kernel.Order[io.circe.JsonNumber] -->
<g id="node779" class="node">
<title>cats.kernel.Order[io.circe.JsonNumber]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-44198.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="2822.9013" y="-44202.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[io.circe.JsonNumber]</text>
<text text-anchor="middle" x="2931.4013" y="-44187.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 6ms</text>
</g>
<!-- cats.Eq[Option[io.circe.JsonNumber]]&#45;&gt;cats.kernel.Order[io.circe.JsonNumber] -->
<g id="edge321" class="edge">
<title>cats.Eq[Option[io.circe.JsonNumber]]&#45;&gt;cats.kernel.Order[io.circe.JsonNumber]</title>
<path fill="none" stroke="#000000" d="M1899.7042,-44135.9226C2020.5441,-44143.1713 2194.7569,-44153.6525 2347.1092,-44162.9355 2488.9281,-44171.5768 2650.1014,-44181.5161 2767.1971,-44188.7587"/>
<polygon fill="#000000" stroke="#000000" points="2767.1247,-44192.2608 2777.3217,-44189.385 2767.5569,-44185.2742 2767.1247,-44192.2608"/>
</g>
<!-- cats.kernel.Eq[io.circe.JsonNumber] -->
<g id="node1037" class="node">
<title>cats.kernel.Eq[io.circe.JsonNumber]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-44126.9355" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="2831.4013" y="-44130.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.JsonNumber]</text>
<text text-anchor="middle" x="2931.4013" y="-44115.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 30ms</text>
</g>
<!-- cats.Eq[Option[io.circe.JsonNumber]]&#45;&gt;cats.kernel.Eq[io.circe.JsonNumber] -->
<g id="edge612" class="edge">
<title>cats.Eq[Option[io.circe.JsonNumber]]&#45;&gt;cats.kernel.Eq[io.circe.JsonNumber]</title>
<path fill="none" stroke="#000000" d="M1908.9864,-44126.9355C2133.6083,-44126.9355 2541.1513,-44126.9355 2767.9554,-44126.9355"/>
<polygon fill="#000000" stroke="#000000" points="2768.2836,-44130.4356 2778.2835,-44126.9355 2768.2835,-44123.4356 2768.2836,-44130.4356"/>
</g>
<!-- cats.kernel.PartialOrder[io.circe.JsonNumber] -->
<g id="node1598" class="node">
<title>cats.kernel.PartialOrder[io.circe.JsonNumber]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-44054.9355" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="2805.4013" y="-44058.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.PartialOrder[io.circe.JsonNumber]</text>
<text text-anchor="middle" x="2931.4013" y="-44043.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 12ms</text>
</g>
<!-- cats.Eq[Option[io.circe.JsonNumber]]&#45;&gt;cats.kernel.PartialOrder[io.circe.JsonNumber] -->
<g id="edge1280" class="edge">
<title>cats.Eq[Option[io.circe.JsonNumber]]&#45;&gt;cats.kernel.PartialOrder[io.circe.JsonNumber]</title>
<path fill="none" stroke="#000000" d="M1899.7042,-44117.9485C2020.5441,-44110.6997 2194.7569,-44100.2186 2347.1092,-44090.9355 2481.0309,-44082.7755 2632.2115,-44073.4579 2747.2366,-44066.3467"/>
<polygon fill="#000000" stroke="#000000" points="2747.7861,-44069.8195 2757.5511,-44065.7089 2747.3541,-44062.8328 2747.7861,-44069.8195"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam -->
<g id="node625" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-53612.9355" rx="339.3225" ry="26.7407"/>
<text text-anchor="start" x="340.0494" y="-53616.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-53601.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- cats.Eq[scala.collection.immutable.Set[Option[io.circe.Json]]] -->
<g id="node628" class="node">
<title>cats.Eq[scala.collection.immutable.Set[Option[io.circe.Json]]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-53684.9355" rx="252.3743" ry="26.7407"/>
<text text-anchor="start" x="401.5494" y="-53688.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[scala.collection.immutable.Set[Option[io.circe.Json]]]</text>
<text text-anchor="middle" x="572.0494" y="-53673.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[io.circe.DecodingFailure],Option[io.circe.Json],That] -->
<g id="node630" class="node">
<title>scala.collection.generic.CanBuildFrom[List[io.circe.DecodingFailure],Option[io.circe.Json],That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-53756.9355" rx="389.7317" ry="26.7407"/>
<text text-anchor="start" x="304.5494" y="-53760.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[io.circe.DecodingFailure],Option[io.circe.Json],That]</text>
<text text-anchor="middle" x="572.0494" y="-53745.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U] -->
<g id="node631" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-53828.9355" rx="557.8145" ry="26.7407"/>
<text text-anchor="start" x="185.5494" y="-53832.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U]</text>
<text text-anchor="middle" x="572.0494" y="-53817.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String) -->
<g id="node632" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-53900.9355" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="399.0494" y="-53904.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String)</text>
<text text-anchor="middle" x="572.0494" y="-53889.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- io.circe.Decoder[AccumulatingDecoderSpec.this.Sample] -->
<g id="node633" class="node">
<title>io.circe.Decoder[AccumulatingDecoderSpec.this.Sample]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-53972.9355" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="413.5494" y="-53976.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[AccumulatingDecoderSpec.this.Sample]</text>
<text text-anchor="middle" x="572.0494" y="-53961.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[AccumulatingDecoderSpec.this.Sample]] -->
<g id="node1874" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[AccumulatingDecoderSpec.this.Sample]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-53972.9355" rx="335.3373" ry="26.7407"/>
<text text-anchor="start" x="1520.604" y="-53976.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[AccumulatingDecoderSpec.this.Sample]]</text>
<text text-anchor="middle" x="1749.604" y="-53961.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[AccumulatingDecoderSpec.this.Sample]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[AccumulatingDecoderSpec.this.Sample]] -->
<g id="edge1575" class="edge">
<title>io.circe.Decoder[AccumulatingDecoderSpec.this.Sample]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[AccumulatingDecoderSpec.this.Sample]]</title>
<path fill="none" stroke="#000000" d="M807.8681,-53972.9355C978.6743,-53972.9355 1212.297,-53972.9355 1404.1155,-53972.9355"/>
<polygon fill="#000000" stroke="#000000" points="1404.3712,-53976.4356 1414.3712,-53972.9355 1404.3712,-53969.4356 1404.3712,-53976.4356"/>
</g>
<!-- String(&#39;fieldSet&#39;) =&gt; ?{def should: ?} -->
<g id="node634" class="node">
<title>String(&#39;fieldSet&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-30446.9355" rx="154.7129" ry="26.7407"/>
<text text-anchor="start" x="470.5494" y="-30450.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;fieldSet&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-30435.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;fieldSet&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge755" class="edge">
<title>String(&#39;fieldSet&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M717.4049,-30456.3238C865.132,-30462.6905 1080.9611,-30462.2331 1144.0988,-30410.9355 1504.174,-30118.3845 1712.8371,-28517.5166 1745.175,-28252.1966"/>
<polygon fill="#000000" stroke="#000000" points="1748.6893,-28252.2889 1746.418,-28241.9404 1741.7402,-28251.4466 1748.6893,-28252.2889"/>
</g>
<!-- String(&#39;mapJson&#39;) =&gt; ?{def should: ?} -->
<g id="node635" class="node">
<title>String(&#39;mapJson&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-30374.9355" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="467.5494" y="-30378.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;mapJson&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-30363.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;mapJson&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1375" class="edge">
<title>String(&#39;mapJson&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M721.0576,-30384.3733C868.5901,-30390.48 1081.2723,-30389.53 1144.0988,-30338.9355 1493.8889,-30057.248 1710.5278,-28512.6149 1744.8103,-28252.2161"/>
<polygon fill="#000000" stroke="#000000" points="1748.3024,-28252.5045 1746.1307,-28242.1346 1741.3617,-28251.5954 1748.3024,-28252.5045"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int)] -->
<g id="node636" class="node">
<title>org.scalacheck.Shrink[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-4958.9355" rx="135.5294" ry="26.7407"/>
<text text-anchor="start" x="3982.7721" y="-4962.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-4947.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 22ms</text>
</g>
<!-- Integral[(Int, Int)] -->
<g id="node1553" class="node">
<title>Integral[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-5030.9355" rx="80.7205" ry="26.7407"/>
<text text-anchor="start" x="5118.7166" y="-5034.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-5019.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int)]&#45;&gt;Integral[(Int, Int)] -->
<g id="edge285" class="edge">
<title>org.scalacheck.Shrink[(Int, Int)]&#45;&gt;Integral[(Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4200.0384,-4967.2614C4312.5388,-4974.5212 4479.9816,-4985.3598 4625.8509,-4994.9355 4785.116,-5005.3907 4970.6987,-5017.7609 5078.1457,-5024.9414"/>
<polygon fill="#000000" stroke="#000000" points="5078.0852,-5028.445 5088.2964,-5025.6198 5078.5521,-5021.4606 5078.0852,-5028.445"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge627" class="edge">
<title>org.scalacheck.Shrink[(Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4195.6312,-4948.2898C4341.2528,-4938.954 4569.3126,-4934.928 4625.8509,-4994.9355 4640.3663,-5010.3415 4619.3554,-6503.5109 4633.8509,-6518.9355 4688.4669,-6577.0519 4909.9836,-6573.4041 5049.9458,-6564.7004"/>
<polygon fill="#000000" stroke="#000000" points="5050.5402,-6568.1696 5060.2964,-6564.0383 5050.0933,-6561.1839 5050.5402,-6568.1696"/>
</g>
<!-- shapeless.IsTuple[Int :: Int :: Int :: shapeless.HNil] -->
<g id="node1010" class="node">
<title>shapeless.IsTuple[Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="18607.2235" cy="-16295.9355" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="18468.7235" y="-16299.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="18607.2235" y="-16284.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1322" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M17942.8716,-16325.655C18077.8745,-16319.6157 18260.8855,-16311.4288 18400.6424,-16305.1768"/>
<polygon fill="#000000" stroke="#000000" points="18401.2184,-16308.6547 18411.052,-16304.7112 18400.9055,-16301.6617 18401.2184,-16308.6547"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1548" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M17926.7726,-16347.23C18267.8746,-16369.6771 19060.9971,-16399.6087 19704.8751,-16254.9355 19786.3671,-16236.6251 19876.5917,-16202.4885 19934.2919,-16178.7763"/>
<polygon fill="#000000" stroke="#000000" points="19935.7165,-16181.9747 19943.6189,-16174.9175 19933.0404,-16175.5064 19935.7165,-16181.9747"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: shapeless.HNil] -->
<g id="edge363" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M17776.9016,-16360.9221C17888.667,-16518.5462 18456.4373,-17319.2798 18582.4335,-17496.9738"/>
<polygon fill="#000000" stroke="#000000" points="18579.6251,-17499.0643 18588.2644,-17505.1973 18585.3354,-17495.0154 18579.6251,-17499.0643"/>
</g>
<!-- Integral[scala.math.BigDecimal] -->
<g id="node638" class="node">
<title>Integral[scala.math.BigDecimal]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-54116.9355" rx="138.6859" ry="26.7407"/>
<text text-anchor="start" x="1659.604" y="-54120.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[scala.math.BigDecimal]</text>
<text text-anchor="middle" x="1749.604" y="-54105.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node639" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="7234.3262" cy="-17602.9355" rx="357.5922" ry="26.7407"/>
<text text-anchor="start" x="6989.3262" y="-17606.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="7234.3262" y="-17591.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T] -->
<g id="node640" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-54152.9355" rx="508.3196" ry="26.7407"/>
<text text-anchor="start" x="220.5494" y="-54156.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T]</text>
<text text-anchor="middle" x="572.0494" y="-54141.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Double =&gt; Int -->
<g id="node641" class="node">
<title>Double =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-54224.9355" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="525.0494" y="-54228.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Double =&gt; Int</text>
<text text-anchor="middle" x="572.0494" y="-54213.7355" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 20ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H] -->
<g id="node642" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-54296.9355" rx="362.9917" ry="26.7407"/>
<text text-anchor="start" x="323.5494" y="-54300.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H]</text>
<text text-anchor="middle" x="572.0494" y="-54285.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc14] -->
<g id="node643" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc14]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-54368.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-54372.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc14]</text>
<text text-anchor="middle" x="572.0494" y="-54357.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- Integral[ProductCodecSuite.this.Cc14] -->
<g id="node826" class="node">
<title>Integral[ProductCodecSuite.this.Cc14]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-54404.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="1644.104" y="-54408.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc14]</text>
<text text-anchor="middle" x="1749.604" y="-54393.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc14]&#45;&gt;Integral[ProductCodecSuite.this.Cc14] -->
<g id="edge859" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc14]&#45;&gt;Integral[ProductCodecSuite.this.Cc14]</title>
<path fill="none" stroke="#000000" d="M781.5546,-54375.3405C1009.8486,-54382.3199 1370.5887,-54393.3484 1581.2424,-54399.7884"/>
<polygon fill="#000000" stroke="#000000" points="1581.3678,-54403.2938 1591.4702,-54400.1011 1581.5818,-54396.2971 1581.3678,-54403.2938"/>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc14] -->
<g id="node1329" class="node">
<title>Fractional[ProductCodecSuite.this.Cc14]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-54332.9355" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="1637.604" y="-54336.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc14]</text>
<text text-anchor="middle" x="1749.604" y="-54321.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc14]&#45;&gt;Fractional[ProductCodecSuite.this.Cc14] -->
<g id="edge1344" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc14]&#45;&gt;Fractional[ProductCodecSuite.this.Cc14]</title>
<path fill="none" stroke="#000000" d="M781.5546,-54362.5306C1006.7591,-54355.6457 1360.8493,-54344.8205 1572.6085,-54338.3466"/>
<polygon fill="#000000" stroke="#000000" points="1573.0085,-54341.8361 1582.8968,-54338.0321 1572.7945,-54334.8394 1573.0085,-54341.8361"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc15] -->
<g id="node644" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc15]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-54476.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="420.0494" y="-54480.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc15]</text>
<text text-anchor="middle" x="572.0494" y="-54465.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc15] -->
<g id="node1990" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc15]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-54476.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="1605.104" y="-54480.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc15]</text>
<text text-anchor="middle" x="1749.604" y="-54465.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc15]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc15] -->
<g id="edge438" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc15]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc15]</title>
<path fill="none" stroke="#000000" d="M798.3967,-54476.9355C1007.0924,-54476.9355 1315.2165,-54476.9355 1523.754,-54476.9355"/>
<polygon fill="#000000" stroke="#000000" points="1523.9188,-54480.4356 1533.9188,-54476.9355 1523.9187,-54473.4356 1523.9188,-54480.4356"/>
</g>
<!-- shapeless.IsTuple[io.circe.Json] -->
<g id="node1040" class="node">
<title>shapeless.IsTuple[io.circe.Json]</title>
<ellipse fill="none" stroke="#000000" cx="14433.9626" cy="-16444.9355" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="14346.9626" y="-16448.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.Json]</text>
<text text-anchor="middle" x="14433.9626" y="-16433.7355" font-family="Times,serif" font-size="14.00" fill="#000000">239 times = 192ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.Json]&#45;&gt;shapeless.IsTuple[io.circe.Json] -->
<g id="edge983" class="edge">
<title>cats.kernel.Eq[io.circe.Json]&#45;&gt;shapeless.IsTuple[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M13921.1461,-16474.2275C14026.9312,-16468.1851 14182.5733,-16459.2949 14294.6196,-16452.8948"/>
<polygon fill="#000000" stroke="#000000" points="14294.8588,-16456.3869 14304.6429,-16452.3223 14294.4595,-16449.3983 14294.8588,-16456.3869"/>
</g>
<!-- io.circe.Decoder[Long] -->
<g id="node646" class="node">
<title>io.circe.Decoder[Long]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-54548.9355" rx="101.6471" ry="26.7407"/>
<text text-anchor="start" x="508.0494" y="-54552.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Long]</text>
<text text-anchor="middle" x="572.0494" y="-54537.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 24ms</text>
</g>
<!-- List[Int] =&gt; ?{def asJson: ?} -->
<g id="node647" class="node">
<title>List[Int] =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-54620.9355" rx="123.9879" ry="26.7407"/>
<text text-anchor="start" x="492.5494" y="-54624.7355" font-family="Times,serif" font-size="14.00" fill="#000000">List[Int] =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-54609.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- scala.reflect.ClassTag[(Either[Int,String], Either[Int,String], Either[Int,String])] -->
<g id="node648" class="node">
<title>scala.reflect.ClassTag[(Either[Int,String], Either[Int,String], Either[Int,String])]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-10962.9355" rx="318.3962" ry="26.7407"/>
<text text-anchor="start" x="2714.4013" y="-10966.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Either[Int,String], Either[Int,String], Either[Int,String])]</text>
<text text-anchor="middle" x="2931.4013" y="-10951.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc12] -->
<g id="node649" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc12]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-54692.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-54696.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc12]</text>
<text text-anchor="middle" x="572.0494" y="-54681.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc12]] -->
<g id="node749" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc12]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-54692.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="1531.604" y="-54696.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc12]]</text>
<text text-anchor="middle" x="1749.604" y="-54681.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc12]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc12]] -->
<g id="edge1484" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc12]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc12]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-54692.9355C944.0278,-54692.9355 1209.2209,-54692.9355 1419.4845,-54692.9355"/>
<polygon fill="#000000" stroke="#000000" points="1419.7702,-54696.4356 1429.7702,-54692.9355 1419.7702,-54689.4356 1419.7702,-54696.4356"/>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc17] -->
<g id="node652" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc17]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-54764.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-54768.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc17]</text>
<text text-anchor="middle" x="572.0494" y="-54753.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc17]] -->
<g id="node737" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc17]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-54764.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="1531.604" y="-54768.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc17]]</text>
<text text-anchor="middle" x="1749.604" y="-54753.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc17]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc17]] -->
<g id="edge134" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc17]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc17]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-54764.9355C944.0278,-54764.9355 1209.2209,-54764.9355 1419.4845,-54764.9355"/>
<polygon fill="#000000" stroke="#000000" points="1419.7702,-54768.4356 1429.7702,-54764.9355 1419.7702,-54761.4356 1419.7702,-54768.4356"/>
</g>
<!-- Integral[scala.collection.mutable.HashMap[Long,Int]] -->
<g id="node654" class="node">
<title>Integral[scala.collection.mutable.HashMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-9294.9355" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="3922.2721" y="-9298.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[scala.collection.mutable.HashMap[Long,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-9283.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node656" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-19934.9355" rx="429.8419" ry="26.7407"/>
<text text-anchor="start" x="1453.604" y="-19938.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-19923.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc6] -->
<g id="node657" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc6]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-54836.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="445.5494" y="-54840.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc6]</text>
<text text-anchor="middle" x="572.0494" y="-54825.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc6]] -->
<g id="node889" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc6]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-54836.9355" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="1552.604" y="-54840.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc6]]</text>
<text text-anchor="middle" x="1749.604" y="-54825.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc6]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc6]] -->
<g id="edge579" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc6]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc6]]</title>
<path fill="none" stroke="#000000" d="M762.5526,-54836.9355C948.131,-54836.9355 1233.0868,-54836.9355 1449.2048,-54836.9355"/>
<polygon fill="#000000" stroke="#000000" points="1449.4435,-54840.4356 1459.4434,-54836.9355 1449.4434,-54833.4356 1449.4435,-54840.4356"/>
</g>
<!-- String(&#39;prepare&#39;) =&gt; ?{def should: ?} -->
<g id="node658" class="node">
<title>String(&#39;prepare&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-30302.9355" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="471.0494" y="-30306.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;prepare&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-30291.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;prepare&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge77" class="edge">
<title>String(&#39;prepare&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M717.2261,-30312.1017C864.8022,-30318.2809 1080.5047,-30317.6663 1144.0988,-30266.9355 1483.6662,-29996.0532 1708.1849,-28507.283 1744.4333,-28252.1476"/>
<polygon fill="#000000" stroke="#000000" points="1747.9442,-28252.3159 1745.8785,-28241.9244 1741.0131,-28251.336 1747.9442,-28252.3159"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Either[Int,String],Set[Either[Int,String]]] -->
<g id="node659" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Either[Int,String],Set[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-14202.9355" rx="330.4379" ry="26.7407"/>
<text text-anchor="start" x="3845.2721" y="-14206.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Either[Int,String],Set[Either[Int,String]]]</text>
<text text-anchor="middle" x="4070.7721" y="-14191.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;accumulating&#39;) =&gt; ?{def should: ?} -->
<g id="node660" class="node">
<title>String(&#39;accumulating&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-30230.9355" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="454.5494" y="-30234.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;accumulating&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-30219.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;accumulating&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge73" class="edge">
<title>String(&#39;accumulating&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M737.4834,-30240.7557C883.7667,-30245.8899 1083.1356,-30243.0786 1144.0988,-30194.9355 1473.4864,-29934.8159 1705.7813,-28501.7119 1744.0369,-28252.0377"/>
<polygon fill="#000000" stroke="#000000" points="1747.5172,-28252.432 1745.565,-28242.0185 1740.5972,-28251.3765 1747.5172,-28252.432"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Short,Int]] -->
<g id="node661" class="node">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Short,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-15606.9355" rx="277.786" ry="26.7407"/>
<text text-anchor="start" x="2742.9013" y="-15610.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.collection.immutable.Map[Short,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-15595.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Short,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Short, Int)] -->
<g id="edge113" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Short,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Short, Int)]</title>
<path fill="none" stroke="#000000" d="M3195.6596,-15615.2852C3415.2943,-15622.2248 3720.9217,-15631.8815 3906.7901,-15637.7543"/>
<polygon fill="#000000" stroke="#000000" points="3906.8209,-15641.2569 3916.9264,-15638.0746 3907.042,-15634.2604 3906.8209,-15641.2569"/>
</g>
<!-- scala.collection.immutable.Map[Short,Int] =&gt; Traversable[(Short, Int)] -->
<g id="node716" class="node">
<title>scala.collection.immutable.Map[Short,Int] =&gt; Traversable[(Short, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-15570.9355" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="3875.2721" y="-15574.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[Short,Int] =&gt; Traversable[(Short, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-15559.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Short,Int]]&#45;&gt;scala.collection.immutable.Map[Short,Int] =&gt; Traversable[(Short, Int)] -->
<g id="edge262" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Short,Int]]&#45;&gt;scala.collection.immutable.Map[Short,Int] =&gt; Traversable[(Short, Int)]</title>
<path fill="none" stroke="#000000" d="M3195.6596,-15598.5859C3373.0865,-15592.9799 3606.631,-15585.6007 3787.8256,-15579.8756"/>
<polygon fill="#000000" stroke="#000000" points="3788.161,-15583.3669 3798.0455,-15579.5527 3787.9399,-15576.3704 3788.161,-15583.3669"/>
</g>
<!-- scala.reflect.ClassTag[scala.collection.immutable.Map[Short,Int]] -->
<g id="node1309" class="node">
<title>scala.reflect.ClassTag[scala.collection.immutable.Map[Short,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-15714.9355" rx="267.0729" ry="26.7407"/>
<text text-anchor="start" x="3889.7721" y="-15718.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.collection.immutable.Map[Short,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-15703.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Short,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Map[Short,Int]] -->
<g id="edge300" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Short,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Map[Short,Int]]</title>
<path fill="none" stroke="#000000" d="M3090.1555,-15629.0172C3207.5151,-15644.7269 3371.3232,-15665.3703 3515.6933,-15678.9355 3616.0988,-15688.3698 3726.9556,-15696.0976 3823.0291,-15701.9413"/>
<polygon fill="#000000" stroke="#000000" points="3822.9793,-15705.4446 3833.1724,-15702.5547 3823.4019,-15698.4574 3822.9793,-15705.4446"/>
</g>
<!-- org.scalacheck.util.Buildable[(Short, Int),scala.collection.immutable.Map[Short,Int]] -->
<g id="node1728" class="node">
<title>org.scalacheck.util.Buildable[(Short, Int),scala.collection.immutable.Map[Short,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-15498.9355" rx="340.651" ry="26.7407"/>
<text text-anchor="start" x="3837.7721" y="-15502.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(Short, Int),scala.collection.immutable.Map[Short,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-15487.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Short,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Short, Int),scala.collection.immutable.Map[Short,Int]] -->
<g id="edge1368" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Short,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Short, Int),scala.collection.immutable.Map[Short,Int]]</title>
<path fill="none" stroke="#000000" d="M3090.1555,-15584.8539C3207.5151,-15569.1442 3371.3232,-15548.5008 3515.6933,-15534.9355 3601.0107,-15526.919 3693.8744,-15520.1345 3778.8019,-15514.6912"/>
<polygon fill="#000000" stroke="#000000" points="3779.0943,-15518.1798 3788.8515,-15514.051 3778.6492,-15511.1939 3779.0943,-15518.1798"/>
</g>
<!-- cats.kernel.Eq[List[Int]] -->
<g id="node662" class="node">
<title>cats.kernel.Eq[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-15786.9355" rx="104.8038" ry="26.7407"/>
<text text-anchor="start" x="10792.4287" y="-15790.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[List[Int]]</text>
<text text-anchor="middle" x="10858.4287" y="-15775.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- cats.kernel.Eq[List[Int]]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge189" class="edge">
<title>cats.kernel.Eq[List[Int]]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10932.3059,-15767.8052C11024.5835,-15748.8606 11180.5789,-15734.0535 11265.0151,-15822.9355 11281.5562,-15840.3476 11257.3776,-16020.7076 11273.0151,-16038.9355 11342.7434,-16120.2152 11472.1398,-16129.5789 11561.6382,-16124.6987"/>
<polygon fill="#000000" stroke="#000000" points="11562.0359,-16128.181 11571.8024,-16124.0743 11561.6066,-16121.1942 11562.0359,-16128.181"/>
</g>
<!-- shapeless.IsTuple[List[Int]] -->
<g id="node1457" class="node">
<title>shapeless.IsTuple[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-15786.9355" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="11582.8883" y="-15790.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[List[Int]]</text>
<text text-anchor="middle" x="11658.3883" y="-15775.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[List[Int]]&#45;&gt;shapeless.IsTuple[List[Int]] -->
<g id="edge42" class="edge">
<title>cats.kernel.Eq[List[Int]]&#45;&gt;shapeless.IsTuple[List[Int]]</title>
<path fill="none" stroke="#000000" d="M10963.4204,-15786.9355C11109.2166,-15786.9355 11372.7538,-15786.9355 11530.0465,-15786.9355"/>
<polygon fill="#000000" stroke="#000000" points="11530.2511,-15790.4356 11540.2511,-15786.9355 11530.251,-15783.4356 11530.2511,-15790.4356"/>
</g>
<!-- org.scalacheck.Shrink[io.circe.tests.examples.Foo] -->
<g id="node663" class="node">
<title>org.scalacheck.Shrink[io.circe.tests.examples.Foo]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-46826.9355" rx="207.7788" ry="26.7407"/>
<text text-anchor="start" x="433.0494" y="-46830.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[io.circe.tests.examples.Foo]</text>
<text text-anchor="middle" x="572.0494" y="-46815.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Shrink[io.circe.tests.examples.Foo]&#45;&gt;Integral[io.circe.tests.examples.Foo] -->
<g id="edge166" class="edge">
<title>org.scalacheck.Shrink[io.circe.tests.examples.Foo]&#45;&gt;Integral[io.circe.tests.examples.Foo]</title>
<path fill="none" stroke="#000000" d="M774.4782,-46833.1242C1004.9659,-46840.1706 1376.8795,-46851.5407 1588.5609,-46858.0122"/>
<polygon fill="#000000" stroke="#000000" points="1588.7286,-46861.5188 1598.8309,-46858.3261 1588.9425,-46854.5221 1588.7286,-46861.5188"/>
</g>
<!-- Fractional[io.circe.tests.examples.Foo] -->
<g id="node915" class="node">
<title>Fractional[io.circe.tests.examples.Foo]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-46790.9355" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="1643.104" y="-46794.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[io.circe.tests.examples.Foo]</text>
<text text-anchor="middle" x="1749.604" y="-46779.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[io.circe.tests.examples.Foo]&#45;&gt;Fractional[io.circe.tests.examples.Foo] -->
<g id="edge638" class="edge">
<title>org.scalacheck.Shrink[io.circe.tests.examples.Foo]&#45;&gt;Fractional[io.circe.tests.examples.Foo]</title>
<path fill="none" stroke="#000000" d="M774.4782,-46820.7469C1002.0056,-46813.791 1367.3494,-46802.6218 1580.3259,-46796.1107"/>
<polygon fill="#000000" stroke="#000000" points="1580.463,-46799.6082 1590.3514,-46795.8042 1580.249,-46792.6115 1580.463,-46799.6082"/>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int)] -->
<g id="node665" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-6410.9355" rx="144.5" ry="26.7407"/>
<text text-anchor="start" x="5073.7166" y="-6414.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-6399.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q] -->
<g id="node666" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-54908.9355" rx="491.3784" ry="26.7407"/>
<text text-anchor="start" x="232.5494" y="-54912.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q]</text>
<text text-anchor="middle" x="572.0494" y="-54897.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.JsonObject] -->
<g id="node668" class="node">
<title>org.scalacheck.Arbitrary[io.circe.JsonObject]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-54980.9355" rx="186.8525" ry="26.7407"/>
<text text-anchor="start" x="448.0494" y="-54984.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.JsonObject]</text>
<text text-anchor="middle" x="572.0494" y="-54969.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 1ms</text>
</g>
<!-- Option[Boolean] =&gt; ?{def ===: ?} -->
<g id="node669" class="node">
<title>Option[Boolean] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-17322.9355" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="12318.4214" y="-17326.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Boolean] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="12415.9214" y="-17311.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.Eq[Option[Boolean]] -->
<g id="node1957" class="node">
<title>cats.Eq[Option[Boolean]]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-17322.9355" rx="111.0315" ry="26.7407"/>
<text text-anchor="start" x="13060.5282" y="-17326.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[Boolean]]</text>
<text text-anchor="middle" x="13131.0282" y="-17311.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 7ms</text>
</g>
<!-- Option[Boolean] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Boolean]] -->
<g id="edge873" class="edge">
<title>Option[Boolean] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Boolean]]</title>
<path fill="none" stroke="#000000" d="M12565.3958,-17322.9355C12697.2159,-17322.9355 12886.9073,-17322.9355 13009.5688,-17322.9355"/>
<polygon fill="#000000" stroke="#000000" points="13009.752,-17326.4356 13019.752,-17322.9355 13009.752,-17319.4356 13009.752,-17326.4356"/>
</g>
<!-- json.type =&gt; ?{def ===: ?} -->
<g id="node670" class="node">
<title>json.type =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-16442.9355" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="13054.5282" y="-16446.7355" font-family="Times,serif" font-size="14.00" fill="#000000">json.type =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="13131.0282" y="-16431.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.Eq[io.circe.Json] -->
<g id="node1729" class="node">
<title>cats.Eq[io.circe.Json]</title>
<ellipse fill="none" stroke="#000000" cx="13803.7086" cy="-16389.9355" rx="94.5053" ry="26.7407"/>
<text text-anchor="start" x="13744.7086" y="-16393.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[io.circe.Json]</text>
<text text-anchor="middle" x="13803.7086" y="-16378.7355" font-family="Times,serif" font-size="14.00" fill="#000000">60 times = 340ms</text>
</g>
<!-- json.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.Json] -->
<g id="edge1233" class="edge">
<title>json.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M13243.999,-16434.0347C13372.0329,-16423.947 13578.8806,-16407.6496 13702.0408,-16397.9459"/>
<polygon fill="#000000" stroke="#000000" points="13702.5316,-16401.4182 13712.2257,-16397.1434 13701.9817,-16394.4398 13702.5316,-16401.4182"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D] -->
<g id="node671" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-55052.9355" rx="317.4819" ry="26.7407"/>
<text text-anchor="start" x="355.5494" y="-55056.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D]</text>
<text text-anchor="middle" x="572.0494" y="-55041.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Int,Option[Int]] -->
<g id="node1760" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Int,Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-7274.9355" rx="233.1906" ry="26.7407"/>
<text text-anchor="start" x="6065.2346" y="-7278.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Int,Option[Int]]</text>
<text text-anchor="middle" x="6222.2346" y="-7263.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Int,Option[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,Option[Int]] -->
<g id="edge921" class="edge">
<title>org.scalacheck.util.Buildable[Int,Option[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,Option[Int]]</title>
<path fill="none" stroke="#000000" d="M5354.4216,-7274.9355C5528.1893,-7274.9355 5788.213,-7274.9355 5978.3231,-7274.9355"/>
<polygon fill="#000000" stroke="#000000" points="5978.4598,-7278.4356 5988.4598,-7274.9355 5978.4597,-7271.4356 5978.4598,-7278.4356"/>
</g>
<!-- shapeless.IsTuple[Long] -->
<g id="node673" class="node">
<title>shapeless.IsTuple[Long]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-55160.9355" rx="106.1321" ry="26.7407"/>
<text text-anchor="start" x="1682.604" y="-55164.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Long]</text>
<text text-anchor="middle" x="1749.604" y="-55149.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 3ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[String,Int]] -->
<g id="node674" class="node">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-5966.9355" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="2747.9013" y="-5970.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[scala.collection.immutable.Map[String,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-5955.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- scala.collection.immutable.Map[String,Int] =&gt; Traversable[(String, Int)] -->
<g id="node840" class="node">
<title>scala.collection.immutable.Map[String,Int] =&gt; Traversable[(String, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-6182.9355" rx="293.3986" ry="26.7407"/>
<text text-anchor="start" x="3871.2721" y="-6186.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[String,Int] =&gt; Traversable[(String, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-6171.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[String,Int]]&#45;&gt;scala.collection.immutable.Map[String,Int] =&gt; Traversable[(String, Int)] -->
<g id="edge174" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[String,Int]]&#45;&gt;scala.collection.immutable.Map[String,Int] =&gt; Traversable[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M3133.2829,-5949.0022C3259.0642,-5949.6837 3414.214,-5974.2091 3507.6933,-6074.9355 3529.5951,-6098.5354 3492.4103,-6124.6972 3515.6933,-6146.9355 3558.4859,-6187.808 3687.5203,-6197.7973 3810.4162,-6197.1056"/>
<polygon fill="#000000" stroke="#000000" points="3810.7928,-6200.6028 3820.7643,-6197.0224 3810.7365,-6193.603 3810.7928,-6200.6028"/>
</g>
<!-- org.scalacheck.util.Buildable[(String, Int),scala.collection.immutable.Map[String,Int]] -->
<g id="node985" class="node">
<title>org.scalacheck.util.Buildable[(String, Int),scala.collection.immutable.Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-6038.9355" rx="345.5506" ry="26.7407"/>
<text text-anchor="start" x="3834.2721" y="-6042.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(String, Int),scala.collection.immutable.Map[String,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-6027.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[String,Int]]&#45;&gt;org.scalacheck.util.Buildable[(String, Int),scala.collection.immutable.Map[String,Int]] -->
<g id="edge306" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[String,Int]]&#45;&gt;org.scalacheck.util.Buildable[(String, Int),scala.collection.immutable.Map[String,Int]]</title>
<path fill="none" stroke="#000000" d="M3159.9151,-5981.376C3342.133,-5992.8908 3598.0775,-6009.0647 3792.2764,-6021.3366"/>
<polygon fill="#000000" stroke="#000000" points="3792.1484,-6024.8354 3802.3493,-6021.9732 3792.59,-6017.8494 3792.1484,-6024.8354"/>
</g>
<!-- Fractional[scala.collection.immutable.Map[String,Int]] -->
<g id="node1323" class="node">
<title>Fractional[scala.collection.immutable.Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-5966.9355" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="3920.2721" y="-5970.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[scala.collection.immutable.Map[String,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-5955.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[String,Int]]&#45;&gt;Fractional[scala.collection.immutable.Map[String,Int]] -->
<g id="edge1086" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[String,Int]]&#45;&gt;Fractional[scala.collection.immutable.Map[String,Int]]</title>
<path fill="none" stroke="#000000" d="M3202.4999,-5966.9355C3395.4148,-5966.9355 3652.0086,-5966.9355 3836.1485,-5966.9355"/>
<polygon fill="#000000" stroke="#000000" points="3836.238,-5970.4356 3846.238,-5966.9355 3836.2379,-5963.4356 3836.238,-5970.4356"/>
</g>
<!-- org.scalacheck.Shrink[(String, Int)] -->
<g id="node1583" class="node">
<title>org.scalacheck.Shrink[(String, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-5822.9355" rx="148.4848" ry="26.7407"/>
<text text-anchor="start" x="3973.7721" y="-5826.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(String, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-5811.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[String,Int]]&#45;&gt;org.scalacheck.Shrink[(String, Int)] -->
<g id="edge1422" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[String,Int]]&#45;&gt;org.scalacheck.Shrink[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M3042.2634,-5942.4055C3159.3395,-5917.452 3349.6,-5879.5986 3515.6933,-5858.9355 3649.6292,-5842.273 3802.7663,-5833.0742 3914.2186,-5828.1558"/>
<polygon fill="#000000" stroke="#000000" points="3914.6944,-5831.6385 3924.533,-5827.7076 3914.3905,-5824.6451 3914.6944,-5831.6385"/>
</g>
<!-- Integral[scala.collection.immutable.Map[String,Int]] -->
<g id="node1959" class="node">
<title>Integral[scala.collection.immutable.Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-5894.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="3926.2721" y="-5898.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[scala.collection.immutable.Map[String,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-5883.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[String,Int]]&#45;&gt;Integral[scala.collection.immutable.Map[String,Int]] -->
<g id="edge1034" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[String,Int]]&#45;&gt;Integral[scala.collection.immutable.Map[String,Int]]</title>
<path fill="none" stroke="#000000" d="M3159.9151,-5952.4951C3366.9555,-5939.4117 3669.1773,-5920.3134 3867.8603,-5907.7581"/>
<polygon fill="#000000" stroke="#000000" points="3868.3695,-5911.233 3878.1288,-5907.1092 3867.928,-5904.2469 3868.3695,-5911.233"/>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="node675" class="node">
<title>cats.kernel.Eq[scala.collection.immutable.SortedMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-55268.9355" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="394.5494" y="-55272.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.collection.immutable.SortedMap[Long,Int]]</text>
<text text-anchor="middle" x="572.0494" y="-55257.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Shrink[Unit] -->
<g id="node677" class="node">
<title>org.scalacheck.Shrink[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-55340.9355" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="495.0494" y="-55344.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Unit]</text>
<text text-anchor="middle" x="572.0494" y="-55329.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- Integral[Unit] -->
<g id="node839" class="node">
<title>Integral[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-55376.9355" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="1709.604" y="-55380.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Unit]</text>
<text text-anchor="middle" x="1749.604" y="-55365.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Unit]&#45;&gt;Integral[Unit] -->
<g id="edge783" class="edge">
<title>org.scalacheck.Shrink[Unit]&#45;&gt;Integral[Unit]</title>
<path fill="none" stroke="#000000" d="M691.1669,-55344.5772C931.8194,-55351.9344 1470.1497,-55368.3921 1671.5631,-55374.5497"/>
<polygon fill="#000000" stroke="#000000" points="1671.6578,-55378.0541 1681.7601,-55374.8614 1671.8718,-55371.0574 1671.6578,-55378.0541"/>
</g>
<!-- Fractional[Unit] -->
<g id="node1468" class="node">
<title>Fractional[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-55304.9355" rx="73.5782" ry="26.7407"/>
<text text-anchor="start" x="1705.604" y="-55308.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Unit]</text>
<text text-anchor="middle" x="1749.604" y="-55293.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Unit]&#45;&gt;Fractional[Unit] -->
<g id="edge1141" class="edge">
<title>org.scalacheck.Shrink[Unit]&#45;&gt;Fractional[Unit]</title>
<path fill="none" stroke="#000000" d="M691.1669,-55337.2939C929.6404,-55330.0033 1460.4255,-55313.7763 1666.0096,-55307.4912"/>
<polygon fill="#000000" stroke="#000000" points="1666.2522,-55310.9855 1676.1405,-55307.1815 1666.0382,-55303.9888 1666.2522,-55310.9855"/>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc11] -->
<g id="node678" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc11]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-55448.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-55452.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc11]</text>
<text text-anchor="middle" x="572.0494" y="-55437.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc11]] -->
<g id="node1305" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc11]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-55448.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="1549.604" y="-55452.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc11]]</text>
<text text-anchor="middle" x="1749.604" y="-55437.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc11]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc11]] -->
<g id="edge1580" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc11]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc11]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-55448.9355C951.3519,-55448.9355 1231.2937,-55448.9355 1445.2652,-55448.9355"/>
<polygon fill="#000000" stroke="#000000" points="1445.4039,-55452.4356 1455.4038,-55448.9355 1445.4038,-55445.4356 1445.4039,-55452.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]] -->
<g id="node679" class="node">
<title>org.scalacheck.Arbitrary[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-1882.9355" rx="367.8912" ry="26.7407"/>
<text text-anchor="start" x="2679.4013" y="-1886.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-1871.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- org.scalacheck.Arbitrary[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1526" class="edge">
<title>org.scalacheck.Arbitrary[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M3077.3754,-1907.6405C3195.2689,-1926.4517 3365.6545,-1951.0683 3515.6933,-1962.9355 3809.3438,-1986.1616 4694.9625,-1995.2906 5033.8378,-1997.9934"/>
<polygon fill="#000000" stroke="#000000" points="5033.9206,-2001.494 5043.948,-1998.0734 5033.9761,-1994.4942 5033.9206,-2001.494"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]] -->
<g id="node1970" class="node">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-1782.9355" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="3891.7721" y="-1786.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-1771.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Arbitrary[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]&#45;&gt;org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]] -->
<g id="edge899" class="edge">
<title>org.scalacheck.Arbitrary[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]&#45;&gt;org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M3121.6443,-1859.9411C3235.7828,-1846.6833 3383.9153,-1830.4202 3515.6933,-1818.9355 3617.7862,-1810.038 3730.6199,-1802.331 3827.7464,-1796.3564"/>
<polygon fill="#000000" stroke="#000000" points="3828.2306,-1799.8334 3837.998,-1795.7286 3827.8027,-1792.8465 3828.2306,-1799.8334"/>
</g>
<!-- cats.kernel.Eq[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]] -->
<g id="node680" class="node">
<title>cats.kernel.Eq[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]</title>
<ellipse fill="none" stroke="#000000" cx="16788.8083" cy="-14580.9355" rx="473.5232" ry="26.7407"/>
<text text-anchor="start" x="16461.8083" y="-14584.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]</text>
<text text-anchor="middle" x="16788.8083" y="-14569.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 39ms</text>
</g>
<!-- cats.Order[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]] -->
<g id="node841" class="node">
<title>cats.Order[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="17757.7665" cy="-14508.9355" rx="420.9572" ry="26.7407"/>
<text text-anchor="start" x="17468.2665" y="-14512.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Order[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]]</text>
<text text-anchor="middle" x="17757.7665" y="-14497.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.Order[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]] -->
<g id="edge1151" class="edge">
<title>cats.kernel.Eq[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.Order[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]]</title>
<path fill="none" stroke="#000000" d="M17075.0764,-14559.5047C17139.3916,-14554.7008 17207.3158,-14549.6359 17270.5699,-14544.9355 17335.7346,-14540.0932 17405.8036,-14534.9049 17471.9226,-14530.0173"/>
<polygon fill="#000000" stroke="#000000" points="17472.358,-14533.4948 17482.0728,-14529.2671 17471.842,-14526.5138 17472.358,-14533.4948"/>
</g>
<!-- cats.Eq[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]] -->
<g id="node852" class="node">
<title>cats.Eq[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="17757.7665" cy="-14724.9355" rx="408.9155" ry="26.7407"/>
<text text-anchor="start" x="17476.7665" y="-14728.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]]</text>
<text text-anchor="middle" x="17757.7665" y="-14713.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 29ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.Eq[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]] -->
<g id="edge18" class="edge">
<title>cats.kernel.Eq[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.Eq[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]]</title>
<path fill="none" stroke="#000000" d="M16886.741,-14607.3322C16983.5262,-14632.3629 17136.1796,-14669.0168 17270.5699,-14688.9355 17321.4069,-14696.4704 17375.4736,-14702.4552 17428.3928,-14707.2016"/>
<polygon fill="#000000" stroke="#000000" points="17428.3399,-14710.7105 17438.6091,-14708.104 17428.9558,-14703.7377 17428.3399,-14710.7105"/>
</g>
<!-- cats.PartialOrder[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]] -->
<g id="node919" class="node">
<title>cats.PartialOrder[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="17757.7665" cy="-14436.9355" rx="445.4545" ry="26.7407"/>
<text text-anchor="start" x="17450.7665" y="-14440.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.PartialOrder[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]]</text>
<text text-anchor="middle" x="17757.7665" y="-14425.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.PartialOrder[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]] -->
<g id="edge1030" class="edge">
<title>cats.kernel.Eq[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.PartialOrder[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]]</title>
<path fill="none" stroke="#000000" d="M16886.741,-14554.5389C16983.5262,-14529.5082 17136.1796,-14492.8543 17270.5699,-14472.9355 17317.3692,-14465.9991 17366.9055,-14460.3763 17415.7639,-14455.824"/>
<polygon fill="#000000" stroke="#000000" points="17416.213,-14459.2976 17425.8513,-14454.8983 17415.5732,-14452.3269 17416.213,-14459.2976"/>
</g>
<!-- shapeless.IsTuple[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]] -->
<g id="node1008" class="node">
<title>shapeless.IsTuple[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]</title>
<ellipse fill="none" stroke="#000000" cx="17757.7665" cy="-14652.9355" rx="487.3932" ry="26.7407"/>
<text text-anchor="start" x="17421.2665" y="-14656.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]</text>
<text text-anchor="middle" x="17757.7665" y="-14641.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;shapeless.IsTuple[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]] -->
<g id="edge985" class="edge">
<title>cats.kernel.Eq[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;shapeless.IsTuple[cats.data.EitherT[io.circe.AccumulatingDecoder,cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]</title>
<path fill="none" stroke="#000000" d="M17075.0764,-14602.3664C17139.3916,-14607.1703 17207.3158,-14612.2352 17270.5699,-14616.9355 17330.4595,-14621.3859 17394.4915,-14626.1285 17455.7926,-14630.6612"/>
<polygon fill="#000000" stroke="#000000" points="17455.773,-14634.1693 17466.0039,-14631.4162 17456.2892,-14627.1883 17455.773,-14634.1693"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam -->
<g id="node681" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-55520.9355" rx="347.379" ry="26.7407"/>
<text text-anchor="start" x="334.5494" y="-55524.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-55509.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.functor.Invariant[io.circe.AccumulatingDecoder] -->
<g id="node682" class="node">
<title>cats.functor.Invariant[io.circe.AccumulatingDecoder]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-55592.9355" rx="218.492" ry="26.7407"/>
<text text-anchor="start" x="1603.104" y="-55596.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.functor.Invariant[io.circe.AccumulatingDecoder]</text>
<text text-anchor="middle" x="1749.604" y="-55581.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc13] -->
<g id="node683" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc13]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-49760.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-49764.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc13]</text>
<text text-anchor="middle" x="572.0494" y="-49749.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc13]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc13]] -->
<g id="edge928" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc13]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc13]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-49760.9355C951.3519,-49760.9355 1231.2937,-49760.9355 1445.2652,-49760.9355"/>
<polygon fill="#000000" stroke="#000000" points="1445.4039,-49764.4356 1455.4038,-49760.9355 1445.4038,-49757.4356 1445.4039,-49764.4356"/>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node684" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-20006.9355" rx="366.0628" ry="26.7407"/>
<text text-anchor="start" x="1498.604" y="-20010.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-19995.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Printer.spaces2&#39;) =&gt; ?{def should: ?} -->
<g id="node685" class="node">
<title>String(&#39;Printer.spaces2&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-30158.9355" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="450.0494" y="-30162.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Printer.spaces2&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-30147.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- String(&#39;Printer.spaces2&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1256" class="edge">
<title>String(&#39;Printer.spaces2&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M743.367,-30168.8099C888.9699,-30173.5524 1083.7165,-30170.1064 1144.0988,-30122.9355 1463.2045,-29873.6493 1703.0938,-28497.1703 1743.5643,-28252.2235"/>
<polygon fill="#000000" stroke="#000000" points="1747.067,-28252.4924 1745.2366,-28242.0569 1740.1598,-28251.3561 1747.067,-28252.4924"/>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node686" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-12114.9355" rx="532.4028" ry="26.7407"/>
<text text-anchor="start" x="4799.2166" y="-12118.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-12103.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O] -->
<g id="node687" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-55664.9355" rx="444.1261" ry="26.7407"/>
<text text-anchor="start" x="266.0494" y="-55668.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O]</text>
<text text-anchor="middle" x="572.0494" y="-55653.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Either[Int,String]] -->
<g id="node688" class="node">
<title>scala.reflect.ClassTag[Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-11034.9355" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="3959.2721" y="-11038.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Either[Int,String]]</text>
<text text-anchor="middle" x="4070.7721" y="-11023.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 5ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N] -->
<g id="node689" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-55736.9355" rx="402.1876" ry="26.7407"/>
<text text-anchor="start" x="295.5494" y="-55740.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N]</text>
<text text-anchor="middle" x="572.0494" y="-55725.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String) -->
<g id="node690" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-55808.9355" rx="241.6612" ry="26.7407"/>
<text text-anchor="start" x="409.0494" y="-55812.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String)</text>
<text text-anchor="middle" x="572.0494" y="-55797.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.KeyEncoder[Int]] -->
<g id="node691" class="node">
<title>org.scalacheck.Arbitrary[io.circe.KeyEncoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-3014.9355" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="2791.4013" y="-3018.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.KeyEncoder[Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-3003.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.KeyEncoder[Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge175" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.KeyEncoder[Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M3119.9029,-3026.6413C3232.4641,-3033.6486 3378.2586,-3042.7551 3507.6933,-3050.9355 3660.8336,-3060.6142 3837.3909,-3071.9274 3951.3677,-3079.2508"/>
<polygon fill="#000000" stroke="#000000" points="3951.3102,-3082.7542 3961.5141,-3079.9028 3951.7592,-3075.7686 3951.3102,-3082.7542"/>
</g>
<!-- io.circe.Decoder[List[Boolean]] -->
<g id="node692" class="node">
<title>io.circe.Decoder[List[Boolean]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-55880.9355" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="484.5494" y="-55884.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[List[Boolean]]</text>
<text text-anchor="middle" x="572.0494" y="-55869.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 8ms</text>
</g>
<!-- io.circe.Decoder[Boolean] -->
<g id="node1492" class="node">
<title>io.circe.Decoder[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-55880.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="1677.104" y="-55884.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Boolean]</text>
<text text-anchor="middle" x="1749.604" y="-55869.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 10ms</text>
</g>
<!-- io.circe.Decoder[List[Boolean]]&#45;&gt;io.circe.Decoder[Boolean] -->
<g id="edge35" class="edge">
<title>io.circe.Decoder[List[Boolean]]&#45;&gt;io.circe.Decoder[Boolean]</title>
<path fill="none" stroke="#000000" d="M707.1299,-55880.9355C937.3825,-55880.9355 1402.5224,-55880.9355 1625.2445,-55880.9355"/>
<polygon fill="#000000" stroke="#000000" points="1625.3403,-55884.4356 1635.3403,-55880.9355 1625.3402,-55877.4356 1625.3403,-55884.4356"/>
</g>
<!-- b.type =&gt; ?{def asJson: ?} -->
<g id="node693" class="node">
<title>b.type =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-55952.9355" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="498.0494" y="-55956.7355" font-family="Times,serif" font-size="14.00" fill="#000000">b.type =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-55941.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;a stateful Decoder with requireEmpty&#39;) =&gt; ?{def should: ?} -->
<g id="node694" class="node">
<title>String(&#39;a stateful Decoder with requireEmpty&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-30086.9355" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="388.5494" y="-30090.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;a stateful Decoder with requireEmpty&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-30075.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;a stateful Decoder with requireEmpty&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1496" class="edge">
<title>String(&#39;a stateful Decoder with requireEmpty&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M818.3587,-30098.1168C949.2797,-30098.9463 1093.4447,-30090.0492 1144.0988,-30050.9355 1453.1445,-29812.2991 1700.5912,-28490.8748 1743.1321,-28251.9673"/>
<polygon fill="#000000" stroke="#000000" points="1746.5931,-28252.4948 1744.8931,-28242.0372 1739.7007,-28251.2724 1746.5931,-28252.4948"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION) -->
<g id="node695" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-56024.9355" rx="289.4135" ry="26.7407"/>
<text text-anchor="start" x="375.5494" y="-56028.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-56013.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T] -->
<g id="node696" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-56096.9355" rx="544.4444" ry="26.7407"/>
<text text-anchor="start" x="195.0494" y="-56100.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T]</text>
<text text-anchor="middle" x="572.0494" y="-56085.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Integral[Double] -->
<g id="node697" class="node">
<title>Integral[Double]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-38222.9355" rx="75.8212" ry="26.7407"/>
<text text-anchor="start" x="1704.104" y="-38226.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Double]</text>
<text text-anchor="middle" x="1749.604" y="-38211.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 7ms</text>
</g>
<!-- cats.Applicative[Option] -->
<g id="node698" class="node">
<title>cats.Applicative[Option]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-56168.9355" rx="106.5467" ry="26.7407"/>
<text text-anchor="start" x="504.5494" y="-56172.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Applicative[Option]</text>
<text text-anchor="middle" x="572.0494" y="-56157.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[None.type] -->
<g id="node700" class="node">
<title>shapeless.IsTuple[None.type]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-56240.9355" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="1668.604" y="-56244.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[None.type]</text>
<text text-anchor="middle" x="1749.604" y="-56229.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[Int :: String :: Char :: shapeless.HNil] -->
<g id="node701" class="node">
<title>cats.kernel.Eq[Int :: String :: Char :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-14478.9355" rx="214.9209" ry="26.7407"/>
<text text-anchor="start" x="11514.3883" y="-14482.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: String :: Char :: shapeless.HNil]</text>
<text text-anchor="middle" x="11658.3883" y="-14467.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 90ms</text>
</g>
<!-- cats.kernel.Eq[Int :: String :: Char :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[String :: Char :: shapeless.HNil] -->
<g id="edge855" class="edge">
<title>cats.kernel.Eq[Int :: String :: Char :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[String :: Char :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M11870.5804,-14474.4816C11929.1152,-14480.3209 11990.9886,-14493.4627 12043.7615,-14519.9355 12214.6367,-14605.6532 12346.6132,-14804.5946 12395.4321,-14886.1158"/>
<polygon fill="#000000" stroke="#000000" points="12392.5922,-14888.1887 12400.7034,-14895.0048 12398.6131,-14884.6182 12392.5922,-14888.1887"/>
</g>
<!-- cats.kernel.Eq[Int :: String :: Char :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge642" class="edge">
<title>cats.kernel.Eq[Int :: String :: Char :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M11771.3412,-14456.009C11859.1342,-14445.4476 11976.879,-14448.5414 12043.7615,-14521.9355 12060.0793,-14539.8421 12035.0782,-14940.3691 12051.7615,-14957.9355 12163.4905,-15075.5796 12665.6717,-14893.8968 12780.0814,-15008.9355 12799.5531,-15028.5142 12768.115,-15113.8617 12788.0814,-15132.9355 12869.6941,-15210.8995 13690.8414,-15151.9355 13803.7086,-15151.9355 13803.7086,-15151.9355 13803.7086,-15151.9355 14433.9626,-15151.9355 14748.4043,-15151.9355 16953.041,-15184.5686 17262.5699,-15239.9355 18045.7328,-15380.0239 18482.5676,-15168.634 18961.484,-15803.9355 18974.337,-15820.9855 18954.5647,-15980.6609 18969.484,-15995.9355 19026.6994,-16054.5136 19624.836,-16026.6516 19704.8751,-16043.9355 19788.6462,-16062.0254 19880.4694,-16099.9305 19937.7384,-16125.9092"/>
<polygon fill="#000000" stroke="#000000" points="19936.4243,-16129.1569 19946.9742,-16130.1316 19939.3348,-16122.7906 19936.4243,-16129.1569"/>
</g>
<!-- shapeless.IsTuple[Int :: String :: Char :: shapeless.HNil] -->
<g id="node1472" class="node">
<title>shapeless.IsTuple[Int :: String :: Char :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-14478.9355" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="12262.4214" y="-14482.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Int :: String :: Char :: shapeless.HNil]</text>
<text text-anchor="middle" x="12415.9214" y="-14467.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[Int :: String :: Char :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[Int :: String :: Char :: shapeless.HNil] -->
<g id="edge552" class="edge">
<title>cats.kernel.Eq[Int :: String :: Char :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[Int :: String :: Char :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M11873.4406,-14478.9355C11968.1797,-14478.9355 12079.8399,-14478.9355 12177.1524,-14478.9355"/>
<polygon fill="#000000" stroke="#000000" points="12177.4286,-14482.4356 12187.4285,-14478.9355 12177.4285,-14475.4356 12177.4286,-14482.4356"/>
</g>
<!-- io.circe.Encoder[Float] -->
<g id="node702" class="node">
<title>io.circe.Encoder[Float]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-56312.9355" rx="101.2327" ry="26.7407"/>
<text text-anchor="start" x="508.5494" y="-56316.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Float]</text>
<text text-anchor="middle" x="572.0494" y="-56301.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 4ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L] -->
<g id="node704" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-56384.9355" rx="400.445" ry="26.7407"/>
<text text-anchor="start" x="297.0494" y="-56388.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L]</text>
<text text-anchor="middle" x="572.0494" y="-56373.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Vector[io.circe.Json]] -->
<g id="node705" class="node">
<title>scala.reflect.ClassTag[Vector[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-9366.9355" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="5046.2166" y="-9370.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Vector[io.circe.Json]]</text>
<text text-anchor="middle" x="5167.7166" y="-9355.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc1] -->
<g id="node706" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc1]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-52748.9355" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="423.5494" y="-52752.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc1]</text>
<text text-anchor="middle" x="572.0494" y="-52737.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc1]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc1] -->
<g id="edge289" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc1]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc1]</title>
<path fill="none" stroke="#000000" d="M793.5384,-52748.9355C1003.7878,-52748.9355 1318.0755,-52748.9355 1528.2728,-52748.9355"/>
<polygon fill="#000000" stroke="#000000" points="1528.5155,-52752.4356 1538.5154,-52748.9355 1528.5154,-52745.4356 1528.5155,-52752.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc19] -->
<g id="node708" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc19]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-56456.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="420.0494" y="-56460.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc19]</text>
<text text-anchor="middle" x="572.0494" y="-56445.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc19] -->
<g id="node1049" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc19]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-56456.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="1605.104" y="-56460.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc19]</text>
<text text-anchor="middle" x="1749.604" y="-56445.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc19]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc19] -->
<g id="edge762" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc19]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc19]</title>
<path fill="none" stroke="#000000" d="M798.3967,-56456.9355C1007.0924,-56456.9355 1315.2165,-56456.9355 1523.754,-56456.9355"/>
<polygon fill="#000000" stroke="#000000" points="1523.9188,-56460.4356 1533.9188,-56456.9355 1523.9187,-56453.4356 1523.9188,-56460.4356"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int)] -->
<g id="node710" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-13842.9355" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="3975.2721" y="-13846.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-13831.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1332" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4204.3096,-13854.0798C4350.1027,-13862.9581 4570.2876,-13865.6224 4625.8509,-13806.9355 4640.9771,-13790.9591 4619.2872,-13031.4264 4633.8509,-13014.9355 4745.2499,-12888.7955 4963.8083,-12904.4096 5083.8441,-12924.8221"/>
<polygon fill="#000000" stroke="#000000" points="5083.2758,-12928.2758 5093.7295,-12926.552 5084.4825,-12921.3806 5083.2758,-12928.2758"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int)]] -->
<g id="edge466" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4217.2887,-13842.9355C4394.358,-13842.9355 4695.3648,-13842.9355 4911.2161,-13842.9355"/>
<polygon fill="#000000" stroke="#000000" points="4911.4296,-13846.4356 4921.4295,-13842.9355 4911.4295,-13839.4356 4911.4296,-13846.4356"/>
</g>
<!-- shapeless.IsTuple[io.circe.Decoder.Result[List[Boolean]]] -->
<g id="node711" class="node">
<title>shapeless.IsTuple[io.circe.Decoder.Result[List[Boolean]]]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-15024.9355" rx="236.3475" ry="26.7407"/>
<text text-anchor="start" x="12972.0282" y="-15028.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.Decoder.Result[List[Boolean]]]</text>
<text text-anchor="middle" x="13131.0282" y="-15013.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.MonadError[io.circe.Decoder,io.circe.DecodingFailure] -->
<g id="node712" class="node">
<title>cats.MonadError[io.circe.Decoder,io.circe.DecodingFailure]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-56528.9355" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="406.5494" y="-56532.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.MonadError[io.circe.Decoder,io.circe.DecodingFailure]</text>
<text text-anchor="middle" x="572.0494" y="-56517.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node713" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-558.9355" rx="453.011" ry="26.7407"/>
<text text-anchor="start" x="4855.2166" y="-562.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-547.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Boolean] -->
<g id="node714" class="node">
<title>org.scalacheck.Arbitrary[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-8007.9355" rx="144.9138" ry="26.7407"/>
<text text-anchor="start" x="5073.2166" y="-8011.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Boolean]</text>
<text text-anchor="middle" x="5167.7166" y="-7996.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 19ms</text>
</g>
<!-- scala.reflect.ClassTag[Boolean] -->
<g id="node1449" class="node">
<title>scala.reflect.ClassTag[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-8007.9355" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="6135.2346" y="-8011.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Boolean]</text>
<text text-anchor="middle" x="6222.2346" y="-7996.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Boolean]&#45;&gt;scala.reflect.ClassTag[Boolean] -->
<g id="edge842" class="edge">
<title>org.scalacheck.Arbitrary[Boolean]&#45;&gt;scala.reflect.ClassTag[Boolean]</title>
<path fill="none" stroke="#000000" d="M5312.6833,-8007.9355C5514.0705,-8007.9355 5876.362,-8007.9355 6077.5818,-8007.9355"/>
<polygon fill="#000000" stroke="#000000" points="6077.6335,-8011.4356 6087.6335,-8007.9355 6077.6334,-8004.4356 6077.6335,-8011.4356"/>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc17] -->
<g id="node715" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc17]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-56600.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="1617.104" y="-56604.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc17]</text>
<text text-anchor="middle" x="1749.604" y="-56589.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.Eq[io.circe.Error] -->
<g id="node717" class="node">
<title>cats.Eq[io.circe.Error]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-56672.9355" rx="97.6615" ry="26.7407"/>
<text text-anchor="start" x="511.0494" y="-56676.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[io.circe.Error]</text>
<text text-anchor="middle" x="572.0494" y="-56661.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 17ms</text>
</g>
<!-- shapeless.IsTuple[io.circe.Error] -->
<g id="node1128" class="node">
<title>shapeless.IsTuple[io.circe.Error]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-56672.9355" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="1660.604" y="-56676.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.Error]</text>
<text text-anchor="middle" x="1749.604" y="-56661.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- cats.Eq[io.circe.Error]&#45;&gt;shapeless.IsTuple[io.circe.Error] -->
<g id="edge531" class="edge">
<title>cats.Eq[io.circe.Error]&#45;&gt;shapeless.IsTuple[io.circe.Error]</title>
<path fill="none" stroke="#000000" d="M669.6666,-56672.9355C876.0857,-56672.9355 1357.8865,-56672.9355 1602.0929,-56672.9355"/>
<polygon fill="#000000" stroke="#000000" points="1602.1097,-56676.4356 1612.1097,-56672.9355 1602.1096,-56669.4356 1602.1097,-56676.4356"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P] -->
<g id="node718" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-56744.9355" rx="478.0084" ry="26.7407"/>
<text text-anchor="start" x="242.0494" y="-56748.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P]</text>
<text text-anchor="middle" x="572.0494" y="-56733.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D] -->
<g id="node720" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-56816.9355" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="390.5494" y="-56820.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D]</text>
<text text-anchor="middle" x="572.0494" y="-56805.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node721" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-630.9355" rx="374.119" ry="26.7407"/>
<text text-anchor="start" x="4911.2166" y="-634.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-619.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- xs.type =&gt; ?{def asJson: ?} -->
<g id="node723" class="node">
<title>xs.type =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-56888.9355" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="495.5494" y="-56892.7355" font-family="Times,serif" font-size="14.00" fill="#000000">xs.type =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-56877.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[scala.util.Either[Unit,Unit]] -->
<g id="node724" class="node">
<title>cats.kernel.Eq[scala.util.Either[Unit,Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-13500.9355" rx="176.1392" ry="26.7407"/>
<text text-anchor="start" x="10741.9287" y="-13504.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.util.Either[Unit,Unit]]</text>
<text text-anchor="middle" x="10858.4287" y="-13489.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[scala.util.Either[Unit,Unit]]&#45;&gt;cats.kernel.Order[Unit] -->
<g id="edge375" class="edge">
<title>cats.kernel.Eq[scala.util.Either[Unit,Unit]]&#45;&gt;cats.kernel.Order[Unit]</title>
<path fill="none" stroke="#000000" d="M10895.9655,-13527.2236C10966.2084,-13574.8737 11123.922,-13674.6683 11273.0151,-13718.9355 11362.7144,-13745.5682 11468.8517,-13753.8791 11547.0054,-13755.9203"/>
<polygon fill="#000000" stroke="#000000" points="11547.2811,-13759.4275 11557.3589,-13756.1584 11547.4421,-13752.4293 11547.2811,-13759.4275"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[Unit,Unit]]&#45;&gt;shapeless.IsTuple[scala.util.Either[Unit,Unit]] -->
<g id="edge1143" class="edge">
<title>cats.kernel.Eq[scala.util.Either[Unit,Unit]]&#45;&gt;shapeless.IsTuple[scala.util.Either[Unit,Unit]]</title>
<path fill="none" stroke="#000000" d="M11034.9735,-13500.9355C11160.1986,-13500.9355 11328.4448,-13500.9355 11458.5919,-13500.9355"/>
<polygon fill="#000000" stroke="#000000" points="11458.6848,-13504.4356 11468.6847,-13500.9355 11458.6847,-13497.4356 11458.6848,-13504.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Set[Int]] -->
<g id="node725" class="node">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-4382.9355" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="3902.7721" y="-4386.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.collection.immutable.Set[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-4371.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Set[Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Set[Int]] -->
<g id="edge380" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Set[Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Set[Int]]</title>
<path fill="none" stroke="#000000" d="M4284.6144,-4369.1456C4387.7423,-4362.475 4513.2268,-4354.3289 4625.8509,-4346.9355 4733.4053,-4339.875 4852.9619,-4331.9411 4952.3512,-4325.322"/>
<polygon fill="#000000" stroke="#000000" points="4952.7734,-4328.8017 4962.5186,-4324.6447 4952.3081,-4321.8172 4952.7734,-4328.8017"/>
</g>
<!-- scala.collection.immutable.Set[Int] =&gt; Traversable[Int] -->
<g id="node1413" class="node">
<title>scala.collection.immutable.Set[Int] =&gt; Traversable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-4382.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="5015.7166" y="-4386.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[Int] =&gt; Traversable[Int]</text>
<text text-anchor="middle" x="5167.7166" y="-4371.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Set[Int]]&#45;&gt;scala.collection.immutable.Set[Int] =&gt; Traversable[Int] -->
<g id="edge682" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Set[Int]]&#45;&gt;scala.collection.immutable.Set[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M4319.6858,-4382.9355C4503.0109,-4382.9355 4750.7447,-4382.9355 4931.0994,-4382.9355"/>
<polygon fill="#000000" stroke="#000000" points="4931.2554,-4386.4356 4941.2554,-4382.9355 4931.2553,-4379.4356 4931.2554,-4386.4356"/>
</g>
<!-- org.scalacheck.util.Buildable[Int,scala.collection.immutable.Set[Int]] -->
<g id="node1632" class="node">
<title>org.scalacheck.util.Buildable[Int,scala.collection.immutable.Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-4454.9355" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="4978.2166" y="-4458.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Int,scala.collection.immutable.Set[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-4443.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Set[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,scala.collection.immutable.Set[Int]] -->
<g id="edge1413" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Set[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,scala.collection.immutable.Set[Int]]</title>
<path fill="none" stroke="#000000" d="M4284.6144,-4396.7255C4387.7423,-4403.3961 4513.2268,-4411.5422 4625.8509,-4418.9355 4724.6782,-4425.4232 4833.639,-4432.6482 4927.7763,-4438.9131"/>
<polygon fill="#000000" stroke="#000000" points="4927.796,-4442.4221 4938.0064,-4439.594 4928.2609,-4435.4375 4927.796,-4442.4221"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Set[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge510" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Set[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4279.0126,-4397.7071C4416.3904,-4402.3487 4579.2924,-4396.3607 4625.8509,-4346.9355 4640.9361,-4330.9215 4627.1924,-2783.904 4633.8509,-2762.9355 4736.8127,-2438.6961 5030.723,-2131.7419 5132.5088,-2032.3633"/>
<polygon fill="#000000" stroke="#000000" points="5135.0501,-2034.7742 5139.7835,-2025.2954 5130.1722,-2029.7536 5135.0501,-2034.7742"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A] -->
<g id="node726" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-56960.9355" rx="241.6612" ry="26.7407"/>
<text text-anchor="start" x="409.0494" y="-56964.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A]</text>
<text text-anchor="middle" x="572.0494" y="-56949.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Either[Int,String], Either[Int,String], Either[Int,String])] -->
<g id="node727" class="node">
<title>org.scalacheck.Arbitrary[(Either[Int,String], Either[Int,String], Either[Int,String])]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-10382.9355" rx="328.6094" ry="26.7407"/>
<text text-anchor="start" x="1525.104" y="-10386.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Either[Int,String], Either[Int,String], Either[Int,String])]</text>
<text text-anchor="middle" x="1749.604" y="-10371.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 30ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Either[Int,String], Either[Int,String], Either[Int,String])]&#45;&gt;scala.reflect.ClassTag[(Either[Int,String], Either[Int,String], Either[Int,String])] -->
<g id="edge951" class="edge">
<title>org.scalacheck.Arbitrary[(Either[Int,String], Either[Int,String], Either[Int,String])]&#45;&gt;scala.reflect.ClassTag[(Either[Int,String], Either[Int,String], Either[Int,String])]</title>
<path fill="none" stroke="#000000" d="M1997.778,-10365.2953C2139.9319,-10361.2294 2299.3401,-10368.9954 2347.1092,-10418.9355 2366.6196,-10439.3326 2335.6215,-10906.517 2355.1092,-10926.9355 2477.7085,-11055.3906 2706.5598,-11023.3165 2835.9269,-10991.3637"/>
<polygon fill="#000000" stroke="#000000" points="2836.989,-10994.7056 2845.8315,-10988.8695 2835.2796,-10987.9175 2836.989,-10994.7056"/>
</g>
<!-- org.scalacheck.Arbitrary[(Either[Int,String], Either[Int,String], Either[Int,String])]&#45;&gt;org.scalacheck.Arbitrary[Either[Int,String]] -->
<g id="edge1077" class="edge">
<title>org.scalacheck.Arbitrary[(Either[Int,String], Either[Int,String], Either[Int,String])]&#45;&gt;org.scalacheck.Arbitrary[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M2078.8004,-10382.9355C2292.46,-10382.9355 2563.3258,-10382.9355 2741.7255,-10382.9355"/>
<polygon fill="#000000" stroke="#000000" points="2741.7436,-10386.4356 2751.7435,-10382.9355 2741.7435,-10379.4356 2741.7436,-10386.4356"/>
</g>
<!-- shapeless.IsTuple[scala.collection.immutable.Stream[Int]] -->
<g id="node728" class="node">
<title>shapeless.IsTuple[scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-19066.9355" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="11498.8883" y="-19070.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="11658.3883" y="-19055.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G] -->
<g id="node729" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-57032.9355" rx="356.2637" ry="26.7407"/>
<text text-anchor="start" x="328.0494" y="-57036.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G]</text>
<text text-anchor="middle" x="572.0494" y="-57021.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc15] -->
<g id="node731" class="node">
<title>Fractional[ProductCodecSuite.this.Cc15]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-57140.9355" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="1637.604" y="-57144.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc15]</text>
<text text-anchor="middle" x="1749.604" y="-57129.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(String, Boolean),String =&gt; Boolean] -->
<g id="node732" class="node">
<title>org.scalacheck.util.Buildable[(String, Boolean),String =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-8388.9355" rx="271.558" ry="26.7407"/>
<text text-anchor="start" x="3886.7721" y="-8392.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(String, Boolean),String =&gt; Boolean]</text>
<text text-anchor="middle" x="4070.7721" y="-8377.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(String, Boolean),String =&gt; Boolean] -->
<g id="node1876" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(String, Boolean),String =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-8788.9355" rx="318.3962" ry="26.7407"/>
<text text-anchor="start" x="4950.7166" y="-8792.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(String, Boolean),String =&gt; Boolean]</text>
<text text-anchor="middle" x="5167.7166" y="-8777.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(String, Boolean),String =&gt; Boolean]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(String, Boolean),String =&gt; Boolean] -->
<g id="edge1327" class="edge">
<title>org.scalacheck.util.Buildable[(String, Boolean),String =&gt; Boolean]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(String, Boolean),String =&gt; Boolean]</title>
<path fill="none" stroke="#000000" d="M4288.7772,-8372.9037C4406.9332,-8377.0493 4544.937,-8405.2049 4625.8509,-8500.9355 4643.9349,-8522.3309 4614.3976,-8732.7772 4633.8509,-8752.9355 4670.25,-8790.6538 4778.3033,-8802.1134 4887.763,-8803.1357"/>
<polygon fill="#000000" stroke="#000000" points="4887.9943,-8806.6372 4898.0165,-8803.2014 4888.0392,-8799.6373 4887.9943,-8806.6372"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A] -->
<g id="node733" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-57176.9355" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="399.0494" y="-57180.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A]</text>
<text text-anchor="middle" x="572.0494" y="-57165.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U] -->
<g id="node734" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-57248.9355" rx="493.6211" ry="26.7407"/>
<text text-anchor="start" x="231.0494" y="-57252.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U]</text>
<text text-anchor="middle" x="572.0494" y="-57237.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[Either[Int,String]] -->
<g id="node735" class="node">
<title>io.circe.Encoder[Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-21086.9355" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="475.5494" y="-21090.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Either[Int,String]]</text>
<text text-anchor="middle" x="572.0494" y="-21075.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Encoder[Either[Int,String]]&#45;&gt;io.circe.Encoder[String] -->
<g id="edge1404" class="edge">
<title>io.circe.Encoder[Either[Int,String]]&#45;&gt;io.circe.Encoder[String]</title>
<path fill="none" stroke="#000000" d="M712.337,-21078.3579C948.7126,-21063.905 1421.6496,-21034.9879 1637.5171,-21021.7889"/>
<polygon fill="#000000" stroke="#000000" points="1637.8325,-21025.2763 1647.6003,-21021.1724 1637.4053,-21018.2893 1637.8325,-21025.2763"/>
</g>
<!-- io.circe.Encoder[Either[Int,String]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge333" class="edge">
<title>io.circe.Encoder[Either[Int,String]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M706.8208,-21075.7838C856.5729,-21066.6562 1085.1225,-21063.5242 1144.0988,-21122.9355 1166.6776,-21145.681 1129.4895,-21244.2203 1152.0988,-21266.9355 1290.7516,-21406.2387 1550.6536,-21359.3613 1676.9749,-21325.3655"/>
<polygon fill="#000000" stroke="#000000" points="1678.2189,-21328.6538 1686.9387,-21322.6359 1676.3693,-21321.9025 1678.2189,-21328.6538"/>
</g>
<!-- cats.kernel.Order[Option[io.circe.Json]] -->
<g id="node736" class="node">
<title>cats.kernel.Order[Option[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-16848.9355" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="12306.9214" y="-16852.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[Option[io.circe.Json]]</text>
<text text-anchor="middle" x="12415.9214" y="-16837.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 17ms</text>
</g>
<!-- cats.kernel.Order[Option[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json] -->
<g id="edge1295" class="edge">
<title>cats.kernel.Order[Option[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12573.2971,-16840.5728C12698.5913,-16833.9148 12872.2722,-16824.6856 12992.3808,-16818.3031"/>
<polygon fill="#000000" stroke="#000000" points="12992.581,-16821.7975 13002.3812,-16817.7717 12992.2095,-16814.8074 12992.581,-16821.7975"/>
</g>
<!-- org.scalacheck.Arbitrary[Array[String]] -->
<g id="node738" class="node">
<title>org.scalacheck.Arbitrary[Array[String]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-11178.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="2822.9013" y="-11182.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Array[String]]</text>
<text text-anchor="middle" x="2931.4013" y="-11167.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Array[String]]&#45;&gt;scala.reflect.ClassTag[Array[String]] -->
<g id="edge1094" class="edge">
<title>org.scalacheck.Arbitrary[Array[String]]&#45;&gt;scala.reflect.ClassTag[Array[String]]</title>
<path fill="none" stroke="#000000" d="M3077.6244,-11166.4657C3228.9846,-11157.1737 3451.1112,-11154.876 3507.6933,-11214.9355 3521.4078,-11229.4929 3501.9961,-14080.3619 3515.6933,-14094.9355 3569.0579,-14151.7151 3775.7185,-14151.215 3921.2,-14143.0881"/>
<polygon fill="#000000" stroke="#000000" points="3921.7841,-14146.5603 3931.566,-14142.4904 3921.3811,-14139.5719 3921.7841,-14146.5603"/>
</g>
<!-- org.scalacheck.Arbitrary[Array[String]]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge1123" class="edge">
<title>org.scalacheck.Arbitrary[Array[String]]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M3077.8736,-11191.336C3229.1435,-11200.532 3450.9046,-11202.7134 3507.6933,-11142.9355 3521.4691,-11128.4346 3501.7533,-10437.2787 3515.6933,-10422.9355 3601.7312,-10334.4097 4539.7263,-10467.377 4625.8509,-10378.9355 4649.5734,-10354.5749 4610.5144,-9791.6662 4633.8509,-9766.9355 4686.0724,-9711.5945 4889.9782,-9711.5098 5030.1142,-9718.6309"/>
<polygon fill="#000000" stroke="#000000" points="5030.3416,-9722.1476 5040.5118,-9719.1783 5030.7097,-9715.1573 5030.3416,-9722.1476"/>
</g>
<!-- Array[String] =&gt; Traversable[String] -->
<g id="node1267" class="node">
<title>Array[String] =&gt; Traversable[String]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-11250.9355" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="3968.7721" y="-11254.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; Traversable[String]</text>
<text text-anchor="middle" x="4070.7721" y="-11239.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Array[String]]&#45;&gt;Array[String] =&gt; Traversable[String] -->
<g id="edge1516" class="edge">
<title>org.scalacheck.Arbitrary[Array[String]]&#45;&gt;Array[String] =&gt; Traversable[String]</title>
<path fill="none" stroke="#000000" d="M3085.5038,-11188.5008C3201.5742,-11195.7202 3364.6273,-11205.8936 3507.6933,-11214.9355 3645.2942,-11223.6321 3801.8009,-11233.6483 3914.8282,-11240.9041"/>
<polygon fill="#000000" stroke="#000000" points="3914.7378,-11244.4054 3924.9415,-11241.5534 3915.1864,-11237.4198 3914.7378,-11244.4054"/>
</g>
<!-- org.scalacheck.util.Buildable[String,Array[String]] -->
<g id="node1585" class="node">
<title>org.scalacheck.util.Buildable[String,Array[String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-11178.9355" rx="207.7788" ry="26.7407"/>
<text text-anchor="start" x="3931.7721" y="-11182.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[String,Array[String]]</text>
<text text-anchor="middle" x="4070.7721" y="-11167.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Array[String]]&#45;&gt;org.scalacheck.util.Buildable[String,Array[String]] -->
<g id="edge103" class="edge">
<title>org.scalacheck.Arbitrary[Array[String]]&#45;&gt;org.scalacheck.util.Buildable[String,Array[String]]</title>
<path fill="none" stroke="#000000" d="M3096.1626,-11178.9355C3295.5403,-11178.9355 3631.895,-11178.9355 3852.6359,-11178.9355"/>
<polygon fill="#000000" stroke="#000000" points="3852.7311,-11182.4356 3862.731,-11178.9355 3852.731,-11175.4356 3852.7311,-11182.4356"/>
</g>
<!-- cats.Applicative[List] -->
<g id="node739" class="node">
<title>cats.Applicative[List]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-57320.9355" rx="94.5053" ry="26.7407"/>
<text text-anchor="start" x="513.0494" y="-57324.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Applicative[List]</text>
<text text-anchor="middle" x="572.0494" y="-57309.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge267" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M9367.9483,-17481.8353C9447.9805,-17502.0294 9529.7667,-17538.9551 9580.2431,-17605.9355 9594.6303,-17625.0269 9576.1747,-17800.3001 9588.2431,-17820.9355 9815.4746,-18209.4742 10029.2589,-18194.9524 10451.8423,-18349.9355 10798.5641,-18477.0964 10905.0447,-18445.5707 11273.0151,-18476.9355 11779.2081,-18520.0822 11907.8929,-18495.9355 12415.9214,-18495.9355 12415.9214,-18495.9355 12415.9214,-18495.9355 18607.2235,-18495.9355 19153.0838,-18495.9355 19413.355,-18406.4325 19704.8751,-17944.9355 19716.0631,-17927.2241 19710.6009,-17588.7609 19712.8751,-17567.9355 19773.4713,-17013.0416 19941.8405,-16351.9259 19984.4207,-16190.0437"/>
<polygon fill="#000000" stroke="#000000" points="19987.8749,-16190.6712 19987.041,-16180.1092 19981.1063,-16188.8859 19987.8749,-16190.6712"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node1382" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="10016.0427" cy="-17009.9355" rx="427.5993" ry="26.7407"/>
<text text-anchor="start" x="9721.5427" y="-17013.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="10016.0427" y="-16998.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 720ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1068" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M9505.5508,-17444.0312C9531.3438,-17437.169 9556.4965,-17428.5903 9580.2431,-17417.9355 9771.1539,-17332.2763 9931.9938,-17127.9657 9991.4539,-17045.4286"/>
<polygon fill="#000000" stroke="#000000" points="9994.5798,-17047.0741 9997.5463,-17036.903 9988.8846,-17043.0042 9994.5798,-17047.0741"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S] -->
<g id="node742" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-57392.9355" rx="481.5794" ry="26.7407"/>
<text text-anchor="start" x="239.5494" y="-57396.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S]</text>
<text text-anchor="middle" x="572.0494" y="-57381.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.mutable.HashMap[Long,Int]] -->
<g id="node743" class="node">
<title>org.scalacheck.Shrink[scala.collection.mutable.HashMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-9474.9355" rx="276.4575" ry="26.7407"/>
<text text-anchor="start" x="2743.9013" y="-9478.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[scala.collection.mutable.HashMap[Long,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-9463.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Long, Int),scala.collection.mutable.HashMap[Long,Int]] -->
<g id="edge331" class="edge">
<title>org.scalacheck.Shrink[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Long, Int),scala.collection.mutable.HashMap[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M2971.7329,-9501.6241C3063.6365,-9560.85 3297.5602,-9702.7021 3515.6933,-9761.9355 3579.9106,-9779.3736 3649.7446,-9790.3968 3717.5268,-9797.1945"/>
<polygon fill="#000000" stroke="#000000" points="3717.2194,-9800.681 3727.5116,-9798.167 3717.8981,-9793.714 3717.2194,-9800.681"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;Integral[scala.collection.mutable.HashMap[Long,Int]] -->
<g id="edge1461" class="edge">
<title>org.scalacheck.Shrink[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;Integral[scala.collection.mutable.HashMap[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M3015.6022,-9449.1891C3128.3108,-9415.8825 3335.0037,-9358.836 3515.6933,-9330.9355 3622.7196,-9314.4095 3742.4929,-9305.454 3843.3086,-9300.6076"/>
<polygon fill="#000000" stroke="#000000" points="3843.4913,-9304.103 3853.3158,-9300.137 3843.1624,-9297.1107 3843.4913,-9304.103"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;scala.collection.mutable.HashMap[Long,Int] =&gt; Traversable[(Long, Int)] -->
<g id="edge942" class="edge">
<title>org.scalacheck.Shrink[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;scala.collection.mutable.HashMap[Long,Int] =&gt; Traversable[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M3194.5846,-9483.2512C3369.7959,-9488.7872 3600.087,-9496.0636 3780.6005,-9501.7672"/>
<polygon fill="#000000" stroke="#000000" points="3780.6789,-9505.2713 3790.7845,-9502.089 3780.9001,-9498.2748 3780.6789,-9505.2713"/>
</g>
<!-- org.scalacheck.Shrink[(Long, Int)] -->
<g id="node957" class="node">
<title>org.scalacheck.Shrink[(Long, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-9438.9355" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="3975.7721" y="-9442.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Long, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-9427.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 24ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;org.scalacheck.Shrink[(Long, Int)] -->
<g id="edge86" class="edge">
<title>org.scalacheck.Shrink[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;org.scalacheck.Shrink[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M3194.5846,-9466.6199C3418.3665,-9459.5492 3731.9982,-9449.6396 3917.0124,-9443.7938"/>
<polygon fill="#000000" stroke="#000000" points="3917.2081,-9447.2895 3927.0925,-9443.4753 3916.9869,-9440.293 3917.2081,-9447.2895"/>
</g>
<!-- Fractional[Map[String,Int]] -->
<g id="node744" class="node">
<title>Fractional[Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-5750.9355" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="3995.2721" y="-5754.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Map[String,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-5739.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; ((?A, ?B) =&gt; ?ASSERTION) -->
<g id="node745" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; ((?A, ?B) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-57464.9355" rx="227.8769" ry="26.7407"/>
<text text-anchor="start" x="419.0494" y="-57468.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; ((?A, ?B) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-57453.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder.Result[BigInt] =&gt; ?{def ===: ?} -->
<g id="node746" class="node">
<title>io.circe.Decoder.Result[BigInt] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-57536.9355" rx="205.5364" ry="26.7407"/>
<text text-anchor="start" x="434.5494" y="-57540.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[BigInt] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-57525.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc3] -->
<g id="node747" class="node">
<title>Fractional[ProductCodecSuite.this.Cc3]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-57644.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="1641.104" y="-57648.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc3]</text>
<text text-anchor="middle" x="1749.604" y="-57633.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- cats.functor.Contravariant[io.circe.KeyEncoder] -->
<g id="node748" class="node">
<title>cats.functor.Contravariant[io.circe.KeyEncoder]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-57680.9355" rx="197.0658" ry="26.7407"/>
<text text-anchor="start" x="440.5494" y="-57684.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.functor.Contravariant[io.circe.KeyEncoder]</text>
<text text-anchor="middle" x="572.0494" y="-57669.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scala.collection.immutable.Set[B] =&gt; ?{def ===: ?} -->
<g id="node751" class="node">
<title>scala.collection.immutable.Set[B] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-43172.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-43176.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[B] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-43161.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- scala.collection.immutable.Set[B] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[scala.collection.immutable.Set[B]] -->
<g id="edge713" class="edge">
<title>scala.collection.immutable.Set[B] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[scala.collection.immutable.Set[B]]</title>
<path fill="none" stroke="#000000" d="M788.0311,-43172.9355C1009.6516,-43172.9355 1350.9835,-43172.9355 1561.753,-43172.9355"/>
<polygon fill="#000000" stroke="#000000" points="1562.0023,-43176.4356 1572.0023,-43172.9355 1562.0023,-43169.4356 1562.0023,-43176.4356"/>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc21] -->
<g id="node752" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc21]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-57752.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="1617.104" y="-57756.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc21]</text>
<text text-anchor="middle" x="1749.604" y="-57741.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- DecoderSuite.this.PropertyCheckConfigurable -->
<g id="node753" class="node">
<title>DecoderSuite.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-57824.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="445.5494" y="-57828.7355" font-family="Times,serif" font-size="14.00" fill="#000000">DecoderSuite.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-57813.7355" font-family="Times,serif" font-size="14.00" fill="#000000">28 times = 10ms</text>
</g>
<!-- io.circe.Decoder[Map[java.util.UUID,Int]] -->
<g id="node755" class="node">
<title>io.circe.Decoder[Map[java.util.UUID,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-13770.9355" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="3953.2721" y="-13774.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Map[java.util.UUID,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-13759.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.Decoder[Map[java.util.UUID,Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge277" class="edge">
<title>io.circe.Decoder[Map[java.util.UUID,Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4228.0811,-13783.4199C4372.9689,-13791.0479 4573.2057,-13790.484 4625.8509,-13734.9355 4639.6095,-13720.4183 4620.6035,-13029.9207 4633.8509,-13014.9355 4745.3136,-12888.8518 4963.8462,-12904.443 5083.861,-12924.837"/>
<polygon fill="#000000" stroke="#000000" points="5083.2911,-12928.2904 5093.7446,-12926.5653 5084.497,-12921.395 5083.2911,-12928.2904"/>
</g>
<!-- io.circe.KeyDecoder[java.util.UUID] -->
<g id="node1141" class="node">
<title>io.circe.KeyDecoder[java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-13770.9355" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="5065.7166" y="-13774.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.KeyDecoder[java.util.UUID]</text>
<text text-anchor="middle" x="5167.7166" y="-13759.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[Map[java.util.UUID,Int]]&#45;&gt;io.circe.KeyDecoder[java.util.UUID] -->
<g id="edge944" class="edge">
<title>io.circe.Decoder[Map[java.util.UUID,Int]]&#45;&gt;io.circe.KeyDecoder[java.util.UUID]</title>
<path fill="none" stroke="#000000" d="M4248.5396,-13770.9355C4456.7107,-13770.9355 4798.8156,-13770.9355 5001.7576,-13770.9355"/>
<polygon fill="#000000" stroke="#000000" points="5001.9155,-13774.4356 5011.9154,-13770.9355 5001.9154,-13767.4356 5001.9155,-13774.4356"/>
</g>
<!-- cats.Eq[Option[List[(String, io.circe.Json)]]] -->
<g id="node756" class="node">
<title>cats.Eq[Option[List[(String, io.circe.Json)]]]</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-15570.9355" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="9894.0427" y="-15574.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[List[(String, io.circe.Json)]]]</text>
<text text-anchor="middle" x="10016.0427" y="-15559.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 128ms</text>
</g>
<!-- cats.Eq[Option[List[(String, io.circe.Json)]]]&#45;&gt;cats.kernel.Eq[List[(String, io.circe.Json)]] -->
<g id="edge1451" class="edge">
<title>cats.Eq[Option[List[(String, io.circe.Json)]]]&#45;&gt;cats.kernel.Eq[List[(String, io.circe.Json)]]</title>
<path fill="none" stroke="#000000" d="M10174.9839,-15557.3506C10323.1986,-15544.6825 10543.3717,-15525.8639 10693.4897,-15513.0331"/>
<polygon fill="#000000" stroke="#000000" points="10694.0592,-15516.4973 10703.7248,-15512.1583 10693.463,-15509.5227 10694.0592,-15516.4973"/>
</g>
<!-- cats.kernel.PartialOrder[List[(String, io.circe.Json)]] -->
<g id="node1156" class="node">
<title>cats.kernel.PartialOrder[List[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-15570.9355" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="10715.4287" y="-15574.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.PartialOrder[List[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="10858.4287" y="-15559.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 25ms</text>
</g>
<!-- cats.Eq[Option[List[(String, io.circe.Json)]]]&#45;&gt;cats.kernel.PartialOrder[List[(String, io.circe.Json)]] -->
<g id="edge1306" class="edge">
<title>cats.Eq[Option[List[(String, io.circe.Json)]]]&#45;&gt;cats.kernel.PartialOrder[List[(String, io.circe.Json)]]</title>
<path fill="none" stroke="#000000" d="M10200.127,-15570.9355C10327.895,-15570.9355 10498.8384,-15570.9355 10634.5073,-15570.9355"/>
<polygon fill="#000000" stroke="#000000" points="10634.6251,-15574.4356 10644.6251,-15570.9355 10634.6251,-15567.4356 10634.6251,-15574.4356"/>
</g>
<!-- cats.kernel.Order[List[(String, io.circe.Json)]] -->
<g id="node1941" class="node">
<title>cats.kernel.Order[List[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-15642.9355" rx="188.5952" ry="26.7407"/>
<text text-anchor="start" x="10732.9287" y="-15646.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[List[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="10858.4287" y="-15631.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 10ms</text>
</g>
<!-- cats.Eq[Option[List[(String, io.circe.Json)]]]&#45;&gt;cats.kernel.Order[List[(String, io.circe.Json)]] -->
<g id="edge1200" class="edge">
<title>cats.Eq[Option[List[(String, io.circe.Json)]]]&#45;&gt;cats.kernel.Order[List[(String, io.circe.Json)]]</title>
<path fill="none" stroke="#000000" d="M10174.9839,-15584.5205C10320.7517,-15596.9795 10536.1214,-15615.3875 10685.9979,-15628.1976"/>
<polygon fill="#000000" stroke="#000000" points="10685.9619,-15631.7072 10696.2237,-15629.0716 10686.5581,-15624.7327 10685.9619,-15631.7072"/>
</g>
<!-- String(&#39;asArray&#39;) =&gt; ?{def should: ?} -->
<g id="node758" class="node">
<title>String(&#39;asArray&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-30014.9355" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="470.0494" y="-30018.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;asArray&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-30003.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;asArray&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge479" class="edge">
<title>String(&#39;asArray&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M719.5065,-30023.6567C866.6411,-30029.2536 1079.8067,-30027.9625 1144.0988,-29978.9355 1442.9983,-29751.0049 1697.7919,-28485.5 1742.6169,-28251.9855"/>
<polygon fill="#000000" stroke="#000000" points="1746.0939,-28252.4369 1744.5343,-28241.9575 1739.2185,-28251.1222 1746.0939,-28252.4369"/>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc14] -->
<g id="node759" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc14]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-57896.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="448.5494" y="-57900.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc14]</text>
<text text-anchor="middle" x="572.0494" y="-57885.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc14] -->
<g id="node1131" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc14]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-57896.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="1617.104" y="-57900.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc14]</text>
<text text-anchor="middle" x="1749.604" y="-57885.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc14]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc14] -->
<g id="edge1082" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc14]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc14]</title>
<path fill="none" stroke="#000000" d="M758.3114,-57896.9355C971.0895,-57896.9355 1318.412,-57896.9355 1540.352,-57896.9355"/>
<polygon fill="#000000" stroke="#000000" points="1540.4954,-57900.4356 1550.4954,-57896.9355 1540.4954,-57893.4356 1540.4954,-57900.4356"/>
</g>
<!-- scala.collection.immutable.Stream[Int] =&gt; Traversable[Int] -->
<g id="node760" class="node">
<title>scala.collection.immutable.Stream[Int] =&gt; Traversable[Int]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-1782.9355" rx="241.6612" ry="26.7407"/>
<text text-anchor="start" x="5004.7166" y="-1786.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Stream[Int] =&gt; Traversable[Int]</text>
<text text-anchor="middle" x="5167.7166" y="-1771.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Printer.MemoizedPieces&#39;) =&gt; ?{def should: ?} -->
<g id="node761" class="node">
<title>String(&#39;Printer.MemoizedPieces&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-29942.9355" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="424.5494" y="-29946.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Printer.MemoizedPieces&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-29931.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- String(&#39;Printer.MemoizedPieces&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge235" class="edge">
<title>String(&#39;Printer.MemoizedPieces&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M775.8997,-29953.11C916.3108,-29955.8978 1087.3915,-29949.5982 1144.0988,-29906.9355 1432.9273,-29689.641 1694.9351,-28479.682 1742.0782,-28251.9113"/>
<polygon fill="#000000" stroke="#000000" points="1745.5683,-28252.3162 1744.16,-28241.8154 1738.7125,-28250.9025 1745.5683,-28252.3162"/>
</g>
<!-- cats.kernel.Eq[scala.collection.mutable.HashMap[Long,Int]] -->
<g id="node763" class="node">
<title>cats.kernel.Eq[scala.collection.mutable.HashMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-57968.9355" rx="246.1463" ry="26.7407"/>
<text text-anchor="start" x="406.0494" y="-57972.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.collection.mutable.HashMap[Long,Int]]</text>
<text text-anchor="middle" x="572.0494" y="-57957.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]] -->
<g id="node765" class="node">
<title>org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-1926.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="4967.7166" y="-1930.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-1915.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,scala.collection.immutable.Stream[Int]] -->
<g id="edge596" class="edge">
<title>org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,scala.collection.immutable.Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M5462.1595,-1926.9355C5588.9553,-1926.9355 5738.2278,-1926.9355 5870.7656,-1926.9355"/>
<polygon fill="#000000" stroke="#000000" points="5871.0895,-1930.4356 5881.0895,-1926.9355 5871.0895,-1923.4356 5871.0895,-1930.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,String,Traversable[String] with Option[String]] -->
<g id="node766" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,String,Traversable[String] with Option[String]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-10458.9355" rx="381.6754" ry="26.7407"/>
<text text-anchor="start" x="4905.7166" y="-10462.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,String,Traversable[String] with Option[String]]</text>
<text text-anchor="middle" x="5167.7166" y="-10447.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[Either[io.circe.DecodingFailure,Int]] -->
<g id="node870" class="node">
<title>cats.kernel.Eq[Either[io.circe.DecodingFailure,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-13898.9355" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="12274.4214" y="-13902.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Either[io.circe.DecodingFailure,Int]]</text>
<text text-anchor="middle" x="12415.9214" y="-13887.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- cats.Eq[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]]&#45;&gt;cats.kernel.Eq[Either[io.circe.DecodingFailure,Int]] -->
<g id="edge254" class="edge">
<title>cats.Eq[io.circe.Decoder[Either[io.circe.DecodingFailure,Int]]]&#45;&gt;cats.kernel.Eq[Either[io.circe.DecodingFailure,Int]]</title>
<path fill="none" stroke="#000000" d="M11908.5759,-13615.9206C11954.4384,-13621.9664 12001.2221,-13631.6876 12043.7615,-13646.9355 12181.4734,-13696.2977 12317.0815,-13808.5157 12379.8074,-13865.05"/>
<polygon fill="#000000" stroke="#000000" points="12377.6938,-13867.8584 12387.4503,-13871.9891 12382.3992,-13862.6758 12377.6938,-13867.8584"/>
</g>
<!-- Option[io.circe.Json] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node768" class="node">
<title>Option[io.circe.Json] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-58040.9355" rx="265.7444" ry="26.7407"/>
<text text-anchor="start" x="392.0494" y="-58044.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[io.circe.Json] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="572.0494" y="-58029.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION) -->
<g id="node769" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-58112.9355" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="375.0494" y="-58116.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-58101.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- b.type =&gt; ?{def isNaN: ?} -->
<g id="node770" class="node">
<title>b.type =&gt; ?{def isNaN: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-58184.9355" rx="115.0173" ry="26.7407"/>
<text text-anchor="start" x="498.5494" y="-58188.7355" font-family="Times,serif" font-size="14.00" fill="#000000">b.type =&gt; ?{def isNaN: ?}</text>
<text text-anchor="middle" x="572.0494" y="-58173.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Order[BigInt] -->
<g id="node771" class="node">
<title>cats.kernel.Order[BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-38510.9355" rx="108.789" ry="26.7407"/>
<text text-anchor="start" x="2862.4013" y="-38514.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[BigInt]</text>
<text text-anchor="middle" x="2931.4013" y="-38499.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node772" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-13698.9355" rx="210.0214" ry="26.7407"/>
<text text-anchor="start" x="3930.2721" y="-13702.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-13687.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 34ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge200" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4251.8207,-13712.5534C4393.9941,-13718.8038 4575.9965,-13715.4743 4625.8509,-13662.9355 4638.2419,-13649.8774 4621.9198,-13028.415 4633.8509,-13014.9355 4745.3914,-12888.9206 4963.8924,-12904.4839 5083.8816,-12924.8552"/>
<polygon fill="#000000" stroke="#000000" points="5083.3098,-12928.3083 5093.763,-12926.5817 5084.5146,-12921.4127 5083.3098,-12928.3083"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge1183" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4280.9761,-13698.9355C4441.404,-13698.9355 4665.1793,-13698.9355 4847.791,-13698.9355"/>
<polygon fill="#000000" stroke="#000000" points="4847.828,-13702.4356 4857.828,-13698.9355 4847.828,-13695.4356 4847.828,-13702.4356"/>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc3] -->
<g id="node773" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc3]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-46430.9355" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="452.0494" y="-46434.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc3]</text>
<text text-anchor="middle" x="572.0494" y="-46419.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc3]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc3] -->
<g id="edge454" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc3]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc3]</title>
<path fill="none" stroke="#000000" d="M753.14,-46430.9355C966.8731,-46430.9355 1321.4043,-46430.9355 1544.915,-46430.9355"/>
<polygon fill="#000000" stroke="#000000" points="1545.1268,-46434.4356 1555.1268,-46430.9355 1545.1267,-46427.4356 1545.1268,-46434.4356"/>
</g>
<!-- String(&#39;Decoder[Long]&#39;) =&gt; ?{def should: ?} -->
<g id="node774" class="node">
<title>String(&#39;Decoder[Long]&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-29870.9355" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="450.0494" y="-29874.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Decoder[Long]&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-29859.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 22ms</text>
</g>
<!-- String(&#39;Decoder[Long]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1492" class="edge">
<title>String(&#39;Decoder[Long]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M744.9354,-29880.1398C889.9295,-29884.2906 1082.847,-29880.3479 1144.0988,-29834.9355 1422.9257,-29628.2121 1692.0032,-28473.5047 1741.5107,-28251.7652"/>
<polygon fill="#000000" stroke="#000000" points="1744.946,-28252.4404 1743.7014,-28241.9189 1738.1131,-28250.9201 1744.946,-28252.4404"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B] -->
<g id="node775" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-58256.9355" rx="290.7418" ry="26.7407"/>
<text text-anchor="start" x="374.5494" y="-58260.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B]</text>
<text text-anchor="middle" x="572.0494" y="-58245.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node776" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-49004.9355" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="394.0494" y="-49008.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-48993.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge265" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M824.3031,-49012.6474C1033.6174,-49019.0465 1328.3591,-49028.0573 1528.538,-49034.1772"/>
<polygon fill="#000000" stroke="#000000" points="1528.4921,-49037.6773 1538.5944,-49034.4846 1528.7061,-49030.6806 1528.4921,-49037.6773"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge813" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M824.3031,-48997.2237C1036.6076,-48990.7332 1336.7977,-48981.5558 1537.0587,-48975.4334"/>
<polygon fill="#000000" stroke="#000000" points="1537.2263,-48978.9301 1547.1146,-48975.126 1537.0123,-48971.9333 1537.2263,-48978.9301"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc11] -->
<g id="node777" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc11]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-45710.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="420.0494" y="-45714.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc11]</text>
<text text-anchor="middle" x="572.0494" y="-45699.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc11]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc11] -->
<g id="edge184" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc11]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc11]</title>
<path fill="none" stroke="#000000" d="M798.3967,-45710.9355C1007.0924,-45710.9355 1315.2165,-45710.9355 1523.754,-45710.9355"/>
<polygon fill="#000000" stroke="#000000" points="1523.9188,-45714.4356 1533.9188,-45710.9355 1523.9187,-45707.4356 1523.9188,-45714.4356"/>
</g>
<!-- shapeless.IsTuple[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]] -->
<g id="node778" class="node">
<title>shapeless.IsTuple[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-14436.9355" rx="367.8912" ry="26.7407"/>
<text text-anchor="start" x="19085.1796" y="-14440.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]</text>
<text text-anchor="middle" x="19337.1796" y="-14425.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.PartialOrder[io.circe.Decoder.Result[List[Boolean]]] -->
<g id="node780" class="node">
<title>cats.kernel.PartialOrder[io.circe.Decoder.Result[List[Boolean]]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-14224.9355" rx="259.5164" ry="26.7407"/>
<text text-anchor="start" x="12240.4214" y="-14228.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.PartialOrder[io.circe.Decoder.Result[List[Boolean]]]</text>
<text text-anchor="middle" x="12415.9214" y="-14213.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 18ms</text>
</g>
<!-- cats.kernel.PartialOrder[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;cats.kernel.Order[io.circe.DecodingFailure] -->
<g id="edge323" class="edge">
<title>cats.kernel.PartialOrder[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;cats.kernel.Order[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M12660.0206,-14234.1519C12753.9133,-14237.697 12859.4505,-14241.6817 12946.7892,-14244.9793"/>
<polygon fill="#000000" stroke="#000000" points="12946.6794,-14248.4776 12956.8044,-14245.3574 12946.9436,-14241.4825 12946.6794,-14248.4776"/>
</g>
<!-- cats.kernel.PartialOrder[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;cats.kernel.PartialOrder[io.circe.DecodingFailure] -->
<g id="edge741" class="edge">
<title>cats.kernel.PartialOrder[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;cats.kernel.PartialOrder[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M12637.777,-14210.9747C12733.2351,-14204.9677 12843.8453,-14198.0073 12936.1008,-14192.2019"/>
<polygon fill="#000000" stroke="#000000" points="12936.3502,-14195.6932 12946.1106,-14191.572 12935.9105,-14188.707 12936.3502,-14195.6932"/>
</g>
<!-- io.circe.Decoder[Map[Byte,Int]] -->
<g id="node781" class="node">
<title>io.circe.Decoder[Map[Byte,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-13626.9355" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="3981.7721" y="-13630.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Map[Byte,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-13615.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.Decoder[Map[Byte,Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1341" class="edge">
<title>io.circe.Decoder[Map[Byte,Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4196.8258,-13637.581C4342.4142,-13646.7767 4569.2202,-13650.5233 4625.8509,-13590.9355 4647.8976,-13567.7377 4612.621,-13038.8832 4633.8509,-13014.9355 4745.4886,-12889.0067 4963.9501,-12904.5351 5083.9073,-12924.878"/>
<polygon fill="#000000" stroke="#000000" points="5083.3332,-12928.3307 5093.7861,-12926.6021 5084.5367,-12921.4349 5083.3332,-12928.3307"/>
</g>
<!-- io.circe.KeyDecoder[Byte] -->
<g id="node954" class="node">
<title>io.circe.KeyDecoder[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-13626.9355" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="5093.7166" y="-13630.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.KeyDecoder[Byte]</text>
<text text-anchor="middle" x="5167.7166" y="-13615.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[Map[Byte,Int]]&#45;&gt;io.circe.KeyDecoder[Byte] -->
<g id="edge1208" class="edge">
<title>io.circe.Decoder[Map[Byte,Int]]&#45;&gt;io.circe.KeyDecoder[Byte]</title>
<path fill="none" stroke="#000000" d="M4208.0361,-13626.9355C4422.5449,-13626.9355 4834.107,-13626.9355 5041.5703,-13626.9355"/>
<polygon fill="#000000" stroke="#000000" points="5041.5973,-13630.4356 5051.5973,-13626.9355 5041.5973,-13623.4356 5041.5973,-13630.4356"/>
</g>
<!-- String(&#39;parseByteBuffer and decodeByteBuffer(Accumulating)&#39;) =&gt; ?{def should: ?} -->
<g id="node782" class="node">
<title>String(&#39;parseByteBuffer and decodeByteBuffer(Accumulating)&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-29798.9355" rx="338.9084" ry="26.7407"/>
<text text-anchor="start" x="340.5494" y="-29802.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;parseByteBuffer and decodeByteBuffer(Accumulating)&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-29787.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- String(&#39;parseByteBuffer and decodeByteBuffer(Accumulating)&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge630" class="edge">
<title>String(&#39;parseByteBuffer and decodeByteBuffer(Accumulating)&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M889.9041,-29808.2893C997.8319,-29805.3482 1101.8468,-29793.7676 1144.0988,-29762.9355 1676.0062,-29374.7927 1740.7586,-28448.7667 1748.5506,-28252.0625"/>
<polygon fill="#000000" stroke="#000000" points="1752.0524,-28252.0766 1748.9254,-28241.9537 1745.0572,-28251.8171 1752.0524,-28252.0766"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; JsonSuite.this.PropertyCheckConfigParam -->
<g id="node783" class="node">
<title>(Any =&gt; Nothing) =&gt; JsonSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-58328.9355" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="393.0494" y="-58332.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; JsonSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-58317.7355" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 4ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J] -->
<g id="node784" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-58400.9355" rx="410.2439" ry="26.7407"/>
<text text-anchor="start" x="290.0494" y="-58404.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J]</text>
<text text-anchor="middle" x="572.0494" y="-58389.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[scala.util.Either[Int,String]] -->
<g id="node785" class="node">
<title>shapeless.IsTuple[scala.util.Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-14698.9355" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="11532.3883" y="-14702.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[scala.util.Either[Int,String]]</text>
<text text-anchor="middle" x="11658.3883" y="-14687.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.Encoder[Int]] -->
<g id="node786" class="node">
<title>org.scalacheck.Arbitrary[io.circe.Encoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-2942.9355" rx="193.0803" ry="26.7407"/>
<text text-anchor="start" x="2802.9013" y="-2946.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.Encoder[Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-2931.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.Encoder[Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge238" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.Encoder[Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M3014.9125,-2918.6715C3140.0549,-2887.9779 3375.6079,-2853.0768 3507.6933,-2978.9355 3531.0027,-3001.1462 3492.4103,-3028.6972 3515.6933,-3050.9355 3576.176,-3108.7044 3808.9418,-3104.7786 3953.1554,-3096.199"/>
<polygon fill="#000000" stroke="#000000" points="3953.6143,-3099.6776 3963.3821,-3095.574 3953.1872,-3092.6906 3953.6143,-3099.6776"/>
</g>
<!-- scala.reflect.ClassTag[Int] -->
<g id="node787" class="node">
<title>scala.reflect.ClassTag[Int]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-1998.9355" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="6150.2346" y="-2002.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Int]</text>
<text text-anchor="middle" x="6222.2346" y="-1987.7355" font-family="Times,serif" font-size="14.00" fill="#000000">369 times = 269ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node788" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-21734.9355" rx="416.4718" ry="26.7407"/>
<text text-anchor="start" x="285.5494" y="-21738.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-21723.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 35ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node908" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-21734.9355" rx="541.7876" ry="26.7407"/>
<text text-anchor="start" x="1374.604" y="-21738.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-21723.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge734" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M988.8682,-21734.9355C1056.4212,-21734.9355 1127.2848,-21734.9355 1197.4519,-21734.9355"/>
<polygon fill="#000000" stroke="#000000" points="1197.799,-21738.4356 1207.7989,-21734.9355 1197.7989,-21731.4356 1197.799,-21738.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1436" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M988.5755,-21733.9993C1041.7323,-21726.5499 1094.7606,-21715.3413 1144.0988,-21698.9355 1387.067,-21618.1446 1627.0215,-21414.9296 1714.7049,-21335.4847"/>
<polygon fill="#000000" stroke="#000000" points="1717.1875,-21337.9577 1722.2238,-21328.6365 1712.4739,-21332.7825 1717.1875,-21337.9577"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with (Int,)] -->
<g id="node789" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with (Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-14130.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="4949.7166" y="-14134.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with (Int,)]</text>
<text text-anchor="middle" x="5167.7166" y="-14119.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Short, Int)] -->
<g id="node792" class="node">
<title>org.scalacheck.Shrink[(Short, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-15354.9355" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="3975.7721" y="-15358.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Short, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-15343.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- org.scalacheck.Shrink[Short] -->
<g id="node1160" class="node">
<title>org.scalacheck.Shrink[Short]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-15354.9355" rx="123.9879" ry="26.7407"/>
<text text-anchor="start" x="5088.2166" y="-15358.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Short]</text>
<text text-anchor="middle" x="5167.7166" y="-15343.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 11ms</text>
</g>
<!-- org.scalacheck.Shrink[(Short, Int)]&#45;&gt;org.scalacheck.Shrink[Short] -->
<g id="edge1420" class="edge">
<title>org.scalacheck.Shrink[(Short, Int)]&#45;&gt;org.scalacheck.Shrink[Short]</title>
<path fill="none" stroke="#000000" d="M4216.4379,-15354.9355C4430.4605,-15354.9355 4826.8575,-15354.9355 5033.9045,-15354.9355"/>
<polygon fill="#000000" stroke="#000000" points="5033.9231,-15358.4356 5043.923,-15354.9355 5033.923,-15351.4356 5033.9231,-15358.4356"/>
</g>
<!-- Integral[(Short, Int)] -->
<g id="node1374" class="node">
<title>Integral[(Short, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-15426.9355" rx="90.5193" ry="26.7407"/>
<text text-anchor="start" x="5111.7166" y="-15430.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Short, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-15415.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[(Short, Int)]&#45;&gt;Integral[(Short, Int)] -->
<g id="edge740" class="edge">
<title>org.scalacheck.Shrink[(Short, Int)]&#45;&gt;Integral[(Short, Int)]</title>
<path fill="none" stroke="#000000" d="M4208.4992,-15363.8075C4320.8217,-15371.0574 4483.5952,-15381.597 4625.8509,-15390.9355 4780.5591,-15401.0916 4960.1004,-15413.0546 5068.7334,-15420.3124"/>
<polygon fill="#000000" stroke="#000000" points="5068.8105,-15423.8253 5079.0217,-15420.9999 5069.2773,-15416.8409 5068.8105,-15423.8253"/>
</g>
<!-- org.scalacheck.Shrink[(Short, Int)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge548" class="edge">
<title>org.scalacheck.Shrink[(Short, Int)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4216.1288,-15352.4921C4347.0802,-15341.6102 4532.8604,-15302.7228 4625.8509,-15174.9355 4643.3884,-15150.8356 4613.4864,-6612.6992 4633.8509,-6590.9355 4688.38,-6532.66 4910.2157,-6536.3947 5050.2031,-6545.1511"/>
<polygon fill="#000000" stroke="#000000" points="5050.3509,-6548.6677 5060.555,-6545.817 5050.8004,-6541.6822 5050.3509,-6548.6677"/>
</g>
<!-- scala.reflect.ClassTag[Double] -->
<g id="node793" class="node">
<title>scala.reflect.ClassTag[Double]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-58472.9355" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="1665.104" y="-58476.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Double]</text>
<text text-anchor="middle" x="1749.604" y="-58461.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 4ms</text>
</g>
<!-- shapeless.IsTuple[io.circe.ParsingFailure] -->
<g id="node794" class="node">
<title>shapeless.IsTuple[io.circe.ParsingFailure]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-58544.9355" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="1635.104" y="-58548.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.ParsingFailure]</text>
<text text-anchor="middle" x="1749.604" y="-58533.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[String]&#45;&gt;scala.reflect.ClassTag[String] -->
<g id="edge1447" class="edge">
<title>org.scalacheck.Arbitrary[String]&#45;&gt;scala.reflect.ClassTag[String]</title>
<path fill="none" stroke="#000000" d="M5295.7492,-9719.5218C5435.5989,-9712.3254 5647.0256,-9711.5234 5701.5822,-9766.9355 5712.8248,-9778.3545 5705.4408,-9895.4553 5709.5822,-9910.9355 5820.277,-10324.7131 6111.1475,-10766.3165 6197.6378,-10891.8647"/>
<polygon fill="#000000" stroke="#000000" points="6194.9407,-10894.1183 6203.5066,-10900.3533 6200.6985,-10890.1374 6194.9407,-10894.1183"/>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc4] -->
<g id="node796" class="node">
<title>Fractional[ProductCodecSuite.this.Cc4]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-58688.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="1641.104" y="-58692.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc4]</text>
<text text-anchor="middle" x="1749.604" y="-58677.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- JsonSuite.this.PropertyCheckConfigurable -->
<g id="node799" class="node">
<title>JsonSuite.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-58724.9355" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="456.0494" y="-58728.7355" font-family="Times,serif" font-size="14.00" fill="#000000">JsonSuite.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-58713.7355" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 5ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C) =&gt; ?ASSERTION) -->
<g id="node800" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-58796.9355" rx="271.558" ry="26.7407"/>
<text text-anchor="start" x="388.0494" y="-58800.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-58785.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;withArray&#39;) =&gt; ?{def should: ?} -->
<g id="node801" class="node">
<title>String(&#39;withArray&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-29726.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="463.5494" y="-29730.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;withArray&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-29715.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;withArray&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge13" class="edge">
<title>String(&#39;withArray&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M728.8543,-29735.2158C875.0317,-29739.7583 1079.8627,-29737.0054 1144.0988,-29690.9355 1656.3035,-29323.5844 1736.3494,-28442.9537 1747.8108,-28251.9052"/>
<polygon fill="#000000" stroke="#000000" points="1751.3109,-28252.0013 1748.3897,-28241.8172 1744.3224,-28251.6002 1751.3109,-28252.0013"/>
</g>
<!-- cats.Eq[Option[Unit]]&#45;&gt;shapeless.IsTuple[Option[Unit]] -->
<g id="edge211" class="edge">
<title>cats.Eq[Option[Unit]]&#45;&gt;shapeless.IsTuple[Option[Unit]]</title>
<path fill="none" stroke="#000000" d="M10954.9225,-13428.9355C11093.6194,-13428.9355 11350.4241,-13428.9355 11512.414,-13428.9355"/>
<polygon fill="#000000" stroke="#000000" points="11512.4622,-13432.4356 11522.4622,-13428.9355 11512.4622,-13425.4356 11512.4622,-13432.4356"/>
</g>
<!-- cats.Eq[Option[Unit]]&#45;&gt;cats.kernel.Order[Unit] -->
<g id="edge687" class="edge">
<title>cats.Eq[Option[Unit]]&#45;&gt;cats.kernel.Order[Unit]</title>
<path fill="none" stroke="#000000" d="M10928.8126,-13410.4757C11020.6711,-13391.1142 11179.7302,-13374.6611 11265.0151,-13464.9355 11284.4058,-13485.4607 11253.674,-13698.3636 11273.0151,-13718.9355 11348.691,-13799.4276 11486.1186,-13791.3782 11574.7648,-13775.3163"/>
<polygon fill="#000000" stroke="#000000" points="11575.6108,-13778.7186 11584.7902,-13773.4282 11574.3152,-13771.8395 11575.6108,-13778.7186"/>
</g>
<!-- org.scalacheck.Cogen[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="node803" class="node">
<title>org.scalacheck.Cogen[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-58868.9355" rx="297.884" ry="26.7407"/>
<text text-anchor="start" x="369.5494" y="-58872.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[cats.data.NonEmptyList[io.circe.DecodingFailure]]</text>
<text text-anchor="middle" x="572.0494" y="-58857.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[io.circe.DecodingFailure] -->
<g id="node1654" class="node">
<title>org.scalacheck.Cogen[io.circe.DecodingFailure]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-58868.9355" rx="197.9798" ry="26.7407"/>
<text text-anchor="start" x="1617.604" y="-58872.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[io.circe.DecodingFailure]</text>
<text text-anchor="middle" x="1749.604" y="-58857.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;org.scalacheck.Cogen[io.circe.DecodingFailure] -->
<g id="edge820" class="edge">
<title>org.scalacheck.Cogen[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;org.scalacheck.Cogen[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M869.957,-58868.9355C1079.5346,-58868.9355 1354.7782,-58868.9355 1541.1483,-58868.9355"/>
<polygon fill="#000000" stroke="#000000" points="1541.3441,-58872.4356 1551.3441,-58868.9355 1541.344,-58865.4356 1541.3441,-58872.4356"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; String -->
<g id="node804" class="node">
<title>(Any =&gt; Nothing) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-58940.9355" rx="123.0732" ry="26.7407"/>
<text text-anchor="start" x="493.0494" y="-58944.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; String</text>
<text text-anchor="middle" x="572.0494" y="-58929.7355" font-family="Times,serif" font-size="14.00" fill="#000000">101 times = 30ms</text>
</g>
<!-- io.circe.Encoder[scala.collection.mutable.HashMap[Long,Int]] -->
<g id="node805" class="node">
<title>io.circe.Encoder[scala.collection.mutable.HashMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-21806.9355" rx="254.6169" ry="26.7407"/>
<text text-anchor="start" x="400.0494" y="-21810.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[scala.collection.mutable.HashMap[Long,Int]]</text>
<text text-anchor="middle" x="572.0494" y="-21795.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.Encoder[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;io.circe.KeyEncoder[Long] -->
<g id="edge500" class="edge">
<title>io.circe.Encoder[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;io.circe.KeyEncoder[Long]</title>
<path fill="none" stroke="#000000" d="M791.3628,-21820.6407C899.8968,-21827.3992 1032.8849,-21835.6448 1152.0988,-21842.9355 1315.9214,-21852.9545 1505.0235,-21864.3132 1625.8614,-21871.5454"/>
<polygon fill="#000000" stroke="#000000" points="1625.6974,-21875.0417 1635.8886,-21872.1454 1626.1156,-21868.0542 1625.6974,-21875.0417"/>
</g>
<!-- io.circe.Encoder[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge358" class="edge">
<title>io.circe.Encoder[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M788.419,-21821.1097C928.5097,-21825.2148 1093.8604,-21818.8278 1144.0988,-21770.9355 1155.7509,-21759.8276 1143.7107,-21712.676 1152.0988,-21698.9355 1276.5637,-21495.0514 1550.2928,-21374.2824 1679.4796,-21326.6114"/>
<polygon fill="#000000" stroke="#000000" points="1680.7099,-21329.8883 1688.9021,-21323.1697 1678.3082,-21323.3132 1680.7099,-21329.8883"/>
</g>
<!-- scala.collection.mutable.HashMap[Long,Int] =&gt; Iterable[(Long, Int)] -->
<g id="node1369" class="node">
<title>scala.collection.mutable.HashMap[Long,Int] =&gt; Iterable[(Long, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-21806.9355" rx="280.0286" ry="26.7407"/>
<text text-anchor="start" x="1559.604" y="-21810.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.mutable.HashMap[Long,Int] =&gt; Iterable[(Long, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-21795.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;scala.collection.mutable.HashMap[Long,Int] =&gt; Iterable[(Long, Int)] -->
<g id="edge1114" class="edge">
<title>io.circe.Encoder[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;scala.collection.mutable.HashMap[Long,Int] =&gt; Iterable[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M826.836,-21806.9355C1012.9549,-21806.9355 1265.6074,-21806.9355 1459.4893,-21806.9355"/>
<polygon fill="#000000" stroke="#000000" points="1459.5485,-21810.4356 1469.5484,-21806.9355 1459.5484,-21803.4356 1459.5485,-21810.4356"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T] -->
<g id="node807" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-59012.9355" rx="522.6038" ry="26.7407"/>
<text text-anchor="start" x="210.5494" y="-59016.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T]</text>
<text text-anchor="middle" x="572.0494" y="-59001.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; EncoderSuite.this.PropertyCheckConfigParam -->
<g id="node808" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; EncoderSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-59084.9355" rx="342.8936" ry="26.7407"/>
<text text-anchor="start" x="337.5494" y="-59088.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; EncoderSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-59073.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc20] -->
<g id="node809" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc20]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-59156.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="1605.104" y="-59160.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc20]</text>
<text text-anchor="middle" x="1749.604" y="-59145.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1424" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M2294.2125,-18828.0614C2316.4941,-18834.65 2334.6438,-18842.8366 2347.1092,-18852.9355 2357.498,-18861.3521 2344.7024,-18873.5413 2355.1092,-18881.9355 2503.7176,-19001.8056 3879.8447,-18977.9355 4070.7721,-18977.9355 4070.7721,-18977.9355 4070.7721,-18977.9355 6222.2346,-18977.9355 7719.2696,-18977.9355 8091.7155,-19063.96 9588.2431,-19102.9355 10152.6418,-19117.6348 10293.8386,-19121.9355 10858.4287,-19121.9355 10858.4287,-19121.9355 10858.4287,-19121.9355 18607.2235,-19121.9355 19097.7853,-19121.9355 19375.716,-19369.6733 19704.8751,-19005.9355 19711.5757,-18998.531 19711.8687,-17577.871 19712.8751,-17567.9355 19769.1264,-17012.5843 19940.7155,-16351.8075 19984.2022,-16190.0207"/>
<polygon fill="#000000" stroke="#000000" points="19987.6552,-16190.6585 19986.8788,-16180.0922 19980.8965,-16188.8364 19987.6552,-16190.6585"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node1686" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-18845.9355" rx="576.0841" ry="26.7407"/>
<text text-anchor="start" x="2531.9013" y="-18849.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="2931.4013" y="-18834.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 243ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge537" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2274.4094,-18829.8137C2319.703,-18830.9251 2365.5211,-18832.0495 2410.7813,-18833.1601"/>
<polygon fill="#000000" stroke="#000000" points="2410.9575,-18836.6654 2421.0404,-18833.4119 2411.1293,-18829.6675 2410.9575,-18836.6654"/>
</g>
<!-- org.scalacheck.Shrink[(Either[Int,String], Either[Int,String], Either[Int,String])] -->
<g id="node811" class="node">
<title>org.scalacheck.Shrink[(Either[Int,String], Either[Int,String], Either[Int,String])]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-8407.9355" rx="318.8103" ry="26.7407"/>
<text text-anchor="start" x="1532.104" y="-8411.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Either[Int,String], Either[Int,String], Either[Int,String])]</text>
<text text-anchor="middle" x="1749.604" y="-8396.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 28ms</text>
</g>
<!-- Integral[(Either[Int,String], Either[Int,String], Either[Int,String])] -->
<g id="node1251" class="node">
<title>Integral[(Either[Int,String], Either[Int,String], Either[Int,String])]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-8388.9355" rx="263.5019" ry="26.7407"/>
<text text-anchor="start" x="2752.9013" y="-8392.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Either[Int,String], Either[Int,String], Either[Int,String])]</text>
<text text-anchor="middle" x="2931.4013" y="-8377.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Either[Int,String], Either[Int,String], Either[Int,String])]&#45;&gt;Integral[(Either[Int,String], Either[Int,String], Either[Int,String])] -->
<g id="edge1059" class="edge">
<title>org.scalacheck.Shrink[(Either[Int,String], Either[Int,String], Either[Int,String])]&#45;&gt;Integral[(Either[Int,String], Either[Int,String], Either[Int,String])]</title>
<path fill="none" stroke="#000000" d="M2063.2013,-8402.8938C2249.2712,-8399.9023 2482.7846,-8396.1481 2660.7585,-8393.2867"/>
<polygon fill="#000000" stroke="#000000" points="2660.8499,-8396.7858 2670.7923,-8393.1254 2660.7373,-8389.7867 2660.8499,-8396.7858"/>
</g>
<!-- org.scalacheck.Shrink[(Either[Int,String], Either[Int,String], Either[Int,String])]&#45;&gt;org.scalacheck.Shrink[Either[Int,String]] -->
<g id="edge835" class="edge">
<title>org.scalacheck.Shrink[(Either[Int,String], Either[Int,String], Either[Int,String])]&#45;&gt;org.scalacheck.Shrink[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M1985.2097,-8426.0775C2217.472,-8443.962 2566.222,-8470.8162 2769.0947,-8486.4377"/>
<polygon fill="#000000" stroke="#000000" points="2769.0041,-8489.941 2779.2433,-8487.2192 2769.5415,-8482.9617 2769.0041,-8489.941"/>
</g>
<!-- io.circe.Encoder[Set[Int]] -->
<g id="node812" class="node">
<title>io.circe.Encoder[Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-21374.9355" rx="110.1176" ry="26.7407"/>
<text text-anchor="start" x="502.0494" y="-21378.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Set[Int]]</text>
<text text-anchor="middle" x="572.0494" y="-21363.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.Encoder[Set[Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1503" class="edge">
<title>io.circe.Encoder[Set[Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M679.1482,-21368.3871C905.3162,-21354.5584 1428.877,-21322.546 1649.1152,-21309.0798"/>
<polygon fill="#000000" stroke="#000000" points="1649.6034,-21312.5566 1659.3711,-21308.4527 1649.1761,-21305.5696 1649.6034,-21312.5566"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U] -->
<g id="node813" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-59228.9355" rx="521.6897" ry="26.7407"/>
<text text-anchor="start" x="211.0494" y="-59232.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U]</text>
<text text-anchor="middle" x="572.0494" y="-59217.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[(String, Boolean)] -->
<g id="node814" class="node">
<title>scala.reflect.ClassTag[(String, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-8716.9355" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="5056.2166" y="-8720.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(String, Boolean)]</text>
<text text-anchor="middle" x="5167.7166" y="-8705.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[Map[Short,Int]] -->
<g id="node815" class="node">
<title>io.circe.Decoder[Map[Short,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-13554.9355" rx="140.0143" ry="26.7407"/>
<text text-anchor="start" x="3979.7721" y="-13558.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Map[Short,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-13543.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Decoder[Map[Short,Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge85" class="edge">
<title>io.circe.Decoder[Map[Short,Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4199.0568,-13565.7032C4344.7013,-13574.7757 4569.4525,-13578.1612 4625.8509,-13518.9355 4645.1625,-13498.6559 4615.2534,-13035.8719 4633.8509,-13014.9355 4745.6135,-12889.1174 4964.0243,-12904.6009 5083.9404,-12924.9074"/>
<polygon fill="#000000" stroke="#000000" points="5083.3633,-12928.3595 5093.8157,-12926.6284 5084.5651,-12921.4634 5083.3633,-12928.3595"/>
</g>
<!-- io.circe.KeyDecoder[Short] -->
<g id="node1110" class="node">
<title>io.circe.KeyDecoder[Short]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-13554.9355" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="5092.2166" y="-13558.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.KeyDecoder[Short]</text>
<text text-anchor="middle" x="5167.7166" y="-13543.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[Map[Short,Int]]&#45;&gt;io.circe.KeyDecoder[Short] -->
<g id="edge505" class="edge">
<title>io.circe.Decoder[Map[Short,Int]]&#45;&gt;io.circe.KeyDecoder[Short]</title>
<path fill="none" stroke="#000000" d="M4210.8151,-13554.9355C4425.3394,-13554.9355 4832.1816,-13554.9355 5039.4262,-13554.9355"/>
<polygon fill="#000000" stroke="#000000" points="5039.4462,-13558.4356 5049.4462,-13554.9355 5039.4461,-13551.4356 5039.4462,-13558.4356"/>
</g>
<!-- String(&#39;asJson&#39;) =&gt; ?{def should: ?} -->
<g id="node816" class="node">
<title>String(&#39;asJson&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-29654.9355" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="474.0494" y="-29658.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;asJson&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-29643.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- String(&#39;asJson&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1454" class="edge">
<title>String(&#39;asJson&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M716.0773,-29662.5694C862.6826,-29667.4536 1077.5717,-29665.7539 1144.0988,-29618.9355 1636.5454,-29272.377 1731.7062,-28437.5733 1746.9938,-28251.9302"/>
<polygon fill="#000000" stroke="#000000" points="1750.4907,-28252.1075 1747.7961,-28241.861 1743.5128,-28251.5514 1750.4907,-28252.1075"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node817" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-43460.9355" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="360.0494" y="-43464.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-43449.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge881" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M878.7478,-43465.6237C1067.1843,-43468.5041 1306.0975,-43472.1561 1485.9994,-43474.9061"/>
<polygon fill="#000000" stroke="#000000" points="1486.0864,-43478.4078 1496.1388,-43475.0611 1486.1935,-43471.4086 1486.0864,-43478.4078"/>
</g>
<!-- Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node819" class="node">
<title>Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-43406.9355" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="1570.604" y="-43410.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-43395.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1355" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M847.0188,-43448.3261C1043.8246,-43439.301 1306.7212,-43427.2452 1498.0006,-43418.4735"/>
<polygon fill="#000000" stroke="#000000" points="1498.3694,-43421.9604 1508.1985,-43418.0059 1498.0487,-43414.9677 1498.3694,-43421.9604"/>
</g>
<!-- cats.MonadError[io.circe.KeyDecoder,Unit] -->
<g id="node818" class="node">
<title>cats.MonadError[io.circe.KeyDecoder,Unit]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-59300.9355" rx="182.3671" ry="26.7407"/>
<text text-anchor="start" x="451.0494" y="-59304.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.MonadError[io.circe.KeyDecoder,Unit]</text>
<text text-anchor="middle" x="572.0494" y="-59289.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.Decoder.Result[List[Boolean]]] -->
<g id="node820" class="node">
<title>cats.kernel.Eq[io.circe.Decoder.Result[List[Boolean]]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-14334.9355" rx="222.9775" ry="26.7407"/>
<text text-anchor="start" x="12266.4214" y="-14338.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.Decoder.Result[List[Boolean]]]</text>
<text text-anchor="middle" x="12415.9214" y="-14323.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 60ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;cats.kernel.Eq[List[Boolean]] -->
<g id="edge453" class="edge">
<title>cats.kernel.Eq[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;cats.kernel.Eq[List[Boolean]]</title>
<path fill="none" stroke="#000000" d="M12523.6002,-14311.3666C12606.5255,-14300.208 12717.2763,-14301.8187 12780.0814,-14370.9355 12792.8685,-14385.0076 12777.4937,-17093.1422 12788.0814,-17108.9355 12837.7204,-17182.9804 12933.8516,-17218.466 13011.7352,-17235.4437"/>
<polygon fill="#000000" stroke="#000000" points="13011.1171,-17238.8902 13021.6232,-17237.5221 13012.557,-17232.0399 13011.1171,-17238.8902"/>
</g>
<!-- cats.kernel.Eq[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;shapeless.IsTuple[io.circe.Decoder.Result[List[Boolean]]] -->
<g id="edge903" class="edge">
<title>cats.kernel.Eq[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;shapeless.IsTuple[io.circe.Decoder.Result[List[Boolean]]]</title>
<path fill="none" stroke="#000000" d="M12524.2563,-14311.4277C12606.9806,-14300.4917 12717.1419,-14302.3716 12780.0814,-14370.9355 12803.1133,-14396.0256 12765.3073,-14958.6113 12788.0814,-14983.9355 12837.0943,-15038.4366 12917.4924,-15050.2378 12988.1282,-15047.6908"/>
<polygon fill="#000000" stroke="#000000" points="12988.6459,-15051.1708 12998.4742,-15047.2143 12988.3237,-15044.1782 12988.6459,-15051.1708"/>
</g>
<!-- cats.kernel.Eq[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;cats.kernel.Order[io.circe.DecodingFailure] -->
<g id="edge167" class="edge">
<title>cats.kernel.Eq[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;cats.kernel.Order[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M12580.0065,-14316.7083C12642.6288,-14309.6871 12714.6726,-14301.5315 12780.0814,-14293.9355 12846.0483,-14286.2748 12918.9612,-14277.585 12981.1576,-14270.1053"/>
<polygon fill="#000000" stroke="#000000" points="12981.9322,-14273.5375 12991.4424,-14268.8678 12981.0958,-14266.5876 12981.9322,-14273.5375"/>
</g>
<!-- cats.kernel.Eq[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;cats.kernel.Eq[io.circe.DecodingFailure] -->
<g id="edge1120" class="edge">
<title>cats.kernel.Eq[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;cats.kernel.Eq[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M12638.8879,-14335.0153C12692.2822,-14323.9446 12744.1643,-14301.9453 12780.0814,-14260.9355 12797.2516,-14241.3308 12772.9755,-14165.1716 12788.0814,-14143.9355 12837.0811,-14075.0513 12925.3752,-14038.4511 13000.101,-14019.1237"/>
<polygon fill="#000000" stroke="#000000" points="13001.2298,-14022.4491 13010.0792,-14016.6235 12999.5284,-14015.659 13001.2298,-14022.4491"/>
</g>
<!-- cats.kernel.Eq[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;cats.kernel.PartialOrder[io.circe.DecodingFailure] -->
<g id="edge693" class="edge">
<title>cats.kernel.Eq[io.circe.Decoder.Result[List[Boolean]]]&#45;&gt;cats.kernel.PartialOrder[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M12637.4088,-14332.0363C12690.3282,-14320.8957 12742.3475,-14299.6069 12780.0814,-14260.9355 12794.268,-14246.3965 12773.2144,-14229.778 12788.0814,-14215.9355 12841.9533,-14165.7766 12923.1864,-14155.4946 12993.0715,-14158.3553"/>
<polygon fill="#000000" stroke="#000000" points="12993.1322,-14161.8627 13003.2954,-14158.8696 12993.4839,-14154.8715 12993.1322,-14161.8627"/>
</g>
<!-- String(&#39;deepMerge&#39;) =&gt; ?{def should: ?} -->
<g id="node821" class="node">
<title>String(&#39;deepMerge&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-29582.9355" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="460.5494" y="-29586.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;deepMerge&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-29571.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;deepMerge&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1099" class="edge">
<title>String(&#39;deepMerge&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M733.6773,-29590.838C879.1976,-29594.764 1079.7815,-29591.268 1144.0988,-29546.9355 1617.033,-29220.9529 1726.9062,-28431.6275 1746.1116,-28251.8139"/>
<polygon fill="#000000" stroke="#000000" points="1749.5995,-28252.1107 1747.1535,-28241.8021 1742.6371,-28251.3861 1749.5995,-28252.1107"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node822" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-13482.9355" rx="241.6612" ry="26.7407"/>
<text text-anchor="start" x="3907.7721" y="-13486.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-13471.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 38ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge651" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4274.7911,-13497.3789C4412.8953,-13502.1788 4578.5022,-13496.5263 4625.8509,-13446.9355 4642.4274,-13429.5741 4617.8858,-13032.8607 4633.8509,-13014.9355 4745.7797,-12889.2653 4964.1231,-12904.6888 5083.9844,-12924.9465"/>
<polygon fill="#000000" stroke="#000000" points="5083.4033,-12928.3979 5093.8552,-12926.6635 5084.6029,-12921.5015 5083.4033,-12928.3979"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge163" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4312.8592,-13482.9355C4460.4828,-13482.9355 4651.7072,-13482.9355 4815.8535,-13482.9355"/>
<polygon fill="#000000" stroke="#000000" points="4816.1276,-13486.4356 4826.1275,-13482.9355 4816.1275,-13479.4356 4816.1276,-13486.4356"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H] -->
<g id="node823" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-59372.9355" rx="334.423" ry="26.7407"/>
<text text-anchor="start" x="343.5494" y="-59376.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H]</text>
<text text-anchor="middle" x="572.0494" y="-59361.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.tests.examples.WrappedOptionalField] -->
<g id="node825" class="node">
<title>cats.kernel.Eq[io.circe.tests.examples.WrappedOptionalField]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-59444.9355" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="402.0494" y="-59448.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.tests.examples.WrappedOptionalField]</text>
<text text-anchor="middle" x="572.0494" y="-59433.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- shapeless.IsTuple[io.circe.tests.examples.WrappedOptionalField] -->
<g id="node1137" class="node">
<title>shapeless.IsTuple[io.circe.tests.examples.WrappedOptionalField]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-59444.9355" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="1570.604" y="-59448.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.tests.examples.WrappedOptionalField]</text>
<text text-anchor="middle" x="1749.604" y="-59433.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.tests.examples.WrappedOptionalField]&#45;&gt;shapeless.IsTuple[io.circe.tests.examples.WrappedOptionalField] -->
<g id="edge1195" class="edge">
<title>cats.kernel.Eq[io.circe.tests.examples.WrappedOptionalField]&#45;&gt;shapeless.IsTuple[io.circe.tests.examples.WrappedOptionalField]</title>
<path fill="none" stroke="#000000" d="M823.9419,-59444.9355C1015.2797,-59444.9355 1278.1551,-59444.9355 1474.8896,-59444.9355"/>
<polygon fill="#000000" stroke="#000000" points="1475.0908,-59448.4356 1485.0908,-59444.9355 1475.0907,-59441.4356 1475.0908,-59448.4356"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc15] -->
<g id="node829" class="node">
<title>Integral[ProductCodecSuite.this.Cc15]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-57068.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="1644.104" y="-57072.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc15]</text>
<text text-anchor="middle" x="1749.604" y="-57057.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc20] -->
<g id="node831" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc20]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-33830.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-33834.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc20]</text>
<text text-anchor="middle" x="572.0494" y="-33819.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc20]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc20]] -->
<g id="edge1087" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc20]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc20]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-33830.9355C951.3519,-33830.9355 1231.2937,-33830.9355 1445.2652,-33830.9355"/>
<polygon fill="#000000" stroke="#000000" points="1445.4039,-33834.4356 1455.4038,-33830.9355 1445.4038,-33827.4356 1445.4039,-33834.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Either[Int,String],List[Either[Int,String]]] -->
<g id="node832" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Either[Int,String],List[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-8680.9355" rx="333.0946" ry="26.7407"/>
<text text-anchor="start" x="3843.2721" y="-8684.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Either[Int,String],List[Either[Int,String]]]</text>
<text text-anchor="middle" x="4070.7721" y="-8669.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node833" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-13410.9355" rx="305.4403" ry="26.7407"/>
<text text-anchor="start" x="3862.7721" y="-13414.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-13399.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 37ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1209" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4320.3702,-13426.468C4447.2883,-13428.3606 4583.5471,-13419.0787 4625.8509,-13374.9355 4639.6925,-13360.4922 4620.518,-13029.8497 4633.8509,-13014.9355 4745.8606,-12889.6423 4963.6716,-12904.7708 5083.5598,-12924.9196"/>
<polygon fill="#000000" stroke="#000000" points="5082.9839,-12928.3719 5093.4342,-12926.6278 5084.1772,-12921.4744 5082.9839,-12928.3719"/>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node1657" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-13410.9355" rx="405.3444" ry="26.7407"/>
<text text-anchor="start" x="4889.2166" y="-13414.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-13399.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge59" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4376.3323,-13410.9355C4492.7562,-13410.9355 4627.4797,-13410.9355 4752.3956,-13410.9355"/>
<polygon fill="#000000" stroke="#000000" points="4752.5221,-13414.4356 4762.5221,-13410.9355 4752.522,-13407.4356 4752.5221,-13414.4356"/>
</g>
<!-- io.circe.Encoder[cats.data.Validated[String,Int]] -->
<g id="node834" class="node">
<title>io.circe.Encoder[cats.data.Validated[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-21014.9355" rx="197.0658" ry="26.7407"/>
<text text-anchor="start" x="440.5494" y="-21018.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[cats.data.Validated[String,Int]]</text>
<text text-anchor="middle" x="572.0494" y="-21003.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.Encoder[cats.data.Validated[String,Int]]&#45;&gt;io.circe.Encoder[String] -->
<g id="edge931" class="edge">
<title>io.circe.Encoder[cats.data.Validated[String,Int]]&#45;&gt;io.circe.Encoder[String]</title>
<path fill="none" stroke="#000000" d="M769.4773,-21014.9355C1017.1484,-21014.9355 1433.6696,-21014.9355 1634.4877,-21014.9355"/>
<polygon fill="#000000" stroke="#000000" points="1634.765,-21018.4356 1644.7649,-21014.9355 1634.7649,-21011.4356 1634.765,-21018.4356"/>
</g>
<!-- io.circe.Encoder[cats.data.Validated[String,Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge546" class="edge">
<title>io.circe.Encoder[cats.data.Validated[String,Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M743.4242,-21001.5511C891.5994,-20994.1541 1090.2316,-20995.6587 1144.0988,-21050.9355 1160.8602,-21068.1356 1135.3143,-21249.7579 1152.0988,-21266.9355 1289.6355,-21407.6947 1550.6489,-21359.9049 1677.1989,-21325.4938"/>
<polygon fill="#000000" stroke="#000000" points="1678.4752,-21328.7722 1687.1793,-21322.7315 1676.608,-21322.0258 1678.4752,-21328.7722"/>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc2] -->
<g id="node835" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc2]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-59516.9355" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="446.0494" y="-59520.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc2]</text>
<text text-anchor="middle" x="572.0494" y="-59505.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc2]] -->
<g id="node1145" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc2]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-59516.9355" rx="314.8251" ry="26.7407"/>
<text text-anchor="start" x="1535.104" y="-59520.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc2]]</text>
<text text-anchor="middle" x="1749.604" y="-59505.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc2]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc2]] -->
<g id="edge560" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc2]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc2]]</title>
<path fill="none" stroke="#000000" d="M761.5708,-59516.9355C940.1781,-59516.9355 1211.4625,-59516.9355 1424.6075,-59516.9355"/>
<polygon fill="#000000" stroke="#000000" points="1424.7127,-59520.4356 1434.7127,-59516.9355 1424.7127,-59513.4356 1424.7127,-59520.4356"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V] -->
<g id="node837" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-59588.9355" rx="507.9054" ry="26.7407"/>
<text text-anchor="start" x="221.0494" y="-59592.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V]</text>
<text text-anchor="middle" x="572.0494" y="-59577.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION) -->
<g id="node838" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-59660.9355" rx="304.1118" ry="26.7407"/>
<text text-anchor="start" x="365.0494" y="-59664.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-59649.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.CursorOp] -->
<g id="node842" class="node">
<title>cats.kernel.Eq[io.circe.CursorOp]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-38726.9355" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="2839.4013" y="-38730.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.CursorOp]</text>
<text text-anchor="middle" x="2931.4013" y="-38715.7355" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 107ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.CursorOp]&#45;&gt;shapeless.IsTuple[io.circe.CursorOp] -->
<g id="edge340" class="edge">
<title>cats.kernel.Eq[io.circe.CursorOp]&#45;&gt;shapeless.IsTuple[io.circe.CursorOp]</title>
<path fill="none" stroke="#000000" d="M3072.826,-38726.9355C3284.1263,-38726.9355 3681.3297,-38726.9355 3905.642,-38726.9355"/>
<polygon fill="#000000" stroke="#000000" points="3905.8608,-38730.4356 3915.8608,-38726.9355 3905.8607,-38723.4356 3905.8608,-38730.4356"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc18] -->
<g id="node843" class="node">
<title>Integral[ProductCodecSuite.this.Cc18]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-38366.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="1644.104" y="-38370.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc18]</text>
<text text-anchor="middle" x="1749.604" y="-38355.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc18] -->
<g id="node844" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc18]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-59732.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="1605.104" y="-59736.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc18]</text>
<text text-anchor="middle" x="1749.604" y="-59721.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int)] -->
<g id="node845" class="node">
<title>io.circe.Decoder[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-14562.9355" rx="114.6026" ry="26.7407"/>
<text text-anchor="start" x="3997.7721" y="-14566.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-14551.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 17ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge809" class="edge">
<title>io.circe.Decoder[(Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4140.1571,-14584.3799C4259.0683,-14616.3209 4501.0168,-14659.424 4625.8509,-14526.9355 4640.2523,-14511.6511 4619.9876,-13030.7096 4633.8509,-13014.9355 4745.0964,-12888.3571 4964.2191,-12904.2934 5084.2502,-12924.8344"/>
<polygon fill="#000000" stroke="#000000" points="5083.6783,-12928.2875 5094.1338,-12926.5746 5084.8922,-12921.3935 5083.6783,-12928.2875"/>
</g>
<!-- io.circe.KeyDecoder[Int] -->
<g id="node1140" class="node">
<title>io.circe.KeyDecoder[Int]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-14490.9355" rx="108.375" ry="26.7407"/>
<text text-anchor="start" x="5099.2166" y="-14494.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.KeyDecoder[Int]</text>
<text text-anchor="middle" x="5167.7166" y="-14479.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int)]&#45;&gt;io.circe.KeyDecoder[Int] -->
<g id="edge610" class="edge">
<title>io.circe.Decoder[(Int, Int)]&#45;&gt;io.circe.KeyDecoder[Int]</title>
<path fill="none" stroke="#000000" d="M4181.3576,-14555.8149C4293.3878,-14548.5891 4471.6703,-14537.0569 4625.8509,-14526.9355 4773.3025,-14517.2559 4943.3123,-14505.9347 5052.9891,-14498.6103"/>
<polygon fill="#000000" stroke="#000000" points="5053.3375,-14502.0949 5063.082,-14497.9362 5052.8709,-14495.1105 5053.3375,-14502.0949"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,(Int, Int),scala.collection.Map[Int,Int] with (Int, Int)] -->
<g id="node1255" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,(Int, Int),scala.collection.Map[Int,Int] with (Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-14562.9355" rx="403.5161" ry="26.7407"/>
<text text-anchor="start" x="4890.2166" y="-14566.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,(Int, Int),scala.collection.Map[Int,Int] with (Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-14551.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int)]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,(Int, Int),scala.collection.Map[Int,Int] with (Int, Int)] -->
<g id="edge1459" class="edge">
<title>io.circe.Decoder[(Int, Int)]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,(Int, Int),scala.collection.Map[Int,Int] with (Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4185.5751,-14562.9355C4319.9037,-14562.9355 4549.9056,-14562.9355 4753.5743,-14562.9355"/>
<polygon fill="#000000" stroke="#000000" points="4753.8661,-14566.4356 4763.8661,-14562.9355 4753.866,-14559.4356 4753.8661,-14566.4356"/>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int)]] -->
<g id="node1466" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-14634.9355" rx="214.007" ry="26.7407"/>
<text text-anchor="start" x="5024.2166" y="-14638.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-14623.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int)]] -->
<g id="edge1228" class="edge">
<title>io.circe.Decoder[(Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4181.2274,-14570.1855C4365.1005,-14582.2543 4736.5271,-14606.6336 4967.4771,-14621.7925"/>
<polygon fill="#000000" stroke="#000000" points="4967.4752,-14625.2998 4977.683,-14622.4623 4967.9337,-14618.3148 4967.4752,-14625.2998"/>
</g>
<!-- io.circe.Decoder[Char] -->
<g id="node846" class="node">
<title>io.circe.Decoder[Char]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-10602.9355" rx="100.3184" ry="26.7407"/>
<text text-anchor="start" x="5104.7166" y="-10606.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Char]</text>
<text text-anchor="middle" x="5167.7166" y="-10591.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node847" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="14433.9626" cy="-17612.9355" rx="300.5408" ry="26.7407"/>
<text text-anchor="start" x="14229.4626" y="-17616.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="14433.9626" y="-17601.7355" font-family="Times,serif" font-size="14.00" fill="#000000">15 times = 714ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge965" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M14505.7477,-17586.802C14615.8215,-17546.7294 14825.6324,-17470.3472 14940.9237,-17428.3752"/>
<polygon fill="#000000" stroke="#000000" points="14942.2193,-17431.6283 14950.4186,-17424.9185 14939.8246,-17425.0506 14942.2193,-17431.6283"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1552" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M14508.4822,-17638.9852C14688.1802,-17699.3975 15160.5977,-17843.9355 15567.1913,-17843.9355 15567.1913,-17843.9355 15567.1913,-17843.9355 18607.2235,-17843.9355 19098.9647,-17843.9355 19369.1171,-18064.2069 19704.8751,-17704.9355 19715.2864,-17693.7951 19710.9388,-17583.0603 19712.8751,-17567.9355 19783.7566,-17014.2614 19944.5037,-16352.2417 19984.9379,-16190.1051"/>
<polygon fill="#000000" stroke="#000000" points="19988.3955,-16190.7051 19987.425,-16180.1548 19981.6045,-16189.0076 19988.3955,-16190.7051"/>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc9] -->
<g id="node848" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc9]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-48716.9355" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="446.0494" y="-48720.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc9]</text>
<text text-anchor="middle" x="572.0494" y="-48705.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc9]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc9]] -->
<g id="edge1508" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc9]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc9]]</title>
<path fill="none" stroke="#000000" d="M761.5708,-48716.9355C940.1781,-48716.9355 1211.4625,-48716.9355 1424.6075,-48716.9355"/>
<polygon fill="#000000" stroke="#000000" points="1424.7127,-48720.4356 1434.7127,-48716.9355 1424.7127,-48713.4356 1424.7127,-48720.4356"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node849" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-13338.9355" rx="337.08" ry="26.7407"/>
<text text-anchor="start" x="3840.2721" y="-13342.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-13327.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 41ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1147" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4345.1687,-13354.5937C4464.5218,-13354.8849 4586.1889,-13344.0927 4625.8509,-13302.9355 4648.0645,-13279.8846 4612.4491,-13038.7421 4633.8509,-13014.9355 4746.208,-12889.9537 4963.8786,-12904.9565 5083.6524,-12925.0026"/>
<polygon fill="#000000" stroke="#000000" points="5083.0681,-12928.4535 5093.5172,-12926.7022 5084.2567,-12921.5551 5083.0681,-12928.4535"/>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node1920" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-13338.9355" rx="436.984" ry="26.7407"/>
<text text-anchor="start" x="4866.7166" y="-13342.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-13327.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge426" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4408.0941,-13338.9355C4506.7573,-13338.9355 4616.1787,-13338.9355 4720.5323,-13338.9355"/>
<polygon fill="#000000" stroke="#000000" points="4720.6147,-13342.4356 4730.6147,-13338.9355 4720.6146,-13335.4356 4720.6147,-13342.4356"/>
</g>
<!-- shapeless.IsTuple[(Int, String, Char)] -->
<g id="node850" class="node">
<title>shapeless.IsTuple[(Int, String, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-14334.9355" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="11556.3883" y="-14338.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, String, Char)]</text>
<text text-anchor="middle" x="11658.3883" y="-14323.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.Eq[Map[String,Int]] -->
<g id="node851" class="node">
<title>cats.Eq[Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-15236.9355" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="19269.1796" y="-15240.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Map[String,Int]]</text>
<text text-anchor="middle" x="19337.1796" y="-15225.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 14ms</text>
</g>
<!-- shapeless.IsTuple[Map[String,Int]] -->
<g id="node999" class="node">
<title>shapeless.IsTuple[Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19994.3036" cy="-15236.9355" rx="147.1565" ry="26.7407"/>
<text text-anchor="start" x="19898.3036" y="-15240.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Map[String,Int]]</text>
<text text-anchor="middle" x="19994.3036" y="-15225.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- cats.Eq[Map[String,Int]]&#45;&gt;shapeless.IsTuple[Map[String,Int]] -->
<g id="edge1581" class="edge">
<title>cats.Eq[Map[String,Int]]&#45;&gt;shapeless.IsTuple[Map[String,Int]]</title>
<path fill="none" stroke="#000000" d="M19444.9544,-15236.9355C19551.5547,-15236.9355 19715.8659,-15236.9355 19837.0326,-15236.9355"/>
<polygon fill="#000000" stroke="#000000" points="19837.147,-15240.4356 19847.147,-15236.9355 19837.147,-15233.4356 19837.147,-15240.4356"/>
</g>
<!-- cats.Eq[Map[String,Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1100" class="edge">
<title>cats.Eq[Map[String,Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M19415.3848,-15218.4563C19499.6563,-15203.691 19631.5205,-15196.426 19704.8751,-15272.9355 19715.9652,-15284.5027 19709.5289,-15401.2641 19712.8751,-15416.9355 19772.778,-15697.4869 19923.3837,-16012.2743 19975.8975,-16116.9551"/>
<polygon fill="#000000" stroke="#000000" points="19972.8983,-16118.7811 19980.5231,-16126.1373 19979.1498,-16115.6318 19972.8983,-16118.7811"/>
</g>
<!-- cats.Eq[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]]&#45;&gt;cats.kernel.Eq[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]] -->
<g id="edge496" class="edge">
<title>cats.Eq[io.circe.AccumulatingDecoder[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]]&#45;&gt;cats.kernel.Eq[Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]</title>
<path fill="none" stroke="#000000" d="M18166.6332,-14724.9355C18206.5096,-14724.9355 18246.5726,-14724.9355 18285.4138,-14724.9355"/>
<polygon fill="#000000" stroke="#000000" points="18285.7963,-14728.4356 18295.7963,-14724.9355 18285.7962,-14721.4356 18285.7963,-14728.4356"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T] -->
<g id="node853" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-59804.9355" rx="480.251" ry="26.7407"/>
<text text-anchor="start" x="240.5494" y="-59808.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T]</text>
<text text-anchor="middle" x="572.0494" y="-59793.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Boolean(true) =&gt; ?{def asJson: ?} -->
<g id="node854" class="node">
<title>Boolean(true) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-59876.9355" rx="144.9138" ry="26.7407"/>
<text text-anchor="start" x="477.5494" y="-59880.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean(true) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-59865.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; JsonNumberSuite.this.PropertyCheckConfigParam -->
<g id="node855" class="node">
<title>(Any =&gt; Nothing) =&gt; JsonNumberSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-59948.9355" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="370.5494" y="-59952.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; JsonNumberSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-59937.7355" font-family="Times,serif" font-size="14.00" fill="#000000">15 times = 3ms</text>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node857" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-16260.9355" rx="434.3272" ry="26.7407"/>
<text text-anchor="start" x="3771.7721" y="-16264.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="4070.7721" y="-16249.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 21ms</text>
</g>
<!-- cats.Eq[List[Int]] -->
<g id="node858" class="node">
<title>cats.Eq[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-15858.9355" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="10811.4287" y="-15862.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[List[Int]]</text>
<text text-anchor="middle" x="10858.4287" y="-15847.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- cats.Eq[List[Int]]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge1101" class="edge">
<title>cats.Eq[List[Int]]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10920.4522,-15842.4977C11010.4202,-15822.8217 11176.0653,-15803.0181 11265.0151,-15894.9355 11287.3025,-15917.9666 11251.9234,-16014.8046 11273.0151,-16038.9355 11343.3834,-16119.444 11472.3215,-16129.0497 11561.5622,-16124.4306"/>
<polygon fill="#000000" stroke="#000000" points="11561.9196,-16127.9158 11571.6975,-16123.8365 11561.5098,-16120.9278 11561.9196,-16127.9158"/>
</g>
<!-- cats.Eq[List[Int]]&#45;&gt;shapeless.IsTuple[List[Int]] -->
<g id="edge1291" class="edge">
<title>cats.Eq[List[Int]]&#45;&gt;shapeless.IsTuple[List[Int]]</title>
<path fill="none" stroke="#000000" d="M10934.1195,-15852.3009C11015.7761,-15845.1277 11149.619,-15833.3245 11265.0151,-15822.9355 11356.694,-15814.6818 11460.3755,-15805.1866 11538.2706,-15798.0208"/>
<polygon fill="#000000" stroke="#000000" points="11538.9661,-15801.4717 11548.6033,-15797.07 11538.3246,-15794.5011 11538.9661,-15801.4717"/>
</g>
<!-- io.circe.Encoder[Seq[Int]] -->
<g id="node859" class="node">
<title>io.circe.Encoder[Seq[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-21302.9355" rx="112.36" ry="26.7407"/>
<text text-anchor="start" x="500.5494" y="-21306.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Seq[Int]]</text>
<text text-anchor="middle" x="572.0494" y="-21291.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 12ms</text>
</g>
<!-- io.circe.Encoder[Seq[Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge721" class="edge">
<title>io.circe.Encoder[Seq[Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M684.6914,-21302.9355C913.1829,-21302.9355 1428.0479,-21302.9355 1647.454,-21302.9355"/>
<polygon fill="#000000" stroke="#000000" points="1647.6763,-21306.4356 1657.6763,-21302.9355 1647.6762,-21299.4356 1647.6763,-21306.4356"/>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node860" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-6626.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="5062.2166" y="-6630.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-6615.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D] -->
<g id="node861" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-60020.9355" rx="310.3398" ry="26.7407"/>
<text text-anchor="start" x="360.5494" y="-60024.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D]</text>
<text text-anchor="middle" x="572.0494" y="-60009.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node862" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-17310.9355" rx="185.0243" ry="26.7407"/>
<text text-anchor="start" x="10735.4287" y="-17314.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="10858.4287" y="-17299.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 99ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge525" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M11018.2653,-17324.6036C11093.2073,-17331.1362 11183.7111,-17339.2028 11265.0151,-17346.9355 11334.5661,-17353.5505 11410.9899,-17361.2279 11477.829,-17368.0775"/>
<polygon fill="#000000" stroke="#000000" points="11477.7395,-17371.5866 11488.0445,-17369.1256 11478.4539,-17364.6232 11477.7395,-17371.5866"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge1073" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10952.024,-17334.238C11045.9293,-17351.3845 11187.4415,-17359.079 11265.0151,-17274.9355 11286.2163,-17251.9387 11251.8694,-16171.9836 11273.0151,-16148.9355 11348.6883,-16066.4542 11489.0527,-16076.0717 11577.8775,-16092.8538"/>
<polygon fill="#000000" stroke="#000000" points="11577.4243,-16096.3316 11587.911,-16094.8212 11578.7713,-16089.4624 11577.4243,-16096.3316"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge142" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M10952.6018,-17287.7491C11046.2737,-17270.9338 11186.966,-17263.7182 11265.0151,-17346.9355 11277.5605,-17360.3117 11260.502,-17663.5291 11273.0151,-17676.9355 11346.4121,-17755.5728 11478.7047,-17749.9407 11567.5367,-17734.6803"/>
<polygon fill="#000000" stroke="#000000" points="11568.3812,-17738.0848 11577.6078,-17732.8773 11567.1475,-17731.1944 11568.3812,-17738.0848"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge266" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M11039.0117,-17304.8975C11352.0456,-17296.1919 11969.306,-17287.466 12043.7615,-17350.9355 12057.8904,-17362.9798 12037.5635,-17379.9728 12051.7615,-17391.9355 12143.4902,-17469.2234 13011.0801,-17415.9355 13131.0282,-17415.9355 13131.0282,-17415.9355 13131.0282,-17415.9355 13803.7086,-17415.9355 14124.3031,-17415.9355 14492.3148,-17409.975 14739.1813,-17405.1127"/>
<polygon fill="#000000" stroke="#000000" points="14739.448,-17408.6082 14749.3768,-17404.9112 14739.3095,-17401.6096 14739.448,-17408.6082"/>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1680" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-17458.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="11525.8883" y="-17462.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="11658.3883" y="-17447.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1315" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M10956.9062,-17288.1346C11049.4532,-17273.0963 11185.317,-17268.5469 11265.0151,-17346.9355 11277.1223,-17358.8439 11260.9366,-17410.998 11273.0151,-17422.9355 11342.3188,-17491.431 11456.7583,-17493.8801 11542.9637,-17483.1284"/>
<polygon fill="#000000" stroke="#000000" points="11543.6112,-17486.5733 11553.066,-17481.7925 11542.6935,-17479.6338 11543.6112,-17486.5733"/>
</g>
<!-- String(&#39;A JSON number&#39;) =&gt; ?{def should: ?} -->
<g id="node864" class="node">
<title>String(&#39;A JSON number&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-29510.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="445.5494" y="-29514.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;A JSON number&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-29499.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- String(&#39;A JSON number&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1236" class="edge">
<title>String(&#39;A JSON number&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M753.581,-29518.9849C896.7518,-29521.8181 1082.2528,-29516.5993 1144.0988,-29474.9355 1597.5372,-29169.4679 1721.8229,-28425.9232 1745.1258,-28251.8326"/>
<polygon fill="#000000" stroke="#000000" points="1748.6003,-28252.2549 1746.4294,-28241.8849 1741.6596,-28251.3453 1748.6003,-28252.2549"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam -->
<g id="node865" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-60092.9355" rx="362.0773" ry="26.7407"/>
<text text-anchor="start" x="324.0494" y="-60096.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-60081.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Byte] -->
<g id="node866" class="node">
<title>org.scalacheck.Shrink[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-3086.9355" rx="120.8306" ry="26.7407"/>
<text text-anchor="start" x="5090.2166" y="-3090.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Byte]</text>
<text text-anchor="middle" x="5167.7166" y="-3075.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 46ms</text>
</g>
<!-- Fractional[Byte] -->
<g id="node1700" class="node">
<title>Fractional[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-3032.9355" rx="74.9067" ry="26.7407"/>
<text text-anchor="start" x="6177.2346" y="-3036.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Byte]</text>
<text text-anchor="middle" x="6222.2346" y="-3021.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 12ms</text>
</g>
<!-- org.scalacheck.Shrink[Byte]&#45;&gt;Fractional[Byte] -->
<g id="edge70" class="edge">
<title>org.scalacheck.Shrink[Byte]&#45;&gt;Fractional[Byte]</title>
<path fill="none" stroke="#000000" d="M5285.6137,-3080.8982C5500.4027,-3069.8993 5950.5395,-3046.8486 6137.7522,-3037.2617"/>
<polygon fill="#000000" stroke="#000000" points="6138.0076,-3040.7533 6147.8155,-3036.7464 6137.6496,-3033.7625 6138.0076,-3040.7533"/>
</g>
<!-- Integral[Byte] -->
<g id="node1942" class="node">
<title>Integral[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-3104.9355" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="6178.7346" y="-3108.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Byte]</text>
<text text-anchor="middle" x="6222.2346" y="-3093.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 13ms</text>
</g>
<!-- org.scalacheck.Shrink[Byte]&#45;&gt;Integral[Byte] -->
<g id="edge26" class="edge">
<title>org.scalacheck.Shrink[Byte]&#45;&gt;Integral[Byte]</title>
<path fill="none" stroke="#000000" d="M5288.4262,-3088.996C5504.8059,-3092.6895 5953.4133,-3100.3469 6139.036,-3103.5154"/>
<polygon fill="#000000" stroke="#000000" points="6139.2202,-3107.019 6149.2785,-3103.6902 6139.3398,-3100.02 6139.2202,-3107.019"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam -->
<g id="node867" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-60164.9355" rx="317.4819" ry="26.7407"/>
<text text-anchor="start" x="355.5494" y="-60168.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-60153.7355" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 1ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node868" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-12690.9355" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="4945.2166" y="-12694.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-12679.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[java.util.UUID,Int]] -->
<g id="node869" class="node">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[java.util.UUID,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-3518.9355" rx="315.2393" ry="26.7407"/>
<text text-anchor="start" x="2716.4013" y="-3522.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.collection.immutable.Map[java.util.UUID,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-3507.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;org.scalacheck.util.Buildable[(java.util.UUID, Int),scala.collection.immutable.Map[java.util.UUID,Int]] -->
<g id="edge1081" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;org.scalacheck.util.Buildable[(java.util.UUID, Int),scala.collection.immutable.Map[java.util.UUID,Int]]</title>
<path fill="none" stroke="#000000" d="M3179.8217,-3535.4951C3295.5215,-3529.1791 3425.4661,-3499.5375 3507.6933,-3410.9355 3529.5951,-3387.3357 3492.4103,-3361.1739 3515.6933,-3338.9355 3543.0115,-3312.8431 3605.4765,-3299.3367 3679.0541,-3293.1604"/>
<polygon fill="#000000" stroke="#000000" points="3679.3363,-3296.6491 3689.0295,-3292.3724 3678.7849,-3289.6709 3679.3363,-3296.6491"/>
</g>
<!-- org.scalacheck.Arbitrary[(java.util.UUID, Int)] -->
<g id="node1279" class="node">
<title>org.scalacheck.Arbitrary[(java.util.UUID, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-3662.9355" rx="193.0803" ry="26.7407"/>
<text text-anchor="start" x="3942.2721" y="-3666.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(java.util.UUID, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-3651.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;org.scalacheck.Arbitrary[(java.util.UUID, Int)] -->
<g id="edge1282" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;org.scalacheck.Arbitrary[(java.util.UUID, Int)]</title>
<path fill="none" stroke="#000000" d="M3044.9823,-3544.0446C3162.2696,-3569.0013 3350.8796,-3606.4317 3515.6933,-3626.9355 3633.9442,-3641.6467 3767.1623,-3650.54 3873.4453,-3655.8061"/>
<polygon fill="#000000" stroke="#000000" points="3873.4863,-3659.3122 3883.6453,-3656.3045 3873.828,-3652.3206 3873.4863,-3659.3122"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;scala.collection.immutable.Map[java.util.UUID,Int] =&gt; Traversable[(java.util.UUID, Int)] -->
<g id="edge268" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;scala.collection.immutable.Map[java.util.UUID,Int] =&gt; Traversable[(java.util.UUID, Int)]</title>
<path fill="none" stroke="#000000" d="M3147.9162,-3538.4892C3272.0053,-3536.8746 3420.0493,-3510.7593 3507.6933,-3410.9355 3528.8386,-3386.8516 3493.1362,-3289.7026 3515.6933,-3266.9355 3551.8206,-3230.4719 3653.6613,-3218.0841 3760.4095,-3216.0645"/>
<polygon fill="#000000" stroke="#000000" points="3760.4765,-3219.564 3770.4195,-3215.9053 3760.3651,-3212.5649 3760.4765,-3219.564"/>
</g>
<!-- scala.reflect.ClassTag[scala.collection.immutable.Map[java.util.UUID,Int]] -->
<g id="node1807" class="node">
<title>scala.reflect.ClassTag[scala.collection.immutable.Map[java.util.UUID,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-3590.9355" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="3863.2721" y="-3594.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.collection.immutable.Map[java.util.UUID,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-3579.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Map[java.util.UUID,Int]] -->
<g id="edge506" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Map[java.util.UUID,Int]]</title>
<path fill="none" stroke="#000000" d="M3184.9721,-3534.9594C3371.7911,-3546.765 3624.9753,-3562.7644 3812.8209,-3574.6349"/>
<polygon fill="#000000" stroke="#000000" points="3812.6397,-3578.1303 3822.8405,-3575.2681 3813.0812,-3571.1443 3812.6397,-3578.1303"/>
</g>
<!-- cats.kernel.Eq[Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1240" class="edge">
<title>cats.kernel.Eq[Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M12553.3035,-13878.4455C12630.6608,-13875.1866 12722.9295,-13886.5876 12780.0814,-13945.9355 12793.7022,-13960.0796 12774.6792,-14019.5843 12788.0814,-14033.9355 12998.8035,-14259.5785 13270.371,-13911.8495 13473.975,-14143.9355 13494.5736,-14167.4157 13465.3427,-14398.4973 13481.975,-14424.9355 13725.7183,-14812.3836 13976.2216,-14817.9355 14433.9626,-14817.9355 14433.9626,-14817.9355 14433.9626,-14817.9355 17757.7665,-14817.9355 18322.08,-14817.9355 18629.3952,-14765.6826 18961.484,-15221.9355 18972.9765,-15237.725 18955.9079,-15910.8973 18969.484,-15924.9355 19026.3442,-15983.7311 19627.2057,-15932.2946 19704.8751,-15957.9355 19808.3055,-15992.081 19909.1975,-16074.4308 19960.1115,-16120.4454"/>
<polygon fill="#000000" stroke="#000000" points="19957.8047,-16123.0786 19967.551,-16127.2332 19962.5228,-16117.9075 19957.8047,-16123.0786"/>
</g>
<!-- cats.kernel.Eq[Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.Order[io.circe.DecodingFailure] -->
<g id="edge317" class="edge">
<title>cats.kernel.Eq[Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.Order[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M12625.6242,-13895.318C12683.9658,-13905.2942 12741.7718,-13927.6015 12780.0814,-13972.9355 12797.5181,-13993.5694 12769.676,-14196.1611 12788.0814,-14215.9355 12844.0972,-14276.1176 12938.7092,-14282.0895 13014.3859,-14274.6946"/>
<polygon fill="#000000" stroke="#000000" points="13014.8864,-14278.1612 13024.4593,-14273.6215 13014.1448,-14271.2006 13014.8864,-14278.1612"/>
</g>
<!-- cats.kernel.Eq[Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.Eq[io.circe.DecodingFailure] -->
<g id="edge989" class="edge">
<title>cats.kernel.Eq[Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.Eq[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M12581.1131,-13915.7087C12643.546,-13922.5271 12715.1737,-13930.9242 12780.0814,-13939.9355 12856.1535,-13950.4969 12941.1387,-13964.485 13008.4235,-13976.078"/>
<polygon fill="#000000" stroke="#000000" points="13008.1921,-13979.5898 13018.6421,-13977.8436 13009.384,-13972.692 13008.1921,-13979.5898"/>
</g>
<!-- cats.kernel.Eq[Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.PartialOrder[io.circe.DecodingFailure] -->
<g id="edge1311" class="edge">
<title>cats.kernel.Eq[Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.PartialOrder[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M12533.3625,-13876.5658C12614.7063,-13868.4955 12718.9714,-13874.2634 12780.0814,-13939.9355 12795.1562,-13956.1357 12773.0625,-14122.6837 12788.0814,-14138.9355 12839.4858,-14194.5594 12923.6513,-14205.2752 12995.7358,-14201.8567"/>
<polygon fill="#000000" stroke="#000000" points="12996.037,-14205.3454 13005.8224,-14201.2838 12995.6399,-14198.3566 12996.037,-14205.3454"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node871" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-21230.9355" rx="257.2738" ry="26.7407"/>
<text text-anchor="start" x="398.0494" y="-21234.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-21219.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 31ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge807" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M829.7409,-21230.9355C984.0337,-21230.9355 1183.2713,-21230.9355 1356.8503,-21230.9355"/>
<polygon fill="#000000" stroke="#000000" points="1356.9297,-21234.4356 1366.9296,-21230.9355 1356.9296,-21227.4356 1356.9297,-21234.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1165" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M793.0839,-21244.7478C901.3007,-21251.4862 1033.5144,-21259.6833 1152.0988,-21266.9355 1326.9699,-21277.6301 1530.6451,-21289.8514 1649.3497,-21296.9506"/>
<polygon fill="#000000" stroke="#000000" points="1649.3184,-21300.4549 1659.5095,-21297.5581 1649.7363,-21293.4674 1649.3184,-21300.4549"/>
</g>
<!-- scala.collection.immutable.Map[Int,Int] =&gt; Traversable[(Int, Int)] -->
<g id="node872" class="node">
<title>scala.collection.immutable.Map[Int,Int] =&gt; Traversable[(Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-3878.9355" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="3889.2721" y="-3882.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[Int,Int] =&gt; Traversable[(Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-3867.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; ACursorSuite.this.PropertyCheckConfigParam -->
<g id="node873" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; ACursorSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-60236.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="372.0494" y="-60240.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; ACursorSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-60225.7355" font-family="Times,serif" font-size="14.00" fill="#000000">21 times = 5ms</text>
</g>
<!-- String(&#39;mapJsonObject&#39;) =&gt; ?{def should: ?} -->
<g id="node874" class="node">
<title>String(&#39;mapJsonObject&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-29438.9355" rx="184.6098" ry="26.7407"/>
<text text-anchor="start" x="449.5494" y="-29442.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;mapJsonObject&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-29427.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;mapJsonObject&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge591" class="edge">
<title>String(&#39;mapJsonObject&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M749.4065,-29446.5369C892.9388,-29449.3111 1081.1979,-29444.2488 1144.0988,-29402.9355 1577.892,-29118.0206 1716.2813,-28421.0124 1743.9742,-28252.2038"/>
<polygon fill="#000000" stroke="#000000" points="1747.4699,-28252.5104 1745.605,-28242.0809 1740.559,-28251.3969 1747.4699,-28252.5104"/>
</g>
<!-- io.circe.Decoder[DecoderSuite.this.NotDecodable] -->
<g id="node875" class="node">
<title>io.circe.Decoder[DecoderSuite.this.NotDecodable]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-60308.9355" rx="207.7788" ry="26.7407"/>
<text text-anchor="start" x="433.0494" y="-60312.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[DecoderSuite.this.NotDecodable]</text>
<text text-anchor="middle" x="572.0494" y="-60297.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; JawnParserSuite.this.PropertyCheckConfigParam -->
<g id="node876" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; JawnParserSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-60380.9355" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="364.5494" y="-60384.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; JawnParserSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-60369.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.math.Ordering[String] -->
<g id="node877" class="node">
<title>scala.math.Ordering[String]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-14952.9355" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="11581.3883" y="-14956.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.math.Ordering[String]</text>
<text text-anchor="middle" x="11658.3883" y="-14941.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.math.Ordering[String]&#45;&gt;cats.kernel.Order[String] -->
<g id="edge661" class="edge">
<title>scala.math.Ordering[String]&#45;&gt;cats.kernel.Order[String]</title>
<path fill="none" stroke="#000000" d="M11742.6832,-14933.7537C11830.0331,-14919.3181 11964.63,-14913.2054 12043.7615,-14988.9355 12062.5613,-15006.9273 12033.1331,-15028.7663 12051.7615,-15046.9355 12121.9344,-15115.3791 12239.5476,-15116.2883 12322.0788,-15106.1624"/>
<polygon fill="#000000" stroke="#000000" points="12322.7525,-15109.6043 12332.2167,-15104.8418 12321.8483,-15102.6629 12322.7525,-15109.6043"/>
</g>
<!-- io.circe.Decoder[Map[Symbol,Int]] -->
<g id="node878" class="node">
<title>io.circe.Decoder[Map[Symbol,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-13266.9355" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="3972.7721" y="-13270.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Map[Symbol,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-13255.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Decoder[Map[Symbol,Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1133" class="edge">
<title>io.circe.Decoder[Map[Symbol,Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4207.629,-13278.0204C4353.1619,-13286.4725 4569.9656,-13288.3933 4625.8509,-13230.9355 4642.5959,-13213.7194 4617.7123,-13032.7214 4633.8509,-13014.9355 4746.632,-12890.6431 4963.6342,-12905.2273 5083.3201,-12925.0608"/>
<polygon fill="#000000" stroke="#000000" points="5082.7327,-12928.5111 5093.1789,-12926.743 5083.9101,-12921.6108 5082.7327,-12928.5111"/>
</g>
<!-- io.circe.KeyDecoder[Symbol] -->
<g id="node1355" class="node">
<title>io.circe.KeyDecoder[Symbol]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-13266.9355" rx="127.9727" ry="26.7407"/>
<text text-anchor="start" x="5085.2166" y="-13270.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.KeyDecoder[Symbol]</text>
<text text-anchor="middle" x="5167.7166" y="-13255.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[Map[Symbol,Int]]&#45;&gt;io.circe.KeyDecoder[Symbol] -->
<g id="edge1380" class="edge">
<title>io.circe.Decoder[Map[Symbol,Int]]&#45;&gt;io.circe.KeyDecoder[Symbol]</title>
<path fill="none" stroke="#000000" d="M4220.7109,-13266.9355C4434.2284,-13266.9355 4822.8662,-13266.9355 5029.6579,-13266.9355"/>
<polygon fill="#000000" stroke="#000000" points="5029.67,-13270.4356 5039.67,-13266.9355 5029.6699,-13263.4356 5029.67,-13270.4356"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node879" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-13194.9355" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="3896.2721" y="-13198.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-13183.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 42ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge703" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4289.2758,-13209.3027C4423.88,-13212.9205 4579.3351,-13205.8845 4625.8509,-13158.9355 4648.408,-13136.1685 4612.096,-13038.4703 4633.8509,-13014.9355 4747.5069,-12891.981 4963.2975,-12905.7875 5082.7813,-12925.204"/>
<polygon fill="#000000" stroke="#000000" points="5082.5374,-12928.7118 5092.9783,-12926.9127 5083.6943,-12921.8081 5082.5374,-12928.7118"/>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node1554" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-13194.9355" rx="357.5922" ry="26.7407"/>
<text text-anchor="start" x="4922.7166" y="-13198.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-13183.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge178" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4328.9967,-13194.9355C4469.2952,-13194.9355 4645.1854,-13194.9355 4799.6099,-13194.9355"/>
<polygon fill="#000000" stroke="#000000" points="4799.75,-13198.4356 4809.7499,-13194.9355 4799.7499,-13191.4356 4799.75,-13198.4356"/>
</g>
<!-- String(&#39;toShort&#39;) =&gt; ?{def should: ?} -->
<g id="node881" class="node">
<title>String(&#39;toShort&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-29366.9355" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="471.5494" y="-29370.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;toShort&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-29355.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;toShort&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge850" class="edge">
<title>String(&#39;toShort&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M670.0712,-29387.6469C791.5001,-29407.6574 999.9451,-29422.9806 1144.0988,-29330.9355 1559.0477,-29065.982 1710.8432,-28413.8869 1742.8162,-28251.8431"/>
<polygon fill="#000000" stroke="#000000" points="1746.2789,-28252.3715 1744.7504,-28241.8875 1739.4073,-28251.0364 1746.2789,-28252.3715"/>
</g>
<!-- cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.Eq[io.circe.DecodingFailure] -->
<g id="edge933" class="edge">
<title>cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.Eq[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M19605.4048,-14724.9355C19686.2469,-14724.9355 19772.1356,-14724.9355 19842.5777,-14724.9355"/>
<polygon fill="#000000" stroke="#000000" points="19842.8563,-14728.4356 19852.8563,-14724.9355 19842.8563,-14721.4356 19842.8563,-14728.4356"/>
</g>
<!-- cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.Order[io.circe.DecodingFailure] -->
<g id="edge602" class="edge">
<title>cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.Order[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M19454.7888,-14749.1398C19536.7246,-14758.5233 19642.1741,-14754.3333 19704.8751,-14688.9355 19727.0554,-14665.8013 19691.0399,-14568.3959 19712.8751,-14544.9355 19750.865,-14504.118 19810.2881,-14492.3602 19864.7599,-14491.9431"/>
<polygon fill="#000000" stroke="#000000" points="19864.85,-14495.4435 19874.8671,-14491.9927 19864.8844,-14488.4436 19864.85,-14495.4435"/>
</g>
<!-- cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;shapeless.IsTuple[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="edge456" class="edge">
<title>cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;shapeless.IsTuple[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<path fill="none" stroke="#000000" d="M19533.828,-14706.6408C19589.182,-14701.2307 19649.4136,-14695.0988 19704.8751,-14688.9355 19740.8705,-14684.9355 19779.3454,-14680.3604 19816.1044,-14675.8439"/>
<polygon fill="#000000" stroke="#000000" points="19816.9266,-14679.2691 19826.4233,-14674.5721 19816.0702,-14672.3217 19816.9266,-14679.2691"/>
</g>
<!-- cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.PartialOrder[io.circe.DecodingFailure] -->
<g id="edge1276" class="edge">
<title>cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.PartialOrder[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M19460.6885,-14748.8031C19541.0585,-14756.6558 19642.2205,-14750.7771 19704.8751,-14688.9355 19727.7899,-14666.318 19690.2978,-14639.8901 19712.8751,-14616.9355 19745.3761,-14583.8915 19792.0062,-14570.2752 19837.9879,-14566.2692"/>
<polygon fill="#000000" stroke="#000000" points="19838.3718,-14569.7507 19848.0934,-14565.5387 19837.867,-14562.7689 19838.3718,-14569.7507"/>
</g>
<!-- org.scalacheck.Shrink[List[Either[String,(String, io.circe.Json, Boolean)]]] -->
<g id="node883" class="node">
<title>org.scalacheck.Shrink[List[Either[String,(String, io.circe.Json, Boolean)]]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-7202.9355" rx="300.5408" ry="26.7407"/>
<text text-anchor="start" x="367.5494" y="-7206.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[List[Either[String,(String, io.circe.Json, Boolean)]]]</text>
<text text-anchor="middle" x="572.0494" y="-7191.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 21ms</text>
</g>
<!-- org.scalacheck.Shrink[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;List[Either[String,(String, io.circe.Json, Boolean)]] =&gt; Traversable[Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="edge121" class="edge">
<title>org.scalacheck.Shrink[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;List[Either[String,(String, io.circe.Json, Boolean)]] =&gt; Traversable[Either[String,(String, io.circe.Json, Boolean)]]</title>
<path fill="none" stroke="#000000" d="M862.7525,-7209.8479C1000.0638,-7213.1129 1166.7535,-7217.0765 1318.3918,-7220.6821"/>
<polygon fill="#000000" stroke="#000000" points="1318.7396,-7224.1913 1328.82,-7220.9301 1318.9061,-7217.1933 1318.7396,-7224.1913"/>
</g>
<!-- org.scalacheck.Shrink[Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="node1328" class="node">
<title>org.scalacheck.Shrink[Either[String,(String, io.circe.Json, Boolean)]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-6801.9355" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="2741.9013" y="-6805.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Either[String,(String, io.circe.Json, Boolean)]]</text>
<text text-anchor="middle" x="2931.4013" y="-6790.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 17ms</text>
</g>
<!-- org.scalacheck.Shrink[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;org.scalacheck.Shrink[Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="edge351" class="edge">
<title>org.scalacheck.Shrink[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;org.scalacheck.Shrink[Either[String,(String, io.circe.Json, Boolean)]]</title>
<path fill="none" stroke="#000000" d="M865.985,-7197.2429C1361.3096,-7187.3846 2312.173,-7167.2067 2347.1092,-7156.9355 2575.3731,-7089.827 2804.4027,-6910.1602 2893.0497,-6835.3478"/>
<polygon fill="#000000" stroke="#000000" points="2895.3278,-6838.005 2900.6886,-6828.8665 2890.799,-6832.6673 2895.3278,-6838.005"/>
</g>
<!-- Integral[List[Either[String,(String, io.circe.Json, Boolean)]]] -->
<g id="node1823" class="node">
<title>Integral[List[Either[String,(String, io.circe.Json, Boolean)]]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-7120.9355" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="1584.104" y="-7124.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[List[Either[String,(String, io.circe.Json, Boolean)]]]</text>
<text text-anchor="middle" x="1749.604" y="-7109.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;Integral[List[Either[String,(String, io.circe.Json, Boolean)]]] -->
<g id="edge1075" class="edge">
<title>org.scalacheck.Shrink[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;Integral[List[Either[String,(String, io.circe.Json, Boolean)]]]</title>
<path fill="none" stroke="#000000" d="M807.3457,-7186.1937C912.7819,-7178.7201 1038.6738,-7169.8357 1152.0988,-7161.9355 1277.5804,-7153.1956 1417.8956,-7143.5603 1531.0042,-7135.8275"/>
<polygon fill="#000000" stroke="#000000" points="1531.4319,-7139.3065 1541.1699,-7135.1326 1530.9544,-7132.3228 1531.4319,-7139.3065"/>
</g>
<!-- org.scalacheck.util.Buildable[Either[String,(String, io.circe.Json, Boolean)],List[Either[String,(String, io.circe.Json, Boolean)]]] -->
<g id="node1945" class="node">
<title>org.scalacheck.util.Buildable[Either[String,(String, io.circe.Json, Boolean)],List[Either[String,(String, io.circe.Json, Boolean)]]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-7302.9355" rx="506.077" ry="26.7407"/>
<text text-anchor="start" x="1399.604" y="-7306.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Either[String,(String, io.circe.Json, Boolean)],List[Either[String,(String, io.circe.Json, Boolean)]]]</text>
<text text-anchor="middle" x="1749.604" y="-7291.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Shrink[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;org.scalacheck.util.Buildable[Either[String,(String, io.circe.Json, Boolean)],List[Either[String,(String, io.circe.Json, Boolean)]]] -->
<g id="edge1356" class="edge">
<title>org.scalacheck.Shrink[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;org.scalacheck.util.Buildable[Either[String,(String, io.circe.Json, Boolean)],List[Either[String,(String, io.circe.Json, Boolean)]]]</title>
<path fill="none" stroke="#000000" d="M748.57,-7224.7172C863.3891,-7238.3153 1016.4498,-7255.3728 1152.0988,-7266.9355 1225.1827,-7273.1652 1303.3862,-7278.6963 1378.3308,-7283.4404"/>
<polygon fill="#000000" stroke="#000000" points="1378.2047,-7286.9393 1388.4049,-7284.0746 1378.6446,-7279.9531 1378.2047,-7286.9393"/>
</g>
<!-- String(&#39;foo&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node886" class="node">
<title>String(&#39;foo&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-60452.9355" rx="121.7449" ry="26.7407"/>
<text text-anchor="start" x="494.0494" y="-60456.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;foo&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="572.0494" y="-60441.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc3] -->
<g id="node887" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc3]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-60524.9355" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="1608.604" y="-60528.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc3]</text>
<text text-anchor="middle" x="1749.604" y="-60513.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Decoder[cats.data.NonEmptyStream[Int]] -->
<g id="node888" class="node">
<title>io.circe.Decoder[cats.data.NonEmptyStream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-14346.9355" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="3933.7721" y="-14350.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[cats.data.NonEmptyStream[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-14335.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- io.circe.Decoder[cats.data.NonEmptyStream[Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge478" class="edge">
<title>io.circe.Decoder[cats.data.NonEmptyStream[Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4248.0032,-14360.4568C4390.7802,-14366.9874 4575.7034,-14364.1109 4625.8509,-14310.9355 4638.2008,-14297.84 4621.9621,-13028.451 4633.8509,-13014.9355 4745.1522,-12888.4062 4964.2521,-12904.3225 5084.2649,-12924.8473"/>
<polygon fill="#000000" stroke="#000000" points="5083.6916,-12928.3001 5094.1469,-12926.5862 5084.9048,-12921.4061 5083.6916,-12928.3001"/>
</g>
<!-- io.circe.Decoder[cats.data.NonEmptyStream[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with cats.data.NonEmptyStream[Int]] -->
<g id="edge833" class="edge">
<title>io.circe.Decoder[cats.data.NonEmptyStream[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with cats.data.NonEmptyStream[Int]]</title>
<path fill="none" stroke="#000000" d="M4254.8553,-14335.0696C4362.9235,-14328.0854 4502.1451,-14319.0564 4625.8509,-14310.9355 4703.553,-14305.8347 4787.5193,-14300.278 4865.62,-14295.0906"/>
<polygon fill="#000000" stroke="#000000" points="4865.8619,-14298.5823 4875.6079,-14294.4271 4865.3978,-14291.5977 4865.8619,-14298.5823"/>
</g>
<!-- io.circe.Decoder[cats.data.NonEmptyStream[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,Int,Stream[Int]] -->
<g id="edge1184" class="edge">
<title>io.circe.Decoder[cats.data.NonEmptyStream[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,Int,Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4276.1336,-14346.9355C4451.5459,-14346.9355 4705.208,-14346.9355 4897.1528,-14346.9355"/>
<polygon fill="#000000" stroke="#000000" points="4897.396,-14350.4356 4907.3959,-14346.9355 4897.3959,-14343.4356 4897.396,-14350.4356"/>
</g>
<!-- a.type =&gt; ?{def asJson: ?} -->
<g id="node890" class="node">
<title>a.type =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-60596.9355" rx="115.0173" ry="26.7407"/>
<text text-anchor="start" x="498.5494" y="-60600.7355" font-family="Times,serif" font-size="14.00" fill="#000000">a.type =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-60585.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc20] -->
<g id="node891" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc20]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-50480.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-50484.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc20]</text>
<text text-anchor="middle" x="572.0494" y="-50469.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc20]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc20]] -->
<g id="edge1361" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc20]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc20]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-50480.9355C944.0278,-50480.9355 1209.2209,-50480.9355 1419.4845,-50480.9355"/>
<polygon fill="#000000" stroke="#000000" points="1419.7702,-50484.4356 1429.7702,-50480.9355 1419.7702,-50477.4356 1419.7702,-50484.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(String, io.circe.Json)],io.circe.Json,List[io.circe.Json]] -->
<g id="node892" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(String, io.circe.Json)],io.circe.Json,List[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-60668.9355" rx="395.9596" ry="26.7407"/>
<text text-anchor="start" x="300.0494" y="-60672.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(String, io.circe.Json)],io.circe.Json,List[io.circe.Json]]</text>
<text text-anchor="middle" x="572.0494" y="-60657.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc22] -->
<g id="node894" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc22]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-60740.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="1617.104" y="-60744.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc22]</text>
<text text-anchor="middle" x="1749.604" y="-60729.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;toInt&#39;) =&gt; ?{def should: ?} -->
<g id="node895" class="node">
<title>String(&#39;toInt&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-29294.9355" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="478.5494" y="-29298.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;toInt&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-29283.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;toInt&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge218" class="edge">
<title>String(&#39;toInt&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M668.861,-29314.8529C789.7411,-29334.2391 998.3329,-29349.1168 1144.0988,-29258.9355 1539.929,-29014.0464 1704.7371,-28408.0317 1741.4042,-28252.0318"/>
<polygon fill="#000000" stroke="#000000" points="1744.8807,-28252.5333 1743.73,-28242.0011 1738.0616,-28250.9521 1744.8807,-28252.5333"/>
</g>
<!-- org.scalacheck.Shrink[cats.data.NonEmptyVector[Int]] -->
<g id="node896" class="node">
<title>org.scalacheck.Shrink[cats.data.NonEmptyVector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-36422.9355" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="421.5494" y="-36426.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[cats.data.NonEmptyVector[Int]]</text>
<text text-anchor="middle" x="572.0494" y="-36411.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.NonEmptyVector[Int]]&#45;&gt;Integral[cats.data.NonEmptyVector[Int]] -->
<g id="edge444" class="edge">
<title>org.scalacheck.Shrink[cats.data.NonEmptyVector[Int]]&#45;&gt;Integral[cats.data.NonEmptyVector[Int]]</title>
<path fill="none" stroke="#000000" d="M771.0375,-36435.3746C882.9898,-36442.3505 1025.3318,-36451.1829 1152.0988,-36458.9355 1297.0043,-36467.7975 1461.688,-36477.7078 1581.414,-36484.8833"/>
<polygon fill="#000000" stroke="#000000" points="1581.2119,-36488.3774 1591.4033,-36485.4819 1581.6306,-36481.39 1581.2119,-36488.3774"/>
</g>
<!-- org.scalacheck.Shrink[cats.data.NonEmptyVector[Int]]&#45;&gt;cats.data.NonEmptyVector[Int] =&gt; Traversable[Int] -->
<g id="edge1430" class="edge">
<title>org.scalacheck.Shrink[cats.data.NonEmptyVector[Int]]&#45;&gt;cats.data.NonEmptyVector[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M796.3101,-36422.9355C1006.0765,-36422.9355 1317.614,-36422.9355 1526.8812,-36422.9355"/>
<polygon fill="#000000" stroke="#000000" points="1527.0796,-36426.4356 1537.0796,-36422.9355 1527.0796,-36419.4356 1527.0796,-36426.4356"/>
</g>
<!-- Fractional[cats.data.NonEmptyVector[Int]] -->
<g id="node1958" class="node">
<title>Fractional[cats.data.NonEmptyVector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-36350.9355" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="1631.604" y="-36354.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[cats.data.NonEmptyVector[Int]]</text>
<text text-anchor="middle" x="1749.604" y="-36339.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[cats.data.NonEmptyVector[Int]]&#45;&gt;Fractional[cats.data.NonEmptyVector[Int]] -->
<g id="edge102" class="edge">
<title>org.scalacheck.Shrink[cats.data.NonEmptyVector[Int]]&#45;&gt;Fractional[cats.data.NonEmptyVector[Int]]</title>
<path fill="none" stroke="#000000" d="M771.0375,-36410.4965C882.9898,-36403.5206 1025.3318,-36394.6882 1152.0988,-36386.9355 1293.8351,-36378.2674 1454.494,-36368.5963 1573.4947,-36361.4624"/>
<polygon fill="#000000" stroke="#000000" points="1574.0194,-36364.9374 1583.7921,-36360.8452 1573.6006,-36357.9499 1574.0194,-36364.9374"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Byte,Int]] -->
<g id="node897" class="node">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Byte,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-2787.9355" rx="265.3302" ry="26.7407"/>
<text text-anchor="start" x="2751.9013" y="-2791.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[scala.collection.immutable.Map[Byte,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-2776.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;scala.collection.immutable.Map[Byte,Int] =&gt; Traversable[(Byte, Int)] -->
<g id="edge1440" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;scala.collection.immutable.Map[Byte,Int] =&gt; Traversable[(Byte, Int)]</title>
<path fill="none" stroke="#000000" d="M3146.43,-2803.6832C3271.1921,-2800.1391 3420.4593,-2771.706 3507.6933,-2669.9355 3519.6387,-2655.9996 3502.8208,-2518.0199 3515.6933,-2504.9355 3558.9254,-2460.9921 3697.0876,-2451.9247 3824.7443,-2453.8767"/>
<polygon fill="#000000" stroke="#000000" points="3825.0303,-2457.3822 3835.0904,-2454.0591 3825.1537,-2450.3833 3825.0303,-2457.3822"/>
</g>
<!-- org.scalacheck.Shrink[(Byte, Int)] -->
<g id="node1210" class="node">
<title>org.scalacheck.Shrink[(Byte, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-3014.9355" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="3977.2721" y="-3018.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Byte, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-3003.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;org.scalacheck.Shrink[(Byte, Int)] -->
<g id="edge1549" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;org.scalacheck.Shrink[(Byte, Int)]</title>
<path fill="none" stroke="#000000" d="M3167.5327,-2775.6839C3286.4441,-2782.8857 3422.9783,-2813.954 3507.6933,-2906.9355 3518.5353,-2918.8356 3504.0518,-2967.8164 3515.6933,-2978.9355 3572.6809,-3033.3661 3782.6154,-3033.0263 3927.3175,-3025.6288"/>
<polygon fill="#000000" stroke="#000000" points="3927.8189,-3029.1073 3937.6203,-3025.0846 3927.4496,-3022.117 3927.8189,-3029.1073"/>
</g>
<!-- Integral[scala.collection.immutable.Map[Byte,Int]] -->
<g id="node1843" class="node">
<title>Integral[scala.collection.immutable.Map[Byte,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-2540.9355" rx="210.0214" ry="26.7407"/>
<text text-anchor="start" x="3930.2721" y="-2544.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[scala.collection.immutable.Map[Byte,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-2529.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;Integral[scala.collection.immutable.Map[Byte,Int]] -->
<g id="edge564" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;Integral[scala.collection.immutable.Map[Byte,Int]]</title>
<path fill="none" stroke="#000000" d="M3157.2338,-2802.0447C3278.9548,-2796.6143 3421.4591,-2766.8166 3507.6933,-2669.9355 3521.4847,-2654.4414 3500.8723,-2591.4479 3515.6933,-2576.9355 3565.6331,-2528.0358 3736.568,-2522.9258 3875.7002,-2527.7189"/>
<polygon fill="#000000" stroke="#000000" points="3875.9627,-2531.2307 3886.0834,-2528.0968 3876.2174,-2524.2353 3875.9627,-2531.2307"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Byte, Int),scala.collection.immutable.Map[Byte,Int]] -->
<g id="edge432" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Byte, Int),scala.collection.immutable.Map[Byte,Int]]</title>
<path fill="none" stroke="#000000" d="M3032.2858,-2812.8429C3148.1927,-2840.4387 3344.4629,-2884.0544 3515.6933,-2906.9355 3594.6357,-2917.4845 3680.3237,-2924.9728 3760.2178,-2930.2778"/>
<polygon fill="#000000" stroke="#000000" points="3760.229,-2933.7859 3770.4362,-2930.9466 3760.6862,-2926.8009 3760.229,-2933.7859"/>
</g>
<!-- cats.kernel.Eq[io.circe.KeyDecoder[scala.util.Either[Unit,Unit]]] -->
<g id="node898" class="node">
<title>cats.kernel.Eq[io.circe.KeyDecoder[scala.util.Either[Unit,Unit]]]</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-13500.9355" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="9838.5427" y="-13504.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.KeyDecoder[scala.util.Either[Unit,Unit]]]</text>
<text text-anchor="middle" x="10016.0427" y="-13489.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.KeyDecoder[scala.util.Either[Unit,Unit]]]&#45;&gt;cats.kernel.Eq[scala.util.Either[Unit,Unit]] -->
<g id="edge374" class="edge">
<title>cats.kernel.Eq[io.circe.KeyDecoder[scala.util.Either[Unit,Unit]]]&#45;&gt;cats.kernel.Eq[scala.util.Either[Unit,Unit]]</title>
<path fill="none" stroke="#000000" d="M10278.5374,-13500.9355C10406.1563,-13500.9355 10556.5424,-13500.9355 10672.1842,-13500.9355"/>
<polygon fill="#000000" stroke="#000000" points="10672.2057,-13504.4356 10682.2057,-13500.9355 10672.2056,-13497.4356 10672.2057,-13504.4356"/>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node900" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-13050.9355" rx="373.2048" ry="26.7407"/>
<text text-anchor="start" x="4911.7166" y="-13054.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-13039.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B] -->
<g id="node901" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-60812.9355" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="390.0494" y="-60816.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B]</text>
<text text-anchor="middle" x="572.0494" y="-60801.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;rightAt&#39;) =&gt; ?{def should: ?} -->
<g id="node902" class="node">
<title>String(&#39;rightAt&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-29222.9355" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="472.0494" y="-29226.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;rightAt&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-29211.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;rightAt&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge379" class="edge">
<title>String(&#39;rightAt&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M673.9757,-29242.9587C795.151,-29261.1328 999.1713,-29273.4672 1144.0988,-29186.9355 1521.2614,-28961.7435 1698.4247,-28401.2251 1739.8696,-28251.9494"/>
<polygon fill="#000000" stroke="#000000" points="1743.35,-28252.4922 1742.62,-28241.9225 1736.5993,-28250.6404 1743.35,-28252.4922"/>
</g>
<!-- String(&#39;withFocus&#39;) =&gt; ?{def should: ?} -->
<g id="node903" class="node">
<title>String(&#39;withFocus&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-29150.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="463.5494" y="-29154.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;withFocus&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-29139.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;withFocus&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1314" class="edge">
<title>String(&#39;withFocus&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M681.0393,-29171.1495C802.5162,-29187.8414 1000.6962,-29197.1776 1144.0988,-29114.9355 1503.0487,-28909.0761 1691.8903,-28393.5762 1738.1988,-28251.6236"/>
<polygon fill="#000000" stroke="#000000" points="1741.5454,-28252.6497 1741.2871,-28242.058 1734.8839,-28250.499 1741.5454,-28252.6497"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[io.circe.Json],String,That] -->
<g id="node904" class="node">
<title>scala.collection.generic.CanBuildFrom[List[io.circe.Json],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-60884.9355" rx="284.0141" ry="26.7407"/>
<text text-anchor="start" x="379.0494" y="-60888.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[io.circe.Json],String,That]</text>
<text text-anchor="middle" x="572.0494" y="-60873.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- String(&#39;e&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node905" class="node">
<title>String(&#39;e&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-60956.9355" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="500.0494" y="-60960.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;e&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="572.0494" y="-60945.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- i.type =&gt; ?{def asJson: ?} -->
<g id="node906" class="node">
<title>i.type =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-61028.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="499.5494" y="-61032.7355" font-family="Times,serif" font-size="14.00" fill="#000000">i.type =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-61017.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node907" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-13122.9355" rx="516.7901" ry="26.7407"/>
<text text-anchor="start" x="4810.2166" y="-13126.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-13111.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int)] -->
<g id="node909" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-16818.9355" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="10746.9287" y="-16822.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="10858.4287" y="-16807.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 88ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge930" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M10963.3708,-16840.0923C11054.8885,-16851.9715 11185.1606,-16851.9821 11265.0151,-16777.9355 11279.9104,-16764.1236 11257.7708,-16746.3614 11273.0151,-16732.9355 11337.3602,-16676.2656 11983.2003,-16755.6325 12043.7615,-16694.9355 12057.1177,-16681.5493 12040.2092,-16539.9063 12051.7615,-16524.9355 12258.9772,-16256.4019 12549.0635,-16545.289 12780.0814,-16296.9355 12790.6545,-16285.569 12776.0028,-16272.6872 12788.0814,-16262.9355 12875.9003,-16192.0352 13690.8414,-16243.9355 13803.7086,-16243.9355 13803.7086,-16243.9355 13803.7086,-16243.9355 14433.9626,-16243.9355 14826.3213,-16243.9355 15282.9519,-16364.9521 15474.8362,-16421.4768"/>
<polygon fill="#000000" stroke="#000000" points="15474.0212,-16424.8856 15484.6033,-16424.3657 15476.0067,-16418.1731 15474.0212,-16424.8856"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge562" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M11027.213,-16817.568C11112.5497,-16807.2245 11209.5382,-16778.6878 11265.0151,-16706.9355 11283.9787,-16682.4085 11251.9732,-16171.7047 11273.0151,-16148.9355 11348.986,-16066.7284 11489.2606,-16076.2632 11577.9864,-16092.9542"/>
<polygon fill="#000000" stroke="#000000" points="11577.5231,-16096.4297 11588.0085,-16094.911 11578.8646,-16089.5594 11577.5231,-16096.4297"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge1514" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M10984.2984,-16800.9917C11076.8003,-16795.6434 11197.6591,-16806.5696 11265.0151,-16884.9355 11279.3559,-16901.6206 11258.1171,-17660.746 11273.0151,-17676.9355 11345.9639,-17756.2087 11478.6852,-17750.3105 11567.7031,-17734.8283"/>
<polygon fill="#000000" stroke="#000000" points="11568.5788,-17738.2267 11577.7946,-17732.9999 11567.3308,-17731.3388 11568.5788,-17738.2267"/>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int)] -->
<g id="node1060" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-16658.9355" rx="182.3671" ry="26.7407"/>
<text text-anchor="start" x="11537.3883" y="-16662.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="11658.3883" y="-16647.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int)] -->
<g id="edge1242" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M10958.8924,-16840.6545C11051.5535,-16854.2285 11186.3123,-16856.5041 11265.0151,-16777.9355 11277.3464,-16765.6253 11260.7176,-16712.2797 11273.0151,-16699.9355 11341.1885,-16631.5036 11454.0982,-16626.9309 11540.1271,-16636.1143"/>
<polygon fill="#000000" stroke="#000000" points="11539.8822,-16639.609 11550.2149,-16637.2667 11540.6768,-16632.6542 11539.8822,-16639.609"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int),L] -->
<g id="node1420" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-16586.9355" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="11516.8883" y="-16590.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="11658.3883" y="-16575.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int),L] -->
<g id="edge667" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M10955.8086,-16840.9227C11049.2217,-16855.6588 11187.2258,-16859.6275 11265.0151,-16777.9355 11288.7995,-16752.9579 11249.139,-16647.8256 11273.0151,-16622.9355 11341.209,-16551.8455 11457.6771,-16550.3702 11544.7671,-16562.0918"/>
<polygon fill="#000000" stroke="#000000" points="11544.3082,-16565.5617 11554.701,-16563.5027 11545.2925,-16558.6312 11544.3082,-16565.5617"/>
</g>
<!-- cats.kernel.Eq[Long] -->
<g id="node910" class="node">
<title>cats.kernel.Eq[Long]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-55196.9355" rx="92.7622" ry="26.7407"/>
<text text-anchor="start" x="514.5494" y="-55200.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Long]</text>
<text text-anchor="middle" x="572.0494" y="-55185.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- cats.kernel.Eq[Long]&#45;&gt;shapeless.IsTuple[Long] -->
<g id="edge362" class="edge">
<title>cats.kernel.Eq[Long]&#45;&gt;shapeless.IsTuple[Long]</title>
<path fill="none" stroke="#000000" d="M664.4501,-55194.1107C877.0778,-55187.6103 1400.6271,-55171.6044 1634.0464,-55164.4684"/>
<polygon fill="#000000" stroke="#000000" points="1634.3739,-55167.9601 1644.2622,-55164.156 1634.1599,-55160.9633 1634.3739,-55167.9601"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node911" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-13122.9355" rx="417.3861" ry="26.7407"/>
<text text-anchor="start" x="3783.7721" y="-13126.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-13111.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 48ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1231" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4456.4346,-13133.2006C4532.6279,-13127.2631 4597.7863,-13113.7409 4625.8509,-13086.9355 4649.134,-13064.6972 4611.3522,-13037.967 4633.8509,-13014.9355 4750.2192,-12895.8119 4962.9853,-12907.5681 5081.7532,-12925.7681"/>
<polygon fill="#000000" stroke="#000000" points="5081.4694,-12929.2667 5091.8936,-12927.3728 5082.5636,-12922.3527 5081.4694,-12929.2667"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge1309" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4488.2176,-13122.9355C4538.0392,-13122.9355 4589.3929,-13122.9355 4640.5001,-13122.9355"/>
<polygon fill="#000000" stroke="#000000" points="4640.7178,-13126.4356 4650.7177,-13122.9355 4640.7177,-13119.4356 4640.7178,-13126.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node912" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-21158.9355" rx="352.6926" ry="26.7407"/>
<text text-anchor="start" x="330.5494" y="-21162.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-21147.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 43ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge631" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M924.9557,-21158.9355C1030.6758,-21158.9355 1148.5516,-21158.9355 1261.3542,-21158.9355"/>
<polygon fill="#000000" stroke="#000000" points="1261.5534,-21162.4356 1271.5533,-21158.9355 1261.5533,-21155.4356 1261.5534,-21162.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1501" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M863.0296,-21143.7347C982.5187,-21144.1311 1102.5936,-21155.3687 1144.0988,-21194.9355 1167.4031,-21217.1515 1128.7648,-21244.7507 1152.0988,-21266.9355 1293.807,-21401.6651 1549.9787,-21357.7949 1675.8076,-21325.079"/>
<polygon fill="#000000" stroke="#000000" points="1676.9678,-21328.3924 1685.7388,-21322.4493 1675.176,-21321.6256 1676.9678,-21328.3924"/>
</g>
<!-- io.circe.Decoder[Bomb$3] -->
<g id="node913" class="node">
<title>io.circe.Decoder[Bomb$3]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-46718.9355" rx="115.0173" ry="26.7407"/>
<text text-anchor="start" x="1676.104" y="-46722.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Bomb$3]</text>
<text text-anchor="middle" x="1749.604" y="-46707.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.Decoder[Bomb$3]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[Bomb$3]] -->
<g id="edge1265" class="edge">
<title>io.circe.Decoder[Bomb$3]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[Bomb$3]]</title>
<path fill="none" stroke="#000000" d="M1865.0715,-46718.9355C2059.4148,-46718.9355 2455.1795,-46718.9355 2706.0857,-46718.9355"/>
<polygon fill="#000000" stroke="#000000" points="2706.4351,-46722.4356 2716.435,-46718.9355 2706.435,-46715.4356 2706.4351,-46722.4356"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node914" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="9131.2303" cy="-17219.9355" rx="354.0212" ry="26.7407"/>
<text text-anchor="start" x="8888.7303" y="-17223.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="9131.2303" y="-17208.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.immutable.Map[Long,Int]] -->
<g id="node916" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.immutable.Map[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-8932.9355" rx="386.1606" ry="26.7407"/>
<text text-anchor="start" x="4902.7166" y="-8936.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.immutable.Map[Long,Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-8921.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; SerializableSuite.this.PropertyCheckConfigParam -->
<g id="node917" class="node">
<title>(Any =&gt; Nothing) =&gt; SerializableSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-61100.9355" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="373.5494" y="-61104.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; SerializableSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-61089.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P] -->
<g id="node918" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-61172.9355" rx="470.4521" ry="26.7407"/>
<text text-anchor="start" x="247.5494" y="-61176.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P]</text>
<text text-anchor="middle" x="572.0494" y="-61161.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.ObjectEncoder[Map[String,Int]] -->
<g id="node920" class="node">
<title>io.circe.ObjectEncoder[Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-19646.9355" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="461.5494" y="-19650.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.ObjectEncoder[Map[String,Int]]</text>
<text text-anchor="middle" x="572.0494" y="-19635.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 6ms</text>
</g>
<!-- io.circe.ObjectEncoder[Map[String,Int]]&#45;&gt;io.circe.KeyEncoder[String] -->
<g id="edge272" class="edge">
<title>io.circe.ObjectEncoder[Map[String,Int]]&#45;&gt;io.circe.KeyEncoder[String]</title>
<path fill="none" stroke="#000000" d="M739.826,-19646.9355C976.8094,-19646.9355 1404.5773,-19646.9355 1619.2644,-19646.9355"/>
<polygon fill="#000000" stroke="#000000" points="1619.325,-19650.4356 1629.325,-19646.9355 1619.3249,-19643.4356 1619.325,-19650.4356"/>
</g>
<!-- io.circe.ObjectEncoder[Map[String,Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge260" class="edge">
<title>io.circe.ObjectEncoder[Map[String,Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M720.6089,-19634.4468C870.7409,-19625.4953 1088.3045,-19623.8196 1144.0988,-19682.9355 1159.1993,-19698.9351 1136.9769,-21250.9562 1152.0988,-21266.9355 1287.7157,-21410.2426 1550.817,-21360.7876 1677.7169,-21325.6664"/>
<polygon fill="#000000" stroke="#000000" points="1679.0451,-21328.9286 1687.7218,-21322.8487 1677.1474,-21322.1907 1679.0451,-21328.9286"/>
</g>
<!-- Integral[Map[String,Int]] -->
<g id="node921" class="node">
<title>Integral[Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-5678.9355" rx="108.789" ry="26.7407"/>
<text text-anchor="start" x="4001.7721" y="-5682.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Map[String,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-5667.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc9] -->
<g id="node922" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc9]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-61244.9355" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="452.0494" y="-61248.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc9]</text>
<text text-anchor="middle" x="572.0494" y="-61233.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc9] -->
<g id="node1398" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc9]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-61244.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="1620.104" y="-61248.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc9]</text>
<text text-anchor="middle" x="1749.604" y="-61233.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc9]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc9] -->
<g id="edge477" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc9]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc9]</title>
<path fill="none" stroke="#000000" d="M753.14,-61244.9355C966.8731,-61244.9355 1321.4043,-61244.9355 1544.915,-61244.9355"/>
<polygon fill="#000000" stroke="#000000" points="1545.1268,-61248.4356 1555.1268,-61244.9355 1545.1267,-61241.4356 1545.1268,-61248.4356"/>
</g>
<!-- String(&#39;delete&#39;) =&gt; ?{def should: ?} -->
<g id="node923" class="node">
<title>String(&#39;delete&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-29078.9355" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="475.5494" y="-29082.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;delete&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-29067.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;delete&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1450" class="edge">
<title>String(&#39;delete&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M677.7364,-29097.7479C798.4258,-29113.7246 998.0213,-29122.9495 1144.0988,-29042.9355 1485.0425,-28856.1835 1684.7967,-28385.8975 1736.2513,-28251.3899"/>
<polygon fill="#000000" stroke="#000000" points="1739.5645,-28252.5236 1739.8355,-28241.9323 1733.0188,-28250.0429 1739.5645,-28252.5236"/>
</g>
<!-- org.scalacheck.Arbitrary[Set[Int]] -->
<g id="node924" class="node">
<title>org.scalacheck.Arbitrary[Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-15786.9355" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="3978.2721" y="-15790.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Set[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-15775.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Set[Int]]&#45;&gt;Set[Int] =&gt; Traversable[Int] -->
<g id="edge1170" class="edge">
<title>org.scalacheck.Arbitrary[Set[Int]]&#45;&gt;Set[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M4205.3739,-15795.6057C4317.7877,-15802.861 4482.2702,-15813.51 4625.8509,-15822.9355 4768.627,-15832.3083 4932.5533,-15843.22 5042.3764,-15850.5522"/>
<polygon fill="#000000" stroke="#000000" points="5042.2905,-15854.0541 5052.5015,-15851.2282 5042.7569,-15847.0697 5042.2905,-15854.0541"/>
</g>
<!-- org.scalacheck.Arbitrary[Set[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Set[Int]] -->
<g id="edge706" class="edge">
<title>org.scalacheck.Arbitrary[Set[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Set[Int]]</title>
<path fill="none" stroke="#000000" d="M4213.0539,-15786.9355C4410.496,-15786.9355 4767.7102,-15786.9355 4984.7564,-15786.9355"/>
<polygon fill="#000000" stroke="#000000" points="4984.9849,-15790.4356 4994.9848,-15786.9355 4984.9848,-15783.4356 4984.9849,-15790.4356"/>
</g>
<!-- scala.reflect.ClassTag[Set[Int]] -->
<g id="node1474" class="node">
<title>scala.reflect.ClassTag[Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-15714.9355" rx="131.5437" ry="26.7407"/>
<text text-anchor="start" x="5082.7166" y="-15718.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Set[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-15703.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Set[Int]]&#45;&gt;scala.reflect.ClassTag[Set[Int]] -->
<g id="edge1318" class="edge">
<title>org.scalacheck.Arbitrary[Set[Int]]&#45;&gt;scala.reflect.ClassTag[Set[Int]]</title>
<path fill="none" stroke="#000000" d="M4205.3739,-15778.2654C4317.7877,-15771.0101 4482.2702,-15760.3611 4625.8509,-15750.9355 4764.4076,-15741.8398 4922.8828,-15731.2947 5032.4999,-15723.9782"/>
<polygon fill="#000000" stroke="#000000" points="5032.8766,-15727.461 5042.6212,-15723.3026 5032.4103,-15720.4765 5032.8766,-15727.461"/>
</g>
<!-- org.scalacheck.Arbitrary[Set[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge617" class="edge">
<title>org.scalacheck.Arbitrary[Set[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4200.5058,-15797.9318C4346.3345,-15807.0859 4570.0711,-15810.4135 4625.8509,-15750.9355 4641.2757,-15734.4882 4627.0741,-2784.4417 4633.8509,-2762.9355 4736.0935,-2438.4686 5030.4659,-2131.6605 5132.4399,-2032.3415"/>
<polygon fill="#000000" stroke="#000000" points="5134.9831,-2034.7508 5139.7281,-2025.2779 5130.1114,-2029.7242 5134.9831,-2034.7508"/>
</g>
<!-- String(&#39;fromFloatOrString&#39;) =&gt; ?{def should: ?} -->
<g id="node926" class="node">
<title>String(&#39;fromFloatOrString&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-29006.9355" rx="197.0658" ry="26.7407"/>
<text text-anchor="start" x="440.5494" y="-29010.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;fromFloatOrString&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-28995.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 162ms</text>
</g>
<!-- String(&#39;fromFloatOrString&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1310" class="edge">
<title>String(&#39;fromFloatOrString&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M700.914,-29027.3259C822.3013,-29040.1944 1005.6829,-29042.85 1144.0988,-28970.9355 1467.3203,-28803.0046 1677.0665,-28378.0175 1733.9641,-28251.2006"/>
<polygon fill="#000000" stroke="#000000" points="1737.2322,-28252.4653 1738.0991,-28241.906 1730.8365,-28249.62 1737.2322,-28252.4653"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc4] -->
<g id="node927" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc4]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-58652.9355" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="430.5494" y="-58656.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc4]</text>
<text text-anchor="middle" x="572.0494" y="-58641.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc4]&#45;&gt;Fractional[ProductCodecSuite.this.Cc4] -->
<g id="edge441" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc4]&#45;&gt;Fractional[ProductCodecSuite.this.Cc4]</title>
<path fill="none" stroke="#000000" d="M777.8371,-58659.2269C1004.4907,-58666.1561 1364.9051,-58677.1746 1577.2555,-58683.6665"/>
<polygon fill="#000000" stroke="#000000" points="1577.152,-58687.1649 1587.2544,-58683.9722 1577.366,-58680.1682 1577.152,-58687.1649"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc4] -->
<g id="node1710" class="node">
<title>Integral[ProductCodecSuite.this.Cc4]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-58616.9355" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="1647.104" y="-58620.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc4]</text>
<text text-anchor="middle" x="1749.604" y="-58605.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc4]&#45;&gt;Integral[ProductCodecSuite.this.Cc4] -->
<g id="edge1336" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc4]&#45;&gt;Integral[ProductCodecSuite.this.Cc4]</title>
<path fill="none" stroke="#000000" d="M777.8371,-58646.6442C1007.2972,-58639.6292 1373.8512,-58628.423 1585.075,-58621.9655"/>
<polygon fill="#000000" stroke="#000000" points="1585.4381,-58625.4561 1595.3265,-58621.6521 1585.2242,-58618.4594 1585.4381,-58625.4561"/>
</g>
<!-- m.type =&gt; ?{def asJsonObject: ?} -->
<g id="node929" class="node">
<title>m.type =&gt; ?{def asJsonObject: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-61316.9355" rx="144.5" ry="26.7407"/>
<text text-anchor="start" x="478.0494" y="-61320.7355" font-family="Times,serif" font-size="14.00" fill="#000000">m.type =&gt; ?{def asJsonObject: ?}</text>
<text text-anchor="middle" x="572.0494" y="-61305.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(5) =&gt; ?{def asJson: ?} -->
<g id="node930" class="node">
<title>Int(5) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-61388.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="499.5494" y="-61392.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Int(5) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-61377.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 3ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc14]] -->
<g id="node931" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc14]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-61460.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="1549.604" y="-61464.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc14]]</text>
<text text-anchor="middle" x="1749.604" y="-61449.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[List[io.circe.CursorOp]] -->
<g id="node932" class="node">
<title>shapeless.IsTuple[List[io.circe.CursorOp]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-38654.9355" rx="176.1392" ry="26.7407"/>
<text text-anchor="start" x="2814.9013" y="-38658.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[List[io.circe.CursorOp]]</text>
<text text-anchor="middle" x="2931.4013" y="-38643.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;Eq[JsonObject]&#39;) =&gt; ?{def should: ?} -->
<g id="node933" class="node">
<title>String(&#39;Eq[JsonObject]&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-28934.9355" rx="184.6098" ry="26.7407"/>
<text text-anchor="start" x="449.5494" y="-28938.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Eq[JsonObject]&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-28923.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Eq[JsonObject]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1325" class="edge">
<title>String(&#39;Eq[JsonObject]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M702.4538,-28954.0017C823.2929,-28965.5537 1004.8468,-28966.9803 1144.0988,-28898.9355 1450.0108,-28749.4533 1668.6757,-28369.645 1731.2859,-28250.9492"/>
<polygon fill="#000000" stroke="#000000" points="1734.4911,-28252.373 1736.0278,-28241.8902 1728.2893,-28249.1266 1734.4911,-28252.373"/>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc4] -->
<g id="node934" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc4]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-61532.9355" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="1608.604" y="-61536.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc4]</text>
<text text-anchor="middle" x="1749.604" y="-61521.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- List[io.circe.Json] =&gt; ?{def asJson: ?} -->
<g id="node935" class="node">
<title>List[io.circe.Json] =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-61604.9355" rx="161.441" ry="26.7407"/>
<text text-anchor="start" x="466.0494" y="-61608.7355" font-family="Times,serif" font-size="14.00" fill="#000000">List[io.circe.Json] =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-61593.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Integral[Set[Either[Int,String]]] -->
<g id="node936" class="node">
<title>Integral[Set[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-11106.9355" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="2845.4013" y="-11110.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Set[Either[Int,String]]]</text>
<text text-anchor="middle" x="2931.4013" y="-11095.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node938" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-16332.9355" rx="376.3617" ry="26.7407"/>
<text text-anchor="start" x="3812.7721" y="-16336.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-16321.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 183ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge284" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M4330.6356,-16313.4953C4425.9486,-16307.1108 4534.7414,-16300.694 4633.8509,-16296.9355 5339.3426,-16270.1816 5516.2358,-16277.9355 6222.2346,-16277.9355 6222.2346,-16277.9355 6222.2346,-16277.9355 10016.0427,-16277.9355 10577.6313,-16277.9355 10714.9776,-16211.9916 11273.0151,-16148.9355 11369.1881,-16138.0684 11479.1323,-16128.0337 11556.9077,-16121.3348"/>
<polygon fill="#000000" stroke="#000000" points="11557.5207,-16124.7951 11567.1848,-16120.4529 11556.9222,-16117.8208 11557.5207,-16124.7951"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge585" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M4076.4533,-16360.1693C4105.8981,-16493.5607 4254.6202,-17080.7396 4633.8509,-17308.9355 4936.4869,-17491.0418 5869.0332,-17365.9355 6222.2346,-17365.9355 6222.2346,-17365.9355 6222.2346,-17365.9355 7234.3262,-17365.9355 7394.9549,-17365.9355 8552.1502,-17390.5269 8674.2174,-17494.9355 8685.358,-17504.4645 8670.8857,-17517.6347 8682.2174,-17526.9355 8904.3073,-17709.2216 11036.0933,-17479.3068 11265.0151,-17652.9355 11273.9735,-17659.7302 11264.2097,-17669.9437 11273.0151,-17676.9355 11352.2813,-17739.876 11471.6849,-17741.213 11556.5514,-17731.6499"/>
<polygon fill="#000000" stroke="#000000" points="11557.2112,-17735.096 11566.7247,-17730.433 11556.3798,-17728.1456 11557.2112,-17735.096"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1001" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M4078.9317,-16359.8657C4119.0943,-16488.5804 4307.1096,-17048.5039 4633.8509,-17379.9355 4764.578,-17512.5392 4967.0877,-17602.949 5081.4397,-17646.6718"/>
<polygon fill="#000000" stroke="#000000" points="5080.28,-17649.9752 5090.8713,-17650.2485 5082.7621,-17643.43 5080.28,-17649.9752"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node1537" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-16222.9355" rx="417.8002" ry="26.7407"/>
<text text-anchor="start" x="4880.2166" y="-16226.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="5167.7166" y="-16211.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge1339" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M4421.5417,-16342.6728C4511.2504,-16338.0981 4591.9809,-16325.3981 4625.8509,-16296.9355 4637.4046,-16287.2265 4622.3552,-16273.7131 4633.8509,-16263.9355 4747.2338,-16167.4995 4927.6421,-16175.6612 5046.8707,-16195.3011"/>
<polygon fill="#000000" stroke="#000000" points="5046.3335,-16198.7599 5056.7782,-16196.9826 5047.5049,-16191.8586 5046.3335,-16198.7599"/>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1867" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-16332.9355" rx="389.7317" ry="26.7407"/>
<text text-anchor="start" x="4900.2166" y="-16336.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-16321.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1528" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4447.127,-16332.9355C4550.5992,-16332.9355 4663.1659,-16332.9355 4767.9083,-16332.9355"/>
<polygon fill="#000000" stroke="#000000" points="4768.0198,-16336.4356 4778.0197,-16332.9355 4768.0197,-16329.4356 4768.0198,-16336.4356"/>
</g>
<!-- JawnParserSuite.this.PropertyCheckConfigurable -->
<g id="node939" class="node">
<title>JawnParserSuite.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-61676.9355" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="437.5494" y="-61680.7355" font-family="Times,serif" font-size="14.00" fill="#000000">JawnParserSuite.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-61665.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F] -->
<g id="node940" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-61748.9355" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="363.0494" y="-61752.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F]</text>
<text text-anchor="middle" x="572.0494" y="-61737.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc22] -->
<g id="node943" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc22]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-60740.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="448.5494" y="-60744.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc22]</text>
<text text-anchor="middle" x="572.0494" y="-60729.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc22]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc22] -->
<g id="edge1172" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc22]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc22]</title>
<path fill="none" stroke="#000000" d="M758.3114,-60740.9355C971.0895,-60740.9355 1318.412,-60740.9355 1540.352,-60740.9355"/>
<polygon fill="#000000" stroke="#000000" points="1540.4954,-60744.4356 1550.4954,-60740.9355 1540.4954,-60737.4356 1540.4954,-60744.4356"/>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc19] -->
<g id="node944" class="node">
<title>Fractional[ProductCodecSuite.this.Cc19]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-61856.9355" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="1637.604" y="-61860.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc19]</text>
<text text-anchor="middle" x="1749.604" y="-61845.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc13] -->
<g id="node945" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc13]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-61928.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-61932.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc13]</text>
<text text-anchor="middle" x="572.0494" y="-61917.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc13]] -->
<g id="node1602" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc13]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-61928.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="1531.604" y="-61932.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc13]]</text>
<text text-anchor="middle" x="1749.604" y="-61917.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc13]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc13]] -->
<g id="edge69" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc13]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc13]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-61928.9355C944.0278,-61928.9355 1209.2209,-61928.9355 1419.4845,-61928.9355"/>
<polygon fill="#000000" stroke="#000000" points="1419.7702,-61932.4356 1429.7702,-61928.9355 1419.7702,-61925.4356 1419.7702,-61932.4356"/>
</g>
<!-- io.circe.Decoder.Result[String] =&gt; ?{def ===: ?} -->
<g id="node946" class="node">
<title>io.circe.Decoder.Result[String] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-62000.9355" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="435.0494" y="-62004.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[String] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-61989.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Int,List[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,List[Int]] -->
<g id="edge1439" class="edge">
<title>org.scalacheck.util.Buildable[Int,List[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,List[Int]]</title>
<path fill="none" stroke="#000000" d="M5343.3289,-7706.9355C5520.3911,-7706.9355 5794.687,-7706.9355 5989.7156,-7706.9355"/>
<polygon fill="#000000" stroke="#000000" points="5989.8157,-7710.4356 5999.8156,-7706.9355 5989.8156,-7703.4356 5989.8157,-7710.4356"/>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc21] -->
<g id="node948" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc21]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-62072.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-62076.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc21]</text>
<text text-anchor="middle" x="572.0494" y="-62061.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc21]] -->
<g id="node1063" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc21]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-62072.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="1531.604" y="-62076.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc21]]</text>
<text text-anchor="middle" x="1749.604" y="-62061.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc21]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc21]] -->
<g id="edge1546" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc21]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc21]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-62072.9355C944.0278,-62072.9355 1209.2209,-62072.9355 1419.4845,-62072.9355"/>
<polygon fill="#000000" stroke="#000000" points="1419.7702,-62076.4356 1429.7702,-62072.9355 1419.7702,-62069.4356 1419.7702,-62076.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node949" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-20870.9355" rx="289.4135" ry="26.7407"/>
<text text-anchor="start" x="375.5494" y="-20874.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-20859.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 25ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge1372" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M861.6198,-20870.9355C1001.1372,-20870.9355 1171.1828,-20870.9355 1324.9854,-20870.9355"/>
<polygon fill="#000000" stroke="#000000" points="1325.0921,-20874.4356 1335.0921,-20870.9355 1325.092,-20867.4356 1325.0921,-20874.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge558" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M804.6022,-20854.956C941.9082,-20851.164 1097.7065,-20858.619 1144.0988,-20906.9355 1157.9541,-20921.3656 1138.2242,-21252.524 1152.0988,-21266.9355 1288.7654,-21408.891 1550.7772,-21360.3083 1677.475,-21325.566"/>
<polygon fill="#000000" stroke="#000000" points="1678.7744,-21328.8372 1687.4655,-21322.7779 1676.8927,-21322.0948 1678.7744,-21328.8372"/>
</g>
<!-- scala.collection.immutable.Map[String,List[Boolean]] =&gt; Iterable[(String, List[Boolean])] -->
<g id="node950" class="node">
<title>scala.collection.immutable.Map[String,List[Boolean]] =&gt; Iterable[(String, List[Boolean])]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-19502.9355" rx="362.0773" ry="26.7407"/>
<text text-anchor="start" x="1501.604" y="-19506.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[String,List[Boolean]] =&gt; Iterable[(String, List[Boolean])]</text>
<text text-anchor="middle" x="1749.604" y="-19491.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.Map[String,List[Boolean]]] -->
<g id="node951" class="node">
<title>io.circe.Encoder[scala.collection.immutable.Map[String,List[Boolean]]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-19574.9355" rx="291.1561" ry="26.7407"/>
<text text-anchor="start" x="374.0494" y="-19578.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[scala.collection.immutable.Map[String,List[Boolean]]]</text>
<text text-anchor="middle" x="572.0494" y="-19563.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 16ms</text>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.Map[String,List[Boolean]]]&#45;&gt;io.circe.Encoder[List[Boolean]] -->
<g id="edge292" class="edge">
<title>io.circe.Encoder[scala.collection.immutable.Map[String,List[Boolean]]]&#45;&gt;io.circe.Encoder[List[Boolean]]</title>
<path fill="none" stroke="#000000" d="M863.5084,-19574.9355C1099.2552,-19574.9355 1421.2245,-19574.9355 1605.0941,-19574.9355"/>
<polygon fill="#000000" stroke="#000000" points="1605.1015,-19578.4356 1615.1014,-19574.9355 1605.1014,-19571.4356 1605.1015,-19578.4356"/>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.Map[String,List[Boolean]]]&#45;&gt;io.circe.KeyEncoder[String] -->
<g id="edge1188" class="edge">
<title>io.circe.Encoder[scala.collection.immutable.Map[String,List[Boolean]]]&#45;&gt;io.circe.KeyEncoder[String]</title>
<path fill="none" stroke="#000000" d="M813.3371,-19590.0085C917.5302,-19596.492 1040.8157,-19604.1298 1152.0988,-19610.9355 1314.7864,-19620.885 1502.4043,-19632.1559 1623.34,-19639.3945"/>
<polygon fill="#000000" stroke="#000000" points="1623.188,-19642.8915 1633.3792,-19639.9953 1623.6062,-19635.904 1623.188,-19642.8915"/>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.Map[String,List[Boolean]]]&#45;&gt;scala.collection.immutable.Map[String,List[Boolean]] =&gt; Iterable[(String, List[Boolean])] -->
<g id="edge413" class="edge">
<title>io.circe.Encoder[scala.collection.immutable.Map[String,List[Boolean]]]&#45;&gt;scala.collection.immutable.Map[String,List[Boolean]] =&gt; Iterable[(String, List[Boolean])]</title>
<path fill="none" stroke="#000000" d="M813.3371,-19559.8626C917.5302,-19553.3791 1040.8157,-19545.7413 1152.0988,-19538.9355 1251.5299,-19532.8546 1360.2734,-19526.2801 1457.4144,-19520.4343"/>
<polygon fill="#000000" stroke="#000000" points="1457.9114,-19523.9108 1467.6831,-19519.8165 1457.4909,-19516.9235 1457.9114,-19523.9108"/>
</g>
<!-- io.circe.Encoder[Map[Byte,Int]] -->
<g id="node952" class="node">
<title>io.circe.Encoder[Map[Byte,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-20798.9355" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="483.0494" y="-20802.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Map[Byte,Int]]</text>
<text text-anchor="middle" x="572.0494" y="-20787.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.Encoder[Map[Byte,Int]]&#45;&gt;io.circe.KeyEncoder[Byte] -->
<g id="edge160" class="edge">
<title>io.circe.Encoder[Map[Byte,Int]]&#45;&gt;io.circe.KeyEncoder[Byte]</title>
<path fill="none" stroke="#000000" d="M709.4345,-20798.9355C940.0726,-20798.9355 1401.6592,-20798.9355 1624.0879,-20798.9355"/>
<polygon fill="#000000" stroke="#000000" points="1624.1725,-20802.4356 1634.1725,-20798.9355 1624.1724,-20795.4356 1624.1725,-20802.4356"/>
</g>
<!-- io.circe.Encoder[Map[Byte,Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1476" class="edge">
<title>io.circe.Encoder[Map[Byte,Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M697.6205,-20788.024C847.3901,-20778.0949 1084.9843,-20773.1405 1144.0988,-20834.9355 1160.6919,-20852.2811 1135.4825,-21249.6122 1152.0988,-21266.9355 1288.5024,-21409.1437 1550.6408,-21360.4394 1677.4219,-21325.617"/>
<polygon fill="#000000" stroke="#000000" points="1678.7305,-21328.8854 1687.4191,-21322.8225 1676.846,-21322.1438 1678.7305,-21328.8854"/>
</g>
<!-- io.circe.Encoder[Map[Short,Int]] -->
<g id="node953" class="node">
<title>io.circe.Encoder[Map[Short,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-20726.9355" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="481.5494" y="-20730.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Map[Short,Int]]</text>
<text text-anchor="middle" x="572.0494" y="-20715.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.KeyEncoder[Short] -->
<g id="node1130" class="node">
<title>io.circe.KeyEncoder[Short]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-20726.9355" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="1674.104" y="-20730.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.KeyEncoder[Short]</text>
<text text-anchor="middle" x="1749.604" y="-20715.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[Map[Short,Int]]&#45;&gt;io.circe.KeyEncoder[Short] -->
<g id="edge187" class="edge">
<title>io.circe.Encoder[Map[Short,Int]]&#45;&gt;io.circe.KeyEncoder[Short]</title>
<path fill="none" stroke="#000000" d="M711.4637,-20726.9355C941.7454,-20726.9355 1398.2425,-20726.9355 1621.1265,-20726.9355"/>
<polygon fill="#000000" stroke="#000000" points="1621.236,-20730.4356 1631.236,-20726.9355 1621.236,-20723.4356 1621.236,-20730.4356"/>
</g>
<!-- io.circe.Encoder[Map[Short,Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge742" class="edge">
<title>io.circe.Encoder[Map[Short,Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M699.2846,-20715.8903C849.1697,-20706.0082 1085.2807,-20701.2874 1144.0988,-20762.9355 1163.4297,-20783.1966 1132.7408,-21246.7003 1152.0988,-21266.9355 1288.3142,-21409.324 1550.5432,-21360.5329 1677.384,-21325.6533"/>
<polygon fill="#000000" stroke="#000000" points="1678.6992,-21328.9198 1687.3859,-21322.8543 1676.8126,-21322.1788 1678.6992,-21328.9198"/>
</g>
<!-- Fractional[List[io.circe.Json]] -->
<g id="node955" class="node">
<title>Fractional[List[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-15066.9355" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="5086.2166" y="-15070.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[List[io.circe.Json]]</text>
<text text-anchor="middle" x="5167.7166" y="-15055.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 4ms</text>
</g>
<!-- Option[Vector[String]] =&gt; ?{def ===: ?} -->
<g id="node956" class="node">
<title>Option[Vector[String]] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-14914.9355" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="9901.5427" y="-14918.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Vector[String]] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10016.0427" y="-14903.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- cats.Eq[Option[Vector[String]]] -->
<g id="node1312" class="node">
<title>cats.Eq[Option[Vector[String]]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-14914.9355" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="10770.9287" y="-14918.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[Vector[String]]]</text>
<text text-anchor="middle" x="10858.4287" y="-14903.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 22ms</text>
</g>
<!-- Option[Vector[String]] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Vector[String]]] -->
<g id="edge680" class="edge">
<title>Option[Vector[String]] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Vector[String]]]</title>
<path fill="none" stroke="#000000" d="M10189.3091,-14914.9355C10343.7955,-14914.9355 10567.3753,-14914.9355 10712.8169,-14914.9355"/>
<polygon fill="#000000" stroke="#000000" points="10713.1517,-14918.4356 10723.1517,-14914.9355 10713.1516,-14911.4356 10713.1517,-14918.4356"/>
</g>
<!-- org.scalacheck.Shrink[(Long, Int)]&#45;&gt;org.scalacheck.Shrink[Long] -->
<g id="edge633" class="edge">
<title>org.scalacheck.Shrink[(Long, Int)]&#45;&gt;org.scalacheck.Shrink[Long]</title>
<path fill="none" stroke="#000000" d="M4208.4992,-9447.8075C4320.8217,-9455.0574 4483.5952,-9465.597 4625.8509,-9474.9355 4767.4866,-9484.2334 4929.936,-9495.0458 5039.7346,-9502.3758"/>
<polygon fill="#000000" stroke="#000000" points="5039.6507,-9505.8779 5049.8616,-9503.0519 5040.117,-9498.8934 5039.6507,-9505.8779"/>
</g>
<!-- Integral[(Long, Int)] -->
<g id="node1712" class="node">
<title>Integral[(Long, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-9582.9355" rx="90.5193" ry="26.7407"/>
<text text-anchor="start" x="5111.7166" y="-9586.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Long, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-9571.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- org.scalacheck.Shrink[(Long, Int)]&#45;&gt;Integral[(Long, Int)] -->
<g id="edge879" class="edge">
<title>org.scalacheck.Shrink[(Long, Int)]&#45;&gt;Integral[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M4205.552,-9428.6982C4350.3977,-9420.8808 4567.7139,-9419.4071 4625.8509,-9474.9355 4649.134,-9497.1739 4610.5964,-9524.6674 4633.8509,-9546.9355 4694.1936,-9604.7188 4933.3036,-9599.0743 5070.1752,-9590.6076"/>
<polygon fill="#000000" stroke="#000000" points="5070.4963,-9594.0944 5080.2543,-9589.9676 5070.0526,-9587.1084 5070.4963,-9594.0944"/>
</g>
<!-- org.scalacheck.Shrink[(Long, Int)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge675" class="edge">
<title>org.scalacheck.Shrink[(Long, Int)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4203.407,-9450.0919C4349.2626,-9459.0848 4570.3768,-9461.9555 4625.8509,-9402.9355 4639.2252,-9388.7064 4620.495,-6605.1818 4633.8509,-6590.9355 4688.4357,-6532.7122 4910.2524,-6536.429 5050.2212,-6545.168"/>
<polygon fill="#000000" stroke="#000000" points="5050.368,-6548.6845 5060.5717,-6545.8326 5050.8166,-6541.6989 5050.368,-6548.6845"/>
</g>
<!-- cats.kernel.Eq[Array[String]] -->
<g id="node958" class="node">
<title>cats.kernel.Eq[Array[String]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-15536.9355" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="12335.9214" y="-15540.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Array[String]]</text>
<text text-anchor="middle" x="12415.9214" y="-15525.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[Array[String]]&#45;&gt;cats.kernel.Eq[String] -->
<g id="edge1576" class="edge">
<title>cats.kernel.Eq[Array[String]]&#45;&gt;cats.kernel.Eq[String]</title>
<path fill="none" stroke="#000000" d="M12540.6174,-15536.1365C12612.324,-15532.4422 12703.1589,-15522.181 12780.0814,-15495.9355 12903.3825,-15453.8661 13029.5298,-15363.2776 13091.5942,-15314.9075"/>
<polygon fill="#000000" stroke="#000000" points="13093.8543,-15317.583 13099.5603,-15308.6559 13089.5327,-15312.0763 13093.8543,-15317.583"/>
</g>
<!-- shapeless.IsTuple[Array[String]] -->
<g id="node1987" class="node">
<title>shapeless.IsTuple[Array[String]]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-15536.9355" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="13041.5282" y="-15540.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Array[String]]</text>
<text text-anchor="middle" x="13131.0282" y="-15525.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[Array[String]]&#45;&gt;shapeless.IsTuple[Array[String]] -->
<g id="edge448" class="edge">
<title>cats.kernel.Eq[Array[String]]&#45;&gt;shapeless.IsTuple[Array[String]]</title>
<path fill="none" stroke="#000000" d="M12540.4835,-15536.9355C12663.6265,-15536.9355 12852.0759,-15536.9355 12982.8426,-15536.9355"/>
<polygon fill="#000000" stroke="#000000" points="12982.9433,-15540.4356 12992.9433,-15536.9355 12982.9432,-15533.4356 12982.9433,-15540.4356"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K] -->
<g id="node960" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-62144.9355" rx="374.119" ry="26.7407"/>
<text text-anchor="start" x="315.5494" y="-62148.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K]</text>
<text text-anchor="middle" x="572.0494" y="-62133.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[Seq[Int]] -->
<g id="node961" class="node">
<title>shapeless.IsTuple[Seq[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19994.3036" cy="-15092.9355" rx="117.2596" ry="26.7407"/>
<text text-anchor="start" x="19919.3036" y="-15096.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Seq[Int]]</text>
<text text-anchor="middle" x="19994.3036" y="-15081.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[io.circe.JsonNumber] -->
<g id="node962" class="node">
<title>shapeless.IsTuple[io.circe.JsonNumber]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-44234.9355" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="3961.2721" y="-44238.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.JsonNumber]</text>
<text text-anchor="middle" x="4070.7721" y="-44223.7355" font-family="Times,serif" font-size="14.00" fill="#000000">19 times = 12ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc16] -->
<g id="node963" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc16]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-62216.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-62220.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc16]</text>
<text text-anchor="middle" x="572.0494" y="-62205.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc16]] -->
<g id="node1788" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc16]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-62216.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="1549.604" y="-62220.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc16]]</text>
<text text-anchor="middle" x="1749.604" y="-62205.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc16]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc16]] -->
<g id="edge1334" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc16]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc16]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-62216.9355C951.3519,-62216.9355 1231.2937,-62216.9355 1445.2652,-62216.9355"/>
<polygon fill="#000000" stroke="#000000" points="1445.4039,-62220.4356 1455.4038,-62216.9355 1445.4038,-62213.4356 1445.4039,-62220.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, (String, io.circe.Json, Boolean))]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge1401" class="edge">
<title>org.scalacheck.Arbitrary[(String, (String, io.circe.Json, Boolean))]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M3076.5903,-8235.2852C3210.6658,-8223.5629 3404.2178,-8231.7839 3507.6933,-8352.9355 3519.1131,-8366.3062 3503.4344,-9606.3298 3515.6933,-9618.9355 3601.7408,-9707.4177 4530.423,-9578.6618 4625.8509,-9656.9355 4637.8536,-9666.7806 4622.0317,-9680.8711 4633.8509,-9690.9355 4691.0068,-9739.6055 4888.6957,-9741.9753 5026.745,-9737.1029"/>
<polygon fill="#000000" stroke="#000000" points="5027.13,-9740.5911 5036.9939,-9736.7241 5026.8714,-9733.5959 5027.13,-9740.5911"/>
</g>
<!-- scala.reflect.ClassTag[(String, (String, io.circe.Json, Boolean))] -->
<g id="node1426" class="node">
<title>scala.reflect.ClassTag[(String, (String, io.circe.Json, Boolean))]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-8134.9355" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="3896.2721" y="-8138.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(String, (String, io.circe.Json, Boolean))]</text>
<text text-anchor="middle" x="4070.7721" y="-8123.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String, (String, io.circe.Json, Boolean))]&#45;&gt;scala.reflect.ClassTag[(String, (String, io.circe.Json, Boolean))] -->
<g id="edge283" class="edge">
<title>org.scalacheck.Arbitrary[(String, (String, io.circe.Json, Boolean))]&#45;&gt;scala.reflect.ClassTag[(String, (String, io.circe.Json, Boolean))]</title>
<path fill="none" stroke="#000000" d="M3065.8885,-8234.6662C3184.0542,-8214.9982 3360.8125,-8187.4599 3515.6933,-8170.9355 3616.6675,-8160.1625 3728.3435,-8152.1658 3824.8931,-8146.4821"/>
<polygon fill="#000000" stroke="#000000" points="3825.3065,-8149.964 3835.0856,-8145.8874 3824.8987,-8142.9759 3825.3065,-8149.964"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, (String, io.circe.Json, Boolean))]&#45;&gt;org.scalacheck.Arbitrary[(String, io.circe.Json, Boolean)] -->
<g id="edge1083" class="edge">
<title>org.scalacheck.Arbitrary[(String, (String, io.circe.Json, Boolean))]&#45;&gt;org.scalacheck.Arbitrary[(String, io.circe.Json, Boolean)]</title>
<path fill="none" stroke="#000000" d="M3024.239,-8232.6544C3153.177,-8203.8235 3384.4715,-8175.9846 3507.6933,-8305.9355 3528.1152,-8327.4727 3495.0748,-8551.5865 3515.6933,-8572.9355 3562.7346,-8621.6436 3724.8156,-8627.7894 3861.7783,-8623.388"/>
<polygon fill="#000000" stroke="#000000" points="3862.1369,-8626.8778 3872.0114,-8623.0382 3861.8977,-8619.8819 3862.1369,-8626.8778"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[(io.circe.Json, Int)],(String, io.circe.Json),That] -->
<g id="node965" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[(io.circe.Json, Int)],(String, io.circe.Json),That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-62288.9355" rx="484.2363" ry="26.7407"/>
<text text-anchor="start" x="237.5494" y="-62292.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[(io.circe.Json, Int)],(String, io.circe.Json),That]</text>
<text text-anchor="middle" x="572.0494" y="-62277.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[scala.collection.immutable.Stream[Int]] -->
<g id="node966" class="node">
<title>cats.Eq[scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-18994.9355" rx="197.0658" ry="26.7407"/>
<text text-anchor="start" x="10726.9287" y="-18998.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="10858.4287" y="-18983.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- cats.Eq[scala.collection.immutable.Stream[Int]]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge381" class="edge">
<title>cats.Eq[scala.collection.immutable.Stream[Int]]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10983.2199,-18974.045C11078.3904,-18950.8653 11203.2908,-18903.1599 11265.0151,-18806.9355 11274.9813,-18791.3989 11260.5643,-16162.5624 11273.0151,-16148.9355 11348.6284,-16066.18 11489.3405,-16075.9917 11578.2006,-16092.8702"/>
<polygon fill="#000000" stroke="#000000" points="11577.7486,-16096.3484 11588.2367,-16094.8483 11579.1023,-16089.4805 11577.7486,-16096.3484"/>
</g>
<!-- cats.Eq[scala.collection.immutable.Stream[Int]]&#45;&gt;shapeless.IsTuple[scala.collection.immutable.Stream[Int]] -->
<g id="edge96" class="edge">
<title>cats.Eq[scala.collection.immutable.Stream[Int]]&#45;&gt;shapeless.IsTuple[scala.collection.immutable.Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M11024.6069,-19009.5378C11098.2628,-19016.0387 11185.967,-19023.8189 11265.0151,-19030.9355 11329.8497,-19036.7725 11400.687,-19043.2304 11464.1618,-19049.0462"/>
<polygon fill="#000000" stroke="#000000" points="11464.0061,-19052.5465 11474.2839,-19049.9739 11464.6451,-19045.5757 11464.0061,-19052.5465"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node967" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-62360.9355" rx="326.8668" ry="26.7407"/>
<text text-anchor="start" x="349.0494" y="-62364.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-62349.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1268" class="node">
<title>Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-62360.9355" rx="280.943" ry="26.7407"/>
<text text-anchor="start" x="1559.104" y="-62364.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-62349.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge710" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M898.891,-62360.9355C1074.3972,-62360.9355 1288.9052,-62360.9355 1458.6118,-62360.9355"/>
<polygon fill="#000000" stroke="#000000" points="1458.6997,-62364.4356 1468.6996,-62360.9355 1458.6996,-62357.4356 1458.6997,-62364.4356"/>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1591" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-62288.9355" rx="271.558" ry="26.7407"/>
<text text-anchor="start" x="1565.604" y="-62292.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-62277.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1243" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M832.2769,-62344.6844C932.2701,-62338.4662 1047.4877,-62331.3333 1152.0988,-62324.9355 1268.7805,-62317.7996 1398.2862,-62309.984 1506.8172,-62303.4639"/>
<polygon fill="#000000" stroke="#000000" points="1507.1473,-62306.9504 1516.9194,-62302.8571 1506.7275,-62299.963 1507.1473,-62306.9504"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam -->
<g id="node968" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-62432.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="372.0494" y="-62436.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-62421.7355" font-family="Times,serif" font-size="14.00" fill="#000000">24 times = 4ms</text>
</g>
<!-- String(&#39;deleteGoField&#39;) =&gt; ?{def should: ?} -->
<g id="node969" class="node">
<title>String(&#39;deleteGoField&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-28862.9355" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="453.0494" y="-28866.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;deleteGoField&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-28851.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;deleteGoField&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1536" class="edge">
<title>String(&#39;deleteGoField&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M707.1534,-28880.6773C827.3726,-28890.5119 1005.165,-28890.1146 1144.0988,-28826.9355 1433.2562,-28695.4434 1659.6206,-28360.4879 1728.1649,-28250.514"/>
<polygon fill="#000000" stroke="#000000" points="1731.2826,-28252.1271 1733.5695,-28241.782 1725.3305,-28248.4431 1731.2826,-28252.1271"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node970" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-918.9355" rx="368.3053" ry="26.7407"/>
<text text-anchor="start" x="3818.2721" y="-922.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-907.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 66ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge650" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4439.4721,-918.9355C4555.5706,-918.9355 4683.7522,-918.9355 4799.7965,-918.9355"/>
<polygon fill="#000000" stroke="#000000" points="4799.9116,-922.4356 4809.9115,-918.9355 4799.9115,-915.4356 4799.9116,-922.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge376" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4367.475,-903.0001C4479.5532,-904.0063 4589.003,-915.9318 4625.8509,-954.9355 4645.08,-975.2897 4614.648,-1942.5568 4633.8509,-1962.9355 4748.7972,-2084.92 4966.907,-2052.8387 5085.6639,-2023.2673"/>
<polygon fill="#000000" stroke="#000000" points="5086.6098,-2026.6382 5095.4395,-2020.7827 5084.8854,-2019.8539 5086.6098,-2026.6382"/>
</g>
<!-- String(&#39;data&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node972" class="node">
<title>String(&#39;data&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-62504.9355" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="492.0494" y="-62508.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;data&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="572.0494" y="-62493.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- String(&#39;withString&#39;) =&gt; ?{def should: ?} -->
<g id="node974" class="node">
<title>String(&#39;withString&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-28790.9355" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="463.0494" y="-28794.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;withString&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-28779.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;withString&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1532" class="edge">
<title>String(&#39;withString&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M706.5276,-28806.5917C826.1345,-28815.0071 1003.3748,-28813.6979 1144.0988,-28754.9355 1416.8983,-28641.0221 1649.3833,-28350.9262 1724.2925,-28250.1042"/>
<polygon fill="#000000" stroke="#000000" points="1727.3143,-28251.904 1730.4379,-28241.78 1721.6827,-28247.7464 1727.3143,-28251.904"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node975" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-6868.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="3926.2721" y="-6872.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-6857.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 43ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge234" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4264.6787,-6880.7566C4404.4723,-6884.6205 4576.8168,-6878.2253 4625.8509,-6827.9355 4638.6647,-6814.7937 4620.9952,-6676.0364 4633.8509,-6662.9355 4684.6709,-6611.1467 4872.2616,-6609.1576 5010.7795,-6615.4753"/>
<polygon fill="#000000" stroke="#000000" points="5010.9289,-6618.9862 5021.0836,-6615.9646 5011.2609,-6611.9941 5010.9289,-6618.9862"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge30" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4263.8045,-6880.9269C4403.9028,-6884.9633 4577.0623,-6878.7151 4625.8509,-6827.9355 4644.1058,-6808.9357 4615.5354,-6609.8769 4633.8509,-6590.9355 4689.2499,-6533.6438 4910.211,-6536.9785 5049.9156,-6545.4078"/>
<polygon fill="#000000" stroke="#000000" points="5050.0497,-6548.9227 5060.2474,-6546.0493 5050.4835,-6541.9362 5050.0497,-6548.9227"/>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node976" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-62612.9355" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="1554.104" y="-62616.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-62601.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[AccumulatingDecoderSpec.this.BadSample] -->
<g id="node977" class="node">
<title>io.circe.Encoder[AccumulatingDecoderSpec.this.BadSample]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-62684.9355" rx="250.1317" ry="26.7407"/>
<text text-anchor="start" x="403.0494" y="-62688.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[AccumulatingDecoderSpec.this.BadSample]</text>
<text text-anchor="middle" x="572.0494" y="-62673.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[AccumulatingDecoderSpec.this.BadSample]] -->
<g id="node1481" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[AccumulatingDecoderSpec.this.BadSample]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-62684.9355" rx="375.4474" ry="26.7407"/>
<text text-anchor="start" x="1492.104" y="-62688.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[AccumulatingDecoderSpec.this.BadSample]]</text>
<text text-anchor="middle" x="1749.604" y="-62673.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[AccumulatingDecoderSpec.this.BadSample]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[AccumulatingDecoderSpec.this.BadSample]] -->
<g id="edge1320" class="edge">
<title>io.circe.Encoder[AccumulatingDecoderSpec.this.BadSample]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[AccumulatingDecoderSpec.this.BadSample]]</title>
<path fill="none" stroke="#000000" d="M822.4989,-62684.9355C979.8215,-62684.9355 1185.9254,-62684.9355 1363.845,-62684.9355"/>
<polygon fill="#000000" stroke="#000000" points="1363.9052,-62688.4356 1373.9052,-62684.9355 1363.9051,-62681.4356 1363.9052,-62688.4356"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node978" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="9131.2303" cy="-16594.9355" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="8929.7303" y="-16598.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="9131.2303" y="-16583.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 145ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge544" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M9216.5907,-16569.172C9307.6701,-16543.0064 9456.6564,-16503.9849 9588.2431,-16486.9355 9680.6552,-16474.962 11199.0751,-16509.7785 11265.0151,-16443.9355 11288.218,-16420.7667 11250.6072,-16172.8742 11273.0151,-16148.9355 11349.3991,-16067.3334 11489.2216,-16076.5765 11577.7939,-16093.0608"/>
<polygon fill="#000000" stroke="#000000" points="11577.3171,-16096.5333 11587.7995,-16094.9942 11578.6452,-16089.6605 11577.3171,-16096.5333"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge108" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M9152.254,-16621.7883C9212.7066,-16697.5108 9395.0757,-16915.6897 9588.2431,-17045.9355 9934.8969,-17279.6718 10044.7853,-17323.5095 10451.8423,-17418.9355 10539.9328,-17439.5865 11201.5391,-17397.4591 11265.0151,-17461.9355 11281.7861,-17478.9709 11256.5908,-17659.5656 11273.0151,-17676.9355 11346.6976,-17754.8607 11478.2908,-17749.6156 11566.9494,-17734.6154"/>
<polygon fill="#000000" stroke="#000000" points="11567.7631,-17738.026 11577.0029,-17732.8418 11566.5469,-17731.1324 11567.7631,-17738.026"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge196" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M9187.5874,-16621.3685C9343.9348,-16694.6995 9782.5868,-16900.4387 9949.987,-16978.9537"/>
<polygon fill="#000000" stroke="#000000" points="9948.6468,-16982.191 9959.1867,-16983.2686 9951.6193,-16975.8534 9948.6468,-16982.191"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node1563" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-16594.9355" rx="338.9084" ry="26.7407"/>
<text text-anchor="start" x="9784.5427" y="-16598.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="10016.0427" y="-16583.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge19" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M9427.7056,-16594.9355C9504.5236,-16594.9355 9587.9521,-16594.9355 9667.1854,-16594.9355"/>
<polygon fill="#000000" stroke="#000000" points="9667.3279,-16598.4356 9677.3279,-16594.9355 9667.3279,-16591.4356 9667.3279,-16598.4356"/>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1636" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-16522.9355" rx="309.9257" ry="26.7407"/>
<text text-anchor="start" x="9805.0427" y="-16526.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="10016.0427" y="-16511.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge623" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M9351.9386,-16576.9758C9482.1402,-16566.3809 9646.8901,-16552.9747 9779.7216,-16542.1657"/>
<polygon fill="#000000" stroke="#000000" points="9780.3539,-16545.626 9790.0371,-16541.3263 9779.7861,-16538.649 9780.3539,-16545.626"/>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int)]] -->
<g id="node979" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-20438.9355" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="1543.604" y="-20442.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-20427.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node980" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-18735.9355" rx="449.9399" ry="26.7407"/>
<text text-anchor="start" x="2621.4013" y="-18739.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="2931.4013" y="-18724.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 21ms</text>
</g>
<!-- org.scalacheck.util.Buildable[io.circe.Json,Vector[io.circe.Json]] -->
<g id="node981" class="node">
<title>org.scalacheck.util.Buildable[io.circe.Json,Vector[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-9222.9355" rx="261.7591" ry="26.7407"/>
<text text-anchor="start" x="4990.7166" y="-9226.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[io.circe.Json,Vector[io.circe.Json]]</text>
<text text-anchor="middle" x="5167.7166" y="-9211.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 6ms</text>
</g>
<!-- org.scalacheck.util.Buildable[io.circe.Json,Vector[io.circe.Json]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,io.circe.Json,Vector[io.circe.Json]] -->
<g id="edge319" class="edge">
<title>org.scalacheck.util.Buildable[io.circe.Json,Vector[io.circe.Json]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,io.circe.Json,Vector[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M5429.3999,-9222.9355C5572.8008,-9222.9355 5751.6725,-9222.9355 5903.2054,-9222.9355"/>
<polygon fill="#000000" stroke="#000000" points="5903.6067,-9226.4356 5913.6066,-9222.9355 5903.6066,-9219.4356 5903.6067,-9226.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.KeyDecoder[Int =&gt; Int]] -->
<g id="node982" class="node">
<title>org.scalacheck.Arbitrary[io.circe.KeyDecoder[Int =&gt; Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-3446.9355" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="1590.104" y="-3450.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.KeyDecoder[Int =&gt; Int]]</text>
<text text-anchor="middle" x="1749.604" y="-3435.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 44ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int =&gt; Int] -->
<g id="node1113" class="node">
<title>org.scalacheck.Arbitrary[Int =&gt; Int]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-3374.9355" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="2832.4013" y="-3378.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Int =&gt; Int]</text>
<text text-anchor="middle" x="2931.4013" y="-3363.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 95ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.KeyDecoder[Int =&gt; Int]]&#45;&gt;org.scalacheck.Arbitrary[Int =&gt; Int] -->
<g id="edge1239" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.KeyDecoder[Int =&gt; Int]]&#45;&gt;org.scalacheck.Arbitrary[Int =&gt; Int]</title>
<path fill="none" stroke="#000000" d="M1959.0721,-3434.3847C2073.6977,-3427.4991 2218.2256,-3418.7887 2347.1092,-3410.9355 2493.487,-3402.0165 2660.4835,-3391.7146 2778.3508,-3384.4224"/>
<polygon fill="#000000" stroke="#000000" points="2778.7651,-3387.9036 2788.5299,-3383.7926 2778.3328,-3380.9169 2778.7651,-3387.9036"/>
</g>
<!-- Fractional[Int] -->
<g id="node983" class="node">
<title>Fractional[Int]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-6518.9355" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="6175.2346" y="-6522.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Int]</text>
<text text-anchor="middle" x="6222.2346" y="-6507.7355" font-family="Times,serif" font-size="14.00" fill="#000000">96 times = 98ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.Encoder[Int]] -->
<g id="node984" class="node">
<title>cats.kernel.Eq[io.circe.Encoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-846.9355" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="3970.7721" y="-850.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.Encoder[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-835.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 11ms</text>
</g>
<!-- shapeless.IsTuple[io.circe.Encoder[Int]] -->
<g id="node1154" class="node">
<title>shapeless.IsTuple[io.circe.Encoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-846.9355" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="5058.2166" y="-850.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.Encoder[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-835.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.Encoder[Int]]&#45;&gt;shapeless.IsTuple[io.circe.Encoder[Int]] -->
<g id="edge1568" class="edge">
<title>cats.kernel.Eq[io.circe.Encoder[Int]]&#45;&gt;shapeless.IsTuple[io.circe.Encoder[Int]]</title>
<path fill="none" stroke="#000000" d="M4223.586,-846.9355C4425.0413,-846.9355 4778.7371,-846.9355 4991.325,-846.9355"/>
<polygon fill="#000000" stroke="#000000" points="4991.3405,-850.4356 5001.3405,-846.9355 4991.3404,-843.4356 4991.3405,-850.4356"/>
</g>
<!-- cats.kernel.Eq[io.circe.Encoder[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge245" class="edge">
<title>cats.kernel.Eq[io.circe.Encoder[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4209.2663,-835.4676C4355.0705,-826.8088 4570.9882,-824.8322 4625.8509,-882.9355 4646.4477,-904.7489 4613.2822,-1941.0958 4633.8509,-1962.9355 4748.7649,-2084.9504 4966.888,-2052.8567 5085.6554,-2023.2752"/>
<polygon fill="#000000" stroke="#000000" points="5086.6026,-2026.6459 5095.4319,-2020.7898 5084.8778,-2019.8617 5086.6026,-2026.6459"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(String, Int),scala.collection.immutable.Map[String,Int]] -->
<g id="node1421" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(String, Int),scala.collection.immutable.Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-6038.9355" rx="392.3885" ry="26.7407"/>
<text text-anchor="start" x="4898.2166" y="-6042.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(String, Int),scala.collection.immutable.Map[String,Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-6027.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(String, Int),scala.collection.immutable.Map[String,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(String, Int),scala.collection.immutable.Map[String,Int]] -->
<g id="edge397" class="edge">
<title>org.scalacheck.util.Buildable[(String, Int),scala.collection.immutable.Map[String,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(String, Int),scala.collection.immutable.Map[String,Int]]</title>
<path fill="none" stroke="#000000" d="M4416.7228,-6038.9355C4527.199,-6038.9355 4650.4286,-6038.9355 4764.6013,-6038.9355"/>
<polygon fill="#000000" stroke="#000000" points="4764.9136,-6042.4356 4774.9135,-6038.9355 4764.9135,-6035.4356 4764.9136,-6042.4356"/>
</g>
<!-- io.circe.JsonObject =&gt; ?{def ===: ?} -->
<g id="node986" class="node">
<title>io.circe.JsonObject =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-19608.9355" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="10754.4287" y="-19612.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.JsonObject =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10858.4287" y="-19597.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 32ms</text>
</g>
<!-- io.circe.JsonObject =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonObject] -->
<g id="edge520" class="edge">
<title>io.circe.JsonObject =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonObject]</title>
<path fill="none" stroke="#000000" d="M11015.9975,-19612.2841C11165.7587,-19615.4666 11388.3176,-19620.1963 11528.2696,-19623.1704"/>
<polygon fill="#000000" stroke="#000000" points="11528.5467,-19626.677 11538.6188,-19623.3903 11528.6955,-19619.6786 11528.5467,-19626.677"/>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc18] -->
<g id="node987" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc18]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-62756.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="448.5494" y="-62760.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc18]</text>
<text text-anchor="middle" x="572.0494" y="-62745.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc18] -->
<g id="node1471" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc18]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-62756.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="1617.104" y="-62760.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc18]</text>
<text text-anchor="middle" x="1749.604" y="-62745.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc18]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc18] -->
<g id="edge886" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc18]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc18]</title>
<path fill="none" stroke="#000000" d="M758.3114,-62756.9355C971.0895,-62756.9355 1318.412,-62756.9355 1540.352,-62756.9355"/>
<polygon fill="#000000" stroke="#000000" points="1540.4954,-62760.4356 1550.4954,-62756.9355 1540.4954,-62753.4356 1540.4954,-62760.4356"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O] -->
<g id="node988" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-62828.9355" rx="458.4105" ry="26.7407"/>
<text text-anchor="start" x="256.0494" y="-62832.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O]</text>
<text text-anchor="middle" x="572.0494" y="-62817.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;values&#39;) =&gt; ?{def should: ?} -->
<g id="node990" class="node">
<title>String(&#39;values&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-28718.9355" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="474.0494" y="-28722.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;values&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-28707.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- String(&#39;values&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1383" class="edge">
<title>String(&#39;values&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M702.9611,-28732.0333C821.9488,-28739.0405 1000.3498,-28737.1129 1144.0988,-28682.9355 1401.7137,-28585.8434 1638.993,-28339.3145 1720.0789,-28248.8725"/>
<polygon fill="#000000" stroke="#000000" points="1722.7255,-28251.1634 1726.7674,-28241.3699 1717.5003,-28246.5053 1722.7255,-28251.1634"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(java.util.UUID, Int),scala.collection.immutable.Map[java.util.UUID,Int]] -->
<g id="node1881" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(java.util.UUID, Int),scala.collection.immutable.Map[java.util.UUID,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-3302.9355" rx="461.9816" ry="26.7407"/>
<text text-anchor="start" x="4849.2166" y="-3306.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(java.util.UUID, Int),scala.collection.immutable.Map[java.util.UUID,Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-3291.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(java.util.UUID, Int),scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(java.util.UUID, Int),scala.collection.immutable.Map[java.util.UUID,Int]] -->
<g id="edge1467" class="edge">
<title>org.scalacheck.util.Buildable[(java.util.UUID, Int),scala.collection.immutable.Map[java.util.UUID,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(java.util.UUID, Int),scala.collection.immutable.Map[java.util.UUID,Int]]</title>
<path fill="none" stroke="#000000" d="M4485.8707,-3302.9355C4554.3783,-3302.9355 4625.8413,-3302.9355 4695.622,-3302.9355"/>
<polygon fill="#000000" stroke="#000000" points="4695.9048,-3306.4356 4705.9048,-3302.9355 4695.9048,-3299.4356 4695.9048,-3306.4356"/>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node993" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-486.9355" rx="214.9209" ry="26.7407"/>
<text text-anchor="start" x="5023.7166" y="-490.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-475.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="node994" class="node">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.SortedMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-10200.9355" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="2725.4013" y="-10204.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.collection.immutable.SortedMap[Long,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-10189.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="edge1050" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.SortedMap[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M3179.6097,-10216.3611C3281.2989,-10222.7016 3400.1437,-10230.1383 3507.6933,-10236.9355 3610.2424,-10243.4168 3723.2921,-10250.631 3821.0191,-10256.8892"/>
<polygon fill="#000000" stroke="#000000" points="3820.8294,-10260.3842 3831.0327,-10257.5306 3821.2769,-10253.3985 3820.8294,-10260.3842"/>
</g>
<!-- org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="node997" class="node">
<title>org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-11466.9355" rx="364.3201" ry="26.7407"/>
<text text-anchor="start" x="3821.2721" y="-11470.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-11455.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="edge563" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M3169.7883,-10184.3709C3307.2586,-10180.6346 3461.7566,-10188.3668 3507.6933,-10236.9355 3530.4842,-10261.0323 3492.9311,-11406.8117 3515.6933,-11430.9355 3551.804,-11469.2063 3657.752,-11481.4184 3767.538,-11482.8222"/>
<polygon fill="#000000" stroke="#000000" points="3767.7956,-11486.3248 3777.8293,-11482.9226 3767.8639,-11479.3251 3767.7956,-11486.3248"/>
</g>
<!-- scala.collection.immutable.SortedMap[Long,Int] =&gt; Traversable[(Long, Int)] -->
<g id="node1566" class="node">
<title>scala.collection.immutable.SortedMap[Long,Int] =&gt; Traversable[(Long, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-10200.9355" rx="311.6683" ry="26.7407"/>
<text text-anchor="start" x="3858.2721" y="-10204.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.SortedMap[Long,Int] =&gt; Traversable[(Long, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-10189.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;scala.collection.immutable.SortedMap[Long,Int] =&gt; Traversable[(Long, Int)] -->
<g id="edge665" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;scala.collection.immutable.SortedMap[Long,Int] =&gt; Traversable[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M3234.1139,-10200.9355C3392.8035,-10200.9355 3587.207,-10200.9355 3748.6686,-10200.9355"/>
<polygon fill="#000000" stroke="#000000" points="3748.7663,-10204.4356 3758.7663,-10200.9355 3748.7663,-10197.4356 3748.7663,-10204.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Long, Int)] -->
<g id="edge1448" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M3172.4678,-10217.1844C3308.9957,-10220.569 3461.5071,-10212.5715 3507.6933,-10164.9355 3527.3484,-10144.6634 3496.0622,-9931.231 3515.6933,-9910.9355 3569.5806,-9855.2244 3774.1348,-9855.2251 3919.2199,-9862.975"/>
<polygon fill="#000000" stroke="#000000" points="3919.3827,-9866.4892 3929.5604,-9863.5457 3919.7685,-9859.4998 3919.3827,-9866.4892"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="node995" class="node">
<title>org.scalacheck.Shrink[scala.collection.immutable.SortedMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-10056.9355" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="2732.9013" y="-10060.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[scala.collection.immutable.SortedMap[Long,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-10045.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;org.scalacheck.Shrink[(Long, Int)] -->
<g id="edge1425" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;org.scalacheck.Shrink[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M3181.5463,-10042.9579C3300.0931,-10022.3191 3432.0203,-9976.0548 3507.6933,-9874.9355 3521.0105,-9857.1402 3500.3324,-9491 3515.6933,-9474.9355 3570.278,-9417.8508 3781.7309,-9419.0182 3927.301,-9427.3021"/>
<polygon fill="#000000" stroke="#000000" points="3927.4772,-9430.8183 3937.6651,-9427.9101 3927.8873,-9423.8303 3927.4772,-9430.8183"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="edge1160" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M3163.2429,-10040.5469C3302.3247,-10036.3827 3461.0425,-10043.5761 3507.6933,-10092.9355 3520.4581,-10106.4415 3502.9445,-11417.4144 3515.6933,-11430.9355 3551.8303,-11469.2619 3657.9719,-11481.4605 3767.8907,-11482.8397"/>
<polygon fill="#000000" stroke="#000000" points="3768.1614,-11486.3424 3778.1943,-11482.9378 3768.228,-11479.3427 3768.1614,-11486.3424"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;scala.collection.immutable.SortedMap[Long,Int] =&gt; Traversable[(Long, Int)] -->
<g id="edge1433" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;scala.collection.immutable.SortedMap[Long,Int] =&gt; Traversable[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M3173.8739,-10041.9357C3309.2207,-10039.2117 3459.9756,-10047.4673 3507.6933,-10092.9355 3531.0027,-10115.1462 3492.4103,-10142.6972 3515.6933,-10164.9355 3556.7465,-10204.1467 3677.1731,-10214.9343 3795.406,-10215.1357"/>
<polygon fill="#000000" stroke="#000000" points="3795.7394,-10218.6355 3805.7364,-10215.1267 3795.7333,-10211.6355 3795.7394,-10218.6355"/>
</g>
<!-- Integral[scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="node1733" class="node">
<title>Integral[scala.collection.immutable.SortedMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-10128.9355" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="3911.2721" y="-10132.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[scala.collection.immutable.SortedMap[Long,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-10117.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;Integral[scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="edge849" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;Integral[scala.collection.immutable.SortedMap[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M3173.5997,-10071.9864C3276.596,-10078.4074 3398.0177,-10086.0039 3507.6933,-10092.9355 3622.1694,-10100.1706 3749.7309,-10108.319 3854.4554,-10115.0314"/>
<polygon fill="#000000" stroke="#000000" points="3854.314,-10118.5294 3864.5175,-10115.6764 3854.7619,-10111.5438 3854.314,-10118.5294"/>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node996" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-16188.9355" rx="405.3444" ry="26.7407"/>
<text text-anchor="start" x="3792.2721" y="-16192.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-16177.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="node1527" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-11466.9355" rx="410.6582" ry="26.7407"/>
<text text-anchor="start" x="4885.2166" y="-11470.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-11455.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="edge814" class="edge">
<title>org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M4435.2767,-11466.9355C4534.9817,-11466.9355 4643.8604,-11466.9355 4746.4542,-11466.9355"/>
<polygon fill="#000000" stroke="#000000" points="4746.6818,-11470.4356 4756.6818,-11466.9355 4746.6817,-11463.4356 4746.6818,-11470.4356"/>
</g>
<!-- Integral[String =&gt; Boolean] -->
<g id="node998" class="node">
<title>Integral[String =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-34118.9355" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="1672.604" y="-34122.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[String =&gt; Boolean]</text>
<text text-anchor="middle" x="1749.604" y="-34107.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Short]&#45;&gt;scala.reflect.ClassTag[Short] -->
<g id="edge821" class="edge">
<title>org.scalacheck.Arbitrary[Short]&#45;&gt;scala.reflect.ClassTag[Short]</title>
<path fill="none" stroke="#000000" d="M5301.5395,-15570.9355C5504.1055,-15570.9355 5886.3558,-15570.9355 6088.7321,-15570.9355"/>
<polygon fill="#000000" stroke="#000000" points="6088.8261,-15574.4356 6098.826,-15570.9355 6088.826,-15567.4356 6088.8261,-15574.4356"/>
</g>
<!-- org.scalacheck.Shrink[(java.util.UUID, Int)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge572" class="edge">
<title>org.scalacheck.Shrink[(java.util.UUID, Int)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4231.9717,-3146.1531C4376.6174,-3138.6621 4573.9026,-3139.6424 4625.8509,-3194.9355 4641.6566,-3211.7589 4618.0669,-6502.092 4633.8509,-6518.9355 4688.423,-6577.1708 4910.244,-6573.45 5050.2171,-6564.707"/>
<polygon fill="#000000" stroke="#000000" points="5050.8129,-6568.176 5060.5679,-6564.0421 5050.3641,-6561.1904 5050.8129,-6568.176"/>
</g>
<!-- org.scalacheck.Shrink[java.util.UUID] -->
<g id="node1898" class="node">
<title>org.scalacheck.Shrink[java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-3230.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="5062.2166" y="-3234.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[java.util.UUID]</text>
<text text-anchor="middle" x="5167.7166" y="-3219.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 7ms</text>
</g>
<!-- org.scalacheck.Shrink[(java.util.UUID, Int)]&#45;&gt;org.scalacheck.Shrink[java.util.UUID] -->
<g id="edge74" class="edge">
<title>org.scalacheck.Shrink[(java.util.UUID, Int)]&#45;&gt;org.scalacheck.Shrink[java.util.UUID]</title>
<path fill="none" stroke="#000000" d="M4238.6855,-3169.7567C4348.7853,-3176.869 4495.8815,-3186.4035 4625.8509,-3194.9355 4754.6003,-3203.3875 4900.5482,-3213.0909 5008.5132,-3220.2924"/>
<polygon fill="#000000" stroke="#000000" points="5008.3012,-3223.7859 5018.512,-3220.9594 5008.7672,-3216.8014 5008.3012,-3223.7859"/>
</g>
<!-- Integral[(java.util.UUID, Int)] -->
<g id="node1901" class="node">
<title>Integral[(java.util.UUID, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-3158.9355" rx="127.9727" ry="26.7407"/>
<text text-anchor="start" x="5085.2166" y="-3162.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(java.util.UUID, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-3147.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(java.util.UUID, Int)]&#45;&gt;Integral[(java.util.UUID, Int)] -->
<g id="edge7" class="edge">
<title>org.scalacheck.Shrink[(java.util.UUID, Int)]&#45;&gt;Integral[(java.util.UUID, Int)]</title>
<path fill="none" stroke="#000000" d="M4254.0671,-3158.9355C4472.668,-3158.9355 4833.1075,-3158.9355 5029.5629,-3158.9355"/>
<polygon fill="#000000" stroke="#000000" points="5029.6599,-3162.4356 5039.6598,-3158.9355 5029.6598,-3155.4356 5029.6599,-3162.4356"/>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc19] -->
<g id="node1004" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc19]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-40490.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="448.5494" y="-40494.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc19]</text>
<text text-anchor="middle" x="572.0494" y="-40479.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc19]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc19] -->
<g id="edge573" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc19]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc19]</title>
<path fill="none" stroke="#000000" d="M758.3114,-40490.9355C971.0895,-40490.9355 1318.412,-40490.9355 1540.352,-40490.9355"/>
<polygon fill="#000000" stroke="#000000" points="1540.4954,-40494.4356 1550.4954,-40490.9355 1540.4954,-40487.4356 1540.4954,-40494.4356"/>
</g>
<!-- cats.kernel.Eq[io.circe.Decoder[Int]] -->
<g id="node1005" class="node">
<title>cats.kernel.Eq[io.circe.Decoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-15164.9355" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="19236.6796" y="-15168.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.Decoder[Int]]</text>
<text text-anchor="middle" x="19337.1796" y="-15153.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 22ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.Decoder[Int]]&#45;&gt;shapeless.IsTuple[io.circe.Decoder[Int]] -->
<g id="edge685" class="edge">
<title>cats.kernel.Eq[io.circe.Decoder[Int]]&#45;&gt;shapeless.IsTuple[io.circe.Decoder[Int]]</title>
<path fill="none" stroke="#000000" d="M19490.8311,-15164.9355C19588.4731,-15164.9355 19715.2045,-15164.9355 19817.0902,-15164.9355"/>
<polygon fill="#000000" stroke="#000000" points="19817.1838,-15168.4356 19827.1838,-15164.9355 19817.1838,-15161.4356 19817.1838,-15168.4356"/>
</g>
<!-- cats.kernel.Eq[io.circe.Decoder[Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge132" class="edge">
<title>cats.kernel.Eq[io.circe.Decoder[Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M19431.0854,-15143.6433C19515.5376,-15130.627 19636.5166,-15128.3055 19704.8751,-15200.9355 19713.1051,-15209.6799 19710.4762,-15405.1694 19712.8751,-15416.9355 19770.1835,-15698.0283 19922.4452,-16012.4702 19975.6429,-16117.0082"/>
<polygon fill="#000000" stroke="#000000" points="19972.6619,-16118.8663 19980.3296,-16126.1776 19978.8949,-16115.6804 19972.6619,-16118.8663"/>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Map[Symbol,Int]] -->
<g id="node1006" class="node">
<title>cats.kernel.Eq[scala.collection.immutable.Map[Symbol,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-15744.9355" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="19170.1796" y="-15748.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.collection.immutable.Map[Symbol,Int]]</text>
<text text-anchor="middle" x="19337.1796" y="-15733.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1072" class="edge">
<title>cats.kernel.Eq[scala.collection.immutable.Map[Symbol,Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M19582.4026,-15741.1521C19625.0769,-15748.1254 19667.6569,-15760.4291 19704.8751,-15780.9355 19847.1462,-15859.324 19942.8055,-16039.8229 19978.5951,-16116.9394"/>
<polygon fill="#000000" stroke="#000000" points="19975.5128,-16118.615 19982.8576,-16126.2507 19981.8776,-16115.7013 19975.5128,-16118.615"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Either[Int,String]],Int,That] -->
<g id="node1007" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Either[Int,String]],Int,That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-62900.9355" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="375.0494" y="-62904.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Either[Int,String]],Int,That]</text>
<text text-anchor="middle" x="572.0494" y="-62889.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1011" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-13050.9355" rx="273.8007" ry="26.7407"/>
<text text-anchor="start" x="3885.2721" y="-13054.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-13039.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 46ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge891" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4314.5817,-13038.6813C4411.5719,-13032.8778 4524.102,-13024.9834 4625.8509,-13014.9355 4784.3575,-12999.2827 4967.9338,-12973.2069 5075.5782,-12957.1028"/>
<polygon fill="#000000" stroke="#000000" points="5076.3849,-12960.5211 5085.755,-12955.5762 5075.3463,-12953.5985 5076.3849,-12960.5211"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge405" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4344.7479,-13050.9355C4477.4436,-13050.9355 4639.0213,-13050.9355 4783.756,-13050.9355"/>
<polygon fill="#000000" stroke="#000000" points="4784.1472,-13054.4356 4794.1472,-13050.9355 4784.1472,-13047.4356 4784.1472,-13054.4356"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G] -->
<g id="node1012" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-62972.9355" rx="370.5479" ry="26.7407"/>
<text text-anchor="start" x="318.0494" y="-62976.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G]</text>
<text text-anchor="middle" x="572.0494" y="-62961.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- AccumulatingDecoderSpec.this.BadSample =&gt; ?{def asJson: ?} -->
<g id="node1013" class="node">
<title>AccumulatingDecoderSpec.this.BadSample =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-63044.9355" rx="260.8448" ry="26.7407"/>
<text text-anchor="start" x="395.5494" y="-63048.7355" font-family="Times,serif" font-size="14.00" fill="#000000">AccumulatingDecoderSpec.this.BadSample =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-63033.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[cats.data.NonEmptyVector[Int]] -->
<g id="node1015" class="node">
<title>shapeless.IsTuple[cats.data.NonEmptyVector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-19536.9355" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="11519.8883" y="-19540.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[cats.data.NonEmptyVector[Int]]</text>
<text text-anchor="middle" x="11658.3883" y="-19525.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U] -->
<g id="node1016" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-63116.9355" rx="508.3196" ry="26.7407"/>
<text text-anchor="start" x="220.5494" y="-63120.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U]</text>
<text text-anchor="middle" x="572.0494" y="-63105.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;mapValues&#39;) =&gt; ?{def should: ?} -->
<g id="node1017" class="node">
<title>String(&#39;mapValues&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-28646.9355" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="460.5494" y="-28650.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;mapValues&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-28635.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;mapValues&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge88" class="edge">
<title>String(&#39;mapValues&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M725.7275,-28658.2271C843.2662,-28661.918 1007.7696,-28656.2672 1144.0988,-28610.9355 1386.4885,-28530.337 1625.8788,-28327.8966 1714.076,-28248.0542"/>
<polygon fill="#000000" stroke="#000000" points="1716.6041,-28250.4859 1721.6444,-28241.1668 1711.8928,-28245.3087 1716.6041,-28250.4859"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[Iterable[Either[Int,String]],io.circe.Json,That] -->
<g id="node1018" class="node">
<title>scala.collection.generic.CanBuildFrom[Iterable[Either[Int,String]],io.circe.Json,That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-63188.9355" rx="341.5652" ry="26.7407"/>
<text text-anchor="start" x="338.5494" y="-63192.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Iterable[Either[Int,String]],io.circe.Json,That]</text>
<text text-anchor="middle" x="572.0494" y="-63177.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[String,Int]] -->
<g id="node1020" class="node">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-6110.9355" rx="280.943" ry="26.7407"/>
<text text-anchor="start" x="2740.9013" y="-6114.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.collection.immutable.Map[String,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-6099.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[String,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Map[String,Int]] -->
<g id="edge1323" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[String,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Map[String,Int]]</title>
<path fill="none" stroke="#000000" d="M3043.0763,-6135.6388C3160.2188,-6160.594 3349.9838,-6198.3202 3515.6933,-6218.9355 3611.2764,-6230.8267 3716.6385,-6238.9167 3809.6502,-6244.3624"/>
<polygon fill="#000000" stroke="#000000" points="3809.5819,-6247.8642 3819.7672,-6244.9472 3809.9859,-6240.8759 3809.5819,-6247.8642"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[String,Int]]&#45;&gt;scala.collection.immutable.Map[String,Int] =&gt; Traversable[(String, Int)] -->
<g id="edge514" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[String,Int]]&#45;&gt;scala.collection.immutable.Map[String,Int] =&gt; Traversable[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M3165.7532,-6125.7449C3356.0556,-6137.7706 3623.874,-6154.6948 3818.7711,-6167.0109"/>
<polygon fill="#000000" stroke="#000000" points="3818.6693,-6170.5114 3828.8702,-6167.6491 3819.1108,-6163.5253 3818.6693,-6170.5114"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[String,Int]]&#45;&gt;org.scalacheck.util.Buildable[(String, Int),scala.collection.immutable.Map[String,Int]] -->
<g id="edge824" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[String,Int]]&#45;&gt;org.scalacheck.util.Buildable[(String, Int),scala.collection.immutable.Map[String,Int]]</title>
<path fill="none" stroke="#000000" d="M3165.7532,-6096.1262C3347.4825,-6084.6422 3599.901,-6068.6912 3792.0006,-6056.5519"/>
<polygon fill="#000000" stroke="#000000" points="3792.4941,-6060.0278 3802.2534,-6055.904 3792.0525,-6053.0417 3792.4941,-6060.0278"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Int)] -->
<g id="node1687" class="node">
<title>org.scalacheck.Arbitrary[(String, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-5606.9355" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="3966.7721" y="-5610.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(String, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-5595.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 33ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[(String, Int)] -->
<g id="edge394" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M3115.0921,-6131.2732C3245.5934,-6134.4895 3413.7347,-6113.6128 3507.6933,-6002.9355 3520.6401,-5987.685 3501.8518,-5657.3789 3515.6933,-5642.9355 3569.1179,-5587.1881 3772.388,-5587.0396 3917.4535,-5594.782"/>
<polygon fill="#000000" stroke="#000000" points="3917.6171,-5598.2963 3927.7947,-5595.3524 3918.0027,-5591.3069 3917.6171,-5598.2963"/>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node1022" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-20366.9355" rx="398.2023" ry="26.7407"/>
<text text-anchor="start" x="1476.104" y="-20370.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-20355.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; LargeNumberDecoderTests.this.PropertyCheckConfigParam -->
<g id="node1024" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; LargeNumberDecoderTests.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-63260.9355" rx="376.7759" ry="26.7407"/>
<text text-anchor="start" x="313.5494" y="-63264.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; LargeNumberDecoderTests.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-63249.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- cats.functor.Invariant[io.circe.KeyDecoder] -->
<g id="node1025" class="node">
<title>cats.functor.Invariant[io.circe.KeyDecoder]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-63332.9355" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="1630.604" y="-63336.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.functor.Invariant[io.circe.KeyDecoder]</text>
<text text-anchor="middle" x="1749.604" y="-63321.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc15]] -->
<g id="node1027" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc15]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-63404.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="1531.604" y="-63408.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc15]]</text>
<text text-anchor="middle" x="1749.604" y="-63393.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1028" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-18770.9355" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="10690.4287" y="-18774.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="10858.4287" y="-18759.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 128ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge601" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M11049.7847,-18788.1585C11167.1215,-18798.7193 11317.7225,-18812.2741 11439.7546,-18823.2575"/>
<polygon fill="#000000" stroke="#000000" points="11439.7038,-18826.767 11449.9773,-18824.1776 11440.3313,-18819.7952 11439.7038,-18826.767"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge1266" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M11040.481,-18752.5476C11123.2247,-18734.0628 11213.8715,-18697.3924 11265.0151,-18624.9355 11274.9305,-18610.8879 11261.4154,-16161.6281 11273.0151,-16148.9355 11348.6375,-16066.1884 11489.3469,-16075.9975 11578.2039,-16092.8732"/>
<polygon fill="#000000" stroke="#000000" points="11577.7517,-16096.3514 11588.2397,-16094.851 11579.1052,-16089.4835 11577.7517,-16096.3514"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge1423" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M11039.7581,-18752.5242C11122.5952,-18734.0435 11213.5344,-18697.3834 11265.0151,-18624.9355 11278.4991,-18605.9597 11258.102,-17804.8102 11273.0151,-17786.9355 11336.8925,-17710.3724 11453.6933,-17697.1665 11542.0242,-17699.8984"/>
<polygon fill="#000000" stroke="#000000" points="11541.9794,-17703.3991 11552.1054,-17700.2826 11542.246,-17696.4042 11541.9794,-17703.3991"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge4" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M11107.4293,-18770.9355C11195.7243,-18770.9355 11295.5233,-18770.9355 11385.689,-18770.9355"/>
<polygon fill="#000000" stroke="#000000" points="11385.7875,-18774.4356 11395.7875,-18770.9355 11385.7874,-18767.4356 11385.7875,-18774.4356"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node1879" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="12415.9214" cy="-18770.9355" rx="364.3201" ry="26.7407"/>
<text text-anchor="start" x="12166.4214" y="-18774.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="12415.9214" y="-18759.7355" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 765ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge484" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M11107.4827,-18770.8566C11165.3225,-18782.2535 11222.3655,-18804.4098 11265.0151,-18844.9355 11276.2687,-18855.6287 11260.8458,-18869.2973 11273.0151,-18878.9355 11340.1482,-18932.106 11958.9755,-18890.9893 12043.7615,-18878.9355 12147.5064,-18864.1865 12262.7759,-18827.4053 12337.1419,-18800.8616"/>
<polygon fill="#000000" stroke="#000000" points="12338.6802,-18804.0279 12346.9064,-18797.3511 12336.3119,-18797.4407 12338.6802,-18804.0279"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam -->
<g id="node1029" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-63476.9355" rx="321.9673" ry="26.7407"/>
<text text-anchor="start" x="352.5494" y="-63480.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-63465.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Vector[Int]] -->
<g id="node1030" class="node">
<title>org.scalacheck.Shrink[Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-5462.9355" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="3975.7721" y="-5466.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Vector[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-5451.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Shrink[Vector[Int]]&#45;&gt;Vector[Int] =&gt; Traversable[Int] -->
<g id="edge655" class="edge">
<title>org.scalacheck.Shrink[Vector[Int]]&#45;&gt;Vector[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M4214.4601,-5458.2199C4425.109,-5451.3068 4815.4324,-5438.497 5025.3354,-5431.6083"/>
<polygon fill="#000000" stroke="#000000" points="5025.6217,-5435.1009 5035.5015,-5431.2746 5025.392,-5428.1046 5025.6217,-5435.1009"/>
</g>
<!-- Integral[Vector[Int]] -->
<g id="node1697" class="node">
<title>Integral[Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-5498.9355" rx="90.5193" ry="26.7407"/>
<text text-anchor="start" x="5111.7166" y="-5502.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Vector[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-5487.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Vector[Int]]&#45;&gt;Integral[Vector[Int]] -->
<g id="edge1268" class="edge">
<title>org.scalacheck.Shrink[Vector[Int]]&#45;&gt;Integral[Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M4214.4601,-5467.6512C4440.064,-5475.0551 4871.7598,-5489.2227 5067.1844,-5495.6362"/>
<polygon fill="#000000" stroke="#000000" points="5067.3355,-5499.143 5077.4449,-5495.973 5067.5651,-5492.1468 5067.3355,-5499.143"/>
</g>
<!-- org.scalacheck.Shrink[Vector[Int]]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge939" class="edge">
<title>org.scalacheck.Shrink[Vector[Int]]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4203.6806,-5451.8087C4349.4904,-5442.8778 4570.271,-5440.0983 4625.8509,-5498.9355 4645.308,-5519.5329 4614.4203,-6498.3133 4633.8509,-6518.9355 4688.5422,-6576.9811 4910.0332,-6573.3575 5049.9703,-6564.6773"/>
<polygon fill="#000000" stroke="#000000" points="5050.5622,-6568.1467 5060.319,-6564.017 5050.1164,-6561.161 5050.5622,-6568.1467"/>
</g>
<!-- org.scalacheck.util.Buildable[Int,Vector[Int]] -->
<g id="node1978" class="node">
<title>org.scalacheck.util.Buildable[Int,Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-5354.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="5044.2166" y="-5358.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Int,Vector[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-5343.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[Vector[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Vector[Int]] -->
<g id="edge1406" class="edge">
<title>org.scalacheck.Shrink[Vector[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M4207.7366,-5472.1434C4351.6022,-5478.744 4565.2596,-5478.8521 4625.8509,-5426.9355 4638.2973,-5416.2711 4621.4183,-5401.6159 4633.8509,-5390.9355 4685.186,-5346.8358 4851.0257,-5341.2735 4984.3985,-5344.6667"/>
<polygon fill="#000000" stroke="#000000" points="4984.6618,-5348.1751 4994.7537,-5344.9496 4984.853,-5341.1777 4984.6618,-5348.1751"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R] -->
<g id="node1032" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-63548.9355" rx="469.5378" ry="26.7407"/>
<text text-anchor="start" x="248.0494" y="-63552.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R]</text>
<text text-anchor="middle" x="572.0494" y="-63537.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;0&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1033" class="node">
<title>String(&#39;0&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-63620.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="499.5494" y="-63624.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;0&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="572.0494" y="-63609.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 5ms</text>
</g>
<!-- io.circe.Encoder[Byte] -->
<g id="node1034" class="node">
<title>io.circe.Encoder[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-63692.9355" rx="98.9899" ry="26.7407"/>
<text text-anchor="start" x="510.0494" y="-63696.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Byte]</text>
<text text-anchor="middle" x="572.0494" y="-63681.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc6] -->
<g id="node1035" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc6]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-63764.9355" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="423.5494" y="-63768.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc6]</text>
<text text-anchor="middle" x="572.0494" y="-63753.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc6] -->
<g id="node1722" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc6]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-63764.9355" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="1608.604" y="-63768.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc6]</text>
<text text-anchor="middle" x="1749.604" y="-63753.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc6]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc6] -->
<g id="edge1412" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc6]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc6]</title>
<path fill="none" stroke="#000000" d="M793.5384,-63764.9355C1003.7878,-63764.9355 1318.0755,-63764.9355 1528.2728,-63764.9355"/>
<polygon fill="#000000" stroke="#000000" points="1528.5155,-63768.4356 1538.5154,-63764.9355 1528.5154,-63761.4356 1528.5155,-63768.4356"/>
</g>
<!-- Integral[scala.math.BigInt] -->
<g id="node1036" class="node">
<title>Integral[scala.math.BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-50777.9355" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="1675.604" y="-50781.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[scala.math.BigInt]</text>
<text text-anchor="middle" x="1749.604" y="-50766.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.JsonNumber]&#45;&gt;shapeless.IsTuple[io.circe.JsonNumber] -->
<g id="edge183" class="edge">
<title>cats.kernel.Eq[io.circe.JsonNumber]&#45;&gt;shapeless.IsTuple[io.circe.JsonNumber]</title>
<path fill="none" stroke="#000000" d="M3079.6632,-44133.5515C3196.1814,-44139.3896 3362.4904,-44149.1315 3507.6933,-44162.9355 3655.19,-44176.9577 3823.639,-44199.3413 3937.5643,-44215.4299"/>
<polygon fill="#000000" stroke="#000000" points="3937.3365,-44218.9325 3947.7284,-44216.869 3938.3179,-44212.0016 3937.3365,-44218.9325"/>
</g>
<!-- io.circe.Decoder[(Int,)] -->
<g id="node1038" class="node">
<title>io.circe.Decoder[(Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-14274.9355" rx="101.2327" ry="26.7407"/>
<text text-anchor="start" x="4007.2721" y="-14278.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int,)]</text>
<text text-anchor="middle" x="4070.7721" y="-14263.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- io.circe.Decoder[(Int,)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1275" class="edge">
<title>io.circe.Decoder[(Int,)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4166.8125,-14283.5881C4309.0295,-14294.0375 4565.3807,-14303.0336 4625.8509,-14238.9355 4649.183,-14214.2037 4611.3895,-13040.4607 4633.8509,-13014.9355 4745.1752,-12888.4264 4964.2657,-12904.3344 5084.2709,-12924.8526"/>
<polygon fill="#000000" stroke="#000000" points="5083.6971,-12928.3054 5094.1523,-12926.591 5084.91,-12921.4112 5083.6971,-12928.3054"/>
</g>
<!-- io.circe.Decoder[(Int,)]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with (Int,)] -->
<g id="edge1464" class="edge">
<title>io.circe.Decoder[(Int,)]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with (Int,)]</title>
<path fill="none" stroke="#000000" d="M4167.4621,-14282.8849C4308.9053,-14292.2321 4562.3454,-14299.5916 4625.8509,-14238.9355 4649.134,-14216.6972 4610.5964,-14189.2037 4633.8509,-14166.9355 4670.2497,-14132.0806 4771.6933,-14120.304 4876.5077,-14118.3042"/>
<polygon fill="#000000" stroke="#000000" points="4876.7171,-14121.8014 4886.6594,-14118.1408 4876.6044,-14114.8023 4876.7171,-14121.8014"/>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int,)]] -->
<g id="node1727" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int,)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-14202.9355" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="5033.7166" y="-14206.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int,)]]</text>
<text text-anchor="middle" x="5167.7166" y="-14191.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[(Int,)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int,)]] -->
<g id="edge481" class="edge">
<title>io.circe.Decoder[(Int,)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int,)]]</title>
<path fill="none" stroke="#000000" d="M4169.2892,-14268.5932C4280.2627,-14261.4379 4466.009,-14249.4286 4625.8509,-14238.9355 4742.7325,-14231.2627 4873.7881,-14222.5585 4977.7324,-14215.631"/>
<polygon fill="#000000" stroke="#000000" points="4978.2796,-14219.1024 4988.0246,-14214.945 4977.814,-14212.1179 4978.2796,-14219.1024"/>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc12] -->
<g id="node1039" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc12]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-39626.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="448.5494" y="-39630.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc12]</text>
<text text-anchor="middle" x="572.0494" y="-39615.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc12]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc12] -->
<g id="edge817" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc12]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc12]</title>
<path fill="none" stroke="#000000" d="M758.3114,-39626.9355C971.0895,-39626.9355 1318.412,-39626.9355 1540.352,-39626.9355"/>
<polygon fill="#000000" stroke="#000000" points="1540.4954,-39630.4356 1550.4954,-39626.9355 1540.4954,-39623.4356 1540.4954,-39630.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Either[String,(String, io.circe.Json, Boolean)]]] -->
<g id="node1041" class="node">
<title>org.scalacheck.Arbitrary[List[Either[String,(String, io.circe.Json, Boolean)]]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-7338.9355" rx="310.3398" ry="26.7407"/>
<text text-anchor="start" x="360.5494" y="-7342.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[List[Either[String,(String, io.circe.Json, Boolean)]]]</text>
<text text-anchor="middle" x="572.0494" y="-7327.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 35ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;List[Either[String,(String, io.circe.Json, Boolean)]] =&gt; Traversable[Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="edge1074" class="edge">
<title>org.scalacheck.Arbitrary[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;List[Either[String,(String, io.circe.Json, Boolean)]] =&gt; Traversable[Either[String,(String, io.circe.Json, Boolean)]]</title>
<path fill="none" stroke="#000000" d="M734.2695,-7316.0084C850.4172,-7300.2759 1010.6313,-7279.9641 1152.0988,-7266.9355 1229.5054,-7259.8067 1312.6893,-7253.7703 1391.6656,-7248.7966"/>
<polygon fill="#000000" stroke="#000000" points="1392.0132,-7252.2818 1401.7752,-7248.1643 1391.5762,-7245.2955 1392.0132,-7252.2818"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;org.scalacheck.Arbitrary[Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="edge1064" class="edge">
<title>org.scalacheck.Arbitrary[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;org.scalacheck.Arbitrary[Either[String,(String, io.circe.Json, Boolean)]]</title>
<path fill="none" stroke="#000000" d="M610.3856,-7365.6622C703.2831,-7430.4212 947.8306,-7600.8623 1152.0988,-7742.9355 1357.1251,-7885.5361 1601.9043,-8055.4404 1702.7033,-8125.3913"/>
<polygon fill="#000000" stroke="#000000" points="1700.9343,-8128.4239 1711.1454,-8131.2497 1704.9252,-8122.673 1700.9343,-8128.4239"/>
</g>
<!-- scala.reflect.ClassTag[List[Either[String,(String, io.circe.Json, Boolean)]]] -->
<g id="node1445" class="node">
<title>scala.reflect.ClassTag[List[Either[String,(String, io.circe.Json, Boolean)]]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-7374.9355" rx="299.6267" ry="26.7407"/>
<text text-anchor="start" x="1545.604" y="-7378.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[List[Either[String,(String, io.circe.Json, Boolean)]]]</text>
<text text-anchor="middle" x="1749.604" y="-7363.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;scala.reflect.ClassTag[List[Either[String,(String, io.circe.Json, Boolean)]]] -->
<g id="edge442" class="edge">
<title>org.scalacheck.Arbitrary[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;scala.reflect.ClassTag[List[Either[String,(String, io.circe.Json, Boolean)]]]</title>
<path fill="none" stroke="#000000" d="M865.0219,-7347.8923C1045.1901,-7353.4003 1275.2822,-7360.4347 1455.6341,-7365.9484"/>
<polygon fill="#000000" stroke="#000000" points="1455.7067,-7369.4521 1465.809,-7366.2594 1455.9207,-7362.4554 1455.7067,-7369.4521"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;org.scalacheck.util.Buildable[Either[String,(String, io.circe.Json, Boolean)],List[Either[String,(String, io.circe.Json, Boolean)]]] -->
<g id="edge774" class="edge">
<title>org.scalacheck.Arbitrary[List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;org.scalacheck.util.Buildable[Either[String,(String, io.circe.Json, Boolean)],List[Either[String,(String, io.circe.Json, Boolean)]]]</title>
<path fill="none" stroke="#000000" d="M865.0219,-7329.9788C996.5306,-7325.9584 1154.638,-7321.1247 1300.5857,-7316.6629"/>
<polygon fill="#000000" stroke="#000000" points="1300.7379,-7320.1599 1310.6263,-7316.3559 1300.5239,-7313.1632 1300.7379,-7320.1599"/>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc5] -->
<g id="node1042" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc5]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-53144.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="445.5494" y="-53148.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc5]</text>
<text text-anchor="middle" x="572.0494" y="-53133.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc5]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc5]] -->
<g id="edge1091" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc5]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc5]]</title>
<path fill="none" stroke="#000000" d="M762.5526,-53144.9355C948.131,-53144.9355 1233.0868,-53144.9355 1449.2048,-53144.9355"/>
<polygon fill="#000000" stroke="#000000" points="1449.4435,-53148.4356 1459.4434,-53144.9355 1449.4434,-53141.4356 1449.4435,-53148.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[BigInt] -->
<g id="node1043" class="node">
<title>org.scalacheck.Arbitrary[BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-63836.9355" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="483.0494" y="-63840.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[BigInt]</text>
<text text-anchor="middle" x="572.0494" y="-63825.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 22ms</text>
</g>
<!-- scala.reflect.ClassTag[BigInt] -->
<g id="node1373" class="node">
<title>scala.reflect.ClassTag[BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-63836.9355" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="1668.104" y="-63840.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[BigInt]</text>
<text text-anchor="middle" x="1749.604" y="-63825.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 13ms</text>
</g>
<!-- org.scalacheck.Arbitrary[BigInt]&#45;&gt;scala.reflect.ClassTag[BigInt] -->
<g id="edge626" class="edge">
<title>org.scalacheck.Arbitrary[BigInt]&#45;&gt;scala.reflect.ClassTag[BigInt]</title>
<path fill="none" stroke="#000000" d="M709.4345,-63836.9355C936.1888,-63836.9355 1386.179,-63836.9355 1612.65,-63836.9355"/>
<polygon fill="#000000" stroke="#000000" points="1612.9322,-63840.4356 1622.9321,-63836.9355 1612.9321,-63833.4356 1612.9322,-63840.4356"/>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.Set[io.circe.Json]] -->
<g id="node1044" class="node">
<title>io.circe.Encoder[scala.collection.immutable.Set[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-19358.9355" rx="254.6169" ry="26.7407"/>
<text text-anchor="start" x="400.0494" y="-19362.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[scala.collection.immutable.Set[io.circe.Json]]</text>
<text text-anchor="middle" x="572.0494" y="-19347.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.Set[io.circe.Json]]&#45;&gt;io.circe.Encoder[io.circe.Json] -->
<g id="edge1022" class="edge">
<title>io.circe.Encoder[scala.collection.immutable.Set[io.circe.Json]]&#45;&gt;io.circe.Encoder[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M792.5021,-19345.4563C1034.2732,-19330.6735 1414.5208,-19307.4238 1615.216,-19295.1525"/>
<polygon fill="#000000" stroke="#000000" points="1615.4575,-19298.6444 1625.2253,-19294.5405 1615.0303,-19291.6574 1615.4575,-19298.6444"/>
</g>
<!-- String(&#39;nonEmpty&#39;) =&gt; ?{def should: ?} -->
<g id="node1045" class="node">
<title>String(&#39;nonEmpty&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-28574.9355" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="463.0494" y="-28578.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;nonEmpty&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-28563.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;nonEmpty&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge639" class="edge">
<title>String(&#39;nonEmpty&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M730.1703,-28582.8688C846.7585,-28584.4508 1008.0639,-28577.6242 1144.0988,-28538.9355 1371.7449,-28474.1924 1610.4266,-28315.0402 1706.1494,-28246.8222"/>
<polygon fill="#000000" stroke="#000000" points="1708.3285,-28249.5666 1714.4215,-28240.8991 1704.2533,-28243.8752 1708.3285,-28249.5666"/>
</g>
<!-- cats.Eq[Float] -->
<g id="node1046" class="node">
<title>cats.Eq[Float]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-34658.9355" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="1706.104" y="-34662.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Float]</text>
<text text-anchor="middle" x="1749.604" y="-34647.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 10ms</text>
</g>
<!-- cats.Eq[Float]&#45;&gt;shapeless.IsTuple[Float] -->
<g id="edge273" class="edge">
<title>cats.Eq[Float]&#45;&gt;shapeless.IsTuple[Float]</title>
<path fill="none" stroke="#000000" d="M1822.6389,-34658.9355C2021.4562,-34658.9355 2573.62,-34658.9355 2815.4449,-34658.9355"/>
<polygon fill="#000000" stroke="#000000" points="2815.6713,-34662.4356 2825.6713,-34658.9355 2815.6712,-34655.4356 2815.6713,-34662.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Int,Vector[Int]] -->
<g id="node1048" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Int,Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-5354.9355" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="6065.7346" y="-5358.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Int,Vector[Int]]</text>
<text text-anchor="middle" x="6222.2346" y="-5343.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node1050" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-12618.9355" rx="421.3713" ry="26.7407"/>
<text text-anchor="start" x="4877.7166" y="-12622.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-12607.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B) =&gt; ?ASSERTION) -->
<g id="node1051" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-63908.9355" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="384.0494" y="-63912.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-63897.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[WeekDay$1.Value] -->
<g id="node1052" class="node">
<title>io.circe.Encoder[WeekDay$1.Value]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-63980.9355" rx="154.7129" ry="26.7407"/>
<text text-anchor="start" x="470.5494" y="-63984.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[WeekDay$1.Value]</text>
<text text-anchor="middle" x="572.0494" y="-63969.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[Int :: shapeless.HNil] -->
<g id="node1053" class="node">
<title>shapeless.IsTuple[Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="19994.3036" cy="-17603.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="19885.8036" y="-17607.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="19994.3036" y="-17592.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- shapeless.IsTuple[Test$3] -->
<g id="node1054" class="node">
<title>shapeless.IsTuple[Test$3]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-64052.9355" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="1678.604" y="-64056.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Test$3]</text>
<text text-anchor="middle" x="1749.604" y="-64041.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; PrinterWriterReuseSuite.this.PropertyCheckConfigParam -->
<g id="node1055" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; PrinterWriterReuseSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-64124.9355" rx="336.6657" ry="26.7407"/>
<text text-anchor="start" x="342.0494" y="-64128.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; PrinterWriterReuseSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-64113.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.Eq[List[io.circe.CursorOp]]&#45;&gt;cats.kernel.PartialOrder[io.circe.CursorOp] -->
<g id="edge515" class="edge">
<title>cats.Eq[List[io.circe.CursorOp]]&#45;&gt;cats.kernel.PartialOrder[io.circe.CursorOp]</title>
<path fill="none" stroke="#000000" d="M1862.1195,-38706.2248C1983.5513,-38722.2783 2182.7295,-38747.315 2355.1092,-38762.9355 2487.5149,-38774.9338 2637.3999,-38784.1622 2751.1183,-38790.2706"/>
<polygon fill="#000000" stroke="#000000" points="2751.142,-38793.7768 2761.3145,-38790.8152 2751.5154,-38786.7867 2751.142,-38793.7768"/>
</g>
<!-- cats.Eq[List[io.circe.CursorOp]]&#45;&gt;cats.kernel.Eq[io.circe.CursorOp] -->
<g id="edge893" class="edge">
<title>cats.Eq[List[io.circe.CursorOp]]&#45;&gt;cats.kernel.Eq[io.circe.CursorOp]</title>
<path fill="none" stroke="#000000" d="M1884.5954,-38695.0477C2107.0387,-38701.8238 2549.0331,-38715.2878 2781.1116,-38722.3574"/>
<polygon fill="#000000" stroke="#000000" points="2781.2194,-38725.8622 2791.3213,-38722.6684 2781.4326,-38718.8655 2781.2194,-38725.8622"/>
</g>
<!-- cats.Eq[List[io.circe.CursorOp]]&#45;&gt;shapeless.IsTuple[List[io.circe.CursorOp]] -->
<g id="edge76" class="edge">
<title>cats.Eq[List[io.circe.CursorOp]]&#45;&gt;shapeless.IsTuple[List[io.circe.CursorOp]]</title>
<path fill="none" stroke="#000000" d="M1884.5954,-38686.8234C2096.9989,-38680.3532 2509.5824,-38667.785 2748.4443,-38660.5088"/>
<polygon fill="#000000" stroke="#000000" points="2748.7396,-38664.0015 2758.6284,-38660.1986 2748.5264,-38657.0048 2748.7396,-38664.0015"/>
</g>
<!-- cats.kernel.Order[io.circe.CursorOp] -->
<g id="node1168" class="node">
<title>cats.kernel.Order[io.circe.CursorOp]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-38582.9355" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="2830.9013" y="-38586.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[io.circe.CursorOp]</text>
<text text-anchor="middle" x="2931.4013" y="-38571.7355" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 26ms</text>
</g>
<!-- cats.Eq[List[io.circe.CursorOp]]&#45;&gt;cats.kernel.Order[io.circe.CursorOp] -->
<g id="edge1159" class="edge">
<title>cats.Eq[List[io.circe.CursorOp]]&#45;&gt;cats.kernel.Order[io.circe.CursorOp]</title>
<path fill="none" stroke="#000000" d="M1862.1195,-38675.6463C1983.5513,-38659.5928 2182.7295,-38634.5561 2355.1092,-38618.9355 2496.2577,-38606.1451 2657.27,-38596.5022 2773.1564,-38590.4314"/>
<polygon fill="#000000" stroke="#000000" points="2773.3682,-38593.9252 2783.1726,-38589.9097 2773.004,-38586.9347 2773.3682,-38593.9252"/>
</g>
<!-- scala.reflect.ClassTag[Map[String,Either[Int,String]]] -->
<g id="node1057" class="node">
<title>scala.reflect.ClassTag[Map[String,Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-8498.9355" rx="219.4064" ry="26.7407"/>
<text text-anchor="start" x="1602.604" y="-8502.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Map[String,Either[Int,String]]]</text>
<text text-anchor="middle" x="1749.604" y="-8487.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[io.circe.tests.examples.Foo] -->
<g id="node1058" class="node">
<title>shapeless.IsTuple[io.circe.tests.examples.Foo]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-64196.9355" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="1622.604" y="-64200.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.tests.examples.Foo]</text>
<text text-anchor="middle" x="1749.604" y="-64185.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node1059" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-12546.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="4967.7166" y="-12550.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-12535.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node1061" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-12186.9355" rx="468.6237" ry="26.7407"/>
<text text-anchor="start" x="4844.2166" y="-12190.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-12175.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="node1062" class="node">
<title>io.circe.Decoder[scala.collection.immutable.SortedMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-11754.9355" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="3887.2721" y="-11758.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[scala.collection.immutable.SortedMap[Long,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-11743.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- io.circe.Decoder[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge45" class="edge">
<title>io.circe.Decoder[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4294.4526,-11739.7334C4428.3269,-11736.091 4580.962,-11743.4203 4625.8509,-11790.9355 4645.08,-11811.2897 4616.7355,-12776.7745 4633.8509,-12798.9355 4735.0854,-12930.0134 4942.3396,-12949.8191 5066.7365,-12948.7986"/>
<polygon fill="#000000" stroke="#000000" points="5067.0734,-12952.2946 5077.0272,-12948.6652 5066.9826,-12945.2952 5067.0734,-12952.2946"/>
</g>
<!-- io.circe.Decoder[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,(Long, Int),scala.collection.immutable.SortedMap[Long,Int]] -->
<g id="edge198" class="edge">
<title>io.circe.Decoder[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M4341.927,-11754.9355C4456.1649,-11754.9355 4592.1843,-11754.9355 4720.5365,-11754.9355"/>
<polygon fill="#000000" stroke="#000000" points="4720.552,-11758.4356 4730.5519,-11754.9355 4720.5519,-11751.4356 4720.552,-11758.4356"/>
</g>
<!-- io.circe.Decoder[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;io.circe.KeyDecoder[Long] -->
<g id="edge104" class="edge">
<title>io.circe.Decoder[scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;io.circe.KeyDecoder[Long]</title>
<path fill="none" stroke="#000000" d="M4303.2364,-11741.0997C4433.899,-11738.733 4579.8039,-11746.9547 4625.8509,-11790.9355 4649.134,-11813.1739 4610.5964,-11840.6674 4633.8509,-11862.9355 4690.6753,-11917.3498 4906.0287,-11915.5169 5045.2473,-11908.0478"/>
<polygon fill="#000000" stroke="#000000" points="5045.7612,-11911.5248 5055.5524,-11907.4772 5045.3742,-11904.5355 5045.7612,-11911.5248"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J] -->
<g id="node1064" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-64268.9355" rx="395.9596" ry="26.7407"/>
<text text-anchor="start" x="300.0494" y="-64272.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J]</text>
<text text-anchor="middle" x="572.0494" y="-64257.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JsonObjectSuite.this.PropertyCheckConfigurable -->
<g id="node1065" class="node">
<title>JsonObjectSuite.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-64340.9355" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="438.0494" y="-64344.7355" font-family="Times,serif" font-size="14.00" fill="#000000">JsonObjectSuite.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-64329.7355" font-family="Times,serif" font-size="14.00" fill="#000000">19 times = 6ms</text>
</g>
<!-- shapeless.IsTuple[String :: io.circe.Json :: shapeless.HNil] -->
<g id="node1066" class="node">
<title>shapeless.IsTuple[String :: io.circe.Json :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-15716.9355" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="12971.5282" y="-15720.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[String :: io.circe.Json :: shapeless.HNil]</text>
<text text-anchor="middle" x="13131.0282" y="-15705.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- cats.Eq[String]&#45;&gt;shapeless.IsTuple[String] -->
<g id="edge790" class="edge">
<title>cats.Eq[String]&#45;&gt;shapeless.IsTuple[String]</title>
<path fill="none" stroke="#000000" d="M13195.2592,-15624.2687C13273.5233,-15638.6964 13403.9515,-15648.227 13473.975,-15572.9355 13492.8264,-15552.6659 13463.3494,-15344.4128 13481.975,-15323.9355 13537.1588,-15263.2658 13633.6937,-15258.3598 13706.664,-15265.4033"/>
<polygon fill="#000000" stroke="#000000" points="13706.4853,-15268.9037 13716.7973,-15266.4719 13707.2195,-15261.9423 13706.4853,-15268.9037"/>
</g>
<!-- String(&#39;field&#39;) =&gt; ?{def should: ?} -->
<g id="node1070" class="node">
<title>String(&#39;field&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-28502.9355" rx="142.6713" ry="26.7407"/>
<text text-anchor="start" x="479.0494" y="-28506.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;field&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-28491.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;field&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1407" class="edge">
<title>String(&#39;field&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M713.5149,-28506.9382C830.4469,-28507.1864 1000.0492,-28500.4531 1144.0988,-28466.9355 1357.2487,-28417.3396 1591.6458,-28300.1705 1695.2405,-28244.8487"/>
<polygon fill="#000000" stroke="#000000" points="1697.1003,-28247.823 1704.2587,-28240.0123 1693.7919,-28241.6541 1697.1003,-28247.823"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; JsonSuite.this.PropertyCheckConfigParam -->
<g id="node1071" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; JsonSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-64412.9355" rx="278.7002" ry="26.7407"/>
<text text-anchor="start" x="383.0494" y="-64416.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; JsonSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-64401.7355" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 3ms</text>
</g>
<!-- shapeless.IsTuple[cats.data.Validated[String,Int]] -->
<g id="node1072" class="node">
<title>shapeless.IsTuple[cats.data.Validated[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-19248.9355" rx="202.4653" ry="26.7407"/>
<text text-anchor="start" x="11523.3883" y="-19252.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[cats.data.Validated[String,Int]]</text>
<text text-anchor="middle" x="11658.3883" y="-19237.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION) -->
<g id="node1073" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-64484.9355" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="349.5494" y="-64488.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-64473.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.Generic.Aux[(Int, String, Char),L] -->
<g id="node1074" class="node">
<title>shapeless.Generic.Aux[(Int, String, Char),L]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-14152.9355" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="11536.3883" y="-14156.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, String, Char),L]</text>
<text text-anchor="middle" x="11658.3883" y="-14141.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc10] -->
<g id="node1075" class="node">
<title>Fractional[ProductCodecSuite.this.Cc10]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-64592.9355" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="1637.604" y="-64596.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc10]</text>
<text text-anchor="middle" x="1749.604" y="-64581.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;A JSON boolean&#39;) =&gt; ?{def should: ?} -->
<g id="node1076" class="node">
<title>String(&#39;A JSON boolean&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-28430.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="445.5494" y="-28434.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;A JSON boolean&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-28419.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;A JSON boolean&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge274" class="edge">
<title>String(&#39;A JSON boolean&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M762.3846,-28429.7027C874.2813,-28426.3129 1018.0783,-28417.3341 1144.0988,-28394.9355 1342.133,-28359.7374 1567.1979,-28282.5855 1678.9189,-28241.659"/>
<polygon fill="#000000" stroke="#000000" points="1680.2174,-28244.9108 1688.3952,-28238.1748 1677.8017,-28238.3408 1680.2174,-28244.9108"/>
</g>
<!-- cats.functor.Contravariant[io.circe.ObjectEncoder] -->
<g id="node1077" class="node">
<title>cats.functor.Contravariant[io.circe.ObjectEncoder]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-64628.9355" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="433.5494" y="-64632.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.functor.Contravariant[io.circe.ObjectEncoder]</text>
<text text-anchor="middle" x="572.0494" y="-64617.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int)] -->
<g id="node1078" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-16598.9355" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="10757.9287" y="-16602.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="10858.4287" y="-16587.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 74ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge781" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10950.6781,-16620.5131C11044.5394,-16636.3834 11186.9801,-16642.557 11265.0151,-16557.9355 11280.4218,-16541.2284 11257.547,-16165.5859 11273.0151,-16148.9355 11349.0903,-16067.0455 11489.0053,-16076.3748 11577.6802,-16092.9548"/>
<polygon fill="#000000" stroke="#000000" points="11577.2141,-16096.4296 11587.6978,-16094.8993 11578.548,-16089.5579 11577.2141,-16096.4296"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge399" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M10945.9776,-16576.769C11039.7481,-16558.8794 11185.7358,-16548.9913 11265.0151,-16634.9355 11284.6409,-16656.2113 11253.4407,-17655.6124 11273.0151,-17676.9355 11345.9772,-17756.4162 11479.0121,-17750.3585 11568.0637,-17734.7954"/>
<polygon fill="#000000" stroke="#000000" points="11568.9462,-17738.1923 11578.1577,-17732.958 11567.6926,-17731.3055 11568.9462,-17738.1923"/>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int)] -->
<g id="node1289" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-16184.9355" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="11548.3883" y="-16188.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="11658.3883" y="-16173.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int)] -->
<g id="edge910" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M10950.607,-16620.4474C11044.4101,-16636.2639 11186.8035,-16642.3939 11265.0151,-16557.9355 11277.7395,-16544.1948 11260.2402,-16234.6294 11273.0151,-16220.9355 11342.8614,-16146.0647 11466.0939,-16147.5693 11554.4131,-16161.0544"/>
<polygon fill="#000000" stroke="#000000" points="11554.0363,-16164.5385 11564.4638,-16162.6632 11555.1427,-16157.6265 11554.0363,-16164.5385"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1402" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M10953.0844,-16620.1645C11046.7927,-16634.9889 11187.1976,-16639.3856 11265.0151,-16555.9355 11282.0757,-16537.64 11255.0147,-16348.3073 11273.0151,-16330.9355 11303.8261,-16301.2006 12007.3372,-16308.4241 12043.7615,-16330.9355 12050.5245,-16335.1154 12045.496,-16342.0412 12051.7615,-16346.9355 12315.9751,-16553.3301 12455.2963,-16470.1732 12788.0814,-16510.9355 13236.2585,-16565.832 13352.182,-16535.9355 13803.7086,-16535.9355 13803.7086,-16535.9355 13803.7086,-16535.9355 15021.7901,-16535.9355 15310.0413,-16535.9355 15642.4991,-16519.5065 15854.3814,-16506.9586"/>
<polygon fill="#000000" stroke="#000000" points="15854.6046,-16510.4516 15864.3792,-16506.3641 15854.1891,-16503.464 15854.6046,-16510.4516"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int),L] -->
<g id="node1428" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-16256.9355" rx="195.3231" ry="26.7407"/>
<text text-anchor="start" x="11528.3883" y="-16260.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="11658.3883" y="-16245.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int),L] -->
<g id="edge769" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M10950.9214,-16620.4093C11044.6316,-16636.0807 11186.6283,-16641.9889 11265.0151,-16557.9355 11284.7273,-16536.7983 11253.3609,-16319.1269 11273.0151,-16297.9355 11339.5386,-16226.2092 11454.8083,-16222.732 11541.9943,-16233.1161"/>
<polygon fill="#000000" stroke="#000000" points="11541.5847,-16236.5921 11551.945,-16234.3753 11542.4636,-16229.6475 11541.5847,-16236.5921"/>
</g>
<!-- String(&#39;Show[ParsingFailure]&#39;) =&gt; ?{def should: ?} -->
<g id="node1079" class="node">
<title>String(&#39;Show[ParsingFailure]&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-28358.9355" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="432.0494" y="-28362.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Show[ParsingFailure]&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-28347.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- String(&#39;Show[ParsingFailure]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge581" class="edge">
<title>String(&#39;Show[ParsingFailure]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M774.0939,-28351.8267C883.8244,-28346.5565 1021.7117,-28337.6529 1144.0988,-28322.9355 1324.8144,-28301.204 1533.3263,-28260.5297 1652.4962,-28235.7737"/>
<polygon fill="#000000" stroke="#000000" points="1653.2564,-28239.1905 1662.3323,-28233.7243 1651.8286,-28232.3377 1653.2564,-28239.1905"/>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc4] -->
<g id="node1080" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc4]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-64700.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="1620.104" y="-64704.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc4]</text>
<text text-anchor="middle" x="1749.604" y="-64689.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- String(&#39;fromDoubleOrNull&#39;) =&gt; ?{def should: ?} -->
<g id="node1081" class="node">
<title>String(&#39;fromDoubleOrNull&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-28286.9355" rx="199.3083" ry="26.7407"/>
<text text-anchor="start" x="439.0494" y="-28290.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;fromDoubleOrNull&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-28275.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;fromDoubleOrNull&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge64" class="edge">
<title>String(&#39;fromDoubleOrNull&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M753.7835,-28275.8237C994.2748,-28261.1191 1412.2115,-28235.565 1621.8989,-28222.7439"/>
<polygon fill="#000000" stroke="#000000" points="1622.2642,-28226.2282 1632.0319,-28222.1243 1621.8369,-28219.2412 1622.2642,-28226.2282"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc12] -->
<g id="node1082" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc12]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-64772.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="420.0494" y="-64776.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc12]</text>
<text text-anchor="middle" x="572.0494" y="-64761.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc12] -->
<g id="node1423" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc12]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-64772.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="1605.104" y="-64776.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc12]</text>
<text text-anchor="middle" x="1749.604" y="-64761.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc12]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc12] -->
<g id="edge383" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc12]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc12]</title>
<path fill="none" stroke="#000000" d="M798.3967,-64772.9355C1007.0924,-64772.9355 1315.2165,-64772.9355 1523.754,-64772.9355"/>
<polygon fill="#000000" stroke="#000000" points="1523.9188,-64776.4356 1533.9188,-64772.9355 1523.9187,-64769.4356 1523.9188,-64776.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[MemoizedPiecesSuite.this.Depths] -->
<g id="node1083" class="node">
<title>org.scalacheck.Arbitrary[MemoizedPiecesSuite.this.Depths]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-64844.9355" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="406.5494" y="-64848.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[MemoizedPiecesSuite.this.Depths]</text>
<text text-anchor="middle" x="572.0494" y="-64833.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- scala.reflect.ClassTag[MemoizedPiecesSuite.this.Depths] -->
<g id="node1241" class="node">
<title>scala.reflect.ClassTag[MemoizedPiecesSuite.this.Depths]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-64844.9355" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="1591.604" y="-64848.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[MemoizedPiecesSuite.this.Depths]</text>
<text text-anchor="middle" x="1749.604" y="-64833.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[MemoizedPiecesSuite.this.Depths]&#45;&gt;scala.reflect.ClassTag[MemoizedPiecesSuite.this.Depths] -->
<g id="edge80" class="edge">
<title>org.scalacheck.Arbitrary[MemoizedPiecesSuite.this.Depths]&#45;&gt;scala.reflect.ClassTag[MemoizedPiecesSuite.this.Depths]</title>
<path fill="none" stroke="#000000" d="M817.4701,-64844.9355C1018.9758,-64844.9355 1302.9592,-64844.9355 1504.4046,-64844.9355"/>
<polygon fill="#000000" stroke="#000000" points="1504.5355,-64848.4356 1514.5355,-64844.9355 1504.5355,-64841.4356 1504.5355,-64848.4356"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1084" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="7234.3262" cy="-17805.9355" rx="328.1951" ry="26.7407"/>
<text text-anchor="start" x="7010.3262" y="-17809.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="7234.3262" y="-17794.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 188ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge146" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M7325.55,-17780.0642C7506.7384,-17728.6786 7910.8609,-17614.0682 8101.1523,-17560.101"/>
<polygon fill="#000000" stroke="#000000" points="8102.2162,-17563.4374 8110.8819,-17557.3417 8100.3063,-17556.703 8102.2162,-17563.4374"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1021" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M7352.3561,-17831.0163C7453.2191,-17851.5888 7602.4302,-17879.9897 7733.7654,-17896.9355 7793.9554,-17904.7017 7858.712,-17910.9887 7920.3446,-17916.0019"/>
<polygon fill="#000000" stroke="#000000" points="7920.359,-17919.5143 7930.6075,-17916.8274 7920.9203,-17912.5369 7920.359,-17919.5143"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge586" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M7459.4455,-17786.3546C7557.592,-17765.4086 7664.1178,-17723.2106 7725.7654,-17638.9355 7738.9537,-17620.9066 7719.6269,-17254.2294 7733.7654,-17236.9355 7758.1778,-17207.0752 10418.6611,-16660.1506 10443.8423,-16630.9355 10459.9883,-16612.203 10434.1675,-16537.2331 10451.8423,-16519.9355 10516.4985,-16456.6591 11201.8865,-16543.7362 11265.0151,-16478.9355 11277.8119,-16465.7997 11260.502,-16162.342 11273.0151,-16148.9355 11349.2817,-16067.2237 11489.1394,-16076.4997 11577.7507,-16093.0204"/>
<polygon fill="#000000" stroke="#000000" points="11577.278,-16096.4938 11587.7609,-16094.958 11578.6083,-16089.6214 11577.278,-16096.4938"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge1226" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M7562.5442,-17805.9394C7854.4604,-17806.9746 8292.903,-17811.0583 8674.2174,-17824.9355 8818.1758,-17830.1747 11160.3668,-18029.9314 11265.0151,-17930.9355 11276.6562,-17919.9231 11262.4692,-17799.001 11273.0151,-17786.9355 11337.9212,-17712.6764 11452.6572,-17698.7399 11540.109,-17700.6485"/>
<polygon fill="#000000" stroke="#000000" points="11540.266,-17704.1544 11550.3636,-17700.9469 11540.4697,-17697.1574 11540.266,-17704.1544"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node1816" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="8203.9914" cy="-17860.9355" rx="370.5479" ry="26.7407"/>
<text text-anchor="start" x="7949.9914" y="-17864.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="8203.9914" y="-17849.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 17ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge857" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M7504.11,-17821.2378C7627.5593,-17828.24 7774.3366,-17836.5653 7901.5169,-17843.779"/>
<polygon fill="#000000" stroke="#000000" points="7901.6233,-17847.2906 7911.8055,-17844.3626 7902.0198,-17840.3018 7901.6233,-17847.2906"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R] -->
<g id="node1086" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-64916.9355" rx="519.0328" ry="26.7407"/>
<text text-anchor="start" x="213.0494" y="-64920.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R]</text>
<text text-anchor="middle" x="572.0494" y="-64905.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;An optional object field decoder&#39;) =&gt; ?{def should: ?} -->
<g id="node1087" class="node">
<title>String(&#39;An optional object field decoder&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-28214.9355" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="403.5494" y="-28218.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;An optional object field decoder&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-28203.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;An optional object field decoder&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge947" class="edge">
<title>String(&#39;An optional object field decoder&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M821.7784,-28214.9355C1065.0257,-28214.9355 1425.3942,-28214.9355 1617.5831,-28214.9355"/>
<polygon fill="#000000" stroke="#000000" points="1617.7363,-28218.4356 1627.7363,-28214.9355 1617.7362,-28211.4356 1617.7363,-28218.4356"/>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc22] -->
<g id="node1088" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc22]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-52820.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-52824.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc22]</text>
<text text-anchor="middle" x="572.0494" y="-52809.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc22]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc22]] -->
<g id="edge570" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc22]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc22]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-52820.9355C951.3519,-52820.9355 1231.2937,-52820.9355 1445.2652,-52820.9355"/>
<polygon fill="#000000" stroke="#000000" points="1445.4039,-52824.4356 1455.4038,-52820.9355 1445.4038,-52817.4356 1445.4039,-52824.4356"/>
</g>
<!-- String(&#39;withBoolean&#39;) =&gt; ?{def should: ?} -->
<g id="node1089" class="node">
<title>String(&#39;withBoolean&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-28142.9355" rx="173.8966" ry="26.7407"/>
<text text-anchor="start" x="457.0494" y="-28146.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;withBoolean&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-28131.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;withBoolean&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge48" class="edge">
<title>String(&#39;withBoolean&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M733.9302,-28152.8335C970.6732,-28167.3089 1406.5436,-28193.9596 1622.0674,-28207.1375"/>
<polygon fill="#000000" stroke="#000000" points="1621.9672,-28210.6378 1632.1622,-28207.7547 1622.3945,-28203.6509 1621.9672,-28210.6378"/>
</g>
<!-- org.scalacheck.Shrink[Seq[Int]] -->
<g id="node1090" class="node">
<title>org.scalacheck.Shrink[Seq[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-4886.9355" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="3983.7721" y="-4890.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Seq[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-4875.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Shrink[Seq[Int]]&#45;&gt;Seq[Int] =&gt; Traversable[Int] -->
<g id="edge1213" class="edge">
<title>org.scalacheck.Shrink[Seq[Int]]&#45;&gt;Seq[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M4198.9254,-4878.6815C4311.4325,-4871.4215 4479.4998,-4860.543 4625.8509,-4850.9355 4767.8287,-4841.6152 4930.7209,-4830.773 5040.5293,-4823.4423"/>
<polygon fill="#000000" stroke="#000000" points="5040.9114,-4826.9246 5050.656,-4822.7661 5040.445,-4819.9402 5040.9114,-4826.9246"/>
</g>
<!-- org.scalacheck.Shrink[Seq[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Seq[Int]] -->
<g id="edge979" class="edge">
<title>org.scalacheck.Shrink[Seq[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Seq[Int]]</title>
<path fill="none" stroke="#000000" d="M4205.279,-4886.9355C4400.3706,-4886.9355 4762.5246,-4886.9355 4982.6602,-4886.9355"/>
<polygon fill="#000000" stroke="#000000" points="4982.7085,-4890.4356 4992.7085,-4886.9355 4982.7084,-4883.4356 4982.7085,-4890.4356"/>
</g>
<!-- Integral[Seq[Int]] -->
<g id="node1463" class="node">
<title>Integral[Seq[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-4958.9355" rx="79.3924" ry="26.7407"/>
<text text-anchor="start" x="5119.7166" y="-4962.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Seq[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-4947.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Seq[Int]]&#45;&gt;Integral[Seq[Int]] -->
<g id="edge1360" class="edge">
<title>org.scalacheck.Shrink[Seq[Int]]&#45;&gt;Integral[Seq[Int]]</title>
<path fill="none" stroke="#000000" d="M4198.9254,-4895.1896C4311.4325,-4902.4496 4479.4998,-4913.3281 4625.8509,-4922.9355 4785.7996,-4933.4356 4972.2922,-4945.8671 5079.5249,-4953.0335"/>
<polygon fill="#000000" stroke="#000000" points="5079.44,-4956.5356 5089.6512,-4953.7104 5079.9069,-4949.5512 5079.44,-4956.5356"/>
</g>
<!-- org.scalacheck.Shrink[Seq[Int]]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge1349" class="edge">
<title>org.scalacheck.Shrink[Seq[Int]]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4194.3565,-4876.3697C4339.9204,-4866.9736 4569.1541,-4862.7456 4625.8509,-4922.9355 4641.0501,-4939.0712 4618.6725,-6502.7804 4633.8509,-6518.9355 4688.46,-6577.0584 4909.9791,-6573.4084 5049.9436,-6564.7025"/>
<polygon fill="#000000" stroke="#000000" points="5050.5382,-6568.1717 5060.2943,-6564.0402 5050.0912,-6561.1859 5050.5382,-6568.1717"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,Int,scala.collection.immutable.Set[Int]] -->
<g id="node1091" class="node">
<title>scala.collection.generic.CanBuildFrom[F,Int,scala.collection.immutable.Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-4454.9355" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="5999.7346" y="-4458.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,Int,scala.collection.immutable.Set[Int]]</text>
<text text-anchor="middle" x="6222.2346" y="-4443.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc11]] -->
<g id="node1092" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc11]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-64988.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="1531.604" y="-64992.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc11]]</text>
<text text-anchor="middle" x="1749.604" y="-64977.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; JsonNumberSuite.this.PropertyCheckConfigParam -->
<g id="node1093" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; JsonNumberSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-65060.9355" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="351.0494" y="-65064.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; JsonNumberSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-65049.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G] -->
<g id="node1094" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-65132.9355" rx="334.423" ry="26.7407"/>
<text text-anchor="start" x="343.5494" y="-65136.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G]</text>
<text text-anchor="middle" x="572.0494" y="-65121.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION) -->
<g id="node1095" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-65204.9355" rx="303.1977" ry="26.7407"/>
<text text-anchor="start" x="365.5494" y="-65208.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-65193.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Fractional[(String, io.circe.Json)] -->
<g id="node1096" class="node">
<title>Fractional[(String, io.circe.Json)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-6110.9355" rx="140.0143" ry="26.7407"/>
<text text-anchor="start" x="5076.7166" y="-6114.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(String, io.circe.Json)]</text>
<text text-anchor="middle" x="5167.7166" y="-6099.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc1] -->
<g id="node1097" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc1]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-34586.9355" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="452.0494" y="-34590.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc1]</text>
<text text-anchor="middle" x="572.0494" y="-34575.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc1]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc1] -->
<g id="edge1292" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc1]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc1]</title>
<path fill="none" stroke="#000000" d="M753.14,-34586.9355C966.8731,-34586.9355 1321.4043,-34586.9355 1544.915,-34586.9355"/>
<polygon fill="#000000" stroke="#000000" points="1545.1268,-34590.4356 1555.1268,-34586.9355 1545.1267,-34583.4356 1545.1268,-34590.4356"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R] -->
<g id="node1098" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-65276.9355" rx="504.7485" ry="26.7407"/>
<text text-anchor="start" x="223.0494" y="-65280.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R]</text>
<text text-anchor="middle" x="572.0494" y="-65265.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[Seq[Int]] -->
<g id="node1099" class="node">
<title>io.circe.Decoder[Seq[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-12834.9355" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="3998.7721" y="-12838.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Seq[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-12823.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 17ms</text>
</g>
<!-- io.circe.Decoder[Seq[Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge39" class="edge">
<title>io.circe.Decoder[Seq[Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4182.0594,-12839.9463C4294.2572,-12845.5167 4472.3266,-12855.7747 4625.8509,-12870.9355 4784.3575,-12886.5884 4967.9338,-12912.6642 5075.5782,-12928.7683"/>
<polygon fill="#000000" stroke="#000000" points="5075.3463,-12932.2726 5085.755,-12930.2949 5076.3849,-12925.35 5075.3463,-12932.2726"/>
</g>
<!-- Integral[java.util.UUID] -->
<g id="node1100" class="node">
<title>Integral[java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-3266.9355" rx="105.218" ry="26.7407"/>
<text text-anchor="start" x="6155.7346" y="-3270.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[java.util.UUID]</text>
<text text-anchor="middle" x="6222.2346" y="-3255.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I] -->
<g id="node1101" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-65348.9355" rx="380.3469" ry="26.7407"/>
<text text-anchor="start" x="311.0494" y="-65352.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I]</text>
<text text-anchor="middle" x="572.0494" y="-65337.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- PrinterWriterReuseSuite.this.PatienceConfig -->
<g id="node1102" class="node">
<title>PrinterWriterReuseSuite.this.PatienceConfig</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-65420.9355" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="450.0494" y="-65424.7355" font-family="Times,serif" font-size="14.00" fill="#000000">PrinterWriterReuseSuite.this.PatienceConfig</text>
<text text-anchor="middle" x="572.0494" y="-65409.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- SyntaxSuite.this.PropertyCheckConfigurable -->
<g id="node1103" class="node">
<title>SyntaxSuite.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-65492.9355" rx="184.6098" ry="26.7407"/>
<text text-anchor="start" x="449.5494" y="-65496.7355" font-family="Times,serif" font-size="14.00" fill="#000000">SyntaxSuite.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-65481.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- io.circe.Encoder[Double] -->
<g id="node1104" class="node">
<title>io.circe.Encoder[Double]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-19430.9355" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="1680.104" y="-19434.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Double]</text>
<text text-anchor="middle" x="1749.604" y="-19419.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 12ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.ArrayEncoder[Int]] -->
<g id="node1105" class="node">
<title>cats.kernel.Eq[io.circe.ArrayEncoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-774.9355" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="3954.7721" y="-778.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.ArrayEncoder[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-763.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 10ms</text>
</g>
<!-- shapeless.IsTuple[io.circe.ArrayEncoder[Int]] -->
<g id="node1644" class="node">
<title>shapeless.IsTuple[io.circe.ArrayEncoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-774.9355" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="5042.7166" y="-778.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.ArrayEncoder[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-763.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.ArrayEncoder[Int]]&#45;&gt;shapeless.IsTuple[io.circe.ArrayEncoder[Int]] -->
<g id="edge1210" class="edge">
<title>cats.kernel.Eq[io.circe.ArrayEncoder[Int]]&#45;&gt;shapeless.IsTuple[io.circe.ArrayEncoder[Int]]</title>
<path fill="none" stroke="#000000" d="M4246.4068,-774.9355C4443.6664,-774.9355 4763.104,-774.9355 4969.2471,-774.9355"/>
<polygon fill="#000000" stroke="#000000" points="4969.2831,-778.4356 4979.2831,-774.9355 4969.283,-771.4356 4969.2831,-778.4356"/>
</g>
<!-- cats.kernel.Eq[io.circe.ArrayEncoder[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1418" class="edge">
<title>cats.kernel.Eq[io.circe.ArrayEncoder[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4226.4197,-762.4945C4371.4755,-754.7364 4573.1144,-755.0581 4625.8509,-810.9355 4647.8153,-834.2081 4611.9164,-1939.6348 4633.8509,-1962.9355 4748.7367,-2084.977 4966.8713,-2052.8724 5085.6481,-2023.2822"/>
<polygon fill="#000000" stroke="#000000" points="5086.5963,-2026.6525 5095.4253,-2020.7961 5084.8712,-2019.8684 5086.5963,-2026.6525"/>
</g>
<!-- org.scalacheck.Shrink[List[io.circe.CursorOp]] -->
<g id="node1106" class="node">
<title>org.scalacheck.Shrink[List[io.circe.CursorOp]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-36170.9355" rx="193.0803" ry="26.7407"/>
<text text-anchor="start" x="443.5494" y="-36174.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[List[io.circe.CursorOp]]</text>
<text text-anchor="middle" x="572.0494" y="-36159.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 13ms</text>
</g>
<!-- org.scalacheck.Shrink[List[io.circe.CursorOp]]&#45;&gt;Integral[List[io.circe.CursorOp]] -->
<g id="edge986" class="edge">
<title>org.scalacheck.Shrink[List[io.circe.CursorOp]]&#45;&gt;Integral[List[io.circe.CursorOp]]</title>
<path fill="none" stroke="#000000" d="M707.1559,-36190.1649C824.5474,-36206.2838 999.2633,-36228.86 1152.0988,-36242.9355 1306.3512,-36257.1415 1483.5453,-36267.0094 1604.6685,-36272.7747"/>
<polygon fill="#000000" stroke="#000000" points="1604.5949,-36276.275 1614.749,-36273.2512 1604.9255,-36269.2828 1604.5949,-36276.275"/>
</g>
<!-- org.scalacheck.Shrink[List[io.circe.CursorOp]]&#45;&gt;org.scalacheck.util.Buildable[io.circe.CursorOp,List[io.circe.CursorOp]] -->
<g id="edge54" class="edge">
<title>org.scalacheck.Shrink[List[io.circe.CursorOp]]&#45;&gt;org.scalacheck.util.Buildable[io.circe.CursorOp,List[io.circe.CursorOp]]</title>
<path fill="none" stroke="#000000" d="M760.9172,-36176.7096C950.225,-36182.4971 1244.119,-36191.4819 1462.335,-36198.1532"/>
<polygon fill="#000000" stroke="#000000" points="1462.2399,-36201.6518 1472.3422,-36198.4591 1462.4539,-36194.6551 1462.2399,-36201.6518"/>
</g>
<!-- List[io.circe.CursorOp] =&gt; Traversable[io.circe.CursorOp] -->
<g id="node1164" class="node">
<title>List[io.circe.CursorOp] =&gt; Traversable[io.circe.CursorOp]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-36134.9355" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="1588.604" y="-36138.7355" font-family="Times,serif" font-size="14.00" fill="#000000">List[io.circe.CursorOp] =&gt; Traversable[io.circe.CursorOp]</text>
<text text-anchor="middle" x="1749.604" y="-36123.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[List[io.circe.CursorOp]]&#45;&gt;List[io.circe.CursorOp] =&gt; Traversable[io.circe.CursorOp] -->
<g id="edge717" class="edge">
<title>org.scalacheck.Shrink[List[io.circe.CursorOp]]&#45;&gt;List[io.circe.CursorOp] =&gt; Traversable[io.circe.CursorOp]</title>
<path fill="none" stroke="#000000" d="M760.9172,-36165.1615C963.987,-36158.9533 1287.4019,-36149.0659 1508.6566,-36142.3018"/>
<polygon fill="#000000" stroke="#000000" points="1508.8967,-36145.7961 1518.785,-36141.9921 1508.6827,-36138.7994 1508.8967,-36145.7961"/>
</g>
<!-- org.scalacheck.Shrink[io.circe.CursorOp] -->
<g id="node1921" class="node">
<title>org.scalacheck.Shrink[io.circe.CursorOp]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-36062.9355" rx="171.6541" ry="26.7407"/>
<text text-anchor="start" x="1636.104" y="-36066.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[io.circe.CursorOp]</text>
<text text-anchor="middle" x="1749.604" y="-36051.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- org.scalacheck.Shrink[List[io.circe.CursorOp]]&#45;&gt;org.scalacheck.Shrink[io.circe.CursorOp] -->
<g id="edge356" class="edge">
<title>org.scalacheck.Shrink[List[io.circe.CursorOp]]&#45;&gt;org.scalacheck.Shrink[io.circe.CursorOp]</title>
<path fill="none" stroke="#000000" d="M707.1559,-36151.7062C824.5474,-36135.5873 999.2633,-36113.011 1152.0988,-36098.9355 1293.6272,-36085.9014 1454.4686,-36076.5192 1573.5946,-36070.607"/>
<polygon fill="#000000" stroke="#000000" points="1574.0873,-36074.087 1583.9028,-36070.0989 1573.7426,-36067.0955 1574.0873,-36074.087"/>
</g>
<!-- actual.type =&gt; ?{def ===: ?} -->
<g id="node1107" class="node">
<title>actual.type =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-16370.9355" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="13049.5282" y="-16374.7355" font-family="Times,serif" font-size="14.00" fill="#000000">actual.type =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="13131.0282" y="-16359.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- actual.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.Json] -->
<g id="edge530" class="edge">
<title>actual.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M13256.7652,-16374.487C13384.3352,-16378.0903 13579.5422,-16383.6039 13698.9846,-16386.9776"/>
<polygon fill="#000000" stroke="#000000" points="13699.1368,-16390.4832 13709.2317,-16387.267 13699.3345,-16383.486 13699.1368,-16390.4832"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with cats.data.NonEmptyList[Int]] -->
<g id="node1108" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with cats.data.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-12258.9355" rx="410.6582" ry="26.7407"/>
<text text-anchor="start" x="4885.2166" y="-12262.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with cats.data.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-12247.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc11] -->
<g id="node1109" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc11]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-64988.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-64992.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc11]</text>
<text text-anchor="middle" x="572.0494" y="-64977.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc11]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc11]] -->
<g id="edge119" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc11]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc11]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-64988.9355C944.0278,-64988.9355 1209.2209,-64988.9355 1419.4845,-64988.9355"/>
<polygon fill="#000000" stroke="#000000" points="1419.7702,-64992.4356 1429.7702,-64988.9355 1419.7702,-64985.4356 1419.7702,-64992.4356"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B) =&gt; ?ASSERTION) -->
<g id="node1112" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-65564.9355" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="394.0494" y="-65568.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-65553.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;org.scalacheck.Arbitrary[(Int, Int)] -->
<g id="edge1510" class="edge">
<title>org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;org.scalacheck.Arbitrary[(Int, Int)]</title>
<path fill="none" stroke="#000000" d="M3073.9742,-3383.9451C3291.1199,-3397.6672 3702.6744,-3423.6744 3922.9223,-3437.5925"/>
<polygon fill="#000000" stroke="#000000" points="3922.7397,-3441.0879 3932.9406,-3438.2256 3923.1812,-3434.1018 3922.7397,-3441.0879"/>
</g>
<!-- org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;scala.reflect.ClassTag[Int =&gt; Int] -->
<g id="edge735" class="edge">
<title>org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;scala.reflect.ClassTag[Int =&gt; Int]</title>
<path fill="none" stroke="#000000" d="M3082.9953,-3374.9355C3301.1807,-3374.9355 3701.4083,-3374.9355 3919.4451,-3374.9355"/>
<polygon fill="#000000" stroke="#000000" points="3919.6887,-3378.4356 3929.6887,-3374.9355 3919.6886,-3371.4356 3919.6887,-3378.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge644" class="edge">
<title>org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M3051.8618,-3391.218C3185.0981,-3401.6957 3395.7038,-3394.4881 3507.6933,-3266.9355 3528.8386,-3242.8516 3493.1362,-3145.7026 3515.6933,-3122.9355 3574.7259,-3063.3534 3809.2135,-3068.0539 3953.8704,-3077.2331"/>
<polygon fill="#000000" stroke="#000000" points="3953.9205,-3080.7436 3964.1268,-3077.9009 3954.3754,-3073.7584 3953.9205,-3080.7436"/>
</g>
<!-- org.scalacheck.util.Buildable[(Int, Int),Int =&gt; Int] -->
<g id="node1582" class="node">
<title>org.scalacheck.util.Buildable[(Int, Int),Int =&gt; Int]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-3518.9355" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="3934.7721" y="-3522.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(Int, Int),Int =&gt; Int]</text>
<text text-anchor="middle" x="4070.7721" y="-3507.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;org.scalacheck.util.Buildable[(Int, Int),Int =&gt; Int] -->
<g id="edge1092" class="edge">
<title>org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;org.scalacheck.util.Buildable[(Int, Int),Int =&gt; Int]</title>
<path fill="none" stroke="#000000" d="M3025.9982,-3395.9814C3141.1084,-3420.7637 3341.6664,-3461.2855 3515.6933,-3482.9355 3630.4628,-3497.2136 3759.3312,-3506.0114 3863.9892,-3511.3315"/>
<polygon fill="#000000" stroke="#000000" points="3863.8778,-3514.8303 3874.0406,-3511.8356 3864.2284,-3507.839 3863.8778,-3514.8303"/>
</g>
<!-- org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1511" class="edge">
<title>org.scalacheck.Arbitrary[Int =&gt; Int]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M3049.7883,-3391.7623C3183.6993,-3403.3153 3397.4304,-3397.6527 3507.6933,-3266.9355 3525.7133,-3245.5728 3496.1578,-2783.9219 3515.6933,-2763.9355 3601.9797,-2675.6581 4516.5198,-2778.2501 4625.8509,-2720.9355 4925.1983,-2564.0089 5104.74,-2159.0952 5153.891,-2035.3798"/>
<polygon fill="#000000" stroke="#000000" points="5157.1936,-2036.545 5157.5971,-2025.9579 5150.6794,-2033.9827 5157.1936,-2036.545"/>
</g>
<!-- cats.Eq[Test$3] -->
<g id="node1114" class="node">
<title>cats.Eq[Test$3]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-64052.9355" rx="72.25" ry="26.7407"/>
<text text-anchor="start" x="529.0494" y="-64056.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Test$3]</text>
<text text-anchor="middle" x="572.0494" y="-64041.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 7ms</text>
</g>
<!-- cats.Eq[Test$3]&#45;&gt;shapeless.IsTuple[Test$3] -->
<g id="edge811" class="edge">
<title>cats.Eq[Test$3]&#45;&gt;shapeless.IsTuple[Test$3]</title>
<path fill="none" stroke="#000000" d="M644.3795,-64052.9355C840.2214,-64052.9355 1382.4653,-64052.9355 1627.089,-64052.9355"/>
<polygon fill="#000000" stroke="#000000" points="1627.4439,-64056.4356 1637.4439,-64052.9355 1627.4439,-64049.4356 1627.4439,-64056.4356"/>
</g>
<!-- List[Option[io.circe.Json]] =&gt; ?{def ===: ?} -->
<g id="node1115" class="node">
<title>List[Option[io.circe.Json]] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-17094.9355" rx="186.8525" ry="26.7407"/>
<text text-anchor="start" x="10734.4287" y="-17098.7355" font-family="Times,serif" font-size="14.00" fill="#000000">List[Option[io.circe.Json]] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10858.4287" y="-17083.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 81ms</text>
</g>
<!-- cats.Eq[List[Option[io.circe.Json]]] -->
<g id="node1849" class="node">
<title>cats.Eq[List[Option[io.circe.Json]]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-17094.9355" rx="148.4848" ry="26.7407"/>
<text text-anchor="start" x="11561.3883" y="-17098.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[List[Option[io.circe.Json]]]</text>
<text text-anchor="middle" x="11658.3883" y="-17083.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 151ms</text>
</g>
<!-- List[Option[io.circe.Json]] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[Option[io.circe.Json]]] -->
<g id="edge806" class="edge">
<title>List[Option[io.circe.Json]] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[Option[io.circe.Json]]]</title>
<path fill="none" stroke="#000000" d="M11045.2263,-17094.9355C11183.1485,-17094.9355 11368.8507,-17094.9355 11499.6322,-17094.9355"/>
<polygon fill="#000000" stroke="#000000" points="11499.7399,-17098.4356 11509.7399,-17094.9355 11499.7399,-17091.4356 11499.7399,-17098.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc9] -->
<g id="node1116" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc9]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-41030.9355" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="423.5494" y="-41034.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc9]</text>
<text text-anchor="middle" x="572.0494" y="-41019.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc9]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc9] -->
<g id="edge1538" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc9]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc9]</title>
<path fill="none" stroke="#000000" d="M793.5384,-41030.9355C1003.7878,-41030.9355 1318.0755,-41030.9355 1528.2728,-41030.9355"/>
<polygon fill="#000000" stroke="#000000" points="1528.5155,-41034.4356 1538.5154,-41030.9355 1528.5154,-41027.4356 1528.5155,-41034.4356"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc16] -->
<g id="node1117" class="node">
<title>Integral[ProductCodecSuite.this.Cc16]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-65672.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="1644.104" y="-65676.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc16]</text>
<text text-anchor="middle" x="1749.604" y="-65661.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[(Int, String, Char)] -->
<g id="node1118" class="node">
<title>cats.kernel.Eq[(Int, String, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-14533.9355" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="10765.9287" y="-14537.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, String, Char)]</text>
<text text-anchor="middle" x="10858.4287" y="-14522.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 112ms</text>
</g>
<!-- cats.kernel.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.Order[Char] -->
<g id="edge787" class="edge">
<title>cats.kernel.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.Order[Char]</title>
<path fill="none" stroke="#000000" d="M10992.3239,-14543.1413C11148.2586,-14553.8624 11402.9396,-14571.3726 11548.0236,-14581.3476"/>
<polygon fill="#000000" stroke="#000000" points="11548.0609,-14584.8583 11558.2774,-14582.0526 11548.5411,-14577.8748 11548.0609,-14584.8583"/>
</g>
<!-- cats.kernel.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.Order[String] -->
<g id="edge1157" class="edge">
<title>cats.kernel.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.Order[String]</title>
<path fill="none" stroke="#000000" d="M10999.9832,-14531.02C11306.5573,-14525.4058 12007.4078,-14516.6369 12043.7615,-14552.9355 12061.6911,-14570.8381 12035.6851,-14989.3517 12051.7615,-15008.9355 12111.5189,-15081.7306 12221.0788,-15097.2799 12304.4725,-15097.1507"/>
<polygon fill="#000000" stroke="#000000" points="12304.5397,-15100.6503 12314.5076,-15097.06 12304.4764,-15093.6506 12304.5397,-15100.6503"/>
</g>
<!-- cats.kernel.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.PartialOrder[Char] -->
<g id="edge1178" class="edge">
<title>cats.kernel.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.PartialOrder[Char]</title>
<path fill="none" stroke="#000000" d="M10943.6435,-14555.4974C11037.1293,-14573.4621 11184.5603,-14583.9971 11265.0151,-14497.9355 11279.4732,-14482.4698 11258.5944,-14132.4361 11273.0151,-14116.9355 11345.6234,-14038.8899 11476.226,-14043.746 11565.0668,-14058.729"/>
<polygon fill="#000000" stroke="#000000" points="11564.6915,-14062.2166 11575.1467,-14060.5023 11565.9044,-14055.3225 11564.6915,-14062.2166"/>
</g>
<!-- cats.kernel.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge304" class="edge">
<title>cats.kernel.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10960.3156,-14515.1721C11054.6831,-14504.3343 11191.2329,-14506.56 11265.0151,-14590.9355 11278.2538,-14606.0751 11260.1622,-16023.4671 11273.0151,-16038.9355 11341.7693,-16121.6815 11472.338,-16130.501 11562.2991,-16125.1119"/>
<polygon fill="#000000" stroke="#000000" points="11562.7693,-16128.5884 11572.5135,-16124.429 11562.3022,-16121.604 11562.7693,-16128.5884"/>
</g>
<!-- cats.kernel.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge668" class="edge">
<title>cats.kernel.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M10960.3708,-14515.1238C11054.7786,-14504.2509 11191.3567,-14506.4519 11265.0151,-14590.9355 11279.0985,-14607.0888 11258.5627,-17661.1115 11273.0151,-17676.9355 11345.7749,-17756.6014 11478.8613,-17750.4966 11567.9793,-17734.8726"/>
<polygon fill="#000000" stroke="#000000" points="11568.8725,-17738.2675 11578.0811,-17733.0281 11567.6151,-17731.3813 11568.8725,-17738.2675"/>
</g>
<!-- cats.kernel.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.Eq[Int :: String :: Char :: shapeless.HNil] -->
<g id="edge338" class="edge">
<title>cats.kernel.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.Eq[Int :: String :: Char :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M10992.3239,-14524.7298C11119.9167,-14515.9573 11313.6226,-14502.6394 11459.3038,-14492.6233"/>
<polygon fill="#000000" stroke="#000000" points="11459.972,-14496.0857 11469.7083,-14491.908 11459.4918,-14489.1022 11459.972,-14496.0857"/>
</g>
<!-- cats.kernel.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.PartialOrder[String] -->
<g id="edge220" class="edge">
<title>cats.kernel.Eq[(Int, String, Char)]&#45;&gt;cats.kernel.PartialOrder[String]</title>
<path fill="none" stroke="#000000" d="M10961.0423,-14515.2226C11055.2503,-14504.6133 11191.0799,-14507.1688 11265.0151,-14590.9355 11284.9429,-14613.5133 11253.1727,-15110.2826 11273.0151,-15132.9355 11501.1795,-15393.4184 11803.3742,-14997.6881 12043.7615,-15246.9355 12066.1125,-15270.1104 12028.8572,-15296.3073 12051.7615,-15318.9355 12119.4415,-15385.8003 12232.5536,-15386.7555 12314.7845,-15376.0314"/>
<polygon fill="#000000" stroke="#000000" points="12315.4805,-15379.4685 12324.9072,-15374.6325 12314.5221,-15372.5344 12315.4805,-15379.4685"/>
</g>
<!-- cats.kernel.Eq[(Int, String, Char)]&#45;&gt;shapeless.IsTuple[(Int, String, Char)] -->
<g id="edge1262" class="edge">
<title>cats.kernel.Eq[(Int, String, Char)]&#45;&gt;shapeless.IsTuple[(Int, String, Char)]</title>
<path fill="none" stroke="#000000" d="M10945.0894,-14555.2599C11038.0825,-14572.4121 11183.3929,-14581.658 11265.0151,-14497.9355 11284.7552,-14477.6875 11253.324,-14391.2312 11273.0151,-14370.9355 11344.427,-14297.331 11467.6588,-14298.6925 11555.5434,-14311.7958"/>
<polygon fill="#000000" stroke="#000000" points="11555.1213,-14315.2722 11565.542,-14313.3594 11556.2029,-14308.3563 11555.1213,-14315.2722"/>
</g>
<!-- cats.kernel.Eq[(Int, String, Char)]&#45;&gt;shapeless.Generic.Aux[(Int, String, Char),L] -->
<g id="edge148" class="edge">
<title>cats.kernel.Eq[(Int, String, Char)]&#45;&gt;shapeless.Generic.Aux[(Int, String, Char),L]</title>
<path fill="none" stroke="#000000" d="M10943.9878,-14555.5054C11037.425,-14573.3553 11184.4715,-14583.671 11265.0151,-14497.9355 11288.5308,-14472.904 11249.5599,-14214.0239 11273.0151,-14188.9355 11341.9476,-14115.2033 11462.666,-14115.6031 11550.6656,-14128.5246"/>
<polygon fill="#000000" stroke="#000000" points="11550.2727,-14132.0053 11560.6894,-14130.0708 11551.3399,-14125.0871 11550.2727,-14132.0053"/>
</g>
<!-- List[io.circe.Json] =&gt; ?{def ===: ?} -->
<g id="node1119" class="node">
<title>List[io.circe.Json] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-16878.9355" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="11557.3883" y="-16882.7355" font-family="Times,serif" font-size="14.00" fill="#000000">List[io.circe.Json] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="11658.3883" y="-16867.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 20ms</text>
</g>
<!-- List[io.circe.Json] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[io.circe.Json]] -->
<g id="edge832" class="edge">
<title>List[io.circe.Json] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M11754.4419,-16899.9926C11843.1868,-16913.192 11971.8352,-16915.299 12043.7615,-16837.9355 12062.0045,-16818.3134 12033.4454,-16616.4896 12051.7615,-16596.9355 12119.6845,-16524.4218 12240.5259,-16527.0711 12324.2795,-16540.1107"/>
<polygon fill="#000000" stroke="#000000" points="12323.87,-16543.5901 12334.3035,-16541.748 12324.9986,-16536.6816 12323.87,-16543.5901"/>
</g>
<!-- String(&#39;failedWithMessage&#39;) =&gt; ?{def should: ?} -->
<g id="node1120" class="node">
<title>String(&#39;failedWithMessage&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-28070.9355" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="438.0494" y="-28074.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;failedWithMessage&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-28059.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;failedWithMessage&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge970" class="edge">
<title>String(&#39;failedWithMessage&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M766.4998,-28077.6833C877.4156,-28082.9045 1018.8713,-28091.8766 1144.0988,-28106.9355 1324.8144,-28128.6671 1533.3263,-28169.3414 1652.4962,-28194.0974"/>
<polygon fill="#000000" stroke="#000000" points="1651.8286,-28197.5334 1662.3323,-28196.1468 1653.2564,-28190.6806 1651.8286,-28197.5334"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1121" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-702.9355" rx="400.445" ry="26.7407"/>
<text text-anchor="start" x="3795.7721" y="-706.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-691.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 66ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1366" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4471.0621,-702.9355C4567.7303,-702.9355 4671.0377,-702.9355 4767.6936,-702.9355"/>
<polygon fill="#000000" stroke="#000000" points="4767.9298,-706.4356 4777.9297,-702.9355 4767.9297,-699.4356 4767.9298,-706.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1217" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4399.1431,-687.5656C4499.6185,-690.4734 4592.5095,-703.5938 4625.8509,-738.9355 4649.183,-763.6674 4610.5506,-1938.1738 4633.8509,-1962.9355 4748.7117,-2085.0005 4966.8566,-2052.8863 5085.6415,-2023.2883"/>
<polygon fill="#000000" stroke="#000000" points="5086.5907,-2026.6584 5095.4195,-2020.8016 5084.8653,-2019.8744 5086.5907,-2026.6584"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[io.circe.CursorOp],io.circe.CursorOp,That] -->
<g id="node1122" class="node">
<title>scala.collection.generic.CanBuildFrom[List[io.circe.CursorOp],io.circe.CursorOp,That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-65708.9355" rx="350.9501" ry="26.7407"/>
<text text-anchor="start" x="332.0494" y="-65712.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[io.circe.CursorOp],io.circe.CursorOp,That]</text>
<text text-anchor="middle" x="572.0494" y="-65697.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1123" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-17382.9355" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="10724.4287" y="-17386.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="10858.4287" y="-17371.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 79ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge216" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10954.2204,-17406.6413C11048.1294,-17423.5104 11188.0598,-17430.4441 11265.0151,-17346.9355 11287.5667,-17322.4635 11250.5226,-16173.4621 11273.0151,-16148.9355 11348.6707,-16066.4381 11489.0403,-16076.0604 11577.871,-16092.8479"/>
<polygon fill="#000000" stroke="#000000" points="11577.4185,-16096.3258 11587.9052,-16094.8159 11578.7658,-16089.4566 11577.4185,-16096.3258"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge1396" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M10961.5109,-17359.7795C11055.0357,-17345.5012 11189.4971,-17343.0274 11265.0151,-17423.9355 11284.2059,-17444.4961 11253.7488,-17656.4457 11273.0151,-17676.9355 11346.5906,-17755.1839 11478.524,-17749.7541 11567.258,-17734.6345"/>
<polygon fill="#000000" stroke="#000000" points="11568.0852,-17738.0424 11577.319,-17732.8474 11566.861,-17731.1503 11568.0852,-17738.0424"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge663" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M10964.2782,-17360.0476C11057.0518,-17346.809 11188.6809,-17345.7683 11265.0151,-17423.9355 11281.2098,-17440.5191 11256.866,-17511.3075 11273.0151,-17527.9355 11338.96,-17595.8361 11448.804,-17601.4911 11534.385,-17592.8074"/>
<polygon fill="#000000" stroke="#000000" points="11534.8706,-17596.2752 11544.4321,-17591.7114 11534.1115,-17589.3165 11534.8706,-17596.2752"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge907" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M10954.6652,-17359.3131C11047.21,-17342.9044 11184.5712,-17336.1735 11265.0151,-17414.9355 11277.7813,-17427.4349 11259.868,-17482.8374 11273.0151,-17494.9355 11319.7442,-17537.9366 12352.4179,-17513.9355 12415.9214,-17513.9355 12415.9214,-17513.9355 12415.9214,-17513.9355 13131.0282,-17513.9355 13530.0678,-17513.9355 13995.8803,-17560.6754 14248.3107,-17589.9243"/>
<polygon fill="#000000" stroke="#000000" points="14247.9757,-17593.4088 14258.313,-17591.087 14248.784,-17586.4556 14247.9757,-17593.4088"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node1702" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-17640.9355" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="11494.3883" y="-17644.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="11658.3883" y="-17629.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge1458" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M10962.178,-17359.8618C11055.5006,-17345.8586 11189.2342,-17343.761 11265.0151,-17423.9355 11278.8431,-17438.5654 11259.1333,-17590.3567 11273.0151,-17604.9355 11339.8739,-17675.1517 11453.7878,-17677.6533 11540.4752,-17666.4655"/>
<polygon fill="#000000" stroke="#000000" points="11541.2059,-17669.8983 11550.6395,-17665.0756 11540.2574,-17662.9628 11541.2059,-17669.8983"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1124" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-53288.9355" rx="406.6728" ry="26.7407"/>
<text text-anchor="start" x="292.5494" y="-53292.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-53277.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge349" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M941.4042,-53300.2274C1092.228,-53304.8384 1265.4686,-53310.1346 1412.7767,-53314.6381"/>
<polygon fill="#000000" stroke="#000000" points="1412.7868,-53318.14 1422.8891,-53314.9473 1413.0008,-53311.1432 1412.7868,-53318.14"/>
</g>
<!-- Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1507" class="node">
<title>Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-53252.9355" rx="359.8347" ry="26.7407"/>
<text text-anchor="start" x="1503.104" y="-53256.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-53241.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge310" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M941.4042,-53277.6437C1090.0851,-53273.0982 1260.5505,-53267.8868 1406.4824,-53263.4254"/>
<polygon fill="#000000" stroke="#000000" points="1406.6139,-53266.9231 1416.5022,-53263.1191 1406.3999,-53259.9264 1406.6139,-53266.9231"/>
</g>
<!-- io.circe.Encoder[Char] -->
<g id="node1125" class="node">
<title>io.circe.Encoder[Char]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-20942.9355" rx="99.9045" ry="26.7407"/>
<text text-anchor="start" x="1687.104" y="-20946.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Char]</text>
<text text-anchor="middle" x="1749.604" y="-20931.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 4ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc4]] -->
<g id="node1126" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc4]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-65780.9355" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="1552.604" y="-65784.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc4]]</text>
<text text-anchor="middle" x="1749.604" y="-65769.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1127" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-126.9355" rx="437.8983" ry="26.7407"/>
<text text-anchor="start" x="4866.2166" y="-130.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-115.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.KeyDecoder[scala.util.Either[Unit,Int]]] -->
<g id="node1129" class="node">
<title>cats.kernel.Eq[io.circe.KeyDecoder[scala.util.Either[Unit,Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-14842.9355" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="9843.0427" y="-14846.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.KeyDecoder[scala.util.Either[Unit,Int]]]</text>
<text text-anchor="middle" x="10016.0427" y="-14831.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[scala.util.Either[Unit,Int]] -->
<g id="node1985" class="node">
<title>cats.kernel.Eq[scala.util.Either[Unit,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-14842.9355" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="10746.4287" y="-14846.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.util.Either[Unit,Int]]</text>
<text text-anchor="middle" x="10858.4287" y="-14831.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.KeyDecoder[scala.util.Either[Unit,Int]]]&#45;&gt;cats.kernel.Eq[scala.util.Either[Unit,Int]] -->
<g id="edge1009" class="edge">
<title>cats.kernel.Eq[io.circe.KeyDecoder[scala.util.Either[Unit,Int]]]&#45;&gt;cats.kernel.Eq[scala.util.Either[Unit,Int]]</title>
<path fill="none" stroke="#000000" d="M10272.2172,-14842.9355C10403.4431,-14842.9355 10560.0532,-14842.9355 10678.3759,-14842.9355"/>
<polygon fill="#000000" stroke="#000000" points="10678.6226,-14846.4356 10688.6225,-14842.9355 10678.6225,-14839.4356 10678.6226,-14846.4356"/>
</g>
<!-- PrinterWriterReuseSuite.this.PropertyCheckConfigurable -->
<g id="node1132" class="node">
<title>PrinterWriterReuseSuite.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-65852.9355" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="415.5494" y="-65856.7355" font-family="Times,serif" font-size="14.00" fill="#000000">PrinterWriterReuseSuite.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-65841.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc5] -->
<g id="node1134" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc5]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-65924.9355" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="452.0494" y="-65928.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc5]</text>
<text text-anchor="middle" x="572.0494" y="-65913.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc5] -->
<g id="node1751" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc5]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-65924.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="1620.104" y="-65928.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc5]</text>
<text text-anchor="middle" x="1749.604" y="-65913.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc5]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc5] -->
<g id="edge388" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc5]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc5]</title>
<path fill="none" stroke="#000000" d="M753.14,-65924.9355C966.8731,-65924.9355 1321.4043,-65924.9355 1544.915,-65924.9355"/>
<polygon fill="#000000" stroke="#000000" points="1545.1268,-65928.4356 1555.1268,-65924.9355 1545.1267,-65921.4356 1545.1268,-65928.4356"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C] -->
<g id="node1135" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-65996.9355" rx="318.3962" ry="26.7407"/>
<text text-anchor="start" x="355.0494" y="-66000.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C]</text>
<text text-anchor="middle" x="572.0494" y="-65985.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Integral[scala.util.Either[Int,String]] -->
<g id="node1136" class="node">
<title>Integral[scala.util.Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-8134.9355" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="5068.7166" y="-8138.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[scala.util.Either[Int,String]]</text>
<text text-anchor="middle" x="5167.7166" y="-8123.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[Option[Long]] -->
<g id="node1138" class="node">
<title>cats.Eq[Option[Long]]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-8915.9355" rx="98.9899" ry="26.7407"/>
<text text-anchor="start" x="6160.2346" y="-8919.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[Long]]</text>
<text text-anchor="middle" x="6222.2346" y="-8904.7355" font-family="Times,serif" font-size="14.00" fill="#000000">20 times = 73ms</text>
</g>
<!-- cats.Eq[Option[Long]]&#45;&gt;cats.kernel.Order[Long] -->
<g id="edge922" class="edge">
<title>cats.Eq[Option[Long]]&#45;&gt;cats.kernel.Order[Long]</title>
<path fill="none" stroke="#000000" d="M6285.9111,-8936.609C6390.2608,-8973.0934 6599.5717,-9057.5035 6734.887,-9186.9355 7002.4636,-9442.8784 7174.2387,-9873.2856 7221.237,-10001.0924"/>
<polygon fill="#000000" stroke="#000000" points="7218.0637,-10002.6068 7224.7802,-10010.8007 7224.6395,-10000.2068 7218.0637,-10002.6068"/>
</g>
<!-- cats.kernel.Eq[io.circe.Decoder[scala.util.Either[io.circe.DecodingFailure,Int]]] -->
<g id="node1139" class="node">
<title>cats.kernel.Eq[io.circe.Decoder[scala.util.Either[io.circe.DecodingFailure,Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-14224.9355" rx="318.3962" ry="26.7407"/>
<text text-anchor="start" x="11441.3883" y="-14228.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.Decoder[scala.util.Either[io.circe.DecodingFailure,Int]]]</text>
<text text-anchor="middle" x="11658.3883" y="-14213.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Int]] -->
<g id="node1924" class="node">
<title>cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-14152.9355" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="12248.4214" y="-14156.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Int]]</text>
<text text-anchor="middle" x="12415.9214" y="-14141.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.Decoder[scala.util.Either[io.circe.DecodingFailure,Int]]]&#45;&gt;cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Int]] -->
<g id="edge353" class="edge">
<title>cats.kernel.Eq[io.circe.Decoder[scala.util.Either[io.circe.DecodingFailure,Int]]]&#45;&gt;cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Int]]</title>
<path fill="none" stroke="#000000" d="M11872.6844,-14205.043C11928.3904,-14199.8374 11988.3225,-14194.2064 12043.7615,-14188.9355 12101.3697,-14183.4585 12163.9861,-14177.4305 12221.1367,-14171.8993"/>
<polygon fill="#000000" stroke="#000000" points="12221.7534,-14175.3561 12231.3696,-14170.9087 12221.0788,-14168.3887 12221.7534,-14175.3561"/>
</g>
<!-- io.circe.Decoder[Vector[T]] -->
<g id="node1142" class="node">
<title>io.circe.Decoder[Vector[T]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-66212.9355" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="495.0494" y="-66216.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Vector[T]]</text>
<text text-anchor="middle" x="572.0494" y="-66201.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.Decoder[T] -->
<g id="node1495" class="node">
<title>io.circe.Decoder[T]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-66140.9355" rx="87.8629" ry="26.7407"/>
<text text-anchor="start" x="1695.604" y="-66144.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[T]</text>
<text text-anchor="middle" x="1749.604" y="-66129.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- io.circe.Decoder[Vector[T]]&#45;&gt;io.circe.Decoder[T] -->
<g id="edge14" class="edge">
<title>io.circe.Decoder[Vector[T]]&#45;&gt;io.circe.Decoder[T]</title>
<path fill="none" stroke="#000000" d="M688.1805,-66205.8349C920.5025,-66191.6298 1438.5834,-66159.9525 1653.4066,-66146.8174"/>
<polygon fill="#000000" stroke="#000000" points="1653.637,-66150.31 1663.4047,-66146.2061 1653.2097,-66143.323 1653.637,-66150.31"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q] -->
<g id="node1143" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-66284.9355" rx="506.077" ry="26.7407"/>
<text text-anchor="start" x="222.0494" y="-66288.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q]</text>
<text text-anchor="middle" x="572.0494" y="-66273.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I] -->
<g id="node1144" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-66356.9355" rx="330.4379" ry="26.7407"/>
<text text-anchor="start" x="346.5494" y="-66360.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I]</text>
<text text-anchor="middle" x="572.0494" y="-66345.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Boolean]&#45;&gt;Integral[Boolean] -->
<g id="edge1189" class="edge">
<title>org.scalacheck.Shrink[Boolean]&#45;&gt;Integral[Boolean]</title>
<path fill="none" stroke="#000000" d="M5302.8799,-6986.9355C5521.3305,-6986.9355 5946.2182,-6986.9355 6131.8233,-6986.9355"/>
<polygon fill="#000000" stroke="#000000" points="6132.0906,-6990.4356 6142.0906,-6986.9355 6132.0906,-6983.4356 6132.0906,-6990.4356"/>
</g>
<!-- Fractional[Boolean] -->
<g id="node1652" class="node">
<title>Fractional[Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-6914.9355" rx="88.2768" ry="26.7407"/>
<text text-anchor="start" x="6167.7346" y="-6918.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Boolean]</text>
<text text-anchor="middle" x="6222.2346" y="-6903.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- org.scalacheck.Shrink[Boolean]&#45;&gt;Fractional[Boolean] -->
<g id="edge738" class="edge">
<title>org.scalacheck.Shrink[Boolean]&#45;&gt;Fractional[Boolean]</title>
<path fill="none" stroke="#000000" d="M5295.8169,-6978.3589C5403.9653,-6971.1033 5562.9103,-6960.4052 5701.5822,-6950.9355 5849.4287,-6940.8394 6020.877,-6928.9496 6125.423,-6921.679"/>
<polygon fill="#000000" stroke="#000000" points="6125.9082,-6925.1538 6135.6412,-6920.9683 6125.4224,-6918.1707 6125.9082,-6925.1538"/>
</g>
<!-- Option[String] =&gt; ?{def ===: ?} -->
<g id="node1147" class="node">
<title>Option[String] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-14008.9355" rx="140.9288" ry="26.7407"/>
<text text-anchor="start" x="10766.9287" y="-14012.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[String] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10858.4287" y="-13997.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- Option[String] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[String]] -->
<g id="edge192" class="edge">
<title>Option[String] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[String]]</title>
<path fill="none" stroke="#000000" d="M10999.1449,-14008.9355C11154.6774,-14008.9355 11402.11,-14008.9355 11545.4939,-14008.9355"/>
<polygon fill="#000000" stroke="#000000" points="11545.6351,-14012.4356 11555.6351,-14008.9355 11545.635,-14005.4356 11545.6351,-14012.4356"/>
</g>
<!-- cats.kernel.PartialOrder[Vector[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json] -->
<g id="edge1055" class="edge">
<title>cats.kernel.PartialOrder[Vector[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12596.3731,-16785.5152C12718.8723,-16791.3395 12878.4758,-16798.9279 12991.3118,-16804.2927"/>
<polygon fill="#000000" stroke="#000000" points="12991.2433,-16807.7933 13001.3983,-16804.7722 12991.5758,-16800.8012 12991.2433,-16807.7933"/>
</g>
<!-- cats.kernel.PartialOrder[Vector[io.circe.Json]]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json] -->
<g id="edge1537" class="edge">
<title>cats.kernel.PartialOrder[Vector[io.circe.Json]]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12535.0916,-16755.9834C12613.8157,-16749.2563 12714.2379,-16755.2886 12780.0814,-16812.9355 12791.7613,-16823.1614 12776.9576,-16836.1075 12788.0814,-16846.9355 12834.5039,-16892.1237 12901.6923,-16911.9957 12964.3189,-16919.7973"/>
<polygon fill="#000000" stroke="#000000" points="12963.9928,-16923.2827 12974.3271,-16920.9477 12964.7922,-16916.3285 12963.9928,-16923.2827"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with cats.data.NonEmptyVector[Int]] -->
<g id="node1149" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with cats.data.NonEmptyVector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-12402.9355" rx="421.3713" ry="26.7407"/>
<text text-anchor="start" x="4877.7166" y="-12406.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with cats.data.NonEmptyVector[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-12391.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.KeyDecoder[Unit]] -->
<g id="node1150" class="node">
<title>org.scalacheck.Arbitrary[io.circe.KeyDecoder[Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-39914.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-39918.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.KeyDecoder[Unit]]</text>
<text text-anchor="middle" x="572.0494" y="-39903.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.KeyDecoder[Unit]]&#45;&gt;org.scalacheck.Arbitrary[Unit] -->
<g id="edge469" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.KeyDecoder[Unit]]&#45;&gt;org.scalacheck.Arbitrary[Unit]</title>
<path fill="none" stroke="#000000" d="M788.0311,-39914.9355C1027.1711,-39914.9355 1405.6972,-39914.9355 1609.1667,-39914.9355"/>
<polygon fill="#000000" stroke="#000000" points="1609.3203,-39918.4356 1619.3203,-39914.9355 1609.3202,-39911.4356 1609.3203,-39918.4356"/>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node1151" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-20582.9355" rx="461.9816" ry="26.7407"/>
<text text-anchor="start" x="1431.104" y="-20586.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-20571.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc22]] -->
<g id="node1152" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc22]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-66428.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="1531.604" y="-66432.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc22]]</text>
<text text-anchor="middle" x="1749.604" y="-66417.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[io.circe.numbers.testing.JsonNumberString] -->
<g id="node1153" class="node">
<title>scala.reflect.ClassTag[io.circe.numbers.testing.JsonNumberString]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-66500.9355" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="1566.604" y="-66504.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[io.circe.numbers.testing.JsonNumberString]</text>
<text text-anchor="middle" x="1749.604" y="-66489.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder.Result[(Int, String, Char)] =&gt; ?{def ===: ?} -->
<g id="node1155" class="node">
<title>io.circe.Decoder.Result[(Int, String, Char)] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="9131.2303" cy="-14226.9355" rx="251.0458" ry="26.7407"/>
<text text-anchor="start" x="8961.7303" y="-14230.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[(Int, String, Char)] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="9131.2303" y="-14215.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 129ms</text>
</g>
<!-- cats.Eq[io.circe.Decoder.Result[(Int, String, Char)]] -->
<g id="node1675" class="node">
<title>cats.Eq[io.circe.Decoder.Result[(Int, String, Char)]]</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-14226.9355" rx="212.6784" ry="26.7407"/>
<text text-anchor="start" x="9873.5427" y="-14230.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[io.circe.Decoder.Result[(Int, String, Char)]]</text>
<text text-anchor="middle" x="10016.0427" y="-14215.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 127ms</text>
</g>
<!-- io.circe.Decoder.Result[(Int, String, Char)] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.Decoder.Result[(Int, String, Char)]] -->
<g id="edge1539" class="edge">
<title>io.circe.Decoder.Result[(Int, String, Char)] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.Decoder.Result[(Int, String, Char)]]</title>
<path fill="none" stroke="#000000" d="M9382.4152,-14226.9355C9511.751,-14226.9355 9668.0864,-14226.9355 9793.1063,-14226.9355"/>
<polygon fill="#000000" stroke="#000000" points="9793.1934,-14230.4356 9803.1933,-14226.9355 9793.1933,-14223.4356 9793.1934,-14230.4356"/>
</g>
<!-- cats.kernel.PartialOrder[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.PartialOrder[(String, io.circe.Json)] -->
<g id="edge830" class="edge">
<title>cats.kernel.PartialOrder[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.PartialOrder[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M11033.5516,-15555.5437C11105.2965,-15549.2082 11189.143,-15541.7662 11265.0151,-15534.9355 11337.9286,-15528.3712 11418.4341,-15521.0217 11487.5216,-15514.6832"/>
<polygon fill="#000000" stroke="#000000" points="11487.9915,-15518.1549 11497.6297,-15513.7555 11487.3517,-15511.1842 11487.9915,-15518.1549"/>
</g>
<!-- cats.kernel.PartialOrder[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Order[(String, io.circe.Json)] -->
<g id="edge1193" class="edge">
<title>cats.kernel.PartialOrder[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Order[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M11033.5516,-15586.3274C11105.2965,-15592.6629 11189.143,-15600.1049 11265.0151,-15606.9355 11343.2968,-15613.9832 11430.3296,-15621.9359 11502.5879,-15628.5708"/>
<polygon fill="#000000" stroke="#000000" points="11502.4051,-15632.0686 11512.6833,-15629.498 11503.0454,-15625.098 11502.4051,-15632.0686"/>
</g>
<!-- io.circe.Decoder[Byte] -->
<g id="node1157" class="node">
<title>io.circe.Decoder[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-66572.9355" rx="99.9045" ry="26.7407"/>
<text text-anchor="start" x="509.5494" y="-66576.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Byte]</text>
<text text-anchor="middle" x="572.0494" y="-66561.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 10ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node1158" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-12762.9355" rx="453.011" ry="26.7407"/>
<text text-anchor="start" x="4855.2166" y="-12766.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-12751.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;withFocusM&#39;) =&gt; ?{def should: ?} -->
<g id="node1159" class="node">
<title>String(&#39;withFocusM&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-27998.9355" rx="173.8966" ry="26.7407"/>
<text text-anchor="start" x="457.0494" y="-28002.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;withFocusM&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-27987.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;withFocusM&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1040" class="edge">
<title>String(&#39;withFocusM&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M745.988,-27999.7046C859.9837,-28002.7012 1011.8324,-28011.4268 1144.0988,-28034.9355 1342.133,-28070.1337 1567.1979,-28147.2856 1678.9189,-28188.2121"/>
<polygon fill="#000000" stroke="#000000" points="1677.8017,-28191.5303 1688.3952,-28191.6963 1680.2174,-28184.9603 1677.8017,-28191.5303"/>
</g>
<!-- org.scalacheck.Shrink[Short]&#45;&gt;Integral[Short] -->
<g id="edge1079" class="edge">
<title>org.scalacheck.Shrink[Short]&#45;&gt;Integral[Short]</title>
<path fill="none" stroke="#000000" d="M5289.9714,-15359.1092C5508.7777,-15366.579 5961.4634,-15382.0331 6143.6981,-15388.2544"/>
<polygon fill="#000000" stroke="#000000" points="6143.6268,-15391.7539 6153.7404,-15388.5972 6143.8657,-15384.758 6143.6268,-15391.7539"/>
</g>
<!-- Fractional[Short] -->
<g id="node1965" class="node">
<title>Fractional[Short]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-15318.9355" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="6175.2346" y="-15322.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Short]</text>
<text text-anchor="middle" x="6222.2346" y="-15307.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- org.scalacheck.Shrink[Short]&#45;&gt;Fractional[Short] -->
<g id="edge46" class="edge">
<title>org.scalacheck.Shrink[Short]&#45;&gt;Fractional[Short]</title>
<path fill="none" stroke="#000000" d="M5289.9714,-15350.7619C5505.1581,-15343.4157 5946.5502,-15328.3471 6134.4345,-15321.9329"/>
<polygon fill="#000000" stroke="#000000" points="6134.6699,-15325.427 6144.5446,-15321.5878 6134.431,-15318.4311 6134.6699,-15325.427"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G] -->
<g id="node1161" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-66644.9355" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="363.0494" y="-66648.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G]</text>
<text text-anchor="middle" x="572.0494" y="-66633.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[(io.circe.Json, io.circe.Json, io.circe.Json)] -->
<g id="node1162" class="node">
<title>io.circe.Encoder[(io.circe.Json, io.circe.Json, io.circe.Json)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-19286.9355" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="408.0494" y="-19290.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(io.circe.Json, io.circe.Json, io.circe.Json)]</text>
<text text-anchor="middle" x="572.0494" y="-19275.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- io.circe.Encoder[(io.circe.Json, io.circe.Json, io.circe.Json)]&#45;&gt;io.circe.Encoder[io.circe.Json] -->
<g id="edge1138" class="edge">
<title>io.circe.Encoder[(io.circe.Json, io.circe.Json, io.circe.Json)]&#45;&gt;io.circe.Encoder[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M815.3252,-19286.9355C1055.4495,-19286.9355 1414.2188,-19286.9355 1609.9374,-19286.9355"/>
<polygon fill="#000000" stroke="#000000" points="1609.9969,-19290.4356 1619.9969,-19286.9355 1609.9969,-19283.4356 1609.9969,-19290.4356"/>
</g>
<!-- io.circe.Encoder[None.type] -->
<g id="node1165" class="node">
<title>io.circe.Encoder[None.type]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-66716.9355" rx="120.8306" ry="26.7407"/>
<text text-anchor="start" x="494.5494" y="-66720.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[None.type]</text>
<text text-anchor="middle" x="572.0494" y="-66705.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[List[io.circe.Json]] -->
<g id="node1166" class="node">
<title>org.scalacheck.Shrink[List[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-14922.9355" rx="172.5681" ry="26.7407"/>
<text text-anchor="start" x="3956.7721" y="-14926.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[List[io.circe.Json]]</text>
<text text-anchor="middle" x="4070.7721" y="-14911.7355" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 83ms</text>
</g>
<!-- org.scalacheck.Shrink[List[io.circe.Json]]&#45;&gt;Integral[List[io.circe.Json]] -->
<g id="edge679" class="edge">
<title>org.scalacheck.Shrink[List[io.circe.Json]]&#45;&gt;Integral[List[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M4229.9841,-14933.3857C4450.6738,-14947.8711 4844.8694,-14973.7449 5044.5442,-14986.8509"/>
<polygon fill="#000000" stroke="#000000" points="5044.5733,-14990.3603 5054.7811,-14987.5228 5045.0318,-14983.3753 5044.5733,-14990.3603"/>
</g>
<!-- org.scalacheck.Shrink[List[io.circe.Json]]&#45;&gt;List[io.circe.Json] =&gt; Traversable[io.circe.Json] -->
<g id="edge214" class="edge">
<title>org.scalacheck.Shrink[List[io.circe.Json]]&#45;&gt;List[io.circe.Json] =&gt; Traversable[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M4243.3764,-14922.9355C4437.3441,-14922.9355 4752.1563,-14922.9355 4959.5829,-14922.9355"/>
<polygon fill="#000000" stroke="#000000" points="4959.6867,-14926.4356 4969.6867,-14922.9355 4959.6867,-14919.4356 4959.6867,-14926.4356"/>
</g>
<!-- org.scalacheck.Shrink[List[io.circe.Json]]&#45;&gt;org.scalacheck.Shrink[io.circe.Json] -->
<g id="edge599" class="edge">
<title>org.scalacheck.Shrink[List[io.circe.Json]]&#45;&gt;org.scalacheck.Shrink[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M4171.8621,-14944.7614C4299.1116,-14965.5939 4514.4857,-14977.519 4625.8509,-14850.9355 4640.4974,-14834.2877 4619.2928,-8481.6607 4633.8509,-8464.9355 4736.8045,-8346.6573 4933.661,-8351.0711 5057.4143,-8368.2441"/>
<polygon fill="#000000" stroke="#000000" points="5057.2777,-8371.7604 5067.6742,-8369.7202 5058.2746,-8364.8317 5057.2777,-8371.7604"/>
</g>
<!-- org.scalacheck.Shrink[List[io.circe.Json]]&#45;&gt;Fractional[List[io.circe.Json]] -->
<g id="edge1155" class="edge">
<title>org.scalacheck.Shrink[List[io.circe.Json]]&#45;&gt;Fractional[List[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M4167.5925,-14945.2449C4279.3181,-14970.115 4468.8667,-15009.6317 4633.8509,-15030.9355 4768.8682,-15048.3699 4924.2551,-15057.6409 5032.4433,-15062.3815"/>
<polygon fill="#000000" stroke="#000000" points="5032.2941,-15065.8782 5042.4357,-15062.8123 5032.5958,-15058.8847 5032.2941,-15065.8782"/>
</g>
<!-- org.scalacheck.util.Buildable[io.circe.Json,List[io.circe.Json]] -->
<g id="node1204" class="node">
<title>org.scalacheck.util.Buildable[io.circe.Json,List[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-14850.9355" rx="250.1317" ry="26.7407"/>
<text text-anchor="start" x="4998.7166" y="-14854.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[io.circe.Json,List[io.circe.Json]]</text>
<text text-anchor="middle" x="5167.7166" y="-14839.7355" font-family="Times,serif" font-size="14.00" fill="#000000">26 times = 30ms</text>
</g>
<!-- org.scalacheck.Shrink[List[io.circe.Json]]&#45;&gt;org.scalacheck.util.Buildable[io.circe.Json,List[io.circe.Json]] -->
<g id="edge111" class="edge">
<title>org.scalacheck.Shrink[List[io.circe.Json]]&#45;&gt;org.scalacheck.util.Buildable[io.circe.Json,List[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M4229.9841,-14912.4854C4417.8207,-14900.1564 4731.3501,-14879.5773 4943.6518,-14865.6425"/>
<polygon fill="#000000" stroke="#000000" points="4943.9347,-14869.1315 4953.684,-14864.984 4943.4762,-14862.1465 4943.9347,-14869.1315"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Either[Int,String])] -->
<g id="node1169" class="node">
<title>org.scalacheck.Arbitrary[(String, Either[Int,String])]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-10075.9355" rx="214.007" ry="26.7407"/>
<text text-anchor="start" x="1606.104" y="-10079.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(String, Either[Int,String])]</text>
<text text-anchor="middle" x="1749.604" y="-10064.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String, Either[Int,String])]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge1274" class="edge">
<title>org.scalacheck.Arbitrary[(String, Either[Int,String])]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M1830.9285,-10051.0306C1960.4082,-10016.9933 2212.5025,-9974.6656 2347.1092,-10111.9355 2362.4473,-10127.5771 2339.3075,-10293.7625 2355.1092,-10308.9355 2400.6067,-10352.6229 4580.9214,-10353.2068 4625.8509,-10308.9355 4647.3016,-10287.7992 4613.1646,-9788.8206 4633.8509,-9766.9355 4686.1191,-9711.6386 4890.0118,-9711.5416 5030.1324,-9718.648"/>
<polygon fill="#000000" stroke="#000000" points="5030.3589,-9722.1647 5040.5288,-9719.1943 5030.7263,-9715.1743 5030.3589,-9722.1647"/>
</g>
<!-- scala.reflect.ClassTag[(String, Either[Int,String])] -->
<g id="node1504" class="node">
<title>scala.reflect.ClassTag[(String, Either[Int,String])]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-8858.9355" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="2795.4013" y="-8862.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(String, Either[Int,String])]</text>
<text text-anchor="middle" x="2931.4013" y="-8847.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String, Either[Int,String])]&#45;&gt;scala.reflect.ClassTag[(String, Either[Int,String])] -->
<g id="edge1232" class="edge">
<title>org.scalacheck.Arbitrary[(String, Either[Int,String])]&#45;&gt;scala.reflect.ClassTag[(String, Either[Int,String])]</title>
<path fill="none" stroke="#000000" d="M1753.6583,-10048.9409C1777.4764,-9900.9237 1913.6707,-9183.9703 2355.1092,-8894.9355 2414.7953,-8855.8557 2586.259,-8849.1035 2726.7547,-8850.8117"/>
<polygon fill="#000000" stroke="#000000" points="2726.7681,-8854.3121 2736.8149,-8850.9489 2726.8636,-8847.3127 2726.7681,-8854.3121"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Either[Int,String])]&#45;&gt;org.scalacheck.Arbitrary[Either[Int,String]] -->
<g id="edge1097" class="edge">
<title>org.scalacheck.Arbitrary[(String, Either[Int,String])]&#45;&gt;org.scalacheck.Arbitrary[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M1830.7582,-10051.0097C1960.289,-10016.8339 2212.8117,-9974.1816 2347.1092,-10111.9355 2364.9595,-10130.2452 2337.3585,-10323.5293 2355.1092,-10341.9355 2479.5477,-10470.9695 2711.1091,-10439.8231 2839.576,-10409.2593"/>
<polygon fill="#000000" stroke="#000000" points="2840.5103,-10412.6342 2849.4028,-10406.8745 2838.8595,-10405.8316 2840.5103,-10412.6342"/>
</g>
<!-- String(&#39;size&#39;) =&gt; ?{def should: ?} -->
<g id="node1170" class="node">
<title>String(&#39;size&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-27926.9355" rx="140.0143" ry="26.7407"/>
<text text-anchor="start" x="481.0494" y="-27930.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;size&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-27915.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;size&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge270" class="edge">
<title>String(&#39;size&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M710.5758,-27922.9406C827.5922,-27922.5733 998.8377,-27929.1361 1144.0988,-27962.9355 1357.2487,-28012.5315 1591.6458,-28129.7006 1695.2405,-28185.0224"/>
<polygon fill="#000000" stroke="#000000" points="1693.7919,-28188.217 1704.2587,-28189.8588 1697.1003,-28182.0481 1693.7919,-28188.217"/>
</g>
<!-- Integral[scala.collection.immutable.Set[Int]] -->
<g id="node1171" class="node">
<title>Integral[scala.collection.immutable.Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-4526.9355" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="5045.7166" y="-4530.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[scala.collection.immutable.Set[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-4515.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;toIterable&#39;) =&gt; ?{def should: ?} -->
<g id="node1172" class="node">
<title>String(&#39;toIterable&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-27854.9355" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="465.5494" y="-27858.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;toIterable&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-27843.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;toIterable&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1305" class="edge">
<title>String(&#39;toIterable&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M727.1045,-27847.046C843.9191,-27845.3027 1006.8675,-27851.9066 1144.0988,-27890.9355 1371.7449,-27955.6787 1610.4266,-28114.8309 1706.1494,-28183.0489"/>
<polygon fill="#000000" stroke="#000000" points="1704.2533,-28185.9959 1714.4215,-28188.972 1708.3285,-28180.3045 1704.2533,-28185.9959"/>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.Map[String,Double]] -->
<g id="node1173" class="node">
<title>io.circe.Encoder[scala.collection.immutable.Map[String,Double]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-19502.9355" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="391.5494" y="-19506.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[scala.collection.immutable.Map[String,Double]]</text>
<text text-anchor="middle" x="572.0494" y="-19491.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 14ms</text>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.Map[String,Double]]&#45;&gt;io.circe.KeyEncoder[String] -->
<g id="edge955" class="edge">
<title>io.circe.Encoder[scala.collection.immutable.Map[String,Double]]&#45;&gt;io.circe.KeyEncoder[String]</title>
<path fill="none" stroke="#000000" d="M797.1115,-19488.5213C935.2764,-19484.9372 1094.8958,-19492.0304 1144.0988,-19538.9355 1167.4031,-19561.1515 1128.7648,-19588.7507 1152.0988,-19610.9355 1290.8295,-19742.8343 1539.2643,-19703.5596 1667.7057,-19671.1542"/>
<polygon fill="#000000" stroke="#000000" points="1668.6815,-19674.5172 1677.4959,-19668.6386 1666.9394,-19667.7375 1668.6815,-19674.5172"/>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.Map[String,Double]]&#45;&gt;io.circe.Encoder[Double] -->
<g id="edge81" class="edge">
<title>io.circe.Encoder[scala.collection.immutable.Map[String,Double]]&#45;&gt;io.circe.Encoder[Double]</title>
<path fill="none" stroke="#000000" d="M798.966,-19488.757C906.0683,-19482.0893 1035.6544,-19474.0569 1152.0988,-19466.9355 1319.0326,-19456.7264 1512.2152,-19445.126 1632.6715,-19437.9182"/>
<polygon fill="#000000" stroke="#000000" points="1633.243,-19441.3903 1643.0161,-19437.2993 1632.8249,-19434.4028 1633.243,-19441.3903"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1174" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-20654.9355" rx="321.053" ry="26.7407"/>
<text text-anchor="start" x="353.0494" y="-20658.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-20643.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 32ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge471" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M824.7491,-20638.3514C956.8895,-20635.7958 1100.1383,-20644.7683 1144.0988,-20690.9355 1166.1677,-20714.1123 1129.9989,-21243.7883 1152.0988,-21266.9355 1288.173,-21409.459 1550.4699,-21360.6029 1677.3555,-21325.6806"/>
<polygon fill="#000000" stroke="#000000" points="1678.6756,-21328.9456 1687.361,-21322.8781 1676.7876,-21322.205 1678.6756,-21328.9456"/>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node1327" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-20654.9355" rx="446.3688" ry="26.7407"/>
<text text-anchor="start" x="1442.104" y="-20658.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-20643.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge914" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M893.4323,-20654.9355C1016.6708,-20654.9355 1159.7542,-20654.9355 1293.2572,-20654.9355"/>
<polygon fill="#000000" stroke="#000000" points="1293.2616,-20658.4356 1303.2615,-20654.9355 1293.2615,-20651.4356 1293.2616,-20658.4356"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1175" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-12762.9355" rx="353.6068" ry="26.7407"/>
<text text-anchor="start" x="3828.7721" y="-12766.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-12751.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 61ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge257" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4396.6766,-12773.4271C4472.2384,-12778.802 4552.1111,-12786.8648 4625.8509,-12798.9355 4798.0095,-12827.1169 4994.6906,-12886.415 5097.1837,-12919.4501"/>
<polygon fill="#000000" stroke="#000000" points="5096.2125,-12922.8144 5106.8044,-12922.5631 5098.3676,-12916.1544 5096.2125,-12922.8144"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge1531" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4424.6468,-12762.9355C4513.6036,-12762.9355 4610.4073,-12762.9355 4703.8535,-12762.9355"/>
<polygon fill="#000000" stroke="#000000" points="4704.0544,-12766.4356 4714.0544,-12762.9355 4704.0543,-12759.4356 4704.0544,-12766.4356"/>
</g>
<!-- org.scalacheck.Gen.Choose[Int] -->
<g id="node1176" class="node">
<title>org.scalacheck.Gen.Choose[Int]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-66788.9355" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="484.5494" y="-66792.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Gen.Choose[Int]</text>
<text text-anchor="middle" x="572.0494" y="-66777.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 9ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; ACursorSuite.this.PropertyCheckConfigParam -->
<g id="node1177" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; ACursorSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-66860.9355" rx="322.3814" ry="26.7407"/>
<text text-anchor="start" x="352.0494" y="-66864.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; ACursorSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-66849.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 1ms</text>
</g>
<!-- String(&#39; &#39;) =&gt; ?{def *: ?} -->
<g id="node1178" class="node">
<title>String(&#39; &#39;) =&gt; ?{def *: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-66932.9355" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="504.0494" y="-66936.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39; &#39;) =&gt; ?{def *: ?}</text>
<text text-anchor="middle" x="572.0494" y="-66921.7355" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 32ms</text>
</g>
<!-- shapeless.IsTuple[io.circe.Decoder.Result[(Int, String, Char)]] -->
<g id="node1179" class="node">
<title>shapeless.IsTuple[io.circe.Decoder.Result[(Int, String, Char)]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-14770.9355" rx="252.3743" ry="26.7407"/>
<text text-anchor="start" x="10687.9287" y="-14774.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.Decoder.Result[(Int, String, Char)]]</text>
<text text-anchor="middle" x="10858.4287" y="-14759.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc14] -->
<g id="node1180" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc14]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-47330.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-47334.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc14]</text>
<text text-anchor="middle" x="572.0494" y="-47319.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc14]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc14]] -->
<g id="edge1181" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc14]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc14]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-47330.9355C944.0278,-47330.9355 1209.2209,-47330.9355 1419.4845,-47330.9355"/>
<polygon fill="#000000" stroke="#000000" points="1419.7702,-47334.4356 1429.7702,-47330.9355 1419.7702,-47327.4356 1419.7702,-47334.4356"/>
</g>
<!-- String(&#39;Decoder[Double]&#39;) =&gt; ?{def should: ?} -->
<g id="node1184" class="node">
<title>String(&#39;Decoder[Double]&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-27782.9355" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="444.0494" y="-27786.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Decoder[Double]&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-27771.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Decoder[Double]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge718" class="edge">
<title>String(&#39;Decoder[Double]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M745.0502,-27771.1351C860.846,-27768.6741 1015.0877,-27776.0372 1144.0988,-27818.9355 1386.4885,-27899.5341 1625.8788,-28101.9745 1714.076,-28181.8169"/>
<polygon fill="#000000" stroke="#000000" points="1711.8928,-28184.5624 1721.6444,-28188.7043 1716.6041,-28179.3852 1711.8928,-28184.5624"/>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc13] -->
<g id="node1185" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc13]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-67004.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="1617.104" y="-67008.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc13]</text>
<text text-anchor="middle" x="1749.604" y="-66993.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc7] -->
<g id="node1187" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc7]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-67076.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="1620.104" y="-67080.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc7]</text>
<text text-anchor="middle" x="1749.604" y="-67065.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- a.type =&gt; ?{def isNaN: ?} -->
<g id="node1188" class="node">
<title>a.type =&gt; ?{def isNaN: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-67148.9355" rx="114.6026" ry="26.7407"/>
<text text-anchor="start" x="499.0494" y="-67152.7355" font-family="Times,serif" font-size="14.00" fill="#000000">a.type =&gt; ?{def isNaN: ?}</text>
<text text-anchor="middle" x="572.0494" y="-67137.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- io.circe.Decoder[BigInt] -->
<g id="node1190" class="node">
<title>io.circe.Decoder[BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-67220.9355" rx="106.1321" ry="26.7407"/>
<text text-anchor="start" x="505.0494" y="-67224.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[BigInt]</text>
<text text-anchor="middle" x="572.0494" y="-67209.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 13ms</text>
</g>
<!-- cats.kernel.Order[Vector[String]] -->
<g id="node1191" class="node">
<title>cats.kernel.Order[Vector[String]]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-14880.9355" rx="140.0143" ry="26.7407"/>
<text text-anchor="start" x="11567.3883" y="-14884.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[Vector[String]]</text>
<text text-anchor="middle" x="11658.3883" y="-14869.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- cats.kernel.Order[Vector[String]]&#45;&gt;cats.kernel.Order[String] -->
<g id="edge779" class="edge">
<title>cats.kernel.Order[Vector[String]]&#45;&gt;cats.kernel.Order[String]</title>
<path fill="none" stroke="#000000" d="M11747.1107,-14860.0279C11835.4673,-14845.0277 11968.4838,-14839.2341 12043.7615,-14916.9355 12063.9008,-14937.7234 12031.8201,-15025.9576 12051.7615,-15046.9355 12120.2086,-15118.9408 12240.645,-15118.3585 12324.1801,-15106.9507"/>
<polygon fill="#000000" stroke="#000000" points="12324.7799,-15110.4005 12334.1785,-15105.51 12323.7815,-15103.4721 12324.7799,-15110.4005"/>
</g>
<!-- org.scalacheck.Arbitrary[Unit]&#45;&gt;scala.reflect.ClassTag[Unit] -->
<g id="edge149" class="edge">
<title>org.scalacheck.Arbitrary[Unit]&#45;&gt;scala.reflect.ClassTag[Unit]</title>
<path fill="none" stroke="#000000" d="M1879.7409,-39914.9355C2107.077,-39914.9355 2573.9442,-39914.9355 2801.2737,-39914.9355"/>
<polygon fill="#000000" stroke="#000000" points="2801.584,-39918.4356 2811.584,-39914.9355 2801.5839,-39911.4356 2801.584,-39918.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[io.circe.Json],(String, io.circe.Json),That] -->
<g id="node1193" class="node">
<title>scala.collection.generic.CanBuildFrom[List[io.circe.Json],(String, io.circe.Json),That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-67292.9355" rx="344.2221" ry="26.7407"/>
<text text-anchor="start" x="336.5494" y="-67296.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[io.circe.Json],(String, io.circe.Json),That]</text>
<text text-anchor="middle" x="572.0494" y="-67281.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1195" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-20582.9355" rx="336.6657" ry="26.7407"/>
<text text-anchor="start" x="342.0494" y="-20586.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-20571.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 31ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge490" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M908.7011,-20582.9355C1023.6034,-20582.9355 1154.2998,-20582.9355 1277.835,-20582.9355"/>
<polygon fill="#000000" stroke="#000000" points="1277.8553,-20586.4356 1287.8553,-20582.9355 1277.8553,-20579.4356 1277.8553,-20586.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge359" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M835.2399,-20566.1478C964.4029,-20564.2605 1101.331,-20573.9514 1144.0988,-20618.9355 1156.5022,-20631.9818 1139.6779,-21253.9059 1152.0988,-21266.9355 1288.063,-21409.5639 1550.4129,-21360.6574 1677.3333,-21325.7017"/>
<polygon fill="#000000" stroke="#000000" points="1678.6573,-21328.9656 1687.3416,-21322.8966 1676.768,-21322.2254 1678.6573,-21328.9656"/>
</g>
<!-- (((String, io.circe.Json)) =&gt; Boolean) =&gt; Traversable[((String, io.circe.Json), Boolean)] -->
<g id="node1196" class="node">
<title>(((String, io.circe.Json)) =&gt; Boolean) =&gt; Traversable[((String, io.circe.Json), Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-38906.9355" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="1509.104" y="-38910.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(((String, io.circe.Json)) =&gt; Boolean) =&gt; Traversable[((String, io.circe.Json), Boolean)]</text>
<text text-anchor="middle" x="1749.604" y="-38895.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- resultAlias.type =&gt; ?{def ===: ?} -->
<g id="node1197" class="node">
<title>resultAlias.type =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-16768.9355" rx="144.9138" ry="26.7407"/>
<text text-anchor="start" x="11563.8883" y="-16772.7355" font-family="Times,serif" font-size="14.00" fill="#000000">resultAlias.type =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="11658.3883" y="-16757.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- resultAlias.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[io.circe.Json]] -->
<g id="edge863" class="edge">
<title>resultAlias.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M11752.6983,-16789.3553C11841.1321,-16802.393 11970.4177,-16804.6562 12043.7615,-16727.9355 12063.9153,-16706.8538 12031.5292,-16617.942 12051.7615,-16596.9355 12120.3686,-16525.703 12240.1948,-16527.7906 12323.5787,-16540.3675"/>
<polygon fill="#000000" stroke="#000000" points="12323.1364,-16543.841 12333.561,-16541.949 12324.2319,-16536.9272 12323.1364,-16543.841"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q] -->
<g id="node1198" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-67364.9355" rx="470.4521" ry="26.7407"/>
<text text-anchor="start" x="247.5494" y="-67368.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q]</text>
<text text-anchor="middle" x="572.0494" y="-67353.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;lefts&#39;) =&gt; ?{def should: ?} -->
<g id="node1199" class="node">
<title>String(&#39;lefts&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-27710.9355" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="480.0494" y="-27714.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;lefts&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-27699.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;lefts&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge880" class="edge">
<title>String(&#39;lefts&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M696.6594,-27698.2206C815.5818,-27690.7785 997.7891,-27691.7931 1144.0988,-27746.9355 1401.7137,-27844.0277 1638.993,-28090.5566 1720.0789,-28180.9986"/>
<polygon fill="#000000" stroke="#000000" points="1717.5003,-28183.3658 1726.7674,-28188.5012 1722.7255,-28178.7077 1717.5003,-28183.3658"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc4] -->
<g id="node1200" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc4]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-61532.9355" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="423.5494" y="-61536.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc4]</text>
<text text-anchor="middle" x="572.0494" y="-61521.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc4]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc4] -->
<g id="edge1524" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc4]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc4]</title>
<path fill="none" stroke="#000000" d="M793.5384,-61532.9355C1003.7878,-61532.9355 1318.0755,-61532.9355 1528.2728,-61532.9355"/>
<polygon fill="#000000" stroke="#000000" points="1528.5155,-61536.4356 1538.5154,-61532.9355 1528.5154,-61529.4356 1528.5155,-61536.4356"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L] -->
<g id="node1201" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-67436.9355" rx="386.5749" ry="26.7407"/>
<text text-anchor="start" x="306.5494" y="-67440.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L]</text>
<text text-anchor="middle" x="572.0494" y="-67425.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; AccumulatingDecoderSpec.this.PropertyCheckConfigParam -->
<g id="node1202" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; AccumulatingDecoderSpec.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-67508.9355" rx="347.379" ry="26.7407"/>
<text text-anchor="start" x="334.5494" y="-67512.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; AccumulatingDecoderSpec.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-67497.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 1ms</text>
</g>
<!-- io.circe.Decoder[None.type] -->
<g id="node1203" class="node">
<title>io.circe.Decoder[None.type]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-67580.9355" rx="121.7449" ry="26.7407"/>
<text text-anchor="start" x="494.0494" y="-67584.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[None.type]</text>
<text text-anchor="middle" x="572.0494" y="-67569.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.util.Buildable[io.circe.Json,List[io.circe.Json]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,io.circe.Json,List[io.circe.Json]] -->
<g id="edge1105" class="edge">
<title>org.scalacheck.util.Buildable[io.circe.Json,List[io.circe.Json]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,io.circe.Json,List[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M5418.2911,-14850.9355C5567.0019,-14850.9355 5756.6858,-14850.9355 5914.4552,-14850.9355"/>
<polygon fill="#000000" stroke="#000000" points="5914.8003,-14854.4356 5924.8003,-14850.9355 5914.8002,-14847.4356 5914.8003,-14854.4356"/>
</g>
<!-- String(&#39;Decoder[Int]&#39;) =&gt; ?{def should: ?} -->
<g id="node1205" class="node">
<title>String(&#39;Decoder[Int]&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-27638.9355" rx="174.8109" ry="26.7407"/>
<text text-anchor="start" x="456.5494" y="-27642.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Decoder[Int]&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-27627.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;Decoder[Int]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge135" class="edge">
<title>String(&#39;Decoder[Int]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M712.4267,-27622.8755C831.9075,-27614.922 1005.6705,-27617.1318 1144.0988,-27674.9355 1416.8983,-27788.849 1649.3833,-28078.9448 1724.2925,-28179.7669"/>
<polygon fill="#000000" stroke="#000000" points="1721.6827,-28182.1247 1730.4379,-28188.0911 1727.3143,-28177.9671 1721.6827,-28182.1247"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[String,Char,That] -->
<g id="node1206" class="node">
<title>scala.collection.generic.CanBuildFrom[String,Char,That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-67652.9355" rx="233.1906" ry="26.7407"/>
<text text-anchor="start" x="415.0494" y="-67656.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[String,Char,That]</text>
<text text-anchor="middle" x="572.0494" y="-67641.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Cogen[Unit] -->
<g id="node1207" class="node">
<title>org.scalacheck.Cogen[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-67724.9355" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="495.5494" y="-67728.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Cogen[Unit]</text>
<text text-anchor="middle" x="572.0494" y="-67713.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node1208" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-18588.9355" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="11471.8883" y="-18592.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="11658.3883" y="-18577.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- org.scalacheck.Shrink[Array[String]] -->
<g id="node1209" class="node">
<title>org.scalacheck.Shrink[Array[String]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-10890.9355" rx="154.7129" ry="26.7407"/>
<text text-anchor="start" x="2829.9013" y="-10894.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Array[String]]</text>
<text text-anchor="middle" x="2931.4013" y="-10879.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Shrink[Array[String]]&#45;&gt;Array[String] =&gt; Traversable[String] -->
<g id="edge1273" class="edge">
<title>org.scalacheck.Shrink[Array[String]]&#45;&gt;Array[String] =&gt; Traversable[String]</title>
<path fill="none" stroke="#000000" d="M3007.794,-10867.5239C3132.2986,-10834.6477 3378.0628,-10792.7382 3507.6933,-10926.9355 3529.9343,-10949.9601 3493.4797,-11191.8846 3515.6933,-11214.9355 3569.5179,-11270.7891 3774.3688,-11270.7205 3919.5077,-11262.9201"/>
<polygon fill="#000000" stroke="#000000" points="3920.061,-11266.3949 3929.8516,-11262.3458 3919.6729,-11259.4056 3920.061,-11266.3949"/>
</g>
<!-- org.scalacheck.Shrink[Array[String]]&#45;&gt;org.scalacheck.Shrink[String] -->
<g id="edge136" class="edge">
<title>org.scalacheck.Shrink[Array[String]]&#45;&gt;org.scalacheck.Shrink[String]</title>
<path fill="none" stroke="#000000" d="M2987.8946,-10865.6962C3110.0743,-10807.565 3396.7895,-10651.1707 3507.6933,-10418.9355 3515.0672,-10403.4944 3503.7625,-9199.2017 3515.6933,-9186.9355 3601.7485,-9098.4609 4539.6379,-9237.2564 4625.8509,-9148.9355 4641.2773,-9133.132 4619.2781,-8370.5294 4633.8509,-8353.9355 4739.8775,-8233.2049 4943.7834,-8240.6705 5066.6119,-8258.6885"/>
<polygon fill="#000000" stroke="#000000" points="5066.3629,-8262.1907 5076.7748,-8260.2305 5067.413,-8255.2699 5066.3629,-8262.1907"/>
</g>
<!-- org.scalacheck.Shrink[Array[String]]&#45;&gt;org.scalacheck.util.Buildable[String,Array[String]] -->
<g id="edge1444" class="edge">
<title>org.scalacheck.Shrink[Array[String]]&#45;&gt;org.scalacheck.util.Buildable[String,Array[String]]</title>
<path fill="none" stroke="#000000" d="M3008.1571,-10867.5265C3132.6198,-10834.8643 3377.6185,-10793.5186 3507.6933,-10926.9355 3524.4587,-10944.1318 3498.9483,-11125.7194 3515.6933,-11142.9355 3565.0085,-11193.6383 3739.6298,-11198.1034 3880.009,-11192.6447"/>
<polygon fill="#000000" stroke="#000000" points="3880.2059,-11196.1397 3890.0549,-11192.235 3879.9206,-11189.1455 3880.2059,-11196.1397"/>
</g>
<!-- Integral[Array[String]] -->
<g id="node1880" class="node">
<title>Integral[Array[String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-10890.9355" rx="99.9045" ry="26.7407"/>
<text text-anchor="start" x="4008.2721" y="-10894.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Array[String]]</text>
<text text-anchor="middle" x="4070.7721" y="-10879.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Array[String]]&#45;&gt;Integral[Array[String]] -->
<g id="edge1134" class="edge">
<title>org.scalacheck.Shrink[Array[String]]&#45;&gt;Integral[Array[String]]</title>
<path fill="none" stroke="#000000" d="M3086.5446,-10890.9355C3320.2967,-10890.9355 3757.0823,-10890.9355 3960.8403,-10890.9355"/>
<polygon fill="#000000" stroke="#000000" points="3960.9585,-10894.4356 3970.9584,-10890.9355 3960.9584,-10887.4356 3960.9585,-10894.4356"/>
</g>
<!-- org.scalacheck.Shrink[(Byte, Int)]&#45;&gt;Integral[(Byte, Int)] -->
<g id="edge332" class="edge">
<title>org.scalacheck.Shrink[(Byte, Int)]&#45;&gt;Integral[(Byte, Int)]</title>
<path fill="none" stroke="#000000" d="M4214.4601,-3014.9355C4440.7775,-3014.9355 4874.4923,-3014.9355 5069.0314,-3014.9355"/>
<polygon fill="#000000" stroke="#000000" points="5069.2416,-3018.4356 5079.2416,-3014.9355 5069.2416,-3011.4356 5069.2416,-3018.4356"/>
</g>
<!-- org.scalacheck.Shrink[(Byte, Int)]&#45;&gt;org.scalacheck.Shrink[Byte] -->
<g id="edge1038" class="edge">
<title>org.scalacheck.Shrink[(Byte, Int)]&#45;&gt;org.scalacheck.Shrink[Byte]</title>
<path fill="none" stroke="#000000" d="M4206.5073,-3023.6789C4318.8914,-3030.9325 4482.752,-3041.5416 4625.8509,-3050.9355 4768.2849,-3060.2858 4931.7678,-3071.1677 5041.586,-3078.4994"/>
<polygon fill="#000000" stroke="#000000" points="5041.5009,-3082.0014 5051.7119,-3079.1755 5041.9674,-3075.017 5041.5009,-3082.0014"/>
</g>
<!-- org.scalacheck.Shrink[(Byte, Int)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge1373" class="edge">
<title>org.scalacheck.Shrink[(Byte, Int)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4201.7855,-3003.8747C4347.6235,-2994.7982 4570.1861,-2991.6807 4625.8509,-3050.9355 4642.3404,-3068.4885 4617.384,-6501.3614 4633.8509,-6518.9355 4688.4201,-6577.1736 4910.242,-6573.4518 5050.2161,-6564.7079"/>
<polygon fill="#000000" stroke="#000000" points="5050.812,-6568.1769 5060.567,-6564.0429 5050.3632,-6561.1913 5050.812,-6568.1769"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,String,Traversable[String] with Array[String]] -->
<g id="node1211" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,String,Traversable[String] with Array[String]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-10998.9355" rx="377.6901" ry="26.7407"/>
<text text-anchor="start" x="4908.7166" y="-11002.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,String,Traversable[String] with Array[String]]</text>
<text text-anchor="middle" x="5167.7166" y="-10987.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.Decoder.Result[Test$3] =&gt; ?{def ===: ?} -->
<g id="node1212" class="node">
<title>io.circe.Decoder.Result[Test$3] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-67796.9355" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="433.5494" y="-67800.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[Test$3] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-67785.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;truncateToByte&#39;) =&gt; ?{def should: ?} -->
<g id="node1214" class="node">
<title>String(&#39;truncateToByte&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-27566.9355" rx="184.6098" ry="26.7407"/>
<text text-anchor="start" x="449.5494" y="-27570.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;truncateToByte&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-27555.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;truncateToByte&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1389" class="edge">
<title>String(&#39;truncateToByte&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M709.5122,-27549.0027C829.6894,-27539.367 1006.0708,-27540.1684 1144.0988,-27602.9355 1433.2562,-27734.4277 1659.6206,-28069.3832 1728.1649,-28179.3571"/>
<polygon fill="#000000" stroke="#000000" points="1725.3305,-28181.428 1733.5695,-28188.0891 1731.2826,-28177.744 1725.3305,-28181.428"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc20] -->
<g id="node1215" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc20]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-44702.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-44706.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc20]</text>
<text text-anchor="middle" x="572.0494" y="-44691.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc20]&#45;&gt;Fractional[ProductCodecSuite.this.Cc20] -->
<g id="edge1032" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc20]&#45;&gt;Fractional[ProductCodecSuite.this.Cc20]</title>
<path fill="none" stroke="#000000" d="M781.5546,-44709.3405C1006.7591,-44716.2254 1360.8493,-44727.0506 1572.6085,-44733.5245"/>
<polygon fill="#000000" stroke="#000000" points="1572.7945,-44737.0317 1582.8968,-44733.839 1573.0085,-44730.035 1572.7945,-44737.0317"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc20] -->
<g id="node1672" class="node">
<title>Integral[ProductCodecSuite.this.Cc20]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-44666.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="1644.104" y="-44670.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc20]</text>
<text text-anchor="middle" x="1749.604" y="-44655.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc20]&#45;&gt;Integral[ProductCodecSuite.this.Cc20] -->
<g id="edge1139" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc20]&#45;&gt;Integral[ProductCodecSuite.this.Cc20]</title>
<path fill="none" stroke="#000000" d="M781.5546,-44696.5306C1009.8486,-44689.5512 1370.5887,-44678.5227 1581.2424,-44672.0827"/>
<polygon fill="#000000" stroke="#000000" points="1581.5818,-44675.574 1591.4702,-44671.77 1581.3678,-44668.5773 1581.5818,-44675.574"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc17] -->
<g id="node1216" class="node">
<title>Integral[ProductCodecSuite.this.Cc17]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-67868.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="1644.104" y="-67872.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc17]</text>
<text text-anchor="middle" x="1749.604" y="-67857.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc10]] -->
<g id="node1217" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc10]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-67940.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="1549.604" y="-67944.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc10]]</text>
<text text-anchor="middle" x="1749.604" y="-67929.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.KeyEncoder[java.util.UUID] -->
<g id="node1218" class="node">
<title>io.circe.KeyEncoder[java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-20294.9355" rx="154.7129" ry="26.7407"/>
<text text-anchor="start" x="1648.104" y="-20298.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.KeyEncoder[java.util.UUID]</text>
<text text-anchor="middle" x="1749.604" y="-20283.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;truncateToLong&#39;) =&gt; ?{def should: ?} -->
<g id="node1219" class="node">
<title>String(&#39;truncateToLong&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-27494.9355" rx="186.8525" ry="26.7407"/>
<text text-anchor="start" x="448.0494" y="-27498.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;truncateToLong&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-27483.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;truncateToLong&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge728" class="edge">
<title>String(&#39;truncateToLong&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M703.3277,-27475.7861C824.1669,-27464.3109 1005.182,-27463.0547 1144.0988,-27530.9355 1450.0108,-27680.4178 1668.6757,-28060.2261 1731.2859,-28178.9219"/>
<polygon fill="#000000" stroke="#000000" points="1728.2893,-28180.7444 1736.0278,-28187.9809 1734.4911,-28177.4981 1728.2893,-28180.7444"/>
</g>
<!-- shapeless.IsTuple[Int] -->
<g id="node1739" class="node">
<title>shapeless.IsTuple[Int]</title>
<ellipse fill="none" stroke="#000000" cx="20465.4585" cy="-17741.9355" rx="96.7474" ry="26.7407"/>
<text text-anchor="start" x="20404.9585" y="-17745.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Int]</text>
<text text-anchor="middle" x="20465.4585" y="-17730.7355" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 7ms</text>
</g>
<!-- cats.kernel.Eq[Int]&#45;&gt;shapeless.IsTuple[Int] -->
<g id="edge636" class="edge">
<title>cats.kernel.Eq[Int]&#45;&gt;shapeless.IsTuple[Int]</title>
<path fill="none" stroke="#000000" d="M20002.2837,-16179.8489C20058.1409,-16368.231 20390.2055,-17488.1398 20454.6338,-17705.4284"/>
<polygon fill="#000000" stroke="#000000" points="20451.2989,-17706.4935 20457.4973,-17715.0859 20458.0101,-17704.5035 20451.2989,-17706.4935"/>
</g>
<!-- cats.Eq[Int]&#45;&gt;shapeless.IsTuple[Int] -->
<g id="edge404" class="edge">
<title>cats.Eq[Int]&#45;&gt;shapeless.IsTuple[Int]</title>
<path fill="none" stroke="#000000" d="M11733.7392,-19458.2119C11811.4456,-19451.2041 11936.1176,-19439.7546 12043.7615,-19428.9355 12527.3445,-19380.3318 12645.0088,-19311.9355 13131.0282,-19311.9355 13131.0282,-19311.9355 13131.0282,-19311.9355 19337.1796,-19311.9355 20118.1333,-19311.9355 20411.5163,-18015.0965 20458.5106,-17778.6882"/>
<polygon fill="#000000" stroke="#000000" points="20461.9488,-17779.3429 20460.444,-17768.8555 20455.0803,-17777.9924 20461.9488,-17779.3429"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C] -->
<g id="node1222" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-68012.9355" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="390.0494" y="-68016.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C]</text>
<text text-anchor="middle" x="572.0494" y="-68001.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,(Int, String),scala.collection.Map[Int,String] with (Int, String)] -->
<g id="node1223" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,(Int, String),scala.collection.Map[Int,String] with (Int, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-14418.9355" rx="441.8835" ry="26.7407"/>
<text text-anchor="start" x="4863.2166" y="-14422.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,(Int, String),scala.collection.Map[Int,String] with (Int, String)]</text>
<text text-anchor="middle" x="5167.7166" y="-14407.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.util.Either[Int,String] =&gt; Traversable[(Int, String)] -->
<g id="node1224" class="node">
<title>scala.util.Either[Int,String] =&gt; Traversable[(Int, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-8206.9355" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="5013.7166" y="-8210.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.util.Either[Int,String] =&gt; Traversable[(Int, String)]</text>
<text text-anchor="middle" x="5167.7166" y="-8195.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Byte]&#45;&gt;scala.reflect.ClassTag[Byte] -->
<g id="edge929" class="edge">
<title>org.scalacheck.Arbitrary[Byte]&#45;&gt;scala.reflect.ClassTag[Byte]</title>
<path fill="none" stroke="#000000" d="M5298.6089,-2870.9355C5501.3404,-2870.9355 5888.9733,-2870.9355 6091.5677,-2870.9355"/>
<polygon fill="#000000" stroke="#000000" points="6091.6682,-2874.4356 6101.6682,-2870.9355 6091.6681,-2867.4356 6091.6682,-2874.4356"/>
</g>
<!-- io.circe.Encoder[Seq[Long]] -->
<g id="node1227" class="node">
<title>io.circe.Encoder[Seq[Long]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-49112.9355" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="493.5494" y="-49116.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Seq[Long]]</text>
<text text-anchor="middle" x="572.0494" y="-49101.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Encoder[Seq[Long]]&#45;&gt;io.circe.Encoder[Long] -->
<g id="edge1250" class="edge">
<title>io.circe.Encoder[Seq[Long]]&#45;&gt;io.circe.Encoder[Long]</title>
<path fill="none" stroke="#000000" d="M694.4599,-49112.9355C924.2344,-49112.9355 1416.8562,-49112.9355 1638.0539,-49112.9355"/>
<polygon fill="#000000" stroke="#000000" points="1638.3799,-49116.4356 1648.3799,-49112.9355 1638.3798,-49109.4356 1638.3799,-49116.4356"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc19] -->
<g id="node1228" class="node">
<title>Integral[ProductCodecSuite.this.Cc19]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-61784.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="1644.104" y="-61788.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc19]</text>
<text text-anchor="middle" x="1749.604" y="-61773.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;top&#39;) =&gt; ?{def should: ?} -->
<g id="node1229" class="node">
<title>String(&#39;top&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-27422.9355" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="483.0494" y="-27426.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;top&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-27411.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;top&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge261" class="edge">
<title>String(&#39;top&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M676.3116,-27405.383C796.3421,-27390.4167 995.9695,-27381.9744 1144.0988,-27458.9355 1467.3203,-27626.8665 1677.0665,-28051.8536 1733.9641,-28178.6705"/>
<polygon fill="#000000" stroke="#000000" points="1730.8365,-28180.2511 1738.0991,-28187.9651 1737.2322,-28177.4058 1730.8365,-28180.2511"/>
</g>
<!-- String(&#39;+:&#39;) =&gt; ?{def should: ?} -->
<g id="node1230" class="node">
<title>String(&#39;+:&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-27350.9355" rx="133.7865" ry="26.7407"/>
<text text-anchor="start" x="485.5494" y="-27354.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;+:&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-27339.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;+:&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1161" class="edge">
<title>String(&#39;+:&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M671.5877,-27332.9521C791.5531,-27316.4897 995.5121,-27305.5472 1144.0988,-27386.9355 1485.0425,-27573.6876 1684.7967,-28043.9736 1736.2513,-28178.4812"/>
<polygon fill="#000000" stroke="#000000" points="1733.0188,-28179.8282 1739.8355,-28187.9388 1739.5645,-28177.3475 1733.0188,-28179.8282"/>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc8] -->
<g id="node1231" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc8]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-68084.9355" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="446.0494" y="-68088.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc8]</text>
<text text-anchor="middle" x="572.0494" y="-68073.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc8]] -->
<g id="node1793" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc8]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-68084.9355" rx="314.8251" ry="26.7407"/>
<text text-anchor="start" x="1535.104" y="-68088.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc8]]</text>
<text text-anchor="middle" x="1749.604" y="-68073.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc8]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc8]] -->
<g id="edge247" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc8]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc8]]</title>
<path fill="none" stroke="#000000" d="M761.5708,-68084.9355C940.1781,-68084.9355 1211.4625,-68084.9355 1424.6075,-68084.9355"/>
<polygon fill="#000000" stroke="#000000" points="1424.7127,-68088.4356 1434.7127,-68084.9355 1424.7127,-68081.4356 1424.7127,-68088.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(io.circe.Json, Int)],(String, io.circe.Json),That] -->
<g id="node1233" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(io.circe.Json, Int)],(String, io.circe.Json),That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-68156.9355" rx="366.0628" ry="26.7407"/>
<text text-anchor="start" x="321.0494" y="-68160.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(io.circe.Json, Int)],(String, io.circe.Json),That]</text>
<text text-anchor="middle" x="572.0494" y="-68145.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G] -->
<g id="node1235" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-68228.9355" rx="349.1216" ry="26.7407"/>
<text text-anchor="start" x="333.0494" y="-68232.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G]</text>
<text text-anchor="middle" x="572.0494" y="-68217.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.PartialOrder[io.circe.KeyDecoder[Either[Unit,Int]]] -->
<g id="node1237" class="node">
<title>cats.PartialOrder[io.circe.KeyDecoder[Either[Unit,Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-14370.9355" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="9862.5427" y="-14374.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.PartialOrder[io.circe.KeyDecoder[Either[Unit,Int]]]</text>
<text text-anchor="middle" x="10016.0427" y="-14359.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.Eq[Option[io.circe.JsonObject]]&#45;&gt;cats.kernel.Order[io.circe.JsonObject] -->
<g id="edge131" class="edge">
<title>cats.Eq[Option[io.circe.JsonObject]]&#45;&gt;cats.kernel.Order[io.circe.JsonObject]</title>
<path fill="none" stroke="#000000" d="M11792.9471,-19740.1464C11926.0933,-19727.4914 12129.4246,-19708.1657 12267.2725,-19695.0639"/>
<polygon fill="#000000" stroke="#000000" points="12267.8723,-19698.5228 12277.4963,-19694.0922 12267.2099,-19691.5542 12267.8723,-19698.5228"/>
</g>
<!-- cats.Eq[Option[io.circe.JsonObject]]&#45;&gt;cats.kernel.PartialOrder[io.circe.JsonObject] -->
<g id="edge239" class="edge">
<title>cats.Eq[Option[io.circe.JsonObject]]&#45;&gt;cats.kernel.PartialOrder[io.circe.JsonObject]</title>
<path fill="none" stroke="#000000" d="M11811.2305,-19752.9355C11929.6852,-19752.9355 12094.5973,-19752.9355 12222.2851,-19752.9355"/>
<polygon fill="#000000" stroke="#000000" points="12222.5754,-19756.4356 12232.5754,-19752.9355 12222.5754,-19749.4356 12222.5754,-19756.4356"/>
</g>
<!-- cats.kernel.Eq[io.circe.JsonObject] -->
<g id="node1912" class="node">
<title>cats.kernel.Eq[io.circe.JsonObject]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-19824.9355" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="12320.4214" y="-19828.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.JsonObject]</text>
<text text-anchor="middle" x="12415.9214" y="-19813.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 22ms</text>
</g>
<!-- cats.Eq[Option[io.circe.JsonObject]]&#45;&gt;cats.kernel.Eq[io.circe.JsonObject] -->
<g id="edge47" class="edge">
<title>cats.Eq[Option[io.circe.JsonObject]]&#45;&gt;cats.kernel.Eq[io.circe.JsonObject]</title>
<path fill="none" stroke="#000000" d="M11792.9471,-19765.7247C11928.7894,-19778.6359 12137.688,-19798.4908 12275.5647,-19811.5953"/>
<polygon fill="#000000" stroke="#000000" points="12275.4938,-19815.1042 12285.7802,-19812.5662 12276.1562,-19808.1356 12275.4938,-19815.1042"/>
</g>
<!-- Integral[io.circe.CursorOp] -->
<g id="node1239" class="node">
<title>Integral[io.circe.CursorOp]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-36098.9355" rx="116.8455" ry="26.7407"/>
<text text-anchor="start" x="2856.9013" y="-36102.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[io.circe.CursorOp]</text>
<text text-anchor="middle" x="2931.4013" y="-36087.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F] -->
<g id="node1240" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-68300.9355" rx="321.053" ry="26.7407"/>
<text text-anchor="start" x="353.0494" y="-68304.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F]</text>
<text text-anchor="middle" x="572.0494" y="-68289.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((String, io.circe.Json)) =&gt; Boolean] -->
<g id="node1242" class="node">
<title>org.scalacheck.Arbitrary[((String, io.circe.Json)) =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-7706.9355" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="1579.604" y="-7710.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((String, io.circe.Json)) =&gt; Boolean]</text>
<text text-anchor="middle" x="1749.604" y="-7695.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;org.scalacheck.Cogen[(String, io.circe.Json)] -->
<g id="edge1446" class="edge">
<title>org.scalacheck.Arbitrary[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;org.scalacheck.Cogen[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M1968.4308,-7693.6037C2193.2742,-7679.9053 2539.2913,-7658.8245 2749.5789,-7646.0129"/>
<polygon fill="#000000" stroke="#000000" points="2750.0316,-7649.4919 2759.8003,-7645.3902 2749.6059,-7642.5049 2750.0316,-7649.4919"/>
</g>
<!-- org.scalacheck.Arbitrary[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;scala.reflect.ClassTag[((String, io.circe.Json)) =&gt; Boolean] -->
<g id="edge106" class="edge">
<title>org.scalacheck.Arbitrary[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;scala.reflect.ClassTag[((String, io.circe.Json)) =&gt; Boolean]</title>
<path fill="none" stroke="#000000" d="M2001.6796,-7706.9355C2201.7544,-7706.9355 2480.1046,-7706.9355 2680.0026,-7706.9355"/>
<polygon fill="#000000" stroke="#000000" points="2680.0587,-7710.4356 2690.0587,-7706.9355 2680.0586,-7703.4356 2680.0587,-7710.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge966" class="edge">
<title>org.scalacheck.Arbitrary[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M1855.7966,-7731.3104C1976.1335,-7757.6588 2178.516,-7798.1337 2355.1092,-7814.9355 2417.9073,-7820.9104 4579.9957,-7801.6158 4625.8509,-7844.9355 4644.3115,-7862.3754 4616.0873,-7940.7864 4633.8509,-7958.9355 4746.8831,-8074.4205 4952.1526,-8055.7995 5072.5591,-8031.8559"/>
<polygon fill="#000000" stroke="#000000" points="5073.4098,-8035.2546 5082.5087,-8029.8268 5072.011,-8028.3957 5073.4098,-8035.2546"/>
</g>
<!-- org.scalacheck.util.Buildable[((String, io.circe.Json), Boolean),((String, io.circe.Json)) =&gt; Boolean] -->
<g id="node1467" class="node">
<title>org.scalacheck.util.Buildable[((String, io.circe.Json), Boolean),((String, io.circe.Json)) =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-7562.9355" rx="398.2023" ry="26.7407"/>
<text text-anchor="start" x="2657.9013" y="-7566.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[((String, io.circe.Json), Boolean),((String, io.circe.Json)) =&gt; Boolean]</text>
<text text-anchor="middle" x="2931.4013" y="-7551.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;org.scalacheck.util.Buildable[((String, io.circe.Json), Boolean),((String, io.circe.Json)) =&gt; Boolean] -->
<g id="edge844" class="edge">
<title>org.scalacheck.Arbitrary[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;org.scalacheck.util.Buildable[((String, io.circe.Json), Boolean),((String, io.circe.Json)) =&gt; Boolean]</title>
<path fill="none" stroke="#000000" d="M1862.298,-7682.8584C1983.4629,-7657.9064 2182.0305,-7619.7082 2355.1092,-7598.9355 2429.4079,-7590.0183 2509.3772,-7583.2405 2585.3925,-7578.1127"/>
<polygon fill="#000000" stroke="#000000" points="2585.8615,-7581.5893 2595.6065,-7577.432 2585.3959,-7574.6048 2585.8615,-7581.5893"/>
</g>
<!-- org.scalacheck.Arbitrary[((String, io.circe.Json), Boolean)] -->
<g id="node1546" class="node">
<title>org.scalacheck.Arbitrary[((String, io.circe.Json), Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-7778.9355" rx="239.9186" ry="26.7407"/>
<text text-anchor="start" x="2769.9013" y="-7782.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[((String, io.circe.Json), Boolean)]</text>
<text text-anchor="middle" x="2931.4013" y="-7767.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;org.scalacheck.Arbitrary[((String, io.circe.Json), Boolean)] -->
<g id="edge1509" class="edge">
<title>org.scalacheck.Arbitrary[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;org.scalacheck.Arbitrary[((String, io.circe.Json), Boolean)]</title>
<path fill="none" stroke="#000000" d="M1968.4308,-7720.2674C2179.9214,-7733.1523 2498.6205,-7752.5687 2710.7312,-7765.4914"/>
<polygon fill="#000000" stroke="#000000" points="2710.556,-7768.9871 2720.7503,-7766.1018 2710.9817,-7762.0001 2710.556,-7768.9871"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N] -->
<g id="node1243" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-68372.9355" rx="444.5404" ry="26.7407"/>
<text text-anchor="start" x="265.5494" y="-68376.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N]</text>
<text text-anchor="middle" x="572.0494" y="-68361.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B] -->
<g id="node1244" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-68444.9355" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="364.5494" y="-68448.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B]</text>
<text text-anchor="middle" x="572.0494" y="-68433.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1245" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="9131.2303" cy="-17291.9355" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="8908.7303" y="-17295.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="9131.2303" y="-17280.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node1246" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="6222.2346" cy="-17439.9355" rx="512.8049" ry="26.7407"/>
<text text-anchor="start" x="5867.7346" y="-17443.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="6222.2346" y="-17428.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 506ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1264" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M6557.1849,-17419.5861C6625.8917,-17399.2974 6690.6531,-17365.1582 6734.887,-17308.9355 6745.7774,-17295.0936 6734.0442,-16690.1673 6742.887,-16674.9355 7244.8666,-15810.2728 7754.7426,-15908.3196 8682.2174,-15534.9355 9066.23,-15380.3393 9179.4758,-15384.3183 9588.2431,-15318.9355 10497.6365,-15173.4772 10737.4352,-15227.9355 11658.3883,-15227.9355 11658.3883,-15227.9355 11658.3883,-15227.9355 13131.0282,-15227.9355 13573.0707,-15227.9355 13685.3471,-15205.4892 14125.4422,-15246.9355 16299.7297,-15451.7012 16802.0817,-15803.9388 18969.484,-16071.9355 19294.8272,-16112.1638 19378.1039,-16102.7235 19704.8751,-16128.9355 19770.067,-16134.1649 19843.5007,-16140.2566 19900.0872,-16144.9941"/>
<polygon fill="#000000" stroke="#000000" points="19899.8348,-16148.4851 19910.0922,-16145.8323 19900.4193,-16141.5096 19899.8348,-16148.4851"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node1643" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="7234.3262" cy="-17458.9355" rx="491.3784" ry="26.7407"/>
<text text-anchor="start" x="6894.8262" y="-17462.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="7234.3262" y="-17447.7355" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 577ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1421" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M6704.9375,-17448.9973C6723.0792,-17449.3379 6741.261,-17449.6792 6759.3893,-17450.0196"/>
<polygon fill="#000000" stroke="#000000" points="6759.3905,-17453.5201 6769.4545,-17450.2085 6759.522,-17446.5213 6759.3905,-17453.5201"/>
</g>
<!-- scala.reflect.ClassTag[String =&gt; Boolean] -->
<g id="node1247" class="node">
<title>scala.reflect.ClassTag[String =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-8062.9355" rx="174.8109" ry="26.7407"/>
<text text-anchor="start" x="3955.2721" y="-8066.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[String =&gt; Boolean]</text>
<text text-anchor="middle" x="4070.7721" y="-8051.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.math.BigInt] -->
<g id="node1248" class="node">
<title>org.scalacheck.Shrink[scala.math.BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-50840.9355" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="459.0494" y="-50844.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[scala.math.BigInt]</text>
<text text-anchor="middle" x="572.0494" y="-50829.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.math.BigInt]&#45;&gt;Fractional[scala.math.BigInt] -->
<g id="edge493" class="edge">
<title>org.scalacheck.Shrink[scala.math.BigInt]&#45;&gt;Fractional[scala.math.BigInt]</title>
<path fill="none" stroke="#000000" d="M743.2759,-50842.2442C979.0554,-50844.0463 1398.8923,-50847.2551 1614.1427,-50848.9002"/>
<polygon fill="#000000" stroke="#000000" points="1614.2101,-50852.4007 1624.2366,-50848.9774 1614.2636,-50845.4009 1614.2101,-50852.4007"/>
</g>
<!-- org.scalacheck.Shrink[scala.math.BigInt]&#45;&gt;Integral[scala.math.BigInt] -->
<g id="edge534" class="edge">
<title>org.scalacheck.Shrink[scala.math.BigInt]&#45;&gt;Integral[scala.math.BigInt]</title>
<path fill="none" stroke="#000000" d="M734.2385,-50832.2583C972.6308,-50819.5042 1412.4563,-50795.9732 1626.3483,-50784.5298"/>
<polygon fill="#000000" stroke="#000000" points="1626.5625,-50788.0235 1636.3612,-50783.9941 1626.1885,-50781.0335 1626.5625,-50788.0235"/>
</g>
<!-- Vector[io.circe.Json] =&gt; Traversable[io.circe.Json] -->
<g id="node1249" class="node">
<title>Vector[io.circe.Json] =&gt; Traversable[io.circe.Json]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-9294.9355" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="5027.7166" y="-9298.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Vector[io.circe.Json] =&gt; Traversable[io.circe.Json]</text>
<text text-anchor="middle" x="5167.7166" y="-9283.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION) -->
<g id="node1250" class="node">
<title>(Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-68516.9355" rx="260.8448" ry="26.7407"/>
<text text-anchor="start" x="395.5494" y="-68520.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-68505.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Decoder[Array[String]] -->
<g id="node1253" class="node">
<title>io.circe.Decoder[Array[String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-10962.9355" rx="133.7865" ry="26.7407"/>
<text text-anchor="start" x="3984.2721" y="-10966.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Array[String]]</text>
<text text-anchor="middle" x="4070.7721" y="-10951.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- io.circe.Decoder[Array[String]]&#45;&gt;io.circe.Decoder[String] -->
<g id="edge1199" class="edge">
<title>io.circe.Decoder[Array[String]]&#45;&gt;io.circe.Decoder[String]</title>
<path fill="none" stroke="#000000" d="M4197.4153,-10971.6533C4341.169,-10978.7083 4563.7929,-10980.1088 4625.8509,-10926.9355 4638.2973,-10916.2711 4621.5988,-10901.8225 4633.8509,-10890.9355 4755.9877,-10782.4079 4961.3538,-10797.2407 5078.5787,-10817.3433"/>
<polygon fill="#000000" stroke="#000000" points="5078.1436,-10820.8205 5088.5997,-10819.1115 5079.36,-10813.927 5078.1436,-10820.8205"/>
</g>
<!-- io.circe.Decoder[Array[String]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,String,Traversable[String] with Array[String]] -->
<g id="edge748" class="edge">
<title>io.circe.Decoder[Array[String]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,String,Traversable[String] with Array[String]]</title>
<path fill="none" stroke="#000000" d="M4202.8165,-10967.269C4353.3452,-10972.2092 4605.5807,-10980.4871 4814.409,-10987.3405"/>
<polygon fill="#000000" stroke="#000000" points="4814.5241,-10990.8461 4824.6335,-10987.6761 4814.7537,-10983.8499 4814.5241,-10990.8461"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,String,Array[String]] -->
<g id="node1759" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,String,Array[String]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-10926.9355" rx="280.943" ry="26.7407"/>
<text text-anchor="start" x="4977.2166" y="-10930.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,String,Array[String]]</text>
<text text-anchor="middle" x="5167.7166" y="-10915.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Decoder[Array[String]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,String,Array[String]] -->
<g id="edge1247" class="edge">
<title>io.circe.Decoder[Array[String]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,String,Array[String]]</title>
<path fill="none" stroke="#000000" d="M4202.8165,-10958.6021C4372.5661,-10953.0311 4671.6542,-10943.2155 4891.9788,-10935.9848"/>
<polygon fill="#000000" stroke="#000000" points="4892.2012,-10939.4795 4902.081,-10935.6533 4891.9715,-10932.4833 4892.2012,-10939.4795"/>
</g>
<!-- io.circe.Decoder[Set[T]] -->
<g id="node1254" class="node">
<title>io.circe.Decoder[Set[T]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-66140.9355" rx="106.1321" ry="26.7407"/>
<text text-anchor="start" x="505.0494" y="-66144.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Set[T]]</text>
<text text-anchor="middle" x="572.0494" y="-66129.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- io.circe.Decoder[Set[T]]&#45;&gt;io.circe.Decoder[T] -->
<g id="edge209" class="edge">
<title>io.circe.Decoder[Set[T]]&#45;&gt;io.circe.Decoder[T]</title>
<path fill="none" stroke="#000000" d="M678.3658,-66140.9355C904.8843,-66140.9355 1432.2409,-66140.9355 1651.3836,-66140.9355"/>
<polygon fill="#000000" stroke="#000000" points="1651.5836,-66144.4356 1661.5836,-66140.9355 1651.5836,-66137.4356 1651.5836,-66144.4356"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F] -->
<g id="node1256" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-68588.9355" rx="292.9846" ry="26.7407"/>
<text text-anchor="start" x="373.0494" y="-68592.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F]</text>
<text text-anchor="middle" x="572.0494" y="-68577.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Throwable -->
<g id="node1258" class="node">
<title>Unit =&gt; Throwable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-68660.9355" rx="86.9483" ry="26.7407"/>
<text text-anchor="start" x="518.5494" y="-68664.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Throwable</text>
<text text-anchor="middle" x="572.0494" y="-68649.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder.Result[WeekDay$2.Value] =&gt; ?{def isEmpty: ?} -->
<g id="node1259" class="node">
<title>io.circe.Decoder.Result[WeekDay$2.Value] =&gt; ?{def isEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-45494.9355" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="389.0494" y="-45498.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[WeekDay$2.Value] =&gt; ?{def isEmpty: ?}</text>
<text text-anchor="middle" x="572.0494" y="-45483.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.Decoder.Result[WeekDay$2.Value] =&gt; ?{def isEmpty: ?}&#45;&gt;cats.Foldable[io.circe.Decoder.Result] -->
<g id="edge856" class="edge">
<title>io.circe.Decoder.Result[WeekDay$2.Value] =&gt; ?{def isEmpty: ?}&#45;&gt;cats.Foldable[io.circe.Decoder.Result]</title>
<path fill="none" stroke="#000000" d="M842.2042,-45494.9355C1069.177,-45494.9355 1386.5512,-45494.9355 1579.5417,-45494.9355"/>
<polygon fill="#000000" stroke="#000000" points="1579.7804,-45498.4356 1589.7803,-45494.9355 1579.7803,-45491.4356 1579.7804,-45498.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[io.circe.Json],io.circe.Json,Iterable[io.circe.Json]] -->
<g id="node1260" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[io.circe.Json],io.circe.Json,Iterable[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-68732.9355" rx="493.6211" ry="26.7407"/>
<text text-anchor="start" x="231.0494" y="-68736.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[io.circe.Json],io.circe.Json,Iterable[io.circe.Json]]</text>
<text text-anchor="middle" x="572.0494" y="-68721.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- String(&#39;An optional array position decoder&#39;) =&gt; ?{def should: ?} -->
<g id="node1261" class="node">
<title>String(&#39;An optional array position decoder&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-27278.9355" rx="259.5164" ry="26.7407"/>
<text text-anchor="start" x="396.5494" y="-27282.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;An optional array position decoder&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-27267.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;An optional array position decoder&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1289" class="edge">
<title>String(&#39;An optional array position decoder&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M704.0756,-27255.7706C826.4701,-27241.2318 1009.4363,-27237.706 1144.0988,-27314.9355 1503.0487,-27520.795 1691.8903,-28036.2949 1738.1988,-28178.2475"/>
<polygon fill="#000000" stroke="#000000" points="1734.8839,-28179.3721 1741.2871,-28187.8131 1741.5454,-28177.2214 1734.8839,-28179.3721"/>
</g>
<!-- io.circe.Decoder[(String, String, String)] -->
<g id="node1262" class="node">
<title>io.circe.Decoder[(String, String, String)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-10818.9355" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="3959.2721" y="-10822.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(String, String, String)]</text>
<text text-anchor="middle" x="4070.7721" y="-10807.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- io.circe.Decoder[(String, String, String)]&#45;&gt;io.circe.Decoder[String] -->
<g id="edge297" class="edge">
<title>io.circe.Decoder[(String, String, String)]&#45;&gt;io.circe.Decoder[String]</title>
<path fill="none" stroke="#000000" d="M4239.1667,-10821.6988C4464.4065,-10825.3948 4857.8884,-10831.8515 5052.2845,-10835.0414"/>
<polygon fill="#000000" stroke="#000000" points="5052.4699,-10838.5448 5062.526,-10835.2095 5052.5848,-10831.5458 5052.4699,-10838.5448"/>
</g>
<!-- io.circe.Decoder.Result[Short] =&gt; ?{def ===: ?} -->
<g id="node1263" class="node">
<title>io.circe.Decoder.Result[Short] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-68804.9355" rx="202.4653" ry="26.7407"/>
<text text-anchor="start" x="437.0494" y="-68808.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[Short] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-68793.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge725" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M16841.2473,-16790.7961C17007.0151,-16708.1653 17519.2125,-16452.8484 17696.57,-16364.4404"/>
<polygon fill="#000000" stroke="#000000" points="17698.3764,-16367.4507 17705.7647,-16359.8571 17695.2535,-16361.1859 17698.3764,-16367.4507"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge812" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M16826.9647,-16843.4676C16989.5909,-16954.9909 17644.3564,-17388.2789 18252.963,-17567.9355 18559.9256,-17658.5489 18649.8277,-17623.9155 18969.484,-17639.9355 19295.9148,-17656.2951 19461.3371,-17857.9125 19704.8751,-17639.9355 19716.8705,-17629.1991 19710.4138,-17583.8447 19712.8751,-17567.9355 19798.3111,-17015.6998 19948.5775,-16351.3141 19985.7879,-16189.6743"/>
<polygon fill="#000000" stroke="#000000" points="19989.2373,-16190.2917 19988.0735,-16179.761 19982.4162,-16188.719 19989.2373,-16190.2917"/>
</g>
<!-- org.scalacheck.Arbitrary[Vector[Int]] -->
<g id="node1265" class="node">
<title>org.scalacheck.Arbitrary[Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-5390.9355" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="3968.2721" y="-5394.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Vector[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-5379.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Vector[Int]]&#45;&gt;Vector[Int] =&gt; Traversable[Int] -->
<g id="edge1287" class="edge">
<title>org.scalacheck.Arbitrary[Vector[Int]]&#45;&gt;Vector[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M4224.4526,-5395.9791C4437.3628,-5402.9665 4819.1187,-5415.4951 5025.6687,-5422.2738"/>
<polygon fill="#000000" stroke="#000000" points="5025.5648,-5425.7721 5035.6743,-5422.6021 5025.7945,-5418.7759 5025.5648,-5425.7721"/>
</g>
<!-- scala.reflect.ClassTag[Vector[Int]] -->
<g id="node1460" class="node">
<title>scala.reflect.ClassTag[Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-5282.9355" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="5072.7166" y="-5286.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Vector[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-5271.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Vector[Int]]&#45;&gt;scala.reflect.ClassTag[Vector[Int]] -->
<g id="edge156" class="edge">
<title>org.scalacheck.Arbitrary[Vector[Int]]&#45;&gt;scala.reflect.ClassTag[Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M4216.9696,-5400.5536C4360.584,-5406.7253 4566.5429,-5405.7525 4625.8509,-5354.9355 4638.2973,-5344.2711 4621.4183,-5329.6159 4633.8509,-5318.9355 4755.7261,-5214.2377 4956.6088,-5234.5793 5074.109,-5258.7926"/>
<polygon fill="#000000" stroke="#000000" points="5073.659,-5262.2746 5084.1664,-5260.9166 5075.1055,-5255.4257 5073.659,-5262.2746"/>
</g>
<!-- org.scalacheck.Arbitrary[Vector[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge509" class="edge">
<title>org.scalacheck.Arbitrary[Vector[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4211.6325,-5402.5853C4357.4383,-5411.1656 4571.4033,-5412.8495 4625.8509,-5354.9355 4638.1804,-5341.8212 4628.42,-2780.0968 4633.8509,-2762.9355 4736.4942,-2438.5952 5030.6092,-2131.7058 5132.4783,-2032.3536"/>
<polygon fill="#000000" stroke="#000000" points="5135.0204,-2034.7638 5139.759,-2025.2876 5130.1453,-2029.7405 5135.0204,-2034.7638"/>
</g>
<!-- org.scalacheck.Arbitrary[Vector[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Vector[Int]] -->
<g id="edge1321" class="edge">
<title>org.scalacheck.Arbitrary[Vector[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M4224.4526,-5385.892C4421.3617,-5379.4297 4762.6912,-5368.2278 4976.2766,-5361.2183"/>
<polygon fill="#000000" stroke="#000000" points="4976.4699,-5364.7139 4986.3496,-5360.8877 4976.2402,-5357.7177 4976.4699,-5364.7139"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M] -->
<g id="node1266" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-68876.9355" rx="430.7561" ry="26.7407"/>
<text text-anchor="start" x="275.5494" y="-68880.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M]</text>
<text text-anchor="middle" x="572.0494" y="-68865.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[io.circe.Json] -->
<g id="node1269" class="node">
<title>io.circe.Decoder[io.circe.Json]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-68948.9355" rx="130.2154" ry="26.7407"/>
<text text-anchor="start" x="488.0494" y="-68952.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[io.circe.Json]</text>
<text text-anchor="middle" x="572.0494" y="-68937.7355" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 52ms</text>
</g>
<!-- String(&#39;apply&#39;) =&gt; ?{def should: ?} -->
<g id="node1270" class="node">
<title>String(&#39;apply&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-27206.9355" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="476.5494" y="-27210.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;apply&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-27195.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;apply&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1206" class="edge">
<title>String(&#39;apply&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M671.8412,-27187.2344C792.7434,-27168.8872 998.3169,-27155.8937 1144.0988,-27242.9355 1521.2614,-27468.1276 1698.4247,-28028.646 1739.8696,-28177.9217"/>
<polygon fill="#000000" stroke="#000000" points="1736.5993,-28179.2307 1742.62,-28187.9486 1743.35,-28177.3789 1736.5993,-28179.2307"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O] -->
<g id="node1271" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-69020.9355" rx="480.251" ry="26.7407"/>
<text text-anchor="start" x="240.5494" y="-69024.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O]</text>
<text text-anchor="middle" x="572.0494" y="-69009.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L] -->
<g id="node1272" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-69092.9355" rx="372.7906" ry="26.7407"/>
<text text-anchor="start" x="316.5494" y="-69096.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L]</text>
<text text-anchor="middle" x="572.0494" y="-69081.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1273" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-17966.9355" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="11503.3883" y="-17970.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="11658.3883" y="-17955.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc22] -->
<g id="node1274" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc22]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-66428.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-66432.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc22]</text>
<text text-anchor="middle" x="572.0494" y="-66417.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc22]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc22]] -->
<g id="edge1112" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc22]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc22]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-66428.9355C944.0278,-66428.9355 1209.2209,-66428.9355 1419.4845,-66428.9355"/>
<polygon fill="#000000" stroke="#000000" points="1419.7702,-66432.4356 1429.7702,-66428.9355 1419.7702,-66425.4356 1419.7702,-66432.4356"/>
</g>
<!-- org.scalacheck.Shrink[(String, io.circe.Json)] -->
<g id="node1275" class="node">
<title>org.scalacheck.Shrink[(String, io.circe.Json)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-6110.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="3947.2721" y="-6114.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(String, io.circe.Json)]</text>
<text text-anchor="middle" x="4070.7721" y="-6099.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 31ms</text>
</g>
<!-- org.scalacheck.Shrink[(String, io.circe.Json)]&#45;&gt;org.scalacheck.Shrink[io.circe.Json] -->
<g id="edge1067" class="edge">
<title>org.scalacheck.Shrink[(String, io.circe.Json)]&#45;&gt;org.scalacheck.Shrink[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M4234.0305,-6098.0615C4378.47,-6090.6985 4574.1152,-6091.9395 4625.8509,-6146.9355 4646.4828,-6168.8676 4614.0536,-8292.2473 4633.8509,-8314.9355 4736.9485,-8433.0882 4933.7605,-8428.7133 5057.4659,-8411.582"/>
<polygon fill="#000000" stroke="#000000" points="5058.3208,-8414.9953 5067.7218,-8410.1094 5057.3258,-8408.0663 5058.3208,-8414.9953"/>
</g>
<!-- org.scalacheck.Shrink[(String, io.circe.Json)]&#45;&gt;Fractional[(String, io.circe.Json)] -->
<g id="edge1290" class="edge">
<title>org.scalacheck.Shrink[(String, io.circe.Json)]&#45;&gt;Fractional[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M4256.8538,-6110.9355C4471.1927,-6110.9355 4819.18,-6110.9355 5017.2174,-6110.9355"/>
<polygon fill="#000000" stroke="#000000" points="5017.4098,-6114.4356 5027.4098,-6110.9355 5017.4097,-6107.4356 5017.4098,-6114.4356"/>
</g>
<!-- org.scalacheck.Shrink[(String, io.circe.Json)]&#45;&gt;org.scalacheck.Shrink[String] -->
<g id="edge1194" class="edge">
<title>org.scalacheck.Shrink[(String, io.circe.Json)]&#45;&gt;org.scalacheck.Shrink[String]</title>
<path fill="none" stroke="#000000" d="M4234.029,-6098.063C4378.4673,-6090.7011 4574.1118,-6091.9428 4625.8509,-6146.9355 4645.799,-6168.138 4613.9301,-8221.7075 4633.8509,-8242.9355 4748.3911,-8364.9918 4966.1706,-8333.0648 5085.1171,-8303.449"/>
<polygon fill="#000000" stroke="#000000" points="5086.0801,-8306.8156 5094.9099,-8300.9602 5084.3559,-8300.0313 5086.0801,-8306.8156"/>
</g>
<!-- Integral[(String, io.circe.Json)] -->
<g id="node1821" class="node">
<title>Integral[(String, io.circe.Json)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-6182.9355" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="5083.2166" y="-6186.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(String, io.circe.Json)]</text>
<text text-anchor="middle" x="5167.7166" y="-6171.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 4ms</text>
</g>
<!-- org.scalacheck.Shrink[(String, io.circe.Json)]&#45;&gt;Integral[(String, io.circe.Json)] -->
<g id="edge653" class="edge">
<title>org.scalacheck.Shrink[(String, io.circe.Json)]&#45;&gt;Integral[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M4240.833,-6121.8954C4350.6932,-6128.9927 4496.7246,-6138.4589 4625.8509,-6146.9355 4764.6356,-6156.0463 4923.4046,-6166.6111 5033.0408,-6173.929"/>
<polygon fill="#000000" stroke="#000000" points="5032.9522,-6177.4307 5043.1631,-6174.6047 5033.4185,-6170.4463 5032.9522,-6177.4307"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C] -->
<g id="node1277" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-69164.9355" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="370.5494" y="-69168.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C]</text>
<text text-anchor="middle" x="572.0494" y="-69153.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[scala.collection.immutable.Map[String,io.circe.Json]] -->
<g id="node1278" class="node">
<title>shapeless.IsTuple[scala.collection.immutable.Map[String,io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="13803.7086" cy="-16188.9355" rx="291.1561" ry="26.7407"/>
<text text-anchor="start" x="13605.7086" y="-16192.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[scala.collection.immutable.Map[String,io.circe.Json]]</text>
<text text-anchor="middle" x="13803.7086" y="-16177.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(java.util.UUID, Int)]&#45;&gt;scala.reflect.ClassTag[(java.util.UUID, Int)] -->
<g id="edge1260" class="edge">
<title>org.scalacheck.Arbitrary[(java.util.UUID, Int)]&#45;&gt;scala.reflect.ClassTag[(java.util.UUID, Int)]</title>
<path fill="none" stroke="#000000" d="M4258.72,-3656.7674C4460.1146,-3650.1579 4777.9368,-3639.7275 4979.4529,-3633.1141"/>
<polygon fill="#000000" stroke="#000000" points="4979.6785,-3636.6086 4989.5582,-3632.7824 4979.4488,-3629.6124 4979.6785,-3636.6086"/>
</g>
<!-- org.scalacheck.Arbitrary[java.util.UUID] -->
<g id="node1344" class="node">
<title>org.scalacheck.Arbitrary[java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-3698.9355" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="5054.7166" y="-3702.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[java.util.UUID]</text>
<text text-anchor="middle" x="5167.7166" y="-3687.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(java.util.UUID, Int)]&#45;&gt;org.scalacheck.Arbitrary[java.util.UUID] -->
<g id="edge237" class="edge">
<title>org.scalacheck.Arbitrary[(java.util.UUID, Int)]&#45;&gt;org.scalacheck.Arbitrary[java.util.UUID]</title>
<path fill="none" stroke="#000000" d="M4258.72,-3669.1037C4463.5765,-3675.8268 4788.8978,-3686.5033 4989.7407,-3693.0947"/>
<polygon fill="#000000" stroke="#000000" points="4989.6954,-3696.595 4999.8049,-3693.425 4989.9251,-3689.5987 4989.6954,-3696.595"/>
</g>
<!-- org.scalacheck.Arbitrary[(java.util.UUID, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1044" class="edge">
<title>org.scalacheck.Arbitrary[(java.util.UUID, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4239.5259,-3676.0204C4383.3311,-3683.019 4574.626,-3681.0858 4625.8509,-3626.9355 4642.3447,-3609.4998 4626.5388,-2785.7956 4633.8509,-2762.9355 4737.4947,-2438.9135 5030.9669,-2131.8196 5132.5742,-2032.3841"/>
<polygon fill="#000000" stroke="#000000" points="5135.1138,-2034.7964 5139.836,-2025.3121 5130.23,-2029.7816 5135.1138,-2034.7964"/>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc21] -->
<g id="node1280" class="node">
<title>Fractional[ProductCodecSuite.this.Cc21]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-48788.9355" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="1637.604" y="-48792.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc21]</text>
<text text-anchor="middle" x="1749.604" y="-48777.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.PartialOrder[Option[io.circe.Json]] -->
<g id="node1281" class="node">
<title>cats.kernel.PartialOrder[Option[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-16996.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="12289.4214" y="-17000.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.PartialOrder[Option[io.circe.Json]]</text>
<text text-anchor="middle" x="12415.9214" y="-16985.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 34ms</text>
</g>
<!-- cats.kernel.PartialOrder[Option[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json] -->
<g id="edge1057" class="edge">
<title>cats.kernel.PartialOrder[Option[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12499.5453,-16972.7789C12573.6546,-16951.0001 12684.6068,-16917.4858 12780.0814,-16884.9355 12783.6756,-16883.7102 12784.4335,-16882.9903 12788.0814,-16881.9355 12863.6396,-16860.0892 12950.4046,-16842.1922 13017.7577,-16829.8314"/>
<polygon fill="#000000" stroke="#000000" points="13018.7613,-16833.2063 13027.9727,-16827.9718 13017.5075,-16826.3195 13018.7613,-16833.2063"/>
</g>
<!-- cats.kernel.PartialOrder[Option[io.circe.Json]]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json] -->
<g id="edge1263" class="edge">
<title>cats.kernel.PartialOrder[Option[io.circe.Json]]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12565.8313,-16980.3746C12690.218,-16966.6332 12865.912,-16947.2237 12988.2755,-16933.7059"/>
<polygon fill="#000000" stroke="#000000" points="12988.9114,-16937.157 12998.4666,-16932.58 12988.1427,-16930.1993 12988.9114,-16937.157"/>
</g>
<!-- org.scalacheck.Shrink[List[(String, io.circe.Json)]] -->
<g id="node1282" class="node">
<title>org.scalacheck.Shrink[List[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-5030.9355" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="2792.9013" y="-5034.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[List[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="2931.4013" y="-5019.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 61ms</text>
</g>
<!-- org.scalacheck.Shrink[List[(String, io.circe.Json)]]&#45;&gt;org.scalacheck.util.Buildable[(String, io.circe.Json),List[(String, io.circe.Json)]] -->
<g id="edge21" class="edge">
<title>org.scalacheck.Shrink[List[(String, io.circe.Json)]]&#45;&gt;org.scalacheck.util.Buildable[(String, io.circe.Json),List[(String, io.circe.Json)]]</title>
<path fill="none" stroke="#000000" d="M3117.9509,-5042.7241C3304.6287,-5054.5208 3593.6089,-5072.7823 3804.3911,-5086.1022"/>
<polygon fill="#000000" stroke="#000000" points="3804.4826,-5089.6149 3814.6835,-5086.7526 3804.9241,-5082.6288 3804.4826,-5089.6149"/>
</g>
<!-- org.scalacheck.Shrink[List[(String, io.circe.Json)]]&#45;&gt;Fractional[List[(String, io.circe.Json)]] -->
<g id="edge427" class="edge">
<title>org.scalacheck.Shrink[List[(String, io.circe.Json)]]&#45;&gt;Fractional[List[(String, io.circe.Json)]]</title>
<path fill="none" stroke="#000000" d="M2977.2149,-5004.6491C3073.3318,-4950.9992 3304.6318,-4829.6865 3515.6933,-4778.9355 3642.4825,-4748.4483 3789.956,-4740.1074 3901.0158,-4739.0319"/>
<polygon fill="#000000" stroke="#000000" points="3901.3365,-4742.5296 3911.309,-4738.952 3901.2821,-4735.5299 3901.3365,-4742.5296"/>
</g>
<!-- org.scalacheck.Shrink[List[(String, io.circe.Json)]]&#45;&gt;List[(String, io.circe.Json)] =&gt; Traversable[(String, io.circe.Json)] -->
<g id="edge1398" class="edge">
<title>org.scalacheck.Shrink[List[(String, io.circe.Json)]]&#45;&gt;List[(String, io.circe.Json)] =&gt; Traversable[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M3138.7238,-5030.9355C3321.8903,-5030.9355 3590.5012,-5030.9355 3792.3631,-5030.9355"/>
<polygon fill="#000000" stroke="#000000" points="3792.5288,-5034.4356 3802.5287,-5030.9355 3792.5287,-5027.4356 3792.5288,-5034.4356"/>
</g>
<!-- org.scalacheck.Shrink[List[(String, io.circe.Json)]]&#45;&gt;org.scalacheck.Shrink[(String, io.circe.Json)] -->
<g id="edge348" class="edge">
<title>org.scalacheck.Shrink[List[(String, io.circe.Json)]]&#45;&gt;org.scalacheck.Shrink[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M3036.7085,-5007.742C3168.6622,-4985.6079 3391.544,-4972.4582 3507.6933,-5102.9355 3525.6463,-5123.1033 3497.148,-6055.311 3515.6933,-6074.9355 3566.2977,-6128.4849 3753.7806,-6130.9882 3896.9918,-6124.2726"/>
<polygon fill="#000000" stroke="#000000" points="3897.4063,-6127.7566 3907.224,-6123.7737 3897.0654,-6120.7649 3897.4063,-6127.7566"/>
</g>
<!-- Integral[List[(String, io.circe.Json)]] -->
<g id="node1503" class="node">
<title>Integral[List[(String, io.circe.Json)]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-4670.9355" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="3971.2721" y="-4674.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[List[(String, io.circe.Json)]]</text>
<text text-anchor="middle" x="4070.7721" y="-4659.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 5ms</text>
</g>
<!-- org.scalacheck.Shrink[List[(String, io.circe.Json)]]&#45;&gt;Integral[List[(String, io.circe.Json)]] -->
<g id="edge127" class="edge">
<title>org.scalacheck.Shrink[List[(String, io.circe.Json)]]&#45;&gt;Integral[List[(String, io.circe.Json)]]</title>
<path fill="none" stroke="#000000" d="M2966.1467,-5004.2732C3053.0052,-4939.348 3288.9292,-4773.5036 3515.6933,-4706.9355 3646.5642,-4668.5176 3801.986,-4661.5329 3915.034,-4662.9912"/>
<polygon fill="#000000" stroke="#000000" points="3915.0998,-4666.4925 3925.1521,-4663.1457 3915.2068,-4659.4933 3915.0998,-4666.4925"/>
</g>
<!-- org.scalacheck.util.Buildable[(String, Int),Map[String,Int]] -->
<g id="node1283" class="node">
<title>org.scalacheck.util.Buildable[(String, Int),Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-5534.9355" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="3909.7721" y="-5538.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(String, Int),Map[String,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-5523.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 8ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(String, Int),Map[String,Int]] -->
<g id="node1390" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(String, Int),Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-5570.9355" rx="285.8424" ry="26.7407"/>
<text text-anchor="start" x="4973.7166" y="-5574.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(String, Int),Map[String,Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-5559.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(String, Int),Map[String,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(String, Int),Map[String,Int]] -->
<g id="edge1039" class="edge">
<title>org.scalacheck.util.Buildable[(String, Int),Map[String,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(String, Int),Map[String,Int]]</title>
<path fill="none" stroke="#000000" d="M4300.3936,-5542.4714C4471.3183,-5548.0808 4705.5368,-5555.7675 4887.4963,-5561.7392"/>
<polygon fill="#000000" stroke="#000000" points="4887.6501,-5565.246 4897.7596,-5562.076 4887.8798,-5558.2498 4887.6501,-5565.246"/>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Set[Int]] -->
<g id="node1284" class="node">
<title>cats.kernel.Eq[scala.collection.immutable.Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-42668.9355" rx="208.693" ry="26.7407"/>
<text text-anchor="start" x="432.5494" y="-42672.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.collection.immutable.Set[Int]]</text>
<text text-anchor="middle" x="572.0494" y="-42657.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Set[Int]]&#45;&gt;shapeless.IsTuple[scala.collection.immutable.Set[Int]] -->
<g id="edge1269" class="edge">
<title>cats.kernel.Eq[scala.collection.immutable.Set[Int]]&#45;&gt;shapeless.IsTuple[scala.collection.immutable.Set[Int]]</title>
<path fill="none" stroke="#000000" d="M775.1484,-42675.1447C983.6894,-42681.5201 1307.4929,-42691.4194 1523.9202,-42698.036"/>
<polygon fill="#000000" stroke="#000000" points="1524.0419,-42701.5412 1534.1442,-42698.3485 1524.2558,-42694.5445 1524.0419,-42701.5412"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Int,Int]] -->
<g id="node1285" class="node">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Int,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-3770.9355" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="2749.9013" y="-3774.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[scala.collection.immutable.Map[Int,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-3759.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Int,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Int, Int)] -->
<g id="edge72" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Int,Int]]&#45;&gt;org.scalacheck.Arbitrary[(Int, Int)]</title>
<path fill="none" stroke="#000000" d="M3118.0528,-3751.6218C3248.2612,-3727.7442 3414.7445,-3674.3471 3507.6933,-3554.9355 3517.5816,-3542.232 3504.0518,-3494.0547 3515.6933,-3482.9355 3572.4678,-3428.7086 3781.0473,-3428.843 3925.6913,-3436.1596"/>
<polygon fill="#000000" stroke="#000000" points="3925.8231,-3439.6712 3935.9922,-3436.6982 3926.1887,-3432.6808 3925.8231,-3439.6712"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Int,Int]]&#45;&gt;scala.collection.immutable.Map[Int,Int] =&gt; Traversable[(Int, Int)] -->
<g id="edge293" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Int,Int]]&#45;&gt;scala.collection.immutable.Map[Int,Int] =&gt; Traversable[(Int, Int)]</title>
<path fill="none" stroke="#000000" d="M3088.2982,-3792.7684C3205.7827,-3808.5085 3370.56,-3829.2986 3515.6933,-3842.9355 3615.9827,-3852.3589 3726.6993,-3860.0798 3822.6959,-3865.9211"/>
<polygon fill="#000000" stroke="#000000" points="3822.6381,-3869.4239 3832.8312,-3866.5342 3823.0608,-3862.4367 3822.6381,-3869.4239"/>
</g>
<!-- scala.reflect.ClassTag[scala.collection.immutable.Map[Int,Int]] -->
<g id="node1439" class="node">
<title>scala.reflect.ClassTag[scala.collection.immutable.Map[Int,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-3734.9355" rx="257.2738" ry="26.7407"/>
<text text-anchor="start" x="3896.7721" y="-3738.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.collection.immutable.Map[Int,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-3723.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Int,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Map[Int,Int]] -->
<g id="edge557" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Int,Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Map[Int,Int]]</title>
<path fill="none" stroke="#000000" d="M3187.0983,-3762.8564C3374.0916,-3756.9481 3626.7214,-3748.9659 3813.9721,-3743.0495"/>
<polygon fill="#000000" stroke="#000000" points="3814.356,-3746.5392 3824.2405,-3742.7251 3814.1349,-3739.5427 3814.356,-3746.5392"/>
</g>
<!-- org.scalacheck.util.Buildable[(Int, Int),scala.collection.immutable.Map[Int,Int]] -->
<g id="node1577" class="node">
<title>org.scalacheck.util.Buildable[(Int, Int),scala.collection.immutable.Map[Int,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-3806.9355" rx="320.1388" ry="26.7407"/>
<text text-anchor="start" x="3852.2721" y="-3810.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(Int, Int),scala.collection.immutable.Map[Int,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-3795.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Map[Int,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Int, Int),scala.collection.immutable.Map[Int,Int]] -->
<g id="edge1171" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Map[Int,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Int, Int),scala.collection.immutable.Map[Int,Int]]</title>
<path fill="none" stroke="#000000" d="M3187.0983,-3779.0147C3356.854,-3784.3783 3580.7029,-3791.4511 3760.6241,-3797.136"/>
<polygon fill="#000000" stroke="#000000" points="3760.6752,-3800.6393 3770.7808,-3797.4569 3760.8963,-3793.6428 3760.6752,-3800.6393"/>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.numbers.testing.JsonNumberString] -->
<g id="node1286" class="node">
<title>org.scalacheck.Arbitrary[io.circe.numbers.testing.JsonNumberString]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-66500.9355" rx="280.943" ry="26.7407"/>
<text text-anchor="start" x="381.5494" y="-66504.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.numbers.testing.JsonNumberString]</text>
<text text-anchor="middle" x="572.0494" y="-66489.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.numbers.testing.JsonNumberString]&#45;&gt;scala.reflect.ClassTag[io.circe.numbers.testing.JsonNumberString] -->
<g id="edge107" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.numbers.testing.JsonNumberString]&#45;&gt;scala.reflect.ClassTag[io.circe.numbers.testing.JsonNumberString]</title>
<path fill="none" stroke="#000000" d="M852.9808,-66500.9355C1039.3561,-66500.9355 1282.9911,-66500.9355 1469.2484,-66500.9355"/>
<polygon fill="#000000" stroke="#000000" points="1469.4701,-66504.4356 1479.4701,-66500.9355 1469.4701,-66497.4356 1469.4701,-66504.4356"/>
</g>
<!-- scala.reflect.ClassTag[(Symbol, Int)] -->
<g id="node1287" class="node">
<title>scala.reflect.ClassTag[(Symbol, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-4058.9355" rx="154.7129" ry="26.7407"/>
<text text-anchor="start" x="5066.2166" y="-4062.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Symbol, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-4047.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;f&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1288" class="node">
<title>String(&#39;f&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-69236.9355" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="501.0494" y="-69240.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;f&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="572.0494" y="-69225.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 3ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O] -->
<g id="node1290" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-69308.9355" rx="415.5577" ry="26.7407"/>
<text text-anchor="start" x="286.0494" y="-69312.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O]</text>
<text text-anchor="middle" x="572.0494" y="-69297.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[Byte] -->
<g id="node1291" class="node">
<title>cats.Eq[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-35810.9355" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="2891.4013" y="-35814.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Byte]</text>
<text text-anchor="middle" x="2931.4013" y="-35799.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 7ms</text>
</g>
<!-- cats.Eq[Byte]&#45;&gt;shapeless.IsTuple[Byte] -->
<g id="edge311" class="edge">
<title>cats.Eq[Byte]&#45;&gt;shapeless.IsTuple[Byte]</title>
<path fill="none" stroke="#000000" d="M2998.832,-35815.1158C3106.4322,-35821.7935 3323.6084,-35835.3012 3507.6933,-35846.9355 3664.6295,-35856.8541 3846.1579,-35868.4892 3959.7265,-35875.7879"/>
<polygon fill="#000000" stroke="#000000" points="3959.6171,-35879.288 3969.8211,-35876.4368 3960.0662,-35872.3025 3959.6171,-35879.288"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1292" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-12690.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="3918.7721" y="-12694.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-12679.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 28ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1408" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4269.1162,-12677.9552C4407.3995,-12673.5613 4575.7448,-12679.0777 4625.8509,-12726.9355 4637.4924,-12738.0547 4623.3697,-12786.7166 4633.8509,-12798.9355 4740.8453,-12923.6689 4943.4692,-12945.9748 5065.9837,-12947.064"/>
<polygon fill="#000000" stroke="#000000" points="5066.1075,-12950.5645 5076.1224,-12947.1074 5066.1375,-12943.5646 5066.1075,-12950.5645"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge153" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4297.0619,-12690.9355C4451.278,-12690.9355 4658.1407,-12690.9355 4831.5321,-12690.9355"/>
<polygon fill="#000000" stroke="#000000" points="4831.5916,-12694.4356 4841.5916,-12690.9355 4831.5915,-12687.4356 4831.5916,-12694.4356"/>
</g>
<!-- String(&#39;JsonObject.apply&#39;) =&gt; ?{def should: ?} -->
<g id="node1293" class="node">
<title>String(&#39;JsonObject.apply&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-27134.9355" rx="191.752" ry="26.7407"/>
<text text-anchor="start" x="444.5494" y="-27138.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;JsonObject.apply&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-27123.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;JsonObject.apply&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge83" class="edge">
<title>String(&#39;JsonObject.apply&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M682.3584,-27112.9305C804.7957,-27094.6906 1003.6219,-27084.0264 1144.0988,-27170.9355 1539.929,-27415.8246 1704.7371,-28021.8394 1741.4042,-28177.8393"/>
<polygon fill="#000000" stroke="#000000" points="1738.0616,-28178.919 1743.73,-28187.87 1744.8807,-28177.3378 1738.0616,-28178.919"/>
</g>
<!-- cats.kernel.Eq[io.circe.AccumulatingDecoder[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]] -->
<g id="node1294" class="node">
<title>cats.kernel.Eq[io.circe.AccumulatingDecoder[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]]</title>
<ellipse fill="none" stroke="#000000" cx="17757.7665" cy="-14364.9355" rx="478.9227" ry="26.7407"/>
<text text-anchor="start" x="17427.2665" y="-14368.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.AccumulatingDecoder[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]]</text>
<text text-anchor="middle" x="17757.7665" y="-14353.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 37ms</text>
</g>
<!-- cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]] -->
<g id="node1456" class="node">
<title>cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="18607.2235" cy="-14472.9355" rx="354.0212" ry="26.7407"/>
<text text-anchor="start" x="18364.7235" y="-14476.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]</text>
<text text-anchor="middle" x="18607.2235" y="-14461.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 35ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.AccumulatingDecoder[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]]&#45;&gt;cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]] -->
<g id="edge827" class="edge">
<title>cats.kernel.Eq[io.circe.AccumulatingDecoder[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]]&#45;&gt;cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]</title>
<path fill="none" stroke="#000000" d="M18092.1526,-14384.2045C18143.4398,-14388.7303 18195.6935,-14394.2446 18244.963,-14400.9355 18326.281,-14411.9787 18416.8309,-14429.9749 18487.0589,-14445.2122"/>
<polygon fill="#000000" stroke="#000000" points="18486.3144,-14448.632 18496.8305,-14447.3429 18487.8057,-14441.7927 18486.3144,-14448.632"/>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc20] -->
<g id="node1295" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc20]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-69380.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="1617.104" y="-69384.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc20]</text>
<text text-anchor="middle" x="1749.604" y="-69369.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Integral[String] -->
<g id="node1296" class="node">
<title>Integral[String]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-8278.9355" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="6175.2346" y="-8282.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[String]</text>
<text text-anchor="middle" x="6222.2346" y="-8267.7355" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 31ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T] -->
<g id="node1297" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-69452.9355" rx="494.0354" ry="26.7407"/>
<text text-anchor="start" x="230.5494" y="-69456.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor20[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T]</text>
<text text-anchor="middle" x="572.0494" y="-69441.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- n2.type =&gt; ?{def ===: ?} -->
<g id="node1298" class="node">
<title>n2.type =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-44414.9355" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="1677.604" y="-44418.7355" font-family="Times,serif" font-size="14.00" fill="#000000">n2.type =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="1749.604" y="-44403.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- n2.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonNumber] -->
<g id="edge1438" class="edge">
<title>n2.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonNumber]</title>
<path fill="none" stroke="#000000" d="M1859.4579,-44408.3616C1979.3211,-44401.1782 2176.8635,-44389.3089 2347.1092,-44378.9355 2502.4816,-44369.4684 2681.0845,-44358.4434 2799.5062,-44351.1132"/>
<polygon fill="#000000" stroke="#000000" points="2799.9406,-44354.5931 2809.7052,-44350.4819 2799.508,-44347.6065 2799.9406,-44354.5931"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; PrinterWriterReuseSuite.this.PropertyCheckConfigParam -->
<g id="node1299" class="node">
<title>(Any =&gt; Nothing) =&gt; PrinterWriterReuseSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-69524.9355" rx="321.9673" ry="26.7407"/>
<text text-anchor="start" x="352.5494" y="-69528.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; PrinterWriterReuseSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-69513.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.ObjectEncoder[Int]] -->
<g id="node1300" class="node">
<title>org.scalacheck.Arbitrary[io.circe.ObjectEncoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-3158.9355" rx="218.492" ry="26.7407"/>
<text text-anchor="start" x="2784.9013" y="-3162.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.ObjectEncoder[Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-3147.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.ObjectEncoder[Int]]&#45;&gt;org.scalacheck.Cogen[Int] -->
<g id="edge1540" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.ObjectEncoder[Int]]&#45;&gt;org.scalacheck.Cogen[Int]</title>
<path fill="none" stroke="#000000" d="M3126.4651,-3146.8212C3238.0926,-3139.8709 3380.7598,-3130.9579 3507.6933,-3122.9355 3660.8336,-3113.2569 3837.3909,-3101.9437 3951.3677,-3094.6203"/>
<polygon fill="#000000" stroke="#000000" points="3951.7592,-3098.1024 3961.5141,-3093.9683 3951.3102,-3091.1169 3951.7592,-3098.1024"/>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc2] -->
<g id="node1301" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc2]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-69596.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="445.5494" y="-69600.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc2]</text>
<text text-anchor="middle" x="572.0494" y="-69585.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc2]] -->
<g id="node1882" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc2]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-69596.9355" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="1552.604" y="-69600.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc2]]</text>
<text text-anchor="middle" x="1749.604" y="-69585.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc2]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc2]] -->
<g id="edge68" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc2]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc2]]</title>
<path fill="none" stroke="#000000" d="M762.5526,-69596.9355C948.131,-69596.9355 1233.0868,-69596.9355 1449.2048,-69596.9355"/>
<polygon fill="#000000" stroke="#000000" points="1449.4435,-69600.4356 1459.4434,-69596.9355 1449.4434,-69593.4356 1449.4435,-69600.4356"/>
</g>
<!-- cats.kernel.Monoid[Byte] -->
<g id="node1303" class="node">
<title>cats.kernel.Monoid[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-45422.9355" rx="111.0315" ry="26.7407"/>
<text text-anchor="start" x="2860.9013" y="-45426.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Monoid[Byte]</text>
<text text-anchor="middle" x="2931.4013" y="-45411.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H] -->
<g id="node1304" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-69668.9355" rx="320.1388" ry="26.7407"/>
<text text-anchor="start" x="353.5494" y="-69672.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H]</text>
<text text-anchor="middle" x="572.0494" y="-69657.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def contains(x$1: ? &gt;: Char(&#39;e&#39;)): ?} -->
<g id="node1306" class="node">
<title>String =&gt; ?{def contains(x$1: ? &gt;: Char(&#39;e&#39;)): ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-69740.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="439.5494" y="-69744.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def contains(x$1: ? &gt;: Char(&#39;e&#39;)): ?}</text>
<text text-anchor="middle" x="572.0494" y="-69729.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;decodeSet&#39;) =&gt; ?{def should: ?} -->
<g id="node1307" class="node">
<title>String(&#39;decodeSet&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-27062.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="463.5494" y="-27066.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;decodeSet&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-27051.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;decodeSet&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge29" class="edge">
<title>String(&#39;decodeSet&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M673.2702,-27041.7014C795.1335,-27021.9544 1001.2032,-27007.6938 1144.0988,-27098.9355 1559.0477,-27363.8891 1710.8432,-28015.9842 1742.8162,-28178.028"/>
<polygon fill="#000000" stroke="#000000" points="1739.4073,-28178.8347 1744.7504,-28187.9836 1746.2789,-28177.4996 1739.4073,-28178.8347"/>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc16]] -->
<g id="node1308" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc16]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-69812.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="1531.604" y="-69816.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc16]]</text>
<text text-anchor="middle" x="1749.604" y="-69801.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[Unit] -->
<g id="node1310" class="node">
<title>io.circe.Encoder[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-69884.9355" rx="98.0761" ry="26.7407"/>
<text text-anchor="start" x="510.5494" y="-69888.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Unit]</text>
<text text-anchor="middle" x="572.0494" y="-69873.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1311" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-20510.9355" rx="432.0845" ry="26.7407"/>
<text text-anchor="start" x="274.5494" y="-20514.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-20499.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 52ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge923" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M1004.2581,-20510.9355C1062.106,-20510.9355 1122.1283,-20510.9355 1181.8615,-20510.9355"/>
<polygon fill="#000000" stroke="#000000" points="1182.2251,-20514.4356 1192.2251,-20510.9355 1182.225,-20507.4356 1182.2251,-20514.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1545" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M916.1132,-20494.6676C1017.4161,-20497.8074 1110.2665,-20511.306 1144.0988,-20546.9355 1157.8712,-20561.4396 1138.307,-21252.4499 1152.0988,-21266.9355 1288.1112,-21409.791 1550.8937,-21360.6025 1677.6971,-21325.6135"/>
<polygon fill="#000000" stroke="#000000" points="1678.6436,-21328.9831 1687.3261,-21322.9114 1676.7523,-21322.2434 1678.6436,-21328.9831"/>
</g>
<!-- cats.Eq[Option[Vector[String]]]&#45;&gt;cats.kernel.Eq[Vector[String]] -->
<g id="edge137" class="edge">
<title>cats.Eq[Option[Vector[String]]]&#45;&gt;cats.kernel.Eq[Vector[String]]</title>
<path fill="none" stroke="#000000" d="M10950.0737,-14934.7396C11041.067,-14948.6571 11179.0593,-14953.4182 11265.0151,-14878.9355 11276.747,-14868.7695 11261.8134,-14855.6831 11273.0151,-14844.9355 11339.6225,-14781.0287 11443.6756,-14764.0403 11526.8787,-14762.2073"/>
<polygon fill="#000000" stroke="#000000" points="11526.9718,-14765.7064 11536.9181,-14762.0568 11526.8668,-14758.7072 11526.9718,-14765.7064"/>
</g>
<!-- cats.Eq[Option[Vector[String]]]&#45;&gt;cats.kernel.Order[Vector[String]] -->
<g id="edge803" class="edge">
<title>cats.Eq[Option[Vector[String]]]&#45;&gt;cats.kernel.Order[Vector[String]]</title>
<path fill="none" stroke="#000000" d="M10990.5257,-14909.3211C11133.8979,-14903.2275 11362.2563,-14893.5218 11511.2599,-14887.1888"/>
<polygon fill="#000000" stroke="#000000" points="11511.5608,-14890.6793 11521.4032,-14886.7577 11511.2635,-14883.6856 11511.5608,-14890.6793"/>
</g>
<!-- org.scalatest.enablers.CheckerAsserting[Unit] -->
<g id="node1313" class="node">
<title>org.scalatest.enablers.CheckerAsserting[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-69956.9355" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="447.0494" y="-69960.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalatest.enablers.CheckerAsserting[Unit]</text>
<text text-anchor="middle" x="572.0494" y="-69945.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K] -->
<g id="node1314" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-70028.9355" rx="409.3297" ry="26.7407"/>
<text text-anchor="start" x="290.5494" y="-70032.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K]</text>
<text text-anchor="middle" x="572.0494" y="-70017.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Either[Int,String]]&#45;&gt;Integral[Either[Int,String]] -->
<g id="edge946" class="edge">
<title>org.scalacheck.Shrink[Either[Int,String]]&#45;&gt;Integral[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M3080.6861,-8486.3245C3231.9184,-8477.2344 3451.3673,-8475.4097 3507.6933,-8534.9355 3529.0197,-8557.4735 3494.4951,-9629.2771 3515.6933,-9651.9355 3572.8693,-9713.0502 3806.8033,-9710.2317 3952.1181,-9702.0182"/>
<polygon fill="#000000" stroke="#000000" points="3952.6442,-9705.4936 3962.4239,-9701.4184 3952.2374,-9698.5055 3952.6442,-9705.4936"/>
</g>
<!-- org.scalacheck.Shrink[Either[Int,String]]&#45;&gt;org.scalacheck.Shrink[String] -->
<g id="edge1304" class="edge">
<title>org.scalacheck.Shrink[Either[Int,String]]&#45;&gt;org.scalacheck.Shrink[String]</title>
<path fill="none" stroke="#000000" d="M3100.3845,-8497.8125C3523.814,-8494.6116 4598.4415,-8483.9404 4625.8509,-8457.9355 4642.6664,-8441.9818 4617.9833,-8370.8323 4633.8509,-8353.9355 4742.7542,-8237.9692 4942.3895,-8242.9326 5064.2654,-8259.3643"/>
<polygon fill="#000000" stroke="#000000" points="5063.9677,-8262.8567 5074.356,-8260.7749 5064.9368,-8255.9241 5063.9677,-8262.8567"/>
</g>
<!-- org.scalacheck.Shrink[Either[Int,String]]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge1191" class="edge">
<title>org.scalacheck.Shrink[Either[Int,String]]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M3100.1242,-8500.903C3250.6979,-8498.6247 3455.2808,-8484.2075 3507.6933,-8424.9355 3522.3405,-8408.3714 3500.288,-6848.7972 3515.6933,-6832.9355 3601.6835,-6744.3978 4538.3606,-6881.9913 4625.8509,-6794.9355 4641.9309,-6778.9355 4618.0381,-6607.1997 4633.8509,-6590.9355 4689.3664,-6533.8357 4910,-6537.0736 5049.6686,-6545.4393"/>
<polygon fill="#000000" stroke="#000000" points="5049.8018,-6548.954 5059.9982,-6546.0761 5050.2326,-6541.9673 5049.8018,-6548.954"/>
</g>
<!-- ParserSuite.this.PropertyCheckConfigurable -->
<g id="node1317" class="node">
<title>ParserSuite.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-70100.9355" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="451.5494" y="-70104.7355" font-family="Times,serif" font-size="14.00" fill="#000000">ParserSuite.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-70089.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc18] -->
<g id="node1318" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc18]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-49904.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-49908.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc18]</text>
<text text-anchor="middle" x="572.0494" y="-49893.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc18]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc18]] -->
<g id="edge1" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc18]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc18]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-49904.9355C944.0278,-49904.9355 1209.2209,-49904.9355 1419.4845,-49904.9355"/>
<polygon fill="#000000" stroke="#000000" points="1419.7702,-49908.4356 1429.7702,-49904.9355 1419.7702,-49901.4356 1419.7702,-49908.4356"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam -->
<g id="node1319" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-70172.9355" rx="343.8079" ry="26.7407"/>
<text text-anchor="start" x="337.0494" y="-70176.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-70161.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Int,Int]] -->
<g id="node1320" class="node">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Int,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-3914.9355" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="2756.9013" y="-3918.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[scala.collection.immutable.Map[Int,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-3903.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Int,Int]]&#45;&gt;org.scalacheck.Shrink[(Int, Int)] -->
<g id="edge846" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Int,Int]]&#45;&gt;org.scalacheck.Shrink[(Int, Int)]</title>
<path fill="none" stroke="#000000" d="M3168.6687,-3925.5287C3290.6162,-3944.4645 3429.6458,-3989.8594 3507.6933,-4094.9355 3521.4084,-4113.4003 3499.8833,-4906.2295 3515.6933,-4922.9355 3571.0357,-4981.4147 3789.7854,-4978.9856 3935.5885,-4970.1838"/>
<polygon fill="#000000" stroke="#000000" points="3936.1932,-4973.653 3945.957,-4969.5398 3935.7592,-4966.6665 3936.1932,-4973.653"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Int,Int]]&#45;&gt;scala.collection.immutable.Map[Int,Int] =&gt; Traversable[(Int, Int)] -->
<g id="edge1521" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Int,Int]]&#45;&gt;scala.collection.immutable.Map[Int,Int] =&gt; Traversable[(Int, Int)]</title>
<path fill="none" stroke="#000000" d="M3178.6278,-3907.1241C3363.4856,-3901.2832 3615.8869,-3893.3083 3805.0545,-3887.3313"/>
<polygon fill="#000000" stroke="#000000" points="3805.2627,-3890.8265 3815.1471,-3887.0124 3805.0415,-3883.83 3805.2627,-3890.8265"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Int,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Int, Int),scala.collection.immutable.Map[Int,Int]] -->
<g id="edge724" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Int,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Int, Int),scala.collection.immutable.Map[Int,Int]]</title>
<path fill="none" stroke="#000000" d="M3086.1412,-3893.3918C3203.7602,-3877.618 3369.6696,-3856.6562 3515.6933,-3842.9355 3604.8004,-3834.5629 3702.1392,-3827.5342 3790.071,-3821.9738"/>
<polygon fill="#000000" stroke="#000000" points="3790.4339,-3825.458 3800.1946,-3821.3374 3789.9947,-3818.4718 3790.4339,-3825.458"/>
</g>
<!-- Integral[scala.collection.immutable.Map[Int,Int]] -->
<g id="node1617" class="node">
<title>Integral[scala.collection.immutable.Map[Int,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-3950.9355" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="3935.2721" y="-3954.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[scala.collection.immutable.Map[Int,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-3939.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Int,Int]]&#45;&gt;Integral[scala.collection.immutable.Map[Int,Int]] -->
<g id="edge309" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Int,Int]]&#45;&gt;Integral[scala.collection.immutable.Map[Int,Int]]</title>
<path fill="none" stroke="#000000" d="M3178.6278,-3922.747C3383.0966,-3929.2075 3670.2001,-3938.2789 3862.968,-3944.3697"/>
<polygon fill="#000000" stroke="#000000" points="3863.1182,-3947.8761 3873.2238,-3944.6937 3863.3393,-3940.8796 3863.1182,-3947.8761"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; ((?A, ?B, ?C) =&gt; ?ASSERTION) -->
<g id="node1321" class="node">
<title>(Any =&gt; Nothing) =&gt; ((?A, ?B, ?C) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-70244.9355" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="418.0494" y="-70248.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; ((?A, ?B, ?C) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-70233.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B] -->
<g id="node1322" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-70316.9355" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="409.5494" y="-70320.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B]</text>
<text text-anchor="middle" x="572.0494" y="-70305.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc5] -->
<g id="node1324" class="node">
<title>Fractional[ProductCodecSuite.this.Cc5]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-42038.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="1641.104" y="-42042.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc5]</text>
<text text-anchor="middle" x="1749.604" y="-42027.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; SyntaxSuite.this.PropertyCheckConfigParam -->
<g id="node1325" class="node">
<title>(Any =&gt; Nothing) =&gt; SyntaxSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-70388.9355" rx="273.8007" ry="26.7407"/>
<text text-anchor="start" x="386.5494" y="-70392.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; SyntaxSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-70377.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L] -->
<g id="node1326" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-70460.9355" rx="422.2855" ry="26.7407"/>
<text text-anchor="start" x="281.5494" y="-70464.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L]</text>
<text text-anchor="middle" x="572.0494" y="-70449.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;org.scalacheck.Shrink[(String, io.circe.Json, Boolean)] -->
<g id="edge1278" class="edge">
<title>org.scalacheck.Shrink[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;org.scalacheck.Shrink[(String, io.circe.Json, Boolean)]</title>
<path fill="none" stroke="#000000" d="M2990.5717,-6828.3464C3113.4065,-6886.8214 3394.0676,-7040.2352 3507.6933,-7266.9355 3518.3551,-7288.2075 3499.1002,-7463.8815 3515.6933,-7480.9355 3563.6539,-7530.2286 3730.08,-7535.8139 3868.2987,-7531.0689"/>
<polygon fill="#000000" stroke="#000000" points="3868.7539,-7534.5548 3878.6202,-7530.6938 3868.4996,-7527.5594 3868.7539,-7534.5548"/>
</g>
<!-- org.scalacheck.Shrink[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;Either[String,(String, io.circe.Json, Boolean)] =&gt; Traversable[(String, (String, io.circe.Json, Boolean))] -->
<g id="edge94" class="edge">
<title>org.scalacheck.Shrink[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;Either[String,(String, io.circe.Json, Boolean)] =&gt; Traversable[(String, (String, io.circe.Json, Boolean))]</title>
<path fill="none" stroke="#000000" d="M2970.207,-6775.2558C3060.8067,-6714.6085 3295.3287,-6567.0123 3515.6933,-6506.9355 3562.1086,-6494.2816 3611.4795,-6485.1893 3660.8981,-6478.7516"/>
<polygon fill="#000000" stroke="#000000" points="3661.6305,-6482.1869 3671.1117,-6477.4586 3660.7512,-6475.2424 3661.6305,-6482.1869"/>
</g>
<!-- org.scalacheck.Shrink[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;org.scalacheck.Shrink[String] -->
<g id="edge1395" class="edge">
<title>org.scalacheck.Shrink[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;org.scalacheck.Shrink[String]</title>
<path fill="none" stroke="#000000" d="M2991.5676,-6828.3093C3115.6453,-6886.4586 3397.5257,-7038.8915 3507.6933,-7266.9355 3519.4869,-7291.3481 3496.6529,-8223.6346 3515.6933,-8242.9355 3542.169,-8269.7736 4639.5823,-8276.8109 5030.8856,-8278.4688"/>
<polygon fill="#000000" stroke="#000000" points="5031.1123,-8281.9697 5041.1269,-8278.5116 5031.1417,-8274.9697 5031.1123,-8281.9697"/>
</g>
<!-- Fractional[Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="node1520" class="node">
<title>Fractional[Either[String,(String, io.circe.Json, Boolean)]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-6326.9355" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="3914.2721" y="-6330.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[Either[String,(String, io.circe.Json, Boolean)]]</text>
<text text-anchor="middle" x="4070.7721" y="-6315.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;Fractional[Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="edge1166" class="edge">
<title>org.scalacheck.Shrink[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;Fractional[Either[String,(String, io.circe.Json, Boolean)]]</title>
<path fill="none" stroke="#000000" d="M2955.6789,-6774.9127C3029.9421,-6694.4047 3264.3295,-6455.9918 3515.6933,-6362.9355 3625.6891,-6322.2145 3756.2571,-6312.0296 3863.1172,-6312.5716"/>
<polygon fill="#000000" stroke="#000000" points="3863.3542,-6316.0736 3873.383,-6312.6569 3863.4124,-6309.0739 3863.3542,-6316.0736"/>
</g>
<!-- Integral[Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="node1592" class="node">
<title>Integral[Either[String,(String, io.circe.Json, Boolean)]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-6614.9355" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="3920.2721" y="-6618.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Either[String,(String, io.circe.Json, Boolean)]]</text>
<text text-anchor="middle" x="4070.7721" y="-6603.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;Integral[Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="edge1445" class="edge">
<title>org.scalacheck.Shrink[Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;Integral[Either[String,(String, io.circe.Json, Boolean)]]</title>
<path fill="none" stroke="#000000" d="M3011.6727,-6776.051C3123.362,-6741.2228 3332.5806,-6680.2668 3515.6933,-6650.9355 3621.3646,-6634.009 3739.5653,-6624.9909 3839.6459,-6620.2063"/>
<polygon fill="#000000" stroke="#000000" points="3840.0659,-6623.6906 3849.8919,-6619.7281 3839.7396,-6616.6982 3840.0659,-6623.6906"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Gen[=?Nothing] -->
<g id="node1330" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Gen[=?Nothing]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-70532.9355" rx="251.0458" ry="26.7407"/>
<text text-anchor="start" x="402.5494" y="-70536.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalacheck.Gen[=?Nothing]</text>
<text text-anchor="middle" x="572.0494" y="-70521.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.Decoder[(Int, String)] -->
<g id="node1332" class="node">
<title>io.circe.Decoder[(Int, String)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-14418.9355" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="3988.7721" y="-14422.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, String)]</text>
<text text-anchor="middle" x="4070.7721" y="-14407.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- io.circe.Decoder[(Int, String)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge889" class="edge">
<title>io.circe.Decoder[(Int, String)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4188.6549,-14429.121C4333.8506,-14438.7598 4568.3837,-14443.8923 4625.8509,-14382.9355 4638.8846,-14369.1104 4621.3039,-13029.2039 4633.8509,-13014.9355 4745.1316,-12888.3881 4964.24,-12904.3117 5084.2595,-12924.8426"/>
<polygon fill="#000000" stroke="#000000" points="5083.6867,-12928.2955 5094.1421,-12926.5819 5084.9002,-12921.4014 5083.6867,-12928.2955"/>
</g>
<!-- io.circe.Decoder[(Int, String)]&#45;&gt;io.circe.Decoder[String] -->
<g id="edge241" class="edge">
<title>io.circe.Decoder[(Int, String)]&#45;&gt;io.circe.Decoder[String]</title>
<path fill="none" stroke="#000000" d="M4188.6887,-14429.1528C4333.9205,-14438.8256 4568.4922,-14443.9944 4625.8509,-14382.9355 4642.4544,-14365.261 4617.5686,-10908.9064 4633.8509,-10890.9355 4746.403,-10766.711 4964.4935,-10790.4409 5084.1495,-10815.5069"/>
<polygon fill="#000000" stroke="#000000" points="5083.4913,-10818.9452 5094.003,-10817.6208 5084.9597,-10812.101 5083.4913,-10818.9452"/>
</g>
<!-- io.circe.Decoder[(Int, String)]&#45;&gt;io.circe.KeyDecoder[Int] -->
<g id="edge1411" class="edge">
<title>io.circe.Decoder[(Int, String)]&#45;&gt;io.circe.KeyDecoder[Int]</title>
<path fill="none" stroke="#000000" d="M4192.5963,-14426.7812C4305.0616,-14434.0373 4476.7293,-14445.1463 4625.8509,-14454.9355 4773.3025,-14464.6152 4943.3123,-14475.9363 5052.9891,-14483.2608"/>
<polygon fill="#000000" stroke="#000000" points="5052.8709,-14486.7606 5063.082,-14483.9349 5053.3375,-14479.7762 5052.8709,-14486.7606"/>
</g>
<!-- io.circe.Decoder[(Int, String)]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,(Int, String),scala.collection.Map[Int,String] with (Int, String)] -->
<g id="edge1088" class="edge">
<title>io.circe.Decoder[(Int, String)]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,(Int, String),scala.collection.Map[Int,String] with (Int, String)]</title>
<path fill="none" stroke="#000000" d="M4198.2144,-14418.9355C4325.3655,-14418.9355 4528.2493,-14418.9355 4715.6354,-14418.9355"/>
<polygon fill="#000000" stroke="#000000" points="4715.6785,-14422.4356 4725.6785,-14418.9355 4715.6784,-14415.4356 4715.6785,-14422.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1333" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-630.9355" rx="384.8322" ry="26.7407"/>
<text text-anchor="start" x="3806.7721" y="-634.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-619.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 73ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge278" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4455.5858,-630.9355C4561.7593,-630.9355 4676.9399,-630.9355 4783.102,-630.9355"/>
<polygon fill="#000000" stroke="#000000" points="4783.3471,-634.4356 4793.347,-630.9355 4783.347,-627.4356 4783.3471,-634.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1162" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4382.2381,-615.1651C4489.055,-617.0684 4590.6524,-629.6118 4625.8509,-666.9355 4638.2008,-680.0311 4621.5179,-1949.8242 4633.8509,-1962.9355 4748.6896,-2085.0214 4966.8435,-2052.8986 5085.6358,-2023.2938"/>
<polygon fill="#000000" stroke="#000000" points="5086.5857,-2026.6637 5095.4143,-2020.8064 5084.8601,-2019.8797 5086.5857,-2026.6637"/>
</g>
<!-- String(&#39;foldWith&#39;) =&gt; ?{def should: ?} -->
<g id="node1334" class="node">
<title>String(&#39;foldWith&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-26990.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="466.5494" y="-26994.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;foldWith&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-26979.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- String(&#39;foldWith&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1564" class="edge">
<title>String(&#39;foldWith&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M727.0317,-26983.836C872.673,-26980.1259 1077.8709,-26983.4372 1144.0988,-27026.9355 1577.892,-27311.8504 1716.2813,-28008.8587 1743.9742,-28177.6673"/>
<polygon fill="#000000" stroke="#000000" points="1740.559,-28178.4742 1745.605,-28187.7901 1747.4699,-28177.3607 1740.559,-28178.4742"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; MemoizedPiecesSuite.this.PropertyCheckConfigParam -->
<g id="node1335" class="node">
<title>(Any =&gt; Nothing) =&gt; MemoizedPiecesSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-70604.9355" rx="313.4968" ry="26.7407"/>
<text text-anchor="start" x="358.5494" y="-70608.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; MemoizedPiecesSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-70593.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- cats.Eq[Option[io.circe.Json]] -->
<g id="node1336" class="node">
<title>cats.Eq[Option[io.circe.Json]]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="12415.9214" cy="-17068.9355" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="12333.9214" y="-17072.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[io.circe.Json]]</text>
<text text-anchor="middle" x="12415.9214" y="-17057.7355" font-family="Times,serif" font-size="14.00" fill="#000000">118 times = 1119ms</text>
</g>
<!-- cats.Eq[Option[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json] -->
<g id="edge243" class="edge">
<title>cats.Eq[Option[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12502.3058,-17088.6783C12585.9461,-17102.1467 12710.082,-17106.2025 12780.0814,-17032.9355 12803.2941,-17008.6393 12766.1835,-16907.4231 12788.0814,-16881.9355 12838.3183,-16823.4639 12922.9134,-16805.4945 12995.512,-16802.2512"/>
<polygon fill="#000000" stroke="#000000" points="12995.8028,-16805.7432 13005.6715,-16801.8886 12995.553,-16798.7476 12995.8028,-16805.7432"/>
</g>
<!-- cats.Eq[Option[io.circe.Json]]&#45;&gt;cats.kernel.Eq[io.circe.Json] -->
<g id="edge971" class="edge">
<title>cats.Eq[Option[io.circe.Json]]&#45;&gt;cats.kernel.Eq[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12533.9294,-17058.7593C12801.4478,-17035.3314 13434.0026,-16977.7707 13473.975,-16953.9355 13564.0193,-16900.243 13727.4581,-16617.758 13783.9064,-16516.8247"/>
<polygon fill="#000000" stroke="#000000" points="13787.0612,-16518.3536 13788.8748,-16507.9151 13780.9476,-16514.9443 13787.0612,-16518.3536"/>
</g>
<!-- cats.Eq[Option[io.circe.Json]]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json] -->
<g id="edge203" class="edge">
<title>cats.Eq[Option[io.circe.Json]]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12505.6496,-17088.0114C12588.1644,-17099.8425 12708.2698,-17101.6991 12780.0814,-17032.9355 12798.2404,-17015.5473 12770.5586,-16994.9646 12788.0814,-16976.9355 12836.8432,-16926.7653 12911.6671,-16909.9121 12978.9957,-16906.4996"/>
<polygon fill="#000000" stroke="#000000" points="12979.4524,-16909.9839 12989.3008,-16906.0776 12979.166,-16902.9898 12979.4524,-16909.9839"/>
</g>
<!-- cats.Eq[Option[io.circe.Json]]&#45;&gt;shapeless.IsTuple[Option[io.circe.Json]] -->
<g id="edge949" class="edge">
<title>cats.Eq[Option[io.circe.Json]]&#45;&gt;shapeless.IsTuple[Option[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M12543.356,-17069.6484C12657.6138,-17070.2875 12826.3815,-17071.2315 12953.7819,-17071.9441"/>
<polygon fill="#000000" stroke="#000000" points="12954.02,-17075.4454 12964.0394,-17072.0015 12954.0592,-17068.4455 12954.02,-17075.4454"/>
</g>
<!-- scala.collection.immutable.Map[String,List[Boolean]] =&gt; ?{def asJson: ?} -->
<g id="node1337" class="node">
<title>scala.collection.immutable.Map[String,List[Boolean]] =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-70676.9355" rx="301.8692" ry="26.7407"/>
<text text-anchor="start" x="366.5494" y="-70680.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[String,List[Boolean]] =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-70665.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalatest.enablers.TableAsserting[org.scalatest.Assertion] -->
<g id="node1338" class="node">
<title>org.scalatest.enablers.TableAsserting[org.scalatest.Assertion]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-70748.9355" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="404.5494" y="-70752.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalatest.enablers.TableAsserting[org.scalatest.Assertion]</text>
<text text-anchor="middle" x="572.0494" y="-70737.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc4] -->
<g id="node1339" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc4]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-65780.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="445.5494" y="-65784.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc4]</text>
<text text-anchor="middle" x="572.0494" y="-65769.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc4]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc4]] -->
<g id="edge1364" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc4]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc4]]</title>
<path fill="none" stroke="#000000" d="M762.5526,-65780.9355C948.131,-65780.9355 1233.0868,-65780.9355 1449.2048,-65780.9355"/>
<polygon fill="#000000" stroke="#000000" points="1449.4435,-65784.4356 1459.4434,-65780.9355 1449.4434,-65777.4356 1449.4435,-65784.4356"/>
</g>
<!-- io.circe.Decoder[cats.data.NonEmptyList[String]] -->
<g id="node1340" class="node">
<title>io.circe.Decoder[cats.data.NonEmptyList[String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-10530.9355" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="3933.7721" y="-10534.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[cats.data.NonEmptyList[String]]</text>
<text text-anchor="middle" x="4070.7721" y="-10519.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- io.circe.Decoder[cats.data.NonEmptyList[String]]&#45;&gt;io.circe.Decoder[String] -->
<g id="edge37" class="edge">
<title>io.circe.Decoder[cats.data.NonEmptyList[String]]&#45;&gt;io.circe.Decoder[String]</title>
<path fill="none" stroke="#000000" d="M4253.0021,-10518.5157C4394.02,-10513.1939 4573.7807,-10517.2018 4625.8509,-10566.9355 4637.4924,-10578.0547 4623.9407,-10626.249 4633.8509,-10638.9355 4735.3633,-10768.8855 4931.2566,-10813.552 5055.432,-10828.902"/>
<polygon fill="#000000" stroke="#000000" points="5055.3872,-10832.4213 5065.7309,-10830.1283 5056.2149,-10825.4704 5055.3872,-10832.4213"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,String,Traversable[String] with cats.data.NonEmptyList[String]] -->
<g id="node1799" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,String,Traversable[String] with cats.data.NonEmptyList[String]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-10530.9355" rx="449.0256" ry="26.7407"/>
<text text-anchor="start" x="4858.2166" y="-10534.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,String,Traversable[String] with cats.data.NonEmptyList[String]]</text>
<text text-anchor="middle" x="5167.7166" y="-10519.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[cats.data.NonEmptyList[String]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,String,Traversable[String] with cats.data.NonEmptyList[String]] -->
<g id="edge1486" class="edge">
<title>io.circe.Decoder[cats.data.NonEmptyList[String]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,String,Traversable[String] with cats.data.NonEmptyList[String]]</title>
<path fill="none" stroke="#000000" d="M4276.1336,-10530.9355C4398.0012,-10530.9355 4557.6381,-10530.9355 4708.108,-10530.9355"/>
<polygon fill="#000000" stroke="#000000" points="4708.465,-10534.4356 4718.4649,-10530.9355 4708.4649,-10527.4356 4708.465,-10534.4356"/>
</g>
<!-- org.scalacheck.Shrink[scala.util.Either[Int,String]] -->
<g id="node1341" class="node">
<title>org.scalacheck.Shrink[scala.util.Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-8206.9355" rx="206.4504" ry="26.7407"/>
<text text-anchor="start" x="3932.7721" y="-8210.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[scala.util.Either[Int,String]]</text>
<text text-anchor="middle" x="4070.7721" y="-8195.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.util.Either[Int,String]]&#45;&gt;Integral[scala.util.Either[Int,String]] -->
<g id="edge834" class="edge">
<title>org.scalacheck.Shrink[scala.util.Either[Int,String]]&#45;&gt;Integral[scala.util.Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M4255.8031,-8195.0084C4363.7367,-8188.0327 4502.5064,-8179.0327 4625.8509,-8170.9355 4757.5652,-8162.289 4907.2795,-8152.3326 5015.9112,-8145.0852"/>
<polygon fill="#000000" stroke="#000000" points="5016.2184,-8148.5726 5025.9632,-8144.4145 5015.7523,-8141.5881 5016.2184,-8148.5726"/>
</g>
<!-- org.scalacheck.Shrink[scala.util.Either[Int,String]]&#45;&gt;scala.util.Either[Int,String] =&gt; Traversable[(Int, String)] -->
<g id="edge925" class="edge">
<title>org.scalacheck.Shrink[scala.util.Either[Int,String]]&#45;&gt;scala.util.Either[Int,String] =&gt; Traversable[(Int, String)]</title>
<path fill="none" stroke="#000000" d="M4277.4211,-8206.9355C4462.4459,-8206.9355 4733.7749,-8206.9355 4928.2145,-8206.9355"/>
<polygon fill="#000000" stroke="#000000" points="4928.2861,-8210.4356 4938.286,-8206.9355 4928.286,-8203.4356 4928.2861,-8210.4356"/>
</g>
<!-- org.scalacheck.Shrink[scala.util.Either[Int,String]]&#45;&gt;org.scalacheck.Shrink[String] -->
<g id="edge1180" class="edge">
<title>org.scalacheck.Shrink[scala.util.Either[Int,String]]&#45;&gt;org.scalacheck.Shrink[String]</title>
<path fill="none" stroke="#000000" d="M4255.3037,-8219.0476C4476.6988,-8233.5793 4842.2864,-8257.5753 5036.68,-8270.3347"/>
<polygon fill="#000000" stroke="#000000" points="5036.455,-8273.8274 5046.6628,-8270.99 5036.9135,-8266.8424 5036.455,-8273.8274"/>
</g>
<!-- org.scalacheck.Shrink[scala.util.Either[Int,String]]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge801" class="edge">
<title>org.scalacheck.Shrink[scala.util.Either[Int,String]]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4249.08,-8220.5192C4391.7197,-8226.9956 4575.8571,-8224.0069 4625.8509,-8170.9355 4640.8981,-8154.9621 4618.8242,-6606.9283 4633.8509,-6590.9355 4688.4615,-6532.8141 4909.9801,-6536.4636 5049.9441,-6545.1691"/>
<polygon fill="#000000" stroke="#000000" points="5050.0917,-6548.6856 5060.2947,-6545.8313 5050.5386,-6541.6999 5050.0917,-6548.6856"/>
</g>
<!-- String(&#39;findAllByKey and its alias, \\\\&#39;) =&gt; ?{def should: ?} -->
<g id="node1342" class="node">
<title>String(&#39;findAllByKey and its alias, \\\\&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-26918.9355" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="411.0494" y="-26922.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;findAllByKey and its alias, \\&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-26907.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 4ms</text>
</g>
<!-- String(&#39;findAllByKey and its alias, \\\\&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1048" class="edge">
<title>String(&#39;findAllByKey and its alias, \\\\&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M798.4244,-26910.3013C933.2215,-26909.4924 1088.5457,-26917.5111 1144.0988,-26954.9355 1597.5372,-27260.4032 1721.8229,-28003.9479 1745.1258,-28178.0385"/>
<polygon fill="#000000" stroke="#000000" points="1741.6596,-28178.5258 1746.4294,-28187.9862 1748.6003,-28177.6162 1741.6596,-28178.5258"/>
</g>
<!-- org.scalatest.words.ResultOfStringPassedToVerb =&gt; ?{def in: ?} -->
<g id="node1343" class="node">
<title>org.scalatest.words.ResultOfStringPassedToVerb =&gt; ?{def in: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-70820.9355" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="393.0494" y="-70824.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalatest.words.ResultOfStringPassedToVerb =&gt; ?{def in: ?}</text>
<text text-anchor="middle" x="572.0494" y="-70809.7355" font-family="Times,serif" font-size="14.00" fill="#000000">149 times = 70ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[Int],io.circe.Printer.Pieces,That] -->
<g id="node1345" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[Int],io.circe.Printer.Pieces,That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-70892.9355" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="363.0494" y="-70896.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[Int],io.circe.Printer.Pieces,That]</text>
<text text-anchor="middle" x="572.0494" y="-70881.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.Encoder[Option[Int]] -->
<g id="node1346" class="node">
<title>io.circe.Encoder[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-21662.9355" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="492.0494" y="-21666.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Option[Int]]</text>
<text text-anchor="middle" x="572.0494" y="-21651.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.Encoder[Option[Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1215" class="edge">
<title>io.circe.Encoder[Option[Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M692.3163,-21670.0398C809.8309,-21673.5897 992.6299,-21670.0137 1144.0988,-21626.9355 1372.8581,-21561.8758 1612.7611,-21401.4814 1707.5433,-21333.828"/>
<polygon fill="#000000" stroke="#000000" points="1709.6377,-21336.6331 1715.7244,-21327.961 1705.5583,-21330.9446 1709.6377,-21336.6331"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION) -->
<g id="node1348" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-70964.9355" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="360.0494" y="-70968.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-70953.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N] -->
<g id="node1349" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-71036.9355" rx="416.4718" ry="26.7407"/>
<text text-anchor="start" x="285.5494" y="-71040.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor14[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N]</text>
<text text-anchor="middle" x="572.0494" y="-71025.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.SemigroupK[io.circe.AccumulatingDecoder] -->
<g id="node1350" class="node">
<title>cats.SemigroupK[io.circe.AccumulatingDecoder]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-71108.9355" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="436.5494" y="-71112.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.SemigroupK[io.circe.AccumulatingDecoder]</text>
<text text-anchor="middle" x="572.0494" y="-71097.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;JsonFloat.toLong&#39;) =&gt; ?{def should: ?} -->
<g id="node1351" class="node">
<title>String(&#39;JsonFloat.toLong&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-26846.9355" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="444.0494" y="-26850.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;JsonFloat.toLong&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-26835.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;JsonFloat.toLong&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge823" class="edge">
<title>String(&#39;JsonFloat.toLong&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M754.8883,-26838.5249C898.0507,-26835.5343 1082.8539,-26840.7209 1144.0988,-26882.9355 1617.033,-27208.9182 1726.9062,-27998.2436 1746.1116,-28178.0572"/>
<polygon fill="#000000" stroke="#000000" points="1742.6371,-28178.485 1747.1535,-28188.069 1749.5995,-28177.7604 1742.6371,-28178.485"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U] -->
<g id="node1352" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-71180.9355" rx="535.9739" ry="26.7407"/>
<text text-anchor="start" x="201.0494" y="-71184.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor21[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U]</text>
<text text-anchor="middle" x="572.0494" y="-71169.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;HCursor#history&#39;) =&gt; ?{def should: ?} -->
<g id="node1353" class="node">
<title>String(&#39;HCursor#history&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-26774.9355" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="446.0494" y="-26778.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;HCursor#history&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-26763.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;HCursor#history&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1577" class="edge">
<title>String(&#39;HCursor#history&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M751.5179,-26766.2975C895.2952,-26762.957 1082.7596,-26767.7682 1144.0988,-26810.9355 1636.5454,-27157.4941 1731.7062,-27992.2978 1746.9938,-28177.9408"/>
<polygon fill="#000000" stroke="#000000" points="1743.5128,-28178.3197 1747.7961,-28188.0101 1750.4907,-28177.7636 1743.5128,-28178.3197"/>
</g>
<!-- (=&gt; Char(&#39;e&#39;)) =&gt; CharSequence -->
<g id="node1354" class="node">
<title>(=&gt; Char(&#39;e&#39;)) =&gt; CharSequence</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-71252.9355" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="483.0494" y="-71256.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Char(&#39;e&#39;)) =&gt; CharSequence</text>
<text text-anchor="middle" x="572.0494" y="-71241.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Decoder[Float]&#39;) =&gt; ?{def should: ?} -->
<g id="node1356" class="node">
<title>String(&#39;Decoder[Float]&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-26702.9355" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="450.0494" y="-26706.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Decoder[Float]&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-26691.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;Decoder[Float]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1449" class="edge">
<title>String(&#39;Decoder[Float]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M746.0108,-26694.1645C890.6161,-26690.3895 1082.3392,-26694.6418 1144.0988,-26738.9355 1656.3035,-27106.2867 1736.3494,-27986.9174 1747.8108,-28177.9659"/>
<polygon fill="#000000" stroke="#000000" points="1744.3224,-28178.2709 1748.3897,-28188.0539 1751.3109,-28177.8698 1744.3224,-28178.2709"/>
</g>
<!-- org.scalacheck.Shrink[BigInt] -->
<g id="node1357" class="node">
<title>org.scalacheck.Shrink[BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-71324.9355" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="490.0494" y="-71328.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[BigInt]</text>
<text text-anchor="middle" x="572.0494" y="-71313.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 13ms</text>
</g>
<!-- Integral[BigInt] -->
<g id="node1524" class="node">
<title>Integral[BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-71360.9355" rx="72.25" ry="26.7407"/>
<text text-anchor="start" x="1706.604" y="-71364.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[BigInt]</text>
<text text-anchor="middle" x="1749.604" y="-71349.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- org.scalacheck.Shrink[BigInt]&#45;&gt;Integral[BigInt] -->
<g id="edge1241" class="edge">
<title>org.scalacheck.Shrink[BigInt]&#45;&gt;Integral[BigInt]</title>
<path fill="none" stroke="#000000" d="M698.0684,-71328.7882C940.2317,-71336.1916 1464.5398,-71352.2206 1667.2636,-71358.4183"/>
<polygon fill="#000000" stroke="#000000" points="1667.4407,-71361.9252 1677.543,-71358.7325 1667.6547,-71354.9285 1667.4407,-71361.9252"/>
</g>
<!-- Fractional[BigInt] -->
<g id="node1615" class="node">
<title>Fractional[BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-71288.9355" rx="81.135" ry="26.7407"/>
<text text-anchor="start" x="1700.104" y="-71292.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[BigInt]</text>
<text text-anchor="middle" x="1749.604" y="-71277.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- org.scalacheck.Shrink[BigInt]&#45;&gt;Fractional[BigInt] -->
<g id="edge459" class="edge">
<title>org.scalacheck.Shrink[BigInt]&#45;&gt;Fractional[BigInt]</title>
<path fill="none" stroke="#000000" d="M698.0684,-71321.0829C936.8238,-71313.7837 1449.8389,-71298.0999 1658.5157,-71291.7203"/>
<polygon fill="#000000" stroke="#000000" points="1658.6325,-71295.2184 1668.5208,-71291.4144 1658.4185,-71288.2217 1658.6325,-71295.2184"/>
</g>
<!-- cats.Eq[Option[Byte]] -->
<g id="node1358" class="node">
<title>cats.Eq[Option[Byte]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-35918.9355" rx="96.7474" ry="26.7407"/>
<text text-anchor="start" x="1689.104" y="-35922.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Option[Byte]]</text>
<text text-anchor="middle" x="1749.604" y="-35907.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 20ms</text>
</g>
<!-- cats.Eq[Option[Byte]]&#45;&gt;cats.kernel.Eq[Byte] -->
<g id="edge826" class="edge">
<title>cats.Eq[Option[Byte]]&#45;&gt;cats.kernel.Eq[Byte]</title>
<path fill="none" stroke="#000000" d="M1846.3154,-35921.8816C2067.1485,-35928.6086 2606.6676,-35945.0435 2831.0017,-35951.8772"/>
<polygon fill="#000000" stroke="#000000" points="2831.0177,-35955.3792 2841.1196,-35952.1854 2831.2309,-35948.3824 2831.0177,-35955.3792"/>
</g>
<!-- cats.kernel.Order[Byte] -->
<g id="node1371" class="node">
<title>cats.kernel.Order[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-35882.9355" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="2866.9013" y="-35886.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Order[Byte]</text>
<text text-anchor="middle" x="2931.4013" y="-35871.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- cats.Eq[Option[Byte]]&#45;&gt;cats.kernel.Order[Byte] -->
<g id="edge483" class="edge">
<title>cats.Eq[Option[Byte]]&#45;&gt;cats.kernel.Order[Byte]</title>
<path fill="none" stroke="#000000" d="M1846.3154,-35915.9895C2063.3198,-35909.3791 2588.0559,-35893.3946 2819.0527,-35886.3579"/>
<polygon fill="#000000" stroke="#000000" points="2819.2694,-35889.853 2829.1582,-35886.0501 2819.0562,-35882.8563 2819.2694,-35889.853"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A] -->
<g id="node1359" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-71396.9355" rx="227.8769" ry="26.7407"/>
<text text-anchor="start" x="419.0494" y="-71400.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A]</text>
<text text-anchor="middle" x="572.0494" y="-71385.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- s.type =&gt; ?{def asJson: ?} -->
<g id="node1360" class="node">
<title>s.type =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-71468.9355" rx="114.6026" ry="26.7407"/>
<text text-anchor="start" x="499.0494" y="-71472.7355" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-71457.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1361" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-12618.9355" rx="321.9673" ry="26.7407"/>
<text text-anchor="start" x="3851.2721" y="-12622.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-12607.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 42ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1153" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4336.7496,-12603.7852C4458.4745,-12603.1196 4584.73,-12613.4318 4625.8509,-12654.9355 4648.408,-12677.7026 4613.6632,-12774.0434 4633.8509,-12798.9355 4737.8061,-12927.1158 4942.9019,-12948.0781 5066.4144,-12948.0203"/>
<polygon fill="#000000" stroke="#000000" points="5066.6519,-12951.5192 5076.6336,-12947.9675 5066.6156,-12944.5193 5066.6519,-12951.5192"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge909" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4392.8493,-12618.9355C4500.1546,-12618.9355 4621.4822,-12618.9355 4735.7387,-12618.9355"/>
<polygon fill="#000000" stroke="#000000" points="4736.064,-12622.4356 4746.064,-12618.9355 4736.064,-12615.4356 4736.064,-12622.4356"/>
</g>
<!-- cats.Eq[scala.collection.immutable.Map[String,io.circe.Json]] -->
<g id="node1362" class="node">
<title>cats.Eq[scala.collection.immutable.Map[String,io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-16188.9355" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="12961.0282" y="-16192.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[scala.collection.immutable.Map[String,io.circe.Json]]</text>
<text text-anchor="middle" x="13131.0282" y="-16177.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 25ms</text>
</g>
<!-- cats.Eq[scala.collection.immutable.Map[String,io.circe.Json]]&#45;&gt;cats.kernel.Eq[io.circe.Json] -->
<g id="edge1582" class="edge">
<title>cats.Eq[scala.collection.immutable.Map[String,io.circe.Json]]&#45;&gt;cats.kernel.Eq[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M13368.2603,-16198.1424C13408.7913,-16210.4522 13446.5856,-16230.6581 13473.975,-16262.9355 13485.7072,-16276.7615 13469.9469,-16412.3662 13481.975,-16425.9355 13532.0431,-16482.419 13617.1098,-16495.0144 13687.2002,-16494.1012"/>
<polygon fill="#000000" stroke="#000000" points="13687.5078,-16497.5953 13697.4268,-16493.872 13687.3509,-16490.597 13687.5078,-16497.5953"/>
</g>
<!-- cats.Eq[scala.collection.immutable.Map[String,io.circe.Json]]&#45;&gt;shapeless.IsTuple[scala.collection.immutable.Map[String,io.circe.Json]] -->
<g id="edge355" class="edge">
<title>cats.Eq[scala.collection.immutable.Map[String,io.circe.Json]]&#45;&gt;shapeless.IsTuple[scala.collection.immutable.Map[String,io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M13382.9447,-16188.9355C13421.7997,-16188.9355 13462.2619,-16188.9355 13502.0687,-16188.9355"/>
<polygon fill="#000000" stroke="#000000" points="13502.1736,-16192.4356 13512.1736,-16188.9355 13502.1736,-16185.4356 13502.1736,-16192.4356"/>
</g>
<!-- io.circe.Decoder[List[Bomb$3]] -->
<g id="node1363" class="node">
<title>io.circe.Decoder[List[Bomb$3]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-46718.9355" rx="136.4432" ry="26.7407"/>
<text text-anchor="start" x="483.5494" y="-46722.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[List[Bomb$3]]</text>
<text text-anchor="middle" x="572.0494" y="-46707.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Decoder[List[Bomb$3]]&#45;&gt;io.circe.Decoder[Bomb$3] -->
<g id="edge1136" class="edge">
<title>io.circe.Decoder[List[Bomb$3]]&#45;&gt;io.circe.Decoder[Bomb$3]</title>
<path fill="none" stroke="#000000" d="M708.5684,-46718.9355C938.841,-46718.9355 1401.0823,-46718.9355 1623.8725,-46718.9355"/>
<polygon fill="#000000" stroke="#000000" points="1623.9735,-46722.4356 1633.9735,-46718.9355 1623.9735,-46715.4356 1623.9735,-46722.4356"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int)] -->
<g id="node1364" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-6758.9355" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="3948.7721" y="-6762.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-6747.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 33ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge62" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4234.7123,-6771.1973C4378.5174,-6778.0004 4572.7437,-6776.2681 4625.8509,-6722.9355 4646.5868,-6702.1118 4613.1418,-6611.7859 4633.8509,-6590.9355 4689.9325,-6534.4714 4910.0868,-6537.4626 5049.5691,-6545.6167"/>
<polygon fill="#000000" stroke="#000000" points="5049.6931,-6549.1304 5059.8854,-6546.2377 5050.1138,-6542.143 5049.6931,-6549.1304"/>
</g>
<!-- Integral[(Int, Int, Int, Int, Int)] -->
<g id="node1872" class="node">
<title>Integral[(Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-6482.9355" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="5084.7166" y="-6486.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-6471.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int)] -->
<g id="edge1174" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4233.9364,-6771.4053C4378.0289,-6778.4487 4573.1892,-6776.9613 4625.8509,-6722.9355 4641.6846,-6706.6917 4618.0381,-6535.1997 4633.8509,-6518.9355 4687.7081,-6463.5414 4896.9658,-6464.934 5036.9419,-6472.7048"/>
<polygon fill="#000000" stroke="#000000" points="5037.133,-6476.2214 5047.3169,-6473.2993 5037.5336,-6469.2328 5037.133,-6476.2214"/>
</g>
<!-- cats.Eq[io.circe.KeyDecoder[Either[Unit,Int]]] -->
<g id="node1365" class="node">
<title>cats.Eq[io.circe.KeyDecoder[Either[Unit,Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-14514.9355" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="9888.0427" y="-14518.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[io.circe.KeyDecoder[Either[Unit,Int]]]</text>
<text text-anchor="middle" x="10016.0427" y="-14503.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- cats.Eq[io.circe.KeyDecoder[Either[Unit,Int]]]&#45;&gt;cats.kernel.Eq[Either[Unit,Int]] -->
<g id="edge800" class="edge">
<title>cats.Eq[io.circe.KeyDecoder[Either[Unit,Int]]]&#45;&gt;cats.kernel.Eq[Either[Unit,Int]]</title>
<path fill="none" stroke="#000000" d="M10191.609,-14503.8895C10349.0021,-14493.9869 10576.7355,-14479.6587 10721.149,-14470.5727"/>
<polygon fill="#000000" stroke="#000000" points="10721.6402,-14474.0488 10731.4007,-14469.9277 10721.2006,-14467.0626 10721.6402,-14474.0488"/>
</g>
<!-- String(&#39;encodeFloat&#39;) =&gt; ?{def should: ?} -->
<g id="node1366" class="node">
<title>String(&#39;encodeFloat&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-26630.9355" rx="171.6541" ry="26.7407"/>
<text text-anchor="start" x="458.5494" y="-26634.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;encodeFloat&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-26619.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;encodeFloat&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge648" class="edge">
<title>String(&#39;encodeFloat&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M734.9202,-26622.2428C880.7773,-26617.7914 1081.0977,-26620.9625 1144.0988,-26666.9355 1676.0062,-27055.0783 1740.7586,-27981.1044 1748.5506,-28177.8086"/>
<polygon fill="#000000" stroke="#000000" points="1745.0572,-28178.0539 1748.9254,-28187.9174 1752.0524,-28177.7945 1745.0572,-28178.0539"/>
</g>
<!-- String(&#39;decodeVector&#39;) =&gt; ?{def should: ?} -->
<g id="node1367" class="node">
<title>String(&#39;decodeVector&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-26558.9355" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="454.0494" y="-26562.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;decodeVector&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-26547.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;decodeVector&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge396" class="edge">
<title>String(&#39;decodeVector&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M739.9873,-26549.8766C885.5064,-26545.4959 1082.1475,-26549.0046 1144.0988,-26594.9355 1422.9257,-26801.659 1692.0032,-27956.3664 1741.5107,-28178.1059"/>
<polygon fill="#000000" stroke="#000000" points="1738.1131,-28178.951 1743.7014,-28187.9522 1744.946,-28177.4307 1738.1131,-28178.951"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; String -->
<g id="node1368" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-71540.9355" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="457.5494" y="-71544.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; String</text>
<text text-anchor="middle" x="572.0494" y="-71529.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 2ms</text>
</g>
<!-- Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1372" class="node">
<title>Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-62540.9355" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="1548.104" y="-62544.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-62529.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc13] -->
<g id="node1375" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc13]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-67004.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="448.5494" y="-67008.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc13]</text>
<text text-anchor="middle" x="572.0494" y="-66993.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc13]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc13] -->
<g id="edge1505" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc13]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc13]</title>
<path fill="none" stroke="#000000" d="M758.3114,-67004.9355C971.0895,-67004.9355 1318.412,-67004.9355 1540.352,-67004.9355"/>
<polygon fill="#000000" stroke="#000000" points="1540.4954,-67008.4356 1550.4954,-67004.9355 1540.4954,-67001.4356 1540.4954,-67008.4356"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; ACursorSuite.this.PropertyCheckConfigParam -->
<g id="node1376" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; ACursorSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-71612.9355" rx="308.0972" ry="26.7407"/>
<text text-anchor="start" x="362.0494" y="-71616.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; ACursorSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-71601.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.AccumulatingDecoder[Unit]] -->
<g id="node1377" class="node">
<title>org.scalacheck.Arbitrary[io.circe.AccumulatingDecoder[Unit]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-39842.9355" rx="254.6169" ry="26.7407"/>
<text text-anchor="start" x="400.0494" y="-39846.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.AccumulatingDecoder[Unit]]</text>
<text text-anchor="middle" x="572.0494" y="-39831.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.AccumulatingDecoder[Unit]]&#45;&gt;org.scalacheck.Arbitrary[Unit] -->
<g id="edge1533" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.AccumulatingDecoder[Unit]]&#45;&gt;org.scalacheck.Arbitrary[Unit]</title>
<path fill="none" stroke="#000000" d="M792.5021,-39856.4148C1034.1096,-39871.1876 1414.006,-39894.4159 1614.8081,-39906.6936"/>
<polygon fill="#000000" stroke="#000000" points="1614.6282,-39910.1891 1624.8232,-39907.306 1615.0555,-39903.2021 1614.6282,-39910.1891"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int)] -->
<g id="node1378" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-20438.9355" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="454.5494" y="-20442.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-20427.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 19ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int)]] -->
<g id="edge1558" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M749.6162,-20438.9355C931.2228,-20438.9355 1217.082,-20438.9355 1436.7372,-20438.9355"/>
<polygon fill="#000000" stroke="#000000" points="1436.8176,-20442.4356 1446.8176,-20438.9355 1436.8176,-20435.4356 1436.8176,-20442.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1251" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M728.1853,-20426.059C877.9101,-20417.5594 1089.0971,-20416.9534 1144.0988,-20474.9355 1159.2402,-20490.8975 1136.936,-21250.9938 1152.0988,-21266.9355 1288.039,-21409.8596 1550.8564,-21360.638 1677.6826,-21325.6272"/>
<polygon fill="#000000" stroke="#000000" points="1678.6316,-21328.9962 1687.3133,-21322.9235 1676.7395,-21322.2567 1678.6316,-21328.9962"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1379" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-20366.9355" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="387.0494" y="-20370.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-20355.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 34ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge1506" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M845.1639,-20366.9355C992.4022,-20366.9355 1177.0331,-20366.9355 1341.0241,-20366.9355"/>
<polygon fill="#000000" stroke="#000000" points="1341.297,-20370.4356 1351.297,-20366.9355 1341.2969,-20363.4356 1341.297,-20370.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1006" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M792.9989,-20351.1159C933.1453,-20346.4858 1096.6943,-20352.9201 1144.0988,-20402.9355 1160.6093,-20420.3554 1135.565,-21249.5377 1152.0988,-21266.9355 1287.9789,-21409.9168 1550.8253,-21360.6676 1677.6706,-21325.6387"/>
<polygon fill="#000000" stroke="#000000" points="1678.6216,-21329.0071 1687.3027,-21322.9336 1676.7288,-21322.2678 1678.6216,-21329.0071"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; ParserSuite.this.PropertyCheckConfigParam -->
<g id="node1380" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; ParserSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-71684.9355" rx="285.8424" ry="26.7407"/>
<text text-anchor="start" x="378.0494" y="-71688.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; ParserSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-71673.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(0) =&gt; ?{def asJson: ?} -->
<g id="node1381" class="node">
<title>Int(0) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-71756.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="499.5494" y="-71760.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Int(0) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-71745.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge384" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M10062.548,-17036.7065C10140.2885,-17080.0157 10302.817,-17164.4689 10451.8423,-17202.9355 10478.772,-17209.8867 10507.001,-17215.5526 10535.4979,-17220.164"/>
<polygon fill="#000000" stroke="#000000" points="10535.1646,-17223.6546 10545.5871,-17221.7515 10536.2527,-17216.7396 10535.1646,-17223.6546"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1168" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M10209.9014,-16985.9678C10294.6108,-16965.2608 10387.3429,-16926.7028 10443.8423,-16854.9355 10453.8003,-16842.2865 10440.1346,-16793.985 10451.8423,-16782.9355 10517.6433,-16720.8337 11201.3746,-16804.2496 11265.0151,-16739.9355 11279.7992,-16724.995 11258.2527,-16565.8975 11273.0151,-16550.9355 11393.4973,-16428.8243 11924.4923,-16631.2318 12043.7615,-16507.9355 12057.4772,-16493.7567 12037.7779,-16166.8504 12051.7615,-16152.9355 12094.27,-16110.636 13071.0597,-16133.9355 13131.0282,-16133.9355 13131.0282,-16133.9355 13131.0282,-16133.9355 13803.7086,-16133.9355 15130.5271,-16133.9355 15461.9899,-16171.9355 16788.8083,-16171.9355 16788.8083,-16171.9355 16788.8083,-16171.9355 18607.2235,-16171.9355 19091.6834,-16171.9355 19671.232,-16160.2042 19897.3068,-16155.1778"/>
<polygon fill="#000000" stroke="#000000" points="19897.5592,-16158.6732 19907.4786,-16154.9509 19897.403,-16151.6749 19897.5592,-16158.6732"/>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc10] -->
<g id="node1383" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc10]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-67940.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-67944.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc10]</text>
<text text-anchor="middle" x="572.0494" y="-67929.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc10]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc10]] -->
<g id="edge1164" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc10]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc10]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-67940.9355C951.3519,-67940.9355 1231.2937,-67940.9355 1445.2652,-67940.9355"/>
<polygon fill="#000000" stroke="#000000" points="1445.4039,-67944.4356 1455.4038,-67940.9355 1445.4038,-67937.4356 1445.4039,-67944.4356"/>
</g>
<!-- io.circe.Decoder[List[String]] -->
<g id="node1384" class="node">
<title>io.circe.Decoder[List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-10746.9355" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="3989.2721" y="-10750.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[List[String]]</text>
<text text-anchor="middle" x="4070.7721" y="-10735.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 12ms</text>
</g>
<!-- io.circe.Decoder[List[String]]&#45;&gt;io.circe.Decoder[String] -->
<g id="edge407" class="edge">
<title>io.circe.Decoder[List[String]]&#45;&gt;io.circe.Decoder[String]</title>
<path fill="none" stroke="#000000" d="M4193.5007,-10753.6747C4306.0374,-10760.1442 4477.272,-10770.7178 4625.8509,-10782.9355 4777.0673,-10795.3702 4951.6487,-10813.4371 5060.8683,-10825.1872"/>
<polygon fill="#000000" stroke="#000000" points="5060.586,-10828.677 5070.9036,-10826.2689 5061.3362,-10821.7173 5060.586,-10828.677"/>
</g>
<!-- String(&#39;encodeSet&#39;) =&gt; ?{def should: ?} -->
<g id="node1385" class="node">
<title>String(&#39;encodeSet&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-26486.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="463.5494" y="-26490.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;encodeSet&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-26475.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;encodeSet&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge672" class="edge">
<title>String(&#39;encodeSet&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M727.9337,-26478.0752C874.5496,-26472.9952 1080.7317,-26475.2626 1144.0988,-26522.9355 1432.9273,-26740.2301 1694.9351,-27950.1891 1742.0782,-28177.9598"/>
<polygon fill="#000000" stroke="#000000" points="1738.7125,-28178.9686 1744.16,-28188.0557 1745.5683,-28177.5549 1738.7125,-28178.9686"/>
</g>
<!-- io.circe.Decoder[(Int, String, Char)] -->
<g id="node1386" class="node">
<title>io.circe.Decoder[(Int, String, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-10602.9355" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="3971.7721" y="-10606.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, String, Char)]</text>
<text text-anchor="middle" x="4070.7721" y="-10591.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- io.circe.Decoder[(Int, String, Char)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1117" class="edge">
<title>io.circe.Decoder[(Int, String, Char)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4207.9868,-10591.5085C4353.8403,-10582.7497 4570.9305,-10580.5549 4625.8509,-10638.9355 4646.4068,-10660.7866 4615.5637,-12775.1534 4633.8509,-12798.9355 4734.879,-12930.3198 4942.4508,-12949.9864 5066.911,-12948.8645"/>
<polygon fill="#000000" stroke="#000000" points="5067.2556,-12952.3602 5077.2064,-12948.7226 5067.1591,-12945.3609 5067.2556,-12952.3602"/>
</g>
<!-- io.circe.Decoder[(Int, String, Char)]&#45;&gt;io.circe.Decoder[String] -->
<g id="edge666" class="edge">
<title>io.circe.Decoder[(Int, String, Char)]&#45;&gt;io.circe.Decoder[String]</title>
<path fill="none" stroke="#000000" d="M4221.9442,-10601.168C4334.4554,-10602.6366 4491.1915,-10610.5789 4625.8509,-10638.9355 4807.6713,-10677.2234 5010.5312,-10763.9982 5108.4547,-10808.8792"/>
<polygon fill="#000000" stroke="#000000" points="5107.052,-10812.0864 5117.5994,-10813.0887 5109.9791,-10805.7278 5107.052,-10812.0864"/>
</g>
<!-- io.circe.Decoder[(Int, String, Char)]&#45;&gt;io.circe.Decoder[Char] -->
<g id="edge794" class="edge">
<title>io.circe.Decoder[(Int, String, Char)]&#45;&gt;io.circe.Decoder[Char]</title>
<path fill="none" stroke="#000000" d="M4222.1458,-10602.9355C4445.8568,-10602.9355 4859.5388,-10602.9355 5057.0949,-10602.9355"/>
<polygon fill="#000000" stroke="#000000" points="5057.2015,-10606.4356 5067.2015,-10602.9355 5057.2014,-10599.4356 5057.2015,-10606.4356"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; ParserSuite.this.PropertyCheckConfigParam -->
<g id="node1387" class="node">
<title>(Any =&gt; Nothing) =&gt; ParserSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-71828.9355" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="388.5494" y="-71832.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; ParserSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-71817.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;right&#39;) =&gt; ?{def should: ?} -->
<g id="node1388" class="node">
<title>String(&#39;right&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-26414.9355" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="478.5494" y="-26418.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;right&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-26403.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;right&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge694" class="edge">
<title>String(&#39;right&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M708.7645,-26406.6396C856.0566,-26400.5829 1078.2242,-26400.7018 1144.0988,-26450.9355 1442.9983,-26678.8662 1697.7919,-27944.3711 1742.6169,-28177.8856"/>
<polygon fill="#000000" stroke="#000000" points="1739.2185,-28178.7489 1744.5343,-28187.9136 1746.0939,-28177.4342 1739.2185,-28178.7489"/>
</g>
<!-- cats.kernel.PartialOrder[(String, io.circe.Json)]&#45;&gt;cats.kernel.Order[String] -->
<g id="edge1296" class="edge">
<title>cats.kernel.PartialOrder[(String, io.circe.Json)]&#45;&gt;cats.kernel.Order[String]</title>
<path fill="none" stroke="#000000" d="M11758.0274,-15521.9565C11846.4339,-15535.8624 11972.3241,-15538.4992 12043.7615,-15462.9355 12060.2605,-15445.4835 12038.239,-15266.7833 12051.7615,-15246.9355 12110.2347,-15161.1108 12225.8636,-15121.242 12311.2081,-15102.9587"/>
<polygon fill="#000000" stroke="#000000" points="12312.1167,-15106.3448 12321.1976,-15100.887 12310.6951,-15099.4907 12312.1167,-15106.3448"/>
</g>
<!-- cats.kernel.PartialOrder[(String, io.circe.Json)]&#45;&gt;cats.kernel.Order[io.circe.Json] -->
<g id="edge498" class="edge">
<title>cats.kernel.PartialOrder[(String, io.circe.Json)]&#45;&gt;cats.kernel.Order[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M11756.381,-15475.7984C11845.2302,-15461.2792 11972.8142,-15457.7666 12043.7615,-15534.9355 12060.1371,-15552.7473 12035.4824,-16388.0354 12051.7615,-16405.9355 12161.2467,-16526.3236 12669.5105,-16362.5439 12780.0814,-16481.9355 12802.2107,-16505.8301 12765.9596,-16751.0342 12788.0814,-16774.9355 12847.9171,-16839.5845 12952.268,-16841.809 13030.1932,-16832.0115"/>
<polygon fill="#000000" stroke="#000000" points="13031.0782,-16835.4242 13040.523,-16830.6237 13030.146,-16828.4865 13031.0782,-16835.4242"/>
</g>
<!-- cats.kernel.PartialOrder[(String, io.circe.Json)]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json] -->
<g id="edge75" class="edge">
<title>cats.kernel.PartialOrder[(String, io.circe.Json)]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M11756.4411,-15475.7432C11845.3328,-15461.185 11972.9455,-15457.6461 12043.7615,-15534.9355 12056.738,-15549.0983 12038.1397,-16904.3923 12051.7615,-16917.9355 12115.7063,-16981.5116 12693.7152,-16949.4771 12976.5444,-16929.672"/>
<polygon fill="#000000" stroke="#000000" points="12977.1636,-16933.1371 12986.8931,-16928.9435 12976.672,-16926.1544 12977.1636,-16933.1371"/>
</g>
<!-- cats.kernel.PartialOrder[(String, io.circe.Json)]&#45;&gt;cats.kernel.PartialOrder[String] -->
<g id="edge223" class="edge">
<title>cats.kernel.PartialOrder[(String, io.circe.Json)]&#45;&gt;cats.kernel.PartialOrder[String]</title>
<path fill="none" stroke="#000000" d="M11762.7406,-15521.5658C11849.9145,-15533.7974 11971.2685,-15534.17 12043.7615,-15462.9355 12066.7266,-15440.3691 12028.8572,-15413.5638 12051.7615,-15390.9355 12119.4415,-15324.0708 12232.5536,-15323.1156 12314.7845,-15333.8397"/>
<polygon fill="#000000" stroke="#000000" points="12314.5221,-15337.3366 12324.9072,-15335.2386 12315.4805,-15330.4025 12314.5221,-15337.3366"/>
</g>
<!-- String(&#39;Decoder[BigInt]&#39;) =&gt; ?{def should: ?} -->
<g id="node1391" class="node">
<title>String(&#39;Decoder[BigInt]&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-26342.9355" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="447.0494" y="-26346.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Decoder[BigInt]&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-26331.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 10ms</text>
</g>
<!-- String(&#39;Decoder[BigInt]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge646" class="edge">
<title>String(&#39;Decoder[BigInt]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M747.1503,-26333.1014C892.2249,-26328.6566 1083.9932,-26332.5237 1144.0988,-26378.9355 1453.1445,-26617.572 1700.5912,-27938.9963 1743.1321,-28177.9038"/>
<polygon fill="#000000" stroke="#000000" points="1739.7007,-28178.5987 1744.8931,-28187.8339 1746.5931,-28177.3763 1739.7007,-28178.5987"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V] -->
<g id="node1392" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-71900.9355" rx="550.2582" ry="26.7407"/>
<text text-anchor="start" x="191.0494" y="-71904.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V]</text>
<text text-anchor="middle" x="572.0494" y="-71889.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;container decoder&#39;) =&gt; ?{def should: ?} -->
<g id="node1393" class="node">
<title>String(&#39;container decoder&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-26270.9355" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="443.0494" y="-26274.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;container decoder&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-26259.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;container decoder&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge52" class="edge">
<title>String(&#39;container decoder&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M751.5719,-26260.8043C896.1944,-26256.4626 1084.8437,-26260.6454 1144.0988,-26306.9355 1463.2045,-26556.2218 1703.0938,-27932.7008 1743.5643,-28177.6476"/>
<polygon fill="#000000" stroke="#000000" points="1740.1598,-28178.5149 1745.2366,-28187.8142 1747.067,-28177.3787 1740.1598,-28178.5149"/>
</g>
<!-- String(&#39;getOrElse&#39;) =&gt; ?{def should: ?} -->
<g id="node1395" class="node">
<title>String(&#39;getOrElse&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-26198.9355" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="464.5494" y="-26202.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;getOrElse&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-26187.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;getOrElse&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge368" class="edge">
<title>String(&#39;getOrElse&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M725.315,-26189.5649C872.4844,-26183.8593 1081.4273,-26185.4435 1144.0988,-26234.9355 1473.4864,-26495.0552 1705.7813,-27928.1592 1744.0369,-28177.8334"/>
<polygon fill="#000000" stroke="#000000" points="1740.5972,-28178.4946 1745.565,-28187.8525 1747.5172,-28177.4391 1740.5972,-28178.4946"/>
</g>
<!-- n1.type =&gt; ?{def ===: ?} -->
<g id="node1397" class="node">
<title>n1.type =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-44342.9355" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="1677.604" y="-44346.7355" font-family="Times,serif" font-size="14.00" fill="#000000">n1.type =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="1749.604" y="-44331.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- n1.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonNumber] -->
<g id="edge704" class="edge">
<title>n1.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonNumber]</title>
<path fill="none" stroke="#000000" d="M1862.9197,-44342.9355C2081.0888,-44342.9355 2558.6924,-44342.9355 2794.342,-44342.9355"/>
<polygon fill="#000000" stroke="#000000" points="2794.6896,-44346.4356 2804.6895,-44342.9355 2794.6895,-44339.4356 2794.6896,-44346.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(String, (String, io.circe.Json, Boolean)),Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="node1400" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(String, (String, io.circe.Json, Boolean)),Either[String,(String, io.circe.Json, Boolean)]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-7952.9355" rx="510.5622" ry="26.7407"/>
<text text-anchor="start" x="3717.7721" y="-7956.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(String, (String, io.circe.Json, Boolean)),Either[String,(String, io.circe.Json, Boolean)]]</text>
<text text-anchor="middle" x="4070.7721" y="-7941.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[cats.data.Validated[String,Int]] -->
<g id="node1401" class="node">
<title>io.circe.Decoder[cats.data.Validated[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-11538.9355" rx="197.9798" ry="26.7407"/>
<text text-anchor="start" x="3938.7721" y="-11542.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[cats.data.Validated[String,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-11527.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Decoder[cats.data.Validated[String,Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge676" class="edge">
<title>io.circe.Decoder[cats.data.Validated[String,Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4243.0639,-11525.6489C4386.4787,-11518.8313 4575.1139,-11521.1547 4625.8509,-11574.9355 4637.517,-11587.3015 4623.4689,-12785.4735 4633.8509,-12798.9355 4734.9936,-12930.0842 4942.2797,-12949.8653 5066.7072,-12948.8212"/>
<polygon fill="#000000" stroke="#000000" points="5067.0474,-12952.3171 5077.0004,-12948.6858 5066.9552,-12945.3177 5067.0474,-12952.3171"/>
</g>
<!-- io.circe.Decoder[cats.data.Validated[String,Int]]&#45;&gt;io.circe.Decoder[String] -->
<g id="edge736" class="edge">
<title>io.circe.Decoder[cats.data.Validated[String,Int]]&#45;&gt;io.circe.Decoder[String]</title>
<path fill="none" stroke="#000000" d="M4243.33,-11552.1582C4386.6455,-11558.9024 4574.98,-11556.5066 4625.8509,-11502.9355 4649.2652,-11478.2785 4610.8848,-10916.0105 4633.8509,-10890.9355 4746.918,-10767.4865 4964.3019,-10790.7393 5083.8416,-10815.5672"/>
<polygon fill="#000000" stroke="#000000" points="5083.1774,-10819.0041 5093.6868,-10817.6616 5084.634,-10812.1574 5083.1774,-10819.0041"/>
</g>
<!-- io.circe.DecodingFailure =&gt; ?{def show: ?} -->
<g id="node1402" class="node">
<title>io.circe.DecodingFailure =&gt; ?{def show: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-71972.9355" rx="182.3671" ry="26.7407"/>
<text text-anchor="start" x="451.0494" y="-71976.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.DecodingFailure =&gt; ?{def show: ?}</text>
<text text-anchor="middle" x="572.0494" y="-71961.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- cats.Show[io.circe.DecodingFailure] -->
<g id="node1716" class="node">
<title>cats.Show[io.circe.DecodingFailure]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-71972.9355" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="1649.604" y="-71976.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Show[io.circe.DecodingFailure]</text>
<text text-anchor="middle" x="1749.604" y="-71961.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 2ms</text>
</g>
<!-- io.circe.DecodingFailure =&gt; ?{def show: ?}&#45;&gt;cats.Show[io.circe.DecodingFailure] -->
<g id="edge1144" class="edge">
<title>io.circe.DecodingFailure =&gt; ?{def show: ?}&#45;&gt;cats.Show[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M754.7503,-71972.9355C982.4055,-71972.9355 1367.9834,-71972.9355 1586.2385,-71972.9355"/>
<polygon fill="#000000" stroke="#000000" points="1586.5038,-71976.4356 1596.5038,-71972.9355 1586.5038,-71969.4356 1586.5038,-71976.4356"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1235" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M16186.2935,-16469.4988C16399.9017,-16427.412 16869.9849,-16339.5479 17270.5699,-16297.9355 18347.8311,-16186.0309 18625.2597,-16272.2201 19704.8751,-16185.9355 19771.8121,-16180.5858 19847.1732,-16171.9081 19904.2131,-16164.7938"/>
<polygon fill="#000000" stroke="#000000" points="19904.7969,-16168.2481 19914.2834,-16163.5303 19903.9254,-16161.3025 19904.7969,-16168.2481"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1169" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M16128.0634,-16519.0386C16259.8144,-16578.4386 16581.4357,-16723.4416 16721.6313,-16786.6487"/>
<polygon fill="#000000" stroke="#000000" points="16720.4484,-16789.9547 16731.0032,-16790.8741 16723.3255,-16783.5732 16720.4484,-16789.9547"/>
</g>
<!-- (=&gt; Unit) =&gt; Int -->
<g id="node1405" class="node">
<title>(=&gt; Unit) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-72044.9355" rx="77.1494" ry="26.7407"/>
<text text-anchor="start" x="525.5494" y="-72048.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Int</text>
<text text-anchor="middle" x="572.0494" y="-72033.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[String]&#45;&gt;Integral[String] -->
<g id="edge852" class="edge">
<title>org.scalacheck.Shrink[String]&#45;&gt;Integral[String]</title>
<path fill="none" stroke="#000000" d="M5294.3919,-8278.9355C5511.0797,-8278.9355 5947.5502,-8278.9355 6134.2566,-8278.9355"/>
<polygon fill="#000000" stroke="#000000" points="6134.3055,-8282.4356 6144.3055,-8278.9355 6134.3055,-8275.4356 6134.3055,-8282.4356"/>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[io.circe.tests.examples.WrappedOptionalField]] -->
<g id="node1407" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[io.circe.tests.examples.WrappedOptionalField]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-72116.9355" rx="385.2464" ry="26.7407"/>
<text text-anchor="start" x="1485.104" y="-72120.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[io.circe.tests.examples.WrappedOptionalField]]</text>
<text text-anchor="middle" x="1749.604" y="-72105.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1408" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-12546.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="3941.2721" y="-12550.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-12535.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 32ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1135" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4241.6187,-12534.075C4384.9006,-12527.446 4574.1739,-12529.8044 4625.8509,-12582.9355 4642.5959,-12600.1517 4618.8961,-12780.1435 4633.8509,-12798.9355 4736.7628,-12928.2534 4942.7026,-12948.7636 5066.555,-12948.3277"/>
<polygon fill="#000000" stroke="#000000" points="5066.8308,-12951.8256 5076.8016,-12948.2432 5066.7731,-12944.8259 5066.8308,-12951.8256"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge123" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4265.3042,-12546.9355C4430.9898,-12546.9355 4671.895,-12546.9355 4863.1291,-12546.9355"/>
<polygon fill="#000000" stroke="#000000" points="4863.3457,-12550.4356 4873.3457,-12546.9355 4863.3457,-12543.4356 4863.3457,-12550.4356"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; ACursorSuite.this.PropertyCheckConfigParam -->
<g id="node1410" class="node">
<title>(Any =&gt; Nothing) =&gt; ACursorSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-72188.9355" rx="280.0286" ry="26.7407"/>
<text text-anchor="start" x="382.0494" y="-72192.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; ACursorSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-72177.7355" font-family="Times,serif" font-size="14.00" fill="#000000">21 times = 6ms</text>
</g>
<!-- (=&gt; Long) =&gt; Int -->
<g id="node1411" class="node">
<title>(=&gt; Long) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-72260.9355" rx="79.8062" ry="26.7407"/>
<text text-anchor="start" x="523.5494" y="-72264.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Long) =&gt; Int</text>
<text text-anchor="middle" x="572.0494" y="-72249.7355" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 16ms</text>
</g>
<!-- cats.kernel.Eq[Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[shapeless.HNil] -->
<g id="edge491" class="edge">
<title>cats.kernel.Eq[Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M19429.2156,-17625.3699C19514.1707,-17639.0917 19637.114,-17642.4291 19704.8751,-17567.9355 19717.2815,-17554.2965 19700.9386,-14926.9878 19712.8751,-14912.9355 19750.4644,-14868.6834 19812.6301,-14855.101 19868.9869,-14853.3803"/>
<polygon fill="#000000" stroke="#000000" points="19869.1349,-14856.8782 19879.0687,-14853.1945 19869.0059,-14849.8794 19869.1349,-14856.8782"/>
</g>
<!-- cats.kernel.Eq[Int :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[Int :: shapeless.HNil] -->
<g id="edge1205" class="edge">
<title>cats.kernel.Eq[Int :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M19489.5887,-17603.9355C19588.1079,-17603.9355 19716.627,-17603.9355 19819.3196,-17603.9355"/>
<polygon fill="#000000" stroke="#000000" points="19819.4906,-17607.4356 19829.4905,-17603.9355 19819.4905,-17600.4356 19819.4906,-17607.4356"/>
</g>
<!-- cats.kernel.Eq[Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge51" class="edge">
<title>cats.kernel.Eq[Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M19439.3892,-17623.9002C19521.3375,-17633.599 19633.9893,-17631.7971 19704.8751,-17567.9355 19918.3213,-17375.6403 19981.5489,-16393.8522 19992.4639,-16190.0214"/>
<polygon fill="#000000" stroke="#000000" points="19995.9695,-16190.0066 19993.0001,-16179.8364 19988.9791,-16189.6385 19995.9695,-16190.0066"/>
</g>
<!-- org.scalacheck.Shrink[Set[Either[Int,String]]] -->
<g id="node1416" class="node">
<title>org.scalacheck.Shrink[Set[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-11160.9355" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="1624.604" y="-11164.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Set[Either[Int,String]]]</text>
<text text-anchor="middle" x="1749.604" y="-11149.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- org.scalacheck.Shrink[Set[Either[Int,String]]]&#45;&gt;Integral[Set[Either[Int,String]]] -->
<g id="edge1312" class="edge">
<title>org.scalacheck.Shrink[Set[Either[Int,String]]]&#45;&gt;Integral[Set[Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M1928.7725,-11152.7488C2165.1423,-11141.9483 2576.274,-11123.1624 2791.2756,-11113.3383"/>
<polygon fill="#000000" stroke="#000000" points="2791.5342,-11116.8303 2801.364,-11112.8774 2791.2146,-11109.8376 2791.5342,-11116.8303"/>
</g>
<!-- org.scalacheck.Shrink[Set[Either[Int,String]]]&#45;&gt;org.scalacheck.Shrink[Either[Int,String]] -->
<g id="edge1346" class="edge">
<title>org.scalacheck.Shrink[Set[Either[Int,String]]]&#45;&gt;org.scalacheck.Shrink[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M1793.6375,-11134.687C1910.9814,-11061.8146 2230.2146,-10843.741 2347.1092,-10562.9355 2352.5217,-10549.9337 2345.4459,-8545.1808 2355.1092,-8534.9355 2410.0765,-8476.6582 2621.038,-8477.1169 2771.7857,-8485.6862"/>
<polygon fill="#000000" stroke="#000000" points="2771.8913,-8489.1983 2782.0789,-8486.2891 2772.3007,-8482.2102 2771.8913,-8489.1983"/>
</g>
<!-- org.scalacheck.Shrink[Set[Either[Int,String]]]&#45;&gt;Set[Either[Int,String]] =&gt; Traversable[Either[Int,String]] -->
<g id="edge658" class="edge">
<title>org.scalacheck.Shrink[Set[Either[Int,String]]]&#45;&gt;Set[Either[Int,String]] =&gt; Traversable[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M1880.6192,-11141.641C2015.3159,-11129.7189 2222.474,-11134.636 2347.1092,-11250.9355 2359.0927,-11262.1176 2342.6502,-11276.2859 2355.1092,-11286.9355 2408.3628,-11332.4552 2575.2541,-11339.0006 2715.8212,-11335.561"/>
<polygon fill="#000000" stroke="#000000" points="2715.9899,-11339.0579 2725.8946,-11335.2965 2715.8061,-11332.0603 2715.9899,-11339.0579"/>
</g>
<!-- org.scalacheck.Shrink[Set[Either[Int,String]]]&#45;&gt;org.scalacheck.util.Buildable[Either[Int,String],Set[Either[Int,String]]] -->
<g id="edge305" class="edge">
<title>org.scalacheck.Shrink[Set[Either[Int,String]]]&#45;&gt;org.scalacheck.util.Buildable[Either[Int,String],Set[Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M1905.7007,-11176.004C2027.9253,-11187.525 2202.2515,-11203.3472 2355.1092,-11214.9355 2460.6741,-11222.9386 2577.2162,-11230.4652 2677.7132,-11236.5465"/>
<polygon fill="#000000" stroke="#000000" points="2677.5057,-11240.0402 2687.6984,-11237.1491 2677.9275,-11233.0529 2677.5057,-11240.0402"/>
</g>
<!-- org.scalacheck.Arbitrary[Some[Int]] -->
<g id="node1417" class="node">
<title>org.scalacheck.Arbitrary[Some[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-2396.9355" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="3971.2721" y="-2400.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Some[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-2385.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Some[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge325" class="edge">
<title>org.scalacheck.Arbitrary[Some[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4210.3611,-2407.5806C4325.0096,-2411.7195 4490.037,-2406.9802 4625.8509,-2360.9355 4840.711,-2288.0921 5051.4483,-2107.2462 5132.684,-2032.2966"/>
<polygon fill="#000000" stroke="#000000" points="5135.1871,-2034.7487 5140.137,-2025.3812 5130.4259,-2029.6173 5135.1871,-2034.7487"/>
</g>
<!-- Int(10) =&gt; ?{def asJson: ?} -->
<g id="node1418" class="node">
<title>Int(10) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-72332.9355" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="496.5494" y="-72336.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Int(10) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-72321.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S] -->
<g id="node1419" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-72404.9355" rx="467.2952" ry="26.7407"/>
<text text-anchor="start" x="249.5494" y="-72408.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S]</text>
<text text-anchor="middle" x="572.0494" y="-72393.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- e.type =&gt; ?{def asJson: ?} -->
<g id="node1422" class="node">
<title>e.type =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-72476.9355" rx="115.0173" ry="26.7407"/>
<text text-anchor="start" x="498.5494" y="-72480.7355" font-family="Times,serif" font-size="14.00" fill="#000000">e.type =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-72465.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; EncoderSuite.this.PropertyCheckConfigParam -->
<g id="node1424" class="node">
<title>(Any =&gt; Nothing) =&gt; EncoderSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-72548.9355" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="382.5494" y="-72552.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; EncoderSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-72537.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 1ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ObjectEncoderSuite.this.PropertyCheckConfigParam -->
<g id="node1427" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ObjectEncoderSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-72620.9355" rx="368.3053" ry="26.7407"/>
<text text-anchor="start" x="319.5494" y="-72624.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ObjectEncoderSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-72609.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[Double] -->
<g id="node1429" class="node">
<title>org.scalacheck.Shrink[Double]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-38294.9355" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="487.5494" y="-38298.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Double]</text>
<text text-anchor="middle" x="572.0494" y="-38283.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 29ms</text>
</g>
<!-- org.scalacheck.Shrink[Double]&#45;&gt;Fractional[Double] -->
<g id="edge1337" class="edge">
<title>org.scalacheck.Shrink[Double]&#45;&gt;Fractional[Double]</title>
<path fill="none" stroke="#000000" d="M703.1344,-38294.9355C942.4554,-38294.9355 1444.7744,-38294.9355 1654.4715,-38294.9355"/>
<polygon fill="#000000" stroke="#000000" points="1654.5364,-38298.4356 1664.5363,-38294.9355 1654.5363,-38291.4356 1654.5364,-38298.4356"/>
</g>
<!-- org.scalacheck.Shrink[Double]&#45;&gt;Integral[Double] -->
<g id="edge1529" class="edge">
<title>org.scalacheck.Shrink[Double]&#45;&gt;Integral[Double]</title>
<path fill="none" stroke="#000000" d="M697.3586,-38287.0929C814.836,-38279.7559 995.371,-38268.5206 1152.0988,-38258.9355 1334.5975,-38247.7745 1548.468,-38234.9506 1664.3885,-38228.0213"/>
<polygon fill="#000000" stroke="#000000" points="1664.8397,-38231.5007 1674.6131,-38227.4102 1664.422,-38224.5131 1664.8397,-38231.5007"/>
</g>
<!-- io.circe.Decoder[Option[Int]] -->
<g id="node1430" class="node">
<title>io.circe.Decoder[Option[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-12474.9355" rx="125.316" ry="26.7407"/>
<text text-anchor="start" x="3990.2721" y="-12478.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Option[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-12463.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- io.circe.Decoder[Option[Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1255" class="edge">
<title>io.circe.Decoder[Option[Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4187.1966,-12465.0291C4332.0703,-12455.5485 4567.5515,-12450.4385 4625.8509,-12510.9355 4648.0645,-12533.9865 4614.0332,-12773.795 4633.8509,-12798.9355 4736.2358,-12928.8197 4942.6013,-12949.1031 5066.6249,-12948.4791"/>
<polygon fill="#000000" stroke="#000000" points="5066.92,-12951.9765 5076.8853,-12948.3788 5066.8516,-12944.9768 5066.92,-12951.9765"/>
</g>
<!-- io.circe.Decoder[Option[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with Option[Int]] -->
<g id="edge772" class="edge">
<title>io.circe.Decoder[Option[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with Option[Int]]</title>
<path fill="none" stroke="#000000" d="M4196.0711,-12474.9355C4345.6184,-12474.9355 4602.0741,-12474.9355 4813.9693,-12474.9355"/>
<polygon fill="#000000" stroke="#000000" points="4814.0253,-12478.4356 4824.0252,-12474.9355 4814.0252,-12471.4356 4814.0253,-12478.4356"/>
</g>
<!-- String(&#39;deleteGoFirst&#39;) =&gt; ?{def should: ?} -->
<g id="node1432" class="node">
<title>String(&#39;deleteGoFirst&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-26126.9355" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="454.5494" y="-26130.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;deleteGoFirst&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-26115.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;deleteGoFirst&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge625" class="edge">
<title>String(&#39;deleteGoFirst&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M737.2404,-26116.9912C883.6327,-26111.7433 1083.3247,-26114.4544 1144.0988,-26162.9355 1483.6662,-26433.8179 1708.1849,-27922.5881 1744.4333,-28177.7235"/>
<polygon fill="#000000" stroke="#000000" points="1741.0131,-28178.535 1745.8785,-28187.9467 1747.9442,-28177.5552 1741.0131,-28178.535"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(Byte, Int),scala.collection.immutable.Map[Byte,Int]] -->
<g id="node1434" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(Byte, Int),scala.collection.immutable.Map[Byte,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-2942.9355" rx="381.6754" ry="26.7407"/>
<text text-anchor="start" x="4905.7166" y="-2946.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(Byte, Int),scala.collection.immutable.Map[Byte,Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-2931.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- shapeless.IsTuple[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]] -->
<g id="node1435" class="node">
<title>shapeless.IsTuple[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-19066.9355" rx="340.651" ry="26.7407"/>
<text text-anchor="start" x="10625.4287" y="-19070.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]</text>
<text text-anchor="middle" x="10858.4287" y="-19055.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[(Int, String, Char)] -->
<g id="node1436" class="node">
<title>scala.reflect.ClassTag[(Int, String, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-9654.9355" rx="171.6541" ry="26.7407"/>
<text text-anchor="start" x="5054.2166" y="-9658.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, String, Char)]</text>
<text text-anchor="middle" x="5167.7166" y="-9643.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- c.type =&gt; ?{def asJson: ?} -->
<g id="node1437" class="node">
<title>c.type =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-72692.9355" rx="115.0173" ry="26.7407"/>
<text text-anchor="start" x="498.5494" y="-72696.7355" font-family="Times,serif" font-size="14.00" fill="#000000">c.type =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-72681.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[scala.math.BigInt] -->
<g id="node1438" class="node">
<title>cats.kernel.Eq[scala.math.BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-72764.9355" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="480.0494" y="-72768.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.math.BigInt]</text>
<text text-anchor="middle" x="572.0494" y="-72753.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- shapeless.IsTuple[scala.math.BigInt] -->
<g id="node1803" class="node">
<title>shapeless.IsTuple[scala.math.BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-72764.9355" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="1648.604" y="-72768.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[scala.math.BigInt]</text>
<text text-anchor="middle" x="1749.604" y="-72753.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[scala.math.BigInt]&#45;&gt;shapeless.IsTuple[scala.math.BigInt] -->
<g id="edge84" class="edge">
<title>cats.kernel.Eq[scala.math.BigInt]&#45;&gt;shapeless.IsTuple[scala.math.BigInt]</title>
<path fill="none" stroke="#000000" d="M713.5047,-72764.9355C932.5325,-72764.9355 1352.6528,-72764.9355 1584.9826,-72764.9355"/>
<polygon fill="#000000" stroke="#000000" points="1585.2184,-72768.4356 1595.2184,-72764.9355 1585.2183,-72761.4356 1585.2184,-72768.4356"/>
</g>
<!-- Int(100) =&gt; ?{def asJson: ?} -->
<g id="node1440" class="node">
<title>Int(100) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-72836.9355" rx="123.0732" ry="26.7407"/>
<text text-anchor="start" x="493.0494" y="-72840.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Int(100) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-72825.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; Seq[?T] -->
<g id="node1441" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; Seq[?T]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-72908.9355" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="429.0494" y="-72912.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; Seq[?T]</text>
<text text-anchor="middle" x="572.0494" y="-72897.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Char(&#39;e&#39;) =&gt; CharSequence -->
<g id="node1442" class="node">
<title>Char(&#39;e&#39;) =&gt; CharSequence</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-72980.9355" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="498.0494" y="-72984.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Char(&#39;e&#39;) =&gt; CharSequence</text>
<text text-anchor="middle" x="572.0494" y="-72969.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q] -->
<g id="node1443" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-73052.9355" rx="441.8835" ry="26.7407"/>
<text text-anchor="start" x="267.5494" y="-73056.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q]</text>
<text text-anchor="middle" x="572.0494" y="-73041.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[Set[String]] -->
<g id="node1444" class="node">
<title>io.circe.Decoder[Set[String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-10674.9355" rx="123.9879" ry="26.7407"/>
<text text-anchor="start" x="3991.2721" y="-10678.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Set[String]]</text>
<text text-anchor="middle" x="4070.7721" y="-10663.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Decoder[Set[String]]&#45;&gt;io.circe.Decoder[String] -->
<g id="edge659" class="edge">
<title>io.circe.Decoder[Set[String]]&#45;&gt;io.circe.Decoder[String]</title>
<path fill="none" stroke="#000000" d="M4194.2941,-10677.1625C4307.1868,-10680.5666 4478.4894,-10689.1736 4625.8509,-10710.9355 4792.2304,-10735.506 4982.9759,-10784.9483 5087.959,-10814.0581"/>
<polygon fill="#000000" stroke="#000000" points="5087.2749,-10817.5007 5097.8472,-10816.8102 5089.1518,-10810.757 5087.2749,-10817.5007"/>
</g>
<!-- String(&#39;asNull&#39;) =&gt; ?{def should: ?} -->
<g id="node1446" class="node">
<title>String(&#39;asNull&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-26054.9355" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="474.0494" y="-26058.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;asNull&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-26043.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;asNull&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1013" class="edge">
<title>String(&#39;asNull&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M713.2715,-26045.8291C860.9999,-26039.3731 1080.1582,-26039.4439 1144.0988,-26090.9355 1493.8889,-26372.6231 1710.5278,-27917.2562 1744.8103,-28177.655"/>
<polygon fill="#000000" stroke="#000000" points="1741.3617,-28178.2757 1746.1307,-28187.7365 1748.3024,-28177.3666 1741.3617,-28178.2757"/>
</g>
<!-- org.scalacheck.util.Buildable[(Int, String),Either[Int,String]] -->
<g id="node1447" class="node">
<title>org.scalacheck.util.Buildable[(Int, String),Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-11682.9355" rx="244.818" ry="26.7407"/>
<text text-anchor="start" x="3905.7721" y="-11686.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[(Int, String),Either[Int,String]]</text>
<text text-anchor="middle" x="4070.7721" y="-11671.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(Int, String),Either[Int,String]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Int, String),Either[Int,String]] -->
<g id="edge637" class="edge">
<title>org.scalacheck.util.Buildable[(Int, String),Either[Int,String]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Int, String),Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M4315.5825,-11682.9355C4478.1777,-11682.9355 4692.7636,-11682.9355 4865.9176,-11682.9355"/>
<polygon fill="#000000" stroke="#000000" points="4865.9543,-11686.4356 4875.9542,-11682.9355 4865.9542,-11679.4356 4865.9543,-11686.4356"/>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc2] -->
<g id="node1448" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc2]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-34442.9355" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="452.0494" y="-34446.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc2]</text>
<text text-anchor="middle" x="572.0494" y="-34431.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc2]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc2] -->
<g id="edge689" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc2]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc2]</title>
<path fill="none" stroke="#000000" d="M753.14,-34442.9355C966.8731,-34442.9355 1321.4043,-34442.9355 1544.915,-34442.9355"/>
<polygon fill="#000000" stroke="#000000" points="1545.1268,-34446.4356 1555.1268,-34442.9355 1545.1267,-34439.4356 1545.1268,-34446.4356"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O] -->
<g id="node1451" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-73124.9355" rx="465.9667" ry="26.7407"/>
<text text-anchor="start" x="250.5494" y="-73128.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O]</text>
<text text-anchor="middle" x="572.0494" y="-73113.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, String)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge851" class="edge">
<title>org.scalacheck.Arbitrary[(Int, String)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M4214.252,-10030.3976C4359.6557,-10038.5169 4570.8073,-10039.528 4625.8509,-9982.9355 4642.5959,-9965.7194 4617.1602,-9784.2043 4633.8509,-9766.9355 4686.6526,-9712.3053 4889.8465,-9711.9641 5029.7453,-9718.845"/>
<polygon fill="#000000" stroke="#000000" points="5029.9606,-9722.3605 5040.1259,-9719.3745 5030.3172,-9715.3696 5029.9606,-9722.3605"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, String)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge476" class="edge">
<title>org.scalacheck.Arbitrary[(Int, String)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4213.3182,-10030.7035C4359.1017,-10039.2161 4571.6671,-10040.6832 4625.8509,-9982.9355 4634.4278,-9973.7946 4630.0808,-2774.8899 4633.8509,-2762.9355 4736.1733,-2438.4938 5030.4945,-2131.6695 5132.4476,-2032.3439"/>
<polygon fill="#000000" stroke="#000000" points="5134.9905,-2034.7534 5139.7343,-2025.2798 5130.1181,-2029.7274 5134.9905,-2034.7534"/>
</g>
<!-- scala.reflect.ClassTag[(Int, String)] -->
<g id="node1852" class="node">
<title>scala.reflect.ClassTag[(Int, String)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-10018.9355" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="5071.2166" y="-10022.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, String)]</text>
<text text-anchor="middle" x="5167.7166" y="-10007.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, String)]&#45;&gt;scala.reflect.ClassTag[(Int, String)] -->
<g id="edge967" class="edge">
<title>org.scalacheck.Arbitrary[(Int, String)]&#45;&gt;scala.reflect.ClassTag[(Int, String)]</title>
<path fill="none" stroke="#000000" d="M4229.3983,-10018.9355C4437.7318,-10018.9355 4801.4089,-10018.9355 5009.5257,-10018.9355"/>
<polygon fill="#000000" stroke="#000000" points="5009.6243,-10022.4356 5019.6242,-10018.9355 5009.6242,-10015.4356 5009.6243,-10022.4356"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]&#45;&gt;cats.kernel.Eq[Unit] -->
<g id="edge1201" class="edge">
<title>cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]&#45;&gt;cats.kernel.Eq[Unit]</title>
<path fill="none" stroke="#000000" d="M18720.528,-14447.4292C18791.7015,-14432.1509 18885.5952,-14413.3479 18969.484,-14400.9355 19060.5358,-14387.4634 19165.0451,-14377.7831 19239.3148,-14371.8768"/>
<polygon fill="#000000" stroke="#000000" points="19239.8947,-14375.3421 19249.5894,-14371.0684 19239.3456,-14368.3636 19239.8947,-14375.3421"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]&#45;&gt;cats.kernel.Order[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="edge998" class="edge">
<title>cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]&#45;&gt;cats.kernel.Order[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<path fill="none" stroke="#000000" d="M18904.3877,-14487.5911C18962.0848,-14490.4366 19022.1254,-14493.3977 19078.465,-14496.1763"/>
<polygon fill="#000000" stroke="#000000" points="19078.4115,-14499.6778 19088.5718,-14496.6747 19078.7564,-14492.6863 19078.4115,-14499.6778"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]&#45;&gt;shapeless.IsTuple[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]] -->
<g id="edge522" class="edge">
<title>cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]&#45;&gt;shapeless.IsTuple[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]</title>
<path fill="none" stroke="#000000" d="M18904.3877,-14458.28C18943.0548,-14456.373 18982.7743,-14454.4141 19021.7271,-14452.493"/>
<polygon fill="#000000" stroke="#000000" points="19022.3346,-14455.9674 19032.1501,-14451.979 19021.9898,-14448.9759 19022.3346,-14455.9674"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]&#45;&gt;cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="edge865" class="edge">
<title>cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]&#45;&gt;cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<path fill="none" stroke="#000000" d="M18882.4779,-14490.0201C18912.5869,-14502.449 18940.0369,-14520.1288 18961.484,-14544.9355 18982.4451,-14569.18 18947.3037,-14665.8013 18969.484,-14688.9355 19029.6133,-14751.6509 19129.0563,-14758.0766 19209.3743,-14750.2226"/>
<polygon fill="#000000" stroke="#000000" points="19209.9959,-14753.6764 19219.5704,-14749.1398 19209.2566,-14746.7155 19209.9959,-14753.6764"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]&#45;&gt;cats.kernel.PartialOrder[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="edge251" class="edge">
<title>cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Unit]]&#45;&gt;cats.kernel.PartialOrder[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<path fill="none" stroke="#000000" d="M18720.528,-14498.4419C18791.7015,-14513.7202 18885.5952,-14532.5232 18969.484,-14544.9355 19012.6936,-14551.3289 19058.9338,-14556.8683 19103.5347,-14561.5556"/>
<polygon fill="#000000" stroke="#000000" points="19103.3158,-14565.0516 19113.6241,-14562.6045 19104.0396,-14558.0892 19103.3158,-14565.0516"/>
</g>
<!-- String(&#39;Encoder[Enumeration]&#39;) =&gt; ?{def should: ?} -->
<g id="node1458" class="node">
<title>String(&#39;Encoder[Enumeration]&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-25982.9355" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="429.0494" y="-25986.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Encoder[Enumeration]&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-25971.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;Encoder[Enumeration]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge792" class="edge">
<title>String(&#39;Encoder[Enumeration]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M766.5436,-25971.8016C909.2796,-25967.8519 1087.6707,-25973.0893 1144.0988,-26018.9355 1504.174,-26311.4866 1712.8371,-27912.3545 1745.175,-28177.6745"/>
<polygon fill="#000000" stroke="#000000" points="1741.7402,-28178.4245 1746.418,-28187.9307 1748.6893,-28177.5822 1741.7402,-28178.4245"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc21] -->
<g id="node1459" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc21]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-48860.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-48864.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc21]</text>
<text text-anchor="middle" x="572.0494" y="-48849.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc21]&#45;&gt;Integral[ProductCodecSuite.this.Cc21] -->
<g id="edge1376" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc21]&#45;&gt;Integral[ProductCodecSuite.this.Cc21]</title>
<path fill="none" stroke="#000000" d="M788.0311,-48860.9355C1015.6943,-48860.9355 1369.686,-48860.9355 1578.6973,-48860.9355"/>
<polygon fill="#000000" stroke="#000000" points="1578.8485,-48864.4356 1588.8485,-48860.9355 1578.8485,-48857.4356 1578.8485,-48864.4356"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc21]&#45;&gt;Fractional[ProductCodecSuite.this.Cc21] -->
<g id="edge618" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc21]&#45;&gt;Fractional[ProductCodecSuite.this.Cc21]</title>
<path fill="none" stroke="#000000" d="M765.0635,-48848.8688C877.8961,-48841.8367 1023.0658,-48832.8268 1152.0988,-48824.9355 1296.752,-48816.089 1461.1148,-48806.1978 1580.7884,-48799.0252"/>
<polygon fill="#000000" stroke="#000000" points="1581.0013,-48802.5189 1590.774,-48798.4269 1580.5825,-48795.5314 1581.0013,-48802.5189"/>
</g>
<!-- String(&#39;JsonObject.fromIterable&#39;) =&gt; ?{def should: ?} -->
<g id="node1461" class="node">
<title>String(&#39;JsonObject.fromIterable&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-25910.9355" rx="218.492" ry="26.7407"/>
<text text-anchor="start" x="425.5494" y="-25914.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;JsonObject.fromIterable&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-25899.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- String(&#39;JsonObject.fromIterable&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge345" class="edge">
<title>String(&#39;JsonObject.fromIterable&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M770.3194,-25899.5736C912.4839,-25895.7468 1088.3391,-25901.2538 1144.0988,-25946.9355 1514.4978,-26250.3894 1715.0856,-27907.6896 1745.5212,-28177.7313"/>
<polygon fill="#000000" stroke="#000000" points="1742.0581,-28178.257 1746.6499,-28187.805 1749.0146,-28177.4775 1742.0581,-28178.257"/>
</g>
<!-- org.scalacheck.Shrink[io.circe.JsonNumber] -->
<g id="node1462" class="node">
<title>org.scalacheck.Shrink[io.circe.JsonNumber]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-73196.9355" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="450.5494" y="-73200.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[io.circe.JsonNumber]</text>
<text text-anchor="middle" x="572.0494" y="-73185.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[List[Int]] -->
<g id="node1464" class="node">
<title>io.circe.Decoder[List[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-12978.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="3998.2721" y="-12982.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[List[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-12967.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 16ms</text>
</g>
<!-- io.circe.Decoder[List[Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge780" class="edge">
<title>io.circe.Decoder[List[Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4183.7766,-12975.2269C4397.8918,-12968.2 4859.6326,-12953.0464 5065.2881,-12946.2971"/>
<polygon fill="#000000" stroke="#000000" points="5065.6025,-12949.7888 5075.4823,-12945.9625 5065.3728,-12942.7925 5065.6025,-12949.7888"/>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.AccumulatingDecoder[Int =&gt; Int]] -->
<g id="node1465" class="node">
<title>org.scalacheck.Arbitrary[io.circe.AccumulatingDecoder[Int =&gt; Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-3374.9355" rx="275.5435" ry="26.7407"/>
<text text-anchor="start" x="1562.604" y="-3378.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.AccumulatingDecoder[Int =&gt; Int]]</text>
<text text-anchor="middle" x="1749.604" y="-3363.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 19ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.AccumulatingDecoder[Int =&gt; Int]]&#45;&gt;org.scalacheck.Arbitrary[Int =&gt; Int] -->
<g id="edge1561" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.AccumulatingDecoder[Int =&gt; Int]]&#45;&gt;org.scalacheck.Arbitrary[Int =&gt; Int]</title>
<path fill="none" stroke="#000000" d="M2025.5641,-3374.9355C2256.5845,-3374.9355 2578.3459,-3374.9355 2769.7058,-3374.9355"/>
<polygon fill="#000000" stroke="#000000" points="2769.8511,-3378.4356 2779.8511,-3374.9355 2769.851,-3371.4356 2769.8511,-3378.4356"/>
</g>
<!-- org.scalacheck.util.Buildable[((String, io.circe.Json), Boolean),((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;scala.collection.generic.CanBuildFrom[F,((String, io.circe.Json), Boolean),((String, io.circe.Json)) =&gt; Boolean] -->
<g id="edge165" class="edge">
<title>org.scalacheck.util.Buildable[((String, io.circe.Json), Boolean),((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;scala.collection.generic.CanBuildFrom[F,((String, io.circe.Json), Boolean),((String, io.circe.Json)) =&gt; Boolean]</title>
<path fill="none" stroke="#000000" d="M3308.8173,-7571.548C3416.2506,-7573.9996 3534.0189,-7576.687 3644.1585,-7579.2004"/>
<polygon fill="#000000" stroke="#000000" points="3644.3736,-7582.7061 3654.4509,-7579.4353 3644.5334,-7575.7079 3644.3736,-7582.7061"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1469" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="8203.9914" cy="-17272.9355" rx="312.5824" ry="26.7407"/>
<text text-anchor="start" x="7990.9914" y="-17276.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="8203.9914" y="-17261.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 130ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge996" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M8212.442,-17245.9455C8248.1777,-17136.8781 8398.2783,-16726.5456 8682.2174,-16558.9355 9030.2684,-16353.4802 9184.9366,-16507.3044 9588.2431,-16480.9355 9594.0586,-16480.5553 11260.9222,-16410.0844 11265.0151,-16405.9355 11285.079,-16385.5972 11253.4496,-16169.7539 11273.0151,-16148.9355 11349.4516,-16067.6045 11488.9316,-16076.6574 11577.4693,-16093.0459"/>
<polygon fill="#000000" stroke="#000000" points="11576.9915,-16096.518 11587.4724,-16094.9686 11578.3129,-16089.6439 11576.9915,-16096.518"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge324" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M8380.4412,-17250.7519C8474.493,-17247.7165 8588.2,-17258.8846 8674.2174,-17313.9355 8680.2536,-17317.7986 8676.1519,-17324.1188 8682.2174,-17327.9355 8765.6411,-17380.4296 10353.4753,-17448.6845 10451.8423,-17454.9355 10496.9966,-17457.805 11233.184,-17467.7808 11265.0151,-17499.9355 11278.8651,-17513.9264 11259.4324,-17662.685 11273.0151,-17676.9355 11346.8961,-17754.4492 11478.1277,-17749.4093 11566.6803,-17734.5575"/>
<polygon fill="#000000" stroke="#000000" points="11567.4755,-17737.9716 11576.7228,-17732.8008 11566.2692,-17731.0763 11567.4755,-17737.9716"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge480" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M8312.0087,-17247.6272C8418.8403,-17229.6093 8579.6646,-17222.5122 8674.2174,-17313.9355 8695.4596,-17334.4747 8661.8905,-17358.4902 8682.2174,-17379.9355 8706.3151,-17405.3591 8735.5002,-17424.3534 8767.2936,-17438.3816"/>
<polygon fill="#000000" stroke="#000000" points="8766.209,-17441.7229 8776.7827,-17442.392 8768.9342,-17435.2751 8766.209,-17441.7229"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge1559" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M8464.4379,-17258.0487C8580.6283,-17251.4074 8718.0418,-17243.553 8837.8441,-17236.7052"/>
<polygon fill="#000000" stroke="#000000" points="8838.1213,-17240.1952 8847.9053,-17236.1301 8837.7218,-17233.2066 8838.1213,-17240.1952"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge504" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M8508.2461,-17279.17C8603.0983,-17281.1136 8708.083,-17283.2649 8804.413,-17285.2388"/>
<polygon fill="#000000" stroke="#000000" points="8804.5371,-17288.7419 8814.6068,-17285.4476 8804.6806,-17281.7434 8804.5371,-17288.7419"/>
</g>
<!-- String(&#39;1&#39;) =&gt; ?{def asJson: ?} -->
<g id="node1470" class="node">
<title>String(&#39;1&#39;) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-73268.9355" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="488.5494" y="-73272.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;1&#39;) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-73257.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1473" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-18735.9355" rx="408.0012" ry="26.7407"/>
<text text-anchor="start" x="1469.104" y="-18739.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="1749.604" y="-18724.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 203ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge620" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M1752.509,-18708.9321C1778.878,-18468.8741 1984.4181,-16701.0871 2355.1092,-16351.9355 2637.6686,-16085.7947 3682.6088,-16023.9355 4070.7721,-16023.9355 4070.7721,-16023.9355 4070.7721,-16023.9355 10016.0427,-16023.9355 10571.3721,-16023.9355 10711.5231,-16014.7979 11265.0151,-16059.9355 11368.7539,-16068.3955 11487.0142,-16085.322 11566.5491,-16097.7797"/>
<polygon fill="#000000" stroke="#000000" points="11566.1147,-16101.2543 11576.5375,-16099.3525 11567.2037,-16094.3395 11566.1147,-16101.2543"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge995" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M2049.3491,-18717.6738C2222.6684,-18707.1145 2440.5416,-18693.8408 2616.3853,-18683.1276"/>
<polygon fill="#000000" stroke="#000000" points="2616.8093,-18686.6084 2626.5779,-18682.5067 2616.3836,-18679.6213 2616.8093,-18686.6084"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge816" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M2030.2076,-18755.45C2132.4314,-18761.8113 2248.9456,-18768.1939 2355.1092,-18771.9355 3117.1997,-18798.7946 3308.2085,-18790.9355 4070.7721,-18790.9355 4070.7721,-18790.9355 4070.7721,-18790.9355 5167.7166,-18790.9355 5864.7816,-18790.9355 6042.0436,-18805.5362 6734.887,-18728.9355 8404.0344,-18544.3949 8784.8125,-18252.7162 10451.8423,-18049.9355 10541.7031,-18039.0047 11201.774,-18064.7044 11265.0151,-17999.9355 11281.5607,-17982.9902 11257.5898,-17804.9067 11273.0151,-17786.9355 11337.6375,-17711.6473 11453.456,-17698.0719 11541.3057,-17700.3593"/>
<polygon fill="#000000" stroke="#000000" points="11541.2231,-17703.8584 11551.3336,-17700.6919 11541.4551,-17696.8623 11541.2231,-17703.8584"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge487" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M2157.9664,-18735.9355C2259.0144,-18735.9355 2367.9595,-18735.9355 2471.2874,-18735.9355"/>
<polygon fill="#000000" stroke="#000000" points="2471.5907,-18739.4356 2481.5906,-18735.9355 2471.5906,-18732.4356 2471.5907,-18739.4356"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge229" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M1864.3052,-18710.0943C1995.3407,-18687.6677 2209.3743,-18673.5727 2347.1092,-18780.9355 2355.9771,-18787.8479 2346.2271,-18798.0416 2355.1092,-18804.9355 2482.885,-18904.1102 2678.353,-18894.6103 2805.5324,-18873.9954"/>
<polygon fill="#000000" stroke="#000000" points="2806.4239,-18877.3952 2815.712,-18872.2981 2805.2725,-18870.4905 2806.4239,-18877.3952"/>
</g>
<!-- io.circe.Decoder.Result[Map[String,Int]] =&gt; ?{def ===: ?} -->
<g id="node1475" class="node">
<title>io.circe.Decoder.Result[Map[String,Int]] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-73340.9355" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="408.5494" y="-73344.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[Map[String,Int]] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-73329.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- String(&#39;%s%s%s&#39;) =&gt; ?{def format: ?} -->
<g id="node1476" class="node">
<title>String(&#39;%s%s%s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-73412.9355" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="465.0494" y="-73416.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s%s%s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="572.0494" y="-73401.7355" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 16ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Short,Int]] -->
<g id="node1477" class="node">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Short,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-15462.9355" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="2749.9013" y="-15466.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[scala.collection.immutable.Map[Short,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-15451.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Short,Int]]&#45;&gt;scala.collection.immutable.Map[Short,Int] =&gt; Traversable[(Short, Int)] -->
<g id="edge917" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Short,Int]]&#45;&gt;scala.collection.immutable.Map[Short,Int] =&gt; Traversable[(Short, Int)]</title>
<path fill="none" stroke="#000000" d="M3088.2982,-15484.7684C3205.7827,-15500.5085 3370.56,-15521.2986 3515.6933,-15534.9355 3611.4749,-15543.9353 3716.7674,-15551.3823 3809.6643,-15557.122"/>
<polygon fill="#000000" stroke="#000000" points="3809.5728,-15560.6229 3819.7686,-15557.7426 3810.002,-15553.6361 3809.5728,-15560.6229"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Short,Int]]&#45;&gt;org.scalacheck.Shrink[(Short, Int)] -->
<g id="edge279" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Short,Int]]&#45;&gt;org.scalacheck.Shrink[(Short, Int)]</title>
<path fill="none" stroke="#000000" d="M3088.2982,-15441.1027C3205.7827,-15425.3626 3370.56,-15404.5725 3515.6933,-15390.9355 3652.1884,-15378.1103 3807.9985,-15368.4385 3919.7252,-15362.3669"/>
<polygon fill="#000000" stroke="#000000" points="3919.9225,-15365.8614 3929.7191,-15361.827 3919.5448,-15358.8716 3919.9225,-15365.8614"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Short,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Short, Int),scala.collection.immutable.Map[Short,Int]] -->
<g id="edge895" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Short,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Short, Int),scala.collection.immutable.Map[Short,Int]]</title>
<path fill="none" stroke="#000000" d="M3187.0983,-15471.0147C3351.7831,-15476.2181 3567.3775,-15483.0301 3744.3853,-15488.6229"/>
<polygon fill="#000000" stroke="#000000" points="3744.277,-15492.1211 3754.3825,-15488.9388 3744.4981,-15485.1246 3744.277,-15492.1211"/>
</g>
<!-- Integral[scala.collection.immutable.Map[Short,Int]] -->
<g id="node1865" class="node">
<title>Integral[scala.collection.immutable.Map[Short,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-15426.9355" rx="212.6784" ry="26.7407"/>
<text text-anchor="start" x="3928.2721" y="-15430.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[scala.collection.immutable.Map[Short,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-15415.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Short,Int]]&#45;&gt;Integral[scala.collection.immutable.Map[Short,Int]] -->
<g id="edge269" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Short,Int]]&#45;&gt;Integral[scala.collection.immutable.Map[Short,Int]]</title>
<path fill="none" stroke="#000000" d="M3187.0983,-15454.8564C3387.7205,-15448.5175 3663.8958,-15439.7914 3853.8226,-15433.7904"/>
<polygon fill="#000000" stroke="#000000" points="3854.0492,-15437.2851 3863.9337,-15433.4709 3853.8281,-15430.2885 3854.0492,-15437.2851"/>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc15]] -->
<g id="node1478" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc15]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-73484.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="1549.604" y="-73488.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc15]]</text>
<text text-anchor="middle" x="1749.604" y="-73473.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Either[Int,String]],Some[io.circe.Json],That] -->
<g id="node1479" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Either[Int,String]],Some[io.circe.Json],That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-73556.9355" rx="355.8495" ry="26.7407"/>
<text text-anchor="start" x="328.5494" y="-73560.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Either[Int,String]],Some[io.circe.Json],That]</text>
<text text-anchor="middle" x="572.0494" y="-73545.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;obj&#39;) =&gt; ?{def should: ?} -->
<g id="node1480" class="node">
<title>String(&#39;obj&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-25838.9355" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="483.0494" y="-25842.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;obj&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-25827.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;obj&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge853" class="edge">
<title>String(&#39;obj&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M701.8994,-25830.0807C849.7103,-25822.864 1079.1152,-25821.2785 1144.0988,-25874.9355 1524.6814,-26189.1836 1717.0958,-27901.6626 1745.8099,-28177.4394"/>
<polygon fill="#000000" stroke="#000000" points="1742.3625,-28178.1296 1746.8731,-28187.7163 1749.3253,-28177.4092 1742.3625,-28178.1296"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; (?A =&gt; ?ASSERTION) -->
<g id="node1482" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; (?A =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-73628.9355" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="409.5494" y="-73632.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; (?A =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-73617.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc12] -->
<g id="node1483" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc12]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-33758.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-33762.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc12]</text>
<text text-anchor="middle" x="572.0494" y="-33747.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc12]&#45;&gt;Fractional[ProductCodecSuite.this.Cc12] -->
<g id="edge1011" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc12]&#45;&gt;Fractional[ProductCodecSuite.this.Cc12]</title>
<path fill="none" stroke="#000000" d="M788.0311,-33758.9355C1012.428,-33758.9355 1359.5544,-33758.9355 1569.6124,-33758.9355"/>
<polygon fill="#000000" stroke="#000000" points="1569.8215,-33762.4356 1579.8214,-33758.9355 1569.8214,-33755.4356 1569.8215,-33762.4356"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc12] -->
<g id="node1519" class="node">
<title>Integral[ProductCodecSuite.this.Cc12]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-33686.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="1644.104" y="-33690.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc12]</text>
<text text-anchor="middle" x="1749.604" y="-33675.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc12]&#45;&gt;Integral[ProductCodecSuite.this.Cc12] -->
<g id="edge411" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc12]&#45;&gt;Integral[ProductCodecSuite.this.Cc12]</title>
<path fill="none" stroke="#000000" d="M765.0635,-33746.8688C877.8961,-33739.8367 1023.0658,-33730.8268 1152.0988,-33722.9355 1299.7788,-33713.9039 1468.0017,-33703.7834 1588.2413,-33696.5786"/>
<polygon fill="#000000" stroke="#000000" points="1588.494,-33700.0698 1598.2667,-33695.978 1588.0753,-33693.0824 1588.494,-33700.0698"/>
</g>
<!-- String(&#39;z&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1484" class="node">
<title>String(&#39;z&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-73700.9355" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="500.0494" y="-73704.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;z&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="572.0494" y="-73689.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- String(&#39;asBoolean&#39;) =&gt; ?{def should: ?} -->
<g id="node1485" class="node">
<title>String(&#39;asBoolean&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-25766.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="463.5494" y="-25770.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;asBoolean&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-25755.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;asBoolean&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1218" class="edge">
<title>String(&#39;asBoolean&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M725.1593,-25756.9358C872.7855,-25750.6796 1082.6094,-25751.7875 1144.0988,-25802.9355 1535.2995,-26128.3442 1719.4487,-27899.4631 1746.1711,-28178.0463"/>
<polygon fill="#000000" stroke="#000000" points="1742.691,-28178.4234 1747.1239,-28188.0463 1749.6595,-28177.7593 1742.691,-28178.4234"/>
</g>
<!-- org.scalactic.Prettifier -->
<g id="node1486" class="node">
<title>org.scalactic.Prettifier</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-73772.9355" rx="96.7474" ry="26.7407"/>
<text text-anchor="start" x="511.5494" y="-73776.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalactic.Prettifier</text>
<text text-anchor="middle" x="572.0494" y="-73761.7355" font-family="Times,serif" font-size="14.00" fill="#000000">413 times = 135ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Throwable -->
<g id="node1487" class="node">
<title>(=&gt; Unit) =&gt; Throwable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-73844.9355" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="504.0494" y="-73848.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Throwable</text>
<text text-anchor="middle" x="572.0494" y="-73833.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- v.type =&gt; ?{def asJson: ?} -->
<g id="node1488" class="node">
<title>v.type =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-73916.9355" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="498.0494" y="-73920.7355" font-family="Times,serif" font-size="14.00" fill="#000000">v.type =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-73905.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[io.circe.Json] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node1489" class="node">
<title>Option[io.circe.Json] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-73988.9355" rx="263.5019" ry="26.7407"/>
<text text-anchor="start" x="393.5494" y="-73992.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[io.circe.Json] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="572.0494" y="-73977.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F] -->
<g id="node1490" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-74060.9355" rx="357.1779" ry="26.7407"/>
<text text-anchor="start" x="327.5494" y="-74064.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor6[?A,?B,?C,?D,?E,?F]</text>
<text text-anchor="middle" x="572.0494" y="-74049.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;asJsonObject&#39;) =&gt; ?{def should: ?} -->
<g id="node1491" class="node">
<title>String(&#39;asJsonObject&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-25694.9355" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="456.0494" y="-25698.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;asJsonObject&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-25683.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;asJsonObject&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge670" class="edge">
<title>String(&#39;asJsonObject&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M733.9142,-25684.4882C881.0198,-25678.5829 1083.9771,-25680.5754 1144.0988,-25730.9355 1545.5649,-26067.2186 1721.3768,-27893.9943 1746.4356,-28177.8562"/>
<polygon fill="#000000" stroke="#000000" points="1742.9678,-28178.3784 1747.3276,-28188.0346 1749.9411,-28177.7672 1742.9678,-28178.3784"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc7] -->
<g id="node1493" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc7]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-37862.9355" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="423.5494" y="-37866.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc7]</text>
<text text-anchor="middle" x="572.0494" y="-37851.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc7]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc7] -->
<g id="edge1066" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc7]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc7]</title>
<path fill="none" stroke="#000000" d="M793.5384,-37862.9355C1003.7878,-37862.9355 1318.0755,-37862.9355 1528.2728,-37862.9355"/>
<polygon fill="#000000" stroke="#000000" points="1528.5155,-37866.4356 1538.5154,-37862.9355 1528.5154,-37859.4356 1528.5155,-37866.4356"/>
</g>
<!-- String(&#39;A tuple decoder&#39;) =&gt; ?{def should: ?} -->
<g id="node1494" class="node">
<title>String(&#39;A tuple decoder&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-25622.9355" rx="186.8525" ry="26.7407"/>
<text text-anchor="start" x="448.0494" y="-25626.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;A tuple decoder&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-25611.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;A tuple decoder&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge244" class="edge">
<title>String(&#39;A tuple decoder&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M742.8035,-25612.0565C889.1384,-25606.5294 1085.3296,-25609.3828 1144.0988,-25658.9355 1555.8644,-26006.1262 1723.2716,-27888.7492 1746.6908,-28177.7072"/>
<polygon fill="#000000" stroke="#000000" points="1743.2327,-28178.3695 1747.523,-28188.0568 1750.2101,-28177.8084 1743.2327,-28178.3695"/>
</g>
<!-- cats.kernel.Eq[Vector[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json] -->
<g id="edge575" class="edge">
<title>cats.kernel.Eq[Vector[io.circe.Json]]&#45;&gt;cats.kernel.Order[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12512.3465,-16611.965C12595.3439,-16600.1309 12712.1518,-16599.4108 12780.0814,-16668.9355 12796.5901,-16685.8319 12771.6239,-16757.9893 12788.0814,-16774.9355 12848.7538,-16837.4097 12951.2089,-16840.5077 13028.371,-16831.5366"/>
<polygon fill="#000000" stroke="#000000" points="13029.1156,-16834.9709 13038.6052,-16830.2595 13028.2488,-16828.0248 13029.1156,-16834.9709"/>
</g>
<!-- cats.kernel.Eq[Vector[io.circe.Json]]&#45;&gt;cats.kernel.Eq[io.circe.Json] -->
<g id="edge188" class="edge">
<title>cats.kernel.Eq[Vector[io.circe.Json]]&#45;&gt;cats.kernel.Eq[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12549.2285,-16646.2634C12793.4496,-16669.1431 13303.2345,-16709.3507 13473.975,-16664.9355 13587.2853,-16635.4598 13702.9813,-16557.555 13762.5836,-16513.1411"/>
<polygon fill="#000000" stroke="#000000" points="13764.724,-16515.9108 13770.6154,-16507.1049 13760.5185,-16510.3149 13764.724,-16515.9108"/>
</g>
<!-- cats.kernel.Eq[Vector[io.circe.Json]]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json] -->
<g id="edge455" class="edge">
<title>cats.kernel.Eq[Vector[io.circe.Json]]&#45;&gt;cats.kernel.PartialOrder[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M12510.828,-16611.7676C12594.2856,-16599.3259 12712.6706,-16597.8094 12780.0814,-16668.9355 12793.7002,-16683.3049 12775.24,-16831.8674 12788.0814,-16846.9355 12832.3459,-16898.8756 12903.7183,-16918.9192 12969.9202,-16925.051"/>
<polygon fill="#000000" stroke="#000000" points="12969.8165,-16928.5543 12980.0703,-16925.8878 12970.3917,-16921.578 12969.8165,-16928.5543"/>
</g>
<!-- shapeless.IsTuple[Vector[io.circe.Json]] -->
<g id="node1663" class="node">
<title>shapeless.IsTuple[Vector[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-16738.9355" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="13021.0282" y="-16742.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Vector[io.circe.Json]]</text>
<text text-anchor="middle" x="13131.0282" y="-16727.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[Vector[io.circe.Json]]&#45;&gt;shapeless.IsTuple[Vector[io.circe.Json]] -->
<g id="edge1403" class="edge">
<title>cats.kernel.Eq[Vector[io.circe.Json]]&#45;&gt;shapeless.IsTuple[Vector[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M12523.8636,-16613.7329C12603.6389,-16605.9713 12710.1157,-16609.9943 12780.0814,-16668.9355 12790.3069,-16677.5498 12777.9446,-16689.2172 12788.0814,-16697.9355 12843.2199,-16745.3582 12923.0897,-16757.0488 12991.8806,-16756.2204"/>
<polygon fill="#000000" stroke="#000000" points="12992.0207,-16759.7184 13001.9454,-16756.0102 12991.8744,-16752.7199 12992.0207,-16759.7184"/>
</g>
<!-- shapeless.IsTuple[Some[Int]] -->
<g id="node1497" class="node">
<title>shapeless.IsTuple[Some[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19994.3036" cy="-14948.9355" rx="125.316" ry="26.7407"/>
<text text-anchor="start" x="19913.8036" y="-14952.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Some[Int]]</text>
<text text-anchor="middle" x="19994.3036" y="-14937.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Either[Int,String],Set[Either[Int,String]]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Either[Int,String],Set[Either[Int,String]]] -->
<g id="edge913" class="edge">
<title>org.scalacheck.util.Buildable[Either[Int,String],Set[Either[Int,String]]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Either[Int,String],Set[Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M3157.5324,-11234.6775C3297.985,-11230.1216 3460.4771,-11236.8175 3507.6933,-11286.9355 3521.4078,-11301.4929 3501.9961,-14152.3619 3515.6933,-14166.9355 3554.7727,-14208.5157 3676.061,-14219.3781 3795.3297,-14219.0225"/>
<polygon fill="#000000" stroke="#000000" points="3795.4016,-14222.5223 3805.3818,-14218.9664 3795.3624,-14215.5224 3795.4016,-14222.5223"/>
</g>
<!-- cats.Order[Int] -->
<g id="node1499" class="node">
<title>cats.Order[Int]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-19320.9355" rx="68.6788" ry="26.7407"/>
<text text-anchor="start" x="11617.8883" y="-19324.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Order[Int]</text>
<text text-anchor="middle" x="11658.3883" y="-19309.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- Integral[Vector[io.circe.Json]] -->
<g id="node1500" class="node">
<title>Integral[Vector[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-9150.9355" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="5084.7166" y="-9154.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Vector[io.circe.Json]]</text>
<text text-anchor="middle" x="5167.7166" y="-9139.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C] -->
<g id="node1502" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-74132.9355" rx="304.1118" ry="26.7407"/>
<text text-anchor="start" x="365.0494" y="-74136.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C]</text>
<text text-anchor="middle" x="572.0494" y="-74121.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Either[Int,String]],io.circe.Json,That] -->
<g id="node1505" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Either[Int,String]],io.circe.Json,That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-74204.9355" rx="431.1703" ry="26.7407"/>
<text text-anchor="start" x="275.0494" y="-74208.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Either[Int,String]],io.circe.Json,That]</text>
<text text-anchor="middle" x="572.0494" y="-74193.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.Eq[io.circe.ParsingFailure] -->
<g id="node1506" class="node">
<title>cats.Eq[io.circe.ParsingFailure]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-58544.9355" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="486.0494" y="-58548.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[io.circe.ParsingFailure]</text>
<text text-anchor="middle" x="572.0494" y="-58533.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 17ms</text>
</g>
<!-- cats.Eq[io.circe.ParsingFailure]&#45;&gt;shapeless.IsTuple[io.circe.ParsingFailure] -->
<g id="edge1328" class="edge">
<title>cats.Eq[io.circe.ParsingFailure]&#45;&gt;shapeless.IsTuple[io.circe.ParsingFailure]</title>
<path fill="none" stroke="#000000" d="M705.1261,-58544.9355C915.9682,-58544.9355 1327.3088,-58544.9355 1566.0407,-58544.9355"/>
<polygon fill="#000000" stroke="#000000" points="1566.2199,-58548.4356 1576.2199,-58544.9355 1566.2199,-58541.4356 1566.2199,-58548.4356"/>
</g>
<!-- String(&#39;replay&#39;) =&gt; ?{def should: ?} -->
<g id="node1508" class="node">
<title>String(&#39;replay&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-25550.9355" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="474.5494" y="-25554.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;replay&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-25539.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;replay&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1427" class="edge">
<title>String(&#39;replay&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M711.4285,-25541.3262C859.62,-25534.2259 1081.1667,-25533.5406 1144.0988,-25586.9355 1566.1851,-25945.0564 1725.1241,-27883.6209 1746.935,-28177.5739"/>
<polygon fill="#000000" stroke="#000000" points="1743.4565,-28177.996 1747.681,-28187.7122 1750.4376,-28177.4823 1743.4565,-28177.996"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge747" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M5269.8634,-17703.3387C5804.9982,-17840.7 8341.0494,-18479.7965 10451.8423,-18806.9355 10631.2561,-18834.7418 11120.6829,-18775.7958 11265.0151,-18885.9355 11272.955,-18891.9945 11264.8637,-18901.1642 11273.0151,-18906.9355 11376.69,-18980.3402 12288.891,-18935.9355 12415.9214,-18935.9355 12415.9214,-18935.9355 12415.9214,-18935.9355 18607.2235,-18935.9355 18854.0883,-18935.9355 19543.6857,-18951.9121 19704.8751,-18764.9355 19715.7306,-18752.3434 19711.1904,-17584.4753 19712.8751,-17567.9355 19769.4374,-17012.6159 19940.796,-16351.8156 19984.2179,-16190.0223"/>
<polygon fill="#000000" stroke="#000000" points="19987.6709,-16190.6594 19986.8904,-16180.0933 19980.9115,-16188.8399 19987.6709,-16190.6594"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1362" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M5232.3166,-17650.1179C5332.6066,-17609.6642 5532.6594,-17533.6558 5709.5822,-17494.9355 5773.106,-17481.0331 5841.8594,-17470.5919 5907.7591,-17462.7672"/>
<polygon fill="#000000" stroke="#000000" points="5908.3587,-17466.221 5917.8843,-17461.5827 5907.5453,-17459.2684 5908.3587,-17466.221"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int)] -->
<g id="node1511" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-6686.9355" rx="199.3083" ry="26.7407"/>
<text text-anchor="start" x="3937.7721" y="-6690.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-6675.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 40ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int)] -->
<g id="edge1437" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4245.4517,-6699.9445C4388.234,-6706.3335 4574.5795,-6703.535 4625.8509,-6650.9355 4641.6846,-6634.6917 4618.0381,-6463.1997 4633.8509,-6446.9355 4686.0892,-6393.2065 4884.5262,-6392.9016 5024.1377,-6400.0227"/>
<polygon fill="#000000" stroke="#000000" points="5024.3345,-6403.5379 5034.5053,-6400.5705 5024.704,-6396.5476 5024.3345,-6403.5379"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge1198" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4249.5381,-6698.9379C4390.8499,-6704.2581 4572.8425,-6700.4672 4625.8509,-6650.9355 4645.5077,-6632.5681 4614.2178,-6609.3282 4633.8509,-6590.9355 4691.7223,-6536.7207 4909.8472,-6538.8067 5048.7391,-6546.2116"/>
<polygon fill="#000000" stroke="#000000" points="5048.8367,-6549.7222 5059.0138,-6546.7767 5049.2212,-6542.7327 5048.8367,-6549.7222"/>
</g>
<!-- String(&#39;set&#39;) =&gt; ?{def should: ?} -->
<g id="node1512" class="node">
<title>String(&#39;set&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-25478.9355" rx="135.5294" ry="26.7407"/>
<text text-anchor="start" x="484.0494" y="-25482.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;set&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-25467.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;set&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1583" class="edge">
<title>String(&#39;set&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M699.914,-25469.8371C847.9304,-25462.1734 1079.6672,-25459.9438 1144.0988,-25514.9355 1576.5496,-25884.0282 1726.9521,-27878.8227 1747.1721,-28177.5042"/>
<polygon fill="#000000" stroke="#000000" points="1743.7008,-28178.0508 1747.8624,-28187.794 1750.6851,-28177.5822 1743.7008,-28178.0508"/>
</g>
<!-- Option[List[(String, io.circe.Json)]] =&gt; ?{def ===: ?} -->
<g id="node1515" class="node">
<title>Option[List[(String, io.circe.Json)]] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="9131.2303" cy="-15570.9355" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="8982.2303" y="-15574.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[List[(String, io.circe.Json)]] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="9131.2303" y="-15559.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 80ms</text>
</g>
<!-- Option[List[(String, io.circe.Json)]] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[List[(String, io.circe.Json)]]] -->
<g id="edge1562" class="edge">
<title>Option[List[(String, io.circe.Json)]] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[List[(String, io.circe.Json)]]]</title>
<path fill="none" stroke="#000000" d="M9353.3637,-15570.9355C9497.4445,-15570.9355 9683.3733,-15570.9355 9821.6008,-15570.9355"/>
<polygon fill="#000000" stroke="#000000" points="9821.8872,-15574.4356 9831.8872,-15570.9355 9821.8872,-15567.4356 9821.8872,-15574.4356"/>
</g>
<!-- MemoizedPiecesSuite.this.PropertyCheckConfigurable -->
<g id="node1516" class="node">
<title>MemoizedPiecesSuite.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-74276.9355" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="421.5494" y="-74280.7355" font-family="Times,serif" font-size="14.00" fill="#000000">MemoizedPiecesSuite.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-74265.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Encoder[Map[Long,Int]] -->
<g id="node1517" class="node">
<title>io.circe.Encoder[Map[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-21878.9355" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="481.5494" y="-21882.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Map[Long,Int]]</text>
<text text-anchor="middle" x="572.0494" y="-21867.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.Encoder[Map[Long,Int]]&#45;&gt;io.circe.KeyEncoder[Long] -->
<g id="edge130" class="edge">
<title>io.circe.Encoder[Map[Long,Int]]&#45;&gt;io.circe.KeyEncoder[Long]</title>
<path fill="none" stroke="#000000" d="M711.4637,-21878.9355C942.0452,-21878.9355 1399.4317,-21878.9355 1621.9959,-21878.9355"/>
<polygon fill="#000000" stroke="#000000" points="1622.0899,-21882.4356 1632.0899,-21878.9355 1622.0898,-21875.4356 1622.0899,-21882.4356"/>
</g>
<!-- io.circe.Encoder[Map[Long,Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge752" class="edge">
<title>io.circe.Encoder[Map[Long,Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M699.87,-21889.6559C849.4,-21899.102 1084.2023,-21903.2739 1144.0988,-21842.9355 1155.3882,-21831.5628 1144.1294,-21712.8381 1152.0988,-21698.9355 1270.7431,-21491.96 1546.753,-21372.9064 1677.9148,-21326.1595"/>
<polygon fill="#000000" stroke="#000000" points="1679.2176,-21329.4114 1687.4849,-21322.7855 1676.8901,-21322.8096 1679.2176,-21329.4114"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION) -->
<g id="node1518" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-74348.9355" rx="340.2368" ry="26.7407"/>
<text text-anchor="start" x="339.5494" y="-74352.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D, ?E, ?F) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-74337.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.PartialOrder[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.Order[io.circe.DecodingFailure] -->
<g id="edge1554" class="edge">
<title>cats.kernel.PartialOrder[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.Order[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M19546.7957,-14561.3688C19598.4996,-14556.279 19653.7166,-14550.6206 19704.8751,-14544.9355 19755.9588,-14539.2588 19812.0363,-14532.4239 19861.1159,-14526.2418"/>
<polygon fill="#000000" stroke="#000000" points="19861.6734,-14529.6993 19871.1561,-14524.9739 19860.7964,-14522.7544 19861.6734,-14529.6993"/>
</g>
<!-- cats.kernel.PartialOrder[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.PartialOrder[io.circe.DecodingFailure] -->
<g id="edge17" class="edge">
<title>cats.kernel.PartialOrder[cats.data.NonEmptyList[io.circe.DecodingFailure]]&#45;&gt;cats.PartialOrder[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M19642.1763,-14580.9355C19697.9964,-14580.9355 19754.7284,-14580.9355 19805.883,-14580.9355"/>
<polygon fill="#000000" stroke="#000000" points="19806.0376,-14584.4356 19816.0376,-14580.9355 19806.0376,-14577.4356 19806.0376,-14584.4356"/>
</g>
<!-- Float =&gt; ?{def ===: ?} -->
<g id="node1523" class="node">
<title>Float =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-34658.9355" rx="103.8894" ry="26.7407"/>
<text text-anchor="start" x="506.5494" y="-34662.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Float =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-34647.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- Float =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Float] -->
<g id="edge634" class="edge">
<title>Float =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Float]</title>
<path fill="none" stroke="#000000" d="M676.0329,-34658.9355C906.6309,-34658.9355 1457.0302,-34658.9355 1666.6246,-34658.9355"/>
<polygon fill="#000000" stroke="#000000" points="1666.6452,-34662.4356 1676.6451,-34658.9355 1666.6451,-34655.4356 1666.6452,-34662.4356"/>
</g>
<!-- Array[String] =&gt; Iterable[String] -->
<g id="node1525" class="node">
<title>Array[String] =&gt; Iterable[String]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-19862.9355" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="1659.104" y="-19866.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; Iterable[String]</text>
<text text-anchor="middle" x="1749.604" y="-19851.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1526" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-558.9355" rx="463.7241" ry="26.7407"/>
<text text-anchor="start" x="3750.7721" y="-562.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-547.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 136ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge373" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4534.7828,-558.9355C4590.8899,-558.9355 4648.2052,-558.9355 4704.3037,-558.9355"/>
<polygon fill="#000000" stroke="#000000" points="4704.3948,-562.4356 4714.3947,-558.9355 4704.3947,-555.4356 4704.3948,-562.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge566" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4531.8196,-555.9332C4574.5395,-563.9787 4608.3789,-576.4026 4625.8509,-594.9355 4638.8846,-608.7607 4620.835,-1949.0937 4633.8509,-1962.9355 4748.6697,-2085.04 4966.8318,-2052.9096 5085.6306,-2023.2986"/>
<polygon fill="#000000" stroke="#000000" points="5086.5813,-2026.6683 5095.4097,-2020.8108 5084.8554,-2019.8844 5086.5813,-2026.6683"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;Ordering[Long] -->
<g id="edge556" class="edge">
<title>scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.immutable.SortedMap[Long,Int]]&#45;&gt;Ordering[Long]</title>
<path fill="none" stroke="#000000" d="M5578.818,-11466.9355C5785.83,-11466.9355 6017.9801,-11466.9355 6138.8623,-11466.9355"/>
<polygon fill="#000000" stroke="#000000" points="6139.1449,-11470.4356 6149.1449,-11466.9355 6139.1449,-11463.4356 6139.1449,-11470.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, io.circe.Json, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge1435" class="edge">
<title>org.scalacheck.Arbitrary[(String, io.circe.Json, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M4268.9961,-8623.1926C4408.243,-8628.3637 4577.8766,-8623.2642 4625.8509,-8572.9355 4644.0228,-8553.8719 4616.6951,-8118.9185 4633.8509,-8098.9355 4733.855,-7982.4514 4923.4793,-7977.5402 5047.7142,-7989.2617"/>
<polygon fill="#000000" stroke="#000000" points="5047.7361,-7992.7811 5058.0334,-7990.2876 5048.4287,-7985.8154 5047.7361,-7992.7811"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, io.circe.Json, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge691" class="edge">
<title>org.scalacheck.Arbitrary[(String, io.circe.Json, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M4268.4044,-8594.5791C4407.8571,-8589.2967 4578.0264,-8594.2984 4625.8509,-8644.9355 4645.8019,-8666.0598 4613.9666,-9669.7486 4633.8509,-9690.9355 4685.9222,-9746.418 4889.8699,-9746.4631 5030.0558,-9739.2953"/>
<polygon fill="#000000" stroke="#000000" points="5030.6562,-9742.7685 5040.457,-9738.7443 5030.2859,-9735.7783 5030.6562,-9742.7685"/>
</g>
<!-- scala.reflect.ClassTag[(String, io.circe.Json, Boolean)] -->
<g id="node1868" class="node">
<title>scala.reflect.ClassTag[(String, io.circe.Json, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-8572.9355" rx="222.9775" ry="26.7407"/>
<text text-anchor="start" x="5018.2166" y="-8576.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(String, io.circe.Json, Boolean)]</text>
<text text-anchor="middle" x="5167.7166" y="-8561.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(String, io.circe.Json, Boolean)]&#45;&gt;scala.reflect.ClassTag[(String, io.circe.Json, Boolean)] -->
<g id="edge822" class="edge">
<title>org.scalacheck.Arbitrary[(String, io.circe.Json, Boolean)]&#45;&gt;scala.reflect.ClassTag[(String, io.circe.Json, Boolean)]</title>
<path fill="none" stroke="#000000" d="M4295.4022,-8601.5635C4484.4496,-8595.3593 4753.4684,-8586.5305 4942.6412,-8580.3222"/>
<polygon fill="#000000" stroke="#000000" points="4942.8382,-8583.8177 4952.718,-8579.9915 4942.6086,-8576.8215 4942.8382,-8583.8177"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, io.circe.Json, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[io.circe.Json] -->
<g id="edge101" class="edge">
<title>org.scalacheck.Arbitrary[(String, io.circe.Json, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M4270.413,-8594.9964C4409.1101,-8590.1354 4577.3994,-8595.4878 4625.8509,-8644.9355 4639.8623,-8659.2349 4619.858,-8810.6182 4633.8509,-8824.9355 4684.4873,-8876.7457 4871.5946,-8878.787 5010.0826,-8872.4721"/>
<polygon fill="#000000" stroke="#000000" points="5010.5626,-8875.9534 5020.3853,-8871.983 5010.2306,-8868.9612 5010.5626,-8875.9534"/>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc16] -->
<g id="node1529" class="node">
<title>Fractional[ProductCodecSuite.this.Cc16]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-65600.9355" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="1637.604" y="-65604.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc16]</text>
<text text-anchor="middle" x="1749.604" y="-65589.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,(Long, Int),scala.collection.mutable.HashMap[Long,Int]] -->
<g id="node1530" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,(Long, Int),scala.collection.mutable.HashMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-11826.9355" rx="421.3713" ry="26.7407"/>
<text text-anchor="start" x="4877.7166" y="-11830.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,(Long, Int),scala.collection.mutable.HashMap[Long,Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-11815.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Integral[ProductCodecSuite.this.Cc3] -->
<g id="node1531" class="node">
<title>Integral[ProductCodecSuite.this.Cc3]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-57572.9355" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="1647.104" y="-57576.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc3]</text>
<text text-anchor="middle" x="1749.604" y="-57561.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- String(&#39;Show[DecodingFailure]&#39;) =&gt; ?{def should: ?} -->
<g id="node1532" class="node">
<title>String(&#39;Show[DecodingFailure]&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-25406.9355" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="426.0494" y="-25410.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Show[DecodingFailure]&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-25395.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;Show[DecodingFailure]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge692" class="edge">
<title>String(&#39;Show[DecodingFailure]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M767.2388,-25394.9691C910.3594,-25390.5589 1088.9287,-25395.583 1144.0988,-25442.9355 1587.1641,-25823.2189 1728.886,-27876.277 1747.4278,-28177.9212"/>
<polygon fill="#000000" stroke="#000000" points="1743.9344,-28178.1383 1748.0357,-28187.9071 1750.9215,-28177.7129 1743.9344,-28178.1383"/>
</g>
<!-- Option[Short] =&gt; ?{def ===: ?} -->
<g id="node1533" class="node">
<title>Option[Short] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-33614.9355" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="482.5494" y="-33618.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Short] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-33603.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 12ms</text>
</g>
<!-- Option[Short] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Short]] -->
<g id="edge179" class="edge">
<title>Option[Short] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Short]]</title>
<path fill="none" stroke="#000000" d="M710.013,-33614.9355C946.309,-33614.9355 1423.8038,-33614.9355 1639.4659,-33614.9355"/>
<polygon fill="#000000" stroke="#000000" points="1639.5357,-33618.4356 1649.5356,-33614.9355 1639.5356,-33611.4356 1639.5357,-33618.4356"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc3] -->
<g id="node1535" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc3]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-57608.9355" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="430.5494" y="-57612.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc3]</text>
<text text-anchor="middle" x="572.0494" y="-57597.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc3]&#45;&gt;Fractional[ProductCodecSuite.this.Cc3] -->
<g id="edge982" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc3]&#45;&gt;Fractional[ProductCodecSuite.this.Cc3]</title>
<path fill="none" stroke="#000000" d="M777.8371,-57615.2269C1004.4907,-57622.1561 1364.9051,-57633.1746 1577.2555,-57639.6665"/>
<polygon fill="#000000" stroke="#000000" points="1577.152,-57643.1649 1587.2544,-57639.9722 1577.366,-57636.1682 1577.152,-57643.1649"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc3]&#45;&gt;Integral[ProductCodecSuite.this.Cc3] -->
<g id="edge819" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc3]&#45;&gt;Integral[ProductCodecSuite.this.Cc3]</title>
<path fill="none" stroke="#000000" d="M777.8371,-57602.6442C1007.2972,-57595.6292 1373.8512,-57584.423 1585.075,-57577.9655"/>
<polygon fill="#000000" stroke="#000000" points="1585.4381,-57581.4561 1595.3265,-57577.6521 1585.2242,-57574.4594 1585.4381,-57581.4561"/>
</g>
<!-- scala.collection.immutable.Map[String,Double] =&gt; ?{def asJson: ?} -->
<g id="node1536" class="node">
<title>scala.collection.immutable.Map[String,Double] =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-74420.9355" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="384.0494" y="-74424.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[String,Double] =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-74409.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 3ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="node1538" class="node">
<title>io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-20150.9355" rx="334.423" ry="26.7407"/>
<text text-anchor="start" x="1521.104" y="-20154.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="1749.604" y="-20139.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Map[String,io.circe.Json] =&gt; ?{def ===: ?} -->
<g id="node1539" class="node">
<title>scala.collection.immutable.Map[String,io.circe.Json] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-16188.9355" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="12218.9214" y="-16192.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[String,io.circe.Json] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="12415.9214" y="-16177.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 16ms</text>
</g>
<!-- scala.collection.immutable.Map[String,io.circe.Json] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[scala.collection.immutable.Map[String,io.circe.Json]] -->
<g id="edge366" class="edge">
<title>scala.collection.immutable.Map[String,io.circe.Json] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[scala.collection.immutable.Map[String,io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M12706.0095,-16188.9355C12759.9142,-16188.9355 12815.9417,-16188.9355 12868.9485,-16188.9355"/>
<polygon fill="#000000" stroke="#000000" points="12869.1582,-16192.4356 12879.1582,-16188.9355 12869.1582,-16185.4356 12869.1582,-16192.4356"/>
</g>
<!-- Ordering[Long]&#45;&gt;cats.kernel.Order[Long] -->
<g id="edge684" class="edge">
<title>Ordering[Long]&#45;&gt;cats.kernel.Order[Long]</title>
<path fill="none" stroke="#000000" d="M6253.0949,-11442.3117C6337.9676,-11373.4779 6578.9172,-11170.465 6734.887,-10962.9355 6972.3906,-10646.9193 7165.5395,-10203.4525 7219.3588,-10074.4548"/>
<polygon fill="#000000" stroke="#000000" points="7222.6737,-10075.5984 7223.2798,-10065.0209 7216.2098,-10072.9118 7222.6737,-10075.5984"/>
</g>
<!-- String(&#39;validate&#39;) =&gt; ?{def should: ?} -->
<g id="node1542" class="node">
<title>String(&#39;validate&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-25334.9355" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="470.0494" y="-25338.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;validate&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-25323.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;validate&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1519" class="edge">
<title>String(&#39;validate&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M716.653,-25324.8876C864.9263,-25317.8457 1082.3205,-25317.6271 1144.0988,-25370.9355 1597.5955,-25762.2577 1730.6367,-27871.9833 1747.6448,-28177.9336"/>
<polygon fill="#000000" stroke="#000000" points="1744.1572,-28178.2578 1748.2012,-28188.0505 1751.1467,-28177.8733 1744.1572,-28178.2578"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1543" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-16670.9355" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="10679.4287" y="-16674.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="10858.4287" y="-16659.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 129ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge973" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M10963.6586,-16695.6202C11056.6721,-16710.555 11189.0328,-16713.7623 11265.0151,-16634.9355 11276.9831,-16622.5194 11261.1572,-16492.457 11273.0151,-16479.9355 11336.0325,-16413.3916 11441.0924,-16406.0537 11525.6138,-16413.7563"/>
<polygon fill="#000000" stroke="#000000" points="11525.5189,-16417.264 11535.8153,-16414.7673 11526.2092,-16410.2981 11525.5189,-16417.264"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge1319" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10961.156,-16695.7171C11054.7661,-16711.5134 11189.5833,-16715.9917 11265.0151,-16634.9355 11283.4114,-16615.1676 11254.6666,-16168.7479 11273.0151,-16148.9355 11348.9634,-16066.9277 11488.9164,-16076.2923 11577.6335,-16092.9115"/>
<polygon fill="#000000" stroke="#000000" points="11577.1717,-16096.3872 11587.656,-16094.8605 11578.508,-16089.5159 11577.1717,-16096.3872"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge364" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M11092.0149,-16683.5525C11158.1536,-16699.2551 11223.3991,-16728.81 11265.0151,-16782.9355 11280.1524,-16802.6232 11256.2092,-17658.6515 11273.0151,-17676.9355 11345.9182,-17756.2507 11478.651,-17750.3419 11567.684,-17734.8459"/>
<polygon fill="#000000" stroke="#000000" points="11568.562,-17738.2438 11577.7772,-17733.0159 11567.3132,-17731.3561 11568.562,-17738.2438"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge398" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M10962.6228,-16695.7038C11055.9209,-16711.0334 11189.3439,-16714.7948 11265.0151,-16634.9355 11282.756,-16616.2127 11255.3194,-16421.7012 11273.0151,-16402.9355 11338.313,-16333.6892 11449.3273,-16330.0486 11535.4798,-16340.6143"/>
<polygon fill="#000000" stroke="#000000" points="11535.2232,-16344.1104 11545.5918,-16341.9329 11536.1284,-16337.1691 11535.2232,-16344.1104"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge511" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M11091.4183,-16683.7449C11157.6317,-16699.4441 11223.0703,-16728.9485 11265.0151,-16782.9355 11279.3333,-16801.3646 11257.1355,-17185.8335 11273.0151,-17202.9355 11337.1173,-17271.9729 11446.5904,-17276.1906 11532.5136,-17265.88"/>
<polygon fill="#000000" stroke="#000000" points="11533.1293,-17269.3298 11542.6047,-17264.59 11532.2416,-17262.3863 11533.1293,-17269.3298"/>
</g>
<!-- Integral[(Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1544" class="node">
<title>Integral[(Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-6266.9355" rx="176.1392" ry="26.7407"/>
<text text-anchor="start" x="5051.2166" y="-6270.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[(Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-6255.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[((String, io.circe.Json), Boolean)]&#45;&gt;scala.reflect.ClassTag[((String, io.circe.Json), Boolean)] -->
<g id="edge529" class="edge">
<title>org.scalacheck.Arbitrary[((String, io.circe.Json), Boolean)]&#45;&gt;scala.reflect.ClassTag[((String, io.circe.Json), Boolean)]</title>
<path fill="none" stroke="#000000" d="M3157.185,-7769.8199C3356.2358,-7761.7836 3644.7998,-7750.1334 3844.1125,-7742.0865"/>
<polygon fill="#000000" stroke="#000000" points="3844.279,-7745.5827 3854.1297,-7741.6821 3843.9966,-7738.5884 3844.279,-7745.5827"/>
</g>
<!-- org.scalacheck.Arbitrary[((String, io.circe.Json), Boolean)]&#45;&gt;org.scalacheck.Arbitrary[(String, io.circe.Json)] -->
<g id="edge56" class="edge">
<title>org.scalacheck.Arbitrary[((String, io.circe.Json), Boolean)]&#45;&gt;org.scalacheck.Arbitrary[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M3168.2136,-7774.7224C3289.4337,-7786.2207 3427.9168,-7823.268 3507.6933,-7923.9355 3524.9826,-7945.7524 3497.8919,-8403.5345 3515.6933,-8424.9355 3608.1974,-8536.1454 3777.739,-8556.5158 3905.2015,-8553.7308"/>
<polygon fill="#000000" stroke="#000000" points="3905.5598,-8557.2225 3915.4621,-8553.4549 3905.3716,-8550.225 3905.5598,-8557.2225"/>
</g>
<!-- org.scalacheck.Arbitrary[((String, io.circe.Json), Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge1108" class="edge">
<title>org.scalacheck.Arbitrary[((String, io.circe.Json), Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M3168.8795,-7775.1304C3623.0166,-7769.0107 4574.3933,-7762.2429 4625.8509,-7811.9355 4649.384,-7834.6614 4611.1517,-7935.3768 4633.8509,-7958.9355 4746.2875,-8075.6298 4952.7197,-8056.2609 5073.2888,-8031.9266"/>
<polygon fill="#000000" stroke="#000000" points="5074.1664,-8035.3192 5083.2498,-8029.8654 5072.748,-8028.4644 5074.1664,-8035.3192"/>
</g>
<!-- Fractional[MemoizedPiecesSuite.this.Depths] -->
<g id="node1548" class="node">
<title>Fractional[MemoizedPiecesSuite.this.Depths]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-74528.9355" rx="188.5952" ry="26.7407"/>
<text text-anchor="start" x="1624.104" y="-74532.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[MemoizedPiecesSuite.this.Depths]</text>
<text text-anchor="middle" x="1749.604" y="-74517.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[Seq[Int]] -->
<g id="node1550" class="node">
<title>cats.kernel.Eq[Seq[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-15092.9355" rx="103.8894" ry="26.7407"/>
<text text-anchor="start" x="19271.6796" y="-15096.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Seq[Int]]</text>
<text text-anchor="middle" x="19337.1796" y="-15081.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[Seq[Int]]&#45;&gt;shapeless.IsTuple[Seq[Int]] -->
<g id="edge1371" class="edge">
<title>cats.kernel.Eq[Seq[Int]]&#45;&gt;shapeless.IsTuple[Seq[Int]]</title>
<path fill="none" stroke="#000000" d="M19441.3028,-15092.9355C19556.5832,-15092.9355 19742.4742,-15092.9355 19866.4912,-15092.9355"/>
<polygon fill="#000000" stroke="#000000" points="19866.8008,-15096.4356 19876.8008,-15092.9355 19866.8007,-15089.4356 19866.8008,-15096.4356"/>
</g>
<!-- cats.kernel.Eq[Seq[Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge141" class="edge">
<title>cats.kernel.Eq[Seq[Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M19413.1149,-15074.5579C19497.6071,-15059.1448 19631.8227,-15050.5955 19704.8751,-15128.9355 19715.7912,-15140.6418 19709.7501,-15401.2374 19712.8751,-15416.9355 19768.8829,-15698.2904 19921.9748,-16012.565 19975.5153,-16117.0339"/>
<polygon fill="#000000" stroke="#000000" points="19972.5436,-16118.9082 19980.2326,-16126.1972 19978.7673,-16115.7042 19972.5436,-16118.9082"/>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.KeyDecoder[Int]] -->
<g id="node1551" class="node">
<title>org.scalacheck.Arbitrary[io.circe.KeyDecoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-2252.9355" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="3930.7721" y="-2256.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.KeyDecoder[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-2241.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 9ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.KeyDecoder[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge361" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.KeyDecoder[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4279.6102,-2254.9829C4384.6306,-2252.0923 4513.2054,-2242.5552 4625.8509,-2216.9355 4810.9588,-2174.8353 5015.1144,-2077.7262 5111.4651,-2028.5782"/>
<polygon fill="#000000" stroke="#000000" points="5113.145,-2031.6503 5120.4486,-2023.9751 5109.9528,-2025.4205 5113.145,-2031.6503"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Long,Int]] -->
<g id="node1552" class="node">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-9002.9355" rx="267.0729" ry="26.7407"/>
<text text-anchor="start" x="2750.4013" y="-9006.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[scala.collection.immutable.Map[Long,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-8991.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Long,Int]]&#45;&gt;Integral[scala.collection.immutable.Map[Long,Int]] -->
<g id="edge400" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Long,Int]]&#45;&gt;Integral[scala.collection.immutable.Map[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M3187.8083,-8995.2841C3388.4671,-8989.2962 3664.382,-8981.0626 3854.0931,-8975.4015"/>
<polygon fill="#000000" stroke="#000000" points="3854.3016,-8978.8969 3864.1927,-8975.1001 3854.0927,-8971.9 3854.3016,-8978.8969"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Long,Int]]&#45;&gt;scala.collection.immutable.Map[Long,Int] =&gt; Traversable[(Long, Int)] -->
<g id="edge1550" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Long,Int]]&#45;&gt;scala.collection.immutable.Map[Long,Int] =&gt; Traversable[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M3017.8218,-9028.3632C3144.2717,-9059.6679 3378.6541,-9094.3154 3507.6933,-8966.9355 3524.5047,-8950.3403 3498.9016,-8877.5507 3515.6933,-8860.9355 3558.802,-8818.2798 3693.2225,-8808.8141 3818.9794,-8810.2386"/>
<polygon fill="#000000" stroke="#000000" points="3819.1285,-8813.7409 3829.1754,-8810.3778 3819.2241,-8806.7415 3819.1285,-8813.7409"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Long,Int]]&#45;&gt;org.scalacheck.Shrink[(Long, Int)] -->
<g id="edge1544" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Long,Int]]&#45;&gt;org.scalacheck.Shrink[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M3047.4598,-8978.7226C3180.2124,-8958.5905 3393.8638,-8950.7115 3507.6933,-9076.9355 3519.826,-9090.3894 3503.1432,-9389.8701 3515.6933,-9402.9355 3570.4074,-9459.8963 3781.8243,-9458.7634 3927.3515,-9450.5206"/>
<polygon fill="#000000" stroke="#000000" points="3927.9337,-9453.9926 3937.7126,-9449.9155 3927.5255,-9447.0045 3927.9337,-9453.9926"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Map[Long,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.Map[Long,Int]] -->
<g id="edge1093" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Map[Long,Int]]&#45;&gt;org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.Map[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M3026.3669,-9028.0999C3151.9852,-9055.1862 3373.1566,-9080.4951 3507.6933,-8966.9355 3519.5561,-8956.9224 3503.8424,-8942.9628 3515.6933,-8932.9355 3553.6404,-8900.8278 3650.8315,-8888.7218 3753.4817,-8885.7229"/>
<polygon fill="#000000" stroke="#000000" points="3753.8479,-8889.2145 3763.7526,-8885.4532 3753.6641,-8882.217 3753.8479,-8889.2145"/>
</g>
<!-- io.circe.Encoder[java.util.UUID] -->
<g id="node1555" class="node">
<title>io.circe.Encoder[java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-74564.9355" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="481.5494" y="-74568.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[java.util.UUID]</text>
<text text-anchor="middle" x="572.0494" y="-74553.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[String =&gt; Boolean] -->
<g id="node1556" class="node">
<title>org.scalacheck.Shrink[String =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-34118.9355" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="456.0494" y="-34122.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[String =&gt; Boolean]</text>
<text text-anchor="middle" x="572.0494" y="-34107.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Shrink[String =&gt; Boolean]&#45;&gt;(String =&gt; Boolean) =&gt; Traversable[(String, Boolean)] -->
<g id="edge992" class="edge">
<title>org.scalacheck.Shrink[String =&gt; Boolean]&#45;&gt;(String =&gt; Boolean) =&gt; Traversable[(String, Boolean)]</title>
<path fill="none" stroke="#000000" d="M734.5624,-34129.1004C850.848,-34136.3547 1011.1067,-34146.3129 1152.0988,-34154.9355 1279.9737,-34162.756 1423.2512,-34171.3928 1537.4425,-34178.2462"/>
<polygon fill="#000000" stroke="#000000" points="1537.5093,-34181.7564 1547.701,-34178.8618 1537.9287,-34174.769 1537.5093,-34181.7564"/>
</g>
<!-- org.scalacheck.Shrink[String =&gt; Boolean]&#45;&gt;Integral[String =&gt; Boolean] -->
<g id="edge1204" class="edge">
<title>org.scalacheck.Shrink[String =&gt; Boolean]&#45;&gt;Integral[String =&gt; Boolean]</title>
<path fill="none" stroke="#000000" d="M747.705,-34118.9355C985.9941,-34118.9355 1406.2711,-34118.9355 1618.7608,-34118.9355"/>
<polygon fill="#000000" stroke="#000000" points="1619.0319,-34122.4356 1629.0319,-34118.9355 1619.0318,-34115.4356 1619.0319,-34122.4356"/>
</g>
<!-- Fractional[String =&gt; Boolean] -->
<g id="node1864" class="node">
<title>Fractional[String =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-34046.9355" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="1666.604" y="-34050.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[String =&gt; Boolean]</text>
<text text-anchor="middle" x="1749.604" y="-34035.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[String =&gt; Boolean]&#45;&gt;Fractional[String =&gt; Boolean] -->
<g id="edge232" class="edge">
<title>org.scalacheck.Shrink[String =&gt; Boolean]&#45;&gt;Fractional[String =&gt; Boolean]</title>
<path fill="none" stroke="#000000" d="M734.5624,-34108.7707C850.848,-34101.5164 1011.1067,-34091.5582 1152.0988,-34082.9355 1311.3813,-34073.1943 1494.5615,-34062.1864 1615.6595,-34054.9364"/>
<polygon fill="#000000" stroke="#000000" points="1615.9506,-34058.4253 1625.7235,-34054.334 1615.5322,-34051.4379 1615.9506,-34058.4253"/>
</g>
<!-- String(&#39;decodeList&#39;) =&gt; ?{def should: ?} -->
<g id="node1557" class="node">
<title>String(&#39;decodeList&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-25262.9355" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="462.0494" y="-25266.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;decodeList&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-25251.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;decodeList&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1369" class="edge">
<title>String(&#39;decodeList&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M725.6024,-25252.4141C873.5795,-25245.7447 1083.6765,-25246.5313 1144.0988,-25298.9355 1607.8153,-25701.1173 1732.2232,-27865.6615 1747.8288,-28177.497"/>
<polygon fill="#000000" stroke="#000000" points="1744.3486,-28177.9875 1748.3384,-28187.8024 1751.3401,-28177.6417 1744.3486,-28177.9875"/>
</g>
<!-- org.scalacheck.Shrink[((String, io.circe.Json)) =&gt; Boolean] -->
<g id="node1558" class="node">
<title>org.scalacheck.Shrink[((String, io.circe.Json)) =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-38906.9355" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="409.5494" y="-38910.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[((String, io.circe.Json)) =&gt; Boolean]</text>
<text text-anchor="middle" x="572.0494" y="-38895.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Shrink[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;Fractional[((String, io.circe.Json)) =&gt; Boolean] -->
<g id="edge723" class="edge">
<title>org.scalacheck.Shrink[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;Fractional[((String, io.circe.Json)) =&gt; Boolean]</title>
<path fill="none" stroke="#000000" d="M782.4794,-38920.0874C892.584,-38926.9457 1029.6119,-38935.4446 1152.0988,-38942.9355 1288.6696,-38951.2878 1442.8089,-38960.5712 1560.3209,-38967.6188"/>
<polygon fill="#000000" stroke="#000000" points="1560.3095,-38971.1243 1570.5011,-38968.2292 1560.7286,-38964.1368 1560.3095,-38971.1243"/>
</g>
<!-- org.scalacheck.Shrink[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;(((String, io.circe.Json)) =&gt; Boolean) =&gt; Traversable[((String, io.circe.Json), Boolean)] -->
<g id="edge708" class="edge">
<title>org.scalacheck.Shrink[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;(((String, io.circe.Json)) =&gt; Boolean) =&gt; Traversable[((String, io.circe.Json), Boolean)]</title>
<path fill="none" stroke="#000000" d="M813.1867,-38906.9355C978.6127,-38906.9355 1201.082,-38906.9355 1387.67,-38906.9355"/>
<polygon fill="#000000" stroke="#000000" points="1387.932,-38910.4356 1397.932,-38906.9355 1387.9319,-38903.4356 1387.932,-38910.4356"/>
</g>
<!-- Integral[((String, io.circe.Json)) =&gt; Boolean] -->
<g id="node1919" class="node">
<title>Integral[((String, io.circe.Json)) =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-38834.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="1626.104" y="-38838.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[((String, io.circe.Json)) =&gt; Boolean]</text>
<text text-anchor="middle" x="1749.604" y="-38823.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;Integral[((String, io.circe.Json)) =&gt; Boolean] -->
<g id="edge1008" class="edge">
<title>org.scalacheck.Shrink[((String, io.circe.Json)) =&gt; Boolean]&#45;&gt;Integral[((String, io.circe.Json)) =&gt; Boolean]</title>
<path fill="none" stroke="#000000" d="M782.4794,-38893.7837C892.584,-38886.9254 1029.6119,-38878.4265 1152.0988,-38870.9355 1291.4413,-38862.4138 1449.0727,-38852.9226 1567.4299,-38845.826"/>
<polygon fill="#000000" stroke="#000000" points="1567.9047,-38849.304 1577.6773,-38845.2117 1567.4857,-38842.3165 1567.9047,-38849.304"/>
</g>
<!-- cats.kernel.Eq[String :: io.circe.Json :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[String] -->
<g id="edge250" class="edge">
<title>cats.kernel.Eq[String :: io.circe.Json :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[String]</title>
<path fill="none" stroke="#000000" d="M12526.3497,-15776.3514C12608.5301,-15786.6823 12716.9775,-15784.046 12780.0814,-15716.9355 12796.5333,-15699.4391 12776.1316,-15521.768 12788.0814,-15500.9355 12846.6913,-15398.759 12974.7275,-15337.1321 13056.7001,-15306.6241"/>
<polygon fill="#000000" stroke="#000000" points="13058.2695,-15309.7771 13066.4607,-15303.0573 13055.8668,-15303.2023 13058.2695,-15309.7771"/>
</g>
<!-- cats.kernel.Eq[String :: io.circe.Json :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[io.circe.Json :: shapeless.HNil] -->
<g id="edge688" class="edge">
<title>cats.kernel.Eq[String :: io.circe.Json :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[io.circe.Json :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M12622.2801,-15763.3241C12723.1907,-15768.4041 12843.7958,-15774.4757 12942.2472,-15779.4319"/>
<polygon fill="#000000" stroke="#000000" points="12942.1473,-15782.9312 12952.3106,-15779.9385 12942.4993,-15775.9401 12942.1473,-15782.9312"/>
</g>
<!-- cats.kernel.Eq[String :: io.circe.Json :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[String :: io.circe.Json :: shapeless.HNil] -->
<g id="edge1027" class="edge">
<title>cats.kernel.Eq[String :: io.circe.Json :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[String :: io.circe.Json :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M12622.2801,-15742.547C12710.5579,-15738.1029 12813.9077,-15732.9001 12904.3128,-15728.3489"/>
<polygon fill="#000000" stroke="#000000" points="12904.6125,-15731.8383 12914.4238,-15727.8399 12904.2605,-15724.8472 12904.6125,-15731.8383"/>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc8] -->
<g id="node1564" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc8]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-44558.9355" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="452.0494" y="-44562.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc8]</text>
<text text-anchor="middle" x="572.0494" y="-44547.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc8]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc8] -->
<g id="edge512" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc8]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc8]</title>
<path fill="none" stroke="#000000" d="M753.14,-44558.9355C966.8731,-44558.9355 1321.4043,-44558.9355 1544.915,-44558.9355"/>
<polygon fill="#000000" stroke="#000000" points="1545.1268,-44562.4356 1555.1268,-44558.9355 1545.1267,-44555.4356 1545.1268,-44562.4356"/>
</g>
<!-- String(&#39;0&#39;) =&gt; ?{def *: ?} -->
<g id="node1565" class="node">
<title>String(&#39;0&#39;) =&gt; ?{def *: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-74636.9355" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="502.5494" y="-74640.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;0&#39;) =&gt; ?{def *: ?}</text>
<text text-anchor="middle" x="572.0494" y="-74625.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 6ms</text>
</g>
<!-- String(&#39;setRights&#39;) =&gt; ?{def should: ?} -->
<g id="node1567" class="node">
<title>String(&#39;setRights&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-25190.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="466.5494" y="-25194.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;setRights&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-25179.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;setRights&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge222" class="edge">
<title>String(&#39;setRights&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M720.5009,-25180.592C868.7509,-25173.6265 1083.0992,-25173.7734 1144.0988,-25226.9355 1618.3005,-25640.21 1733.9132,-27861.7603 1748.0308,-28177.5752"/>
<polygon fill="#000000" stroke="#000000" points="1744.5532,-28178.1636 1748.4906,-28187.9996 1751.5464,-28177.8551 1744.5532,-28178.1636"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E] -->
<g id="node1568" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-74708.9355" rx="294.7271" ry="26.7407"/>
<text text-anchor="start" x="371.5494" y="-74712.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E]</text>
<text text-anchor="middle" x="572.0494" y="-74697.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- SerializableSuite.this.PropertyCheckConfigurable -->
<g id="node1569" class="node">
<title>SerializableSuite.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-74780.9355" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="436.5494" y="-74784.7355" font-family="Times,serif" font-size="14.00" fill="#000000">SerializableSuite.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-74769.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Fractional[io.circe.numbers.testing.JsonNumberString] -->
<g id="node1572" class="node">
<title>Fractional[io.circe.numbers.testing.JsonNumberString]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-74870.9355" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="1599.104" y="-74874.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[io.circe.numbers.testing.JsonNumberString]</text>
<text text-anchor="middle" x="1749.604" y="-74859.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Map[Long,Int]] -->
<g id="node1573" class="node">
<title>cats.kernel.Eq[scala.collection.immutable.Map[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-15672.9355" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="19177.6796" y="-15676.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.collection.immutable.Map[Long,Int]]</text>
<text text-anchor="middle" x="19337.1796" y="-15661.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Map[Long,Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1299" class="edge">
<title>cats.kernel.Eq[scala.collection.immutable.Map[Long,Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M19556.4272,-15662.7325C19607.9916,-15668.6532 19660.7311,-15682.1521 19704.8751,-15708.9355 19864.7036,-15805.9083 19953.1392,-16028.6141 19982.8329,-16116.4028"/>
<polygon fill="#000000" stroke="#000000" points="19979.527,-16117.5531 19986.0051,-16125.9367 19986.169,-16115.3431 19979.527,-16117.5531"/>
</g>
<!-- String(&#39;deleteGoRight&#39;) =&gt; ?{def should: ?} -->
<g id="node1574" class="node">
<title>String(&#39;deleteGoRight&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-25118.9355" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="452.0494" y="-25122.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;deleteGoRight&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-25107.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;deleteGoRight&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1267" class="edge">
<title>String(&#39;deleteGoRight&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M736.8695,-25107.8064C884.1291,-25101.6019 1085.4205,-25103.5593 1144.0988,-25154.9355 1628.8019,-25579.321 1735.5625,-27857.9684 1748.2233,-28177.6637"/>
<polygon fill="#000000" stroke="#000000" points="1744.7312,-28177.9374 1748.6187,-28187.7932 1751.7259,-28177.6643 1744.7312,-28177.9374"/>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[Test$3]] -->
<g id="node1575" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[Test$3]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-74960.9355" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="1611.104" y="-74964.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[Test$3]]</text>
<text text-anchor="middle" x="1749.604" y="-74949.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(Int, Int),scala.collection.immutable.Map[Int,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Int, Int),scala.collection.immutable.Map[Int,Int]] -->
<g id="edge1132" class="edge">
<title>org.scalacheck.util.Buildable[(Int, Int),scala.collection.immutable.Map[Int,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Int, Int),scala.collection.immutable.Map[Int,Int]]</title>
<path fill="none" stroke="#000000" d="M4391.3718,-3806.9355C4516.3216,-3806.9355 4660.462,-3806.9355 4790.3687,-3806.9355"/>
<polygon fill="#000000" stroke="#000000" points="4790.4922,-3810.4356 4800.4921,-3806.9355 4790.4921,-3803.4356 4790.4922,-3810.4356"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E] -->
<g id="node1578" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-75032.9355" rx="345.1362" ry="26.7407"/>
<text text-anchor="start" x="336.0494" y="-75036.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E]</text>
<text text-anchor="middle" x="572.0494" y="-75021.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Boolean =&gt; ?{def ===: ?} -->
<g id="node1579" class="node">
<title>Boolean =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-17166.9355" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="10784.4287" y="-17170.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10858.4287" y="-17155.7355" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 46ms</text>
</g>
<!-- Boolean =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Boolean] -->
<g id="edge1127" class="edge">
<title>Boolean =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Boolean]</title>
<path fill="none" stroke="#000000" d="M10974.7497,-17166.9355C11136.4035,-17166.9355 11425.4152,-17166.9355 11570.3801,-17166.9355"/>
<polygon fill="#000000" stroke="#000000" points="11570.565,-17170.4356 11580.5649,-17166.9355 11570.5649,-17163.4356 11570.565,-17170.4356"/>
</g>
<!-- org.scalacheck.Shrink[Map[String,Int]] -->
<g id="node1580" class="node">
<title>org.scalacheck.Shrink[Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-5678.9355" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="2823.4013" y="-5682.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Map[String,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-5667.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 58ms</text>
</g>
<!-- org.scalacheck.Shrink[Map[String,Int]]&#45;&gt;Map[String,Int] =&gt; Traversable[(String, Int)] -->
<g id="edge609" class="edge">
<title>org.scalacheck.Shrink[Map[String,Int]]&#45;&gt;Map[String,Int] =&gt; Traversable[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M3079.1353,-5667.1016C3214.0663,-5647.7625 3407.3416,-5596.8592 3507.6933,-5462.9355 3522.1244,-5443.6767 3498.5983,-5371.8744 3515.6933,-5354.9355 3567.5689,-5303.5337 3751.8962,-5300.3027 3894.0631,-5306.2654"/>
<polygon fill="#000000" stroke="#000000" points="3894.0803,-5309.7695 3904.2238,-5306.7101 3894.3864,-5302.7762 3894.0803,-5309.7695"/>
</g>
<!-- org.scalacheck.Shrink[Map[String,Int]]&#45;&gt;Fractional[Map[String,Int]] -->
<g id="edge1230" class="edge">
<title>org.scalacheck.Shrink[Map[String,Int]]&#45;&gt;Fractional[Map[String,Int]]</title>
<path fill="none" stroke="#000000" d="M3084.4703,-5688.6084C3312.4225,-5703.0133 3736.7116,-5729.8253 3946.6017,-5743.0889"/>
<polygon fill="#000000" stroke="#000000" points="3946.5387,-5746.5918 3956.7396,-5743.7295 3946.9803,-5739.6057 3946.5387,-5746.5918"/>
</g>
<!-- org.scalacheck.Shrink[Map[String,Int]]&#45;&gt;Integral[Map[String,Int]] -->
<g id="edge1370" class="edge">
<title>org.scalacheck.Shrink[Map[String,Int]]&#45;&gt;Integral[Map[String,Int]]</title>
<path fill="none" stroke="#000000" d="M3095.5551,-5678.9355C3327.7289,-5678.9355 3746.5192,-5678.9355 3951.3815,-5678.9355"/>
<polygon fill="#000000" stroke="#000000" points="3951.572,-5682.4356 3961.572,-5678.9355 3951.572,-5675.4356 3951.572,-5682.4356"/>
</g>
<!-- org.scalacheck.Shrink[Map[String,Int]]&#45;&gt;org.scalacheck.util.Buildable[(String, Int),Map[String,Int]] -->
<g id="edge1563" class="edge">
<title>org.scalacheck.Shrink[Map[String,Int]]&#45;&gt;org.scalacheck.util.Buildable[(String, Int),Map[String,Int]]</title>
<path fill="none" stroke="#000000" d="M3028.808,-5657.2853C3144.351,-5632.4532 3343.074,-5592.4105 3515.6933,-5570.9355 3619.8083,-5557.983 3735.5261,-5549.5404 3834.2466,-5544.1127"/>
<polygon fill="#000000" stroke="#000000" points="3834.5608,-5547.6009 3844.3565,-5543.5641 3834.1815,-5540.6112 3834.5608,-5547.6009"/>
</g>
<!-- org.scalacheck.Shrink[Map[String,Int]]&#45;&gt;org.scalacheck.Shrink[(String, Int)] -->
<g id="edge975" class="edge">
<title>org.scalacheck.Shrink[Map[String,Int]]&#45;&gt;org.scalacheck.Shrink[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M3028.808,-5700.5858C3144.351,-5725.4179 3343.074,-5765.4606 3515.6933,-5786.9355 3649.6292,-5803.598 3802.7663,-5812.7969 3914.2186,-5817.7153"/>
<polygon fill="#000000" stroke="#000000" points="3914.3905,-5821.226 3924.533,-5818.1635 3914.6944,-5814.2326 3914.3905,-5821.226"/>
</g>
<!-- org.scalacheck.util.Buildable[(Int, Int),Int =&gt; Int]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Int, Int),Int =&gt; Int] -->
<g id="edge802" class="edge">
<title>org.scalacheck.util.Buildable[(Int, Int),Int =&gt; Int]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Int, Int),Int =&gt; Int]</title>
<path fill="none" stroke="#000000" d="M4274.5282,-3518.9355C4452.9644,-3518.9355 4713.261,-3518.9355 4906.8719,-3518.9355"/>
<polygon fill="#000000" stroke="#000000" points="4906.9096,-3522.4356 4916.9096,-3518.9355 4906.9096,-3515.4356 4906.9096,-3522.4356"/>
</g>
<!-- org.scalacheck.Shrink[(String, Int)]&#45;&gt;Fractional[(String, Int)] -->
<g id="edge447" class="edge">
<title>org.scalacheck.Shrink[(String, Int)]&#45;&gt;Fractional[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M4217.0049,-5827.7347C4438.8841,-5835.0164 4855.8339,-5848.7 5055.533,-5855.2539"/>
<polygon fill="#000000" stroke="#000000" points="5055.6409,-5858.7592 5065.7503,-5855.5892 5055.8706,-5851.763 5055.6409,-5858.7592"/>
</g>
<!-- org.scalacheck.Shrink[(String, Int)]&#45;&gt;Integral[(String, Int)] -->
<g id="edge414" class="edge">
<title>org.scalacheck.Shrink[(String, Int)]&#45;&gt;Integral[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M4217.0049,-5818.1364C4442.3241,-5810.7418 4868.8095,-5796.7452 5064.6632,-5790.3176"/>
<polygon fill="#000000" stroke="#000000" points="5064.7879,-5793.8155 5074.6677,-5789.9893 5064.5582,-5786.8193 5064.7879,-5793.8155"/>
</g>
<!-- org.scalacheck.Shrink[(String, Int)]&#45;&gt;org.scalacheck.Shrink[String] -->
<g id="edge1104" class="edge">
<title>org.scalacheck.Shrink[(String, Int)]&#45;&gt;org.scalacheck.Shrink[String]</title>
<path fill="none" stroke="#000000" d="M4205.6901,-5811.6441C4351.5543,-5802.7678 4570.6512,-5800.2375 4625.8509,-5858.9355 4648.5343,-5883.0565 4611.1985,-8218.7855 4633.8509,-8242.9355 4748.3629,-8365.0182 4966.1539,-8333.0805 5085.1097,-8303.456"/>
<polygon fill="#000000" stroke="#000000" points="5086.0738,-8306.8223 5094.9033,-8300.9665 5084.3492,-8300.038 5086.0738,-8306.8223"/>
</g>
<!-- org.scalacheck.Shrink[(String, Int)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge161" class="edge">
<title>org.scalacheck.Shrink[(String, Int)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4205.9244,-5811.7125C4351.7036,-5802.933 4570.436,-5800.5238 4625.8509,-5858.9355 4638.4698,-5872.2369 4621.2491,-6505.6181 4633.8509,-6518.9355 4688.6662,-6576.864 4910.1149,-6573.2803 5050.0107,-6564.6392"/>
<polygon fill="#000000" stroke="#000000" points="5050.5983,-6568.109 5060.3562,-6563.9819 5050.1544,-6561.1231 5050.5983,-6568.109"/>
</g>
<!-- org.scalacheck.util.Buildable[String,Array[String]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,String,Array[String]] -->
<g id="edge962" class="edge">
<title>org.scalacheck.util.Buildable[String,Array[String]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,String,Array[String]]</title>
<path fill="none" stroke="#000000" d="M4257.0694,-11166.9265C4364.8206,-11159.9624 4502.9882,-11151.001 4625.8509,-11142.9355 4729.7757,-11136.1133 4844.9063,-11128.4756 4942.2214,-11121.9965"/>
<polygon fill="#000000" stroke="#000000" points="4942.7396,-11125.4698 4952.4849,-11121.3131 4942.2744,-11118.4853 4942.7396,-11125.4698"/>
</g>
<!-- List[(String, io.circe.Json)] =&gt; ?{def ===: ?} -->
<g id="node1586" class="node">
<title>List[(String, io.circe.Json)] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-15426.9355" rx="188.5952" ry="26.7407"/>
<text text-anchor="start" x="9890.5427" y="-15430.7355" font-family="Times,serif" font-size="14.00" fill="#000000">List[(String, io.circe.Json)] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10016.0427" y="-15415.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 73ms</text>
</g>
<!-- List[(String, io.circe.Json)] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[(String, io.circe.Json)]] -->
<g id="edge561" class="edge">
<title>List[(String, io.circe.Json)] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[List[(String, io.circe.Json)]]</title>
<path fill="none" stroke="#000000" d="M10205.0905,-15426.9355C10353.0969,-15426.9355 10556.7205,-15426.9355 10697.1124,-15426.9355"/>
<polygon fill="#000000" stroke="#000000" points="10697.5317,-15430.4356 10707.5317,-15426.9355 10697.5317,-15423.4356 10697.5317,-15430.4356"/>
</g>
<!-- io.circe.Encoder[BigInt] -->
<g id="node1587" class="node">
<title>io.circe.Encoder[BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-75104.9355" rx="105.218" ry="26.7407"/>
<text text-anchor="start" x="505.5494" y="-75108.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[BigInt]</text>
<text text-anchor="middle" x="572.0494" y="-75093.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc15] -->
<g id="node1588" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc15]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-63404.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-63408.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc15]</text>
<text text-anchor="middle" x="572.0494" y="-63393.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc15]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc15]] -->
<g id="edge1222" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc15]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc15]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-63404.9355C944.0278,-63404.9355 1209.2209,-63404.9355 1419.4845,-63404.9355"/>
<polygon fill="#000000" stroke="#000000" points="1419.7702,-63408.4356 1429.7702,-63404.9355 1419.7702,-63401.4356 1419.7702,-63408.4356"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc18] -->
<g id="node1590" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc18]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-38438.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-38442.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc18]</text>
<text text-anchor="middle" x="572.0494" y="-38427.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc18]&#45;&gt;Fractional[ProductCodecSuite.this.Cc18] -->
<g id="edge1272" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc18]&#45;&gt;Fractional[ProductCodecSuite.this.Cc18]</title>
<path fill="none" stroke="#000000" d="M788.0311,-38438.9355C1012.428,-38438.9355 1359.5544,-38438.9355 1569.6124,-38438.9355"/>
<polygon fill="#000000" stroke="#000000" points="1569.8215,-38442.4356 1579.8214,-38438.9355 1569.8214,-38435.4356 1569.8215,-38442.4356"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc18]&#45;&gt;Integral[ProductCodecSuite.this.Cc18] -->
<g id="edge55" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc18]&#45;&gt;Integral[ProductCodecSuite.this.Cc18]</title>
<path fill="none" stroke="#000000" d="M765.0635,-38426.8688C877.8961,-38419.8367 1023.0658,-38410.8268 1152.0988,-38402.9355 1299.7788,-38393.9039 1468.0017,-38383.7834 1588.2413,-38376.5786"/>
<polygon fill="#000000" stroke="#000000" points="1588.494,-38380.0698 1598.2667,-38375.978 1588.0753,-38373.0824 1588.494,-38380.0698"/>
</g>
<!-- org.scalacheck.Shrink[Vector[io.circe.Json]] -->
<g id="node1593" class="node">
<title>org.scalacheck.Shrink[Vector[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-9222.9355" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="3948.7721" y="-9226.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[Vector[io.circe.Json]]</text>
<text text-anchor="middle" x="4070.7721" y="-9211.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 15ms</text>
</g>
<!-- org.scalacheck.Shrink[Vector[io.circe.Json]]&#45;&gt;org.scalacheck.Shrink[io.circe.Json] -->
<g id="edge402" class="edge">
<title>org.scalacheck.Shrink[Vector[io.circe.Json]]&#45;&gt;org.scalacheck.Shrink[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M4237.5082,-9234.301C4381.5957,-9240.0423 4574.5378,-9236.5643 4625.8509,-9181.9355 4639.4876,-9167.4178 4620.6995,-8479.8943 4633.8509,-8464.9355 4737.2387,-8347.3395 4933.4942,-8351.4123 5057.0852,-8368.3533"/>
<polygon fill="#000000" stroke="#000000" points="5056.9394,-8371.8677 5067.3325,-8369.8101 5057.9248,-8364.9374 5056.9394,-8371.8677"/>
</g>
<!-- org.scalacheck.Shrink[Vector[io.circe.Json]]&#45;&gt;org.scalacheck.util.Buildable[io.circe.Json,Vector[io.circe.Json]] -->
<g id="edge468" class="edge">
<title>org.scalacheck.Shrink[Vector[io.circe.Json]]&#45;&gt;org.scalacheck.util.Buildable[io.circe.Json,Vector[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M4254.685,-9222.9355C4430.0207,-9222.9355 4696.1987,-9222.9355 4895.9893,-9222.9355"/>
<polygon fill="#000000" stroke="#000000" points="4896.0504,-9226.4356 4906.0503,-9222.9355 4896.0503,-9219.4356 4896.0504,-9226.4356"/>
</g>
<!-- org.scalacheck.Shrink[Vector[io.circe.Json]]&#45;&gt;Vector[io.circe.Json] =&gt; Traversable[io.circe.Json] -->
<g id="edge1106" class="edge">
<title>org.scalacheck.Shrink[Vector[io.circe.Json]]&#45;&gt;Vector[io.circe.Json] =&gt; Traversable[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M4239.2982,-9233.7962C4349.3306,-9240.9044 4496.1224,-9250.4193 4625.8509,-9258.9355 4740.4563,-9266.459 4868.6891,-9274.974 4971.6292,-9281.8334"/>
<polygon fill="#000000" stroke="#000000" points="4971.6166,-9285.3402 4981.8272,-9282.513 4972.0821,-9278.3557 4971.6166,-9285.3402"/>
</g>
<!-- org.scalacheck.Shrink[Vector[io.circe.Json]]&#45;&gt;Integral[Vector[io.circe.Json]] -->
<g id="edge194" class="edge">
<title>org.scalacheck.Shrink[Vector[io.circe.Json]]&#45;&gt;Integral[Vector[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M4238.5684,-9211.9219C4456.9837,-9197.5858 4834.3272,-9172.8182 5034.3239,-9159.691"/>
<polygon fill="#000000" stroke="#000000" points="5034.8441,-9163.1645 5044.5933,-9159.017 5034.3855,-9156.1795 5034.8441,-9163.1645"/>
</g>
<!-- cats.kernel.Eq[io.circe.DecodingFailure]&#45;&gt;shapeless.IsTuple[io.circe.DecodingFailure] -->
<g id="edge1400" class="edge">
<title>cats.kernel.Eq[io.circe.DecodingFailure]&#45;&gt;shapeless.IsTuple[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M13223.4156,-14020.5251C13294.1261,-14039.6575 13392.9464,-14070.4399 13473.975,-14110.9355 13939.1604,-14343.4208 13913.9175,-14779.9355 14433.9626,-14779.9355 14433.9626,-14779.9355 14433.9626,-14779.9355 19337.1796,-14779.9355 19754.3995,-14779.9355 19858.7151,-14773.947 20275.7321,-14760.9355 20277.2767,-14760.8874 20278.8284,-14760.8382 20280.3863,-14760.7883"/>
<polygon fill="#000000" stroke="#000000" points="20280.8723,-14764.2742 20290.7514,-14760.4463 20280.6414,-14757.278 20280.8723,-14764.2742"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc17] -->
<g id="node1595" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc17]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-67868.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-67872.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc17]</text>
<text text-anchor="middle" x="572.0494" y="-67857.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc17]&#45;&gt;Integral[ProductCodecSuite.this.Cc17] -->
<g id="edge98" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc17]&#45;&gt;Integral[ProductCodecSuite.this.Cc17]</title>
<path fill="none" stroke="#000000" d="M788.0311,-67868.9355C1015.6943,-67868.9355 1369.686,-67868.9355 1578.6973,-67868.9355"/>
<polygon fill="#000000" stroke="#000000" points="1578.8485,-67872.4356 1588.8485,-67868.9355 1578.8485,-67865.4356 1578.8485,-67872.4356"/>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc17] -->
<g id="node1703" class="node">
<title>Fractional[ProductCodecSuite.this.Cc17]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-67796.9355" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="1637.604" y="-67800.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc17]</text>
<text text-anchor="middle" x="1749.604" y="-67785.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc17]&#45;&gt;Fractional[ProductCodecSuite.this.Cc17] -->
<g id="edge65" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc17]&#45;&gt;Fractional[ProductCodecSuite.this.Cc17]</title>
<path fill="none" stroke="#000000" d="M765.0635,-67856.8688C877.8961,-67849.8367 1023.0658,-67840.8268 1152.0988,-67832.9355 1296.752,-67824.089 1461.1148,-67814.1978 1580.7884,-67807.0252"/>
<polygon fill="#000000" stroke="#000000" points="1581.0013,-67810.5189 1590.774,-67806.4269 1580.5825,-67803.5314 1581.0013,-67810.5189"/>
</g>
<!-- String(&#39;deleteLefts&#39;) =&gt; ?{def should: ?} -->
<g id="node1596" class="node">
<title>String(&#39;deleteLefts&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-25046.9355" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="461.5494" y="-25050.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;deleteLefts&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-25035.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;deleteLefts&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1391" class="edge">
<title>String(&#39;deleteLefts&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M726.0984,-25036.226C874.1758,-25029.4373 1084.0853,-25030.1577 1144.0988,-25082.9355 1639.3438,-25518.4713 1737.1823,-27854.5168 1748.4086,-28177.8105"/>
<polygon fill="#000000" stroke="#000000" points="1744.9186,-28178.167 1748.758,-28188.0417 1751.9145,-28177.928 1744.9186,-28178.167"/>
</g>
<!-- io.circe.Encoder[(Int, String, Char)] -->
<g id="node1597" class="node">
<title>io.circe.Encoder[(Int, String, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-20942.9355" rx="150.7276" ry="26.7407"/>
<text text-anchor="start" x="473.5494" y="-20946.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, String, Char)]</text>
<text text-anchor="middle" x="572.0494" y="-20931.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- io.circe.Encoder[(Int, String, Char)]&#45;&gt;io.circe.Encoder[String] -->
<g id="edge1560" class="edge">
<title>io.circe.Encoder[(Int, String, Char)]&#45;&gt;io.circe.Encoder[String]</title>
<path fill="none" stroke="#000000" d="M714.1789,-20951.8285C831.6053,-20959.1585 1002.6724,-20969.7971 1152.0988,-20978.9355 1321.1744,-20989.2757 1517.1766,-21001.043 1637.2718,-21008.2282"/>
<polygon fill="#000000" stroke="#000000" points="1637.3854,-21011.7411 1647.5766,-21008.8446 1637.8035,-21004.7536 1637.3854,-21011.7411"/>
</g>
<!-- io.circe.Encoder[(Int, String, Char)]&#45;&gt;io.circe.Encoder[Char] -->
<g id="edge576" class="edge">
<title>io.circe.Encoder[(Int, String, Char)]&#45;&gt;io.circe.Encoder[Char]</title>
<path fill="none" stroke="#000000" d="M722.6832,-20942.9355C962.9962,-20942.9355 1427.5767,-20942.9355 1639.4559,-20942.9355"/>
<polygon fill="#000000" stroke="#000000" points="1639.6605,-20946.4356 1649.6604,-20942.9355 1639.6604,-20939.4356 1639.6605,-20946.4356"/>
</g>
<!-- io.circe.Encoder[(Int, String, Char)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge472" class="edge">
<title>io.circe.Encoder[(Int, String, Char)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M708.4527,-20931.414C858.4999,-20922.08 1086.1246,-20918.8912 1144.0988,-20978.9355 1166.3344,-21001.9652 1129.8324,-21243.9356 1152.0988,-21266.9355 1288.983,-21408.3293 1550.3093,-21360.2352 1677.0663,-21325.6227"/>
<polygon fill="#000000" stroke="#000000" points="1678.3656,-21328.8944 1687.0633,-21322.8444 1676.4912,-21322.15 1678.3656,-21328.8944"/>
</g>
<!-- cats.kernel.Eq[cats.data.Validated[String,Int]] -->
<g id="node1599" class="node">
<title>cats.kernel.Eq[cats.data.Validated[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-19248.9355" rx="188.5952" ry="26.7407"/>
<text text-anchor="start" x="10732.9287" y="-19252.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[cats.data.Validated[String,Int]]</text>
<text text-anchor="middle" x="10858.4287" y="-19237.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.Validated[String,Int]]&#45;&gt;cats.Order[String] -->
<g id="edge587" class="edge">
<title>cats.kernel.Eq[cats.data.Validated[String,Int]]&#45;&gt;cats.Order[String]</title>
<path fill="none" stroke="#000000" d="M11018.3898,-19234.5383C11184.0314,-19219.6298 11436.821,-19196.8776 11569.6958,-19184.9183"/>
<polygon fill="#000000" stroke="#000000" points="11570.1871,-19188.3883 11579.833,-19184.0059 11569.5595,-19181.4165 11570.1871,-19188.3883"/>
</g>
<!-- cats.kernel.Eq[cats.data.Validated[String,Int]]&#45;&gt;shapeless.IsTuple[cats.data.Validated[String,Int]] -->
<g id="edge255" class="edge">
<title>cats.kernel.Eq[cats.data.Validated[String,Int]]&#45;&gt;shapeless.IsTuple[cats.data.Validated[String,Int]]</title>
<path fill="none" stroke="#000000" d="M11047.248,-19248.9355C11166.8862,-19248.9355 11321.861,-19248.9355 11445.8122,-19248.9355"/>
<polygon fill="#000000" stroke="#000000" points="11445.8129,-19252.4356 11455.8129,-19248.9355 11445.8128,-19245.4356 11445.8129,-19252.4356"/>
</g>
<!-- cats.kernel.Eq[cats.data.Validated[String,Int]]&#45;&gt;cats.Order[Int] -->
<g id="edge786" class="edge">
<title>cats.kernel.Eq[cats.data.Validated[String,Int]]&#45;&gt;cats.Order[Int]</title>
<path fill="none" stroke="#000000" d="M11018.3898,-19263.3328C11188.8597,-19278.6758 11451.632,-19302.3265 11581.0045,-19313.9707"/>
<polygon fill="#000000" stroke="#000000" points="11580.9437,-19317.4792 11591.2172,-19314.8898 11581.5712,-19310.5074 11580.9437,-19317.4792"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc8] -->
<g id="node1600" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc8]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-75176.9355" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="423.5494" y="-75180.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc8]</text>
<text text-anchor="middle" x="572.0494" y="-75165.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc8] -->
<g id="node1765" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc8]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-75176.9355" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="1608.604" y="-75180.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc8]</text>
<text text-anchor="middle" x="1749.604" y="-75165.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc8]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc8] -->
<g id="edge346" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc8]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc8]</title>
<path fill="none" stroke="#000000" d="M793.5384,-75176.9355C1003.7878,-75176.9355 1318.0755,-75176.9355 1528.2728,-75176.9355"/>
<polygon fill="#000000" stroke="#000000" points="1528.5155,-75180.4356 1538.5154,-75176.9355 1528.5154,-75173.4356 1528.5155,-75180.4356"/>
</g>
<!-- io.circe.Decoder[Map[Long,Int]] -->
<g id="node1601" class="node">
<title>io.circe.Decoder[Map[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-11898.9355" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="3980.2721" y="-11902.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Map[Long,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-11887.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Decoder[Map[Long,Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge739" class="edge">
<title>io.circe.Decoder[Map[Long,Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4198.4794,-11888.1445C4344.17,-11878.9798 4569.5657,-11875.4361 4625.8509,-11934.9355 4642.3447,-11952.3712 4619.1678,-12779.9499 4633.8509,-12798.9355 4735.1721,-12929.9464 4942.3961,-12949.7754 5066.7641,-12948.7772"/>
<polygon fill="#000000" stroke="#000000" points="5067.098,-12952.2734 5077.0524,-12948.6457 5067.0084,-12945.2739 5067.098,-12952.2734"/>
</g>
<!-- io.circe.Decoder[Map[Long,Int]]&#45;&gt;io.circe.KeyDecoder[Long] -->
<g id="edge1473" class="edge">
<title>io.circe.Decoder[Map[Long,Int]]&#45;&gt;io.circe.KeyDecoder[Long]</title>
<path fill="none" stroke="#000000" d="M4210.2575,-11898.9355C4424.5828,-11898.9355 4831.8082,-11898.9355 5039.2782,-11898.9355"/>
<polygon fill="#000000" stroke="#000000" points="5039.3091,-11902.4356 5049.3091,-11898.9355 5039.309,-11895.4356 5039.3091,-11902.4356"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V] -->
<g id="node1603" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-75248.9355" rx="557.4004" ry="26.7407"/>
<text text-anchor="start" x="186.0494" y="-75252.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor22[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S,?T,?U,?V]</text>
<text text-anchor="middle" x="572.0494" y="-75237.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int,)] -->
<g id="node1604" class="node">
<title>org.scalacheck.Shrink[(Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-41498.9355" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="493.5494" y="-41502.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int,)]</text>
<text text-anchor="middle" x="572.0494" y="-41487.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int,)]&#45;&gt;Integral[(Int,)] -->
<g id="edge517" class="edge">
<title>org.scalacheck.Shrink[(Int,)]&#45;&gt;Integral[(Int,)]</title>
<path fill="none" stroke="#000000" d="M689.8054,-41506.3064C806.9944,-41513.6271 991.9721,-41525.1427 1152.0988,-41534.9355 1338.8768,-41546.3583 1558.515,-41559.5228 1672.3796,-41566.3274"/>
<polygon fill="#000000" stroke="#000000" points="1672.2055,-41569.8232 1682.3965,-41566.9259 1672.623,-41562.8356 1672.2055,-41569.8232"/>
</g>
<!-- org.scalacheck.Shrink[(Int,)]&#45;&gt;((Int,)) =&gt; Traversable[Int] -->
<g id="edge1007" class="edge">
<title>org.scalacheck.Shrink[(Int,)]&#45;&gt;((Int,)) =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M694.4599,-41498.9355C918.9852,-41498.9355 1394.4858,-41498.9355 1622.4758,-41498.9355"/>
<polygon fill="#000000" stroke="#000000" points="1622.8108,-41502.4356 1632.8107,-41498.9355 1622.8107,-41495.4356 1622.8108,-41502.4356"/>
</g>
<!-- Fractional[(Int,)] -->
<g id="node1639" class="node">
<title>Fractional[(Int,)]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-41426.9355" rx="76.2353" ry="26.7407"/>
<text text-anchor="start" x="1703.604" y="-41430.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[(Int,)]</text>
<text text-anchor="middle" x="1749.604" y="-41415.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int,)]&#45;&gt;Fractional[(Int,)] -->
<g id="edge445" class="edge">
<title>org.scalacheck.Shrink[(Int,)]&#45;&gt;Fractional[(Int,)]</title>
<path fill="none" stroke="#000000" d="M689.8054,-41491.5647C806.9944,-41484.244 991.9721,-41472.7284 1152.0988,-41462.9355 1334.3458,-41451.7899 1547.8781,-41438.986 1663.9082,-41432.05"/>
<polygon fill="#000000" stroke="#000000" points="1664.3707,-41435.5287 1674.144,-41431.4382 1663.953,-41428.5412 1664.3707,-41435.5287"/>
</g>
<!-- org.scalacheck.Shrink[Symbol]&#45;&gt;Fractional[Symbol] -->
<g id="edge186" class="edge">
<title>org.scalacheck.Shrink[Symbol]&#45;&gt;Fractional[Symbol]</title>
<path fill="none" stroke="#000000" d="M5298.8743,-4603.4131C5513.5936,-4610.7434 5935.2177,-4625.1371 6125.271,-4631.6253"/>
<polygon fill="#000000" stroke="#000000" points="6125.4098,-4635.132 6135.5234,-4631.9753 6125.6487,-4628.1361 6125.4098,-4635.132"/>
</g>
<!-- org.scalacheck.Shrink[Symbol]&#45;&gt;Integral[Symbol] -->
<g id="edge1345" class="edge">
<title>org.scalacheck.Shrink[Symbol]&#45;&gt;Integral[Symbol]</title>
<path fill="none" stroke="#000000" d="M5298.8743,-4594.458C5517.1427,-4587.0066 5949.2122,-4572.2562 6134.5034,-4565.9306"/>
<polygon fill="#000000" stroke="#000000" points="6134.87,-4569.4202 6144.7447,-4565.581 6134.6311,-4562.4243 6134.87,-4569.4202"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[io.circe.Json],io.circe.Json,Iterable[io.circe.Json]] -->
<g id="node1606" class="node">
<title>scala.collection.generic.CanBuildFrom[List[io.circe.Json],io.circe.Json,Iterable[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-75320.9355" rx="375.4474" ry="26.7407"/>
<text text-anchor="start" x="314.5494" y="-75324.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[io.circe.Json],io.circe.Json,Iterable[io.circe.Json]]</text>
<text text-anchor="middle" x="572.0494" y="-75309.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.Decoder[Set[Int]] -->
<g id="node1610" class="node">
<title>io.circe.Decoder[Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-12906.9355" rx="111.0315" ry="26.7407"/>
<text text-anchor="start" x="4000.2721" y="-12910.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Set[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-12895.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Decoder[Set[Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1393" class="edge">
<title>io.circe.Decoder[Set[Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4180.9738,-12910.5522C4393.8849,-12917.5396 4858.9412,-12932.802 5065.4284,-12939.5786"/>
<polygon fill="#000000" stroke="#000000" points="5065.553,-12943.0845 5075.6625,-12939.9145 5065.7827,-12936.0883 5065.553,-12943.0845"/>
</g>
<!-- io.circe.Decoder[cats.data.NonEmptyVector[Int]] -->
<g id="node1611" class="node">
<title>io.circe.Decoder[cats.data.NonEmptyVector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-12402.9355" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="3935.2721" y="-12406.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[cats.data.NonEmptyVector[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-12391.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- io.circe.Decoder[cats.data.NonEmptyVector[Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge336" class="edge">
<title>io.circe.Decoder[cats.data.NonEmptyVector[Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4247.437,-12389.6326C4390.1274,-12383.2091 4575.2367,-12386.1207 4625.8509,-12438.9355 4639.6925,-12453.3789 4621.5102,-12783.1906 4633.8509,-12798.9355 4735.9469,-12929.1952 4942.6567,-12949.3171 5066.7718,-12948.5686"/>
<polygon fill="#000000" stroke="#000000" points="5067.0777,-12952.0656 5077.0393,-12948.4579 5067.0022,-12945.066 5067.0777,-12952.0656"/>
</g>
<!-- io.circe.Decoder[cats.data.NonEmptyVector[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with cats.data.NonEmptyVector[Int]] -->
<g id="edge328" class="edge">
<title>io.circe.Decoder[cats.data.NonEmptyVector[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with cats.data.NonEmptyVector[Int]]</title>
<path fill="none" stroke="#000000" d="M4273.8872,-12402.9355C4403.4988,-12402.9355 4576.4909,-12402.9355 4735.7448,-12402.9355"/>
<polygon fill="#000000" stroke="#000000" points="4736.2142,-12406.4356 4746.2142,-12402.9355 4736.2141,-12399.4356 4736.2142,-12406.4356"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int)] -->
<g id="node1613" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-12330.9355" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="3952.7721" y="-12334.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-12319.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 26ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge981" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4229.0206,-12318.4826C4373.7589,-12310.9752 4573.1255,-12311.7134 4625.8509,-12366.9355 4642.4274,-12384.2969 4619.0782,-12780.0156 4633.8509,-12798.9355 4735.7056,-12929.384 4942.4991,-12949.4404 5066.6946,-12948.6289"/>
<polygon fill="#000000" stroke="#000000" points="5067.0091,-12952.1257 5076.9689,-12948.513 5066.93,-12945.1262 5067.0091,-12952.1257"/>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int)]] -->
<g id="node1713" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-12330.9355" rx="277.786" ry="26.7407"/>
<text text-anchor="start" x="4979.2166" y="-12334.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int)]]</text>
<text text-anchor="middle" x="5167.7166" y="-12319.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int)]] -->
<g id="edge972" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4249.1507,-12330.9355C4419.6969,-12330.9355 4679.7333,-12330.9355 4879.6555,-12330.9355"/>
<polygon fill="#000000" stroke="#000000" points="4879.7285,-12334.4356 4889.7285,-12330.9355 4879.7285,-12327.4356 4879.7285,-12334.4356"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K] -->
<g id="node1614" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-75392.9355" rx="359.8347" ry="26.7407"/>
<text text-anchor="start" x="325.5494" y="-75396.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor11[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K]</text>
<text text-anchor="middle" x="572.0494" y="-75381.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[Int] =&gt; ?{def ===: ?} -->
<g id="node1618" class="node">
<title>Option[Int] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-15170.9355" rx="127.9727" ry="26.7407"/>
<text text-anchor="start" x="9933.5427" y="-15174.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Int] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10016.0427" y="-15159.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 13ms</text>
</g>
<!-- Option[Int] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Int]] -->
<g id="edge696" class="edge">
<title>Option[Int] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Int]]</title>
<path fill="none" stroke="#000000" d="M10144.4412,-15170.9355C10312.9414,-15170.9355 10605.1794,-15170.9355 10758.2938,-15170.9355"/>
<polygon fill="#000000" stroke="#000000" points="10758.6246,-15174.4356 10768.6246,-15170.9355 10758.6245,-15167.4356 10758.6246,-15174.4356"/>
</g>
<!-- Fractional[io.circe.CursorOp] -->
<g id="node1619" class="node">
<title>Fractional[io.circe.CursorOp]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-36026.9355" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="2850.4013" y="-36030.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[io.circe.CursorOp]</text>
<text text-anchor="middle" x="2931.4013" y="-36015.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc18] -->
<g id="node1620" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc18]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-59732.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="420.0494" y="-59736.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc18]</text>
<text text-anchor="middle" x="572.0494" y="-59721.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc18]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc18] -->
<g id="edge6" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc18]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc18]</title>
<path fill="none" stroke="#000000" d="M798.3967,-59732.9355C1007.0924,-59732.9355 1315.2165,-59732.9355 1523.754,-59732.9355"/>
<polygon fill="#000000" stroke="#000000" points="1523.9188,-59736.4356 1533.9188,-59732.9355 1523.9187,-59729.4356 1523.9188,-59736.4356"/>
</g>
<!-- io.circe.Decoder.Result[Int] =&gt; ?{def ===: ?} -->
<g id="node1621" class="node">
<title>io.circe.Decoder.Result[Int] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-75464.9355" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="444.0494" y="-75468.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[Int] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-75453.7355" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 12ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc3] -->
<g id="node1624" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc3]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-45638.9355" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="446.0494" y="-45642.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc3]</text>
<text text-anchor="middle" x="572.0494" y="-45627.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc3]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc3]] -->
<g id="edge1090" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc3]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc3]]</title>
<path fill="none" stroke="#000000" d="M761.5708,-45638.9355C940.1781,-45638.9355 1211.4625,-45638.9355 1424.6075,-45638.9355"/>
<polygon fill="#000000" stroke="#000000" points="1424.7127,-45642.4356 1434.7127,-45638.9355 1424.7127,-45635.4356 1424.7127,-45642.4356"/>
</g>
<!-- Int =&gt; ?{def ===: ?} -->
<g id="node1625" class="node">
<title>Int =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-19464.9355" rx="94.5053" ry="26.7407"/>
<text text-anchor="start" x="10799.4287" y="-19468.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="10858.4287" y="-19453.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 18ms</text>
</g>
<!-- Int =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Int] -->
<g id="edge1478" class="edge">
<title>Int =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M10953.3359,-19464.9355C11109.5012,-19464.9355 11418.4217,-19464.9355 11570.1266,-19464.9355"/>
<polygon fill="#000000" stroke="#000000" points="11570.3311,-19468.4356 11580.331,-19464.9355 11570.331,-19461.4356 11570.3311,-19468.4356"/>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc14] -->
<g id="node1626" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc14]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-61460.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-61464.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc14]</text>
<text text-anchor="middle" x="572.0494" y="-61449.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc14]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc14]] -->
<g id="edge499" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc14]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc14]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-61460.9355C951.3519,-61460.9355 1231.2937,-61460.9355 1445.2652,-61460.9355"/>
<polygon fill="#000000" stroke="#000000" points="1445.4039,-61464.4356 1455.4038,-61460.9355 1445.4038,-61457.4356 1445.4039,-61464.4356"/>
</g>
<!-- Integral[MemoizedPiecesSuite.this.Depths] -->
<g id="node1627" class="node">
<title>Integral[MemoizedPiecesSuite.this.Depths]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-74456.9355" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="1630.604" y="-74460.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[MemoizedPiecesSuite.this.Depths]</text>
<text text-anchor="middle" x="1749.604" y="-74445.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.NonEmptyList[Int]] -->
<g id="node1628" class="node">
<title>cats.kernel.Eq[cats.data.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-19354.9355" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="10736.9287" y="-19358.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[cats.data.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="10858.4287" y="-19343.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.NonEmptyList[Int]]&#45;&gt;shapeless.IsTuple[cats.data.NonEmptyList[Int]] -->
<g id="edge67" class="edge">
<title>cats.kernel.Eq[cats.data.NonEmptyList[Int]]&#45;&gt;shapeless.IsTuple[cats.data.NonEmptyList[Int]]</title>
<path fill="none" stroke="#000000" d="M11032.9947,-19363.2279C11159.5696,-19369.2405 11330.8608,-19377.3772 11462.1739,-19383.6149"/>
<polygon fill="#000000" stroke="#000000" points="11462.1991,-19387.1199 11472.3539,-19384.0985 11462.5313,-19380.1278 11462.1991,-19387.1199"/>
</g>
<!-- cats.kernel.Eq[cats.data.NonEmptyList[Int]]&#45;&gt;cats.Eq[Int] -->
<g id="edge1573" class="edge">
<title>cats.kernel.Eq[cats.data.NonEmptyList[Int]]&#45;&gt;cats.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M10972.1935,-19333.8408C11062.3264,-19324.033 11185.8495,-19326.9587 11265.0151,-19395.9355 11276.3934,-19405.8495 11261.6003,-19419.0635 11273.0151,-19428.9355 11358.3272,-19502.7178 11497.4425,-19495.222 11583.1287,-19481.3127"/>
<polygon fill="#000000" stroke="#000000" points="11583.7724,-19484.7536 11593.0487,-19479.635 11582.605,-19477.8516 11583.7724,-19484.7536"/>
</g>
<!-- cats.kernel.Eq[cats.data.NonEmptyList[Int]]&#45;&gt;cats.Order[Int] -->
<g id="edge497" class="edge">
<title>cats.kernel.Eq[cats.data.NonEmptyList[Int]]&#45;&gt;cats.Order[Int]</title>
<path fill="none" stroke="#000000" d="M11034.4781,-19347.4531C11204.2825,-19340.236 11453.5314,-19329.6424 11579.4173,-19324.292"/>
<polygon fill="#000000" stroke="#000000" points="11579.8949,-19327.7749 11589.7372,-19323.8534 11579.5976,-19320.7813 11579.8949,-19327.7749"/>
</g>
<!-- scala.reflect.ClassTag[List[io.circe.Json]] -->
<g id="node1629" class="node">
<title>scala.reflect.ClassTag[List[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-14778.9355" rx="171.6541" ry="26.7407"/>
<text text-anchor="start" x="5054.2166" y="-14782.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[List[io.circe.Json]]</text>
<text text-anchor="middle" x="5167.7166" y="-14767.7355" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 9ms</text>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Map[Short,Int]] -->
<g id="node1630" class="node">
<title>cats.kernel.Eq[scala.collection.immutable.Map[Short,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-15600.9355" rx="237.6758" ry="26.7407"/>
<text text-anchor="start" x="19177.1796" y="-15604.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.collection.immutable.Map[Short,Int]]</text>
<text text-anchor="middle" x="19337.1796" y="-15589.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Map[Short,Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge641" class="edge">
<title>cats.kernel.Eq[scala.collection.immutable.Map[Short,Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M19540.0039,-15586.9337C19597.0826,-15591.6226 19656.6787,-15605.4547 19704.8751,-15636.9355 19882.6405,-15753.0481 19962.0374,-16018.0947 19986.0187,-16115.8391"/>
<polygon fill="#000000" stroke="#000000" points="19982.6826,-16116.9362 19988.4215,-16125.8421 19989.489,-16115.3012 19982.6826,-16116.9362"/>
</g>
<!-- org.scalacheck.Shrink[io.circe.JsonObject] -->
<g id="node1631" class="node">
<title>org.scalacheck.Shrink[io.circe.JsonObject]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-75536.9355" rx="176.5537" ry="26.7407"/>
<text text-anchor="start" x="455.0494" y="-75540.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[io.circe.JsonObject]</text>
<text text-anchor="middle" x="572.0494" y="-75525.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[Int,scala.collection.immutable.Set[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,scala.collection.immutable.Set[Int]] -->
<g id="edge485" class="edge">
<title>org.scalacheck.util.Buildable[Int,scala.collection.immutable.Set[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,scala.collection.immutable.Set[Int]]</title>
<path fill="none" stroke="#000000" d="M5447.194,-4454.9355C5581.862,-4454.9355 5744.4427,-4454.9355 5885.8489,-4454.9355"/>
<polygon fill="#000000" stroke="#000000" points="5885.9929,-4458.4356 5895.9929,-4454.9355 5885.9929,-4451.4356 5885.9929,-4458.4356"/>
</g>
<!-- shapeless.IsTuple[Char] -->
<g id="node1666" class="node">
<title>shapeless.IsTuple[Char]</title>
<ellipse fill="none" stroke="#000000" cx="14433.9626" cy="-14911.9355" rx="104.8038" ry="26.7407"/>
<text text-anchor="start" x="14367.9626" y="-14915.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Char]</text>
<text text-anchor="middle" x="14433.9626" y="-14900.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[Char]&#45;&gt;shapeless.IsTuple[Char] -->
<g id="edge1125" class="edge">
<title>cats.kernel.Eq[Char]&#45;&gt;shapeless.IsTuple[Char]</title>
<path fill="none" stroke="#000000" d="M13895.0162,-14911.9355C14007.0887,-14911.9355 14197.2215,-14911.9355 14319.1038,-14911.9355"/>
<polygon fill="#000000" stroke="#000000" points="14319.218,-14915.4356 14329.2179,-14911.9355 14319.2179,-14908.4356 14319.218,-14915.4356"/>
</g>
<!-- (=&gt; Float) =&gt; Int -->
<g id="node1634" class="node">
<title>(=&gt; Float) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-75608.9355" rx="79.8062" ry="26.7407"/>
<text text-anchor="start" x="523.5494" y="-75612.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Float) =&gt; Int</text>
<text text-anchor="middle" x="572.0494" y="-75597.7355" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 15ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M] -->
<g id="node1635" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-75680.9355" rx="388.4034" ry="26.7407"/>
<text text-anchor="start" x="305.5494" y="-75684.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M]</text>
<text text-anchor="middle" x="572.0494" y="-75669.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Set[Int]] -->
<g id="node1637" class="node">
<title>org.scalacheck.Shrink[scala.collection.immutable.Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-4454.9355" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="3909.7721" y="-4458.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[scala.collection.immutable.Set[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-4443.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Set[Int]]&#45;&gt;Integral[scala.collection.immutable.Set[Int]] -->
<g id="edge1463" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Set[Int]]&#45;&gt;Integral[scala.collection.immutable.Set[Int]]</title>
<path fill="none" stroke="#000000" d="M4278.3555,-4468.3207C4382.6371,-4475.0647 4510.9382,-4483.3919 4625.8509,-4490.9355 4747.5213,-4498.9228 4884.551,-4508.0276 4990.3693,-4515.0824"/>
<polygon fill="#000000" stroke="#000000" points="4990.3,-4518.5855 5000.5108,-4515.7586 4990.7658,-4511.601 4990.3,-4518.5855"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Set[Int]]&#45;&gt;scala.collection.immutable.Set[Int] =&gt; Traversable[Int] -->
<g id="edge92" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Set[Int]]&#45;&gt;scala.collection.immutable.Set[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M4278.3555,-4441.5504C4382.6371,-4434.8064 4510.9382,-4426.4792 4625.8509,-4418.9355 4736.3592,-4411.6811 4859.5379,-4403.5046 4960.4937,-4396.7796"/>
<polygon fill="#000000" stroke="#000000" points="4960.7587,-4400.2698 4970.5039,-4396.1127 4960.2933,-4393.2853 4960.7587,-4400.2698"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Set[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,scala.collection.immutable.Set[Int]] -->
<g id="edge541" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Set[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,scala.collection.immutable.Set[Int]]</title>
<path fill="none" stroke="#000000" d="M4309.8072,-4454.9355C4476.7552,-4454.9355 4700.5556,-4454.9355 4877.7133,-4454.9355"/>
<polygon fill="#000000" stroke="#000000" points="4877.9772,-4458.4356 4887.9771,-4454.9355 4877.9771,-4451.4356 4877.9772,-4458.4356"/>
</g>
<!-- org.scalacheck.Shrink[scala.collection.immutable.Set[Int]]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge905" class="edge">
<title>org.scalacheck.Shrink[scala.collection.immutable.Set[Int]]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4272.0909,-4440.3928C4410.8793,-4435.3094 4578.5339,-4440.6495 4625.8509,-4490.9355 4645.1531,-4511.4489 4614.5751,-6498.3974 4633.8509,-6518.9355 4688.4677,-6577.1288 4910.2734,-6573.4224 5050.2316,-6564.6934"/>
<polygon fill="#000000" stroke="#000000" points="5050.8259,-6568.1625 5060.5813,-6564.0295 5050.3777,-6561.1769 5050.8259,-6568.1625"/>
</g>
<!-- io.circe.Decoder[Test$3] -->
<g id="node1638" class="node">
<title>io.circe.Decoder[Test$3]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-74960.9355" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="504.0494" y="-74964.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Test$3]</text>
<text text-anchor="middle" x="572.0494" y="-74949.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- io.circe.Decoder[Test$3]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[Test$3]] -->
<g id="edge437" class="edge">
<title>io.circe.Decoder[Test$3]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[Test$3]]</title>
<path fill="none" stroke="#000000" d="M679.6712,-74960.9355C872.2656,-74960.9355 1279.3092,-74960.9355 1532.1017,-74960.9355"/>
<polygon fill="#000000" stroke="#000000" points="1532.1499,-74964.4356 1542.1499,-74960.9355 1532.1499,-74957.4356 1532.1499,-74964.4356"/>
</g>
<!-- Integral[io.circe.numbers.testing.JsonNumberString] -->
<g id="node1640" class="node">
<title>Integral[io.circe.numbers.testing.JsonNumberString]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-74798.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="1605.104" y="-74802.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[io.circe.numbers.testing.JsonNumberString]</text>
<text text-anchor="middle" x="1749.604" y="-74787.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[cats.data.NonEmptyList[Int]] -->
<g id="node1641" class="node">
<title>io.circe.Decoder[cats.data.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-12258.9355" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="3942.7721" y="-12262.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[cats.data.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-12247.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- io.circe.Decoder[cats.data.NonEmptyList[Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1145" class="edge">
<title>io.circe.Decoder[cats.data.NonEmptyList[Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4239.4414,-12245.9309C4383.1892,-12238.9868 4574.4472,-12240.955 4625.8509,-12294.9355 4645.1625,-12315.2151 4616.646,-12776.8405 4633.8509,-12798.9355 4735.533,-12929.5186 4942.3864,-12949.5283 5066.6394,-12948.672"/>
<polygon fill="#000000" stroke="#000000" points="5066.96,-12952.1686 5076.9185,-12948.5523 5066.8784,-12945.1691 5066.96,-12952.1686"/>
</g>
<!-- io.circe.Decoder[cats.data.NonEmptyList[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with cats.data.NonEmptyList[Int]] -->
<g id="edge138" class="edge">
<title>io.circe.Decoder[cats.data.NonEmptyList[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,Int,Traversable[Int] with cats.data.NonEmptyList[Int]]</title>
<path fill="none" stroke="#000000" d="M4263.4148,-12258.9355C4396.9083,-12258.9355 4579.8828,-12258.9355 4746.3321,-12258.9355"/>
<polygon fill="#000000" stroke="#000000" points="4746.7647,-12262.4356 4756.7647,-12258.9355 4746.7646,-12255.4356 4746.7647,-12262.4356"/>
</g>
<!-- cats.kernel.Eq[cats.data.NonEmptyVector[Int]] -->
<g id="node1642" class="node">
<title>cats.kernel.Eq[cats.data.NonEmptyVector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-19536.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="10728.9287" y="-19540.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[cats.data.NonEmptyVector[Int]]</text>
<text text-anchor="middle" x="10858.4287" y="-19525.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.NonEmptyVector[Int]]&#45;&gt;shapeless.IsTuple[cats.data.NonEmptyVector[Int]] -->
<g id="edge95" class="edge">
<title>cats.kernel.Eq[cats.data.NonEmptyVector[Int]]&#45;&gt;shapeless.IsTuple[cats.data.NonEmptyVector[Int]]</title>
<path fill="none" stroke="#000000" d="M11053.0979,-19536.9355C11170.2798,-19536.9355 11319.718,-19536.9355 11440.7885,-19536.9355"/>
<polygon fill="#000000" stroke="#000000" points="11440.9307,-19540.4356 11450.9306,-19536.9355 11440.9306,-19533.4356 11440.9307,-19540.4356"/>
</g>
<!-- cats.kernel.Eq[cats.data.NonEmptyVector[Int]]&#45;&gt;cats.Eq[Int] -->
<g id="edge664" class="edge">
<title>cats.kernel.Eq[cats.data.NonEmptyVector[Int]]&#45;&gt;cats.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M11022.6374,-19522.5072C11096.696,-19515.9713 11185.2612,-19508.1157 11265.0151,-19500.9355 11371.1277,-19491.3823 11493.3197,-19480.1661 11572.9966,-19472.8234"/>
<polygon fill="#000000" stroke="#000000" points="11573.3455,-19476.3062 11582.982,-19471.903 11572.7029,-19469.3358 11573.3455,-19476.3062"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1005" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M7529.2853,-17480.4456C7594.0219,-17485.1936 7662.2073,-17490.2153 7725.7654,-17494.9355 7785.4434,-17499.3676 7849.3072,-17504.1487 7910.3025,-17508.7334"/>
<polygon fill="#000000" stroke="#000000" points="7910.2271,-17512.2376 7920.4614,-17509.4972 7910.752,-17505.2573 7910.2271,-17512.2376"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1555" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M7692.1995,-17449.1623C8356.444,-17432.7338 9515.6993,-17394.6577 9580.2431,-17327.9355 9593.9203,-17313.7967 9576.1068,-16989.4174 9588.2431,-16973.9355 9831.2438,-16663.9459 10068.884,-16863.5557 10443.8423,-16742.9355 10447.4572,-16741.7727 10448.1204,-16740.6887 10451.8423,-16739.9355 10496.1575,-16730.9679 11233.0504,-16738.9124 11265.0151,-16706.9355 11280.6596,-16691.285 11257.388,-16523.6035 11273.0151,-16507.9355 11333.5469,-16447.2455 11983.7596,-16536.1497 12043.7615,-16474.9355 12057.415,-16461.0061 12037.991,-16137.7494 12051.7615,-16123.9355 12136.4515,-16038.9783 13011.0693,-16095.9355 13131.0282,-16095.9355 13131.0282,-16095.9355 13131.0282,-16095.9355 15567.1913,-16095.9355 17303.5609,-16095.9355 19422.6902,-16140.318 19897.0752,-16150.7563"/>
<polygon fill="#000000" stroke="#000000" points="19897.2315,-16154.2605 19907.3062,-16150.9817 19897.3858,-16147.2622 19897.2315,-16154.2605"/>
</g>
<!-- shapeless.IsTuple[ProductCodecSuite.this.Cc15] -->
<g id="node1645" class="node">
<title>shapeless.IsTuple[ProductCodecSuite.this.Cc15]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-75752.9355" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="1617.104" y="-75756.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[ProductCodecSuite.this.Cc15]</text>
<text text-anchor="middle" x="1749.604" y="-75741.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]] -->
<g id="node1646" class="node">
<title>cats.kernel.Eq[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="9131.2303" cy="-14406.9355" rx="256.8596" ry="26.7407"/>
<text text-anchor="start" x="8957.7303" y="-14410.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]]</text>
<text text-anchor="middle" x="9131.2303" y="-14395.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]]&#45;&gt;shapeless.IsTuple[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]] -->
<g id="edge36" class="edge">
<title>cats.kernel.Eq[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]]&#45;&gt;shapeless.IsTuple[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]]</title>
<path fill="none" stroke="#000000" d="M9370.6732,-14416.6777C9489.7729,-14421.5234 9633.9278,-14427.3886 9755.7591,-14432.3455"/>
<polygon fill="#000000" stroke="#000000" points="9755.846,-14435.8518 9765.98,-14432.7614 9756.1306,-14428.8576 9755.846,-14435.8518"/>
</g>
<!-- cats.kernel.Eq[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]]&#45;&gt;cats.PartialOrder[io.circe.KeyDecoder[Either[Unit,Int]]] -->
<g id="edge330" class="edge">
<title>cats.kernel.Eq[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]]&#45;&gt;cats.PartialOrder[io.circe.KeyDecoder[Either[Unit,Int]]]</title>
<path fill="none" stroke="#000000" d="M9370.6732,-14397.1934C9500.9797,-14391.8917 9661.2786,-14385.3697 9789.5183,-14380.1521"/>
<polygon fill="#000000" stroke="#000000" points="9790.0158,-14383.6348 9799.8652,-14379.7311 9789.7311,-14376.6406 9790.0158,-14383.6348"/>
</g>
<!-- cats.kernel.Eq[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]]&#45;&gt;cats.Eq[io.circe.KeyDecoder[Either[Unit,Int]]] -->
<g id="edge761" class="edge">
<title>cats.kernel.Eq[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]]&#45;&gt;cats.Eq[io.circe.KeyDecoder[Either[Unit,Int]]]</title>
<path fill="none" stroke="#000000" d="M9261.8825,-14430.0918C9353.0928,-14445.6255 9477.7997,-14465.6064 9588.2431,-14478.9355 9668.1775,-14488.5827 9756.826,-14496.4983 9832.6011,-14502.426"/>
<polygon fill="#000000" stroke="#000000" points="9832.4868,-14505.9276 9842.7278,-14503.2124 9833.0288,-14498.9486 9832.4868,-14505.9276"/>
</g>
<!-- cats.Order[io.circe.KeyDecoder[Either[Unit,Int]]] -->
<g id="node1754" class="node">
<title>cats.Order[io.circe.KeyDecoder[Either[Unit,Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-14298.9355" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="9880.0427" y="-14302.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Order[io.circe.KeyDecoder[Either[Unit,Int]]]</text>
<text text-anchor="middle" x="10016.0427" y="-14287.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]]&#45;&gt;cats.Order[io.circe.KeyDecoder[Either[Unit,Int]]] -->
<g id="edge700" class="edge">
<title>cats.kernel.Eq[cats.data.EitherT[io.circe.KeyDecoder,Unit,Int]]&#45;&gt;cats.Order[io.circe.KeyDecoder[Either[Unit,Int]]]</title>
<path fill="none" stroke="#000000" d="M9261.8825,-14383.7793C9353.0928,-14368.2456 9477.7997,-14348.2647 9588.2431,-14334.9355 9665.3642,-14325.628 9750.5967,-14317.9321 9824.5534,-14312.0783"/>
<polygon fill="#000000" stroke="#000000" points="9825.217,-14315.5371 9834.9121,-14311.2646 9824.6687,-14308.5586 9825.217,-14315.5371"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(String, io.circe.Json)],String,That] -->
<g id="node1647" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(String, io.circe.Json)],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-75824.9355" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="354.0494" y="-75828.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(String, io.circe.Json)],String,That]</text>
<text text-anchor="middle" x="572.0494" y="-75813.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.collection.immutable.Stream[Int]] -->
<g id="node1648" class="node">
<title>scala.reflect.ClassTag[scala.collection.immutable.Stream[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-1854.9355" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="4996.2166" y="-1858.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.collection.immutable.Stream[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-1843.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[scala.util.Either[Int,String]] -->
<g id="node1649" class="node">
<title>cats.kernel.Eq[scala.util.Either[Int,String]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-14698.9355" rx="176.1392" ry="26.7407"/>
<text text-anchor="start" x="10741.9287" y="-14702.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.util.Either[Int,String]]</text>
<text text-anchor="middle" x="10858.4287" y="-14687.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[scala.util.Either[Int,String]]&#45;&gt;cats.kernel.Order[String] -->
<g id="edge344" class="edge">
<title>cats.kernel.Eq[scala.util.Either[Int,String]]&#45;&gt;cats.kernel.Order[String]</title>
<path fill="none" stroke="#000000" d="M10955.4903,-14676.4506C11047.9869,-14661.318 11184.7108,-14656.4059 11265.0151,-14734.9355 11288.0347,-14757.4464 11249.5604,-14784.8784 11273.0151,-14806.9355 11335.4765,-14865.6752 11983.4265,-14784.0137 12043.7615,-14844.9355 12059.5675,-14860.8953 12036.4647,-15030.487 12051.7615,-15046.9355 12119.7292,-15120.021 12241.1419,-15118.9308 12324.9767,-15107.1284"/>
<polygon fill="#000000" stroke="#000000" points="12325.6299,-15110.5699 12335.008,-15105.6403 12324.6026,-15103.6457 12325.6299,-15110.5699"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[Int,String]]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge793" class="edge">
<title>cats.kernel.Eq[scala.util.Either[Int,String]]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10950.3015,-14675.9376C11044.2044,-14658.5578 11187.0023,-14650.2333 11265.0151,-14734.9355 11277.2849,-14748.2575 11261.4361,-16025.0089 11273.0151,-16038.9355 11341.7945,-16121.6606 11472.3574,-16130.4849 11562.3102,-16125.1027"/>
<polygon fill="#000000" stroke="#000000" points="11562.7792,-16128.5793 11572.5236,-16124.4205 11562.3126,-16121.5948 11562.7792,-16128.5793"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[Int,String]]&#45;&gt;shapeless.IsTuple[scala.util.Either[Int,String]] -->
<g id="edge1070" class="edge">
<title>cats.kernel.Eq[scala.util.Either[Int,String]]&#45;&gt;shapeless.IsTuple[scala.util.Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M11034.9735,-14698.9355C11160.1986,-14698.9355 11328.4448,-14698.9355 11458.5919,-14698.9355"/>
<polygon fill="#000000" stroke="#000000" points="11458.6848,-14702.4356 11468.6847,-14698.9355 11458.6847,-14695.4356 11458.6848,-14702.4356"/>
</g>
<!-- io.circe.Decoder.Result[List[Int]] =&gt; ?{def ===: ?} -->
<g id="node1650" class="node">
<title>io.circe.Decoder.Result[List[Int]] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-75896.9355" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="429.0494" y="-75900.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[List[Int]] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-75885.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String =&gt; ?{def toFloat: ?} -->
<g id="node1651" class="node">
<title>String =&gt; ?{def toFloat: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-75968.9355" rx="117.2596" ry="26.7407"/>
<text text-anchor="start" x="497.0494" y="-75972.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def toFloat: ?}</text>
<text text-anchor="middle" x="572.0494" y="-75957.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;withNull&#39;) =&gt; ?{def should: ?} -->
<g id="node1653" class="node">
<title>String(&#39;withNull&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-24974.9355" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="467.5494" y="-24978.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;withNull&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-24963.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;withNull&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge662" class="edge">
<title>String(&#39;withNull&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M718.9334,-24964.5144C867.3564,-24957.3351 1083.2171,-24957.1674 1144.0988,-25010.9355 1649.6511,-25457.4182 1738.674,-27848.8095 1748.5702,-28177.4803"/>
<polygon fill="#000000" stroke="#000000" points="1745.0834,-28177.983 1748.8773,-28187.8753 1752.0804,-28177.7763 1745.0834,-28177.983"/>
</g>
<!-- scala.reflect.ClassTag[io.circe.tests.examples.WrappedOptionalField] -->
<g id="node1655" class="node">
<title>scala.reflect.ClassTag[io.circe.tests.examples.WrappedOptionalField]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-76040.9355" rx="281.357" ry="26.7407"/>
<text text-anchor="start" x="1558.604" y="-76044.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[io.circe.tests.examples.WrappedOptionalField]</text>
<text text-anchor="middle" x="1749.604" y="-76029.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalatest.enablers.TableAsserting[org.scalatest.compatible.Assertion] -->
<g id="node1656" class="node">
<title>org.scalatest.enablers.TableAsserting[org.scalatest.compatible.Assertion]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-76112.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="372.0494" y="-76116.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalatest.enablers.TableAsserting[org.scalatest.compatible.Assertion]</text>
<text text-anchor="middle" x="572.0494" y="-76101.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalatest.enablers.CheckerAsserting[org.scalatest.Assertion] -->
<g id="node1658" class="node">
<title>org.scalatest.enablers.CheckerAsserting[org.scalatest.Assertion]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-76184.9355" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="397.5494" y="-76188.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalatest.enablers.CheckerAsserting[org.scalatest.Assertion]</text>
<text text-anchor="middle" x="572.0494" y="-76173.7355" font-family="Times,serif" font-size="14.00" fill="#000000">129 times = 56ms</text>
</g>
<!-- String(&#39;Eq[JsonNumber]&#39;) =&gt; ?{def should: ?} -->
<g id="node1659" class="node">
<title>String(&#39;Eq[JsonNumber]&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-24902.9355" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="445.0494" y="-24906.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Eq[JsonNumber]&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-24891.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;Eq[JsonNumber]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1498" class="edge">
<title>String(&#39;Eq[JsonNumber]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M744.4638,-24891.3297C891.0848,-24885.3931 1086.7221,-24888.0576 1144.0988,-24938.9355 1660.23,-25396.6078 1740.2275,-27845.6313 1748.7406,-28177.6629"/>
<polygon fill="#000000" stroke="#000000" points="1745.2432,-28177.8161 1748.9931,-28187.7251 1752.241,-28177.6405 1745.2432,-28177.8161"/>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc20] -->
<g id="node1660" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc20]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-69380.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="448.5494" y="-69384.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc20]</text>
<text text-anchor="middle" x="572.0494" y="-69369.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc20]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc20] -->
<g id="edge980" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc20]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc20]</title>
<path fill="none" stroke="#000000" d="M758.3114,-69380.9355C971.0895,-69380.9355 1318.412,-69380.9355 1540.352,-69380.9355"/>
<polygon fill="#000000" stroke="#000000" points="1540.4954,-69384.4356 1550.4954,-69380.9355 1540.4954,-69377.4356 1540.4954,-69384.4356"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam -->
<g id="node1661" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-76256.9355" rx="307.6829" ry="26.7407"/>
<text text-anchor="start" x="362.5494" y="-76260.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-76245.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- io.circe.Decoder[java.util.UUID] -->
<g id="node1662" class="node">
<title>io.circe.Decoder[java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-76328.9355" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="481.5494" y="-76332.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[java.util.UUID]</text>
<text text-anchor="middle" x="572.0494" y="-76317.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc1] -->
<g id="node1664" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc1]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-42236.9355" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="430.5494" y="-42240.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc1]</text>
<text text-anchor="middle" x="572.0494" y="-42225.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc1]&#45;&gt;Integral[ProductCodecSuite.this.Cc1] -->
<g id="edge1542" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc1]&#45;&gt;Integral[ProductCodecSuite.this.Cc1]</title>
<path fill="none" stroke="#000000" d="M771.1393,-42246.0654C1001.285,-42256.6193 1375.6119,-42273.7851 1588.3543,-42283.541"/>
<polygon fill="#000000" stroke="#000000" points="1588.2117,-42287.038 1598.3615,-42283.9999 1588.5324,-42280.0454 1588.2117,-42287.038"/>
</g>
<!-- Fractional[ProductCodecSuite.this.Cc1] -->
<g id="node1724" class="node">
<title>Fractional[ProductCodecSuite.this.Cc1]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-42218.9355" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="1641.104" y="-42222.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[ProductCodecSuite.this.Cc1]</text>
<text text-anchor="middle" x="1749.604" y="-42207.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc1]&#45;&gt;Fractional[ProductCodecSuite.this.Cc1] -->
<g id="edge840" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc1]&#45;&gt;Fractional[ProductCodecSuite.this.Cc1]</title>
<path fill="none" stroke="#000000" d="M782.233,-42233.7227C1008.3588,-42230.2662 1363.8554,-42224.8321 1575.1071,-42221.6029"/>
<polygon fill="#000000" stroke="#000000" points="1575.4236,-42225.0986 1585.3689,-42221.446 1575.3166,-42218.0994 1575.4236,-42225.0986"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L] -->
<g id="node1665" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-76400.9355" rx="436.0699" ry="26.7407"/>
<text text-anchor="start" x="271.5494" y="-76404.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor12[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L]</text>
<text text-anchor="middle" x="572.0494" y="-76389.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[java.util.UUID] -->
<g id="node1667" class="node">
<title>cats.kernel.Eq[java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-51092.9355" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="487.5494" y="-51096.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[java.util.UUID]</text>
<text text-anchor="middle" x="572.0494" y="-51081.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- cats.kernel.Eq[java.util.UUID]&#45;&gt;shapeless.IsTuple[java.util.UUID] -->
<g id="edge1098" class="edge">
<title>cats.kernel.Eq[java.util.UUID]&#45;&gt;shapeless.IsTuple[java.util.UUID]</title>
<path fill="none" stroke="#000000" d="M703.1344,-51092.9355C922.2848,-51092.9355 1361.9692,-51092.9355 1595.5468,-51092.9355"/>
<polygon fill="#000000" stroke="#000000" points="1595.826,-51096.4356 1605.8259,-51092.9355 1595.8259,-51089.4356 1595.826,-51096.4356"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]] -->
<g id="node1668" class="node">
<title>cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]</title>
<ellipse fill="none" stroke="#000000" cx="18607.2235" cy="-14580.9355" rx="347.7931" ry="26.7407"/>
<text text-anchor="start" x="18369.2235" y="-14584.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]</text>
<text text-anchor="middle" x="18607.2235" y="-14569.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 25ms</text>
</g>
<!-- cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.Order[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="edge40" class="edge">
<title>cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.Order[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<path fill="none" stroke="#000000" d="M18820.8022,-14559.6588C18869.6594,-14554.8062 18921.3678,-14549.6818 18969.484,-14544.9355 19021.805,-14539.7745 19078.3167,-14534.2278 19130.9716,-14529.0715"/>
<polygon fill="#000000" stroke="#000000" points="19131.4908,-14532.5375 19141.1021,-14528.0796 19130.8086,-14525.5708 19131.4908,-14532.5375"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="edge475" class="edge">
<title>cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.Eq[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<path fill="none" stroke="#000000" d="M18680.4198,-14607.2883C18752.864,-14632.286 18867.4084,-14668.9159 18969.484,-14688.9355 19012.64,-14697.3995 19059.0548,-14703.9121 19103.8873,-14708.9113"/>
<polygon fill="#000000" stroke="#000000" points="19103.709,-14712.4126 19114.0301,-14710.0199 19104.4696,-14705.4541 19103.709,-14712.4126"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge452" class="edge">
<title>cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M18824.5471,-14602.0122C18877.4731,-14617.9701 18928.3311,-14644.6797 18961.484,-14688.9355 18973.609,-14705.1211 18955.428,-15402.3954 18969.484,-15416.9355 19026.3327,-15475.7422 19637.9535,-15402.9091 19704.8751,-15449.9355 19936.0186,-15612.3624 19982.9726,-15994.6153 19992.155,-16115.5589"/>
<polygon fill="#000000" stroke="#000000" points="19988.6817,-16116.0578 19992.8872,-16125.7822 19995.6638,-16115.5577 19988.6817,-16116.0578"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.PartialOrder[cats.data.NonEmptyList[io.circe.DecodingFailure]] -->
<g id="edge1192" class="edge">
<title>cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]&#45;&gt;cats.kernel.PartialOrder[cats.data.NonEmptyList[io.circe.DecodingFailure]]</title>
<path fill="none" stroke="#000000" d="M18955.3658,-14580.9355C18977.6463,-14580.9355 19000.0107,-14580.9355 19022.1258,-14580.9355"/>
<polygon fill="#000000" stroke="#000000" points="19022.2681,-14584.4356 19032.268,-14580.9355 19022.268,-14577.4356 19022.2681,-14584.4356"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B] -->
<g id="node1669" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-76472.9355" rx="283.5996" ry="26.7407"/>
<text text-anchor="start" x="379.5494" y="-76476.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B]</text>
<text text-anchor="middle" x="572.0494" y="-76461.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node1670" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="13803.7086" cy="-17997.9355" rx="321.9673" ry="26.7407"/>
<text text-anchor="start" x="13584.2086" y="-18001.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="13803.7086" y="-17986.7355" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 753ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1069" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M13847.5265,-17971.1688C13960.2752,-17902.2945 14260.0722,-17719.1591 14381.6481,-17644.8926"/>
<polygon fill="#000000" stroke="#000000" points="14383.7256,-17647.7249 14390.4348,-17639.5251 14380.0765,-17641.7513 14383.7256,-17647.7249"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge79" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M14114.0933,-17990.8215C14360.2405,-17985.7902 14713.0066,-17979.9355 15021.7901,-17979.9355 15021.7901,-17979.9355 15021.7901,-17979.9355 18607.2235,-17979.9355 19100.0968,-17979.9355 19376.3177,-18189.3238 19704.8751,-17821.9355 19714.2864,-17811.4119 19711.2704,-17581.9622 19712.8751,-17567.9355 19776.3195,-17013.36 19942.578,-16352.0083 19984.5639,-16190.0597"/>
<polygon fill="#000000" stroke="#000000" points="19988.0189,-16190.68 19987.1474,-16180.1211 19981.2441,-16188.919 19988.0189,-16190.68"/>
</g>
<!-- cats.data.NonEmptyList[io.circe.Json] =&gt; ?{def asJson: ?} -->
<g id="node1673" class="node">
<title>cats.data.NonEmptyList[io.circe.Json] =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-76544.9355" rx="239.9186" ry="26.7407"/>
<text text-anchor="start" x="410.5494" y="-76548.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.data.NonEmptyList[io.circe.Json] =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-76533.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[Option[BigInt]]&#45;&gt;cats.kernel.Order[BigInt] -->
<g id="edge1076" class="edge">
<title>cats.Eq[Option[BigInt]]&#45;&gt;cats.kernel.Order[BigInt]</title>
<path fill="none" stroke="#000000" d="M1852.9286,-38510.9355C2071.5486,-38510.9355 2579.8563,-38510.9355 2811.9616,-38510.9355"/>
<polygon fill="#000000" stroke="#000000" points="2812.1282,-38514.4356 2822.1282,-38510.9355 2812.1281,-38507.4356 2812.1282,-38514.4356"/>
</g>
<!-- cats.Eq[io.circe.Decoder.Result[(Int, String, Char)]]&#45;&gt;cats.kernel.Eq[(Int, String, Char)] -->
<g id="edge1019" class="edge">
<title>cats.Eq[io.circe.Decoder.Result[(Int, String, Char)]]&#45;&gt;cats.kernel.Eq[(Int, String, Char)]</title>
<path fill="none" stroke="#000000" d="M10111.2443,-14202.8866C10209.569,-14184.3864 10360.1073,-14174.9123 10443.8423,-14262.9355 10461.8494,-14281.8649 10433.8764,-14478.967 10451.8423,-14497.9355 10529.773,-14580.2156 10669.0069,-14573.7441 10762.5397,-14557.2974"/>
<polygon fill="#000000" stroke="#000000" points="10763.3686,-14560.704 10772.5767,-14555.4636 10762.1105,-14553.8179 10763.3686,-14560.704"/>
</g>
<!-- cats.Eq[io.circe.Decoder.Result[(Int, String, Char)]]&#45;&gt;shapeless.IsTuple[io.circe.Decoder.Result[(Int, String, Char)]] -->
<g id="edge370" class="edge">
<title>cats.Eq[io.circe.Decoder.Result[(Int, String, Char)]]&#45;&gt;shapeless.IsTuple[io.circe.Decoder.Result[(Int, String, Char)]]</title>
<path fill="none" stroke="#000000" d="M10110.6375,-14202.7774C10209.192,-14183.9293 10360.6076,-14173.9281 10443.8423,-14262.9355 10461.7552,-14282.0909 10433.9711,-14715.7412 10451.8423,-14734.9355 10524.8741,-14813.3745 10653.5211,-14811.6981 10746.5813,-14797.1904"/>
<polygon fill="#000000" stroke="#000000" points="10747.3008,-14800.6195 10756.6077,-14795.5567 10746.175,-14793.7106 10747.3008,-14800.6195"/>
</g>
<!-- cats.Eq[io.circe.Decoder.Result[(Int, String, Char)]]&#45;&gt;cats.kernel.Order[io.circe.DecodingFailure] -->
<g id="edge382" class="edge">
<title>cats.Eq[io.circe.Decoder.Result[(Int, String, Char)]]&#45;&gt;cats.kernel.Order[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M10221.2117,-14234.1883C10470.0312,-14242.5905 10902.2047,-14255.9214 11273.0151,-14260.9355 11942.7611,-14269.9919 12110.3292,-14269.522 12780.0814,-14260.9355 12833.4702,-14260.2511 12891.4163,-14258.9811 12944.5486,-14257.6066"/>
<polygon fill="#000000" stroke="#000000" points="12944.854,-14261.0999 12954.7591,-14257.3396 12944.671,-14254.1023 12944.854,-14261.0999"/>
</g>
<!-- cats.Eq[io.circe.Decoder.Result[(Int, String, Char)]]&#45;&gt;cats.kernel.Eq[io.circe.DecodingFailure] -->
<g id="edge584" class="edge">
<title>cats.Eq[io.circe.Decoder.Result[(Int, String, Char)]]&#45;&gt;cats.kernel.Eq[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M10030.0987,-14200.0359C10076.7779,-14113.6635 10236.0071,-13841.8481 10451.8423,-13718.9355 10773.8272,-13535.5735 10903.8753,-13607.0565 11273.0151,-13574.9355 11358.3312,-13567.5117 11976.6283,-13521.7651 12043.7615,-13574.9355 12055.9307,-13584.5738 12041.3726,-13597.4004 12051.7615,-13608.9355 12281.1835,-13863.6701 12458.2115,-13744.936 12780.0814,-13862.9355 12876.6697,-13898.3454 12987.3292,-13941.3166 13058.1352,-13969.1219"/>
<polygon fill="#000000" stroke="#000000" points="13057.2689,-13972.5419 13067.8561,-13972.9423 13059.8293,-13966.027 13057.2689,-13972.5419"/>
</g>
<!-- cats.Eq[io.circe.Decoder.Result[(Int, String, Char)]]&#45;&gt;cats.kernel.PartialOrder[io.circe.DecodingFailure] -->
<g id="edge770" class="edge">
<title>cats.Eq[io.circe.Decoder.Result[(Int, String, Char)]]&#45;&gt;cats.kernel.PartialOrder[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M10047.7562,-14200.2727C10116.1489,-14144.7287 10284.8721,-14018.0426 10451.8423,-13972.9355 10514.2774,-13956.0687 12733.2628,-13928.3189 12780.0814,-13972.9355 12793.4493,-13985.6747 12775.4946,-14125.4241 12788.0814,-14138.9355 12839.512,-14194.1444 12923.2397,-14204.9854 12995.0888,-14201.7362"/>
<polygon fill="#000000" stroke="#000000" points="12995.3492,-14205.2273 13005.1436,-14201.1873 12994.9676,-14198.2377 12995.3492,-14205.2273"/>
</g>
<!-- shapeless.IsTuple[io.circe.KeyEncoder[Int]] -->
<g id="node1676" class="node">
<title>shapeless.IsTuple[io.circe.KeyEncoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-198.9355" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="5047.2166" y="-202.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[io.circe.KeyEncoder[Int]]</text>
<text text-anchor="middle" x="5167.7166" y="-187.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[MemoizedPiecesSuite.this.Depths] -->
<g id="node1677" class="node">
<title>org.scalacheck.Shrink[MemoizedPiecesSuite.this.Depths]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-74492.9355" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="414.0494" y="-74496.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[MemoizedPiecesSuite.this.Depths]</text>
<text text-anchor="middle" x="572.0494" y="-74481.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- org.scalacheck.Shrink[MemoizedPiecesSuite.this.Depths]&#45;&gt;Fractional[MemoizedPiecesSuite.this.Depths] -->
<g id="edge645" class="edge">
<title>org.scalacheck.Shrink[MemoizedPiecesSuite.this.Depths]&#45;&gt;Fractional[MemoizedPiecesSuite.this.Depths]</title>
<path fill="none" stroke="#000000" d="M799.0938,-74499.8767C1018.3895,-74506.581 1346.9945,-74516.627 1554.7341,-74522.978"/>
<polygon fill="#000000" stroke="#000000" points="1554.7401,-74526.4797 1564.8424,-74523.287 1554.954,-74519.483 1554.7401,-74526.4797"/>
</g>
<!-- org.scalacheck.Shrink[MemoizedPiecesSuite.this.Depths]&#45;&gt;Integral[MemoizedPiecesSuite.this.Depths] -->
<g id="edge968" class="edge">
<title>org.scalacheck.Shrink[MemoizedPiecesSuite.this.Depths]&#45;&gt;Integral[MemoizedPiecesSuite.this.Depths]</title>
<path fill="none" stroke="#000000" d="M799.0938,-74485.9944C1021.5129,-74479.1946 1356.3773,-74468.9572 1563.5363,-74462.624"/>
<polygon fill="#000000" stroke="#000000" points="1563.7222,-74466.12 1573.6105,-74462.316 1563.5082,-74459.1233 1563.7222,-74466.12"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc10] -->
<g id="node1678" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc10]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-64556.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-64560.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc10]</text>
<text text-anchor="middle" x="572.0494" y="-64545.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc10]&#45;&gt;Fractional[ProductCodecSuite.this.Cc10] -->
<g id="edge567" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc10]&#45;&gt;Fractional[ProductCodecSuite.this.Cc10]</title>
<path fill="none" stroke="#000000" d="M781.5546,-64563.3405C1006.7591,-64570.2254 1360.8493,-64581.0506 1572.6085,-64587.5245"/>
<polygon fill="#000000" stroke="#000000" points="1572.7945,-64591.0317 1582.8968,-64587.839 1573.0085,-64584.035 1572.7945,-64591.0317"/>
</g>
<!-- Integral[ProductCodecSuite.this.Cc10] -->
<g id="node1937" class="node">
<title>Integral[ProductCodecSuite.this.Cc10]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-64520.9355" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="1644.104" y="-64524.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[ProductCodecSuite.this.Cc10]</text>
<text text-anchor="middle" x="1749.604" y="-64509.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc10]&#45;&gt;Integral[ProductCodecSuite.this.Cc10] -->
<g id="edge1190" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc10]&#45;&gt;Integral[ProductCodecSuite.this.Cc10]</title>
<path fill="none" stroke="#000000" d="M781.5546,-64550.5306C1009.8486,-64543.5512 1370.5887,-64532.5227 1581.2424,-64526.0827"/>
<polygon fill="#000000" stroke="#000000" points="1581.5818,-64529.574 1591.4702,-64525.77 1581.3678,-64522.5773 1581.5818,-64529.574"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P] -->
<g id="node1681" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-76616.9355" rx="456.1678" ry="26.7407"/>
<text text-anchor="start" x="257.5494" y="-76620.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P]</text>
<text text-anchor="middle" x="572.0494" y="-76605.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(1) =&gt; ?{def asJson: ?} -->
<g id="node1682" class="node">
<title>Int(1) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-76688.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="499.5494" y="-76692.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Int(1) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-76677.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 3ms</text>
</g>
<!-- String(&#39;Decoder[Byte]&#39;) =&gt; ?{def should: ?} -->
<g id="node1683" class="node">
<title>String(&#39;Decoder[Byte]&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-24830.9355" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="451.5494" y="-24834.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Decoder[Byte]&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-24819.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;Decoder[Byte]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge341" class="edge">
<title>String(&#39;Decoder[Byte]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M737.0607,-24819.5897C884.4579,-24813.2294 1085.8445,-24815.0789 1144.0988,-24866.9355 1670.8485,-25335.8362 1741.7493,-27842.7989 1748.9037,-28177.9014"/>
<polygon fill="#000000" stroke="#000000" points="1745.4074,-28178.1192 1749.1147,-28188.0442 1752.4058,-28177.9736 1745.4074,-28178.1192"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R] -->
<g id="node1684" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-76760.9355" rx="482.9079" ry="26.7407"/>
<text text-anchor="start" x="238.5494" y="-76764.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R]</text>
<text text-anchor="middle" x="572.0494" y="-76749.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Decoder[Short]&#39;) =&gt; ?{def should: ?} -->
<g id="node1685" class="node">
<title>String(&#39;Decoder[Short]&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-24758.9355" rx="184.6098" ry="26.7407"/>
<text text-anchor="start" x="449.5494" y="-24762.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Decoder[Short]&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-24747.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Decoder[Short]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge861" class="edge">
<title>String(&#39;Decoder[Short]&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M739.2238,-24747.4501C886.4562,-24741.1648 1086.2186,-24743.2202 1144.0988,-24794.9355 1681.348,-25274.9619 1743.2012,-27838.8042 1749.0541,-28177.8955"/>
<polygon fill="#000000" stroke="#000000" points="1745.5551,-28177.9917 1749.222,-28187.9318 1752.5542,-28177.8746 1745.5551,-28177.9917"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge523" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M3299.0582,-18825.1727C3369.7979,-18813.844 3442.2036,-18796.9551 3507.6933,-18771.9355 3730.6596,-18686.7537 3950.9946,-18496.3868 4035.084,-18418.8138"/>
<polygon fill="#000000" stroke="#000000" points="4037.6035,-18421.2507 4042.557,-18411.8851 4032.8442,-18416.1175 4037.6035,-18421.2507"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge869" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M3256.2035,-18868.1527C3691.2139,-18895.9465 4487.1948,-18939.9355 5167.7166,-18939.9355 5167.7166,-18939.9355 5167.7166,-18939.9355 10016.0427,-18939.9355 10154.8334,-18939.9355 11149.978,-18881.2867 11265.0151,-18958.9355 11272.6094,-18964.0616 11265.4582,-18972.7544 11273.0151,-18977.9355 11377.7982,-19049.7765 12288.8757,-19011.9355 12415.9214,-19011.9355 12415.9214,-19011.9355 12415.9214,-19011.9355 18607.2235,-19011.9355 18851.6703,-19011.9355 19537.2583,-19117.8648 19704.8751,-18939.9355 19711.4084,-18933.0003 19711.9136,-17577.4149 19712.8751,-17567.9355 19769.2007,-17012.5918 19940.7347,-16351.8094 19984.206,-16190.0211"/>
<polygon fill="#000000" stroke="#000000" points="19987.659,-16190.6587 19986.8816,-16180.0924 19980.9001,-16188.8373 19987.659,-16190.6587"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Int)]&#45;&gt;scala.reflect.ClassTag[(String, Int)] -->
<g id="edge828" class="edge">
<title>org.scalacheck.Arbitrary[(String, Int)]&#45;&gt;scala.reflect.ClassTag[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M4226.4818,-5612.0457C4435.1812,-5618.8949 4803.4628,-5630.9813 5012.1097,-5637.8288"/>
<polygon fill="#000000" stroke="#000000" points="5012.1215,-5641.331 5022.231,-5638.1609 5012.3512,-5634.3347 5012.1215,-5641.331"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Int)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge829" class="edge">
<title>org.scalacheck.Arbitrary[(String, Int)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M4213.3085,-5595.1767C4359.0837,-5586.6719 4571.642,-5585.2114 4625.8509,-5642.9355 4645.0948,-5663.4273 4614.6717,-9670.3833 4633.8509,-9690.9355 4685.8033,-9746.6068 4890.0603,-9746.5694 5030.3076,-9739.3365"/>
<polygon fill="#000000" stroke="#000000" points="5030.9139,-9742.8092 5040.713,-9738.7808 5030.5405,-9735.8192 5030.9139,-9742.8092"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge901" class="edge">
<title>org.scalacheck.Arbitrary[(String, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4213.2988,-5618.6852C4359.0656,-5627.1822 4571.6168,-5628.636 4625.8509,-5570.9355 4639.2062,-5556.7267 4627.9696,-2781.5276 4633.8509,-2762.9355 4736.4557,-2438.583 5030.5954,-2131.7014 5132.4746,-2032.3524"/>
<polygon fill="#000000" stroke="#000000" points="5135.0169,-2034.7625 5139.756,-2025.2867 5130.142,-2029.7389 5135.0169,-2034.7625"/>
</g>
<!-- org.scalacheck.Arbitrary[String =&gt; Boolean] -->
<g id="node1688" class="node">
<title>org.scalacheck.Arbitrary[String =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-8130.9355" rx="185.0243" ry="26.7407"/>
<text text-anchor="start" x="2808.4013" y="-8134.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[String =&gt; Boolean]</text>
<text text-anchor="middle" x="2931.4013" y="-8119.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- org.scalacheck.Arbitrary[String =&gt; Boolean]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge1374" class="edge">
<title>org.scalacheck.Arbitrary[String =&gt; Boolean]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M3014.2964,-8154.9667C3139.1737,-8185.5508 3375.0206,-8220.5399 3507.6933,-8094.9355 3529.7916,-8074.0145 3493.0699,-8047.2876 3515.6933,-8026.9355 3570.7942,-7977.3668 4614.1031,-7995.4621 5013.7482,-8004.2659"/>
<polygon fill="#000000" stroke="#000000" points="5013.8618,-8007.7692 5023.9368,-8004.4915 5014.0168,-8000.7709 5013.8618,-8007.7692"/>
</g>
<!-- org.scalacheck.Arbitrary[String =&gt; Boolean]&#45;&gt;org.scalacheck.util.Buildable[(String, Boolean),String =&gt; Boolean] -->
<g id="edge1053" class="edge">
<title>org.scalacheck.Arbitrary[String =&gt; Boolean]&#45;&gt;org.scalacheck.util.Buildable[(String, Boolean),String =&gt; Boolean]</title>
<path fill="none" stroke="#000000" d="M3053.0745,-8110.6279C3185.8723,-8096.1753 3394.617,-8097.4949 3507.6933,-8221.9355 3527.3071,-8243.5206 3495.1092,-8332.2737 3515.6933,-8352.9355 3559.9912,-8397.4008 3702.4179,-8405.9919 3831.8988,-8403.6758"/>
<polygon fill="#000000" stroke="#000000" points="3832.0626,-8407.1733 3841.9903,-8403.473 3831.9219,-8400.1747 3832.0626,-8407.1733"/>
</g>
<!-- org.scalacheck.Arbitrary[String =&gt; Boolean]&#45;&gt;org.scalacheck.Cogen[String] -->
<g id="edge290" class="edge">
<title>org.scalacheck.Arbitrary[String =&gt; Boolean]&#45;&gt;org.scalacheck.Cogen[String]</title>
<path fill="none" stroke="#000000" d="M3011.8367,-8155.2146C3137.2583,-8187.5368 3378.4104,-8226.4974 3507.6933,-8094.9355 3521.5696,-8080.8147 3501.8338,-7931.0729 3515.6933,-7916.9355 3573.0068,-7858.4728 3797.9,-7861.6606 3943.2457,-7870.4795"/>
<polygon fill="#000000" stroke="#000000" points="3943.3712,-7873.9941 3953.5697,-7871.1235 3943.807,-7867.0077 3943.3712,-7873.9941"/>
</g>
<!-- org.scalacheck.Arbitrary[String =&gt; Boolean]&#45;&gt;scala.reflect.ClassTag[String =&gt; Boolean] -->
<g id="edge1010" class="edge">
<title>org.scalacheck.Arbitrary[String =&gt; Boolean]&#45;&gt;scala.reflect.ClassTag[String =&gt; Boolean]</title>
<path fill="none" stroke="#000000" d="M3102.9015,-8120.7001C3317.3163,-8107.9033 3682.2699,-8086.1222 3897.5069,-8073.2764"/>
<polygon fill="#000000" stroke="#000000" points="3897.8682,-8076.7611 3907.6419,-8072.6715 3897.4511,-8069.7736 3897.8682,-8076.7611"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Boolean)] -->
<g id="node1822" class="node">
<title>org.scalacheck.Arbitrary[(String, Boolean)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-8316.9355" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="3951.7721" y="-8320.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(String, Boolean)]</text>
<text text-anchor="middle" x="4070.7721" y="-8305.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- org.scalacheck.Arbitrary[String =&gt; Boolean]&#45;&gt;org.scalacheck.Arbitrary[(String, Boolean)] -->
<g id="edge759" class="edge">
<title>org.scalacheck.Arbitrary[String =&gt; Boolean]&#45;&gt;org.scalacheck.Arbitrary[(String, Boolean)]</title>
<path fill="none" stroke="#000000" d="M3060.4279,-8111.6053C3191.8054,-8099.8717 3392.1292,-8105.2643 3507.6933,-8221.9355 3524.7671,-8239.1729 3497.92,-8259.4203 3515.6933,-8275.9355 3569.0085,-8325.4769 3751.768,-8330.9119 3893.1779,-8326.9935"/>
<polygon fill="#000000" stroke="#000000" points="3893.393,-8330.4888 3903.2856,-8326.6957 3893.1868,-8323.4918 3893.393,-8330.4888"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G] -->
<g id="node1689" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-76832.9355" rx="321.053" ry="26.7407"/>
<text text-anchor="start" x="353.0494" y="-76836.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor7[?A,?B,?C,?D,?E,?F,?G]</text>
<text text-anchor="middle" x="572.0494" y="-76821.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[io.circe.Json] =&gt; ?{def ===: ?} -->
<g id="node1690" class="node">
<title>Option[io.circe.Json] =&gt; ?{def ===: ?}</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="11658.3883" cy="-17022.9355" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="11549.3883" y="-17026.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[io.circe.Json] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="11658.3883" y="-17011.7355" font-family="Times,serif" font-size="14.00" fill="#000000">59 times = 632ms</text>
</g>
<!-- Option[io.circe.Json] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[io.circe.Json]] -->
<g id="edge1428" class="edge">
<title>Option[io.circe.Json] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M11813.5144,-17032.3553C11951.8888,-17040.7579 12152.3055,-17052.9279 12283.3494,-17060.8853"/>
<polygon fill="#000000" stroke="#000000" points="12283.254,-17064.3859 12293.4477,-17061.4985 12283.6783,-17057.3988 12283.254,-17064.3859"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge927" class="edge">
<title>cats.kernel.Eq[Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M18749.0423,-17516.4951C18815.8646,-17509.5653 18896.7116,-17501.6767 18969.484,-17495.9355 19051.0802,-17489.4983 19642.5411,-17505.9812 19704.8751,-17452.9355 19905.665,-17282.0652 19978.4004,-16383.9639 19991.8878,-16189.9199"/>
<polygon fill="#000000" stroke="#000000" points="19995.3802,-16190.1493 19992.5725,-16179.9332 19988.3966,-16189.6704 19995.3802,-16190.1493"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: shapeless.HNil] -->
<g id="edge212" class="edge">
<title>cats.kernel.Eq[Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M18753.079,-17546.4789C18819.1497,-17553.0543 18898.2532,-17560.9092 18969.484,-17567.9355 19043.4042,-17575.2271 19125.6894,-17583.2886 19193.6451,-17589.9313"/>
<polygon fill="#000000" stroke="#000000" points="19193.7011,-17593.4534 19203.9942,-17590.9428 19194.3821,-17586.4866 19193.7011,-17593.4534"/>
</g>
<!-- shapeless.IsTuple[Int :: Int :: shapeless.HNil] -->
<g id="node1717" class="node">
<title>shapeless.IsTuple[Int :: Int :: shapeless.HNil]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-17531.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="19213.6796" y="-17535.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="19337.1796" y="-17520.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[Int :: Int :: shapeless.HNil] -->
<g id="edge549" class="edge">
<title>cats.kernel.Eq[Int :: Int :: shapeless.HNil]&#45;&gt;shapeless.IsTuple[Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M18780.6757,-17531.9355C18888.9334,-17531.9355 19028.5593,-17531.9355 19140.8697,-17531.9355"/>
<polygon fill="#000000" stroke="#000000" points="19140.9624,-17535.4356 19150.9623,-17531.9355 19140.9623,-17528.4356 19140.9624,-17535.4356"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; ObjectEncoderSuite.this.PropertyCheckConfigParam -->
<g id="node1692" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; ObjectEncoderSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-76904.9355" rx="354.0212" ry="26.7407"/>
<text text-anchor="start" x="329.5494" y="-76908.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; ObjectEncoderSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-76893.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1693" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-486.9355" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="3919.2721" y="-490.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-475.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 36ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1234" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4296.3975,-486.9355C4485.3753,-486.9355 4753.7502,-486.9355 4942.5885,-486.9355"/>
<polygon fill="#000000" stroke="#000000" points="4942.6477,-490.4356 4952.6477,-486.9355 4942.6476,-483.4356 4942.6477,-490.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge78" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4262.6517,-472.7767C4403.161,-467.1233 4577.4171,-471.5456 4625.8509,-522.9355 4639.5685,-537.4903 4620.1521,-1948.3632 4633.8509,-1962.9355 4748.6519,-2085.0568 4966.8213,-2052.9195 5085.6259,-2023.303"/>
<polygon fill="#000000" stroke="#000000" points="5086.5773,-2026.6726 5095.4055,-2020.8147 5084.8512,-2019.8887 5086.5773,-2026.6726"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int)] -->
<g id="node1694" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-6542.9355" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="3960.2721" y="-6546.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-6531.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 24ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int)] -->
<g id="edge507" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4222.0498,-6554.5703C4366.8673,-6562.0578 4571.1679,-6561.8505 4625.8509,-6506.9355 4646.5868,-6486.1118 4613.1418,-6395.7859 4633.8509,-6374.9355 4690.0922,-6318.3106 4911.3416,-6321.4801 5050.7585,-6329.6864"/>
<polygon fill="#000000" stroke="#000000" points="5050.8742,-6333.1998 5061.0676,-6330.3111 5051.2976,-6326.2126 5050.8742,-6333.1998"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge431" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4237.971,-6544.7646C4459.7745,-6547.191 4846.2291,-6551.4186 5043.7581,-6553.5795"/>
<polygon fill="#000000" stroke="#000000" points="5043.8505,-6557.0806 5053.8882,-6553.6903 5043.9272,-6550.081 5043.8505,-6557.0806"/>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Seq[?T] -->
<g id="node1695" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Seq[?T]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-76976.9355" rx="227.8769" ry="26.7407"/>
<text text-anchor="start" x="419.0494" y="-76980.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Seq[?T]</text>
<text text-anchor="middle" x="572.0494" y="-76965.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam -->
<g id="node1698" class="node">
<title>(Any =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-77048.9355" rx="297.884" ry="26.7407"/>
<text text-anchor="start" x="369.5494" y="-77052.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-77037.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[Option[io.circe.Decoder.Result[List[Boolean]]]]&#45;&gt;cats.kernel.Order[io.circe.Decoder.Result[List[Boolean]]] -->
<g id="edge1187" class="edge">
<title>cats.Eq[Option[io.circe.Decoder.Result[List[Boolean]]]]&#45;&gt;cats.kernel.Order[io.circe.Decoder.Result[List[Boolean]]]</title>
<path fill="none" stroke="#000000" d="M11887.729,-14406.9355C11977.2379,-14406.9355 12080.0058,-14406.9355 12170.9612,-14406.9355"/>
<polygon fill="#000000" stroke="#000000" points="12171.1391,-14410.4356 12181.1391,-14406.9355 12171.139,-14403.4356 12171.1391,-14410.4356"/>
</g>
<!-- cats.Eq[Option[io.circe.Decoder.Result[List[Boolean]]]]&#45;&gt;cats.kernel.PartialOrder[io.circe.Decoder.Result[List[Boolean]]] -->
<g id="edge41" class="edge">
<title>cats.Eq[Option[io.circe.Decoder.Result[List[Boolean]]]]&#45;&gt;cats.kernel.PartialOrder[io.circe.Decoder.Result[List[Boolean]]]</title>
<path fill="none" stroke="#000000" d="M11769.2864,-14430.4528C11855.902,-14441.7719 11973.0659,-14440.4038 12043.7615,-14370.9355 12066.7266,-14348.3691 12030.0399,-14322.7014 12051.7615,-14298.9355 12079.9674,-14268.0752 12117.2289,-14248.097 12157.1539,-14235.469"/>
<polygon fill="#000000" stroke="#000000" points="12158.2329,-14238.7995 12166.8042,-14232.5718 12156.2201,-14232.0951 12158.2329,-14238.7995"/>
</g>
<!-- cats.Eq[Option[io.circe.Decoder.Result[List[Boolean]]]]&#45;&gt;cats.kernel.Eq[io.circe.Decoder.Result[List[Boolean]]] -->
<g id="edge296" class="edge">
<title>cats.Eq[Option[io.circe.Decoder.Result[List[Boolean]]]]&#45;&gt;cats.kernel.Eq[io.circe.Decoder.Result[List[Boolean]]]</title>
<path fill="none" stroke="#000000" d="M11838.2853,-14390.2538C11903.063,-14384.2143 11976.6995,-14377.3114 12043.7615,-14370.9355 12105.128,-14365.1012 12172.1775,-14358.6416 12232.2494,-14352.8234"/>
<polygon fill="#000000" stroke="#000000" points="12232.5992,-14356.306 12242.215,-14351.8579 12231.9241,-14349.3387 12232.5992,-14356.306"/>
</g>
<!-- cats.kernel.Eq[scala.math.BigDecimal] -->
<g id="node1701" class="node">
<title>cats.kernel.Eq[scala.math.BigDecimal]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-43694.9355" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="464.5494" y="-43698.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.math.BigDecimal]</text>
<text text-anchor="middle" x="572.0494" y="-43683.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- cats.kernel.Eq[scala.math.BigDecimal]&#45;&gt;shapeless.IsTuple[scala.math.BigDecimal] -->
<g id="edge464" class="edge">
<title>cats.kernel.Eq[scala.math.BigDecimal]&#45;&gt;shapeless.IsTuple[scala.math.BigDecimal]</title>
<path fill="none" stroke="#000000" d="M735.4739,-43694.9355C952.3955,-43694.9355 1334.5271,-43694.9355 1562.6804,-43694.9355"/>
<polygon fill="#000000" stroke="#000000" points="1562.7527,-43698.4356 1572.7526,-43694.9355 1562.7526,-43691.4356 1562.7527,-43698.4356"/>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Map[Byte,Int]] -->
<g id="node1705" class="node">
<title>cats.kernel.Eq[scala.collection.immutable.Map[Byte,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-15528.9355" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="19179.1796" y="-15532.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[scala.collection.immutable.Map[Byte,Int]]</text>
<text text-anchor="middle" x="19337.1796" y="-15517.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge408" class="edge">
<title>cats.kernel.Eq[scala.collection.immutable.Map[Byte,Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M19519.2841,-15511.9755C19582.8009,-15514.616 19651.4775,-15527.9721 19704.8751,-15564.9355 19901.3415,-15700.9354 19970.2425,-16009.5016 19988.6585,-16115.9863"/>
<polygon fill="#000000" stroke="#000000" points="19985.2222,-16116.6574 19990.3332,-16125.9379 19992.1251,-16115.4957 19985.2222,-16116.6574"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; JsonNumberSuite.this.PropertyCheckConfigParam -->
<g id="node1706" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; JsonNumberSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-77120.9355" rx="338.9084" ry="26.7407"/>
<text text-anchor="start" x="340.5494" y="-77124.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; JsonNumberSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-77109.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc4] -->
<g id="node1708" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc4]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-64700.9355" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="452.0494" y="-64704.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc4]</text>
<text text-anchor="middle" x="572.0494" y="-64689.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc4]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc4] -->
<g id="edge732" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc4]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc4]</title>
<path fill="none" stroke="#000000" d="M753.14,-64700.9355C966.8731,-64700.9355 1321.4043,-64700.9355 1544.915,-64700.9355"/>
<polygon fill="#000000" stroke="#000000" points="1545.1268,-64704.4356 1555.1268,-64700.9355 1545.1267,-64697.4356 1545.1268,-64704.4356"/>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc16] -->
<g id="node1709" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc16]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-69812.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-69816.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc16]</text>
<text text-anchor="middle" x="572.0494" y="-69801.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc16]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc16]] -->
<g id="edge1109" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc16]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc16]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-69812.9355C944.0278,-69812.9355 1209.2209,-69812.9355 1419.4845,-69812.9355"/>
<polygon fill="#000000" stroke="#000000" points="1419.7702,-69816.4356 1429.7702,-69812.9355 1419.7702,-69809.4356 1419.7702,-69816.4356"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R] -->
<g id="node1711" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-77192.9355" rx="497.6064" ry="26.7407"/>
<text text-anchor="start" x="228.0494" y="-77196.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor18[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R]</text>
<text text-anchor="middle" x="572.0494" y="-77181.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Int]&#45;&gt;scala.reflect.ClassTag[Int] -->
<g id="edge295" class="edge">
<title>org.scalacheck.Arbitrary[Int]&#45;&gt;scala.reflect.ClassTag[Int]</title>
<path fill="none" stroke="#000000" d="M5291.5245,-1998.9355C5494.6035,-1998.9355 5896.1211,-1998.9355 6098.8947,-1998.9355"/>
<polygon fill="#000000" stroke="#000000" points="6098.9925,-2002.4356 6108.9925,-1998.9355 6098.9924,-1995.4356 6098.9925,-2002.4356"/>
</g>
<!-- cats.Eq[scala.collection.immutable.Set[io.circe.Json]] -->
<g id="node1718" class="node">
<title>cats.Eq[scala.collection.immutable.Set[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-77264.9355" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="424.5494" y="-77268.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[scala.collection.immutable.Set[io.circe.Json]]</text>
<text text-anchor="middle" x="572.0494" y="-77253.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc5] -->
<g id="node1719" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc5]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-42092.9355" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="430.5494" y="-42096.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc5]</text>
<text text-anchor="middle" x="572.0494" y="-42081.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc5]&#45;&gt;Integral[ProductCodecSuite.this.Cc5] -->
<g id="edge1297" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc5]&#45;&gt;Integral[ProductCodecSuite.this.Cc5]</title>
<path fill="none" stroke="#000000" d="M782.233,-42096.1484C1011.4498,-42099.6522 1373.5982,-42105.188 1583.6884,-42108.3994"/>
<polygon fill="#000000" stroke="#000000" points="1583.8344,-42111.9019 1593.8868,-42108.5553 1583.9415,-42104.9027 1583.8344,-42111.9019"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc5]&#45;&gt;Fractional[ProductCodecSuite.this.Cc5] -->
<g id="edge1102" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc5]&#45;&gt;Fractional[ProductCodecSuite.this.Cc5]</title>
<path fill="none" stroke="#000000" d="M771.1393,-42083.8057C998.5414,-42073.3776 1366.7073,-42056.4943 1580.6773,-42046.6821"/>
<polygon fill="#000000" stroke="#000000" points="1580.9195,-42050.1748 1590.7486,-42046.2203 1580.5988,-42043.1822 1580.9195,-42050.1748"/>
</g>
<!-- io.circe.Encoder[Map[String,Int]] -->
<g id="node1720" class="node">
<title>io.circe.Encoder[Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-19790.9355" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="479.5494" y="-19794.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Map[String,Int]]</text>
<text text-anchor="middle" x="572.0494" y="-19779.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 8ms</text>
</g>
<!-- io.circe.Encoder[Map[String,Int]]&#45;&gt;io.circe.KeyEncoder[String] -->
<g id="edge303" class="edge">
<title>io.circe.Encoder[Map[String,Int]]&#45;&gt;io.circe.KeyEncoder[String]</title>
<path fill="none" stroke="#000000" d="M712.3353,-19786.556C828.3908,-19781.8666 997.3825,-19772.5786 1144.0988,-19754.9355 1325.0722,-19733.173 1533.9212,-19692.4136 1653.0057,-19667.6678"/>
<polygon fill="#000000" stroke="#000000" points="1653.758,-19671.0863 1662.8335,-19665.6196 1652.3297,-19664.2336 1653.758,-19671.0863"/>
</g>
<!-- io.circe.Encoder[Map[String,Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge105" class="edge">
<title>io.circe.Encoder[Map[String,Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M701.365,-19779.66C851.4464,-19769.7669 1085.8557,-19765.2562 1144.0988,-19826.9355 1157.8302,-19841.4772 1138.3479,-21252.4123 1152.0988,-21266.9355 1287.7519,-21410.2084 1550.8357,-21360.7699 1677.7241,-21325.6596"/>
<polygon fill="#000000" stroke="#000000" points="1679.0511,-21328.9221 1687.7281,-21322.8427 1677.1538,-21322.1841 1679.0511,-21328.9221"/>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc18] -->
<g id="node1721" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc18]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-77336.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-77340.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc18]</text>
<text text-anchor="middle" x="572.0494" y="-77325.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc18]] -->
<g id="node1930" class="node">
<title>io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc18]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-77336.9355" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="1549.604" y="-77340.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc18]]</text>
<text text-anchor="middle" x="1749.604" y="-77325.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc18]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc18]] -->
<g id="edge1142" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc18]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc18]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-77336.9355C951.3519,-77336.9355 1231.2937,-77336.9355 1445.2652,-77336.9355"/>
<polygon fill="#000000" stroke="#000000" points="1445.4039,-77340.4356 1455.4038,-77336.9355 1445.4038,-77333.4356 1445.4039,-77340.4356"/>
</g>
<!-- cats.SemigroupK[io.circe.Decoder] -->
<g id="node1723" class="node">
<title>cats.SemigroupK[io.circe.Decoder]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-77408.9355" rx="148.4848" ry="26.7407"/>
<text text-anchor="start" x="475.0494" y="-77412.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.SemigroupK[io.circe.Decoder]</text>
<text text-anchor="middle" x="572.0494" y="-77397.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int)] -->
<g id="node1726" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-414.9355" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="3941.7721" y="-418.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-403.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 22ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int)] -->
<g id="edge248" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4264.6737,-414.9355C4464.6255,-414.9355 4774.6122,-414.9355 4974.3627,-414.9355"/>
<polygon fill="#000000" stroke="#000000" points="4974.3839,-418.4356 4984.3839,-414.9355 4974.3839,-411.4356 4974.3839,-418.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge915" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4239.9263,-401.7856C4383.7263,-394.7747 4574.7749,-396.7277 4625.8509,-450.9355 4640.2523,-466.2199 4619.4692,-1947.6327 4633.8509,-1962.9355 4748.6357,-2085.072 4966.8117,-2052.9284 5085.6217,-2023.307"/>
<polygon fill="#000000" stroke="#000000" points="5086.5737,-2026.6764 5095.4017,-2020.8183 5084.8474,-2019.8926 5086.5737,-2026.6764"/>
</g>
<!-- org.scalacheck.util.Buildable[(Short, Int),scala.collection.immutable.Map[Short,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Short, Int),scala.collection.immutable.Map[Short,Int]] -->
<g id="edge439" class="edge">
<title>org.scalacheck.util.Buildable[(Short, Int),scala.collection.immutable.Map[Short,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Short, Int),scala.collection.immutable.Map[Short,Int]]</title>
<path fill="none" stroke="#000000" d="M4411.8392,-15498.9355C4525.2011,-15498.9355 4652.4259,-15498.9355 4769.7034,-15498.9355"/>
<polygon fill="#000000" stroke="#000000" points="4769.9319,-15502.4356 4779.9319,-15498.9355 4769.9319,-15495.4356 4769.9319,-15502.4356"/>
</g>
<!-- cats.Eq[io.circe.Json]&#45;&gt;shapeless.IsTuple[io.circe.Json] -->
<g id="edge990" class="edge">
<title>cats.Eq[io.circe.Json]&#45;&gt;shapeless.IsTuple[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M13894.344,-16397.845C14000.7802,-16407.1333 14178.2832,-16422.6233 14300.4692,-16433.2861"/>
<polygon fill="#000000" stroke="#000000" points="14300.3736,-16436.7909 14310.64,-16434.1736 14300.9822,-16429.8174 14300.3736,-16436.7909"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc17] -->
<g id="node1730" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc17]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-51344.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="420.0494" y="-51348.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc17]</text>
<text text-anchor="middle" x="572.0494" y="-51333.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc17]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc17] -->
<g id="edge894" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc17]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc17]</title>
<path fill="none" stroke="#000000" d="M798.3967,-51344.9355C1007.0924,-51344.9355 1315.2165,-51344.9355 1523.754,-51344.9355"/>
<polygon fill="#000000" stroke="#000000" points="1523.9188,-51348.4356 1533.9188,-51344.9355 1523.9187,-51341.4356 1523.9188,-51348.4356"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String) -->
<g id="node1731" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-77480.9355" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="384.0494" y="-77484.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; (org.scalacheck.Gen[?A], String)</text>
<text text-anchor="middle" x="572.0494" y="-77469.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc15] -->
<g id="node1732" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc15]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-75752.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="448.5494" y="-75756.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc15]</text>
<text text-anchor="middle" x="572.0494" y="-75741.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc15]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc15] -->
<g id="edge1047" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc15]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc15]</title>
<path fill="none" stroke="#000000" d="M758.3114,-75752.9355C971.0895,-75752.9355 1318.412,-75752.9355 1540.352,-75752.9355"/>
<polygon fill="#000000" stroke="#000000" points="1540.4954,-75756.4356 1550.4954,-75752.9355 1540.4954,-75749.4356 1540.4954,-75756.4356"/>
</g>
<!-- String(&#39;HCursor&#39;) =&gt; ?{def should: ?} -->
<g id="node1734" class="node">
<title>String(&#39;HCursor&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-24686.9355" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="468.0494" y="-24690.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;HCursor&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-24675.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;HCursor&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge406" class="edge">
<title>String(&#39;HCursor&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M718.0711,-24676.3847C866.6586,-24669.005 1083.4856,-24668.585 1144.0988,-24722.9355 1691.7332,-25213.9878 1744.6005,-27833.6842 1749.1955,-28177.6602"/>
<polygon fill="#000000" stroke="#000000" points="1745.6979,-28177.8804 1749.326,-28187.8346 1752.6973,-28177.7905 1745.6979,-28177.8804"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J] -->
<g id="node1737" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-77552.9355" rx="388.4034" ry="26.7407"/>
<text text-anchor="start" x="305.5494" y="-77556.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J]</text>
<text text-anchor="middle" x="572.0494" y="-77541.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[Map[java.util.UUID,Int]] -->
<g id="node1738" class="node">
<title>io.circe.Encoder[Map[java.util.UUID,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-20294.9355" rx="176.5537" ry="26.7407"/>
<text text-anchor="start" x="455.0494" y="-20298.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Map[java.util.UUID,Int]]</text>
<text text-anchor="middle" x="572.0494" y="-20283.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.Encoder[Map[java.util.UUID,Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1254" class="edge">
<title>io.circe.Encoder[Map[java.util.UUID,Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M727.5053,-20282.081C877.2859,-20273.5297 1089.0566,-20272.8203 1144.0988,-20330.9355 1161.9783,-20349.8133 1134.194,-21248.0816 1152.0988,-21266.9355 1287.9279,-21409.9652 1550.7989,-21360.6926 1677.6603,-21325.6484"/>
<polygon fill="#000000" stroke="#000000" points="1678.6131,-21329.0163 1687.2938,-21322.9421 1676.7198,-21322.2772 1678.6131,-21329.0163"/>
</g>
<!-- io.circe.Encoder[Map[java.util.UUID,Int]]&#45;&gt;io.circe.KeyEncoder[java.util.UUID] -->
<g id="edge632" class="edge">
<title>io.circe.Encoder[Map[java.util.UUID,Int]]&#45;&gt;io.circe.KeyEncoder[java.util.UUID]</title>
<path fill="none" stroke="#000000" d="M748.9783,-20294.9355C975.1952,-20294.9355 1363.9202,-20294.9355 1584.3658,-20294.9355"/>
<polygon fill="#000000" stroke="#000000" points="1584.4097,-20298.4356 1594.4096,-20294.9355 1584.4096,-20291.4356 1584.4097,-20298.4356"/>
</g>
<!-- String(&#39;traverse&#39;) =&gt; ?{def should: ?} -->
<g id="node1740" class="node">
<title>String(&#39;traverse&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-24614.9355" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="470.0494" y="-24618.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;traverse&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-24603.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;traverse&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge169" class="edge">
<title>String(&#39;traverse&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M715.3901,-24604.4812C864.069,-24596.9381 1083.2083,-24596.1492 1144.0988,-24650.9355 1702.2715,-25153.1531 1746.0036,-27829.9969 1749.3356,-28177.7008"/>
<polygon fill="#000000" stroke="#000000" points="1745.8361,-28177.7848 1749.4266,-28187.7526 1752.8358,-28177.7213 1745.8361,-28177.7848"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O] -->
<g id="node1742" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-77624.9355" rx="429.8419" ry="26.7407"/>
<text text-anchor="start" x="276.0494" y="-77628.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor15[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O]</text>
<text text-anchor="middle" x="572.0494" y="-77613.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[F,(String, Either[Int,String]),Map[String,Either[Int,String]]] -->
<g id="node1743" class="node">
<title>scala.collection.generic.CanBuildFrom[F,(String, Either[Int,String]),Map[String,Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-10128.9355" rx="397.2881" ry="26.7407"/>
<text text-anchor="start" x="2658.4013" y="-10132.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[F,(String, Either[Int,String]),Map[String,Either[Int,String]]]</text>
<text text-anchor="middle" x="2931.4013" y="-10117.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc16] -->
<g id="node1744" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc16]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-65636.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-65640.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc16]</text>
<text text-anchor="middle" x="572.0494" y="-65625.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc16]&#45;&gt;Integral[ProductCodecSuite.this.Cc16] -->
<g id="edge154" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc16]&#45;&gt;Integral[ProductCodecSuite.this.Cc16]</title>
<path fill="none" stroke="#000000" d="M781.5546,-65643.3405C1009.8486,-65650.3199 1370.5887,-65661.3484 1581.2424,-65667.7884"/>
<polygon fill="#000000" stroke="#000000" points="1581.3678,-65671.2938 1591.4702,-65668.1011 1581.5818,-65664.2971 1581.3678,-65671.2938"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc16]&#45;&gt;Fractional[ProductCodecSuite.this.Cc16] -->
<g id="edge702" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc16]&#45;&gt;Fractional[ProductCodecSuite.this.Cc16]</title>
<path fill="none" stroke="#000000" d="M781.5546,-65630.5306C1006.7591,-65623.6457 1360.8493,-65612.8205 1572.6085,-65606.3466"/>
<polygon fill="#000000" stroke="#000000" points="1573.0085,-65609.8361 1582.8968,-65606.0321 1572.7945,-65602.8394 1573.0085,-65609.8361"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1745" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-342.9355" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="3908.2721" y="-346.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-331.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 32ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1523" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4312.1799,-342.9355C4494.7503,-342.9355 4744.2952,-342.9355 4926.756,-342.9355"/>
<polygon fill="#000000" stroke="#000000" points="4926.7583,-346.4356 4936.7583,-342.9355 4926.7582,-339.4356 4926.7583,-346.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1293" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4273.5315,-328.3553C4412.0257,-323.3704 4578.6716,-328.8514 4625.8509,-378.9355 4640.9361,-394.9496 4618.7863,-1946.9022 4633.8509,-1962.9355 4748.621,-2085.0858 4966.8031,-2052.9366 5085.6178,-2023.3106"/>
<polygon fill="#000000" stroke="#000000" points="5086.5704,-2026.6798 5095.3983,-2020.8215 5084.8439,-2019.8961 5086.5704,-2026.6798"/>
</g>
<!-- io.circe.Decoder.Result[Byte] =&gt; ?{def ===: ?} -->
<g id="node1746" class="node">
<title>io.circe.Decoder.Result[Byte] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-77696.9355" rx="199.3083" ry="26.7407"/>
<text text-anchor="start" x="439.0494" y="-77700.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder.Result[Byte] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-77685.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, String, Char)] -->
<g id="node1747" class="node">
<title>org.scalacheck.Arbitrary[(Int, String, Char)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-9582.9355" rx="182.3671" ry="26.7407"/>
<text text-anchor="start" x="3949.7721" y="-9586.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, String, Char)]</text>
<text text-anchor="middle" x="4070.7721" y="-9571.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 12ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, String, Char)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge592" class="edge">
<title>org.scalacheck.Arbitrary[(Int, String, Char)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M4239.9918,-9572.7671C4382.7362,-9568.1436 4572.1525,-9572.6064 4625.8509,-9623.9355 4647.5294,-9644.6575 4612.1448,-9670.2425 4633.8509,-9690.9355 4688.5556,-9743.0869 4889.3177,-9744.3026 5028.4179,-9738.2587"/>
<polygon fill="#000000" stroke="#000000" points="5028.91,-9741.7401 5038.7417,-9737.792 5028.5938,-9734.7472 5028.91,-9741.7401"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, String, Char)]&#45;&gt;scala.reflect.ClassTag[(Int, String, Char)] -->
<g id="edge583" class="edge">
<title>org.scalacheck.Arbitrary[(Int, String, Char)]&#45;&gt;scala.reflect.ClassTag[(Int, String, Char)]</title>
<path fill="none" stroke="#000000" d="M4237.6726,-9593.8904C4443.6932,-9607.4129 4792.0931,-9630.2808 4998.9632,-9643.8591"/>
<polygon fill="#000000" stroke="#000000" points="4998.8041,-9647.3561 5009.0119,-9644.5187 4999.2626,-9640.3711 4998.8041,-9647.3561"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, String, Char)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1281" class="edge">
<title>org.scalacheck.Arbitrary[(Int, String, Char)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4231.6417,-9595.7143C4376.3296,-9603.2351 4573.8952,-9602.3046 4625.8509,-9546.9355 4641.9694,-9529.7582 4626.7652,-2785.4001 4633.8509,-2762.9355 4736.1849,-2438.4974 5030.4986,-2131.6708 5132.4487,-2032.3442"/>
<polygon fill="#000000" stroke="#000000" points="5134.9916,-2034.7537 5139.7351,-2025.2801 5130.1191,-2029.7279 5134.9916,-2034.7537"/>
</g>
<!-- org.scalacheck.Arbitrary[Char] -->
<g id="node1829" class="node">
<title>org.scalacheck.Arbitrary[Char]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-9438.9355" rx="131.5437" ry="26.7407"/>
<text text-anchor="start" x="5082.7166" y="-9442.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Char]</text>
<text text-anchor="middle" x="5167.7166" y="-9427.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, String, Char)]&#45;&gt;org.scalacheck.Arbitrary[Char] -->
<g id="edge1416" class="edge">
<title>org.scalacheck.Arbitrary[(Int, String, Char)]&#45;&gt;org.scalacheck.Arbitrary[Char]</title>
<path fill="none" stroke="#000000" d="M4235.1423,-9594.6246C4378.4173,-9600.9363 4571.5548,-9598.7954 4625.8509,-9546.9355 4649.134,-9524.6972 4610.5964,-9497.2037 4633.8509,-9474.9355 4689.1207,-9422.01 4894.3641,-9422.296 5033.655,-9429.224"/>
<polygon fill="#000000" stroke="#000000" points="5033.8182,-9432.737 5043.985,-9429.7559 5034.1782,-9425.7462 5033.8182,-9432.737"/>
</g>
<!-- org.scalacheck.Shrink[scala.math.BigDecimal] -->
<g id="node1748" class="node">
<title>org.scalacheck.Shrink[scala.math.BigDecimal]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-54080.9355" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="443.0494" y="-54084.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[scala.math.BigDecimal]</text>
<text text-anchor="middle" x="572.0494" y="-54069.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.math.BigDecimal]&#45;&gt;Integral[scala.math.BigDecimal] -->
<g id="edge1434" class="edge">
<title>org.scalacheck.Shrink[scala.math.BigDecimal]&#45;&gt;Integral[scala.math.BigDecimal]</title>
<path fill="none" stroke="#000000" d="M761.5708,-54086.7296C995.8728,-54093.8926 1389.6623,-54105.9315 1602.4684,-54112.4373"/>
<polygon fill="#000000" stroke="#000000" points="1602.3615,-54115.9356 1612.4638,-54112.7429 1602.5755,-54108.9389 1602.3615,-54115.9356"/>
</g>
<!-- Fractional[scala.math.BigDecimal] -->
<g id="node1750" class="node">
<title>Fractional[scala.math.BigDecimal]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-54044.9355" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="1653.104" y="-54048.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[scala.math.BigDecimal]</text>
<text text-anchor="middle" x="1749.604" y="-54033.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[scala.math.BigDecimal]&#45;&gt;Fractional[scala.math.BigDecimal] -->
<g id="edge53" class="edge">
<title>org.scalacheck.Shrink[scala.math.BigDecimal]&#45;&gt;Fractional[scala.math.BigDecimal]</title>
<path fill="none" stroke="#000000" d="M761.5708,-54075.1415C992.672,-54068.0763 1378.9328,-54056.2676 1593.6464,-54049.7035"/>
<polygon fill="#000000" stroke="#000000" points="1593.8515,-54053.1989 1603.7398,-54049.3949 1593.6375,-54046.2022 1593.8515,-54053.1989"/>
</g>
<!-- cats.kernel.Eq[io.circe.tests.examples.Foo] -->
<g id="node1749" class="node">
<title>cats.kernel.Eq[io.circe.tests.examples.Foo]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-64196.9355" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="454.5494" y="-64200.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.tests.examples.Foo]</text>
<text text-anchor="middle" x="572.0494" y="-64185.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.tests.examples.Foo]&#45;&gt;shapeless.IsTuple[io.circe.tests.examples.Foo] -->
<g id="edge868" class="edge">
<title>cats.kernel.Eq[io.circe.tests.examples.Foo]&#45;&gt;shapeless.IsTuple[io.circe.tests.examples.Foo]</title>
<path fill="none" stroke="#000000" d="M749.6162,-64196.9355C963.969,-64196.9355 1323.5601,-64196.9355 1548.101,-64196.9355"/>
<polygon fill="#000000" stroke="#000000" points="1548.3574,-64200.4356 1558.3574,-64196.9355 1548.3573,-64193.4356 1548.3574,-64200.4356"/>
</g>
<!-- EncoderSuite.this.PropertyCheckConfigurable -->
<g id="node1752" class="node">
<title>EncoderSuite.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-77768.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="445.5494" y="-77772.7355" font-family="Times,serif" font-size="14.00" fill="#000000">EncoderSuite.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-77757.7355" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 1ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J] -->
<g id="node1753" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-77840.9355" rx="359.8347" ry="26.7407"/>
<text text-anchor="start" x="325.5494" y="-77844.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor10[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J]</text>
<text text-anchor="middle" x="572.0494" y="-77829.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1756" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-18588.9355" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="10701.9287" y="-18592.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="10858.4287" y="-18577.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 131ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge1409" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10950.5163,-18564.2126C11048.2603,-18532.5022 11197.7089,-18467.0783 11265.0151,-18349.9355 11280.2445,-18323.4295 11252.3878,-16171.497 11273.0151,-16148.9355 11348.6542,-16066.2037 11489.3585,-16076.0082 11578.21,-16092.8788"/>
<polygon fill="#000000" stroke="#000000" points="11577.7572,-16096.3568 11588.2452,-16094.856 11579.1104,-16089.4888 11577.7572,-16096.3568"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge1119" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M10949.8389,-18564.2216C11047.3681,-18532.4465 11196.9876,-18466.8977 11265.0151,-18349.9355 11280.742,-18322.8956 11252.9197,-17810.9079 11273.0151,-17786.9355 11336.9655,-17710.6472 11453.4621,-17697.3379 11541.6865,-17699.9673"/>
<polygon fill="#000000" stroke="#000000" points="11541.6338,-17703.4677 11551.7563,-17700.3397 11541.8925,-17696.4725 11541.6338,-17703.4677"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge1543" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M11091.1535,-18588.9355C11179.275,-18588.9355 11280.6071,-18588.9355 11373.0231,-18588.9355"/>
<polygon fill="#000000" stroke="#000000" points="11373.0887,-18592.4356 11383.0886,-18588.9355 11373.0886,-18585.4356 11373.0887,-18592.4356"/>
</g>
<!-- shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1771" class="node">
<title>shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-18660.9355" rx="246.1463" ry="26.7407"/>
<text text-anchor="start" x="11492.3883" y="-18664.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="11658.3883" y="-18649.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge701" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M11041.9556,-18605.4538C11166.2488,-18616.6408 11330.4478,-18631.4194 11458.1247,-18642.9109"/>
<polygon fill="#000000" stroke="#000000" points="11458.1423,-18646.4266 11468.4158,-18643.8372 11458.7699,-18639.4547 11458.1423,-18646.4266"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="node1780" class="node">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<ellipse fill="#ea9d8f" stroke="#000000" cx="13131.0282" cy="-18652.9355" rx="342.8936" ry="26.7407"/>
<text text-anchor="start" x="12896.5282" y="-18656.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</text>
<text text-anchor="middle" x="13131.0282" y="-18641.7355" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 769ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1185" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M10932.9468,-18614.5052C11015.0751,-18641.2273 11151.6536,-18681.3876 11273.0151,-18696.9355 11875.6105,-18774.1356 12596.8741,-18713.9757 12936.2833,-18676.7476"/>
<polygon fill="#000000" stroke="#000000" points="12936.9048,-18680.2004 12946.461,-18675.6255 12936.1376,-18673.2425 12936.9048,-18680.2004"/>
</g>
<!-- io.circe.Decoder[List[T]] -->
<g id="node1757" class="node">
<title>io.circe.Decoder[List[T]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-66068.9355" rx="108.789" ry="26.7407"/>
<text text-anchor="start" x="503.0494" y="-66072.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[List[T]]</text>
<text text-anchor="middle" x="572.0494" y="-66057.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.Decoder[List[T]]&#45;&gt;io.circe.Decoder[T] -->
<g id="edge862" class="edge">
<title>io.circe.Decoder[List[T]]&#45;&gt;io.circe.Decoder[T]</title>
<path fill="none" stroke="#000000" d="M677.8456,-66075.4043C904.7331,-66089.277 1435.1439,-66121.7083 1653.2875,-66135.0464"/>
<polygon fill="#000000" stroke="#000000" points="1653.2418,-66138.5501 1663.4368,-66135.667 1653.6691,-66131.5631 1653.2418,-66138.5501"/>
</g>
<!-- scala.collection.immutable.Map[String,Int] =&gt; ?{def asJson: ?} -->
<g id="node1758" class="node">
<title>scala.collection.immutable.Map[String,Int] =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-77912.9355" rx="259.5164" ry="26.7407"/>
<text text-anchor="start" x="396.5494" y="-77916.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[String,Int] =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-77901.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,String,Array[String]]&#45;&gt;scala.reflect.ClassTag[String] -->
<g id="edge619" class="edge">
<title>scala.collection.generic.CanBuildFrom[Nothing,String,Array[String]]&#45;&gt;scala.reflect.ClassTag[String]</title>
<path fill="none" stroke="#000000" d="M5448.5768,-10926.9355C5654.5523,-10926.9355 5925.2506,-10926.9355 6085.7749,-10926.9355"/>
<polygon fill="#000000" stroke="#000000" points="6086.1872,-10930.4356 6096.1872,-10926.9355 6086.1871,-10923.4356 6086.1872,-10930.4356"/>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.Map[String,io.circe.Json]] -->
<g id="node1761" class="node">
<title>io.circe.Encoder[scala.collection.immutable.Map[String,io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-19430.9355" rx="286.2565" ry="26.7407"/>
<text text-anchor="start" x="377.5494" y="-19434.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[scala.collection.immutable.Map[String,io.circe.Json]]</text>
<text text-anchor="middle" x="572.0494" y="-19419.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.Map[String,io.circe.Json]]&#45;&gt;io.circe.KeyEncoder[String] -->
<g id="edge417" class="edge">
<title>io.circe.Encoder[scala.collection.immutable.Map[String,io.circe.Json]]&#45;&gt;io.circe.KeyEncoder[String]</title>
<path fill="none" stroke="#000000" d="M805.9749,-19415.4319C942.5958,-19411.9728 1097.1281,-19419.6183 1144.0988,-19466.9355 1166.6776,-19489.681 1129.4895,-19588.2203 1152.0988,-19610.9355 1288.0327,-19747.507 1540.5071,-19705.1282 1669.3913,-19671.3788"/>
<polygon fill="#000000" stroke="#000000" points="1670.4475,-19674.7196 1679.2086,-19668.762 1668.6445,-19667.9558 1670.4475,-19674.7196"/>
</g>
<!-- io.circe.Encoder[scala.collection.immutable.Map[String,io.circe.Json]]&#45;&gt;io.circe.Encoder[io.circe.Json] -->
<g id="edge170" class="edge">
<title>io.circe.Encoder[scala.collection.immutable.Map[String,io.circe.Json]]&#45;&gt;io.circe.Encoder[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M836.4117,-19420.5822C933.4033,-19415.1303 1043.9415,-19406.9797 1144.0988,-19394.9355 1323.3966,-19373.3745 1530.056,-19333.1668 1649.6748,-19308.3593"/>
<polygon fill="#000000" stroke="#000000" points="1650.4765,-19311.7675 1659.5542,-19306.3044 1649.051,-19304.9142 1650.4765,-19311.7675"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; AccumulatingDecoderSpec.this.PropertyCheckConfigParam -->
<g id="node1762" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; AccumulatingDecoderSpec.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-77984.9355" rx="383.0039" ry="26.7407"/>
<text text-anchor="start" x="309.0494" y="-77988.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; AccumulatingDecoderSpec.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-77973.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc19] -->
<g id="node1763" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc19]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-61820.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-61824.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc19]</text>
<text text-anchor="middle" x="572.0494" y="-61809.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc19]&#45;&gt;Fractional[ProductCodecSuite.this.Cc19] -->
<g id="edge1031" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc19]&#45;&gt;Fractional[ProductCodecSuite.this.Cc19]</title>
<path fill="none" stroke="#000000" d="M781.5546,-61827.3405C1006.7591,-61834.2254 1360.8493,-61845.0506 1572.6085,-61851.5245"/>
<polygon fill="#000000" stroke="#000000" points="1572.7945,-61855.0317 1582.8968,-61851.839 1573.0085,-61848.035 1572.7945,-61855.0317"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc19]&#45;&gt;Integral[ProductCodecSuite.this.Cc19] -->
<g id="edge1358" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc19]&#45;&gt;Integral[ProductCodecSuite.this.Cc19]</title>
<path fill="none" stroke="#000000" d="M781.5546,-61814.5306C1009.8486,-61807.5512 1370.5887,-61796.5227 1581.2424,-61790.0827"/>
<polygon fill="#000000" stroke="#000000" points="1581.5818,-61793.574 1591.4702,-61789.77 1581.3678,-61786.5773 1581.5818,-61793.574"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P] -->
<g id="node1764" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-78056.9355" rx="492.2927" ry="26.7407"/>
<text text-anchor="start" x="232.0494" y="-78060.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor16[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P]</text>
<text text-anchor="middle" x="572.0494" y="-78045.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1766" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-20222.9355" rx="368.3053" ry="26.7407"/>
<text text-anchor="start" x="319.5494" y="-20226.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-20211.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 47ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge1330" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M940.5975,-20222.9355C1037.3103,-20222.9355 1143.2858,-20222.9355 1245.7556,-20222.9355"/>
<polygon fill="#000000" stroke="#000000" points="1245.9802,-20226.4356 1255.9802,-20222.9355 1245.9801,-20219.4356 1245.9802,-20226.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge580" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M856.7301,-20205.8676C979.3104,-20205.3398 1103.7818,-20216.3415 1144.0988,-20258.9355 1163.3474,-20279.2713 1132.823,-21246.6256 1152.0988,-21266.9355 1287.8843,-21410.0066 1550.7764,-21360.714 1677.6516,-21325.6567"/>
<polygon fill="#000000" stroke="#000000" points="1678.6058,-21329.0242 1687.2861,-21322.9494 1676.7121,-21322.2852 1678.6058,-21329.0242"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1768" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-18118.9355" rx="217.1636" ry="26.7407"/>
<text text-anchor="start" x="10712.9287" y="-18122.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="10858.4287" y="-18107.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 111ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge753" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10986.5918,-18097.1813C11081.2944,-18073.6835 11203.9553,-18025.9692 11265.0151,-17930.9355 11278.3938,-17910.1129 11256.3067,-16167.195 11273.0151,-16148.9355 11348.6896,-16066.236 11489.3832,-16076.0307 11578.2229,-16092.8906"/>
<polygon fill="#000000" stroke="#000000" points="11577.7688,-16096.3683 11588.2567,-16094.8665 11579.1214,-16089.5002 11577.7688,-16096.3683"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge1335" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M10963.8447,-18142.505C11057.3179,-18156.5263 11190.268,-18158.3498 11265.0151,-18077.9355 11287.0368,-18054.2442 11252.0717,-17811.5853 11273.0151,-17786.9355 11337.3643,-17711.1984 11453.5121,-17697.7479 11541.5301,-17700.1907"/>
<polygon fill="#000000" stroke="#000000" points="11541.4607,-17703.6903 11551.5768,-17700.5413 11541.7049,-17696.6945 11541.4607,-17703.6903"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1324" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M10969.6348,-18142.0817C11061.6619,-18154.1578 11189.1716,-18153.343 11265.0151,-18077.9355 11288.7872,-18054.3 11249.1562,-18026.4835 11273.0151,-18002.9355 11340.8712,-17935.9638 11451.8863,-17932.1692 11537.3773,-17942.0943"/>
<polygon fill="#000000" stroke="#000000" points="11537.0538,-17945.5809 11547.4078,-17943.3347 11537.913,-17938.6338 11537.0538,-17945.5809"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1063" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M11067.4772,-18111.5942C11304.3051,-18103.1798 11701.8132,-18088.7624 12043.7615,-18074.9355 12560.3972,-18054.0452 13162.2225,-18027.165 13511.3999,-18011.3172"/>
<polygon fill="#000000" stroke="#000000" points="13511.5685,-18014.8132 13521.3995,-18010.8632 13511.251,-18007.8204 13511.5685,-18014.8132"/>
</g>
<!-- shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="node1929" class="node">
<title>shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<ellipse fill="none" stroke="#000000" cx="11658.3883" cy="-18038.9355" rx="258.6023" ry="26.7407"/>
<text text-anchor="start" x="11483.3883" y="-18042.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</text>
<text text-anchor="middle" x="11658.3883" y="-18027.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge16" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M11027.5905,-18102.0185C11154.3912,-18089.3378 11328.2424,-18071.9518 11461.3249,-18058.6429"/>
<polygon fill="#000000" stroke="#000000" points="11462.0396,-18062.089 11471.6416,-18057.6112 11461.343,-18055.1237 11462.0396,-18062.089"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION) -->
<g id="node1769" class="node">
<title>(Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-78128.9355" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="406.5494" y="-78132.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-78117.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[List[Either[Int,String]]] -->
<g id="node1770" class="node">
<title>scala.reflect.ClassTag[List[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-8786.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="2804.9013" y="-8790.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[List[Either[Int,String]]]</text>
<text text-anchor="middle" x="2931.4013" y="-8775.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S] -->
<g id="node1773" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-78200.9355" rx="509.648" ry="26.7407"/>
<text text-anchor="start" x="219.5494" y="-78204.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S]</text>
<text text-anchor="middle" x="572.0494" y="-78189.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[io.circe.ACursor]&#45;&gt;shapeless.IsTuple[io.circe.ACursor] -->
<g id="edge172" class="edge">
<title>cats.Eq[io.circe.ACursor]&#45;&gt;shapeless.IsTuple[io.circe.ACursor]</title>
<path fill="none" stroke="#000000" d="M1859.9883,-40814.9355C2069.9554,-40814.9355 2527.6075,-40814.9355 2771.2681,-40814.9355"/>
<polygon fill="#000000" stroke="#000000" points="2771.276,-40818.4356 2781.276,-40814.9355 2771.2759,-40811.4356 2771.276,-40818.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Either[Int,String]]] -->
<g id="node1775" class="node">
<title>org.scalacheck.Arbitrary[List[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-8750.9355" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="1615.604" y="-8754.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[List[Either[Int,String]]]</text>
<text text-anchor="middle" x="1749.604" y="-8739.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 38ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[Either[Int,String]]]&#45;&gt;List[Either[Int,String]] =&gt; Traversable[Either[Int,String]] -->
<g id="edge1495" class="edge">
<title>org.scalacheck.Arbitrary[List[Either[Int,String]]]&#45;&gt;List[Either[Int,String]] =&gt; Traversable[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M1891.2874,-8731.815C2013.85,-8715.8196 2195.9084,-8693.3619 2355.1092,-8678.9355 2470.5649,-8668.4733 2599.311,-8660.117 2705.7794,-8654.099"/>
<polygon fill="#000000" stroke="#000000" points="2706.2243,-8657.5797 2716.0121,-8653.524 2705.8314,-8650.5907 2706.2243,-8657.5797"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Either[Int,String]]]&#45;&gt;scala.reflect.ClassTag[List[Either[Int,String]]] -->
<g id="edge1219" class="edge">
<title>org.scalacheck.Arbitrary[List[Either[Int,String]]]&#45;&gt;scala.reflect.ClassTag[List[Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M1945.4167,-8756.9004C2164.2632,-8763.5669 2516.5461,-8774.2982 2735.4493,-8780.9664"/>
<polygon fill="#000000" stroke="#000000" points="2735.345,-8784.4648 2745.447,-8781.271 2735.5582,-8777.468 2735.345,-8784.4648"/>
</g>
<!-- org.scalacheck.util.Buildable[Either[Int,String],List[Either[Int,String]]] -->
<g id="node1974" class="node">
<title>org.scalacheck.util.Buildable[Either[Int,String],List[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-8714.9355" rx="286.2565" ry="26.7407"/>
<text text-anchor="start" x="2736.9013" y="-8718.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.util.Buildable[Either[Int,String],List[Either[Int,String]]]</text>
<text text-anchor="middle" x="2931.4013" y="-8703.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[Either[Int,String]]]&#45;&gt;org.scalacheck.util.Buildable[Either[Int,String],List[Either[Int,String]]] -->
<g id="edge1148" class="edge">
<title>org.scalacheck.Arbitrary[List[Either[Int,String]]]&#45;&gt;org.scalacheck.util.Buildable[Either[Int,String],List[Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M1945.4167,-8744.9707C2137.1958,-8739.1287 2431.4453,-8730.1652 2648.61,-8723.55"/>
<polygon fill="#000000" stroke="#000000" points="2649.0034,-8727.0397 2658.8922,-8723.2367 2648.7902,-8720.0429 2649.0034,-8727.0397"/>
</g>
<!-- org.scalacheck.Arbitrary[List[Either[Int,String]]]&#45;&gt;org.scalacheck.Arbitrary[Either[Int,String]] -->
<g id="edge932" class="edge">
<title>org.scalacheck.Arbitrary[List[Either[Int,String]]]&#45;&gt;org.scalacheck.Arbitrary[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M1767.3003,-8777.9757C1852.2251,-8909.4922 2219.1374,-9498.0096 2347.1092,-10039.9355 2350.5453,-10054.4864 2345.0676,-10297.8585 2355.1092,-10308.9355 2470.0819,-10435.7631 2685.8705,-10426.9601 2818.2881,-10406.6135"/>
<polygon fill="#000000" stroke="#000000" points="2819.135,-10410.0231 2828.4644,-10405.0019 2818.04,-10403.1092 2819.135,-10410.0231"/>
</g>
<!-- org.scalacheck.util.Buildable[(String, (String, io.circe.Json, Boolean)),Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(String, (String, io.circe.Json, Boolean)),Either[String,(String, io.circe.Json, Boolean)]] -->
<g id="edge1534" class="edge">
<title>org.scalacheck.util.Buildable[(String, (String, io.circe.Json, Boolean)),Either[String,(String, io.circe.Json, Boolean)]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(String, (String, io.circe.Json, Boolean)),Either[String,(String, io.circe.Json, Boolean)]]</title>
<path fill="none" stroke="#000000" d="M3392.774,-7957.101C3445.5254,-7956.7769 3499.5633,-7956.4449 3552.9873,-7956.1167"/>
<polygon fill="#000000" stroke="#000000" points="3553.3303,-7959.6147 3563.3086,-7956.0533 3553.2872,-7952.6149 3553.3303,-7959.6147"/>
</g>
<!-- cats.kernel.Eq[io.circe.KeyDecoder[(Int, Int, Int)]] -->
<g id="node1777" class="node">
<title>cats.kernel.Eq[io.circe.KeyDecoder[(Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-16150.9355" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="9877.5427" y="-16154.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.KeyDecoder[(Int, Int, Int)]]</text>
<text text-anchor="middle" x="10016.0427" y="-16139.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 35ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.KeyDecoder[(Int, Int, Int)]]&#45;&gt;cats.kernel.Eq[(Int, Int, Int)] -->
<g id="edge669" class="edge">
<title>cats.kernel.Eq[io.circe.KeyDecoder[(Int, Int, Int)]]&#45;&gt;cats.kernel.Eq[(Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M10201.1684,-16138.8486C10361.9937,-16128.3482 10590.6401,-16113.4197 10731.5087,-16104.2222"/>
<polygon fill="#000000" stroke="#000000" points="10731.7467,-16107.7143 10741.4974,-16103.5701 10731.2906,-16100.7291 10731.7467,-16107.7143"/>
</g>
<!-- String(&#39;keys&#39;) =&gt; ?{def should: ?} -->
<g id="node1778" class="node">
<title>String(&#39;keys&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-24542.9355" rx="142.6713" ry="26.7407"/>
<text text-anchor="start" x="479.0494" y="-24546.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;keys&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-24531.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- String(&#39;keys&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge217" class="edge">
<title>String(&#39;keys&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M705.0434,-24532.9887C853.7277,-24524.9364 1081.8669,-24522.7577 1144.0988,-24578.9355 1429.2695,-24836.3641 1712.2186,-27810.064 1746.2001,-28177.7246"/>
<polygon fill="#000000" stroke="#000000" points="1742.729,-28178.2003 1747.1326,-28187.8366 1749.6995,-28177.5574 1742.729,-28178.2003"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1779" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-20150.9355" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="432.0494" y="-20154.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-20139.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 91ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge294" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M750.6609,-20136.8374C898.3025,-20129.5841 1091.868,-20131.7257 1144.0988,-20186.9355 1164.7164,-20208.7292 1131.452,-21245.1695 1152.0988,-21266.9355 1287.8845,-21410.0827 1550.9042,-21360.7049 1677.7507,-21325.6344"/>
<polygon fill="#000000" stroke="#000000" points="1679.073,-21328.8984 1687.7513,-21322.8207 1677.1771,-21322.16 1679.073,-21328.8984"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge606" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M781.5546,-20150.9355C954.3153,-20150.9355 1202.9234,-20150.9355 1404.9397,-20150.9355"/>
<polygon fill="#000000" stroke="#000000" points="1405.1306,-20154.4356 1415.1305,-20150.9355 1405.1305,-20147.4356 1405.1306,-20154.4356"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge320" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M13421.0647,-18638.5813C13685.0533,-18626.7605 14085.5776,-18611.9355 14433.9626,-18611.9355 14433.9626,-18611.9355 14433.9626,-18611.9355 18607.2235,-18611.9355 19095.8972,-18611.9355 19368.09,-18902.0228 19704.8751,-18547.9355 19714.2559,-18538.0728 19711.4858,-17581.476 19712.8751,-17567.9355 19769.8483,-17012.6579 19940.9024,-16351.8265 19984.2385,-16190.0244"/>
<polygon fill="#000000" stroke="#000000" points="19987.6917,-16190.6606 19986.9058,-16180.0949 19980.9313,-16188.8446 19987.6917,-16190.6606"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1518" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M13158.6522,-18626.0376C13265.2166,-18522.2742 13649.5326,-18148.0593 13768.4136,-18032.3029"/>
<polygon fill="#000000" stroke="#000000" points="13771.1315,-18034.5415 13775.8544,-18025.0576 13766.2481,-18029.5263 13771.1315,-18034.5415"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; MemoizedPiecesSuite.this.PropertyCheckConfigParam -->
<g id="node1781" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; MemoizedPiecesSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-78272.9355" rx="328.1951" ry="26.7407"/>
<text text-anchor="start" x="348.0494" y="-78276.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; MemoizedPiecesSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-78261.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;truncateToShort&#39;) =&gt; ?{def should: ?} -->
<g id="node1782" class="node">
<title>String(&#39;truncateToShort&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-24470.9355" rx="187.2667" ry="26.7407"/>
<text text-anchor="start" x="447.5494" y="-24474.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;truncateToShort&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-24459.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;truncateToShort&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge898" class="edge">
<title>String(&#39;truncateToShort&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M740.8009,-24459.2122C888.0068,-24452.8767 1086.7498,-24455.0016 1144.0988,-24506.9355 1434.5018,-24769.9182 1713.1358,-27805.2133 1746.3102,-28177.569"/>
<polygon fill="#000000" stroke="#000000" points="1742.8481,-28178.1525 1747.2198,-28187.8033 1749.8206,-28177.5327 1742.8481,-28178.1525"/>
</g>
<!-- scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1783" class="node">
<title>scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-270.9355" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="4990.2166" y="-274.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-259.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[Int]&#45;&gt;Integral[Int] -->
<g id="edge1203" class="edge">
<title>org.scalacheck.Shrink[Int]&#45;&gt;Integral[Int]</title>
<path fill="none" stroke="#000000" d="M5280.5685,-6558.7882C5490.5359,-6565.9562 5937.3603,-6581.2103 6130.3295,-6587.798"/>
<polygon fill="#000000" stroke="#000000" points="6130.3274,-6591.2999 6140.441,-6588.1432 6130.5663,-6584.304 6130.3274,-6591.2999"/>
</g>
<!-- org.scalacheck.Shrink[Int]&#45;&gt;Fractional[Int] -->
<g id="edge722" class="edge">
<title>org.scalacheck.Shrink[Int]&#45;&gt;Fractional[Int]</title>
<path fill="none" stroke="#000000" d="M5280.5685,-6551.0829C5491.9967,-6543.865 5943.5892,-6528.4482 6134.3201,-6521.9368"/>
<polygon fill="#000000" stroke="#000000" points="6134.705,-6525.4258 6144.5797,-6521.5866 6134.4661,-6518.4299 6134.705,-6525.4258"/>
</g>
<!-- Int(100) =&gt; org.scalactic.anyvals.PosZInt -->
<g id="node1785" class="node">
<title>Int(100) =&gt; org.scalactic.anyvals.PosZInt</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-78344.9355" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="457.5494" y="-78348.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Int(100) =&gt; org.scalactic.anyvals.PosZInt</text>
<text text-anchor="middle" x="572.0494" y="-78333.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc2] -->
<g id="node1786" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc2]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-45854.9355" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="423.5494" y="-45858.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc2]</text>
<text text-anchor="middle" x="572.0494" y="-45843.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc2]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc2] -->
<g id="edge565" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc2]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc2]</title>
<path fill="none" stroke="#000000" d="M793.5384,-45854.9355C1003.7878,-45854.9355 1318.0755,-45854.9355 1528.2728,-45854.9355"/>
<polygon fill="#000000" stroke="#000000" points="1528.5155,-45858.4356 1538.5154,-45854.9355 1528.5154,-45851.4356 1528.5155,-45858.4356"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1787" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-6398.9355" rx="231.4481" ry="26.7407"/>
<text text-anchor="start" x="3915.2721" y="-6402.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-6387.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 40ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge969" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4274.2439,-6411.7571C4411.3192,-6415.6721 4575.8854,-6409.6239 4625.8509,-6362.9355 4645.5077,-6344.5681 4614.2178,-6321.3282 4633.8509,-6302.9355 4751.0594,-6193.1326 4953.4493,-6215.221 5072.5075,-6241.136"/>
<polygon fill="#000000" stroke="#000000" points="5071.8255,-6244.5698 5082.3473,-6243.3278 5073.3475,-6237.7372 5071.8255,-6244.5698"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int] -->
<g id="edge467" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Shrink[Int]</title>
<path fill="none" stroke="#000000" d="M4271.8697,-6385.6467C4409.7803,-6381.2851 4576.4254,-6386.9799 4625.8509,-6434.9355 4639.3086,-6447.993 4620.41,-6505.8609 4633.8509,-6518.9355 4690.8147,-6574.3472 4910.0985,-6571.7721 5049.2905,-6563.9684"/>
<polygon fill="#000000" stroke="#000000" points="5049.8046,-6567.4446 5059.586,-6563.3736 5049.4008,-6560.4563 5049.8046,-6567.4446"/>
</g>
<!-- MemoizedPiecesSuite.this.PatienceConfig -->
<g id="node1789" class="node">
<title>MemoizedPiecesSuite.this.PatienceConfig</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-78416.9355" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="456.0494" y="-78420.7355" font-family="Times,serif" font-size="14.00" fill="#000000">MemoizedPiecesSuite.this.PatienceConfig</text>
<text text-anchor="middle" x="572.0494" y="-78405.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C] -->
<g id="node1790" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-78488.9355" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="400.5494" y="-78492.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor3[?A,?B,?C]</text>
<text text-anchor="middle" x="572.0494" y="-78477.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;left&#39;) =&gt; ?{def should: ?} -->
<g id="node1791" class="node">
<title>String(&#39;left&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-24398.9355" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="482.5494" y="-24402.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;left&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-24387.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;left&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1046" class="edge">
<title>String(&#39;left&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M700.8234,-24389.1578C849.4297,-24380.8538 1081.4423,-24378.0221 1144.0988,-24434.9355 1439.8904,-24703.615 1714.3206,-27803.6082 1746.4669,-28177.9995"/>
<polygon fill="#000000" stroke="#000000" points="1742.9858,-28178.3712 1747.3266,-28188.036 1749.9603,-28177.7738 1742.9858,-28178.3712"/>
</g>
<!-- scala.reflect.ClassTag[ProductCodecSuite.this.Cc21] -->
<g id="node1792" class="node">
<title>scala.reflect.ClassTag[ProductCodecSuite.this.Cc21]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-78560.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="1605.104" y="-78564.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ProductCodecSuite.this.Cc21]</text>
<text text-anchor="middle" x="1749.604" y="-78549.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.Eq[Long] -->
<g id="node1794" class="node">
<title>cats.Eq[Long]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-55124.9355" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="528.5494" y="-55128.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Long]</text>
<text text-anchor="middle" x="572.0494" y="-55113.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 14ms</text>
</g>
<!-- cats.Eq[Long]&#45;&gt;shapeless.IsTuple[Long] -->
<g id="edge547" class="edge">
<title>cats.Eq[Long]&#45;&gt;shapeless.IsTuple[Long]</title>
<path fill="none" stroke="#000000" d="M644.822,-55127.1603C842.9256,-55133.2167 1393.1072,-55150.0368 1634.064,-55157.4033"/>
<polygon fill="#000000" stroke="#000000" points="1634.1513,-55160.9075 1644.2536,-55157.7148 1634.3652,-55153.9108 1634.1513,-55160.9075"/>
</g>
<!-- io.circe.Encoder[io.circe.JsonNumber] -->
<g id="node1795" class="node">
<title>io.circe.Encoder[io.circe.JsonNumber]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-78632.9355" rx="161.441" ry="26.7407"/>
<text text-anchor="start" x="466.0494" y="-78636.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[io.circe.JsonNumber]</text>
<text text-anchor="middle" x="572.0494" y="-78621.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Map[String,Either[Int,String]]] -->
<g id="node1796" class="node">
<title>org.scalacheck.Arbitrary[Map[String,Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-10111.9355" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="417.5494" y="-10115.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Map[String,Either[Int,String]]]</text>
<text text-anchor="middle" x="572.0494" y="-10100.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 28ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Map[String,Either[Int,String]]]&#45;&gt;scala.reflect.ClassTag[Map[String,Either[Int,String]]] -->
<g id="edge1103" class="edge">
<title>org.scalacheck.Arbitrary[Map[String,Either[Int,String]]]&#45;&gt;scala.reflect.ClassTag[Map[String,Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M577.7615,-10085.059C619.0055,-9893.6777 877.4529,-8739.1046 1152.0988,-8534.9355 1294.345,-8429.1911 1512.2675,-8448.369 1641.8905,-8472.9504"/>
<polygon fill="#000000" stroke="#000000" points="1641.3551,-8476.4117 1651.8387,-8474.8805 1642.6884,-8469.5399 1641.3551,-8476.4117"/>
</g>
<!-- org.scalacheck.Arbitrary[Map[String,Either[Int,String]]]&#45;&gt;org.scalacheck.Arbitrary[(String, Either[Int,String])] -->
<g id="edge785" class="edge">
<title>org.scalacheck.Arbitrary[Map[String,Either[Int,String]]]&#45;&gt;org.scalacheck.Arbitrary[(String, Either[Int,String])]</title>
<path fill="none" stroke="#000000" d="M794.5764,-10105.1325C1005.7738,-10098.6758 1321.2653,-10089.0306 1531.1192,-10082.615"/>
<polygon fill="#000000" stroke="#000000" points="1531.4553,-10086.1065 1541.3437,-10082.3024 1531.2414,-10079.1098 1531.4553,-10086.1065"/>
</g>
<!-- org.scalacheck.Arbitrary[Map[String,Either[Int,String]]]&#45;&gt;Map[String,Either[Int,String]] =&gt; Traversable[(String, Either[Int,String])] -->
<g id="edge1431" class="edge">
<title>org.scalacheck.Arbitrary[Map[String,Either[Int,String]]]&#45;&gt;Map[String,Either[Int,String]] =&gt; Traversable[(String, Either[Int,String])]</title>
<path fill="none" stroke="#000000" d="M718.3831,-10132.7022C835.4997,-10148.6934 1004.0631,-10170.3021 1152.0988,-10183.9355 1257.255,-10193.62 1373.0731,-10201.2883 1474.5205,-10207.0153"/>
<polygon fill="#000000" stroke="#000000" points="1474.4259,-10210.5154 1484.6062,-10207.5809 1474.8179,-10203.5263 1474.4259,-10210.5154"/>
</g>
<!-- org.scalacheck.Arbitrary[Map[String,Either[Int,String]]]&#45;&gt;org.scalacheck.util.Buildable[(String, Either[Int,String]),Map[String,Either[Int,String]]] -->
<g id="edge711" class="edge">
<title>org.scalacheck.Arbitrary[Map[String,Either[Int,String]]]&#45;&gt;org.scalacheck.util.Buildable[(String, Either[Int,String]),Map[String,Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M794.5764,-10118.7386C969.2031,-10124.0773 1215.1321,-10131.5958 1413.6926,-10137.6661"/>
<polygon fill="#000000" stroke="#000000" points="1413.6054,-10141.165 1423.7077,-10137.9723 1413.8193,-10134.1683 1413.6054,-10141.165"/>
</g>
<!-- cats.FlatMap[io.circe.Decoder.Result] -->
<g id="node1797" class="node">
<title>cats.FlatMap[io.circe.Decoder.Result]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-78704.9355" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="467.5494" y="-78708.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.FlatMap[io.circe.Decoder.Result]</text>
<text text-anchor="middle" x="572.0494" y="-78693.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Map[String,Int]] -->
<g id="node1798" class="node">
<title>org.scalacheck.Arbitrary[Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-5426.9355" rx="173.8966" ry="26.7407"/>
<text text-anchor="start" x="2816.4013" y="-5430.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Map[String,Int]]</text>
<text text-anchor="middle" x="2931.4013" y="-5415.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 51ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Map[String,Int]]&#45;&gt;scala.reflect.ClassTag[Map[String,Int]] -->
<g id="edge1062" class="edge">
<title>org.scalacheck.Arbitrary[Map[String,Int]]&#45;&gt;scala.reflect.ClassTag[Map[String,Int]]</title>
<path fill="none" stroke="#000000" d="M3009.8893,-5402.8808C3121.2165,-5369.847 3331.9062,-5311.3143 3515.6933,-5282.9355 3642.9495,-5263.2858 3788.2271,-5254.339 3898.2306,-5250.2765"/>
<polygon fill="#000000" stroke="#000000" points="3898.5605,-5253.767 3908.4283,-5249.9101 3898.3091,-5246.7715 3898.5605,-5253.767"/>
</g>
<!-- org.scalacheck.Arbitrary[Map[String,Int]]&#45;&gt;Map[String,Int] =&gt; Traversable[(String, Int)] -->
<g id="edge1154" class="edge">
<title>org.scalacheck.Arbitrary[Map[String,Int]]&#45;&gt;Map[String,Int] =&gt; Traversable[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M3060.262,-5408.8832C3178.4994,-5392.8367 3358.6034,-5369.696 3515.6933,-5354.9355 3638.2988,-5343.4153 3776.4883,-5334.4396 3884.3149,-5328.3318"/>
<polygon fill="#000000" stroke="#000000" points="3884.5359,-5331.825 3894.3233,-5327.7682 3884.1423,-5324.8361 3884.5359,-5331.825"/>
</g>
<!-- org.scalacheck.Arbitrary[Map[String,Int]]&#45;&gt;org.scalacheck.util.Buildable[(String, Int),Map[String,Int]] -->
<g id="edge1367" class="edge">
<title>org.scalacheck.Arbitrary[Map[String,Int]]&#45;&gt;org.scalacheck.util.Buildable[(String, Int),Map[String,Int]]</title>
<path fill="none" stroke="#000000" d="M3060.262,-5444.9879C3178.4994,-5461.0344 3358.6034,-5484.1751 3515.6933,-5498.9355 3623.1719,-5509.0344 3742.6262,-5517.178 3843.104,-5523.1482"/>
<polygon fill="#000000" stroke="#000000" points="3843.1989,-5526.6598 3853.3879,-5523.7556 3843.6117,-5519.672 3843.1989,-5526.6598"/>
</g>
<!-- org.scalacheck.Arbitrary[Map[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[(String, Int)] -->
<g id="edge938" class="edge">
<title>org.scalacheck.Arbitrary[Map[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[(String, Int)]</title>
<path fill="none" stroke="#000000" d="M3009.8893,-5450.9902C3121.2165,-5484.0241 3331.9062,-5542.5568 3515.6933,-5570.9355 3644.6848,-5590.8532 3792.1925,-5599.7741 3902.7109,-5603.7581"/>
<polygon fill="#000000" stroke="#000000" points="3902.8353,-5607.2645 3912.9518,-5604.117 3903.0805,-5600.2688 3902.8353,-5607.2645"/>
</g>
<!-- io.circe.Decoder[Unit] -->
<g id="node1800" class="node">
<title>io.circe.Decoder[Unit]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-78776.9355" rx="98.9899" ry="26.7407"/>
<text text-anchor="start" x="510.0494" y="-78780.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Unit]</text>
<text text-anchor="middle" x="572.0494" y="-78765.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H] -->
<g id="node1801" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-78848.9355" rx="348.7073" ry="26.7407"/>
<text text-anchor="start" x="333.5494" y="-78852.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor8[?A,?B,?C,?D,?E,?F,?G,?H]</text>
<text text-anchor="middle" x="572.0494" y="-78837.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Decoder[Option[String]] -->
<g id="node1804" class="node">
<title>io.circe.Decoder[Option[String]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-10458.9355" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="3981.2721" y="-10462.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Option[String]]</text>
<text text-anchor="middle" x="4070.7721" y="-10447.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 16ms</text>
</g>
<!-- io.circe.Decoder[Option[String]]&#45;&gt;io.circe.Decoder[String] -->
<g id="edge1453" class="edge">
<title>io.circe.Decoder[Option[String]]&#45;&gt;io.circe.Decoder[String]</title>
<path fill="none" stroke="#000000" d="M4198.336,-10448.575C4343.5834,-10439.864 4568.2477,-10436.7961 4625.8509,-10494.9355 4637.1295,-10506.3191 4624.3381,-10626.04 4633.8509,-10638.9355 4731.9109,-10771.8654 4929.416,-10815.6198 5054.7645,-10829.9781"/>
<polygon fill="#000000" stroke="#000000" points="5054.4632,-10833.466 5064.7861,-10831.0812 5055.2291,-10826.5081 5054.4632,-10833.466"/>
</g>
<!-- io.circe.Decoder[Option[String]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,String,Traversable[String] with Option[String]] -->
<g id="edge470" class="edge">
<title>io.circe.Decoder[Option[String]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,String,Traversable[String] with Option[String]]</title>
<path fill="none" stroke="#000000" d="M4208.8675,-10458.9355C4350.6147,-10458.9355 4577.7752,-10458.9355 4775.4185,-10458.9355"/>
<polygon fill="#000000" stroke="#000000" points="4775.7004,-10462.4356 4785.7004,-10458.9355 4775.7003,-10455.4356 4775.7004,-10462.4356"/>
</g>
<!-- Option[Long] =&gt; ?{def ===: ?} -->
<g id="node1805" class="node">
<title>Option[Long] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-8644.9355" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="5078.7166" y="-8648.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Long] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="5167.7166" y="-8633.7355" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 45ms</text>
</g>
<!-- Option[Long] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Long]] -->
<g id="edge777" class="edge">
<title>Option[Long] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Long]]</title>
<path fill="none" stroke="#000000" d="M5303.6125,-8640.8955C5412.757,-8640.7854 5569.1255,-8647.726 5701.5822,-8680.9355 5884.3284,-8726.7537 6082.5692,-8833.9839 6172.6693,-8886.2473"/>
<polygon fill="#000000" stroke="#000000" points="6171.1627,-8889.4203 6181.5647,-8891.4328 6174.6881,-8883.3728 6171.1627,-8889.4203"/>
</g>
<!-- String(&#39;filterKeys&#39;) =&gt; ?{def should: ?} -->
<g id="node1806" class="node">
<title>String(&#39;filterKeys&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-24326.9355" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="464.5494" y="-24330.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;filterKeys&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-24315.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;filterKeys&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge24" class="edge">
<title>String(&#39;filterKeys&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M721.6598,-24316.0272C870.2749,-24308.656 1084.3759,-24308.5275 1144.0988,-24362.9355 1445.1398,-24637.1866 1715.2154,-27799.0644 1746.5715,-28177.8864"/>
<polygon fill="#000000" stroke="#000000" points="1743.0983,-28178.3566 1747.4094,-28188.0346 1750.0746,-28177.7805 1743.0983,-28178.3566"/>
</g>
<!-- JsonNumberSuite.this.PropertyCheckConfigurable -->
<g id="node1808" class="node">
<title>JsonNumberSuite.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-78920.9355" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="433.5494" y="-78924.7355" font-family="Times,serif" font-size="14.00" fill="#000000">JsonNumberSuite.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-78909.7355" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 6ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A] -->
<g id="node1809" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-78992.9355" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="373.5494" y="-78996.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor1[?A]</text>
<text text-anchor="middle" x="572.0494" y="-78981.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;fromFloatOrNull&#39;) =&gt; ?{def should: ?} -->
<g id="node1810" class="node">
<title>String(&#39;fromFloatOrNull&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-24254.9355" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="445.0494" y="-24258.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;fromFloatOrNull&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-24243.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;fromFloatOrNull&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge386" class="edge">
<title>String(&#39;fromFloatOrNull&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M743.3975,-24242.9887C890.4187,-24236.7046 1087.2995,-24239.0443 1144.0988,-24290.9355 1450.4718,-24570.8345 1716.2322,-27796.2327 1746.6966,-28178.0734"/>
<polygon fill="#000000" stroke="#000000" points="1743.208,-28178.3567 1747.4903,-28188.0475 1750.1859,-28177.8013 1743.208,-28178.3567"/>
</g>
<!-- cats.kernel.Eq[io.circe.AccumulatingDecoder[Int]] -->
<g id="node1811" class="node">
<title>cats.kernel.Eq[io.circe.AccumulatingDecoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-15020.9355" rx="207.7788" ry="26.7407"/>
<text text-anchor="start" x="19198.1796" y="-15024.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.AccumulatingDecoder[Int]]</text>
<text text-anchor="middle" x="19337.1796" y="-15009.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 17ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.AccumulatingDecoder[Int]]&#45;&gt;shapeless.IsTuple[io.circe.AccumulatingDecoder[Int]] -->
<g id="edge720" class="edge">
<title>cats.kernel.Eq[io.circe.AccumulatingDecoder[Int]]&#45;&gt;shapeless.IsTuple[io.circe.AccumulatingDecoder[Int]]</title>
<path fill="none" stroke="#000000" d="M19545.0977,-15020.9355C19614.2658,-15020.9355 19691.7176,-15020.9355 19762.5721,-15020.9355"/>
<polygon fill="#000000" stroke="#000000" points="19762.9764,-15024.4356 19772.9764,-15020.9355 19762.9763,-15017.4356 19762.9764,-15024.4356"/>
</g>
<!-- cats.kernel.Eq[io.circe.AccumulatingDecoder[Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1149" class="edge">
<title>cats.kernel.Eq[io.circe.AccumulatingDecoder[Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M19442.554,-14997.7602C19526.3738,-14986.1628 19639.9999,-14986.9762 19704.8751,-15056.9355 19718.4777,-15071.6041 19709.0239,-15397.3048 19712.8751,-15416.9355 19768.1016,-15698.4448 19921.6923,-16012.6208 19975.4386,-16117.0491"/>
<polygon fill="#000000" stroke="#000000" points="19972.4726,-16118.9332 19980.1743,-16126.2087 19978.6907,-16115.7183 19972.4726,-16118.9332"/>
</g>
<!-- cats.kernel.Order[(String, io.circe.Json)]&#45;&gt;cats.kernel.Order[String] -->
<g id="edge1037" class="edge">
<title>cats.kernel.Order[(String, io.circe.Json)]&#45;&gt;cats.kernel.Order[String]</title>
<path fill="none" stroke="#000000" d="M11752.3385,-15665.2319C11841.1497,-15680.1144 11971.2823,-15684.7468 12043.7615,-15606.9355 12057.3966,-15592.2973 12040.6203,-15263.551 12051.7615,-15246.9355 12109.5979,-15160.6804 12225.339,-15120.8874 12310.8839,-15102.7396"/>
<polygon fill="#000000" stroke="#000000" points="12311.8055,-15106.1234 12320.8976,-15100.6842 12310.398,-15099.2664 12311.8055,-15106.1234"/>
</g>
<!-- cats.kernel.Order[(String, io.circe.Json)]&#45;&gt;cats.kernel.Order[io.circe.Json] -->
<g id="edge291" class="edge">
<title>cats.kernel.Order[(String, io.circe.Json)]&#45;&gt;cats.kernel.Order[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M11751.7056,-15620.5883C11840.6913,-15605.4494 11971.533,-15600.4344 12043.7615,-15678.9355 12058.8652,-15695.3509 12036.3795,-16465.7806 12051.7615,-16481.9355 12163.5618,-16599.3539 12666.9948,-16408.7556 12780.0814,-16524.9355 12799.4664,-16544.8508 12769.1557,-16754.5834 12788.0814,-16774.9355 12847.9711,-16839.3391 12952.0577,-16841.682 13029.8953,-16831.9828"/>
<polygon fill="#000000" stroke="#000000" points="13030.7642,-16835.398 13040.2144,-16830.6081 13029.8398,-16828.4593 13030.7642,-16835.398"/>
</g>
<!-- org.scalacheck.util.Buildable[(String, Either[Int,String]),Map[String,Either[Int,String]]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(String, Either[Int,String]),Map[String,Either[Int,String]]] -->
<g id="edge958" class="edge">
<title>org.scalacheck.util.Buildable[(String, Either[Int,String]),Map[String,Either[Int,String]]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(String, Either[Int,String]),Map[String,Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M2093.0162,-10142.4144C2231.1134,-10140.1942 2391.2226,-10137.6201 2534.2889,-10135.32"/>
<polygon fill="#000000" stroke="#000000" points="2534.6172,-10138.8153 2544.5597,-10135.1549 2534.5047,-10131.8162 2534.6172,-10138.8153"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc14] -->
<g id="node1814" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc14]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-47186.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="420.0494" y="-47190.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc14]</text>
<text text-anchor="middle" x="572.0494" y="-47175.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc14]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc14] -->
<g id="edge155" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc14]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc14]</title>
<path fill="none" stroke="#000000" d="M798.3967,-47186.9355C1007.0924,-47186.9355 1315.2165,-47186.9355 1523.754,-47186.9355"/>
<polygon fill="#000000" stroke="#000000" points="1523.9188,-47190.4356 1533.9188,-47186.9355 1523.9187,-47183.4356 1523.9188,-47190.4356"/>
</g>
<!-- Option[Byte] =&gt; ?{def ===: ?} -->
<g id="node1815" class="node">
<title>Option[Byte] =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-35918.9355" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="484.5494" y="-35922.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Byte] =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="572.0494" y="-35907.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 11ms</text>
</g>
<!-- Option[Byte] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Byte]] -->
<g id="edge695" class="edge">
<title>Option[Byte] =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[Option[Byte]]</title>
<path fill="none" stroke="#000000" d="M707.1299,-35918.9355C943.5124,-35918.9355 1427.4553,-35918.9355 1642.5083,-35918.9355"/>
<polygon fill="#000000" stroke="#000000" points="1642.5437,-35922.4356 1652.5436,-35918.9355 1642.5436,-35915.4356 1642.5437,-35922.4356"/>
</g>
<!-- (String, io.circe.Json) &lt;:&lt; (T, U) -->
<g id="node1817" class="node">
<title>(String, io.circe.Json) &lt;:&lt; (T, U)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-79064.9355" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="481.5494" y="-79068.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(String, io.circe.Json) &lt;:&lt; (T, U)</text>
<text text-anchor="middle" x="572.0494" y="-79053.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.Map[Long,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.immutable.Map[Long,Int]] -->
<g id="edge837" class="edge">
<title>org.scalacheck.util.Buildable[(Long, Int),scala.collection.immutable.Map[Long,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Long, Int),scala.collection.immutable.Map[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M4384.3781,-8907.2276C4516.5698,-8911.5659 4671.2025,-8916.6407 4807.9951,-8921.1301"/>
<polygon fill="#000000" stroke="#000000" points="4808.1212,-8924.636 4818.2307,-8921.466 4808.3509,-8917.6397 4808.1212,-8924.636"/>
</g>
<!-- org.scalacheck.Shrink[List[Either[Int,String]]] -->
<g id="node1819" class="node">
<title>org.scalacheck.Shrink[List[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-8642.9355" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="1623.104" y="-8646.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[List[Either[Int,String]]]</text>
<text text-anchor="middle" x="1749.604" y="-8631.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 25ms</text>
</g>
<!-- org.scalacheck.Shrink[List[Either[Int,String]]]&#45;&gt;List[Either[Int,String]] =&gt; Traversable[Either[Int,String]] -->
<g id="edge1288" class="edge">
<title>org.scalacheck.Shrink[List[Either[Int,String]]]&#45;&gt;List[Either[Int,String]] =&gt; Traversable[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M1940.1365,-8642.9355C2143.2413,-8642.9355 2465.4899,-8642.9355 2687.1147,-8642.9355"/>
<polygon fill="#000000" stroke="#000000" points="2687.2613,-8646.4356 2697.2613,-8642.9355 2687.2612,-8639.4356 2687.2613,-8646.4356"/>
</g>
<!-- org.scalacheck.Shrink[List[Either[Int,String]]]&#45;&gt;org.scalacheck.Shrink[Either[Int,String]] -->
<g id="edge158" class="edge">
<title>org.scalacheck.Shrink[List[Either[Int,String]]]&#45;&gt;org.scalacheck.Shrink[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M1831.6617,-8667.1944C1960.1492,-8699.5921 2208.4358,-8738.7797 2347.1092,-8606.9355 2370.4432,-8584.7507 2331.7998,-8557.1462 2355.1092,-8534.9355 2412.5741,-8480.1796 2619.4702,-8479.3917 2768.9317,-8486.7558"/>
<polygon fill="#000000" stroke="#000000" points="2768.9756,-8490.2625 2779.1407,-8487.2758 2769.3317,-8483.2716 2768.9756,-8490.2625"/>
</g>
<!-- Integral[List[Either[Int,String]]] -->
<g id="node1909" class="node">
<title>Integral[List[Either[Int,String]]]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-8570.9355" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="2843.9013" y="-8574.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[List[Either[Int,String]]]</text>
<text text-anchor="middle" x="2931.4013" y="-8559.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- org.scalacheck.Shrink[List[Either[Int,String]]]&#45;&gt;Integral[List[Either[Int,String]]] -->
<g id="edge760" class="edge">
<title>org.scalacheck.Shrink[List[Either[Int,String]]]&#45;&gt;Integral[List[Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M1924.7788,-8632.4439C2043.8713,-8625.2958 2205.0001,-8615.5945 2347.1092,-8606.9355 2499.278,-8597.6636 2673.7293,-8586.8973 2792.1051,-8579.5713"/>
<polygon fill="#000000" stroke="#000000" points="2792.5461,-8583.0508 2802.3107,-8578.9396 2792.1136,-8576.0642 2792.5461,-8583.0508"/>
</g>
<!-- org.scalacheck.Shrink[List[Either[Int,String]]]&#45;&gt;org.scalacheck.util.Buildable[Either[Int,String],List[Either[Int,String]]] -->
<g id="edge818" class="edge">
<title>org.scalacheck.Shrink[List[Either[Int,String]]]&#45;&gt;org.scalacheck.util.Buildable[Either[Int,String],List[Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M1924.3001,-8653.5788C2124.372,-8665.768 2453.7649,-8685.836 2681.0707,-8699.6844"/>
<polygon fill="#000000" stroke="#000000" points="2680.9454,-8703.1831 2691.1398,-8700.2978 2681.3712,-8696.1961 2680.9454,-8703.1831"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1820" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-12186.9355" rx="369.2195" ry="26.7407"/>
<text text-anchor="start" x="3817.7721" y="-12190.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-12175.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 57ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1107" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4369.2541,-12171.124C4480.651,-12172.2655 4589.095,-12184.2604 4625.8509,-12222.9355 4647.8976,-12246.1334 4614.2138,-12773.6654 4633.8509,-12798.9355 4735.4751,-12929.7115 4942.5937,-12949.6223 5066.8608,-12948.7023"/>
<polygon fill="#000000" stroke="#000000" points="5067.1838,-12952.1988 5077.1405,-12948.5774 5067.0987,-12945.1993 5067.1838,-12952.1988"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge1122" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4440.2361,-12186.9355C4519.8915,-12186.9355 4605.2047,-12186.9355 4688.3638,-12186.9355"/>
<polygon fill="#000000" stroke="#000000" points="4688.494,-12190.4356 4698.4939,-12186.9355 4688.4939,-12183.4356 4688.494,-12190.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean] -->
<g id="edge44" class="edge">
<title>org.scalacheck.Arbitrary[(String, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[Boolean]</title>
<path fill="none" stroke="#000000" d="M4178.3187,-8338.5131C4305.3289,-8357.0427 4513.4884,-8364.3052 4625.8509,-8242.9355 4647.6238,-8219.4174 4612.5085,-8122.845 4633.8509,-8098.9355 4735.3245,-7985.257 4922.2851,-7979.0419 5045.8225,-7989.7855"/>
<polygon fill="#000000" stroke="#000000" points="5045.809,-7993.299 5056.0876,-7990.7298 5046.4503,-7986.3284 5045.809,-7993.299"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge1316" class="edge">
<title>org.scalacheck.Arbitrary[(String, Boolean)]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M4229.5165,-8304.3201C4374.3397,-8296.7244 4573.5141,-8297.4279 4625.8509,-8352.9355 4638.5997,-8366.4567 4621.1448,-9677.3743 4633.8509,-9690.9355 4685.8758,-9746.4614 4889.8365,-9746.4944 5030.0377,-9739.3122"/>
<polygon fill="#000000" stroke="#000000" points="5030.6397,-9742.7853 5040.4402,-9738.7602 5030.2687,-9735.7951 5030.6397,-9742.7853"/>
</g>
<!-- org.scalacheck.Arbitrary[(String, Boolean)]&#45;&gt;scala.reflect.ClassTag[(String, Boolean)] -->
<g id="edge28" class="edge">
<title>org.scalacheck.Arbitrary[(String, Boolean)]&#45;&gt;scala.reflect.ClassTag[(String, Boolean)]</title>
<path fill="none" stroke="#000000" d="M4229.98,-8304.4977C4374.5798,-8297.0977 4573.0891,-8297.999 4625.8509,-8352.9355 4638.477,-8366.082 4621.2418,-8667.7729 4633.8509,-8680.9355 4683.3389,-8732.5958 4866.5244,-8735.1251 5004.6176,-8728.9423"/>
<polygon fill="#000000" stroke="#000000" points="5005.0716,-8732.425 5014.8975,-8728.4624 5004.7451,-8725.4326 5005.0716,-8732.425"/>
</g>
<!-- cats.Foldable[scala.collection.immutable.Vector] -->
<g id="node1825" class="node">
<title>cats.Foldable[scala.collection.immutable.Vector]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-79136.9355" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="437.5494" y="-79140.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Foldable[scala.collection.immutable.Vector]</text>
<text text-anchor="middle" x="572.0494" y="-79125.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[Array[String]] -->
<g id="node1828" class="node">
<title>io.circe.Encoder[Array[String]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-19862.9355" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="486.0494" y="-19866.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Array[String]]</text>
<text text-anchor="middle" x="572.0494" y="-19851.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- io.circe.Encoder[Array[String]]&#45;&gt;io.circe.Encoder[String] -->
<g id="edge461" class="edge">
<title>io.circe.Encoder[Array[String]]&#45;&gt;io.circe.Encoder[String]</title>
<path fill="none" stroke="#000000" d="M694.1518,-19852.1598C843.8015,-19841.9651 1084.8583,-19836.3162 1144.0988,-19898.9355 1164.7164,-19920.7292 1131.452,-20957.1695 1152.0988,-20978.9355 1286.6266,-21120.7566 1546.0421,-21073.6032 1674.1906,-21038.6126"/>
<polygon fill="#000000" stroke="#000000" points="1675.2359,-21041.9548 1683.9345,-21035.9062 1673.3625,-21035.2102 1675.2359,-21041.9548"/>
</g>
<!-- io.circe.Encoder[Array[String]]&#45;&gt;Array[String] =&gt; Iterable[String] -->
<g id="edge118" class="edge">
<title>io.circe.Encoder[Array[String]]&#45;&gt;Array[String] =&gt; Iterable[String]</title>
<path fill="none" stroke="#000000" d="M705.1261,-19862.9355C926.3154,-19862.9355 1368.1653,-19862.9355 1599.8973,-19862.9355"/>
<polygon fill="#000000" stroke="#000000" points="1600.0915,-19866.4356 1610.0914,-19862.9355 1600.0914,-19859.4356 1600.0915,-19866.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[Char]&#45;&gt;scala.reflect.ClassTag[Char] -->
<g id="edge959" class="edge">
<title>org.scalacheck.Arbitrary[Char]&#45;&gt;scala.reflect.ClassTag[Char]</title>
<path fill="none" stroke="#000000" d="M5299.4056,-9438.9355C5502.1579,-9438.9355 5888.489,-9438.9355 6090.9792,-9438.9355"/>
<polygon fill="#000000" stroke="#000000" points="6091.0755,-9442.4356 6101.0754,-9438.9355 6091.0754,-9435.4356 6091.0755,-9442.4356"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M] -->
<g id="node1830" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-79208.9355" rx="402.1876" ry="26.7407"/>
<text text-anchor="start" x="295.5494" y="-79212.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor13[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M]</text>
<text text-anchor="middle" x="572.0494" y="-79197.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;JsonFloat.toBigInt&#39;) =&gt; ?{def should: ?} -->
<g id="node1831" class="node">
<title>String(&#39;JsonFloat.toBigInt&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-24182.9355" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="441.0494" y="-24186.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;JsonFloat.toBigInt&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-24171.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;JsonFloat.toBigInt&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge435" class="edge">
<title>String(&#39;JsonFloat.toBigInt&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M747.724,-24170.7713C894.2815,-24164.6933 1087.9203,-24167.4714 1144.0988,-24218.9355 1455.6565,-24504.3486 1716.9724,-27790.2755 1746.7735,-28177.6996"/>
<polygon fill="#000000" stroke="#000000" points="1743.2949,-28178.1131 1747.5497,-28187.816 1750.2744,-28177.5775 1743.2949,-28178.1131"/>
</g>
<!-- cats.Eq[io.circe.JsonNumber]&#45;&gt;shapeless.IsTuple[io.circe.JsonNumber] -->
<g id="edge1384" class="edge">
<title>cats.Eq[io.circe.JsonNumber]&#45;&gt;shapeless.IsTuple[io.circe.JsonNumber]</title>
<path fill="none" stroke="#000000" d="M3055.5231,-44337.509C3172.3565,-44331.8502 3352.1366,-44321.724 3507.6933,-44306.9355 3655.19,-44292.9134 3823.639,-44270.5298 3937.5643,-44254.4412"/>
<polygon fill="#000000" stroke="#000000" points="3938.3179,-44257.8695 3947.7284,-44253.0021 3937.3365,-44250.9386 3938.3179,-44257.8695"/>
</g>
<!-- org.scalacheck.Arbitrary[Vector[io.circe.Json]] -->
<g id="node1833" class="node">
<title>org.scalacheck.Arbitrary[Vector[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-9366.9355" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="3941.7721" y="-9370.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Vector[io.circe.Json]]</text>
<text text-anchor="middle" x="4070.7721" y="-9355.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 16ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Vector[io.circe.Json]]&#45;&gt;scala.reflect.ClassTag[Vector[io.circe.Json]] -->
<g id="edge1028" class="edge">
<title>org.scalacheck.Arbitrary[Vector[io.circe.Json]]&#45;&gt;scala.reflect.ClassTag[Vector[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M4264.6737,-9366.9355C4464.6255,-9366.9355 4774.6122,-9366.9355 4974.3627,-9366.9355"/>
<polygon fill="#000000" stroke="#000000" points="4974.3839,-9370.4356 4984.3839,-9366.9355 4974.3839,-9363.4356 4974.3839,-9370.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[Vector[io.circe.Json]]&#45;&gt;org.scalacheck.util.Buildable[io.circe.Json,Vector[io.circe.Json]] -->
<g id="edge1014" class="edge">
<title>org.scalacheck.Arbitrary[Vector[io.circe.Json]]&#45;&gt;org.scalacheck.util.Buildable[io.circe.Json,Vector[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M4244.1894,-9379.0089C4386.43,-9384.825 4572.6896,-9381.7115 4625.8509,-9330.9355 4649.134,-9308.6972 4610.5964,-9281.2037 4633.8509,-9258.9355 4676.1067,-9218.472 4806.0245,-9209.1115 4927.1103,-9210.0429"/>
<polygon fill="#000000" stroke="#000000" points="4927.2646,-9213.5445 4937.2993,-9210.1453 4927.335,-9206.5448 4927.2646,-9213.5445"/>
</g>
<!-- org.scalacheck.Arbitrary[Vector[io.circe.Json]]&#45;&gt;Vector[io.circe.Json] =&gt; Traversable[io.circe.Json] -->
<g id="edge486" class="edge">
<title>org.scalacheck.Arbitrary[Vector[io.circe.Json]]&#45;&gt;Vector[io.circe.Json] =&gt; Traversable[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M4246.7082,-9355.5961C4355.8643,-9348.5432 4499.0133,-9339.262 4625.8509,-9330.9355 4740.4563,-9323.4121 4868.6891,-9314.8971 4971.6292,-9308.0377"/>
<polygon fill="#000000" stroke="#000000" points="4972.0821,-9311.5154 4981.8272,-9307.3581 4971.6166,-9304.5309 4972.0821,-9311.5154"/>
</g>
<!-- org.scalacheck.Arbitrary[Vector[io.circe.Json]]&#45;&gt;org.scalacheck.Arbitrary[io.circe.Json] -->
<g id="edge1054" class="edge">
<title>org.scalacheck.Arbitrary[Vector[io.circe.Json]]&#45;&gt;org.scalacheck.Arbitrary[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M4240.457,-9379.9594C4384.0627,-9386.8221 4574.5032,-9384.7193 4625.8509,-9330.9355 4642.5034,-9313.4931 4617.2209,-8914.3994 4633.8509,-8896.9355 4683.9271,-8844.3488 4871.9444,-8842.5648 5010.7476,-8849.1457"/>
<polygon fill="#000000" stroke="#000000" points="5010.9125,-8852.658 5021.0728,-8849.6548 5011.2573,-8845.6665 5010.9125,-8852.658"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1834" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="2931.4013" cy="-16387.9355" rx="391.9745" ry="26.7407"/>
<text text-anchor="start" x="2662.4013" y="-16391.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="2931.4013" y="-16376.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 177ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge171" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M3323.107,-16388.6636C3859.7891,-16388.881 4853.797,-16386.4971 5701.5822,-16368.9355 6383.0627,-16354.8189 6552.6995,-16315.9355 7234.3262,-16315.9355 7234.3262,-16315.9355 7234.3262,-16315.9355 10016.0427,-16315.9355 10206.4748,-16315.9355 10253.9084,-16305.7019 10443.8423,-16291.9355 10626.5654,-16278.6918 11133.854,-16346.8415 11265.0151,-16218.9355 11287.4336,-16197.0734 11250.6456,-16170.8479 11273.0151,-16148.9355 11351.9385,-16071.625 11488.4422,-16078.7694 11576.0117,-16093.7764"/>
<polygon fill="#000000" stroke="#000000" points="11575.4531,-16097.2319 11585.9123,-16095.5422 11576.6822,-16090.3407 11575.4531,-16097.2319"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge378" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M2934.9261,-16414.9762C2957.5278,-16579.4262 3094.7651,-17456.2918 3515.6933,-18001.9355 3649.0319,-18174.7806 3882.5873,-18299.0156 3999.6491,-18353.7618"/>
<polygon fill="#000000" stroke="#000000" points="3998.355,-18357.0198 4008.8991,-18358.0563 4001.3028,-18350.6707 3998.355,-18357.0198"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge519" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M2949.1403,-16415.0352C3089.1275,-16625.2875 4039.8908,-17987.9355 5167.7166,-17987.9355 5167.7166,-17987.9355 5167.7166,-17987.9355 10016.0427,-17987.9355 10154.8548,-17987.9355 11165.725,-18055.9422 11265.0151,-17958.9355 11278.6997,-17945.5656 11260.4896,-17801.3971 11273.0151,-17786.9355 11337.8659,-17712.0608 11453.363,-17698.3667 11541.0576,-17700.51"/>
<polygon fill="#000000" stroke="#000000" points="11540.9629,-17704.0087 11551.0683,-17700.8258 11541.1837,-17697.0121 11540.9629,-17704.0087"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge1110" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M3069.9448,-16362.7682C3188.0416,-16342.1784 3362.4965,-16313.7987 3515.6933,-16296.9355 3582.8248,-16289.546 3654.7033,-16283.5072 3723.7252,-16278.6327"/>
<polygon fill="#000000" stroke="#000000" points="3724.1557,-16282.1112 3733.8871,-16277.9219 3723.6673,-16275.1282 3724.1557,-16282.1112"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge282" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M3006.8211,-16361.4563C3117.0502,-16324.0101 3329.331,-16256.6208 3515.6933,-16224.9355 3575.3372,-16214.7949 3639.0315,-16207.4616 3701.2219,-16202.1688"/>
<polygon fill="#000000" stroke="#000000" points="3701.5152,-16205.6566 3711.1893,-16201.3367 3700.9328,-16198.6808 3701.5152,-16205.6566"/>
</g>
<!-- org.scalacheck.Shrink[io.circe.numbers.testing.JsonNumberString] -->
<g id="node1835" class="node">
<title>org.scalacheck.Shrink[io.circe.numbers.testing.JsonNumberString]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-74852.9355" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="388.5494" y="-74856.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[io.circe.numbers.testing.JsonNumberString]</text>
<text text-anchor="middle" x="572.0494" y="-74841.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Shrink[io.circe.numbers.testing.JsonNumberString]&#45;&gt;Fractional[io.circe.numbers.testing.JsonNumberString] -->
<g id="edge117" class="edge">
<title>org.scalacheck.Shrink[io.circe.numbers.testing.JsonNumberString]&#45;&gt;Fractional[io.circe.numbers.testing.JsonNumberString]</title>
<path fill="none" stroke="#000000" d="M839.9912,-74857.0313C1044.1194,-74860.1516 1322.3175,-74864.4041 1517.1195,-74867.3818"/>
<polygon fill="#000000" stroke="#000000" points="1517.1518,-74870.8826 1527.2041,-74867.536 1517.2588,-74863.8834 1517.1518,-74870.8826"/>
</g>
<!-- org.scalacheck.Shrink[io.circe.numbers.testing.JsonNumberString]&#45;&gt;Integral[io.circe.numbers.testing.JsonNumberString] -->
<g id="edge1245" class="edge">
<title>org.scalacheck.Shrink[io.circe.numbers.testing.JsonNumberString]&#45;&gt;Integral[io.circe.numbers.testing.JsonNumberString]</title>
<path fill="none" stroke="#000000" d="M818.1864,-74841.6483C1030.6878,-74831.9034 1334.5193,-74817.9704 1536.712,-74808.6983"/>
<polygon fill="#000000" stroke="#000000" points="1537.0352,-74812.1872 1546.8644,-74808.2327 1536.7145,-74805.1946 1537.0352,-74812.1872"/>
</g>
<!-- String(&#39;fromString&#39;) =&gt; ?{def should: ?} -->
<g id="node1836" class="node">
<title>String(&#39;fromString&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-24110.9355" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="461.5494" y="-24114.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;fromString&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-24099.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- String(&#39;fromString&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1257" class="edge">
<title>String(&#39;fromString&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M724.8489,-24099.7758C873.3977,-24092.4781 1085.0105,-24092.6631 1144.0988,-24146.9355 1460.9269,-24437.9418 1717.8402,-27786.0999 1746.872,-28177.6378"/>
<polygon fill="#000000" stroke="#000000" points="1743.3995,-28178.1398 1747.6275,-28187.8544 1750.3804,-28177.6235 1743.3995,-28178.1398"/>
</g>
<!-- io.circe.Encoder[Some[Int]] -->
<g id="node1837" class="node">
<title>io.circe.Encoder[Some[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-21590.9355" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="495.0494" y="-21594.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[Some[Int]]</text>
<text text-anchor="middle" x="572.0494" y="-21579.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.Encoder[Some[Int]]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge227" class="edge">
<title>io.circe.Encoder[Some[Int]]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M691.2043,-21594.8048C808.0846,-21595.9546 990.5994,-21590.6519 1144.0988,-21554.9355 1358.8634,-21504.9639 1595.1985,-21386.3913 1697.5724,-21331.6021"/>
<polygon fill="#000000" stroke="#000000" points="1699.3199,-21334.6364 1706.4713,-21326.8193 1696.0059,-21328.4706 1699.3199,-21334.6364"/>
</g>
<!-- org.scalacheck.Arbitrary[Double] -->
<g id="node1838" class="node">
<title>org.scalacheck.Arbitrary[Double]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-58472.9355" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="480.0494" y="-58476.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[Double]</text>
<text text-anchor="middle" x="572.0494" y="-58461.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 25ms</text>
</g>
<!-- org.scalacheck.Arbitrary[Double]&#45;&gt;scala.reflect.ClassTag[Double] -->
<g id="edge371" class="edge">
<title>org.scalacheck.Arbitrary[Double]&#45;&gt;scala.reflect.ClassTag[Double]</title>
<path fill="none" stroke="#000000" d="M713.5047,-58472.9355C940.0974,-58472.9355 1381.9135,-58472.9355 1608.3675,-58472.9355"/>
<polygon fill="#000000" stroke="#000000" points="1608.6548,-58476.4356 1618.6547,-58472.9355 1608.6547,-58469.4356 1608.6548,-58476.4356"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; LargeNumberDecoderTests.this.PropertyCheckConfigParam -->
<g id="node1839" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; LargeNumberDecoderTests.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-79280.9355" rx="362.0773" ry="26.7407"/>
<text text-anchor="start" x="324.0494" y="-79284.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; LargeNumberDecoderTests.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-79269.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 8ms</text>
</g>
<!-- Int(0) =&gt; ?{def to: ?} -->
<g id="node1840" class="node">
<title>Int(0) =&gt; ?{def to: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-79352.9355" rx="96.3333" ry="26.7407"/>
<text text-anchor="start" x="512.0494" y="-79356.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Int(0) =&gt; ?{def to: ?}</text>
<text text-anchor="middle" x="572.0494" y="-79341.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 10ms</text>
</g>
<!-- io.circe.Decoder[Map[String,Int]] -->
<g id="node1841" class="node">
<title>io.circe.Decoder[Map[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-11610.9355" rx="142.6713" ry="26.7407"/>
<text text-anchor="start" x="3977.7721" y="-11614.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Map[String,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-11599.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 17ms</text>
</g>
<!-- io.circe.Decoder[Map[String,Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge763" class="edge">
<title>io.circe.Decoder[Map[String,Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4201.4127,-11599.9402C4347.1991,-11590.8913 4570.0074,-11587.766 4625.8509,-11646.9355 4647.8153,-11670.2081 4614.3031,-12773.5992 4633.8509,-12798.9355 4735.0204,-12930.0636 4942.2972,-12949.8518 5066.7158,-12948.8146"/>
<polygon fill="#000000" stroke="#000000" points="5067.055,-12952.3106 5077.0082,-12948.6798 5066.9632,-12945.3112 5067.055,-12952.3106"/>
</g>
<!-- io.circe.Decoder[Map[String,Int]]&#45;&gt;io.circe.KeyDecoder[String] -->
<g id="edge838" class="edge">
<title>io.circe.Decoder[Map[String,Int]]&#45;&gt;io.circe.KeyDecoder[String]</title>
<path fill="none" stroke="#000000" d="M4201.7511,-11621.6732C4347.2551,-11630.4095 4569.2081,-11633.1721 4625.8509,-11574.9355 4642.5959,-11557.7194 4618.3038,-11377.2407 4633.8509,-11358.9355 4734.9226,-11239.9342 4927.6912,-11229.5094 5051.8336,-11237.1079"/>
<polygon fill="#000000" stroke="#000000" points="5051.9279,-11240.6217 5062.1371,-11237.7894 5052.39,-11233.6369 5051.9279,-11240.6217"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam -->
<g id="node1845" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-79424.9355" rx="332.1805" ry="26.7407"/>
<text text-anchor="start" x="345.0494" y="-79428.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-79413.7355" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 1ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1846" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-20078.9355" rx="400.445" ry="26.7407"/>
<text text-anchor="start" x="297.0494" y="-20082.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-20067.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 33ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge1248" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M972.3588,-20078.9355C1049.9661,-20078.9355 1132.4571,-20078.9355 1213.6004,-20078.9355"/>
<polygon fill="#000000" stroke="#000000" points="1214.004,-20082.4356 1224.004,-20078.9355 1214.0039,-20075.4356 1214.004,-20082.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge1124" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M881.7066,-20061.9075C995.8407,-20062.9574 1106.5377,-20075.2137 1144.0988,-20114.9355 1166.0855,-20138.1871 1130.081,-21243.7134 1152.0988,-21266.9355 1287.8514,-21410.1141 1550.8871,-21360.7212 1677.7441,-21325.6407"/>
<polygon fill="#000000" stroke="#000000" points="1679.0675,-21328.9043 1687.7455,-21322.8262 1677.1713,-21322.166 1679.0675,-21328.9043"/>
</g>
<!-- org.scalatest.words.StringVerbStringInvocation -->
<g id="node1847" class="node">
<title>org.scalatest.words.StringVerbStringInvocation</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-79496.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-79500.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalatest.words.StringVerbStringInvocation</text>
<text text-anchor="middle" x="572.0494" y="-79485.7355" font-family="Times,serif" font-size="14.00" fill="#000000">149 times = 57ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E] -->
<g id="node1848" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-79568.9355" rx="323.2957" ry="26.7407"/>
<text text-anchor="start" x="351.5494" y="-79572.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E]</text>
<text text-anchor="middle" x="572.0494" y="-79557.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[List[Option[io.circe.Json]]]&#45;&gt;cats.kernel.Eq[Option[io.circe.Json]] -->
<g id="edge1058" class="edge">
<title>cats.Eq[List[Option[io.circe.Json]]]&#45;&gt;cats.kernel.Eq[Option[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M11799.5422,-17103.5069C11930.4621,-17111.4568 12124.9155,-17123.2647 12260.2816,-17131.4846"/>
<polygon fill="#000000" stroke="#000000" points="12260.1375,-17134.9822 12270.3313,-17132.0948 12260.5618,-17127.995 12260.1375,-17134.9822"/>
</g>
<!-- cats.Eq[List[Option[io.circe.Json]]]&#45;&gt;cats.kernel.Order[Option[io.circe.Json]] -->
<g id="edge1018" class="edge">
<title>cats.Eq[List[Option[io.circe.Json]]]&#45;&gt;cats.kernel.Order[Option[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M11750.0952,-17116.0761C11838.1847,-17130.4084 11968.6556,-17134.9248 12043.7615,-17058.9355 12059.1213,-17043.395 12038.0743,-16977.9677 12051.7615,-16960.9355 12099.3472,-16901.7203 12177.5292,-16873.0944 12249.2776,-16859.5294"/>
<polygon fill="#000000" stroke="#000000" points="12250.1342,-16862.9315 12259.3551,-16857.7136 12248.8929,-16856.0424 12250.1342,-16862.9315"/>
</g>
<!-- cats.Eq[List[Option[io.circe.Json]]]&#45;&gt;cats.kernel.PartialOrder[Option[io.circe.Json]] -->
<g id="edge449" class="edge">
<title>cats.Eq[List[Option[io.circe.Json]]]&#45;&gt;cats.kernel.PartialOrder[Option[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M11762.0896,-17114.2871C11847.0889,-17123.9523 11965.6895,-17122.4215 12043.7615,-17058.9355 12053.1417,-17051.3078 12042.4018,-17040.5886 12051.7615,-17032.9355 12114.2456,-16981.8447 12204.3992,-16972.5975 12279.37,-16976.2453"/>
<polygon fill="#000000" stroke="#000000" points="12279.1905,-16979.7406 12289.3725,-16976.812 12279.5865,-16972.7518 12279.1905,-16979.7406"/>
</g>
<!-- shapeless.IsTuple[List[Option[io.circe.Json]]] -->
<g id="node1971" class="node">
<title>shapeless.IsTuple[List[Option[io.circe.Json]]]</title>
<ellipse fill="none" stroke="#000000" cx="12415.9214" cy="-17212.9355" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="12290.9214" y="-17216.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[List[Option[io.circe.Json]]]</text>
<text text-anchor="middle" x="12415.9214" y="-17201.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.Eq[List[Option[io.circe.Json]]]&#45;&gt;shapeless.IsTuple[List[Option[io.circe.Json]]] -->
<g id="edge1535" class="edge">
<title>cats.Eq[List[Option[io.circe.Json]]]&#45;&gt;shapeless.IsTuple[List[Option[io.circe.Json]]]</title>
<path fill="none" stroke="#000000" d="M11754.4496,-17074.4392C11841.3148,-17061.9785 11967.0139,-17060.0268 12043.7615,-17130.9355 12059.0032,-17145.0177 12036.5578,-17162.8123 12051.7615,-17176.9355 12115.0347,-17235.712 12213.7907,-17242.2185 12292.5062,-17235.393"/>
<polygon fill="#000000" stroke="#000000" points="12292.8664,-17238.8746 12302.4918,-17234.4471 12292.2063,-17231.9058 12292.8664,-17238.8746"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION) -->
<g id="node1851" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION)</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-79640.9355" rx="309.9257" ry="26.7407"/>
<text text-anchor="start" x="361.0494" y="-79644.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; ((?A, ?B, ?C, ?D) =&gt; ?ASSERTION)</text>
<text text-anchor="middle" x="572.0494" y="-79629.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam -->
<g id="node1853" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-79712.9355" rx="353.6068" ry="26.7407"/>
<text text-anchor="start" x="330.0494" y="-79716.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; JsonObjectSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-79701.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc5] -->
<g id="node1854" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc5]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-50048.9355" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="423.5494" y="-50052.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc5]</text>
<text text-anchor="middle" x="572.0494" y="-50037.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc5]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc5] -->
<g id="edge614" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc5]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc5]</title>
<path fill="none" stroke="#000000" d="M793.5384,-50048.9355C1003.7878,-50048.9355 1318.0755,-50048.9355 1528.2728,-50048.9355"/>
<polygon fill="#000000" stroke="#000000" points="1528.5155,-50052.4356 1538.5154,-50048.9355 1528.5154,-50045.4356 1528.5155,-50052.4356"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q] -->
<g id="node1855" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-79784.9355" rx="456.1678" ry="26.7407"/>
<text text-anchor="start" x="257.5494" y="-79788.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor17[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q]</text>
<text text-anchor="middle" x="572.0494" y="-79773.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1856" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-20006.9355" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="409.5494" y="-20010.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-19995.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 31ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge916" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M813.1867,-20006.9355C974.318,-20006.9355 1189.5693,-20006.9355 1373.067,-20006.9355"/>
<polygon fill="#000000" stroke="#000000" points="1373.1627,-20010.4356 1383.1626,-20006.9355 1373.1626,-20003.4356 1373.1627,-20010.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge263" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M771.9867,-19991.8606C916.3783,-19985.8882 1094.3699,-19990.3244 1144.0988,-20042.9355 1167.4545,-20067.645 1128.71,-21242.2573 1152.0988,-21266.9355 1287.8221,-21410.1418 1550.872,-21360.7355 1677.7382,-21325.6463"/>
<polygon fill="#000000" stroke="#000000" points="1679.0627,-21328.9095 1687.7404,-21322.8311 1677.1662,-21322.1713 1679.0627,-21328.9095"/>
</g>
<!-- cats.Monoid[io.circe.Decoder.Result[Byte]]&#45;&gt;cats.kernel.Monoid[Byte] -->
<g id="edge221" class="edge">
<title>cats.Monoid[io.circe.Decoder.Result[Byte]]&#45;&gt;cats.kernel.Monoid[Byte]</title>
<path fill="none" stroke="#000000" d="M1931.3471,-45422.9355C2175.2497,-45422.9355 2601.8465,-45422.9355 2810.0954,-45422.9355"/>
<polygon fill="#000000" stroke="#000000" points="2810.1495,-45426.4356 2820.1495,-45422.9355 2810.1495,-45419.4356 2810.1495,-45426.4356"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B] -->
<g id="node1858" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-79856.9355" rx="255.0313" ry="26.7407"/>
<text text-anchor="start" x="399.5494" y="-79860.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor2[?A,?B]</text>
<text text-anchor="middle" x="572.0494" y="-79845.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1859" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-270.9355" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="3885.7721" y="-274.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-259.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 46ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge334" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4295.6149,-255.6568C4429.2413,-252.0663 4581.16,-259.4825 4625.8509,-306.9355 4641.62,-323.6792 4618.1034,-1946.1717 4633.8509,-1962.9355 4748.6076,-2085.0984 4966.7951,-2052.944 5085.6143,-2023.3139"/>
<polygon fill="#000000" stroke="#000000" points="5086.5674,-2026.683 5095.3951,-2020.8244 5084.8408,-2019.8993 5086.5674,-2026.683"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1410" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4344.0418,-270.9355C4512.0967,-270.9355 4726.6788,-270.9355 4894.6889,-270.9355"/>
<polygon fill="#000000" stroke="#000000" points="4894.9265,-274.4356 4904.9264,-270.9355 4894.9264,-267.4356 4894.9265,-274.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc20] -->
<g id="node1862" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc20]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-59156.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="420.0494" y="-59160.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc20]</text>
<text text-anchor="middle" x="572.0494" y="-59145.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc20]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc20] -->
<g id="edge628" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc20]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc20]</title>
<path fill="none" stroke="#000000" d="M798.3967,-59156.9355C1007.0924,-59156.9355 1315.2165,-59156.9355 1523.754,-59156.9355"/>
<polygon fill="#000000" stroke="#000000" points="1523.9188,-59160.4356 1533.9188,-59156.9355 1523.9187,-59153.4356 1523.9188,-59160.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1863" class="node">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-19934.9355" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="364.5494" y="-19938.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-19923.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 29ms</text>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge1177" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M876.8304,-19934.9355C1008.5128,-19934.9355 1165.1178,-19934.9355 1309.0756,-19934.9355"/>
<polygon fill="#000000" stroke="#000000" points="1309.4182,-19938.4356 1319.4181,-19934.9355 1309.4181,-19931.4356 1309.4182,-19938.4356"/>
</g>
<!-- io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int] -->
<g id="edge215" class="edge">
<title>io.circe.Encoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Encoder[Int]</title>
<path fill="none" stroke="#000000" d="M813.3074,-19918.4819C948.5972,-19915.1335 1099.0353,-19923.2429 1144.0988,-19970.9355 1156.4612,-19984.0192 1139.7189,-21253.8684 1152.0988,-21266.9355 1287.7961,-21410.1665 1550.8586,-21360.7482 1677.733,-21325.6512"/>
<polygon fill="#000000" stroke="#000000" points="1679.0584,-21328.9142 1687.7359,-21322.8354 1677.1616,-21322.1761 1679.0584,-21328.9142"/>
</g>
<!-- org.scalacheck.Arbitrary[(Long, Int)]&#45;&gt;org.scalacheck.Arbitrary[Long] -->
<g id="edge1253" class="edge">
<title>org.scalacheck.Arbitrary[(Long, Int)]&#45;&gt;org.scalacheck.Arbitrary[Long]</title>
<path fill="none" stroke="#000000" d="M4226.4818,-9874.9355C4439.2931,-9874.9355 4818.0371,-9874.9355 5024.2541,-9874.9355"/>
<polygon fill="#000000" stroke="#000000" points="5024.549,-9878.4356 5034.5489,-9874.9355 5024.5489,-9871.4356 5024.549,-9878.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Long, Int)]&#45;&gt;scala.reflect.ClassTag[(Long, Int)] -->
<g id="edge450" class="edge">
<title>org.scalacheck.Arbitrary[(Long, Int)]&#45;&gt;scala.reflect.ClassTag[(Long, Int)]</title>
<path fill="none" stroke="#000000" d="M4216.5724,-9884.3286C4328.5285,-9891.5565 4486.9679,-9901.8184 4625.8509,-9910.9355 4759.732,-9919.7244 4912.21,-9929.8664 5021.2386,-9937.1413"/>
<polygon fill="#000000" stroke="#000000" points="5021.1099,-9940.6404 5031.3208,-9937.8142 5021.5761,-9933.656 5021.1099,-9940.6404"/>
</g>
<!-- org.scalacheck.Arbitrary[(Long, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1474" class="edge">
<title>org.scalacheck.Arbitrary[(Long, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4211.3221,-9886.586C4357.1537,-9895.201 4571.4186,-9896.9467 4625.8509,-9838.9355 4642.6627,-9821.0184 4626.4608,-2786.3672 4633.8509,-2762.9355 4736.177,-2438.4949 5030.4958,-2131.6699 5132.4479,-2032.344"/>
<polygon fill="#000000" stroke="#000000" points="5134.9909,-2034.7535 5139.7345,-2025.2799 5130.1184,-2029.7276 5134.9909,-2034.7535"/>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc10] -->
<g id="node1869" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc10]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-43766.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-43770.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc10]</text>
<text text-anchor="middle" x="572.0494" y="-43755.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc10]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc10]] -->
<g id="edge1489" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc10]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc10]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-43766.9355C944.0278,-43766.9355 1209.2209,-43766.9355 1419.4845,-43766.9355"/>
<polygon fill="#000000" stroke="#000000" points="1419.7702,-43770.4356 1429.7702,-43766.9355 1419.7702,-43763.4356 1419.7702,-43770.4356"/>
</g>
<!-- Long =&gt; Int -->
<g id="node1870" class="node">
<title>Long =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-79928.9355" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="525.0494" y="-79932.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Long =&gt; Int</text>
<text text-anchor="middle" x="572.0494" y="-79917.7355" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 18ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1871" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-12114.9355" rx="432.9988" ry="26.7407"/>
<text text-anchor="start" x="3772.7721" y="-12118.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-12103.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 72ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge410" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4453.7102,-12102.4156C4531.8518,-12108.1991 4598.5972,-12122.2144 4625.8509,-12150.9355 4638.2419,-12163.9937 4622.8163,-12784.7128 4633.8509,-12798.9355 4735.3741,-12929.7899 4942.5279,-12949.6734 5066.8286,-12948.7273"/>
<polygon fill="#000000" stroke="#000000" points="5067.1552,-12952.2236 5077.1111,-12948.6001 5067.0686,-12945.2242 5067.1552,-12952.2236"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge1347" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4503.5262,-12114.9355C4543.3824,-12114.9355 4584.0928,-12114.9355 4624.7627,-12114.9355"/>
<polygon fill="#000000" stroke="#000000" points="4624.8214,-12118.4356 4634.8214,-12114.9355 4624.8214,-12111.4356 4624.8214,-12118.4356"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1873" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-12042.9355" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="3873.7721" y="-12046.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-12031.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 32ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge100" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4307.8083,-12027.457C4438.2841,-12024.6901 4582.3813,-12033.0687 4625.8509,-12078.9355 4639.6095,-12093.4528 4621.6001,-12783.1252 4633.8509,-12798.9355 4735.2934,-12929.8525 4942.4752,-12949.7142 5066.8028,-12948.7473"/>
<polygon fill="#000000" stroke="#000000" points="5067.1323,-12952.2435 5077.0876,-12948.6184 5067.0445,-12945.2441 5067.1323,-12952.2435"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]] -->
<g id="edge771" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4360.7753,-12042.9355C4485.3987,-12042.9355 4633.1035,-12042.9355 4767.862,-12042.9355"/>
<polygon fill="#000000" stroke="#000000" points="4767.9541,-12046.4356 4777.9541,-12042.9355 4767.954,-12039.4356 4767.9541,-12046.4356"/>
</g>
<!-- cats.kernel.Eq[io.circe.AccumulatingDecoder[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]] -->
<g id="node1875" class="node">
<title>cats.kernel.Eq[io.circe.AccumulatingDecoder[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]]</title>
<ellipse fill="none" stroke="#000000" cx="17757.7665" cy="-14580.9355" rx="472.1947" ry="26.7407"/>
<text text-anchor="start" x="17431.7665" y="-14584.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.AccumulatingDecoder[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]]</text>
<text text-anchor="middle" x="17757.7665" y="-14569.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 27ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.AccumulatingDecoder[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]]&#45;&gt;cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]] -->
<g id="edge616" class="edge">
<title>cats.kernel.Eq[io.circe.AccumulatingDecoder[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]]&#45;&gt;cats.kernel.Eq[scala.util.Either[cats.data.NonEmptyList[io.circe.DecodingFailure],Int]]</title>
<path fill="none" stroke="#000000" d="M18230.3111,-14580.9355C18236.4808,-14580.9355 18242.6369,-14580.9355 18248.774,-14580.9355"/>
<polygon fill="#000000" stroke="#000000" points="18249.0836,-14584.4356 18259.0836,-14580.9355 18249.0835,-14577.4356 18249.0836,-14584.4356"/>
</g>
<!-- cats.laws.discipline.CartesianTests.Isomorphisms[io.circe.AccumulatingDecoder] -->
<g id="node1877" class="node">
<title>cats.laws.discipline.CartesianTests.Isomorphisms[io.circe.AccumulatingDecoder]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-55592.9355" rx="328.1951" ry="26.7407"/>
<text text-anchor="start" x="348.0494" y="-55596.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.laws.discipline.CartesianTests.Isomorphisms[io.circe.AccumulatingDecoder]</text>
<text text-anchor="middle" x="572.0494" y="-55581.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.laws.discipline.CartesianTests.Isomorphisms[io.circe.AccumulatingDecoder]&#45;&gt;cats.functor.Invariant[io.circe.AccumulatingDecoder] -->
<g id="edge422" class="edge">
<title>cats.laws.discipline.CartesianTests.Isomorphisms[io.circe.AccumulatingDecoder]&#45;&gt;cats.functor.Invariant[io.circe.AccumulatingDecoder]</title>
<path fill="none" stroke="#000000" d="M900.4553,-55592.9355C1097.8787,-55592.9355 1344.2097,-55592.9355 1520.6345,-55592.9355"/>
<polygon fill="#000000" stroke="#000000" points="1520.8292,-55596.4356 1530.8292,-55592.9355 1520.8291,-55589.4356 1520.8292,-55596.4356"/>
</g>
<!-- shapeless.IsTuple[Double] -->
<g id="node1878" class="node">
<title>shapeless.IsTuple[Double]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-80000.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="1677.104" y="-80004.7355" font-family="Times,serif" font-size="14.00" fill="#000000">shapeless.IsTuple[Double]</text>
<text text-anchor="middle" x="1749.604" y="-79989.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1468" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M12780.4357,-18770.9355C13060.3386,-18770.9355 13456.4606,-18770.9355 13803.7086,-18770.9355 13803.7086,-18770.9355 13803.7086,-18770.9355 18607.2235,-18770.9355 19098.0238,-18770.9355 19376.0425,-19014.2898 19704.8751,-18649.9355 19714.9439,-18638.7791 19711.3469,-17582.8858 19712.8751,-17567.9355 19769.6346,-17012.636 19940.8471,-16351.8208 19984.2278,-16190.0233"/>
<polygon fill="#000000" stroke="#000000" points="19987.6809,-16190.66 19986.8978,-16180.0941 19980.921,-16188.8422 19987.6809,-16190.66"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge315" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M12638.3761,-18749.6066C12685.2991,-18744.0684 12734.4181,-18737.4945 12780.0814,-18729.9355 12859.9994,-18716.7061 12949.1457,-18697.0842 13017.5922,-18680.9596"/>
<polygon fill="#000000" stroke="#000000" points="13018.6114,-18684.3152 13027.5371,-18678.6072 13017,-18677.5032 13018.6114,-18684.3152"/>
</g>
<!-- io.circe.Encoder[cats.data.NonEmptyList[io.circe.Json]] -->
<g id="node1883" class="node">
<title>io.circe.Encoder[cats.data.NonEmptyList[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-19214.9355" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="418.0494" y="-19218.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[cats.data.NonEmptyList[io.circe.Json]]</text>
<text text-anchor="middle" x="572.0494" y="-19203.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- io.circe.Encoder[cats.data.NonEmptyList[io.circe.Json]]&#45;&gt;io.circe.Encoder[io.circe.Json] -->
<g id="edge314" class="edge">
<title>io.circe.Encoder[cats.data.NonEmptyList[io.circe.Json]]&#45;&gt;io.circe.Encoder[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M775.4838,-19227.3743C1016.0688,-19242.0845 1409.7194,-19266.1538 1615.1955,-19278.7173"/>
<polygon fill="#000000" stroke="#000000" points="1615.2444,-19282.2268 1625.4394,-19279.3437 1615.6717,-19275.2398 1615.2444,-19282.2268"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc3] -->
<g id="node1884" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc3]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-60524.9355" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="423.5494" y="-60528.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc3]</text>
<text text-anchor="middle" x="572.0494" y="-60513.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc3]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc3] -->
<g id="edge527" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc3]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc3]</title>
<path fill="none" stroke="#000000" d="M793.5384,-60524.9355C1003.7878,-60524.9355 1318.0755,-60524.9355 1528.2728,-60524.9355"/>
<polygon fill="#000000" stroke="#000000" points="1528.5155,-60528.4356 1538.5154,-60524.9355 1528.5154,-60521.4356 1528.5155,-60528.4356"/>
</g>
<!-- String(&#39;asObject&#39;) =&gt; ?{def should: ?} -->
<g id="node1885" class="node">
<title>String(&#39;asObject&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-24038.9355" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="468.0494" y="-24042.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;asObject&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-24027.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;asObject&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge595" class="edge">
<title>String(&#39;asObject&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M717.3319,-24028.126C866.1858,-24020.4329 1084.0728,-24019.6614 1144.0988,-24074.9355 1466.2835,-24371.6152 1718.8233,-27783.7283 1746.9893,-28177.8844"/>
<polygon fill="#000000" stroke="#000000" points="1743.5014,-28178.1804 1747.7035,-28187.9063 1750.4837,-28177.6828 1743.5014,-28178.1804"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[String,Either[Int,String]],(String, io.circe.Json),That] -->
<g id="node1886" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[String,Either[Int,String]],(String, io.circe.Json),That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-80072.9355" rx="497.6064" ry="26.7407"/>
<text text-anchor="start" x="228.0494" y="-80076.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[String,Either[Int,String]],(String, io.circe.Json),That]</text>
<text text-anchor="middle" x="572.0494" y="-80061.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.Decoder[scala.collection.mutable.HashMap[Long,Int]] -->
<g id="node1887" class="node">
<title>io.circe.Decoder[scala.collection.mutable.HashMap[Long,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-11826.9355" rx="255.0313" ry="26.7407"/>
<text text-anchor="start" x="3898.2721" y="-11830.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[scala.collection.mutable.HashMap[Long,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-11815.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 11ms</text>
</g>
<!-- io.circe.Decoder[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge1481" class="edge">
<title>io.circe.Decoder[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4283.7316,-11812.0579C4420.0617,-11807.7402 4579.7451,-11814.162 4625.8509,-11862.9355 4643.7124,-11881.8305 4617.9516,-12778.3622 4633.8509,-12798.9355 4735.1254,-12929.9825 4942.3657,-12949.799 5066.7493,-12948.7887"/>
<polygon fill="#000000" stroke="#000000" points="5067.0847,-12952.2848 5077.0388,-12948.6562 5066.9945,-12945.2854 5067.0847,-12952.2848"/>
</g>
<!-- io.circe.Decoder[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;io.circe.KeyDecoder[Long] -->
<g id="edge952" class="edge">
<title>io.circe.Decoder[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;io.circe.KeyDecoder[Long]</title>
<path fill="none" stroke="#000000" d="M4288.5961,-11840.9831C4390.9611,-11847.605 4514.6722,-11855.6371 4625.8509,-11862.9355 4769.4252,-11872.3607 4934.387,-11883.3421 5044.2134,-11890.6748"/>
<polygon fill="#000000" stroke="#000000" points="5044.1247,-11894.1766 5054.3357,-11891.3507 5044.5912,-11887.1921 5044.1247,-11894.1766"/>
</g>
<!-- io.circe.Decoder[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,(Long, Int),scala.collection.mutable.HashMap[Long,Int]] -->
<g id="edge168" class="edge">
<title>io.circe.Decoder[scala.collection.mutable.HashMap[Long,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[Nothing,(Long, Int),scala.collection.mutable.HashMap[Long,Int]]</title>
<path fill="none" stroke="#000000" d="M4326.2267,-11826.9355C4448.0453,-11826.9355 4597.1637,-11826.9355 4735.8525,-11826.9355"/>
<polygon fill="#000000" stroke="#000000" points="4736.2444,-11830.4356 4746.2444,-11826.9355 4736.2444,-11823.4356 4736.2444,-11830.4356"/>
</g>
<!-- cats.kernel.Eq[Some[Int]] -->
<g id="node1888" class="node">
<title>cats.kernel.Eq[Some[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="19337.1796" cy="-14948.9355" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="19266.1796" y="-14952.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[Some[Int]]</text>
<text text-anchor="middle" x="19337.1796" y="-14937.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[Some[Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge20" class="edge">
<title>cats.kernel.Eq[Some[Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M19416.3078,-14929.8809C19501.0683,-14914.7157 19633.0565,-14907.2005 19704.8751,-14984.9355 19713.0197,-14993.7511 19710.5864,-15405.1537 19712.8751,-15416.9355 19767.5804,-15698.5465 19921.5037,-16012.6576 19975.3875,-16117.059"/>
<polygon fill="#000000" stroke="#000000" points="19972.4252,-16118.9497 19980.1355,-16126.2163 19978.6396,-16115.7276 19972.4252,-16118.9497"/>
</g>
<!-- cats.kernel.Eq[Some[Int]]&#45;&gt;shapeless.IsTuple[Some[Int]] -->
<g id="edge539" class="edge">
<title>cats.kernel.Eq[Some[Int]]&#45;&gt;shapeless.IsTuple[Some[Int]]</title>
<path fill="none" stroke="#000000" d="M19449.0239,-14948.9355C19562.3441,-14948.9355 19737.7481,-14948.9355 19858.8687,-14948.9355"/>
<polygon fill="#000000" stroke="#000000" points="19858.9525,-14952.4356 19868.9524,-14948.9355 19858.9524,-14945.4356 19858.9525,-14952.4356"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[io.circe.Json],io.circe.Json,Vector[io.circe.Json]] -->
<g id="node1889" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[io.circe.Json],io.circe.Json,Vector[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-80144.9355" rx="490.05" ry="26.7407"/>
<text text-anchor="start" x="233.5494" y="-80148.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[io.circe.Json],io.circe.Json,Vector[io.circe.Json]]</text>
<text text-anchor="middle" x="572.0494" y="-80133.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Json&#39;) =&gt; ?{def should: ?} -->
<g id="node1890" class="node">
<title>String(&#39;Json&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-23966.9355" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="479.5494" y="-23970.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Json&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-23955.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- String(&#39;Json&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1131" class="edge">
<title>String(&#39;Json&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M703.9403,-23956.8213C852.8007,-23948.4805 1082.3125,-23945.9005 1144.0988,-24002.9355 1471.5688,-24305.2238 1719.6707,-27779.8296 1747.0832,-28177.8584"/>
<polygon fill="#000000" stroke="#000000" points="1743.6007,-28178.2348 1747.7777,-28187.9715 1750.5842,-28177.7552 1743.6007,-28178.2348"/>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D] -->
<g id="node1891" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-80216.9355" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="370.5494" y="-80220.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D]</text>
<text text-anchor="middle" x="572.0494" y="-80205.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.KeyEncoder[Int]] -->
<g id="node1893" class="node">
<title>cats.kernel.Eq[io.circe.KeyEncoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-198.9355" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="3959.2721" y="-202.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.KeyEncoder[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-187.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 9ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.KeyEncoder[Int]]&#45;&gt;shapeless.IsTuple[io.circe.KeyEncoder[Int]] -->
<g id="edge784" class="edge">
<title>cats.kernel.Eq[io.circe.KeyEncoder[Int]]&#45;&gt;shapeless.IsTuple[io.circe.KeyEncoder[Int]]</title>
<path fill="none" stroke="#000000" d="M4240.0655,-198.9355C4438.8074,-198.9355 4767.6387,-198.9355 4975.7133,-198.9355"/>
<polygon fill="#000000" stroke="#000000" points="4975.8381,-202.4356 4985.8381,-198.9355 4975.8381,-195.4356 4975.8381,-202.4356"/>
</g>
<!-- cats.kernel.Eq[io.circe.KeyEncoder[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1020" class="edge">
<title>cats.kernel.Eq[io.circe.KeyEncoder[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4221.6818,-186.7278C4367.071,-178.6902 4572.5999,-178.3819 4625.8509,-234.9355 4642.3038,-252.4088 4617.4205,-1945.4412 4633.8509,-1962.9355 4748.5953,-2085.1099 4966.7879,-2052.9509 5085.6111,-2023.3169"/>
<polygon fill="#000000" stroke="#000000" points="5086.5647,-2026.6859 5095.3923,-2020.8272 5084.8379,-2019.9022 5086.5647,-2026.6859"/>
</g>
<!-- cats.kernel.Eq[Boolean]&#45;&gt;shapeless.IsTuple[Boolean] -->
<g id="edge1182" class="edge">
<title>cats.kernel.Eq[Boolean]&#45;&gt;shapeless.IsTuple[Boolean]</title>
<path fill="none" stroke="#000000" d="M13902.8791,-17259.5898C14013.9519,-17269.2827 14193.9934,-17284.9943 14313.1825,-17295.3955"/>
<polygon fill="#000000" stroke="#000000" points="14313.1793,-17298.9084 14323.4457,-17296.2911 14313.7879,-17291.9349 14313.1793,-17298.9084"/>
</g>
<!-- Int(3) =&gt; ?{def asJson: ?} -->
<g id="node1895" class="node">
<title>Int(3) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-80288.9355" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="499.5494" y="-80292.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Int(3) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-80277.7355" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- scala.collection.immutable.Map[String,io.circe.Json] =&gt; ?{def asJson: ?} -->
<g id="node1896" class="node">
<title>scala.collection.immutable.Map[String,io.circe.Json] =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-80360.9355" rx="296.9697" ry="26.7407"/>
<text text-anchor="start" x="370.0494" y="-80364.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[String,io.circe.Json] =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-80349.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- cats.laws.discipline.CartesianTests.Isomorphisms[io.circe.KeyDecoder] -->
<g id="node1897" class="node">
<title>cats.laws.discipline.CartesianTests.Isomorphisms[io.circe.KeyDecoder]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-63332.9355" rx="289.4135" ry="26.7407"/>
<text text-anchor="start" x="375.5494" y="-63336.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.laws.discipline.CartesianTests.Isomorphisms[io.circe.KeyDecoder]</text>
<text text-anchor="middle" x="572.0494" y="-63321.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.laws.discipline.CartesianTests.Isomorphisms[io.circe.KeyDecoder]&#45;&gt;cats.functor.Invariant[io.circe.KeyDecoder] -->
<g id="edge1284" class="edge">
<title>cats.laws.discipline.CartesianTests.Isomorphisms[io.circe.KeyDecoder]&#45;&gt;cats.functor.Invariant[io.circe.KeyDecoder]</title>
<path fill="none" stroke="#000000" d="M861.6198,-63332.9355C1079.2159,-63332.9355 1371.0706,-63332.9355 1559.7457,-63332.9355"/>
<polygon fill="#000000" stroke="#000000" points="1559.7734,-63336.4356 1569.7733,-63332.9355 1559.7733,-63329.4356 1559.7734,-63336.4356"/>
</g>
<!-- org.scalacheck.Shrink[java.util.UUID]&#45;&gt;Integral[java.util.UUID] -->
<g id="edge258" class="edge">
<title>org.scalacheck.Shrink[java.util.UUID]&#45;&gt;Integral[java.util.UUID]</title>
<path fill="none" stroke="#000000" d="M5325.0188,-3236.3057C5539.2552,-3243.6194 5917.7577,-3256.5411 6107.314,-3263.0123"/>
<polygon fill="#000000" stroke="#000000" points="6107.4691,-3266.5195 6117.5828,-3263.3629 6107.708,-3259.5236 6107.4691,-3266.5195"/>
</g>
<!-- Fractional[java.util.UUID] -->
<g id="node1969" class="node">
<title>Fractional[java.util.UUID]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-3194.9355" rx="114.6026" ry="26.7407"/>
<text text-anchor="start" x="6149.2346" y="-3198.7355" font-family="Times,serif" font-size="14.00" fill="#000000">Fractional[java.util.UUID]</text>
<text text-anchor="middle" x="6222.2346" y="-3183.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- org.scalacheck.Shrink[java.util.UUID]&#45;&gt;Fractional[java.util.UUID] -->
<g id="edge66" class="edge">
<title>org.scalacheck.Shrink[java.util.UUID]&#45;&gt;Fractional[java.util.UUID]</title>
<path fill="none" stroke="#000000" d="M5325.0188,-3225.5654C5535.9774,-3218.3636 5906.2139,-3205.7241 6098.4819,-3199.1603"/>
<polygon fill="#000000" stroke="#000000" points="6098.7549,-3202.6531 6108.6296,-3198.8139 6098.516,-3195.6572 6098.7549,-3202.6531"/>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.Decoder[Int =&gt; Int]] -->
<g id="node1899" class="node">
<title>org.scalacheck.Arbitrary[io.circe.Decoder[Int =&gt; Int]]</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-3302.9355" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="1601.104" y="-3306.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.Decoder[Int =&gt; Int]]</text>
<text text-anchor="middle" x="1749.604" y="-3291.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 36ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.Decoder[Int =&gt; Int]]&#45;&gt;org.scalacheck.Arbitrary[Int =&gt; Int] -->
<g id="edge964" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.Decoder[Int =&gt; Int]]&#45;&gt;org.scalacheck.Arbitrary[Int =&gt; Int]</title>
<path fill="none" stroke="#000000" d="M1948.0961,-3314.8271C2064.3759,-3321.8103 2214.0764,-3330.8296 2347.1092,-3338.9355 2493.487,-3347.8546 2660.4835,-3358.1565 2778.3508,-3365.4487"/>
<polygon fill="#000000" stroke="#000000" points="2778.3328,-3368.9542 2788.5299,-3366.0785 2778.7651,-3361.9675 2778.3328,-3368.9542"/>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S] -->
<g id="node1902" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-80432.9355" rx="516.7901" ry="26.7407"/>
<text text-anchor="start" x="214.5494" y="-80436.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor19[?A,?B,?C,?D,?E,?F,?G,?H,?I,?J,?K,?L,?M,?N,?O,?P,?Q,?R,?S]</text>
<text text-anchor="middle" x="572.0494" y="-80421.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[io.circe.Json],List[io.circe.Json],That] -->
<g id="node1903" class="node">
<title>scala.collection.generic.CanBuildFrom[List[io.circe.Json],List[io.circe.Json],That]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-80504.9355" rx="330.4379" ry="26.7407"/>
<text text-anchor="start" x="346.5494" y="-80508.7355" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[io.circe.Json],List[io.circe.Json],That]</text>
<text text-anchor="middle" x="572.0494" y="-80493.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc17] -->
<g id="node1904" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc17]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-56600.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="448.5494" y="-56604.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc17]</text>
<text text-anchor="middle" x="572.0494" y="-56589.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc17]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc17] -->
<g id="edge1313" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc17]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc17]</title>
<path fill="none" stroke="#000000" d="M758.3114,-56600.9355C971.0895,-56600.9355 1318.412,-56600.9355 1540.352,-56600.9355"/>
<polygon fill="#000000" stroke="#000000" points="1540.4954,-56604.4356 1550.4954,-56600.9355 1540.4954,-56597.4356 1540.4954,-56604.4356"/>
</g>
<!-- cats.Eq[Vector[Int]] -->
<g id="node1905" class="node">
<title>cats.Eq[Vector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="10858.4287" cy="-15714.9355" rx="89.191" ry="26.7407"/>
<text text-anchor="start" x="10803.4287" y="-15718.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Vector[Int]]</text>
<text text-anchor="middle" x="10858.4287" y="-15703.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.Eq[Vector[Int]]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge252" class="edge">
<title>cats.Eq[Vector[Int]]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10925.356,-15697.1774C11016.6789,-15677.4559 11178.8052,-15659.3418 11265.0151,-15750.9355 11286.9557,-15774.2464 11252.284,-16014.5427 11273.0151,-16038.9355 11342.4729,-16120.6618 11472.2457,-16129.8555 11561.8814,-16124.8195"/>
<polygon fill="#000000" stroke="#000000" points="11562.3006,-16128.3001 11572.0603,-16124.1772 11561.8597,-16121.314 11562.3006,-16128.3001"/>
</g>
<!-- cats.Eq[Vector[Int]]&#45;&gt;shapeless.IsTuple[Vector[Int]] -->
<g id="edge874" class="edge">
<title>cats.Eq[Vector[Int]]&#45;&gt;shapeless.IsTuple[Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M10947.8657,-15714.9355C11086.6388,-15714.9355 11354.9157,-15714.9355 11519.1797,-15714.9355"/>
<polygon fill="#000000" stroke="#000000" points="11519.3585,-15718.4356 11529.3585,-15714.9355 11519.3584,-15711.4356 11519.3585,-15718.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[cats.data.NonEmptyVector[Int]] -->
<g id="node1906" class="node">
<title>org.scalacheck.Arbitrary[cats.data.NonEmptyVector[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-2180.9355" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="3912.7721" y="-2184.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[cats.data.NonEmptyVector[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-2169.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- org.scalacheck.Arbitrary[cats.data.NonEmptyVector[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge569" class="edge">
<title>org.scalacheck.Arbitrary[cats.data.NonEmptyVector[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4302.1709,-2176.1804C4402.2267,-2171.4852 4520.334,-2162.3947 4625.8509,-2144.9355 4794.6275,-2117.0093 4986.7948,-2058.7078 5090.8678,-2024.8363"/>
<polygon fill="#000000" stroke="#000000" points="5092.2422,-2028.0693 5100.6606,-2021.6365 5090.0681,-2021.4155 5092.2422,-2028.0693"/>
</g>
<!-- String(&#39;add&#39;) =&gt; ?{def should: ?} -->
<g id="node1907" class="node">
<title>String(&#39;add&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-23894.9355" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="481.5494" y="-23898.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;add&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-23883.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;add&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1572" class="edge">
<title>String(&#39;add&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M701.6577,-23884.9264C850.4653,-23876.4594 1082.0606,-23873.5317 1144.0988,-23930.9355 1476.8608,-24238.8393 1720.5089,-27776.0541 1747.175,-28177.8484"/>
<polygon fill="#000000" stroke="#000000" points="1743.6973,-28178.3027 1747.8501,-28188.0497 1750.6821,-28177.8404 1743.6973,-28178.3027"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1910" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="6222.2346" cy="-17530.9355" rx="344.2221" ry="26.7407"/>
<text text-anchor="start" x="5986.7346" y="-17534.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="6222.2346" y="-17519.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 163ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge1499" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M6346.0245,-17556.0516C6462.2268,-17571.8011 6632.9993,-17573.5399 6734.887,-17475.9355 6752.0897,-17459.4561 6728.9066,-17442.2243 6742.887,-17422.9355 7309.1623,-16641.6484 7746.9145,-16684.1815 8682.2174,-16446.9355 8717.0047,-16438.1115 11239.5625,-16393.2374 11265.0151,-16367.9355 11282.2838,-16350.769 11256.2917,-16166.6339 11273.0151,-16148.9355 11349.6707,-16067.811 11489.0855,-16076.8024 11577.5504,-16093.1223"/>
<polygon fill="#000000" stroke="#000000" points="11577.0651,-16096.5929 11587.5451,-16095.0371 11578.3823,-16089.7179 11577.0651,-16096.5929"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge782" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M6566.6481,-17530.9355C6653.9044,-17530.9355 6748.3243,-17530.9355 6837.9265,-17530.9355"/>
<polygon fill="#000000" stroke="#000000" points="6837.9824,-17534.4356 6847.9824,-17530.9355 6837.9823,-17527.4356 6837.9824,-17534.4356"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge219" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M6318.7463,-17556.7506C6422.6043,-17583.1626 6593.0729,-17622.5761 6742.887,-17638.9355 7388.4839,-17709.4336 7554.5568,-17657.9355 8203.9914,-17657.9355 8203.9914,-17657.9355 8203.9914,-17657.9355 10016.0427,-17657.9355 10571.2057,-17657.9355 10710.6385,-17647.3945 11265.0151,-17676.9355 11357.7536,-17681.8773 11462.453,-17691.6645 11540.5086,-17699.788"/>
<polygon fill="#000000" stroke="#000000" points="11540.5475,-17703.3111 11550.8576,-17700.8715 11541.2765,-17696.3492 11540.5475,-17703.3111"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge984" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M6476.9746,-17549.0577C6625.5175,-17559.625 6812.7777,-17572.9467 6963.927,-17583.6994"/>
<polygon fill="#000000" stroke="#000000" points="6964.0646,-17587.2179 6974.2877,-17584.4365 6964.5613,-17580.2356 6964.0646,-17587.2179"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge354" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M6476.9746,-17512.8134C6612.7885,-17503.1516 6780.9684,-17491.1873 6924.3214,-17480.9892"/>
<polygon fill="#000000" stroke="#000000" points="6924.8727,-17484.4589 6934.5991,-17480.2581 6924.3759,-17477.4766 6924.8727,-17484.4589"/>
</g>
<!-- cats.kernel.Eq[io.circe.JsonObject]&#45;&gt;shapeless.IsTuple[io.circe.JsonObject] -->
<g id="edge1405" class="edge">
<title>cats.kernel.Eq[io.circe.JsonObject]&#45;&gt;shapeless.IsTuple[io.circe.JsonObject]</title>
<path fill="none" stroke="#000000" d="M12550.6987,-19814.2611C12619.4979,-19808.1412 12704.4278,-19799.5551 12780.0814,-19788.9355 12860.4597,-19777.6528 12950.5157,-19761.1493 13019.2758,-19747.7273"/>
<polygon fill="#000000" stroke="#000000" points="13020.1222,-19751.1281 13029.2625,-19745.7703 13018.776,-19744.2587 13020.1222,-19751.1281"/>
</g>
<!-- io.circe.Decoder[Short] -->
<g id="node1914" class="node">
<title>io.circe.Decoder[Short]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-80576.9355" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="507.5494" y="-80580.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Short]</text>
<text text-anchor="middle" x="572.0494" y="-80565.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 10ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc21] -->
<g id="node1915" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc21]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-57752.9355" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="448.5494" y="-57756.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc21]</text>
<text text-anchor="middle" x="572.0494" y="-57741.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc21]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc21] -->
<g id="edge1212" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc21]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc21]</title>
<path fill="none" stroke="#000000" d="M758.3114,-57752.9355C971.0895,-57752.9355 1318.412,-57752.9355 1540.352,-57752.9355"/>
<polygon fill="#000000" stroke="#000000" points="1540.4954,-57756.4356 1550.4954,-57752.9355 1540.4954,-57749.4356 1540.4954,-57756.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[cats.data.Validated[String,Int]] -->
<g id="node1916" class="node">
<title>org.scalacheck.Arbitrary[cats.data.Validated[String,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-7444.9355" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="3916.7721" y="-7448.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[cats.data.Validated[String,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-7433.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Arbitrary[cats.data.Validated[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge1331" class="edge">
<title>org.scalacheck.Arbitrary[cats.data.Validated[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M4265.205,-7430.6502C4405.2843,-7425.1377 4577.7563,-7429.8065 4625.8509,-7480.9355 4646.8817,-7503.2933 4612.8906,-9668.5118 4633.8509,-9690.9355 4685.8103,-9746.5227 4889.7893,-9746.5386 5030.0122,-9739.3361"/>
<polygon fill="#000000" stroke="#000000" points="5030.6164,-9742.809 5040.4163,-9738.7825 5030.2444,-9735.8188 5030.6164,-9742.809"/>
</g>
<!-- org.scalacheck.Arbitrary[cats.data.Validated[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge307" class="edge">
<title>org.scalacheck.Arbitrary[cats.data.Validated[String,Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4264.8709,-7459.2322C4405.0296,-7464.7809 4577.7635,-7460.1542 4625.8509,-7408.9355 4636.8928,-7397.1747 4628.9941,-2778.319 4633.8509,-2762.9355 4736.2729,-2438.5252 5030.5301,-2131.6808 5132.4571,-2032.3469"/>
<polygon fill="#000000" stroke="#000000" points="5134.9998,-2034.7566 5139.7419,-2025.2823 5130.1266,-2029.7315 5134.9998,-2034.7566"/>
</g>
<!-- String(&#39;rights&#39;) =&gt; ?{def should: ?} -->
<g id="node1917" class="node">
<title>String(&#39;rights&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-23822.9355" rx="147.1565" ry="26.7407"/>
<text text-anchor="start" x="476.0494" y="-23826.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;rights&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-23811.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;rights&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge367" class="edge">
<title>String(&#39;rights&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M707.9702,-23812.5495C856.9528,-23804.3409 1082.9928,-23802.2643 1144.0988,-23858.9355 1482.1559,-24172.4586 1721.333,-27772.3292 1747.2641,-28177.8419"/>
<polygon fill="#000000" stroke="#000000" points="1743.7743,-28178.1139 1747.9036,-28187.871 1750.7601,-28177.6685 1743.7743,-28178.1139"/>
</g>
<!-- org.scalacheck.Shrink[io.circe.CursorOp]&#45;&gt;Integral[io.circe.CursorOp] -->
<g id="edge415" class="edge">
<title>org.scalacheck.Shrink[io.circe.CursorOp]&#45;&gt;Integral[io.circe.CursorOp]</title>
<path fill="none" stroke="#000000" d="M1918.2988,-36068.0743C2157.9543,-36075.3747 2591.5656,-36088.5834 2805.3227,-36095.0949"/>
<polygon fill="#000000" stroke="#000000" points="2805.2319,-36098.5937 2815.3338,-36095.3999 2805.4451,-36091.5969 2805.2319,-36098.5937"/>
</g>
<!-- org.scalacheck.Shrink[io.circe.CursorOp]&#45;&gt;Fractional[io.circe.CursorOp] -->
<g id="edge1294" class="edge">
<title>org.scalacheck.Shrink[io.circe.CursorOp]&#45;&gt;Fractional[io.circe.CursorOp]</title>
<path fill="none" stroke="#000000" d="M1918.2988,-36057.7968C2154.6585,-36050.5967 2579.6759,-36037.6498 2796.38,-36031.0486"/>
<polygon fill="#000000" stroke="#000000" points="2796.6515,-36034.542 2806.5402,-36030.7391 2796.4383,-36027.5453 2796.6515,-36034.542"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int)] -->
<g id="node1922" class="node">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-11970.9355" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="3963.7721" y="-11974.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[(Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-11959.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 18ms</text>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge943" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int)]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4216.8964,-11959.0517C4362.4675,-11950.8112 4571.8644,-11949.9142 4625.8509,-12006.9355 4640.9771,-12022.912 4620.384,-12781.5376 4633.8509,-12798.9355 4735.2272,-12929.9037 4942.4321,-12949.7476 5066.7817,-12948.7636"/>
<polygon fill="#000000" stroke="#000000" points="5067.1136,-12952.2598 5077.0684,-12948.6333 5067.0248,-12945.2604 5067.1136,-12952.2598"/>
</g>
<!-- io.circe.Decoder[(Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int)]] -->
<g id="edge686" class="edge">
<title>io.circe.Decoder[(Int, Int, Int, Int, Int)]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[(Int, Int, Int, Int, Int)]]</title>
<path fill="none" stroke="#000000" d="M4233.5157,-11970.9355C4407.7807,-11970.9355 4687.2574,-11970.9355 4895.1849,-11970.9355"/>
<polygon fill="#000000" stroke="#000000" points="4895.3424,-11974.4356 4905.3424,-11970.9355 4895.3423,-11967.4356 4895.3424,-11974.4356"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc15] -->
<g id="node1923" class="node">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc15]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-57104.9355" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="427.5494" y="-57108.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[ProductCodecSuite.this.Cc15]</text>
<text text-anchor="middle" x="572.0494" y="-57093.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc15]&#45;&gt;Fractional[ProductCodecSuite.this.Cc15] -->
<g id="edge1302" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc15]&#45;&gt;Fractional[ProductCodecSuite.this.Cc15]</title>
<path fill="none" stroke="#000000" d="M781.5546,-57111.3405C1006.7591,-57118.2254 1360.8493,-57129.0506 1572.6085,-57135.5245"/>
<polygon fill="#000000" stroke="#000000" points="1572.7945,-57139.0317 1582.8968,-57135.839 1573.0085,-57132.035 1572.7945,-57139.0317"/>
</g>
<!-- org.scalacheck.Shrink[ProductCodecSuite.this.Cc15]&#45;&gt;Integral[ProductCodecSuite.this.Cc15] -->
<g id="edge425" class="edge">
<title>org.scalacheck.Shrink[ProductCodecSuite.this.Cc15]&#45;&gt;Integral[ProductCodecSuite.this.Cc15]</title>
<path fill="none" stroke="#000000" d="M781.5546,-57098.5306C1009.8486,-57091.5512 1370.5887,-57080.5227 1581.2424,-57074.0827"/>
<polygon fill="#000000" stroke="#000000" points="1581.5818,-57077.574 1591.4702,-57073.77 1581.3678,-57070.5773 1581.5818,-57077.574"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge860" class="edge">
<title>cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M12527.7081,-14128.9425C12610.054,-14118.4872 12718.0865,-14121.2293 12780.0814,-14188.9355 12794.3389,-14204.5065 12773.5133,-14933.655 12788.0814,-14948.9355 12893.4356,-15059.4417 13356.0512,-14891.9558 13473.975,-14988.9355 13484.9651,-14997.9737 13470.9038,-15010.9971 13481.975,-15019.9355 13563.751,-15085.9582 17157.5823,-15167.0466 17262.5699,-15171.9355 17699.327,-15192.2739 17813.4043,-15153.7395 18244.963,-15223.9355 18571.0662,-15276.9785 18759.4246,-15160.5378 18961.484,-15421.9355 18979.6976,-15445.4978 18948.9614,-15936.3547 18969.484,-15957.9355 19025.9117,-16017.2727 19625.9047,-15984.287 19704.8751,-16005.9355 19797.2251,-16031.252 19894.4846,-16087.7182 19949.4552,-16122.8331"/>
<polygon fill="#000000" stroke="#000000" points="19947.6051,-16125.8046 19957.9073,-16128.2774 19951.3958,-16119.9197 19947.6051,-16125.8046"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.Order[io.circe.DecodingFailure] -->
<g id="edge276" class="edge">
<title>cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.Order[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M12565.7454,-14131.4891C12637.9755,-14129.4709 12721.4378,-14140.4718 12780.0814,-14188.9355 12789.729,-14196.9084 12778.458,-14207.9335 12788.0814,-14215.9355 12843.9112,-14262.3589 12923.8172,-14272.8748 12992.4548,-14271.0868"/>
<polygon fill="#000000" stroke="#000000" points="12992.6239,-14274.5832 13002.4957,-14270.7366 12992.3797,-14267.5874 12992.6239,-14274.5832"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.Eq[io.circe.DecodingFailure] -->
<g id="edge429" class="edge">
<title>cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.Eq[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M12526.8723,-14128.8869C12661.4966,-14099.7069 12887.0591,-14050.8161 13021.1832,-14021.7446"/>
<polygon fill="#000000" stroke="#000000" points="13022.0463,-14025.1388 13031.0779,-14019.5999 13020.5634,-14018.2977 13022.0463,-14025.1388"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.PartialOrder[io.circe.DecodingFailure] -->
<g id="edge27" class="edge">
<title>cats.kernel.Eq[scala.util.Either[io.circe.DecodingFailure,Int]]&#45;&gt;cats.kernel.PartialOrder[io.circe.DecodingFailure]</title>
<path fill="none" stroke="#000000" d="M12650.5693,-14161.7951C12738.7018,-14165.1226 12838.1769,-14168.8785 12923.657,-14172.1059"/>
<polygon fill="#000000" stroke="#000000" points="12923.6181,-14175.6068 12933.743,-14172.4867 12923.8823,-14168.6118 12923.6181,-14175.6068"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1925" class="node">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="5167.7166" cy="-17272.9355" rx="359.8347" ry="26.7407"/>
<text text-anchor="start" x="4921.2166" y="-17276.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="5167.7166" y="-17261.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 163ms</text>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L] -->
<g id="edge210" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.Generic.Aux[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int),L]</title>
<path fill="none" stroke="#000000" d="M5433.4755,-17254.7902C5584.9699,-17244.4465 5775.031,-17231.4696 5930.6234,-17220.8461"/>
<polygon fill="#000000" stroke="#000000" points="5931.083,-17224.3229 5940.8213,-17220.1498 5930.6061,-17217.3392 5931.083,-17224.3229"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge301" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;shapeless.IsTuple[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M5527.6725,-17272.9355C5627.8555,-17272.9355 5737.0286,-17272.9355 5838.5207,-17272.9355"/>
<polygon fill="#000000" stroke="#000000" points="5838.6335,-17276.4356 5848.6335,-17272.9355 5838.6335,-17269.4356 5838.6335,-17276.4356"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge12" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M5199.991,-17245.9293C5384.7947,-17094.1314 6332.1853,-16353.9355 7234.3262,-16353.9355 7234.3262,-16353.9355 7234.3262,-16353.9355 10016.0427,-16353.9355 10085.4428,-16353.9355 11215.3332,-16378.3927 11265.0151,-16329.9355 11279.4262,-16315.8797 11259.1333,-16163.5144 11273.0151,-16148.9355 11349.8692,-16068.2222 11488.8995,-16076.9833 11577.2806,-16093.1606"/>
<polygon fill="#000000" stroke="#000000" points="11576.7892,-16096.6298 11587.267,-16095.0593 11578.0967,-16089.753 11576.7892,-16096.6298"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int] -->
<g id="edge443" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.PartialOrder[Int]</title>
<path fill="none" stroke="#000000" d="M5417.7834,-17292.2672C5509.5049,-17298.6404 5614.2004,-17305.078 5709.5822,-17308.9355 5750.7284,-17310.5996 8644.5027,-17323.4257 8674.2174,-17351.9355 8697.1837,-17373.9705 8659.2748,-17472.876 8682.2174,-17494.9355 8785.6646,-17594.4012 11161.4881,-17438.5529 11265.0151,-17537.9355 11287.3351,-17559.3621 11251.5307,-17654.6711 11273.0151,-17676.9355 11347.26,-17753.8761 11478.0913,-17749.0791 11566.4831,-17734.4288"/>
<polygon fill="#000000" stroke="#000000" points="11567.2507,-17737.8481 11576.508,-17732.6952 11566.0578,-17730.9505 11567.2507,-17737.8481"/>
</g>
<!-- cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge1565" class="edge">
<title>cats.kernel.Eq[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M5321.3346,-17297.2634C5515.4893,-17328.011 5848.6882,-17380.7784 6050.8919,-17412.8007"/>
<polygon fill="#000000" stroke="#000000" points="6050.5949,-17416.2972 6061.0193,-17414.4045 6051.6899,-17409.3833 6050.5949,-17416.2972"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int] -->
<g id="edge1512" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M12018.7878,-17248.4612C12029.9051,-17248.6386 12040.9172,-17248.7977 12051.7615,-17248.9355 12132.6794,-17249.9639 12716.6437,-17299.1792 12780.0814,-17248.9355 12792.2507,-17239.2973 12776.0028,-17224.6872 12788.0814,-17214.9355 12875.9003,-17144.0352 13690.8414,-17195.9355 13803.7086,-17195.9355 13803.7086,-17195.9355 13803.7086,-17195.9355 18607.2235,-17195.9355 19293.5147,-17195.9355 19856.6554,-16370.2128 19972.472,-16188.1645"/>
<polygon fill="#000000" stroke="#000000" points="19975.5639,-16189.8238 19977.9536,-16179.502 19969.6487,-16186.0807 19975.5639,-16189.8238"/>
</g>
<!-- cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil] -->
<g id="edge433" class="edge">
<title>cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]&#45;&gt;cats.kernel.Eq[Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: Int :: shapeless.HNil]</title>
<path fill="none" stroke="#000000" d="M11881.5078,-17260.8827C11941.6108,-17277.2107 12001.5817,-17304.7717 12043.7615,-17350.9355 12056.2847,-17364.6417 12047.6113,-17373.8395 12051.7615,-17391.9355 12174.9804,-17929.2125 12359.2683,-18574.8355 12405.2423,-18734.1019"/>
<polygon fill="#000000" stroke="#000000" points="12401.93,-18735.2474 12408.0683,-18743.8828 12408.6549,-18733.3042 12401.93,-18735.2474"/>
</g>
<!-- cats.kernel.Eq[None.type] -->
<g id="node1927" class="node">
<title>cats.kernel.Eq[None.type]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-56240.9355" rx="112.36" ry="26.7407"/>
<text text-anchor="start" x="500.5494" y="-56244.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[None.type]</text>
<text text-anchor="middle" x="572.0494" y="-56229.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- cats.kernel.Eq[None.type]&#45;&gt;shapeless.IsTuple[None.type] -->
<g id="edge38" class="edge">
<title>cats.kernel.Eq[None.type]&#45;&gt;shapeless.IsTuple[None.type]</title>
<path fill="none" stroke="#000000" d="M684.6914,-56240.9355C902.0729,-56240.9355 1378.656,-56240.9355 1613.4205,-56240.9355"/>
<polygon fill="#000000" stroke="#000000" points="1613.7287,-56244.4356 1623.7287,-56240.9355 1613.7287,-56237.4356 1613.7287,-56244.4356"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1928" class="node">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-62576.9355" rx="342.8936" ry="26.7407"/>
<text text-anchor="start" x="337.5494" y="-62580.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="572.0494" y="-62565.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge1517" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Integral[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M891.8774,-62586.7133C1071.0953,-62592.1923 1292.6583,-62598.9659 1465.7007,-62604.2561"/>
<polygon fill="#000000" stroke="#000000" points="1465.6205,-62607.7552 1475.7229,-62604.5625 1465.8345,-62600.7585 1465.6205,-62607.7552"/>
</g>
<!-- org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge555" class="edge">
<title>org.scalacheck.Shrink[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;Fractional[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M891.8774,-62567.1578C1068.502,-62561.7581 1286.255,-62555.101 1458.1586,-62549.8456"/>
<polygon fill="#000000" stroke="#000000" points="1458.4881,-62553.3372 1468.3765,-62549.5332 1458.2741,-62546.3405 1458.4881,-62553.3372"/>
</g>
<!-- cats.Eq[Double] -->
<g id="node1931" class="node">
<title>cats.Eq[Double]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-80000.9355" rx="74.4932" ry="26.7407"/>
<text text-anchor="start" x="527.5494" y="-80004.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.Eq[Double]</text>
<text text-anchor="middle" x="572.0494" y="-79989.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- cats.Eq[Double]&#45;&gt;shapeless.IsTuple[Double] -->
<g id="edge1494" class="edge">
<title>cats.Eq[Double]&#45;&gt;shapeless.IsTuple[Double]</title>
<path fill="none" stroke="#000000" d="M646.604,-80000.9355C843.7246,-80000.9355 1380.2699,-80000.9355 1624.9671,-80000.9355"/>
<polygon fill="#000000" stroke="#000000" points="1625.3288,-80004.4356 1635.3287,-80000.9355 1625.3287,-79997.4356 1625.3288,-80004.4356"/>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc7] -->
<g id="node1932" class="node">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc7]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-67076.9355" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="452.0494" y="-67080.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[ProductCodecSuite.this.Cc7]</text>
<text text-anchor="middle" x="572.0494" y="-67065.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- cats.kernel.Eq[ProductCodecSuite.this.Cc7]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc7] -->
<g id="edge1130" class="edge">
<title>cats.kernel.Eq[ProductCodecSuite.this.Cc7]&#45;&gt;shapeless.IsTuple[ProductCodecSuite.this.Cc7]</title>
<path fill="none" stroke="#000000" d="M753.14,-67076.9355C966.8731,-67076.9355 1321.4043,-67076.9355 1544.915,-67076.9355"/>
<polygon fill="#000000" stroke="#000000" points="1545.1268,-67080.4356 1555.1268,-67076.9355 1545.1267,-67073.4356 1545.1268,-67080.4356"/>
</g>
<!-- String(&#39;deleteRights&#39;) =&gt; ?{def should: ?} -->
<g id="node1933" class="node">
<title>String(&#39;deleteRights&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-23750.9355" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="457.5494" y="-23754.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;deleteRights&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-23739.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;deleteRights&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1479" class="edge">
<title>String(&#39;deleteRights&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M728.798,-23739.4442C877.2359,-23732.225 1085.8345,-23732.7794 1144.0988,-23786.9355 1487.4611,-24106.0877 1722.1529,-27768.8002 1747.3521,-28177.8632"/>
<polygon fill="#000000" stroke="#000000" points="1743.8665,-28178.206 1747.973,-28187.9727 1750.8533,-28177.7769 1743.8665,-28178.206"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="node1934" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-126.9355" rx="448.1115" ry="26.7407"/>
<text text-anchor="start" x="3761.7721" y="-130.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-115.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 62ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)] -->
<g id="edge841" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4519.3149,-126.9355C4585.4834,-126.9355 4653.6602,-126.9355 4719.8157,-126.9355"/>
<polygon fill="#000000" stroke="#000000" points="4719.9875,-130.4356 4729.9874,-126.9355 4719.9874,-123.4356 4719.9875,-130.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge57" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4495.4286,-118.3119C4555.0865,-125.6891 4603.6755,-139.3805 4625.8509,-162.9355 4642.9876,-181.1384 4616.7376,-1944.7107 4633.8509,-1962.9355 4748.584,-2085.1205 4966.7812,-2052.9571 5085.6082,-2023.3197"/>
<polygon fill="#000000" stroke="#000000" points="5086.5622,-2026.6886 5095.3896,-2020.8296 5084.8352,-2019.9049 5086.5622,-2026.6886"/>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; String -->
<g id="node1935" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-80648.9355" rx="187.2667" ry="26.7407"/>
<text text-anchor="start" x="447.5494" y="-80652.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; String</text>
<text text-anchor="middle" x="572.0494" y="-80637.7355" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 1ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[io.circe.Json]] -->
<g id="node1936" class="node">
<title>org.scalacheck.Arbitrary[List[io.circe.Json]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-14814.9355" rx="182.3671" ry="26.7407"/>
<text text-anchor="start" x="3949.7721" y="-14818.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[List[io.circe.Json]]</text>
<text text-anchor="middle" x="4070.7721" y="-14803.7355" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 80ms</text>
</g>
<!-- org.scalacheck.Arbitrary[List[io.circe.Json]]&#45;&gt;List[io.circe.Json] =&gt; Traversable[io.circe.Json] -->
<g id="edge896" class="edge">
<title>org.scalacheck.Arbitrary[List[io.circe.Json]]&#45;&gt;List[io.circe.Json] =&gt; Traversable[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M4200.8012,-14833.8064C4314.7672,-14849.8088 4485.004,-14872.4137 4633.8509,-14886.9355 4746.0327,-14897.8803 4871.8026,-14906.5373 4973.0794,-14912.6165"/>
<polygon fill="#000000" stroke="#000000" points="4972.9232,-14916.1133 4983.114,-14913.2152 4973.3402,-14909.1258 4972.9232,-14916.1133"/>
</g>
<!-- org.scalacheck.Arbitrary[List[io.circe.Json]]&#45;&gt;org.scalacheck.util.Buildable[io.circe.Json,List[io.circe.Json]] -->
<g id="edge473" class="edge">
<title>org.scalacheck.Arbitrary[List[io.circe.Json]]&#45;&gt;org.scalacheck.util.Buildable[io.circe.Json,List[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M4248.8451,-14820.7796C4430.5275,-14826.7422 4713.9978,-14836.0452 4918.049,-14842.7418"/>
<polygon fill="#000000" stroke="#000000" points="4918.205,-14846.2488 4928.3145,-14843.0787 4918.4347,-14839.2525 4918.205,-14846.2488"/>
</g>
<!-- org.scalacheck.Arbitrary[List[io.circe.Json]]&#45;&gt;scala.reflect.ClassTag[List[io.circe.Json]] -->
<g id="edge767" class="edge">
<title>org.scalacheck.Arbitrary[List[io.circe.Json]]&#45;&gt;scala.reflect.ClassTag[List[io.circe.Json]]</title>
<path fill="none" stroke="#000000" d="M4248.8451,-14809.0915C4452.7531,-14802.3995 4784.8759,-14791.4998 4989.0375,-14784.7995"/>
<polygon fill="#000000" stroke="#000000" points="4989.387,-14788.29 4999.2667,-14784.4638 4989.1573,-14781.2938 4989.387,-14788.29"/>
</g>
<!-- org.scalacheck.Arbitrary[List[io.circe.Json]]&#45;&gt;org.scalacheck.Arbitrary[io.circe.Json] -->
<g id="edge91" class="edge">
<title>org.scalacheck.Arbitrary[List[io.circe.Json]]&#45;&gt;org.scalacheck.Arbitrary[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M4210.6588,-14832.2552C4340.3022,-14839.5633 4527.5037,-14826.0949 4625.8509,-14706.9355 4638.6923,-14691.3768 4620.0641,-8911.663 4633.8509,-8896.9355 4683.5543,-8843.841 4872.1812,-8842.2287 5011.1928,-8848.984"/>
<polygon fill="#000000" stroke="#000000" points="5011.3691,-8852.4972 5021.5329,-8849.5062 5011.7222,-8845.5061 5011.3691,-8852.4972"/>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc4] -->
<g id="node1938" class="node">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc4]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-52388.9355" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="446.0494" y="-52392.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[ProductCodecSuite.this.Cc4]</text>
<text text-anchor="middle" x="572.0494" y="-52377.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- io.circe.Encoder[ProductCodecSuite.this.Cc4]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc4]] -->
<g id="edge600" class="edge">
<title>io.circe.Encoder[ProductCodecSuite.this.Cc4]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[ProductCodecSuite.this.Cc4]]</title>
<path fill="none" stroke="#000000" d="M761.5708,-52388.9355C940.1781,-52388.9355 1211.4625,-52388.9355 1424.6075,-52388.9355"/>
<polygon fill="#000000" stroke="#000000" points="1424.7127,-52392.4356 1434.7127,-52388.9355 1424.7127,-52385.4356 1424.7127,-52392.4356"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E] -->
<g id="node1939" class="node">
<title>(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-80720.9355" rx="280.943" ry="26.7407"/>
<text text-anchor="start" x="381.5494" y="-80724.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E]</text>
<text text-anchor="middle" x="572.0494" y="-80709.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- pz1.type =&gt; ?{def ===: ?} -->
<g id="node1940" class="node">
<title>pz1.type =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-44270.9355" rx="117.2596" ry="26.7407"/>
<text text-anchor="start" x="1674.604" y="-44274.7355" font-family="Times,serif" font-size="14.00" fill="#000000">pz1.type =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="1749.604" y="-44259.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- pz1.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonNumber] -->
<g id="edge611" class="edge">
<title>pz1.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonNumber]</title>
<path fill="none" stroke="#000000" d="M1863.3185,-44277.7409C1983.5306,-44284.9458 2178.6788,-44296.6728 2347.1092,-44306.9355 2502.4816,-44316.4027 2681.0845,-44327.4277 2799.5062,-44334.7578"/>
<polygon fill="#000000" stroke="#000000" points="2799.508,-44338.2646 2809.7052,-44335.3892 2799.9406,-44331.2779 2799.508,-44338.2646"/>
</g>
<!-- cats.kernel.Order[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Order[(String, io.circe.Json)] -->
<g id="edge1488" class="edge">
<title>cats.kernel.Order[List[(String, io.circe.Json)]]&#45;&gt;cats.kernel.Order[(String, io.circe.Json)]</title>
<path fill="none" stroke="#000000" d="M11047.248,-15642.9355C11178.2428,-15642.9355 11351.6013,-15642.9355 11480.2149,-15642.9355"/>
<polygon fill="#000000" stroke="#000000" points="11480.5638,-15646.4356 11490.5638,-15642.9355 11480.5638,-15639.4356 11480.5638,-15646.4356"/>
</g>
<!-- io.circe.Decoder[Map[Int,Int]] -->
<g id="node1943" class="node">
<title>io.circe.Decoder[Map[Int,Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-14490.9355" rx="130.2154" ry="26.7407"/>
<text text-anchor="start" x="3986.7721" y="-14494.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[Map[Int,Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-14479.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Decoder[Map[Int,Int]]&#45;&gt;io.circe.Decoder[Int] -->
<g id="edge90" class="edge">
<title>io.circe.Decoder[Map[Int,Int]]&#45;&gt;io.circe.Decoder[Int]</title>
<path fill="none" stroke="#000000" d="M4191.1771,-14501.2899C4336.554,-14510.8222 4568.7238,-14515.5494 4625.8509,-14454.9355 4639.5685,-14440.3808 4620.6458,-13029.9567 4633.8509,-13014.9355 4745.1131,-12888.3718 4964.229,-12904.3021 5084.2546,-12924.8383"/>
<polygon fill="#000000" stroke="#000000" points="5083.6823,-12928.2913 5094.1377,-12926.5781 5084.896,-12921.3973 5083.6823,-12928.2913"/>
</g>
<!-- io.circe.Decoder[Map[Int,Int]]&#45;&gt;io.circe.KeyDecoder[Int] -->
<g id="edge1173" class="edge">
<title>io.circe.Decoder[Map[Int,Int]]&#45;&gt;io.circe.KeyDecoder[Int]</title>
<path fill="none" stroke="#000000" d="M4200.9137,-14490.9355C4415.9202,-14490.9355 4842.088,-14490.9355 5049.198,-14490.9355"/>
<polygon fill="#000000" stroke="#000000" points="5049.4979,-14494.4356 5059.4979,-14490.9355 5049.4978,-14487.4356 5049.4979,-14494.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.AccumulatingDecoder[Int]] -->
<g id="node1944" class="node">
<title>org.scalacheck.Arbitrary[io.circe.AccumulatingDecoder[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-2108.9355" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="3903.2721" y="-2112.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.AccumulatingDecoder[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-2097.7355" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 13ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.AccumulatingDecoder[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge114" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.AccumulatingDecoder[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4297.2548,-2097.8918C4398.0032,-2092.0402 4517.995,-2083.784 4625.8509,-2072.9355 4775.8631,-2057.847 4948.259,-2033.0051 5057.5526,-2016.315"/>
<polygon fill="#000000" stroke="#000000" points="5058.2464,-2019.7496 5067.6014,-2014.7762 5057.1868,-2012.8303 5058.2464,-2019.7496"/>
</g>
<!-- org.scalacheck.util.Buildable[Either[String,(String, io.circe.Json, Boolean)],List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Either[String,(String, io.circe.Json, Boolean)],List[Either[String,(String, io.circe.Json, Boolean)]]] -->
<g id="edge1227" class="edge">
<title>org.scalacheck.util.Buildable[Either[String,(String, io.circe.Json, Boolean)],List[Either[String,(String, io.circe.Json, Boolean)]]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Either[String,(String, io.circe.Json, Boolean)],List[Either[String,(String, io.circe.Json, Boolean)]]]</title>
<path fill="none" stroke="#000000" d="M2255.9353,-7302.9355C2293.0288,-7302.9355 2330.5763,-7302.9355 2367.9766,-7302.9355"/>
<polygon fill="#000000" stroke="#000000" points="2367.9992,-7306.4356 2377.9991,-7302.9355 2367.9991,-7299.4356 2367.9992,-7306.4356"/>
</g>
<!-- cats.kernel.Eq[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]] -->
<g id="node1946" class="node">
<title>cats.kernel.Eq[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-19066.9355" rx="327.2809" ry="26.7407"/>
<text text-anchor="start" x="9792.5427" y="-19070.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]</text>
<text text-anchor="middle" x="10016.0427" y="-19055.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- cats.kernel.Eq[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]&#45;&gt;cats.Eq[scala.collection.immutable.Stream[Int]] -->
<g id="edge280" class="edge">
<title>cats.kernel.Eq[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]&#45;&gt;cats.Eq[scala.collection.immutable.Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M10242.8948,-19047.5462C10380.4881,-19035.7858 10553.5206,-19020.9965 10681.0598,-19010.0955"/>
<polygon fill="#000000" stroke="#000000" points="10681.6543,-19013.5576 10691.3199,-19009.2186 10681.0581,-19006.583 10681.6543,-19013.5576"/>
</g>
<!-- cats.kernel.Eq[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]&#45;&gt;cats.Eq[Int] -->
<g id="edge206" class="edge">
<title>cats.kernel.Eq[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]&#45;&gt;cats.Eq[Int]</title>
<path fill="none" stroke="#000000" d="M10040.7137,-19094.0849C10102.3526,-19159.7347 10271.1611,-19326.4115 10451.8423,-19390.9355 10622.207,-19451.7754 11084.543,-19416.4669 11265.0151,-19428.9355 11371.6315,-19436.3016 11494.2121,-19448.0396 11573.8141,-19456.0975"/>
<polygon fill="#000000" stroke="#000000" points="11573.4848,-19459.5819 11583.7873,-19457.1105 11574.1923,-19452.6178 11573.4848,-19459.5819"/>
</g>
<!-- cats.kernel.Eq[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]&#45;&gt;shapeless.IsTuple[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]] -->
<g id="edge1167" class="edge">
<title>cats.kernel.Eq[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]&#45;&gt;shapeless.IsTuple[cats.data.OneAnd[[+A]scala.collection.immutable.Stream[A],Int]]</title>
<path fill="none" stroke="#000000" d="M10343.5399,-19066.9355C10397.2797,-19066.9355 10453.1632,-19066.9355 10507.4457,-19066.9355"/>
<polygon fill="#000000" stroke="#000000" points="10507.5619,-19070.4356 10517.5619,-19066.9355 10507.5618,-19063.4356 10507.5619,-19070.4356"/>
</g>
<!-- AccumulatingDecoderSpec.this.PropertyCheckConfigurable -->
<g id="node1947" class="node">
<title>AccumulatingDecoderSpec.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-80792.9355" rx="243.9037" ry="26.7407"/>
<text text-anchor="start" x="407.5494" y="-80796.7355" font-family="Times,serif" font-size="14.00" fill="#000000">AccumulatingDecoderSpec.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-80781.7355" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 2ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.AccumulatingDecoder[(Int, Int, Int)]] -->
<g id="node1948" class="node">
<title>cats.kernel.Eq[io.circe.AccumulatingDecoder[(Int, Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="10016.0427" cy="-16078.9355" rx="246.1463" ry="26.7407"/>
<text text-anchor="start" x="9850.0427" y="-16082.7355" font-family="Times,serif" font-size="14.00" fill="#000000">cats.kernel.Eq[io.circe.AccumulatingDecoder[(Int, Int, Int)]]</text>
<text text-anchor="middle" x="10016.0427" y="-16067.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 38ms</text>
</g>
<!-- cats.kernel.Eq[io.circe.AccumulatingDecoder[(Int, Int, Int)]]&#45;&gt;cats.kernel.Eq[(Int, Int, Int)] -->
<g id="edge1378" class="edge">
<title>cats.kernel.Eq[io.circe.AccumulatingDecoder[(Int, Int, Int)]]&#45;&gt;cats.kernel.Eq[(Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M10258.2831,-16083.8241C10410.9114,-16086.9043 10602.0518,-16090.7617 10727.0629,-16093.2845"/>
<polygon fill="#000000" stroke="#000000" points="10727.003,-16096.7839 10737.0717,-16093.4865 10727.1444,-16089.7853 10727.003,-16096.7839"/>
</g>
<!-- String(&#39;toList&#39;) =&gt; ?{def should: ?} -->
<g id="node1949" class="node">
<title>String(&#39;toList&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-23678.9355" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="475.5494" y="-23682.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;toList&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-23667.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;toList&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge1551" class="edge">
<title>String(&#39;toList&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M708.3484,-23668.4833C857.3758,-23660.2456 1083.1622,-23658.1734 1144.0988,-23714.9355 1492.6833,-24039.6404 1722.8455,-27763.4858 1747.4193,-28177.5821"/>
<polygon fill="#000000" stroke="#000000" points="1743.94,-28178.0362 1748.0244,-28187.8121 1750.9277,-28177.6228 1743.94,-28178.0362"/>
</g>
<!-- (Any =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam -->
<g id="node1951" class="node">
<title>(Any =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-80864.9355" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="382.5494" y="-80868.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; DecoderSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-80853.7355" font-family="Times,serif" font-size="14.00" fill="#000000">24 times = 5ms</text>
</g>
<!-- String(&#39;add, +:, and remove&#39;) =&gt; ?{def should: ?} -->
<g id="node1953" class="node">
<title>String(&#39;add, +:, and remove&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-23606.9355" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="436.0494" y="-23610.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;add, +:, and remove&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-23595.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;add, +:, and remove&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge543" class="edge">
<title>String(&#39;add, +:, and remove&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M752.2833,-23594.3368C898.4528,-23588.3298 1088.9499,-23591.4573 1144.0988,-23642.9355 1498.0872,-23973.363 1723.7604,-27762.0382 1747.5216,-28177.9391"/>
<polygon fill="#000000" stroke="#000000" points="1744.0279,-28178.1517 1748.0909,-28187.9365 1751.0166,-28177.7537 1744.0279,-28178.1517"/>
</g>
<!-- String(&#39;2&#39;) =&gt; ?{def asJson: ?} -->
<g id="node1954" class="node">
<title>String(&#39;2&#39;) =&gt; ?{def asJson: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-80936.9355" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="488.5494" y="-80940.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;2&#39;) =&gt; ?{def asJson: ?}</text>
<text text-anchor="middle" x="572.0494" y="-80925.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- nz1.type =&gt; ?{def ===: ?} -->
<g id="node1955" class="node">
<title>nz1.type =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="1749.604" cy="-44198.9355" rx="117.2596" ry="26.7407"/>
<text text-anchor="start" x="1674.604" y="-44202.7355" font-family="Times,serif" font-size="14.00" fill="#000000">nz1.type =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="1749.604" y="-44187.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- nz1.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonNumber] -->
<g id="edge1129" class="edge">
<title>nz1.type =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.JsonNumber]</title>
<path fill="none" stroke="#000000" d="M1859.6755,-44189.4419C2012.952,-44178.8273 2279.5142,-44170.6693 2347.1092,-44234.9355 2370.4432,-44257.1204 2331.7998,-44284.7249 2355.1092,-44306.9355 2487.0683,-44432.6739 2722.2971,-44397.9598 2847.5306,-44367.2877"/>
<polygon fill="#000000" stroke="#000000" points="2848.605,-44370.6269 2857.4588,-44364.8079 2846.9087,-44363.8356 2848.605,-44370.6269"/>
</g>
<!-- LargeNumberDecoderTests.this.PropertyCheckConfigurable -->
<g id="node1956" class="node">
<title>LargeNumberDecoderTests.this.PropertyCheckConfigurable</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-81008.9355" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="406.5494" y="-81012.7355" font-family="Times,serif" font-size="14.00" fill="#000000">LargeNumberDecoderTests.this.PropertyCheckConfigurable</text>
<text text-anchor="middle" x="572.0494" y="-80997.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- cats.Eq[Option[Boolean]]&#45;&gt;cats.kernel.Order[Boolean] -->
<g id="edge1025" class="edge">
<title>cats.Eq[Option[Boolean]]&#45;&gt;cats.kernel.Order[Boolean]</title>
<path fill="none" stroke="#000000" d="M13242.1077,-17322.9355C13361.9141,-17322.9355 13552.2934,-17322.9355 13677.6299,-17322.9355"/>
<polygon fill="#000000" stroke="#000000" points="13677.667,-17326.4356 13687.6669,-17322.9355 13677.6669,-17319.4356 13677.667,-17326.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Symbol, Int)]&#45;&gt;org.scalacheck.Arbitrary[Symbol] -->
<g id="edge904" class="edge">
<title>org.scalacheck.Arbitrary[(Symbol, Int)]&#45;&gt;org.scalacheck.Arbitrary[Symbol]</title>
<path fill="none" stroke="#000000" d="M4233.2203,-4100.2668C4444.3585,-4107.1961 4810.301,-4119.2057 5016.0219,-4125.9572"/>
<polygon fill="#000000" stroke="#000000" points="5016.1928,-4129.4646 5026.3022,-4126.2946 5016.4224,-4122.4683 5016.1928,-4129.4646"/>
</g>
<!-- org.scalacheck.Arbitrary[(Symbol, Int)]&#45;&gt;scala.reflect.ClassTag[(Symbol, Int)] -->
<g id="edge122" class="edge">
<title>org.scalacheck.Arbitrary[(Symbol, Int)]&#45;&gt;scala.reflect.ClassTag[(Symbol, Int)]</title>
<path fill="none" stroke="#000000" d="M4233.2203,-4089.6043C4440.7959,-4082.7919 4797.9958,-4071.0692 5005.473,-4064.2601"/>
<polygon fill="#000000" stroke="#000000" points="5005.6651,-4067.7558 5015.5449,-4063.9296 5005.4355,-4060.7596 5005.6651,-4067.7558"/>
</g>
<!-- org.scalacheck.Arbitrary[(Symbol, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge568" class="edge">
<title>org.scalacheck.Arbitrary[(Symbol, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4218.9598,-4106.9757C4364.4777,-4115.1445 4572.225,-4115.7993 4625.8509,-4058.9355 4638.2008,-4045.84 4628.3934,-2780.0886 4633.8509,-2762.9355 4736.9946,-2438.7539 5030.7881,-2131.7625 5132.5263,-2032.3688"/>
<polygon fill="#000000" stroke="#000000" points="5135.0671,-2034.7801 5139.7975,-2025.2999 5130.1876,-2029.761 5135.0671,-2034.7801"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D] -->
<g id="node1961" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-81080.9355" rx="282.2713" ry="26.7407"/>
<text text-anchor="start" x="380.5494" y="-81084.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor4[?A,?B,?C,?D]</text>
<text text-anchor="middle" x="572.0494" y="-81069.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E] -->
<g id="node1963" class="node">
<title>((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-81152.9355" rx="330.4379" ry="26.7407"/>
<text text-anchor="start" x="346.5494" y="-81156.7355" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor5[?A,?B,?C,?D,?E]</text>
<text text-anchor="middle" x="572.0494" y="-81141.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I] -->
<g id="node1964" class="node">
<title>(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-81224.9355" rx="394.6312" ry="26.7407"/>
<text text-anchor="start" x="301.0494" y="-81228.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any, Any) =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I]</text>
<text text-anchor="middle" x="572.0494" y="-81213.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Encoder[io.circe.tests.examples.WrappedOptionalField] -->
<g id="node1966" class="node">
<title>io.circe.Encoder[io.circe.tests.examples.WrappedOptionalField]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-72116.9355" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="396.0494" y="-72120.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Encoder[io.circe.tests.examples.WrappedOptionalField]</text>
<text text-anchor="middle" x="572.0494" y="-72105.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- io.circe.Encoder[io.circe.tests.examples.WrappedOptionalField]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[io.circe.tests.examples.WrappedOptionalField]] -->
<g id="edge789" class="edge">
<title>io.circe.Encoder[io.circe.tests.examples.WrappedOptionalField]&#45;&gt;io.circe.export.Exported[io.circe.ObjectEncoder[io.circe.tests.examples.WrappedOptionalField]]</title>
<path fill="none" stroke="#000000" d="M832.2914,-72116.9355C985.2923,-72116.9355 1181.8284,-72116.9355 1353.7096,-72116.9355"/>
<polygon fill="#000000" stroke="#000000" points="1353.9515,-72120.4356 1363.9515,-72116.9355 1353.9514,-72113.4356 1353.9515,-72120.4356"/>
</g>
<!-- String(&#39;toMap&#39;) =&gt; ?{def should: ?} -->
<g id="node1967" class="node">
<title>String(&#39;toMap&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-23534.9355" rx="150.7276" ry="26.7407"/>
<text text-anchor="start" x="473.5494" y="-23538.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;toMap&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-23523.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;toMap&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge434" class="edge">
<title>String(&#39;toMap&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M710.7344,-23524.3091C859.8131,-23516.1388 1083.5966,-23514.346 1144.0988,-23570.9355 1503.3197,-23906.9263 1724.4393,-27756.9077 1747.5861,-28177.6829"/>
<polygon fill="#000000" stroke="#000000" points="1744.0981,-28178.0003 1748.1404,-28187.7937 1751.0876,-28177.6171 1744.0981,-28178.0003"/>
</g>
<!-- org.scalacheck.util.Buildable[(Byte, Int),scala.collection.immutable.Map[Byte,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Byte, Int),scala.collection.immutable.Map[Byte,Int]] -->
<g id="edge797" class="edge">
<title>org.scalacheck.util.Buildable[(Byte, Int),scala.collection.immutable.Map[Byte,Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,(Byte, Int),scala.collection.immutable.Map[Byte,Int]]</title>
<path fill="none" stroke="#000000" d="M4406.2255,-2942.9355C4522.8044,-2942.9355 4654.5853,-2942.9355 4775.3513,-2942.9355"/>
<polygon fill="#000000" stroke="#000000" points="4775.5097,-2946.4356 4785.5097,-2942.9355 4775.5096,-2939.4356 4775.5097,-2946.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;scala.collection.immutable.Stream[Int] =&gt; Traversable[Int] -->
<g id="edge1333" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;scala.collection.immutable.Stream[Int] =&gt; Traversable[Int]</title>
<path fill="none" stroke="#000000" d="M4335.2629,-1782.9355C4511.5747,-1782.9355 4741.952,-1782.9355 4915.6442,-1782.9355"/>
<polygon fill="#000000" stroke="#000000" points="4915.6949,-1786.4356 4925.6948,-1782.9355 4915.6948,-1779.4356 4915.6949,-1786.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]] -->
<g id="edge1033" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;org.scalacheck.util.Buildable[Int,scala.collection.immutable.Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4298.4133,-1769.192C4430.2881,-1766.5358 4579.2365,-1774.4128 4625.8509,-1818.9355 4649.134,-1841.1739 4610.5964,-1868.6674 4633.8509,-1890.9355 4672.9282,-1928.3554 4786.9757,-1939.1754 4899.6773,-1939.8548"/>
<polygon fill="#000000" stroke="#000000" points="4899.8642,-1943.3554 4909.8759,-1939.8891 4899.8878,-1936.3554 4899.8642,-1943.3554"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Stream[Int]] -->
<g id="edge1271" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;scala.reflect.ClassTag[scala.collection.immutable.Stream[Int]]</title>
<path fill="none" stroke="#000000" d="M4294.2737,-1797.3504C4395.514,-1803.9007 4516.7199,-1811.7715 4625.8509,-1818.9355 4729.8893,-1825.7653 4845.158,-1833.4122 4942.5404,-1839.8959"/>
<polygon fill="#000000" stroke="#000000" points="4942.6003,-1843.4075 4952.8108,-1840.5797 4943.0654,-1836.423 4942.6003,-1843.4075"/>
</g>
<!-- org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge887" class="edge">
<title>org.scalacheck.Arbitrary[scala.collection.immutable.Stream[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4293.7085,-1768.4533C4427.2741,-1765.1096 4579.8448,-1772.5011 4625.8509,-1818.9355 4648.408,-1841.7026 4611.3231,-1940.1396 4633.8509,-1962.9355 4751.0302,-2081.5096 4966.2644,-2051.5339 5084.4998,-2023.0074"/>
<polygon fill="#000000" stroke="#000000" points="5085.3648,-2026.399 5094.2371,-2020.6083 5083.6902,-2019.6023 5085.3648,-2026.399"/>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.tests.examples.WrappedOptionalField] -->
<g id="node1972" class="node">
<title>org.scalacheck.Arbitrary[io.circe.tests.examples.WrappedOptionalField]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-76040.9355" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="373.5494" y="-76044.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[io.circe.tests.examples.WrappedOptionalField]</text>
<text text-anchor="middle" x="572.0494" y="-76029.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- org.scalacheck.Arbitrary[io.circe.tests.examples.WrappedOptionalField]&#45;&gt;scala.reflect.ClassTag[io.circe.tests.examples.WrappedOptionalField] -->
<g id="edge1221" class="edge">
<title>org.scalacheck.Arbitrary[io.circe.tests.examples.WrappedOptionalField]&#45;&gt;scala.reflect.ClassTag[io.circe.tests.examples.WrappedOptionalField]</title>
<path fill="none" stroke="#000000" d="M864.2648,-76040.9355C1045.2588,-76040.9355 1276.8551,-76040.9355 1457.7767,-76040.9355"/>
<polygon fill="#000000" stroke="#000000" points="1457.9829,-76044.4356 1467.9829,-76040.9355 1457.9828,-76037.4356 1457.9829,-76044.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc21] -->
<g id="node1973" class="node">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc21]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-78560.9355" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="420.0494" y="-78564.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc21]</text>
<text text-anchor="middle" x="572.0494" y="-78549.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc21]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc21] -->
<g id="edge50" class="edge">
<title>org.scalacheck.Arbitrary[ProductCodecSuite.this.Cc21]&#45;&gt;scala.reflect.ClassTag[ProductCodecSuite.this.Cc21]</title>
<path fill="none" stroke="#000000" d="M798.3967,-78560.9355C1007.0924,-78560.9355 1315.2165,-78560.9355 1523.754,-78560.9355"/>
<polygon fill="#000000" stroke="#000000" points="1523.9188,-78564.4356 1533.9188,-78560.9355 1523.9187,-78557.4356 1523.9188,-78564.4356"/>
</g>
<!-- org.scalacheck.util.Buildable[Either[Int,String],List[Either[Int,String]]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Either[Int,String],List[Either[Int,String]]] -->
<g id="edge412" class="edge">
<title>org.scalacheck.util.Buildable[Either[Int,String],List[Either[Int,String]]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Either[Int,String],List[Either[Int,String]]]</title>
<path fill="none" stroke="#000000" d="M3204.6712,-8706.7809C3368.0683,-8701.905 3576.5596,-8695.6834 3748.0362,-8690.5663"/>
<polygon fill="#000000" stroke="#000000" points="3748.3479,-8694.0587 3758.2391,-8690.2619 3748.1391,-8687.0618 3748.3479,-8694.0587"/>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam -->
<g id="node1975" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-81296.9355" rx="340.2368" ry="26.7407"/>
<text text-anchor="start" x="339.5494" y="-81300.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; StdLibCodecSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-81285.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- io.circe.Json =&gt; ?{def ===: ?} -->
<g id="node1976" class="node">
<title>io.circe.Json =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="13131.0282" cy="-16298.9355" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="13045.0282" y="-16302.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Json =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="13131.0282" y="-16287.7355" font-family="Times,serif" font-size="14.00" fill="#000000">26 times = 189ms</text>
</g>
<!-- io.circe.Json =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.Json] -->
<g id="edge87" class="edge">
<title>io.circe.Json =&gt; ?{def ===: ?}&#45;&gt;cats.Eq[io.circe.Json]</title>
<path fill="none" stroke="#000000" d="M13252.6617,-16309.891C13318.322,-16316.2614 13400.7119,-16324.9894 13473.975,-16334.9355 13555.4791,-16346.0005 13647.7987,-16361.6708 13713.9787,-16373.4561"/>
<polygon fill="#000000" stroke="#000000" points="13713.4993,-16376.9258 13723.959,-16375.2392 13714.7305,-16370.0349 13713.4993,-16376.9258"/>
</g>
<!-- org.scalacheck.util.Buildable[Int,Vector[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,Vector[Int]] -->
<g id="edge288" class="edge">
<title>org.scalacheck.util.Buildable[Int,Vector[Int]]&#45;&gt;scala.collection.generic.CanBuildFrom[F,Int,Vector[Int]]</title>
<path fill="none" stroke="#000000" d="M5353.8158,-5354.9355C5527.7889,-5354.9355 5788.6047,-5354.9355 5978.9945,-5354.9355"/>
<polygon fill="#000000" stroke="#000000" points="5979.1457,-5358.4356 5989.1456,-5354.9355 5979.1456,-5351.4356 5979.1457,-5358.4356"/>
</g>
<!-- String(&#39;fromFloat&#39;) =&gt; ?{def should: ?} -->
<g id="node1979" class="node">
<title>String(&#39;fromFloat&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-23462.9355" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="464.0494" y="-23466.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;fromFloat&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-23451.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- String(&#39;fromFloat&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge195" class="edge">
<title>String(&#39;fromFloat&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M721.2831,-23451.7266C870.1805,-23444.0448 1085.0588,-23443.6052 1144.0988,-23498.9355 1508.6491,-23840.5807 1725.2244,-27753.8416 1747.667,-28177.7615"/>
<polygon fill="#000000" stroke="#000000" points="1744.1819,-28178.1385 1748.204,-28187.9402 1751.1722,-28177.7697 1744.1819,-28178.1385"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[Int,String]]&#45;&gt;scala.reflect.ClassTag[Either[Int,String]] -->
<g id="edge436" class="edge">
<title>org.scalacheck.Arbitrary[Either[Int,String]]&#45;&gt;scala.reflect.ClassTag[Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M2987.0533,-10408.5894C3107.5554,-10467.5471 3391.133,-10625.4873 3507.6933,-10854.9355 3514.9511,-10869.2224 3504.4148,-10987.552 3515.6933,-10998.9355 3568.8351,-11052.5721 3764.162,-11054.1152 3908.1449,-11047.1928"/>
<polygon fill="#000000" stroke="#000000" points="3908.607,-11050.6742 3918.4203,-11046.6803 3908.2583,-11043.6828 3908.607,-11050.6742"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[String] -->
<g id="edge347" class="edge">
<title>org.scalacheck.Arbitrary[Either[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[String]</title>
<path fill="none" stroke="#000000" d="M3110.4931,-10385.1945C3535.4446,-10389.6739 4573.2433,-10395.0868 4625.8509,-10341.9355 4648.3248,-10319.2294 4611.9152,-9790.162 4633.8509,-9766.9355 4686.0957,-9711.6165 4889.9949,-9711.5256 5030.1233,-9718.6394"/>
<polygon fill="#000000" stroke="#000000" points="5030.3502,-9722.1561 5040.5203,-9719.1863 5030.7179,-9715.1658 5030.3502,-9722.1561"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[Int,String]]&#45;&gt;org.scalacheck.util.Buildable[(Int, String),Either[Int,String]] -->
<g id="edge488" class="edge">
<title>org.scalacheck.Arbitrary[Either[Int,String]]&#45;&gt;org.scalacheck.util.Buildable[(Int, String),Either[Int,String]]</title>
<path fill="none" stroke="#000000" d="M2988.2931,-10408.4245C3110.6074,-10466.7886 3396.5107,-10623.1923 3507.6933,-10854.9355 3517.2101,-10874.7719 3500.5671,-11630.9591 3515.6933,-11646.9355 3561.5201,-11695.3385 3719.3293,-11702.0079 3855.0246,-11697.878"/>
<polygon fill="#000000" stroke="#000000" points="3855.2873,-11701.3714 3865.1682,-11697.5481 3855.0597,-11694.3751 3855.2873,-11701.3714"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[(Int, String)] -->
<g id="edge974" class="edge">
<title>org.scalacheck.Arbitrary[Either[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[(Int, String)]</title>
<path fill="none" stroke="#000000" d="M3034.7582,-10404.9613C3165.96,-10426.1694 3389.4219,-10438.4502 3507.6933,-10308.9355 3523.8883,-10291.201 3499.5411,-10110.7091 3515.6933,-10092.9355 3626.1452,-9971.3961 3832.5236,-9978.0346 3960.1384,-9996.6118"/>
<polygon fill="#000000" stroke="#000000" points="3959.92,-10000.1182 3970.3295,-9998.145 3960.9615,-9993.1961 3959.92,-10000.1182"/>
</g>
<!-- org.scalacheck.Arbitrary[Either[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge1211" class="edge">
<title>org.scalacheck.Arbitrary[Either[Int,String]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M3032.6507,-10405.1373C3164.2352,-10427.325 3390.9355,-10441.5013 3507.6933,-10308.9355 3524.8458,-10289.4608 3497.6747,-2853.6119 3515.6933,-2834.9355 3601.3968,-2746.1037 4529.6836,-2871.3179 4625.8509,-2793.9355 4636.9368,-2785.0152 4627.9033,-2775.8621 4633.8509,-2762.9355 4776.4002,-2453.1198 5046.0814,-2135.6037 5136.9464,-2033.0556"/>
<polygon fill="#000000" stroke="#000000" points="5139.6505,-2035.2817 5143.6786,-2025.4824 5134.4188,-2030.6309 5139.6505,-2035.2817"/>
</g>
<!-- org.scalacheck.Arbitrary[cats.data.NonEmptyList[Int]] -->
<g id="node1982" class="node">
<title>org.scalacheck.Arbitrary[cats.data.NonEmptyList[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-2036.9355" rx="223.3915" ry="26.7407"/>
<text text-anchor="start" x="3920.7721" y="-2040.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[cats.data.NonEmptyList[Int]]</text>
<text text-anchor="middle" x="4070.7721" y="-2025.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- org.scalacheck.Arbitrary[cats.data.NonEmptyList[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge419" class="edge">
<title>org.scalacheck.Arbitrary[cats.data.NonEmptyList[Int]]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4285.5308,-2029.4959C4508.1577,-2021.7838 4849.122,-2009.9722 5035.2337,-2003.525"/>
<polygon fill="#000000" stroke="#000000" points="5035.4746,-2007.0188 5045.3474,-2003.1746 5035.2322,-2000.023 5035.4746,-2007.0188"/>
</g>
<!-- String(&#39;toVector&#39;) =&gt; ?{def should: ?} -->
<g id="node1983" class="node">
<title>String(&#39;toVector&#39;) =&gt; ?{def should: ?}</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-23390.9355" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="468.0494" y="-23394.7355" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;toVector&#39;) =&gt; ?{def should: ?}</text>
<text text-anchor="middle" x="572.0494" y="-23379.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;toVector&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position -->
<g id="edge997" class="edge">
<title>String(&#39;toVector&#39;) =&gt; ?{def should: ?}&#45;&gt;org.scalactic.source.Position</title>
<path fill="none" stroke="#000000" d="M716.86,-23379.9372C865.9087,-23372.0185 1084.522,-23370.9957 1144.0988,-23426.9355 1513.8902,-23774.1529 1725.8918,-27748.8649 1747.7293,-28177.5261"/>
<polygon fill="#000000" stroke="#000000" points="1744.249,-28178.005 1748.2515,-28187.8146 1751.24,-28177.65 1744.249,-28178.005"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I] -->
<g id="node1984" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-81368.9355" rx="345.1362" ry="26.7407"/>
<text text-anchor="start" x="336.0494" y="-81372.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; org.scalatest.prop.TableFor9[?A,?B,?C,?D,?E,?F,?G,?H,?I]</text>
<text text-anchor="middle" x="572.0494" y="-81357.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cats.kernel.Eq[scala.util.Either[Unit,Int]]&#45;&gt;cats.kernel.Order[Int] -->
<g id="edge897" class="edge">
<title>cats.kernel.Eq[scala.util.Either[Unit,Int]]&#45;&gt;cats.kernel.Order[Int]</title>
<path fill="none" stroke="#000000" d="M10948.9917,-14820.1905C11042.8614,-14802.6583 11186.6098,-14793.8722 11265.0151,-14878.9355 11286.854,-14902.629 11252.4049,-16014.1657 11273.0151,-16038.9355 11341.826,-16121.6344 11472.3815,-16130.4648 11562.3241,-16125.0912"/>
<polygon fill="#000000" stroke="#000000" points="11562.7915,-16128.5678 11572.5363,-16124.41 11562.3255,-16121.5834 11562.7915,-16128.5678"/>
</g>
<!-- cats.kernel.Eq[scala.util.Either[Unit,Int]]&#45;&gt;cats.kernel.Order[Unit] -->
<g id="edge643" class="edge">
<title>cats.kernel.Eq[scala.util.Either[Unit,Int]]&#45;&gt;cats.kernel.Order[Unit]</title>
<path fill="none" stroke="#000000" d="M10948.9754,-14865.6655C11042.8313,-14883.1851 11186.5683,-14891.9606 11265.0151,-14806.9355 11284.1532,-14786.1925 11253.9271,-13811.7248 11273.0151,-13790.9355 11347.9542,-13709.3174 11486.2419,-13717.9071 11575.1781,-13734.3578"/>
<polygon fill="#000000" stroke="#000000" points="11574.7537,-13737.8402 11585.2345,-13736.2901 11576.0746,-13730.9659 11574.7537,-13737.8402"/>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc15] -->
<g id="node1986" class="node">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc15]</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-73484.9355" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="442.5494" y="-73488.7355" font-family="Times,serif" font-size="14.00" fill="#000000">io.circe.Decoder[ProductCodecSuite.this.Cc15]</text>
<text text-anchor="middle" x="572.0494" y="-73473.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- io.circe.Decoder[ProductCodecSuite.this.Cc15]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc15]] -->
<g id="edge271" class="edge">
<title>io.circe.Decoder[ProductCodecSuite.this.Cc15]&#45;&gt;io.circe.export.Exported[io.circe.Decoder[ProductCodecSuite.this.Cc15]]</title>
<path fill="none" stroke="#000000" d="M766.8287,-73484.9355C951.3519,-73484.9355 1231.2937,-73484.9355 1445.2652,-73484.9355"/>
<polygon fill="#000000" stroke="#000000" points="1445.4039,-73488.4356 1455.4038,-73484.9355 1445.4038,-73481.4356 1445.4039,-73488.4356"/>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; SyntaxSuite.this.PropertyCheckConfigParam -->
<g id="node1988" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; SyntaxSuite.this.PropertyCheckConfigParam</title>
<ellipse fill="none" stroke="#000000" cx="572.0494" cy="-81440.9355" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="376.5494" y="-81444.7355" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; SyntaxSuite.this.PropertyCheckConfigParam</text>
<text text-anchor="middle" x="572.0494" y="-81429.7355" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int)] -->
<g id="node1989" class="node">
<title>org.scalacheck.Arbitrary[(Int, Int, Int)]</title>
<ellipse fill="none" stroke="#000000" cx="4070.7721" cy="-54.9355" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="3964.2721" y="-58.7355" font-family="Times,serif" font-size="14.00" fill="#000000">org.scalacheck.Arbitrary[(Int, Int, Int)]</text>
<text text-anchor="middle" x="4070.7721" y="-43.7355" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int)] -->
<g id="edge1116" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int)]&#45;&gt;scala.reflect.ClassTag[(Int, Int, Int)]</title>
<path fill="none" stroke="#000000" d="M4232.9251,-54.9355C4440.7188,-54.9355 4798.7994,-54.9355 5006.2578,-54.9355"/>
<polygon fill="#000000" stroke="#000000" points="5006.3281,-58.4356 5016.3281,-54.9355 5006.328,-51.4356 5006.3281,-58.4356"/>
</g>
<!-- org.scalacheck.Arbitrary[(Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int] -->
<g id="edge49" class="edge">
<title>org.scalacheck.Arbitrary[(Int, Int, Int)]&#45;&gt;org.scalacheck.Arbitrary[Int]</title>
<path fill="none" stroke="#000000" d="M4148.4006,-31.3013C4269.9558,.339 4503.8972,38.6278 4625.8509,-90.9355 4643.6715,-109.8681 4616.0547,-1943.9802 4633.8509,-1962.9355 4748.5736,-2085.1304 4966.775,-2052.9629 5085.6054,-2023.3223"/>
<polygon fill="#000000" stroke="#000000" points="5086.5598,-2026.691 5095.3872,-2020.8319 5084.8327,-2019.9074 5086.5598,-2026.691"/>
</g>
</g>
</svg>
