<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: implicit&#45;searches&#45;1510254556234 Pages: 1 -->
<svg width="38789pt" height="236582pt"
 viewBox="0.00 0.00 38789.49 236581.74" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 236577.7401)">
<title>implicit&#45;searches&#45;1510254556234</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-236577.7401 38785.4932,-236577.7401 38785.4932,4 -4,4"/>
<!-- (=&gt; (Nothing, Nothing)) =&gt; List[Implicits.this.global.Type] -->
<g id="node1" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; List[Implicits.this.global.Type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-26.8701" rx="244.818" ry="26.7407"/>
<text text-anchor="start" x="18601.614" y="-30.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; List[Implicits.this.global.Type]</text>
<text text-anchor="middle" x="18766.614" y="-15.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[BoxUnbox.this.postProcessor.bTypes.ClassBType],tools.nsc.backend.jvm.BTypes.InternalName,That] -->
<g id="node2" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[BoxUnbox.this.postProcessor.bTypes.ClassBType],tools.nsc.backend.jvm.BTypes.InternalName,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-98.8701" rx="685.373" ry="26.7407"/>
<text text-anchor="start" x="18290.114" y="-102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[BoxUnbox.this.postProcessor.bTypes.ClassBType],tools.nsc.backend.jvm.BTypes.InternalName,That]</text>
<text text-anchor="middle" x="18766.614" y="-87.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; java.util.Map[_ &lt;: java.text.AttributedCharacterIterator.Attribute, _] -->
<g id="node3" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; java.util.Map[_ &lt;: java.text.AttributedCharacterIterator.Attribute, _]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-170.8701" rx="424.0283" ry="26.7407"/>
<text text-anchor="start" x="18474.614" y="-174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; java.util.Map[_ &lt;: java.text.AttributedCharacterIterator.Attribute, _]</text>
<text text-anchor="middle" x="18766.614" y="-159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[ScalaLogic.this.global.Type]],scala.collection.immutable.Set[TreesAndTypesDomain.this.Sym],That] -->
<g id="node4" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[ScalaLogic.this.global.Type]],scala.collection.immutable.Set[TreesAndTypesDomain.this.Sym],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-242.8701" rx="596.5963" ry="26.7407"/>
<text text-anchor="start" x="18352.614" y="-246.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[ScalaLogic.this.global.Type]],scala.collection.immutable.Set[TreesAndTypesDomain.this.Sym],That]</text>
<text text-anchor="middle" x="18766.614" y="-231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;{}\n&#39;) =&gt; ?{def contains(x$1: ? &gt;: Char): Boolean} -->
<g id="node5" class="node">
<title>String(&#39;{}\n&#39;) =&gt; ?{def contains(x$1: ? &gt;: Char): Boolean}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-324.8701" rx="193.9948" ry="37.4533"/>
<text text-anchor="middle" x="18766.614" y="-336.1701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;{}</text>
<text text-anchor="start" x="18637.614" y="-321.1701" font-family="Times,serif" font-size="14.00" fill="#000000">&#39;) =&gt; ?{def contains(x$1: ? &gt;: Char): Boolean}</text>
<text text-anchor="middle" x="18766.614" y="-306.1701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Tree],NamesDefaults.this.global.Tree,List[NamesDefaults.this.global.Tree]] -->
<g id="node6" class="node">
<title>scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Tree],NamesDefaults.this.global.Tree,List[NamesDefaults.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-406.8701" rx="584.1404" ry="26.7407"/>
<text text-anchor="start" x="18361.614" y="-410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Tree],NamesDefaults.this.global.Tree,List[NamesDefaults.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Free type: %s (%s)&#39;) =&gt; ?{def format: ?} -->
<g id="node7" class="node">
<title>String(&#39;Free type: %s (%s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-478.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="18632.614" y="-482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Free type: %s (%s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Taggers.this.c.universe.definitions.AnyValTpe.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node8" class="node">
<title>Taggers.this.c.universe.definitions.AnyValTpe.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-550.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Taggers.this.c.universe.definitions.AnyValTpe.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- t.type =&gt; ?{def IS_OBJ: ?} -->
<g id="node9" class="node">
<title>t.type =&gt; ?{def IS_OBJ: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-622.8701" rx="118.5882" ry="26.7407"/>
<text text-anchor="start" x="18690.614" y="-626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">t.type =&gt; ?{def IS_OBJ: ?}</text>
<text text-anchor="middle" x="18766.614" y="-611.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;symbol&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node10" class="node">
<title>String(&#39;symbol&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-694.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;symbol&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-683.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- s.type =&gt; ?{def takeWhile: ?} -->
<g id="node11" class="node">
<title>s.type =&gt; ?{def takeWhile: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-766.8701" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="18683.114" y="-770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def takeWhile: ?}</text>
<text text-anchor="middle" x="18766.614" y="-755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- elsep.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node12" class="node">
<title>elsep.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-838.8701" rx="114.6026" ry="26.7407"/>
<text text-anchor="start" x="18693.614" y="-842.6701" font-family="Times,serif" font-size="14.00" fill="#000000">elsep.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Extractors.this.global.Tree],Extractors.this.global.Tree,List[Extractors.this.global.Tree]] -->
<g id="node13" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Extractors.this.global.Tree],Extractors.this.global.Tree,List[Extractors.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-910.8701" rx="523.0181" ry="26.7407"/>
<text text-anchor="start" x="18404.614" y="-914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Extractors.this.global.Tree],Extractors.this.global.Tree,List[Extractors.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.gen.global.SymTree],Delambdafy.this.global.gen.global.Type,List[Delambdafy.this.global.Type]] -->
<g id="node14" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.gen.global.SymTree],Delambdafy.this.global.gen.global.Type,List[Delambdafy.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-982.8701" rx="656.8044" ry="26.7407"/>
<text text-anchor="start" x="18310.114" y="-986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.gen.global.SymTree],Delambdafy.this.global.gen.global.Type,List[Delambdafy.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.reflect.ClassTag[Enclosures.this.universe.DefDef] -->
<g id="node15" class="node">
<title>scala.reflect.ClassTag[Enclosures.this.universe.DefDef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-1054.8701" rx="226.9626" ry="26.7407"/>
<text text-anchor="start" x="18614.114" y="-1058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Enclosures.this.universe.DefDef]</text>
<text text-anchor="middle" x="18766.614" y="-1043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 6ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Typers.this.global.Name, Option[Typers.this.global.ClassfileAnnotArg])],(Typers.this.global.Name, Typers.this.global.ClassfileAnnotArg),List[(Typers.this.global.Name, Typers.this.global.ClassfileAnnotArg)]] -->
<g id="node16" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Typers.this.global.Name, Option[Typers.this.global.ClassfileAnnotArg])],(Typers.this.global.Name, Typers.this.global.ClassfileAnnotArg),List[(Typers.this.global.Name, Typers.this.global.ClassfileAnnotArg)]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-1126.8701" rx="1003.2691" ry="26.7407"/>
<text text-anchor="start" x="18065.114" y="-1130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Typers.this.global.Name, Option[Typers.this.global.ClassfileAnnotArg])],(Typers.this.global.Name, Typers.this.global.ClassfileAnnotArg),List[(Typers.this.global.Name, Typers.this.global.ClassfileAnnotArg)]]</text>
<text text-anchor="middle" x="18766.614" y="-1115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- lookingFor.type =&gt; ?{def iterator: ?} -->
<g id="node17" class="node">
<title>lookingFor.type =&gt; ?{def iterator: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-1198.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="18664.114" y="-1202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">lookingFor.type =&gt; ?{def iterator: ?}</text>
<text text-anchor="middle" x="18766.614" y="-1187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- parts.type =&gt; ?{def toSeq: ?} -->
<g id="node18" class="node">
<title>parts.type =&gt; ?{def toSeq: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-1270.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="18685.114" y="-1274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">parts.type =&gt; ?{def toSeq: ?}</text>
<text text-anchor="middle" x="18766.614" y="-1259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.DOUBLEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node19" class="node">
<title>JavaScanners.this.global.javanme.DOUBLEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-1342.8701" rx="277.786" ry="26.7407"/>
<text text-anchor="start" x="18578.114" y="-1346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.DOUBLEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-1331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((List[Interface.this.global.Symbol], List[Interface.this.global.Tree])) =&gt; ?{def zipped: ?} -->
<g id="node20" class="node">
<title>((List[Interface.this.global.Symbol], List[Interface.this.global.Tree])) =&gt; ?{def zipped: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-1414.8701" rx="359.8347" ry="26.7407"/>
<text text-anchor="start" x="18520.114" y="-1418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((List[Interface.this.global.Symbol], List[Interface.this.global.Tree])) =&gt; ?{def zipped: ?}</text>
<text text-anchor="middle" x="18766.614" y="-1403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- command.settings.BooleanSetting =&gt; Boolean -->
<g id="node21" class="node">
<title>command.settings.BooleanSetting =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-1486.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="18638.614" y="-1490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">command.settings.BooleanSetting =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-1475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- indyParamTypes.type =&gt; ?{def tail: ?} -->
<g id="node22" class="node">
<title>indyParamTypes.type =&gt; ?{def tail: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-1558.8701" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="18659.114" y="-1562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">indyParamTypes.type =&gt; ?{def tail: ?}</text>
<text text-anchor="middle" x="18766.614" y="-1547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- SyntheticMethods.this.global.Tree =&gt; ?{def AND: ?} -->
<g id="node23" class="node">
<title>SyntheticMethods.this.global.Tree =&gt; ?{def AND: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-1630.8701" rx="220.7347" ry="26.7407"/>
<text text-anchor="start" x="18618.614" y="-1634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SyntheticMethods.this.global.Tree =&gt; ?{def AND: ?}</text>
<text text-anchor="middle" x="18766.614" y="-1619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;BAD ENTRY END: computed = %d, actual = %d, bytes = %s&#39;) =&gt; ?{def format: ?} -->
<g id="node24" class="node">
<title>String(&#39;BAD ENTRY END: computed = %d, actual = %d, bytes = %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-1702.8701" rx="371.8763" ry="26.7407"/>
<text text-anchor="start" x="18511.614" y="-1706.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;BAD ENTRY END: computed = %d, actual = %d, bytes = %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-1691.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Int -->
<g id="node25" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-1774.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="18664.114" y="-1778.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-1763.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 0ms</text>
</g>
<!-- (=&gt; Typers.this.global.Scope) =&gt; Typers.this.global.Type -->
<g id="node26" class="node">
<title>(=&gt; Typers.this.global.Scope) =&gt; Typers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-1846.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="18607.114" y="-1850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Typers.this.global.Scope) =&gt; Typers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-1835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; (() =&gt; Nothing, () =&gt; Nothing)) =&gt; Iterator[Char] -->
<g id="node27" class="node">
<title>(=&gt; (() =&gt; Nothing, () =&gt; Nothing)) =&gt; Iterator[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-1918.8701" rx="223.3915" ry="26.7407"/>
<text text-anchor="start" x="18616.614" y="-1922.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (() =&gt; Nothing, () =&gt; Nothing)) =&gt; Iterator[Char]</text>
<text text-anchor="middle" x="18766.614" y="-1907.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- variable.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node28" class="node">
<title>variable.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-1990.8701" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="18685.614" y="-1994.6701" font-family="Times,serif" font-size="14.00" fill="#000000">variable.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-1979.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[scala.tools.asm.Label]) =&gt; Array[String] -->
<g id="node29" class="node">
<title>(=&gt; Array[scala.tools.asm.Label]) =&gt; Array[String]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-2062.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="18623.614" y="-2066.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[scala.tools.asm.Label]) =&gt; Array[String]</text>
<text text-anchor="middle" x="18766.614" y="-2051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BCodeHelpers.this.bTypes.ClassInfo] =&gt; ?{def get: ?} -->
<g id="node30" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BCodeHelpers.this.bTypes.ClassInfo] =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-2134.8701" rx="491.3784" ry="26.7407"/>
<text text-anchor="start" x="18427.114" y="-2138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BCodeHelpers.this.bTypes.ClassInfo] =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-2123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- TypeDiagnostics.this.global.Tree =&gt; TypeDiagnostics.this.global.Type -->
<g id="node31" class="node">
<title>TypeDiagnostics.this.global.Tree =&gt; TypeDiagnostics.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-2206.8701" rx="286.2565" ry="26.7407"/>
<text text-anchor="start" x="18572.114" y="-2210.6701" font-family="Times,serif" font-size="14.00" fill="#000000">TypeDiagnostics.this.global.Tree =&gt; TypeDiagnostics.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-2195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.ValDef],Typers.this.global.Type with Product with Serializable,That] -->
<g id="node32" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.ValDef],Typers.this.global.Type with Product with Serializable,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-2278.8701" rx="523.9323" ry="26.7407"/>
<text text-anchor="start" x="18404.114" y="-2282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.ValDef],Typers.this.global.Type with Product with Serializable,That]</text>
<text text-anchor="middle" x="18766.614" y="-2267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- sam.internalName.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): ?} -->
<g id="node33" class="node">
<title>sam.internalName.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-2350.8701" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="18599.114" y="-2354.6701" font-family="Times,serif" font-size="14.00" fill="#000000">sam.internalName.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): ?}</text>
<text text-anchor="middle" x="18766.614" y="-2339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- r.callsite.callee.type =&gt; ?{def get: ?} -->
<g id="node34" class="node">
<title>r.callsite.callee.type =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-2422.8701" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="18664.614" y="-2426.6701" font-family="Times,serif" font-size="14.00" fill="#000000">r.callsite.callee.type =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-2411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[java.lang.reflect.Method] =&gt; ?{def find: ?} -->
<g id="node35" class="node">
<title>Array[java.lang.reflect.Method] =&gt; ?{def find: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-2494.8701" rx="205.5364" ry="26.7407"/>
<text text-anchor="start" x="18629.114" y="-2498.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[java.lang.reflect.Method] =&gt; ?{def find: ?}</text>
<text text-anchor="middle" x="18766.614" y="-2483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 10ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; CleanUp.this.global.analyzer.global.Symbol -->
<g id="node36" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; CleanUp.this.global.analyzer.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-2566.8701" rx="294.7271" ry="26.7407"/>
<text text-anchor="start" x="18566.114" y="-2570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; CleanUp.this.global.analyzer.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-2555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;\\$\\{\\s*([^}\\s]+)\\s*\\}&#39;) =&gt; ?{def r: ?} -->
<g id="node37" class="node">
<title>String(&#39;\\$\\{\\s*([^}\\s]+)\\s*\\}&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-2638.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="18646.114" y="-2642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;\$\{\s*([^}\s]+)\s*\}&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-2627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Macros.this.global.treeInfo.global.Tree] =&gt; scala.collection.GenTraversableOnce[Any] -->
<g id="node38" class="node">
<title>List[Macros.this.global.treeInfo.global.Tree] =&gt; scala.collection.GenTraversableOnce[Any]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-2710.8701" rx="367.8912" ry="26.7407"/>
<text text-anchor="start" x="18514.614" y="-2714.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Macros.this.global.treeInfo.global.Tree] =&gt; scala.collection.GenTraversableOnce[Any]</text>
<text text-anchor="middle" x="18766.614" y="-2699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- name.type =&gt; ?{def setterName: ?} -->
<g id="node39" class="node">
<title>name.type =&gt; ?{def setterName: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-2782.8701" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="18667.614" y="-2786.6701" font-family="Times,serif" font-size="14.00" fill="#000000">name.type =&gt; ?{def setterName: ?}</text>
<text text-anchor="middle" x="18766.614" y="-2771.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Iterable[Global.this.Symbol],String,That] -->
<g id="node40" class="node">
<title>scala.collection.generic.CanBuildFrom[Iterable[Global.this.Symbol],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-2854.8701" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="18544.114" y="-2858.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Iterable[Global.this.Symbol],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-2843.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Byte]) =&gt; Array[CNF.this.Clause] -->
<g id="node41" class="node">
<title>(=&gt; Array[Byte]) =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-2926.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="18641.614" y="-2930.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Byte]) =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-2915.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; String) =&gt; ?{def +=: ?} -->
<g id="node42" class="node">
<title>(=&gt; String) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-2998.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="18688.114" y="-3002.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; String) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-2987.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; SpecializeTypes.this.global.gen.global.Symbol -->
<g id="node43" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; SpecializeTypes.this.global.gen.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-3070.8701" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="18559.114" y="-3074.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; SpecializeTypes.this.global.gen.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-3059.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$19.type =&gt; ?{def nonEmpty: ?} -->
<g id="node44" class="node">
<title>x$19.type =&gt; ?{def nonEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-3142.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="18671.614" y="-3146.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$19.type =&gt; ?{def nonEmpty: ?}</text>
<text text-anchor="middle" x="18766.614" y="-3131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Any],GenUtils.this.global.Tree,List[GenUtils.this.global.Tree]] -->
<g id="node45" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Any],GenUtils.this.global.Tree,List[GenUtils.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-3214.8701" rx="427.5993" ry="26.7407"/>
<text text-anchor="start" x="18472.114" y="-3218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Any],GenUtils.this.global.Tree,List[GenUtils.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-3203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- SpecializeTypes.this.global.TermName =&gt; ?{def localName: ?} -->
<g id="node46" class="node">
<title>SpecializeTypes.this.global.TermName =&gt; ?{def localName: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-3286.8701" rx="261.7591" ry="26.7407"/>
<text text-anchor="start" x="18589.614" y="-3290.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SpecializeTypes.this.global.TermName =&gt; ?{def localName: ?}</text>
<text text-anchor="middle" x="18766.614" y="-3275.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Unit)) =&gt; scala.tools.nsc.io.Path -->
<g id="node47" class="node">
<title>((Nothing, Unit)) =&gt; scala.tools.nsc.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-3358.8701" rx="180.1247" ry="26.7407"/>
<text text-anchor="start" x="18647.114" y="-3362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit)) =&gt; scala.tools.nsc.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-3347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest],tools.nsc.backend.jvm.BackendReporting.CannotInlineWarning,That] -->
<g id="node48" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest],tools.nsc.backend.jvm.BackendReporting.CannotInlineWarning,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-3430.8701" rx="679.5592" ry="26.7407"/>
<text text-anchor="start" x="18294.114" y="-3434.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest],tools.nsc.backend.jvm.BackendReporting.CannotInlineWarning,That]</text>
<text text-anchor="middle" x="18766.614" y="-3419.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; Seq[Char] -->
<g id="node49" class="node">
<title>String =&gt; Seq[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-3502.8701" rx="91.4341" ry="26.7407"/>
<text text-anchor="start" x="18710.114" y="-3506.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; Seq[Char]</text>
<text text-anchor="middle" x="18766.614" y="-3491.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[Equals]],List[Equals],That] -->
<g id="node50" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[Equals]],List[Equals],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-3574.8701" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="18557.614" y="-3578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[Equals]],List[Equals],That]</text>
<text text-anchor="middle" x="18766.614" y="-3563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,scala.tools.nsc.backend.jvm.opt.InlineInfoAttribute] =&gt; ?{def get: ?} -->
<g id="node51" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,scala.tools.nsc.backend.jvm.opt.InlineInfoAttribute] =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-3646.8701" rx="546.6871" ry="26.7407"/>
<text text-anchor="start" x="18388.114" y="-3650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,scala.tools.nsc.backend.jvm.opt.InlineInfoAttribute] =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-3635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[(scala.tools.nsc.io.AbstractFile, scala.tools.nsc.io.AbstractFile)]) =&gt; ?{def ::=: ?} -->
<g id="node52" class="node">
<title>(=&gt; List[(scala.tools.nsc.io.AbstractFile, scala.tools.nsc.io.AbstractFile)]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-3718.8701" rx="362.9917" ry="26.7407"/>
<text text-anchor="start" x="18518.114" y="-3722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[(scala.tools.nsc.io.AbstractFile, scala.tools.nsc.io.AbstractFile)]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-3707.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Type],Typers.this.global.TermSymbol,That] -->
<g id="node53" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Type],Typers.this.global.TermSymbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-3790.8701" rx="427.5993" ry="26.7407"/>
<text text-anchor="start" x="18472.114" y="-3794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Type],Typers.this.global.TermSymbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-3779.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Tree],SpecializeTypes.this.global.Type,That] -->
<g id="node54" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Tree],SpecializeTypes.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-3862.8701" rx="465.9667" ry="26.7407"/>
<text text-anchor="start" x="18445.114" y="-3866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Tree],SpecializeTypes.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-3851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; ToolBoxGlobal.this.analyzer.global.Tree -->
<g id="node55" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; ToolBoxGlobal.this.analyzer.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-3934.8701" rx="318.3962" ry="26.7407"/>
<text text-anchor="start" x="18549.614" y="-3938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; ToolBoxGlobal.this.analyzer.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-3923.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; List[Typers.this.global.Tree] -->
<g id="node56" class="node">
<title>((Nothing, Nothing)) =&gt; List[Typers.this.global.Tree]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-4006.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-4010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; List[Typers.this.global.Tree]</text>
<text text-anchor="middle" x="18766.614" y="-3995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[BoxUnbox.this.postProcessor.bTypes.ClassBType] =&gt; ?{def ++: ?} -->
<g id="node57" class="node">
<title>Option[BoxUnbox.this.postProcessor.bTypes.ClassBType] =&gt; ?{def ++: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-4078.8701" rx="305.4403" ry="26.7407"/>
<text text-anchor="start" x="18558.614" y="-4082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[BoxUnbox.this.postProcessor.bTypes.ClassBType] =&gt; ?{def ++: ?}</text>
<text text-anchor="middle" x="18766.614" y="-4067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.util.Iterator[scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def asScala: ?} -->
<g id="node58" class="node">
<title>java.util.Iterator[scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-4150.8701" rx="311.6683" ry="26.7407"/>
<text text-anchor="start" x="18554.114" y="-4154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.Iterator[scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-4139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[java.util.Calendar] -->
<g id="node59" class="node">
<title>scala.reflect.ClassTag[java.util.Calendar]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-4222.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="18653.614" y="-4226.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[java.util.Calendar]</text>
<text text-anchor="middle" x="18766.614" y="-4211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Type,That] -->
<g id="node60" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-4294.8701" rx="478.9227" ry="26.7407"/>
<text text-anchor="start" x="18436.114" y="-4298.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-4283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[MatchOptimizer.this.TreeMaker]],List[List[MatchOptimizer.this.Tree]],That] -->
<g id="node61" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[MatchOptimizer.this.TreeMaker]],List[List[MatchOptimizer.this.Tree]],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-4366.8701" rx="503.4201" ry="26.7407"/>
<text text-anchor="start" x="18418.614" y="-4370.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[MatchOptimizer.this.TreeMaker]],List[List[MatchOptimizer.this.Tree]],That]</text>
<text text-anchor="middle" x="18766.614" y="-4355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[String] =&gt; ?{def filter: ?} -->
<g id="node62" class="node">
<title>Array[String] =&gt; ?{def filter: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-4438.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-4442.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def filter: ?}</text>
<text text-anchor="middle" x="18766.614" y="-4427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.Tree],Infer.this.global.Type,List[Infer.this.global.Type]] -->
<g id="node63" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.Tree],Infer.this.global.Type,List[Infer.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-4510.8701" rx="465.9667" ry="26.7407"/>
<text text-anchor="start" x="18445.114" y="-4514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.Tree],Infer.this.global.Type,List[Infer.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-4499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (scala.tools.asm.tree.MethodNode, scala.collection.immutable.Set[InlinerHeuristics.this.InlineRequest]) &lt;:&lt; (scala.tools.asm.tree.MethodNode, Set[InlinerHeuristics.this.InlineRequest]) -->
<g id="node64" class="node">
<title>(scala.tools.asm.tree.MethodNode, scala.collection.immutable.Set[InlinerHeuristics.this.InlineRequest]) &lt;:&lt; (scala.tools.asm.tree.MethodNode, Set[InlinerHeuristics.this.InlineRequest])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-4582.8701" rx="729.9685" ry="26.7407"/>
<text text-anchor="start" x="18258.614" y="-4586.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(scala.tools.asm.tree.MethodNode, scala.collection.immutable.Set[InlinerHeuristics.this.InlineRequest]) &lt;:&lt; (scala.tools.asm.tree.MethodNode, Set[InlinerHeuristics.this.InlineRequest])</text>
<text text-anchor="middle" x="18766.614" y="-4571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- a.type =&gt; ?{def AND: ?} -->
<g id="node65" class="node">
<title>a.type =&gt; ?{def AND: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-4654.8701" rx="111.0315" ry="26.7407"/>
<text text-anchor="start" x="18696.114" y="-4658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">a.type =&gt; ?{def AND: ?}</text>
<text text-anchor="middle" x="18766.614" y="-4643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Set[BoxUnbox.this.BoxCreation] =&gt; ?{def +=: ?} -->
<g id="node66" class="node">
<title>scala.collection.immutable.Set[BoxUnbox.this.BoxCreation] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-4726.8701" rx="313.4968" ry="26.7407"/>
<text text-anchor="start" x="18553.114" y="-4730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[BoxUnbox.this.BoxCreation] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-4715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TailCalls.this.global.TypeDef],TailCalls.this.global.Symbol,List[TailCalls.this.global.Symbol]] -->
<g id="node67" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TailCalls.this.global.TypeDef],TailCalls.this.global.Symbol,List[TailCalls.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-4798.8701" rx="552.915" ry="26.7407"/>
<text text-anchor="start" x="18383.614" y="-4802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TailCalls.this.global.TypeDef],TailCalls.this.global.Symbol,List[TailCalls.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-4787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- prevSym.type =&gt; ?{def DOT: ?} -->
<g id="node68" class="node">
<title>prevSym.type =&gt; ?{def DOT: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-4870.8701" rx="140.9288" ry="26.7407"/>
<text text-anchor="start" x="18675.114" y="-4874.6701" font-family="Times,serif" font-size="14.00" fill="#000000">prevSym.type =&gt; ?{def DOT: ?}</text>
<text text-anchor="middle" x="18766.614" y="-4859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- f.type =&gt; ?{def map: ?} -->
<g id="node69" class="node">
<title>f.type =&gt; ?{def map: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-4942.8701" rx="106.1321" ry="26.7407"/>
<text text-anchor="start" x="18699.614" y="-4946.6701" font-family="Times,serif" font-size="14.00" fill="#000000">f.type =&gt; ?{def map: ?}</text>
<text text-anchor="middle" x="18766.614" y="-4931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.TypeDef],Typers.this.global.Symbol,List[Typers.this.global.Symbol]] -->
<g id="node70" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.TypeDef],Typers.this.global.Symbol,List[Typers.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-5014.8701" rx="527.5033" ry="26.7407"/>
<text text-anchor="start" x="18401.614" y="-5018.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.TypeDef],Typers.this.global.Symbol,List[Typers.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-5003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- original.NameType =&gt; ?{def +: ?} -->
<g id="node71" class="node">
<title>original.NameType =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-5086.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="18670.114" y="-5090.6701" font-family="Times,serif" font-size="14.00" fill="#000000">original.NameType =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-5075.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.AnnotationInfo],String,List[String]] -->
<g id="node72" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.AnnotationInfo],String,List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-5158.8701" rx="423.6139" ry="26.7407"/>
<text text-anchor="start" x="18475.114" y="-5162.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.AnnotationInfo],String,List[String]]</text>
<text text-anchor="middle" x="18766.614" y="-5147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[AbsSettings.this.Setting],String,That] -->
<g id="node73" class="node">
<title>scala.collection.generic.CanBuildFrom[List[AbsSettings.this.Setting],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-5230.8701" rx="328.1951" ry="26.7407"/>
<text text-anchor="start" x="18542.614" y="-5234.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[AbsSettings.this.Setting],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-5219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Float -->
<g id="node74" class="node">
<title>(=&gt; Unit) =&gt; Float</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-5302.8701" rx="86.0347" ry="26.7407"/>
<text text-anchor="start" x="18713.614" y="-5306.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Float</text>
<text text-anchor="middle" x="18766.614" y="-5291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[UnCurry.this.global.Symbol],Boolean,That] -->
<g id="node75" class="node">
<title>scala.collection.generic.CanBuildFrom[List[UnCurry.this.global.Symbol],Boolean,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-5374.8701" rx="354.0212" ry="26.7407"/>
<text text-anchor="start" x="18524.114" y="-5378.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[UnCurry.this.global.Symbol],Boolean,That]</text>
<text text-anchor="middle" x="18766.614" y="-5363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- RefChecks.this.global.definitions.RepeatedParamClass.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node76" class="node">
<title>RefChecks.this.global.definitions.RepeatedParamClass.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-5446.8701" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="18557.614" y="-5450.6701" font-family="Times,serif" font-size="14.00" fill="#000000">RefChecks.this.global.definitions.RepeatedParamClass.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-5435.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SymbolTables.this.global.Tree],SymbolTables.this.global.Tree,List[SymbolTables.this.global.Tree]] -->
<g id="node77" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SymbolTables.this.global.Tree],SymbolTables.this.global.Tree,List[SymbolTables.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-5518.8701" rx="572.5131" ry="26.7407"/>
<text text-anchor="start" x="18369.614" y="-5522.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SymbolTables.this.global.Tree],SymbolTables.this.global.Tree,List[SymbolTables.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-5507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; NamesDefaults.this.global.Tree -->
<g id="node78" class="node">
<title>((Nothing, Nothing)) =&gt; NamesDefaults.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-5590.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="18610.614" y="-5594.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; NamesDefaults.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-5579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Byte] =&gt; ?{def mkString: ?} -->
<g id="node79" class="node">
<title>Array[Byte] =&gt; ?{def mkString: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-5662.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="18668.614" y="-5666.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Byte] =&gt; ?{def mkString: ?}</text>
<text text-anchor="middle" x="18766.614" y="-5651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Parsers.this.global.CompilationUnit -->
<g id="node80" class="node">
<title>((Nothing, Nothing)) =&gt; Parsers.this.global.CompilationUnit</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-5734.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="18599.614" y="-5738.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Parsers.this.global.CompilationUnit</text>
<text text-anchor="middle" x="18766.614" y="-5723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Pickler.this.global.AnnotationInfo -->
<g id="node81" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Pickler.this.global.AnnotationInfo</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-5806.8701" rx="255.0313" ry="26.7407"/>
<text text-anchor="start" x="18594.114" y="-5810.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Pickler.this.global.AnnotationInfo</text>
<text text-anchor="middle" x="18766.614" y="-5795.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;tT&#39;) =&gt; ?{def contains(x$1: ? &gt;: Char): Boolean} -->
<g id="node82" class="node">
<title>String(&#39;tT&#39;) =&gt; ?{def contains(x$1: ? &gt;: Char): Boolean}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-5878.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-5882.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;tT&#39;) =&gt; ?{def contains(x$1: ? &gt;: Char): Boolean}</text>
<text text-anchor="middle" x="18766.614" y="-5867.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[Infer.this.global.TypeVar]) =&gt; ?{def +=: ?} -->
<g id="node83" class="node">
<title>(=&gt; scala.collection.immutable.Set[Infer.this.global.TypeVar]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-5950.8701" rx="322.3814" ry="26.7407"/>
<text text-anchor="start" x="18546.614" y="-5954.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[Infer.this.global.TypeVar]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-5939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Set[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest] =&gt; scala.collection.TraversableOnce[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest] -->
<g id="node84" class="node">
<title>Set[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest] =&gt; scala.collection.TraversableOnce[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-6022.8701" rx="620.2653" ry="26.7407"/>
<text text-anchor="start" x="37730.8606" y="-6026.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Set[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest] =&gt; scala.collection.TraversableOnce[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest]</text>
<text text-anchor="middle" x="38161.3606" y="-6011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Array[Double] =&gt; Array[AnyRef] -->
<g id="node85" class="node">
<title>Array[Double] =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-6094.8701" rx="144.5" ry="26.7407"/>
<text text-anchor="start" x="18672.614" y="-6098.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Double] =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-6083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.ListBuffer[String],String,That] -->
<g id="node86" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.ListBuffer[String],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-6166.8701" rx="380.3469" ry="26.7407"/>
<text text-anchor="start" x="18505.614" y="-6170.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.ListBuffer[String],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-6155.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 14ms</text>
</g>
<!-- String(&#39;incompatible: %s does not match expected type %s&#39;) =&gt; ?{def format: ?} -->
<g id="node87" class="node">
<title>String(&#39;incompatible: %s does not match expected type %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-6238.8701" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="18544.114" y="-6242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;incompatible: %s does not match expected type %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-6227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[ContextErrors.this.global.Type] =&gt; scala.collection.TraversableLike[El1,Repr1] -->
<g id="node88" class="node">
<title>List[ContextErrors.this.global.Type] =&gt; scala.collection.TraversableLike[El1,Repr1]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-6310.8701" rx="339.3225" ry="26.7407"/>
<text text-anchor="start" x="18534.614" y="-6314.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[ContextErrors.this.global.Type] =&gt; scala.collection.TraversableLike[El1,Repr1]</text>
<text text-anchor="middle" x="18766.614" y="-6299.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Unit =&gt; java.io.PrintStream -->
<g id="node89" class="node">
<title>Unit =&gt; java.io.PrintStream</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-6382.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="18689.614" y="-6386.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; java.io.PrintStream</text>
<text text-anchor="middle" x="18766.614" y="-6371.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[StdAttachments.this.SuppressMacroExpansionAttachment.type] -->
<g id="node90" class="node">
<title>scala.reflect.ClassTag[StdAttachments.this.SuppressMacroExpansionAttachment.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-6454.8701" rx="347.379" ry="26.7407"/>
<text text-anchor="start" x="18529.114" y="-6458.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[StdAttachments.this.SuppressMacroExpansionAttachment.type]</text>
<text text-anchor="middle" x="18766.614" y="-6443.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 4ms</text>
</g>
<!-- (=&gt; TypeDiagnostics.this.global.AnnotationInfo) =&gt; TypeDiagnostics.this.global.Type -->
<g id="node91" class="node">
<title>(=&gt; TypeDiagnostics.this.global.AnnotationInfo) =&gt; TypeDiagnostics.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-6526.8701" rx="348.7073" ry="26.7407"/>
<text text-anchor="start" x="18528.114" y="-6530.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; TypeDiagnostics.this.global.AnnotationInfo) =&gt; TypeDiagnostics.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-6515.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Symbol],LambdaLift.this.global.Tree,That] -->
<g id="node92" class="node">
<title>scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Symbol],LambdaLift.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-6598.8701" rx="444.1261" ry="26.7407"/>
<text text-anchor="start" x="18460.614" y="-6602.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Symbol],LambdaLift.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-6587.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- MatchTranslation.this.global.gen.global.Tree =&gt; ?{def DOT: ?} -->
<g id="node93" class="node">
<title>MatchTranslation.this.global.gen.global.Tree =&gt; ?{def DOT: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-6670.8701" rx="260.8448" ry="26.7407"/>
<text text-anchor="start" x="18590.114" y="-6674.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchTranslation.this.global.gen.global.Tree =&gt; ?{def DOT: ?}</text>
<text text-anchor="middle" x="18766.614" y="-6659.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Symbol],Erasure.this.global.Apply,List[Erasure.this.global.Tree]] -->
<g id="node94" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Symbol],Erasure.this.global.Apply,List[Erasure.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-6742.8701" rx="512.8049" ry="26.7407"/>
<text text-anchor="start" x="18412.114" y="-6746.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Symbol],Erasure.this.global.Apply,List[Erasure.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-6731.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; java.io.Writer -->
<g id="node95" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; java.io.Writer</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-6814.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="18649.114" y="-6818.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; java.io.Writer</text>
<text text-anchor="middle" x="18766.614" y="-6803.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Iterable[Implicits.this.SearchResult],Implicits.this.SearchResult,That] -->
<g id="node96" class="node">
<title>scala.collection.generic.CanBuildFrom[Iterable[Implicits.this.SearchResult],Implicits.this.SearchResult,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-6886.8701" rx="434.7414" ry="26.7407"/>
<text text-anchor="start" x="18467.114" y="-6890.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Iterable[Implicits.this.SearchResult],Implicits.this.SearchResult,That]</text>
<text text-anchor="middle" x="18766.614" y="-6875.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- SyntheticMethods.this.global.definitions.Any_equals.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node97" class="node">
<title>SyntheticMethods.this.global.definitions.Any_equals.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-6958.8701" rx="299.6267" ry="26.7407"/>
<text text-anchor="start" x="18562.614" y="-6962.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SyntheticMethods.this.global.definitions.Any_equals.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-6947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Short]) =&gt; Array[Int] -->
<g id="node98" class="node">
<title>(=&gt; Array[Short]) =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-7030.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="18677.114" y="-7034.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Short]) =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-7019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- MatchCodeGen.this.global.Apply =&gt; ?{def APPLY: ?} -->
<g id="node99" class="node">
<title>MatchCodeGen.this.global.Apply =&gt; ?{def APPLY: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-7102.8701" rx="227.8769" ry="26.7407"/>
<text text-anchor="start" x="18613.614" y="-7106.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchCodeGen.this.global.Apply =&gt; ?{def APPLY: ?}</text>
<text text-anchor="middle" x="18766.614" y="-7091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;undetParam added: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node100" class="node">
<title>String(&#39;undetParam added: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-7174.8701" rx="214.9209" ry="26.7407"/>
<text text-anchor="start" x="18622.614" y="-7178.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;undetParam added: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-7163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- s0.type =&gt; ?{def drop: ?} -->
<g id="node101" class="node">
<title>s0.type =&gt; ?{def drop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-7246.8701" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="18695.614" y="-7250.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s0.type =&gt; ?{def drop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-7235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Contexts.this.global.Name -->
<g id="node102" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Contexts.this.global.Name</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-7318.8701" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="18598.614" y="-7322.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Contexts.this.global.Name</text>
<text text-anchor="middle" x="18766.614" y="-7307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Fields.this.global.AnnotationInfo =&gt; Fields.this.global.Type -->
<g id="node103" class="node">
<title>Fields.this.global.AnnotationInfo =&gt; Fields.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-7390.8701" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="18601.114" y="-7394.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Fields.this.global.AnnotationInfo =&gt; Fields.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-7379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Enclosures.this.universe.PackageDef] -->
<g id="node104" class="node">
<title>scala.reflect.ClassTag[Enclosures.this.universe.PackageDef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-7462.8701" rx="244.818" ry="26.7407"/>
<text text-anchor="start" x="18601.614" y="-7466.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Enclosures.this.universe.PackageDef]</text>
<text text-anchor="middle" x="18766.614" y="-7451.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- (=&gt; Unit) =&gt; RefChecks.this.global.Type -->
<g id="node105" class="node">
<title>(=&gt; Unit) =&gt; RefChecks.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-7534.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="18652.114" y="-7538.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; RefChecks.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-7523.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[T],T,That] -->
<g id="node106" class="node">
<title>scala.collection.generic.CanBuildFrom[List[T],T,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-7606.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="18616.114" y="-7610.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[T],T,That]</text>
<text text-anchor="middle" x="18766.614" y="-7595.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; Array[Double]) =&gt; Array[AnyRef] -->
<g id="node107" class="node">
<title>(=&gt; Array[Double]) =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-7678.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="18658.114" y="-7682.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Double]) =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-7667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- util.Properties.ScalaCompilerVersion.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node108" class="node">
<title>util.Properties.ScalaCompilerVersion.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-7750.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="18605.614" y="-7754.6701" font-family="Times,serif" font-size="14.00" fill="#000000">util.Properties.ScalaCompilerVersion.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-7739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- prefixParts.type =&gt; ?{def isEmpty: ?} -->
<g id="node109" class="node">
<title>prefixParts.type =&gt; ?{def isEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-7822.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="18661.114" y="-7826.6701" font-family="Times,serif" font-size="14.00" fill="#000000">prefixParts.type =&gt; ?{def isEmpty: ?}</text>
<text text-anchor="middle" x="18766.614" y="-7811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- BCodeHelpers.this.global.nme.value.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node110" class="node">
<title>BCodeHelpers.this.global.nme.value.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-7894.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="18607.114" y="-7898.6701" font-family="Times,serif" font-size="14.00" fill="#000000">BCodeHelpers.this.global.nme.value.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-7883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; java.util.Map[_ &lt;: K, _ &lt;: V] -->
<g id="node111" class="node">
<title>Unit =&gt; java.util.Map[_ &lt;: K, _ &lt;: V]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-7966.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="18661.114" y="-7970.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; java.util.Map[_ &lt;: K, _ &lt;: V]</text>
<text text-anchor="middle" x="18766.614" y="-7955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Erasure.this.global.Tree] =&gt; ?{def ::=: ?} -->
<g id="node112" class="node">
<title>List[Erasure.this.global.Tree] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-8038.8701" rx="191.752" ry="26.7407"/>
<text text-anchor="start" x="18639.114" y="-8042.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Erasure.this.global.Tree] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-8027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Any] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node113" class="node">
<title>List[Any] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-8110.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="18617.614" y="-8114.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Any] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-8099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; java.io.InputStream -->
<g id="node114" class="node">
<title>(=&gt; Unit) =&gt; java.io.InputStream</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-8182.8701" rx="142.6713" ry="26.7407"/>
<text text-anchor="start" x="18673.614" y="-8186.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; java.io.InputStream</text>
<text text-anchor="middle" x="18766.614" y="-8171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Any, String)],String,That] -->
<g id="node115" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Any, String)],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-8254.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="18571.114" y="-8258.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Any, String)],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-8243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[SymbolicXMLBuilder.this.global.Tree],SymbolicXMLBuilder.this.global.Tree,That] -->
<g id="node116" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[SymbolicXMLBuilder.this.global.Tree],SymbolicXMLBuilder.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-8326.8701" rx="513.2191" ry="26.7407"/>
<text text-anchor="start" x="18411.614" y="-8330.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[SymbolicXMLBuilder.this.global.Tree],SymbolicXMLBuilder.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-8315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (String, Seq[java.nio.file.Path]) &lt;:&lt; (String, Seq[java.nio.file.Path]) -->
<g id="node117" class="node">
<title>(String, Seq[java.nio.file.Path]) &lt;:&lt; (String, Seq[java.nio.file.Path])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-8398.8701" rx="274.2149" ry="26.7407"/>
<text text-anchor="start" x="18580.614" y="-8402.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(String, Seq[java.nio.file.Path]) &lt;:&lt; (String, Seq[java.nio.file.Path])</text>
<text text-anchor="middle" x="18766.614" y="-8387.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; String -->
<g id="node118" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-8470.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="18655.114" y="-8474.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-8459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type)],String,That] -->
<g id="node119" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type)],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-8542.8701" rx="514.1333" ry="26.7407"/>
<text text-anchor="start" x="18411.114" y="-8546.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type)],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-8531.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest],scala.tools.asm.tree.MethodNode,That] -->
<g id="node120" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest],scala.tools.asm.tree.MethodNode,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-8614.8701" rx="665.275" ry="26.7407"/>
<text text-anchor="start" x="18304.114" y="-8618.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest],scala.tools.asm.tree.MethodNode,That]</text>
<text text-anchor="middle" x="18766.614" y="-8603.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Unit, Unit)) =&gt; Macros.this.global.FlagSet -->
<g id="node121" class="node">
<title>((Nothing, Unit, Unit)) =&gt; Macros.this.global.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-8686.8701" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="18618.114" y="-8690.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit, Unit)) =&gt; Macros.this.global.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-8675.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;tpe %s is an unresolved spliceable type&#39;) =&gt; ?{def format: ?} -->
<g id="node122" class="node">
<title>String(&#39;tpe %s is an unresolved spliceable type&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-8758.8701" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="18578.614" y="-8762.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;tpe %s is an unresolved spliceable type&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-8747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[TreeAndTypeAnalysis.this.global.Symbol]],List[TreeAndTypeAnalysis.this.global.Symbol],That] -->
<g id="node123" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[TreeAndTypeAnalysis.this.global.Symbol]],List[TreeAndTypeAnalysis.this.global.Symbol],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-8830.8701" rx="580.5693" ry="26.7407"/>
<text text-anchor="start" x="18364.114" y="-8834.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[TreeAndTypeAnalysis.this.global.Symbol]],List[TreeAndTypeAnalysis.this.global.Symbol],That]</text>
<text text-anchor="middle" x="18766.614" y="-8819.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- samNameDesc.type =&gt; ?{def span: ?} -->
<g id="node124" class="node">
<title>samNameDesc.type =&gt; ?{def span: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-8902.8701" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="18660.114" y="-8906.6701" font-family="Times,serif" font-size="14.00" fill="#000000">samNameDesc.type =&gt; ?{def span: ?}</text>
<text text-anchor="middle" x="18766.614" y="-8891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Char =&gt; ?{def isLetter: ?} -->
<g id="node125" class="node">
<title>Char =&gt; ?{def isLetter: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-8974.8701" rx="114.6026" ry="26.7407"/>
<text text-anchor="start" x="18693.614" y="-8978.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Char =&gt; ?{def isLetter: ?}</text>
<text text-anchor="middle" x="18766.614" y="-8963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- clazz.NameType =&gt; ?{def +: ?} -->
<g id="node126" class="node">
<title>clazz.NameType =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-9046.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="18677.114" y="-9050.6701" font-family="Times,serif" font-size="14.00" fill="#000000">clazz.NameType =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-9035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; scala.tools.nsc.GenericRunnerSettings -->
<g id="node127" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; scala.tools.nsc.GenericRunnerSettings</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-9118.8701" rx="261.7591" ry="26.7407"/>
<text text-anchor="start" x="18589.614" y="-9122.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; scala.tools.nsc.GenericRunnerSettings</text>
<text text-anchor="middle" x="18766.614" y="-9107.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[Int],Byte,Array[Byte]] -->
<g id="node128" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[Int],Byte,Array[Byte]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-9190.8701" rx="277.786" ry="26.7407"/>
<text text-anchor="start" x="18578.114" y="-9194.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[Int],Byte,Array[Byte]]</text>
<text text-anchor="middle" x="18766.614" y="-9179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[Byte] -->
<g id="node780" class="node">
<title>scala.reflect.ClassTag[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-9190.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="38084.3606" y="-9194.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Byte]</text>
<text text-anchor="middle" x="38161.3606" y="-9179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[Int],Byte,Array[Byte]]&#45;&gt;scala.reflect.ClassTag[Byte] -->
<g id="edge6" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[Int],Byte,Array[Byte]]&#45;&gt;scala.reflect.ClassTag[Byte]</title>
<path fill="none" stroke="#000000" d="M19044.5104,-9190.8701C21292.8158,-9190.8701 36464.0704,-9190.8701 38030.7316,-9190.8701"/>
<polygon fill="#000000" stroke="#000000" points="38030.8833,-9194.3702 38040.8833,-9190.8701 38030.8832,-9187.3702 38030.8833,-9194.3702"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(MatchOptimization.this.global.Symbol, List[SwitchEmission.this.TreeMaker])],Option[MatchOptimization.this.global.CaseDef],That] -->
<g id="node129" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(MatchOptimization.this.global.Symbol, List[SwitchEmission.this.TreeMaker])],Option[MatchOptimization.this.global.CaseDef],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-9262.8701" rx="709.4563" ry="26.7407"/>
<text text-anchor="start" x="18273.114" y="-9266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(MatchOptimization.this.global.Symbol, List[SwitchEmission.this.TreeMaker])],Option[MatchOptimization.this.global.CaseDef],That]</text>
<text text-anchor="middle" x="18766.614" y="-9251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(scala.reflect.internal.util.Position, (String, String))],(scala.reflect.internal.util.Position, String),List[(Global.this.Position, String)]] -->
<g id="node130" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(scala.reflect.internal.util.Position, (String, String))],(scala.reflect.internal.util.Position, String),List[(Global.this.Position, String)]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-9334.8701" rx="687.1156" ry="26.7407"/>
<text text-anchor="start" x="18288.614" y="-9338.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(scala.reflect.internal.util.Position, (String, String))],(scala.reflect.internal.util.Position, String),List[(Global.this.Position, String)]]</text>
<text text-anchor="middle" x="18766.614" y="-9323.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- vdef.name.type =&gt; ?{def dropLocal: ?} -->
<g id="node131" class="node">
<title>vdef.name.type =&gt; ?{def dropLocal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-9406.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="18657.114" y="-9410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">vdef.name.type =&gt; ?{def dropLocal: ?}</text>
<text text-anchor="middle" x="18766.614" y="-9395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; BCodeHelpers.this.global.AnnotationInfo -->
<g id="node132" class="node">
<title>((Nothing, Nothing)) =&gt; BCodeHelpers.this.global.AnnotationInfo</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-9478.8701" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="18583.614" y="-9482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; BCodeHelpers.this.global.AnnotationInfo</text>
<text text-anchor="middle" x="18766.614" y="-9467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[(scala.tools.nsc.util.ClassPath, scala.tools.nsc.util.ClassPath)] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node133" class="node">
<title>Option[(scala.tools.nsc.util.ClassPath, scala.tools.nsc.util.ClassPath)] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-9550.8701" rx="449.9399" ry="26.7407"/>
<text text-anchor="start" x="18456.614" y="-9554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[(scala.tools.nsc.util.ClassPath, scala.tools.nsc.util.ClassPath)] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-9539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; String -->
<g id="node134" class="node">
<title>(Any =&gt; Nothing) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-9622.8701" rx="123.0732" ry="26.7407"/>
<text text-anchor="start" x="18687.614" y="-9626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-9611.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Erasure.this.global.TypeParamVarargsAttachment] -->
<g id="node135" class="node">
<title>scala.reflect.ClassTag[Erasure.this.global.TypeParamVarargsAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-9694.8701" rx="296.9697" ry="26.7407"/>
<text text-anchor="start" x="18564.614" y="-9698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Erasure.this.global.TypeParamVarargsAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-9683.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- matchEnd.type =&gt; ?{def APPLY: ?} -->
<g id="node136" class="node">
<title>matchEnd.type =&gt; ?{def APPLY: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-9766.8701" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="18664.614" y="-9770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">matchEnd.type =&gt; ?{def APPLY: ?}</text>
<text text-anchor="middle" x="18766.614" y="-9755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; scala.tools.nsc.Settings -->
<g id="node137" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; scala.tools.nsc.Settings</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-9838.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="18598.114" y="-9842.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; scala.tools.nsc.Settings</text>
<text text-anchor="middle" x="18766.614" y="-9827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Seq[org.apache.tools.ant.types.Commandline.Argument]) =&gt; ?{def :+=: ?} -->
<g id="node138" class="node">
<title>(=&gt; Seq[org.apache.tools.ant.types.Commandline.Argument]) =&gt; ?{def :+=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-9910.8701" rx="322.3814" ry="26.7407"/>
<text text-anchor="start" x="18546.614" y="-9914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Seq[org.apache.tools.ant.types.Commandline.Argument]) =&gt; ?{def :+=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-9899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[String] =&gt; ?{def foldLeft: ?} -->
<g id="node139" class="node">
<title>Array[String] =&gt; ?{def foldLeft: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-9982.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="18668.614" y="-9986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def foldLeft: ?}</text>
<text text-anchor="middle" x="18766.614" y="-9971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.TypeTree,List[Typers.this.global.Tree]] -->
<g id="node140" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.TypeTree,List[Typers.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-10054.8701" rx="517.7043" ry="26.7407"/>
<text text-anchor="start" x="18408.614" y="-10058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.TypeTree,List[Typers.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-10043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Constructors.this.global.Symbol],Constructors.this.global.Tree,That] -->
<g id="node141" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Constructors.this.global.Symbol],Constructors.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-10126.8701" rx="449.0256" ry="26.7407"/>
<text text-anchor="start" x="18457.114" y="-10130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Constructors.this.global.Symbol],Constructors.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-10115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Symbol],Erasure.this.global.Ident,That] -->
<g id="node142" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Symbol],Erasure.this.global.Ident,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-10198.8701" rx="412.4867" ry="26.7407"/>
<text text-anchor="start" x="18483.114" y="-10202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Symbol],Erasure.this.global.Ident,That]</text>
<text text-anchor="middle" x="18766.614" y="-10187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[(MatchAnalyzer.this.Sym, Boolean)],MatchAnalyzer.this.Const,Seq[MatchAnalyzer.this.Const]] -->
<g id="node143" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[(MatchAnalyzer.this.Sym, Boolean)],MatchAnalyzer.this.Const,Seq[MatchAnalyzer.this.Const]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-10270.8701" rx="558.7287" ry="26.7407"/>
<text text-anchor="start" x="18379.614" y="-10274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[(MatchAnalyzer.this.Sym, Boolean)],MatchAnalyzer.this.Const,Seq[MatchAnalyzer.this.Const]]</text>
<text text-anchor="middle" x="18766.614" y="-10259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Symbol -->
<g id="node144" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-10342.8701" rx="299.2124" ry="26.7407"/>
<text text-anchor="start" x="18563.114" y="-10346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-10331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[T]],List[T],List[List[T]]] -->
<g id="node145" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[T]],List[T],List[List[T]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-10414.8701" rx="297.884" ry="26.7407"/>
<text text-anchor="start" x="18564.114" y="-10418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[T]],List[T],List[List[T]]]</text>
<text text-anchor="middle" x="18766.614" y="-10403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Symbol],BCodeHelpers.this.global.Symbol,List[BCodeHelpers.this.global.Symbol]] -->
<g id="node146" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Symbol],BCodeHelpers.this.global.Symbol,List[BCodeHelpers.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-10486.8701" rx="612.209" ry="26.7407"/>
<text text-anchor="start" x="18341.614" y="-10490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Symbol],BCodeHelpers.this.global.Symbol,List[BCodeHelpers.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-10475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- tpname.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node147" class="node">
<title>tpname.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-10558.8701" rx="123.9879" ry="26.7407"/>
<text text-anchor="start" x="18687.114" y="-10562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">tpname.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-10547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- String(&#39;methodName&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node148" class="node">
<title>String(&#39;methodName&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-10630.8701" rx="161.441" ry="26.7407"/>
<text text-anchor="start" x="18660.614" y="-10634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;methodName&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-10619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.OptimizerWarning,Inliner.this.postProcessor.inlinerHeuristics.postProcessor.callGraph.Callee] =&gt; ?{def get: ?} -->
<g id="node149" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.OptimizerWarning,Inliner.this.postProcessor.inlinerHeuristics.postProcessor.callGraph.Callee] =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-10702.8701" rx="634.0496" ry="26.7407"/>
<text text-anchor="start" x="18326.114" y="-10706.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.OptimizerWarning,Inliner.this.postProcessor.inlinerHeuristics.postProcessor.callGraph.Callee] =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-10691.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.reflect.io.Path) =&gt; tools.nsc.io.File -->
<g id="node150" class="node">
<title>(=&gt; scala.reflect.io.Path) =&gt; tools.nsc.io.File</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-10774.8701" rx="186.8525" ry="26.7407"/>
<text text-anchor="start" x="18642.614" y="-10778.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.reflect.io.Path) =&gt; tools.nsc.io.File</text>
<text text-anchor="middle" x="18766.614" y="-10763.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.treeInfo.global.Tree,That] -->
<g id="node151" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.treeInfo.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-10846.8701" rx="453.011" ry="26.7407"/>
<text text-anchor="start" x="18454.114" y="-10850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.treeInfo.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-10835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; SpecializeTypes.this.global.Tree) =&gt; SpecializeTypes.this.global.Type -->
<g id="node152" class="node">
<title>(=&gt; SpecializeTypes.this.global.Tree) =&gt; SpecializeTypes.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-10918.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="18560.614" y="-10922.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; SpecializeTypes.this.global.Tree) =&gt; SpecializeTypes.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-10907.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- packageDirName.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): Seq[String]} -->
<g id="node153" class="node">
<title>packageDirName.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): Seq[String]}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-10990.8701" rx="284.0141" ry="26.7407"/>
<text text-anchor="start" x="18573.614" y="-10994.6701" font-family="Times,serif" font-size="14.00" fill="#000000">packageDirName.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): Seq[String]}</text>
<text text-anchor="middle" x="18766.614" y="-10979.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def format: ?} -->
<g id="node154" class="node">
<title>String =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-11062.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="18692.614" y="-11066.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-11051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- String =&gt; ?{def contains(x$1: ? &gt;: Char): Boolean} -->
<g id="node155" class="node">
<title>String =&gt; ?{def contains(x$1: ? &gt;: Char): Boolean}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-11134.8701" rx="212.2642" ry="26.7407"/>
<text text-anchor="start" x="18624.614" y="-11138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def contains(x$1: ? &gt;: Char): Boolean}</text>
<text text-anchor="middle" x="18766.614" y="-11123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.tools.asm.Handle] -->
<g id="node156" class="node">
<title>scala.reflect.ClassTag[scala.tools.asm.Handle]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-11206.8701" rx="191.752" ry="26.7407"/>
<text text-anchor="start" x="18639.114" y="-11210.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.tools.asm.Handle]</text>
<text text-anchor="middle" x="18766.614" y="-11195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- argPos.type =&gt; ?{def indexWhere: ?} -->
<g id="node157" class="node">
<title>argPos.type =&gt; ?{def indexWhere: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-11278.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="18662.114" y="-11282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">argPos.type =&gt; ?{def indexWhere: ?}</text>
<text text-anchor="middle" x="18766.614" y="-11267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Iterable[java.util.jar.JarEntry],(String, Option[String]),That] -->
<g id="node158" class="node">
<title>scala.collection.generic.CanBuildFrom[Iterable[java.util.jar.JarEntry],(String, Option[String]),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-11350.8701" rx="397.2881" ry="26.7407"/>
<text text-anchor="start" x="18493.614" y="-11354.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Iterable[java.util.jar.JarEntry],(String, Option[String]),That]</text>
<text text-anchor="middle" x="18766.614" y="-11339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- calleeParamTypes.type =&gt; ?{def isEmpty: ?} -->
<g id="node159" class="node">
<title>calleeParamTypes.type =&gt; ?{def isEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-11422.8701" rx="188.5952" ry="26.7407"/>
<text text-anchor="start" x="18641.114" y="-11426.6701" font-family="Times,serif" font-size="14.00" fill="#000000">calleeParamTypes.type =&gt; ?{def isEmpty: ?}</text>
<text text-anchor="middle" x="18766.614" y="-11411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;alias for \&#39;%s\&#39;&#39;) =&gt; ?{def format: ?} -->
<g id="node160" class="node">
<title>String(&#39;alias for \&#39;%s\&#39;&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-11494.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="18650.614" y="-11498.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;alias for &#39;%s&#39;&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-11483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Development.this.id.type =&gt; ?{def compare: ?} -->
<g id="node161" class="node">
<title>Development.this.id.type =&gt; ?{def compare: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-11566.8701" rx="197.9798" ry="26.7407"/>
<text text-anchor="start" x="18634.614" y="-11570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Development.this.id.type =&gt; ?{def compare: ?}</text>
<text text-anchor="middle" x="18766.614" y="-11555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[List[scala.tools.nsc.SubComponent]] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node162" class="node">
<title>Option[List[scala.tools.nsc.SubComponent]] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-11638.8701" rx="354.9352" ry="26.7407"/>
<text text-anchor="start" x="18523.614" y="-11642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[List[scala.tools.nsc.SubComponent]] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-11627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[tools.nsc.backend.jvm.BTypes.InternalName,BackendUtils.this.postProcessor.bTypes.coreBTypes.bTypes.MethodNameAndType],(tools.nsc.backend.jvm.BTypes.InternalName, String),That] -->
<g id="node163" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[tools.nsc.backend.jvm.BTypes.InternalName,BackendUtils.this.postProcessor.bTypes.coreBTypes.bTypes.MethodNameAndType],(tools.nsc.backend.jvm.BTypes.InternalName, String),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-11710.8701" rx="1035.8229" ry="26.7407"/>
<text text-anchor="start" x="18042.114" y="-11714.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[tools.nsc.backend.jvm.BTypes.InternalName,BackendUtils.this.postProcessor.bTypes.coreBTypes.bTypes.MethodNameAndType],(tools.nsc.backend.jvm.BTypes.InternalName, String),That]</text>
<text text-anchor="middle" x="18766.614" y="-11699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Validators.this.global.Symbol] =&gt; Validators.this.global.Type -->
<g id="node164" class="node">
<title>List[Validators.this.global.Symbol] =&gt; Validators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-11782.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="18583.114" y="-11786.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Validators.this.global.Symbol] =&gt; Validators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-11771.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; JavaParsers.this.global.Type -->
<g id="node165" class="node">
<title>(=&gt; Unit) =&gt; JavaParsers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-11854.8701" rx="176.1392" ry="26.7407"/>
<text text-anchor="start" x="18650.114" y="-11858.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; JavaParsers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-11843.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Tree],MatchApproximation.this.global.Symbol,That] -->
<g id="node166" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Tree],MatchApproximation.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-11926.8701" rx="519.0328" ry="26.7407"/>
<text text-anchor="start" x="18407.614" y="-11930.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Tree],MatchApproximation.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-11915.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def r: ?} -->
<g id="node167" class="node">
<title>String =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-11998.8701" rx="93.1765" ry="26.7407"/>
<text text-anchor="start" x="18708.614" y="-12002.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-11987.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- Array[Short] =&gt; Array[CNF.this.Clause] -->
<g id="node168" class="node">
<title>Array[Short] =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-12070.8701" rx="170.3255" ry="26.7407"/>
<text text-anchor="start" x="18654.114" y="-12074.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Short] =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-12059.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (CNF.this.Sym, Int) &lt;:&lt; (CNF.this.Sym, Int) -->
<g id="node169" class="node">
<title>(CNF.this.Sym, Int) &lt;:&lt; (CNF.this.Sym, Int)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-12142.8701" rx="187.2667" ry="26.7407"/>
<text text-anchor="start" x="18642.114" y="-12146.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(CNF.this.Sym, Int) &lt;:&lt; (CNF.this.Sym, Int)</text>
<text text-anchor="middle" x="18766.614" y="-12131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Traversable[scala.tools.nsc.util.ClassPath] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node170" class="node">
<title>Traversable[scala.tools.nsc.util.ClassPath] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-12214.8701" rx="347.379" ry="26.7407"/>
<text text-anchor="start" x="18529.114" y="-12218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Traversable[scala.tools.nsc.util.ClassPath] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-12203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;\\$\\{\\s*(.*?)\\s*\\}&#39;) =&gt; ?{def r: ?} -->
<g id="node171" class="node">
<title>String(&#39;\\$\\{\\s*(.*?)\\s*\\}&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-12286.8701" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="18657.614" y="-12290.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;\$\{\s*(.*?)\s*\}&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-12275.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Ordering[String] -->
<g id="node172" class="node">
<title>Ordering[String]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-12358.8701" rx="75.8212" ry="26.7407"/>
<text text-anchor="start" x="38115.8606" y="-12362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Ordering[String]</text>
<text text-anchor="middle" x="38161.3606" y="-12347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scala.reflect.ClassTag[Erasure.this.OriginalTreeAttachment] -->
<g id="node173" class="node">
<title>scala.reflect.ClassTag[Erasure.this.OriginalTreeAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-12430.8701" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="18601.114" y="-12434.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Erasure.this.OriginalTreeAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-12419.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Double -->
<g id="node174" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Double</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-12502.8701" rx="173.8966" ry="26.7407"/>
<text text-anchor="start" x="18651.614" y="-12506.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Double</text>
<text text-anchor="middle" x="18766.614" y="-12491.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Int],scala.tools.asm.tree.AbstractInsnNode,Set[scala.tools.asm.tree.AbstractInsnNode]] -->
<g id="node175" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Int],scala.tools.asm.tree.AbstractInsnNode,Set[scala.tools.asm.tree.AbstractInsnNode]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-12574.8701" rx="624.2506" ry="26.7407"/>
<text text-anchor="start" x="18333.114" y="-12578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Int],scala.tools.asm.tree.AbstractInsnNode,Set[scala.tools.asm.tree.AbstractInsnNode]]</text>
<text text-anchor="middle" x="18766.614" y="-12563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[Typers.this.global.Type]],Typers.this.global.Type,List[Typers.this.global.Type]] -->
<g id="node176" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[Typers.this.global.Type]],Typers.this.global.Type,List[Typers.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-12646.8701" rx="512.8049" ry="26.7407"/>
<text text-anchor="start" x="18412.114" y="-12650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[Typers.this.global.Type]],Typers.this.global.Type,List[Typers.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-12635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; scala.tools.nsc.typechecker.Analyzer.packageObjects.global.Symbol -->
<g id="node177" class="node">
<title>((Nothing, Nothing)) =&gt; scala.tools.nsc.typechecker.Analyzer.packageObjects.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-12718.8701" rx="374.119" ry="26.7407"/>
<text text-anchor="start" x="18510.114" y="-12722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; scala.tools.nsc.typechecker.Analyzer.packageObjects.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-12707.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.typechecker.Fingerprint],Int,That] -->
<g id="node178" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.typechecker.Fingerprint],Int,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-12790.8701" rx="373.2048" ry="26.7407"/>
<text text-anchor="start" x="18510.614" y="-12794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.typechecker.Fingerprint],Int,That]</text>
<text text-anchor="middle" x="18766.614" y="-12779.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[MatchApproximator.this.TreeMaker]],List[MatchApproximator.this.Test],That] -->
<g id="node179" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[MatchApproximator.this.TreeMaker]],List[MatchApproximator.this.Test],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-12862.8701" rx="511.8906" ry="26.7407"/>
<text text-anchor="start" x="18412.614" y="-12866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[MatchApproximator.this.TreeMaker]],List[MatchApproximator.this.Test],That]</text>
<text text-anchor="middle" x="18766.614" y="-12851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; String) =&gt; Long -->
<g id="node180" class="node">
<title>(=&gt; String) =&gt; Long</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-12934.8701" rx="92.7622" ry="26.7407"/>
<text text-anchor="start" x="18709.114" y="-12938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; String) =&gt; Long</text>
<text text-anchor="middle" x="18766.614" y="-12923.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Duplicators.this.global.Ident],Duplicators.this.global.Symbol,List[Duplicators.this.global.Symbol]] -->
<g id="node181" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Duplicators.this.global.Ident],Duplicators.this.global.Symbol,List[Duplicators.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-13006.8701" rx="567.1993" ry="26.7407"/>
<text text-anchor="start" x="18373.614" y="-13010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Duplicators.this.global.Ident],Duplicators.this.global.Symbol,List[Duplicators.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-12995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; java.io.InputStream -->
<g id="node182" class="node">
<title>Unit =&gt; java.io.InputStream</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-13078.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="18688.114" y="-13082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; java.io.InputStream</text>
<text text-anchor="middle" x="18766.614" y="-13067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- argsArray.type =&gt; ?{def indices: ?} -->
<g id="node183" class="node">
<title>argsArray.type =&gt; ?{def indices: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-13150.8701" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="18667.614" y="-13154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">argsArray.type =&gt; ?{def indices: ?}</text>
<text text-anchor="middle" x="18766.614" y="-13139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; BCodeSkelBuilder.this.global.Symbol -->
<g id="node184" class="node">
<title>((Nothing, Nothing)) =&gt; BCodeSkelBuilder.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-13222.8701" rx="257.2738" ry="26.7407"/>
<text text-anchor="start" x="18592.614" y="-13226.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; BCodeSkelBuilder.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-13211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((BTypesFromSymbols.this.global.Position, String)) =&gt; String -->
<g id="node185" class="node">
<title>((BTypesFromSymbols.this.global.Position, String)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-13294.8701" rx="255.0313" ry="26.7407"/>
<text text-anchor="start" x="18594.114" y="-13298.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((BTypesFromSymbols.this.global.Position, String)) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-13283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[StackTraceElement] -->
<g id="node186" class="node">
<title>scala.reflect.ClassTag[StackTraceElement]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-13366.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="18649.114" y="-13370.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[StackTraceElement]</text>
<text text-anchor="middle" x="18766.614" y="-13355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[Typers.this.global.Symbol]) =&gt; ?{def ++=: ?} -->
<g id="node187" class="node">
<title>(=&gt; List[Typers.this.global.Symbol]) =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-13438.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="18613.114" y="-13442.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Typers.this.global.Symbol]) =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-13427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- maybeOK.type =&gt; ?{def filter: ?} -->
<g id="node188" class="node">
<title>maybeOK.type =&gt; ?{def filter: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-13510.8701" rx="144.5" ry="26.7407"/>
<text text-anchor="start" x="18672.614" y="-13514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">maybeOK.type =&gt; ?{def filter: ?}</text>
<text text-anchor="middle" x="18766.614" y="-13499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.TraversableOnce[B] =&gt; Traversable[?B] -->
<g id="node189" class="node">
<title>scala.collection.TraversableOnce[B] =&gt; Traversable[?B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-13582.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-13586.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.TraversableOnce[B] =&gt; Traversable[?B]</text>
<text text-anchor="middle" x="18766.614" y="-13571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Unit, Any =&gt; Nothing)) =&gt; CompilerCommand.this.Setting =&gt; Boolean -->
<g id="node190" class="node">
<title>((Nothing, Unit, Any =&gt; Nothing)) =&gt; CompilerCommand.this.Setting =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-13654.8701" rx="337.08" ry="26.7407"/>
<text text-anchor="start" x="18536.114" y="-13658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit, Any =&gt; Nothing)) =&gt; CompilerCommand.this.Setting =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-13643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; Namers.this.global.AnnotationInfo) =&gt; Namers.this.global.Type -->
<g id="node191" class="node">
<title>(=&gt; Namers.this.global.AnnotationInfo) =&gt; Namers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-13726.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="18577.114" y="-13730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Namers.this.global.AnnotationInfo) =&gt; Namers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-13715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Implicits.this.ImplicitInfo -->
<g id="node192" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Implicits.this.ImplicitInfo</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-13798.8701" rx="246.1463" ry="26.7407"/>
<text text-anchor="start" x="18600.614" y="-13802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Implicits.this.ImplicitInfo</text>
<text text-anchor="middle" x="18766.614" y="-13787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Type],Erasure.this.global.Type,List[Erasure.this.global.Type]] -->
<g id="node193" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Type],Erasure.this.global.Type,List[Erasure.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-13870.8701" rx="499.849" ry="26.7407"/>
<text text-anchor="start" x="18421.114" y="-13874.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Type],Erasure.this.global.Type,List[Erasure.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-13859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Taggers.this.c.universe.definitions.AnyRefTpe.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node194" class="node">
<title>Taggers.this.c.universe.definitions.AnyRefTpe.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-13942.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-13946.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Taggers.this.c.universe.definitions.AnyRefTpe.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-13931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TseitinSolution$3],Solver.this.Solution,List[Solver.this.Solution]] -->
<g id="node195" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TseitinSolution$3],Solver.this.Solution,List[Solver.this.Solution]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-14014.8701" rx="437.8983" ry="26.7407"/>
<text text-anchor="start" x="18465.114" y="-14018.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TseitinSolution$3],Solver.this.Solution,List[Solver.this.Solution]]</text>
<text text-anchor="middle" x="18766.614" y="-14003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; scala.reflect.io.AbstractFile -->
<g id="node196" class="node">
<title>((Nothing, Nothing)) =&gt; scala.reflect.io.AbstractFile</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-14086.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-14090.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; scala.reflect.io.AbstractFile</text>
<text text-anchor="middle" x="18766.614" y="-14075.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 14ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Long -->
<g id="node197" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Long</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-14158.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="18657.114" y="-14162.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Long</text>
<text text-anchor="middle" x="18766.614" y="-14147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- GenSymbols.this.SymbolTable =&gt; ?{def +=: ?} -->
<g id="node198" class="node">
<title>GenSymbols.this.SymbolTable =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-14230.8701" rx="199.3083" ry="26.7407"/>
<text text-anchor="start" x="18633.614" y="-14234.6701" font-family="Times,serif" font-size="14.00" fill="#000000">GenSymbols.this.SymbolTable =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-14219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeCheckers.this.global.DefTree],String,That] -->
<g id="node199" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeCheckers.this.global.DefTree],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-14302.8701" rx="366.0628" ry="26.7407"/>
<text text-anchor="start" x="18515.614" y="-14306.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeCheckers.this.global.DefTree],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-14291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[Namers.this.global.Symbol]) =&gt; Namers.this.global.Type -->
<g id="node200" class="node">
<title>(=&gt; List[Namers.this.global.Symbol]) =&gt; Namers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-14374.8701" rx="272.4724" ry="26.7407"/>
<text text-anchor="start" x="18582.114" y="-14378.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Namers.this.global.Symbol]) =&gt; Namers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-14363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[MatchTreeMaking.this.global.Tree] =&gt; scala.collection.IterableLike[El2,Repr2] -->
<g id="node201" class="node">
<title>List[MatchTreeMaking.this.global.Tree] =&gt; scala.collection.IterableLike[El2,Repr2]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-14446.8701" rx="340.2368" ry="26.7407"/>
<text text-anchor="start" x="18534.114" y="-14450.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[MatchTreeMaking.this.global.Tree] =&gt; scala.collection.IterableLike[El2,Repr2]</text>
<text text-anchor="middle" x="18766.614" y="-14435.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Long] -->
<g id="node202" class="node">
<title>((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Long]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-14518.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-14522.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Long]</text>
<text text-anchor="middle" x="18766.614" y="-14507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$2.type =&gt; ?{def getValue: ?} -->
<g id="node203" class="node">
<title>x$2.type =&gt; ?{def getValue: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-14590.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="18679.114" y="-14594.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$2.type =&gt; ?{def getValue: ?}</text>
<text text-anchor="middle" x="18766.614" y="-14579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Byte] =&gt; ?{def slice: ?} -->
<g id="node204" class="node">
<title>Array[Byte] =&gt; ?{def slice: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-14662.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-14666.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Byte] =&gt; ?{def slice: ?}</text>
<text text-anchor="middle" x="18766.614" y="-14651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Symbol],Implicits.this.global.Type,List[Implicits.this.global.Type]] -->
<g id="node205" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Symbol],Implicits.this.global.Type,List[Implicits.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-14734.8701" rx="526.1749" ry="26.7407"/>
<text text-anchor="start" x="18402.614" y="-14738.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Symbol],Implicits.this.global.Type,List[Implicits.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-14723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.util.Try[scala.tools.nsc.plugins.Plugin.AnyClass]],Class[_],That] -->
<g id="node206" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.util.Try[scala.tools.nsc.plugins.Plugin.AnyClass]],Class[_],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-14806.8701" rx="455.2536" ry="26.7407"/>
<text text-anchor="start" x="18452.614" y="-14810.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.util.Try[scala.tools.nsc.plugins.Plugin.AnyClass]],Class[_],That]</text>
<text text-anchor="middle" x="18766.614" y="-14795.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- TypeDiagnostics.this.global.Scope =&gt; TypeDiagnostics.this.global.Type -->
<g id="node207" class="node">
<title>TypeDiagnostics.this.global.Scope =&gt; TypeDiagnostics.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-14878.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="18568.114" y="-14882.6701" font-family="Times,serif" font-size="14.00" fill="#000000">TypeDiagnostics.this.global.Scope =&gt; TypeDiagnostics.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-14867.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; Reshape.this.global.Symbol -->
<g id="node208" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; Reshape.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-14950.8701" rx="290.7418" ry="26.7407"/>
<text text-anchor="start" x="18569.114" y="-14954.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; Reshape.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-14939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- arr.type =&gt; ?{def toList: ?} -->
<g id="node209" class="node">
<title>arr.type =&gt; ?{def toList: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-15022.8701" rx="118.5882" ry="26.7407"/>
<text text-anchor="start" x="18690.614" y="-15026.6701" font-family="Times,serif" font-size="14.00" fill="#000000">arr.type =&gt; ?{def toList: ?}</text>
<text text-anchor="middle" x="18766.614" y="-15011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],Infer.this.global.Type,That] -->
<g id="node210" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],Infer.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-15094.8701" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="18557.614" y="-15098.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],Infer.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-15083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; List[MatchCodeGen.this.global.Tree] -->
<g id="node211" class="node">
<title>((Nothing, Nothing)) =&gt; List[MatchCodeGen.this.global.Tree]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-15166.8701" rx="254.6169" ry="26.7407"/>
<text text-anchor="start" x="18594.614" y="-15170.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; List[MatchCodeGen.this.global.Tree]</text>
<text text-anchor="middle" x="18766.614" y="-15155.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[String] =&gt; ?{def toSeq: ?} -->
<g id="node212" class="node">
<title>Array[String] =&gt; ?{def toSeq: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-15238.8701" rx="140.9288" ry="26.7407"/>
<text text-anchor="start" x="18675.114" y="-15242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def toSeq: ?}</text>
<text text-anchor="middle" x="18766.614" y="-15227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.immutable.Set[Typers.this.global.Symbol] =&gt; ?{def +=: ?} -->
<g id="node213" class="node">
<title>scala.collection.immutable.Set[Typers.this.global.Symbol] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-15310.8701" rx="306.3546" ry="26.7407"/>
<text text-anchor="start" x="18558.114" y="-15314.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[Typers.this.global.Symbol] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-15299.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: scala.tools.nsc.backend.jvm.analysis.NullnessValue] -->
<g id="node214" class="node">
<title>((Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: scala.tools.nsc.backend.jvm.analysis.NullnessValue]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-15382.8701" rx="471.7805" ry="26.7407"/>
<text text-anchor="start" x="18441.114" y="-15386.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: scala.tools.nsc.backend.jvm.analysis.NullnessValue]</text>
<text text-anchor="middle" x="18766.614" y="-15371.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; Array[Int]) =&gt; Array[CNF.this.Clause] -->
<g id="node215" class="node">
<title>(=&gt; Array[Int]) =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-15454.8701" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="18646.614" y="-15458.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Int]) =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-15443.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.PACKAGEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node216" class="node">
<title>Scanners.this.global.nme.PACKAGEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-15526.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="18596.614" y="-15530.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.PACKAGEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-15515.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],String,List[String]] -->
<g id="node217" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],String,List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-15598.8701" rx="286.2565" ry="26.7407"/>
<text text-anchor="start" x="18572.114" y="-15602.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],String,List[String]]</text>
<text text-anchor="middle" x="18766.614" y="-15587.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 3ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; DocComments.this.Symbol -->
<g id="node218" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; DocComments.this.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-15670.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="18595.114" y="-15674.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; DocComments.this.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-15659.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;PCData&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType -->
<g id="node219" class="node">
<title>String(&#39;PCData&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-15742.8701" rx="359.8347" ry="26.7407"/>
<text text-anchor="start" x="18520.114" y="-15746.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;PCData&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</text>
<text text-anchor="middle" x="18766.614" y="-15731.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$5.type =&gt; ?{def asScala: ?} -->
<g id="node220" class="node">
<title>x$5.type =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-15814.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="18683.614" y="-15818.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$5.type =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-15803.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.ValDef,List[Parsers.this.global.ValDef]] -->
<g id="node221" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.ValDef,List[Parsers.this.global.ValDef]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-15886.8701" rx="509.648" ry="26.7407"/>
<text text-anchor="start" x="18414.114" y="-15890.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.ValDef,List[Parsers.this.global.ValDef]]</text>
<text text-anchor="middle" x="18766.614" y="-15875.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[BoxUnbox.this.BoxConsumer]) =&gt; ?{def +=: ?} -->
<g id="node222" class="node">
<title>(=&gt; scala.collection.immutable.Set[BoxUnbox.this.BoxConsumer]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-15958.8701" rx="340.651" ry="26.7407"/>
<text text-anchor="start" x="18533.614" y="-15962.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[BoxUnbox.this.BoxConsumer]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-15947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;%s &#45; %s&#39;) =&gt; ?{def format: ?} -->
<g id="node223" class="node">
<title>String(&#39;%s &#45; %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-16030.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="18662.614" y="-16034.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s &#45; %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-16019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- UnCurry.this.global.Apply =&gt; ?{def OBJ_EQ: ?} -->
<g id="node224" class="node">
<title>UnCurry.this.global.Apply =&gt; ?{def OBJ_EQ: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-16102.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="18629.614" y="-16106.6701" font-family="Times,serif" font-size="14.00" fill="#000000">UnCurry.this.global.Apply =&gt; ?{def OBJ_EQ: ?}</text>
<text text-anchor="middle" x="18766.614" y="-16091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Global.this.constructors.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node225" class="node">
<title>Global.this.constructors.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-16174.8701" rx="186.8525" ry="26.7407"/>
<text text-anchor="start" x="18642.614" y="-16178.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.constructors.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-16163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Set[Mixin.this.global.Symbol] =&gt; ?{def +=: ?} -->
<g id="node226" class="node">
<title>scala.collection.immutable.Set[Mixin.this.global.Symbol] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-16246.8701" rx="303.1977" ry="26.7407"/>
<text text-anchor="start" x="18560.114" y="-16250.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[Mixin.this.global.Symbol] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-16235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Unapplies.this.global.TypeDef],Unapplies.this.global.TypeDef,That] -->
<g id="node227" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Unapplies.this.global.TypeDef],Unapplies.this.global.TypeDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-16318.8701" rx="449.0256" ry="26.7407"/>
<text text-anchor="start" x="18457.114" y="-16322.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Unapplies.this.global.TypeDef],Unapplies.this.global.TypeDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-16307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[(SymbolTrackers.this.global.Symbol, Long)] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node228" class="node">
<title>Option[(SymbolTrackers.this.global.Symbol, Long)] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-16390.8701" rx="386.5749" ry="26.7407"/>
<text text-anchor="start" x="18501.114" y="-16394.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[(SymbolTrackers.this.global.Symbol, Long)] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-16379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[IndexedSeq[((Int, Array[Byte]), Int)],scala.tools.nsc.util.ShowPickled.PickleBufferEntry,That] -->
<g id="node229" class="node">
<title>scala.collection.generic.CanBuildFrom[IndexedSeq[((Int, Array[Byte]), Int)],scala.tools.nsc.util.ShowPickled.PickleBufferEntry,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-16462.8701" rx="531.0744" ry="26.7407"/>
<text text-anchor="start" x="18399.114" y="-16466.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[IndexedSeq[((Int, Array[Byte]), Int)],scala.tools.nsc.util.ShowPickled.PickleBufferEntry,That]</text>
<text text-anchor="middle" x="18766.614" y="-16451.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[CleanUp.this.global.Tree],CleanUp.this.global.Type,Any] -->
<g id="node230" class="node">
<title>scala.collection.generic.CanBuildFrom[List[CleanUp.this.global.Tree],CleanUp.this.global.Type,Any]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-16534.8701" rx="408.0012" ry="26.7407"/>
<text text-anchor="start" x="18486.114" y="-16538.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[CleanUp.this.global.Tree],CleanUp.this.global.Type,Any]</text>
<text text-anchor="middle" x="18766.614" y="-16523.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.Symbol -->
<g id="node231" class="node">
<title>((Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-16606.8701" rx="260.8448" ry="26.7407"/>
<text text-anchor="start" x="18590.114" y="-16610.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-16595.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Reifiers.this.global.Type -->
<g id="node232" class="node">
<title>(=&gt; Unit) =&gt; Reifiers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-16678.8701" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="18660.114" y="-16682.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Reifiers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-16667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Boolean(true) =&gt; Printers.this.BooleanFlag -->
<g id="node233" class="node">
<title>Boolean(true) =&gt; Printers.this.BooleanFlag</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-16750.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="18647.614" y="-16754.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean(true) =&gt; Printers.this.BooleanFlag</text>
<text text-anchor="middle" x="18766.614" y="-16739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],TreeGen.this.global.Bind,That] -->
<g id="node234" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],TreeGen.this.global.Bind,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-16822.8701" rx="457.4962" ry="26.7407"/>
<text text-anchor="start" x="18451.114" y="-16826.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],TreeGen.this.global.Bind,That]</text>
<text text-anchor="middle" x="18766.614" y="-16811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- List[TypeDiagnostics.this.global.Type] =&gt; scala.collection.TraversableLike[El1,Repr1] -->
<g id="node235" class="node">
<title>List[TypeDiagnostics.this.global.Type] =&gt; scala.collection.TraversableLike[El1,Repr1]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-16894.8701" rx="350.0357" ry="26.7407"/>
<text text-anchor="start" x="18527.114" y="-16898.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[TypeDiagnostics.this.global.Type] =&gt; scala.collection.TraversableLike[El1,Repr1]</text>
<text text-anchor="middle" x="18766.614" y="-16883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.Tree,List[Reshape.this.global.Tree]] -->
<g id="node236" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.Tree,List[Reshape.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-16966.8701" rx="502.506" ry="26.7407"/>
<text text-anchor="start" x="18419.114" y="-16970.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.Tree,List[Reshape.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-16955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; Array[Char]) =&gt; Array[Int] -->
<g id="node237" class="node">
<title>(=&gt; Array[Char]) =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-17038.8701" rx="135.5294" ry="26.7407"/>
<text text-anchor="start" x="18678.614" y="-17042.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Char]) =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-17027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; TypingTransformers.this.global.Symbol -->
<g id="node238" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; TypingTransformers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-17110.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="18577.114" y="-17114.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; TypingTransformers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-17099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int =&gt; ?{def min: ?} -->
<g id="node239" class="node">
<title>Int =&gt; ?{def min: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-17182.8701" rx="92.7622" ry="26.7407"/>
<text text-anchor="start" x="18709.114" y="-17186.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; ?{def min: ?}</text>
<text text-anchor="middle" x="18766.614" y="-17171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.analyzer.global.Type,List[Interface.this.global.Type]] -->
<g id="node240" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.analyzer.global.Type,List[Interface.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-17254.8701" rx="573.4272" ry="26.7407"/>
<text text-anchor="start" x="18369.114" y="-17258.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.analyzer.global.Type,List[Interface.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-17243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(45) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node241" class="node">
<title>Int(45) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-17326.8701" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="18702.114" y="-17330.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(45) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-17315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[reflect.runtime.universe.Type],String,That] -->
<g id="node242" class="node">
<title>scala.collection.generic.CanBuildFrom[List[reflect.runtime.universe.Type],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-17398.8701" rx="350.9501" ry="26.7407"/>
<text text-anchor="start" x="18526.614" y="-17402.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[reflect.runtime.universe.Type],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-17387.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BTypes.this.ClassInfo] =&gt; ?{def orThrow: ?} -->
<g id="node243" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BTypes.this.ClassInfo] =&gt; ?{def orThrow: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-17470.8701" rx="455.2536" ry="26.7407"/>
<text text-anchor="start" x="18452.614" y="-17474.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BTypes.this.ClassInfo] =&gt; ?{def orThrow: ?}</text>
<text text-anchor="middle" x="18766.614" y="-17459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- segments.type =&gt; ?{def init: ?} -->
<g id="node244" class="node">
<title>segments.type =&gt; ?{def init: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-17542.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="18679.114" y="-17546.6701" font-family="Times,serif" font-size="14.00" fill="#000000">segments.type =&gt; ?{def init: ?}</text>
<text text-anchor="middle" x="18766.614" y="-17531.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;undetParam inferred: %s as %s&#39;) =&gt; ?{def format: ?} -->
<g id="node245" class="node">
<title>String(&#39;undetParam inferred: %s as %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-17614.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="18599.614" y="-17618.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;undetParam inferred: %s as %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-17603.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],List[SpecializeTypes.this.global.Type],List[List[SpecializeTypes.this.global.Type]]] -->
<g id="node246" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],List[SpecializeTypes.this.global.Type],List[List[SpecializeTypes.this.global.Type]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-17686.8701" rx="652.8192" ry="26.7407"/>
<text text-anchor="start" x="18313.114" y="-17690.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],List[SpecializeTypes.this.global.Type],List[List[SpecializeTypes.this.global.Type]]]</text>
<text text-anchor="middle" x="18766.614" y="-17675.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; NodePrinters.this.global.Tree -->
<g id="node247" class="node">
<title>((Nothing, Nothing)) =&gt; NodePrinters.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-17758.8701" rx="222.9775" ry="26.7407"/>
<text text-anchor="start" x="18617.114" y="-17762.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; NodePrinters.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-17747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; Namers.this.global.Tree) =&gt; Namers.this.global.Type -->
<g id="node248" class="node">
<title>(=&gt; Namers.this.global.Tree) =&gt; Namers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-17830.8701" rx="238.0901" ry="26.7407"/>
<text text-anchor="start" x="18606.114" y="-17834.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Namers.this.global.Tree) =&gt; Namers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-17819.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.asm.Type],(scala.tools.asm.Type, Int),List[(scala.tools.asm.Type, Int)]] -->
<g id="node249" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.asm.Type],(scala.tools.asm.Type, Int),List[(scala.tools.asm.Type, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-17902.8701" rx="504.3343" ry="26.7407"/>
<text text-anchor="start" x="18418.114" y="-17906.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.asm.Type],(scala.tools.asm.Type, Int),List[(scala.tools.asm.Type, Int)]]</text>
<text text-anchor="middle" x="18766.614" y="-17891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[reflect.runtime.universe.TypeRef] -->
<g id="node250" class="node">
<title>scala.reflect.ClassTag[reflect.runtime.universe.TypeRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-17974.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-17978.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[reflect.runtime.universe.TypeRef]</text>
<text text-anchor="middle" x="18766.614" y="-17963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],(Int, Int),List[(Int, Int)]] -->
<g id="node251" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],(Int, Int),List[(Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-18046.8701" rx="305.4403" ry="26.7407"/>
<text text-anchor="start" x="18558.614" y="-18050.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],(Int, Int),List[(Int, Int)]]</text>
<text text-anchor="middle" x="18766.614" y="-18035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Namers.this.global.AnnotationInfo =&gt; Namers.this.global.Type -->
<g id="node252" class="node">
<title>Namers.this.global.AnnotationInfo =&gt; Namers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-18118.8701" rx="258.6023" ry="26.7407"/>
<text text-anchor="start" x="18591.614" y="-18122.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Namers.this.global.AnnotationInfo =&gt; Namers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-18107.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- s.type =&gt; ?{def head: ?} -->
<g id="node253" class="node">
<title>s.type =&gt; ?{def head: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-18190.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-18194.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def head: ?}</text>
<text text-anchor="middle" x="18766.614" y="-18179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def filterNot: ?} -->
<g id="node254" class="node">
<title>String =&gt; ?{def filterNot: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-18262.8701" rx="123.0732" ry="26.7407"/>
<text text-anchor="start" x="18687.614" y="-18266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def filterNot: ?}</text>
<text text-anchor="middle" x="18766.614" y="-18251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; ClassfileParser.this.symbolTable.AnnotationInfo -->
<g id="node255" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; ClassfileParser.this.symbolTable.AnnotationInfo</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-18334.8701" rx="334.423" ry="26.7407"/>
<text text-anchor="start" x="18538.114" y="-18338.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; ClassfileParser.this.symbolTable.AnnotationInfo</text>
<text text-anchor="middle" x="18766.614" y="-18323.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((() =&gt; Nothing, () =&gt; Nothing)) =&gt; Iterator[Char] -->
<g id="node256" class="node">
<title>((() =&gt; Nothing, () =&gt; Nothing)) =&gt; Iterator[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-18406.8701" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="18626.614" y="-18410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((() =&gt; Nothing, () =&gt; Nothing)) =&gt; Iterator[Char]</text>
<text text-anchor="middle" x="18766.614" y="-18395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(32768) =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node257" class="node">
<title>Int(32768) =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-18478.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-18482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(32768) =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-18467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; java.nio.CharBuffer -->
<g id="node258" class="node">
<title>(=&gt; Unit) =&gt; java.nio.CharBuffer</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-18550.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="18673.114" y="-18554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; java.nio.CharBuffer</text>
<text text-anchor="middle" x="18766.614" y="-18539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Int(4) =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node259" class="node">
<title>Int(4) =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-18622.8701" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="18625.614" y="-18626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(4) =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-18611.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Extractors.this.global.Symbol -->
<g id="node260" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Extractors.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-18694.8701" rx="311.6683" ry="26.7407"/>
<text text-anchor="start" x="18554.114" y="-18698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Extractors.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-18683.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 1ms</text>
</g>
<!-- JavaScanners.this.global.javanme.STATICkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node261" class="node">
<title>JavaScanners.this.global.javanme.STATICkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-18766.8701" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="18581.614" y="-18770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.STATICkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-18755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; DefaultMacroCompiler.this.global.Tree -->
<g id="node262" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; DefaultMacroCompiler.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-18838.8701" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="18578.614" y="-18842.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; DefaultMacroCompiler.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-18827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[String] =&gt; ?{def toList: ?} -->
<g id="node263" class="node">
<title>Array[String] =&gt; ?{def toList: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-18910.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="18674.614" y="-18914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def toList: ?}</text>
<text text-anchor="middle" x="18766.614" y="-18899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 5ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Array[java.net.URL] -->
<g id="node264" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Array[java.net.URL]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-18982.8701" rx="204.2078" ry="26.7407"/>
<text text-anchor="start" x="18630.114" y="-18986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Array[java.net.URL]</text>
<text text-anchor="middle" x="18766.614" y="-18971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- args.type =&gt; ?{def indexOf: ?} -->
<g id="node265" class="node">
<title>args.type =&gt; ?{def indexOf: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-19054.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="18680.614" y="-19058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">args.type =&gt; ?{def indexOf: ?}</text>
<text text-anchor="middle" x="18766.614" y="-19043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.FALSEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node266" class="node">
<title>Scanners.this.global.nme.FALSEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-19126.8701" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="18608.114" y="-19130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.FALSEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-19115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[PropositionalLogic.this.Prop],PropositionalLogic.this.Prop,That] -->
<g id="node267" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[PropositionalLogic.this.Prop],PropositionalLogic.this.Prop,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-19198.8701" rx="537.3023" ry="26.7407"/>
<text text-anchor="start" x="18394.614" y="-19202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[PropositionalLogic.this.Prop],PropositionalLogic.this.Prop,That]</text>
<text text-anchor="middle" x="18766.614" y="-19187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Internals.this.global.Symbol -->
<g id="node268" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Internals.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-19270.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="18610.114" y="-19274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Internals.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-19259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;PROGRAM&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node269" class="node">
<title>String(&#39;PROGRAM&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-19342.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="18664.114" y="-19346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;PROGRAM&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-19331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Array[Int] =&gt; Array[Class[_]] -->
<g id="node270" class="node">
<title>Array[Int] =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-19414.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="18683.614" y="-19418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Int] =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-19403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Int =&gt; String -->
<g id="node271" class="node">
<title>Int =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-19486.8701" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="18723.114" y="-19490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-19475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.runtime.BoxesRunTime] -->
<g id="node272" class="node">
<title>scala.reflect.ClassTag[scala.runtime.BoxesRunTime]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-19558.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="18620.614" y="-19562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.runtime.BoxesRunTime]</text>
<text text-anchor="middle" x="18766.614" y="-19547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- RefChecks.this.global.definitions.JavaRepeatedParamClass.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node273" class="node">
<title>RefChecks.this.global.definitions.JavaRepeatedParamClass.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-19630.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="18545.614" y="-19634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">RefChecks.this.global.definitions.JavaRepeatedParamClass.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-19619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;investigate a wildcard type such as `_ %s %s`. (SLS 3.2.10)&#39;) =&gt; ?{def format: ?} -->
<g id="node274" class="node">
<title>String(&#39;investigate a wildcard type such as `_ %s %s`. (SLS 3.2.10)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-19702.8701" rx="358.5063" ry="26.7407"/>
<text text-anchor="start" x="18521.114" y="-19706.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;investigate a wildcard type such as `_ %s %s`. (SLS 3.2.10)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-19691.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.IntMap[Inliner.this.postProcessor.callGraph.ArgInfo],(Int, Inliner.this.postProcessor.callGraph.ArgInfo),That] -->
<g id="node275" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.IntMap[Inliner.this.postProcessor.callGraph.ArgInfo],(Int, Inliner.this.postProcessor.callGraph.ArgInfo),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-19774.8701" rx="697.8288" ry="26.7407"/>
<text text-anchor="start" x="18281.114" y="-19778.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.IntMap[Inliner.this.postProcessor.callGraph.ArgInfo],(Int, Inliner.this.postProcessor.callGraph.ArgInfo),That]</text>
<text text-anchor="middle" x="18766.614" y="-19763.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.immutable.Set[TypeDiagnostics.this.TypeDiag] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node276" class="node">
<title>scala.collection.immutable.Set[TypeDiagnostics.this.TypeDiag] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-19846.8701" rx="432.0845" ry="26.7407"/>
<text text-anchor="start" x="18469.114" y="-19850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[TypeDiagnostics.this.TypeDiag] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-19835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;boundSym: %s of type %s&#39;) =&gt; ?{def format: ?} -->
<g id="node277" class="node">
<title>String(&#39;boundSym: %s of type %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-19918.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-19922.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;boundSym: %s of type %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-19907.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[Erasure.this.global.Type] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node278" class="node">
<title>Option[Erasure.this.global.Type] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-19990.8701" rx="309.9257" ry="26.7407"/>
<text text-anchor="start" x="18555.614" y="-19994.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Erasure.this.global.Type] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-19979.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[scala.tools.nsc.util.ClassPath] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node279" class="node">
<title>Option[scala.tools.nsc.util.ClassPath] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-20062.8701" rx="326.8668" ry="26.7407"/>
<text text-anchor="start" x="18543.614" y="-20066.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[scala.tools.nsc.util.ClassPath] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-20051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]],scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])],List[scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]]] -->
<g id="node280" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]],scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])],List[scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-20134.8701" rx="1664.5587" ry="26.7407"/>
<text text-anchor="start" x="17597.614" y="-20138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]],scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])],List[scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]]]</text>
<text text-anchor="middle" x="18766.614" y="-20123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;: %s is a subclass of %s, but method parameter types must match exactly.&#39;) =&gt; ?{def format: ?} -->
<g id="node281" class="node">
<title>String(&#39;: %s is a subclass of %s, but method parameter types must match exactly.&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-20206.8701" rx="413.815" ry="26.7407"/>
<text text-anchor="start" x="18482.114" y="-20210.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;: %s is a subclass of %s, but method parameter types must match exactly.&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-20195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; CharSequence -->
<g id="node282" class="node">
<title>Unit =&gt; CharSequence</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-20278.8701" rx="101.2327" ry="26.7407"/>
<text text-anchor="start" x="18703.114" y="-20282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; CharSequence</text>
<text text-anchor="middle" x="18766.614" y="-20267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Implicits.this.ImplicitInfo],(Implicits.this.SearchResult, List[Implicits.this.global.TypeConstraint]),That] -->
<g id="node283" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Implicits.this.ImplicitInfo],(Implicits.this.SearchResult, List[Implicits.this.global.TypeConstraint]),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-20350.8701" rx="589.0399" ry="26.7407"/>
<text text-anchor="start" x="18358.114" y="-20354.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Implicits.this.ImplicitInfo],(Implicits.this.SearchResult, List[Implicits.this.global.TypeConstraint]),That]</text>
<text text-anchor="middle" x="18766.614" y="-20339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[MatchOptimizer.this.Tree] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node284" class="node">
<title>List[MatchOptimizer.this.Tree] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-20422.8701" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="18557.614" y="-20426.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[MatchOptimizer.this.Tree] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-20411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(40) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node285" class="node">
<title>Int(40) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-20494.8701" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="18702.114" y="-20498.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(40) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-20483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CompilerCommand.this.settings.BooleanSetting =&gt; Boolean -->
<g id="node286" class="node">
<title>CompilerCommand.this.settings.BooleanSetting =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-20566.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="18599.614" y="-20570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CompilerCommand.this.settings.BooleanSetting =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-20555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 1ms</text>
</g>
<!-- (=&gt; List[String]) =&gt; ?{def ++=: ?} -->
<g id="node287" class="node">
<title>(=&gt; List[String]) =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-20638.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="18668.614" y="-20642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[String]) =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-20627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; JavaParsers.this.global.Type -->
<g id="node288" class="node">
<title>Unit =&gt; JavaParsers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-20710.8701" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="18664.614" y="-20714.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; JavaParsers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-20699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Char =&gt; ?{def asDigit: ?} -->
<g id="node289" class="node">
<title>Char =&gt; ?{def asDigit: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-20782.8701" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="18694.614" y="-20786.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Char =&gt; ?{def asDigit: ?}</text>
<text text-anchor="middle" x="18766.614" y="-20771.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.math.Ordering[SymbolTrackers.this.global.Symbol] -->
<g id="node290" class="node">
<title>scala.math.Ordering[SymbolTrackers.this.global.Symbol]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-20854.8701" rx="236.3475" ry="26.7407"/>
<text text-anchor="start" x="18607.614" y="-20858.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.math.Ordering[SymbolTrackers.this.global.Symbol]</text>
<text text-anchor="middle" x="18766.614" y="-20843.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Modifiers\\((\\d+)[lL], TypeName\\(\&#39;(.*?)\&#39;\\), List\\((.*?)\\)\\)&#39;) =&gt; ?{def r: ?} -->
<g id="node291" class="node">
<title>String(&#39;Modifiers\\((\\d+)[lL], TypeName\\(\&#39;(.*?)\&#39;\\), List\\((.*?)\\)\\)&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-20926.8701" rx="318.3962" ry="26.7407"/>
<text text-anchor="start" x="18549.614" y="-20930.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Modifiers\((\d+)[lL], TypeName\(&#39;(.*?)&#39;\), List\((.*?)\)\)&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-20915.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Extractors.this.global.Type -->
<g id="node292" class="node">
<title>Unit =&gt; Extractors.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-20998.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="18668.614" y="-21002.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Extractors.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-20987.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;symbol package&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node293" class="node">
<title>String(&#39;symbol package&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-21070.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="18653.614" y="-21074.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;symbol package&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-21059.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- Char(&#39;/&#39;) =&gt; String -->
<g id="node294" class="node">
<title>Char(&#39;/&#39;) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-21142.8701" rx="82.9636" ry="26.7407"/>
<text text-anchor="start" x="18716.114" y="-21146.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Char(&#39;/&#39;) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-21131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; Array[Char]) =&gt; Array[CNF.this.Clause] -->
<g id="node295" class="node">
<title>(=&gt; Array[Char]) =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-21214.8701" rx="188.5952" ry="26.7407"/>
<text text-anchor="start" x="18641.114" y="-21218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Char]) =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-21203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Placeholders.this.global.Symbol -->
<g id="node296" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Placeholders.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-21286.8701" rx="321.9673" ry="26.7407"/>
<text text-anchor="start" x="18547.114" y="-21290.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Placeholders.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-21275.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 1ms</text>
</g>
<!-- Array[Unit] =&gt; Array[Int] -->
<g id="node297" class="node">
<title>Array[Unit] =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-21358.8701" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="18694.114" y="-21362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Unit] =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-21347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],String,That] -->
<g id="node298" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-21430.8701" rx="259.5164" ry="26.7407"/>
<text text-anchor="start" x="18591.114" y="-21434.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-21419.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; MatchOptimization.this.global.Tree -->
<g id="node299" class="node">
<title>((Nothing, Nothing)) =&gt; MatchOptimization.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-21502.8701" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="18599.114" y="-21506.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; MatchOptimization.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-21491.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- files.type =&gt; ?{def toList: ?} -->
<g id="node300" class="node">
<title>files.type =&gt; ?{def toList: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-21574.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="18686.614" y="-21578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">files.type =&gt; ?{def toList: ?}</text>
<text text-anchor="middle" x="18766.614" y="-21563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.TypeBounds -->
<g id="node301" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.TypeBounds</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-21646.8701" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="18601.114" y="-21650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.TypeBounds</text>
<text text-anchor="middle" x="18766.614" y="-21635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[CNF.this.Clause] =&gt; scala.collection.TraversableOnce[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit]] -->
<g id="node302" class="node">
<title>Array[CNF.this.Clause] =&gt; scala.collection.TraversableOnce[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-21718.8701" rx="519.0328" ry="26.7407"/>
<text text-anchor="start" x="18407.614" y="-21722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[CNF.this.Clause] =&gt; scala.collection.TraversableOnce[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit]]</text>
<text text-anchor="middle" x="18766.614" y="-21707.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Short] =&gt; Array[Int] -->
<g id="node303" class="node">
<title>Array[Short] =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-21790.8701" rx="117.2596" ry="26.7407"/>
<text text-anchor="start" x="18691.614" y="-21794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Short] =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-21779.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- String(&#39;nested free def: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node304" class="node">
<title>String(&#39;nested free def: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-21862.8701" rx="200.2225" ry="26.7407"/>
<text text-anchor="start" x="18633.114" y="-21866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;nested free def: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-21851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; NamesDefaults.this.global.Symbol -->
<g id="node305" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; NamesDefaults.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-21934.8701" rx="258.6023" ry="26.7407"/>
<text text-anchor="start" x="18591.614" y="-21938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; NamesDefaults.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-21923.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.global.definitions.IntClass.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node306" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.global.definitions.IntClass.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-22006.8701" rx="349.1216" ry="26.7407"/>
<text text-anchor="start" x="18527.614" y="-22010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.global.definitions.IntClass.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-21995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.Buffer[scala.tools.asm.tree.ParameterNode],String,That] -->
<g id="node307" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.Buffer[scala.tools.asm.tree.ParameterNode],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-22078.8701" rx="480.6653" ry="26.7407"/>
<text text-anchor="start" x="18434.614" y="-22082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.Buffer[scala.tools.asm.tree.ParameterNode],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-22067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; Unit) =&gt; java.io.PrintWriter -->
<g id="node308" class="node">
<title>(=&gt; Unit) =&gt; java.io.PrintWriter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-22150.8701" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="18676.114" y="-22154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; java.io.PrintWriter</text>
<text text-anchor="middle" x="18766.614" y="-22139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 0ms</text>
</g>
<!-- (=&gt; Array[String]) =&gt; Array[Int] -->
<g id="node309" class="node">
<title>(=&gt; Array[String]) =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-22222.8701" rx="140.9288" ry="26.7407"/>
<text text-anchor="start" x="18675.114" y="-22226.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[String]) =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-22211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(RefChecks.this.global.TermName, Iterable[RefChecks.this.global.Symbol])],RefChecks.this.global.Symbol,That] -->
<g id="node310" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(RefChecks.this.global.TermName, Iterable[RefChecks.this.global.Symbol])],RefChecks.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-22294.8701" rx="627.4075" ry="26.7407"/>
<text text-anchor="start" x="18331.114" y="-22298.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(RefChecks.this.global.TermName, Iterable[RefChecks.this.global.Symbol])],RefChecks.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-22283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.reflect.io.Directory) =&gt; tools.nsc.io.File -->
<g id="node311" class="node">
<title>(=&gt; scala.reflect.io.Directory) =&gt; tools.nsc.io.File</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-22366.8701" rx="206.4504" ry="26.7407"/>
<text text-anchor="start" x="18628.614" y="-22370.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.reflect.io.Directory) =&gt; tools.nsc.io.File</text>
<text text-anchor="middle" x="18766.614" y="-22355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Malformed server address: %s; exiting&#39;) =&gt; ?{def format: ?} -->
<g id="node312" class="node">
<title>String(&#39;Malformed server address: %s; exiting&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-22438.8701" rx="276.4575" ry="26.7407"/>
<text text-anchor="start" x="18579.114" y="-22442.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Malformed server address: %s; exiting&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-22427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],Infer.this.global.TypeVar,That] -->
<g id="node313" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],Infer.this.global.TypeVar,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-22510.8701" rx="405.3444" ry="26.7407"/>
<text text-anchor="start" x="18488.114" y="-22514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],Infer.this.global.TypeVar,That]</text>
<text text-anchor="middle" x="18766.614" y="-22499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- f.type =&gt; ?{def isClass: ?} -->
<g id="node314" class="node">
<title>f.type =&gt; ?{def isClass: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-22582.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="18692.614" y="-22586.6701" font-family="Times,serif" font-size="14.00" fill="#000000">f.type =&gt; ?{def isClass: ?}</text>
<text text-anchor="middle" x="18766.614" y="-22571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.CATCHkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node315" class="node">
<title>Scanners.this.global.nme.CATCHkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-22654.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="18605.614" y="-22658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.CATCHkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-22643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- opt.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node316" class="node">
<title>opt.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-22726.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-22730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">opt.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-22715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Set[PropositionalLogic.this.Prop] -->
<g id="node317" class="node">
<title>((Nothing, Nothing)) =&gt; Set[PropositionalLogic.this.Prop]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-22798.8701" rx="238.0901" ry="26.7407"/>
<text text-anchor="start" x="18606.114" y="-22802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Set[PropositionalLogic.this.Prop]</text>
<text text-anchor="middle" x="18766.614" y="-22787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- java.util.List[scala.tools.asm.tree.TryCatchBlockNode] =&gt; ?{def asScala: ?} -->
<g id="node318" class="node">
<title>java.util.List[scala.tools.asm.tree.TryCatchBlockNode] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-22870.8701" rx="309.0113" ry="26.7407"/>
<text text-anchor="start" x="18556.114" y="-22874.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.List[scala.tools.asm.tree.TryCatchBlockNode] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-22859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- ((Nothing, Unit, Unit)) =&gt; Macros.this.global.Position -->
<g id="node319" class="node">
<title>((Nothing, Unit, Unit)) =&gt; Macros.this.global.Position</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-22942.8701" rx="223.3915" ry="26.7407"/>
<text text-anchor="start" x="18616.614" y="-22946.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit, Unit)) =&gt; Macros.this.global.Position</text>
<text text-anchor="middle" x="18766.614" y="-22931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39; &#39;) =&gt; ?{def *: ?} -->
<g id="node320" class="node">
<title>String(&#39; &#39;) =&gt; ?{def *: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-23014.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-23018.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39; &#39;) =&gt; ?{def *: ?}</text>
<text text-anchor="middle" x="18766.614" y="-23003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Type],NamesDefaults.this.global.TypeTree,That] -->
<g id="node321" class="node">
<title>scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Type],NamesDefaults.this.global.TypeTree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-23086.8701" rx="479.3368" ry="26.7407"/>
<text text-anchor="start" x="18435.614" y="-23090.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Type],NamesDefaults.this.global.TypeTree,That]</text>
<text text-anchor="middle" x="18766.614" y="-23075.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Byte]) =&gt; Array[Int] -->
<g id="node322" class="node">
<title>(=&gt; Array[Byte]) =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-23158.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="18679.114" y="-23162.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Byte]) =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-23147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[CoreBTypesFromSymbols.this.bTypes.global.Symbol,CoreBTypesFromSymbols.this.bTypes.global.TermSymbol],(CoreBTypesFromSymbols.this.bTypes.global.TermSymbol, CoreBTypesFromSymbols.this.bTypes.ClassBType),Map[CoreBTypesFromSymbols.this.bTypes.global.Symbol,CoreBTypesFromSymbols.this.bTypes.ClassBType]] -->
<g id="node323" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[CoreBTypesFromSymbols.this.bTypes.global.Symbol,CoreBTypesFromSymbols.this.bTypes.global.TermSymbol],(CoreBTypesFromSymbols.this.bTypes.global.TermSymbol, CoreBTypesFromSymbols.this.bTypes.ClassBType),Map[CoreBTypesFromSymbols.this.bTypes.global.Symbol,CoreBTypesFromSymbols.this.bTypes.ClassBType]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-23230.8701" rx="1628.4338" ry="26.7407"/>
<text text-anchor="start" x="17623.114" y="-23234.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[CoreBTypesFromSymbols.this.bTypes.global.Symbol,CoreBTypesFromSymbols.this.bTypes.global.TermSymbol],(CoreBTypesFromSymbols.this.bTypes.global.TermSymbol, CoreBTypesFromSymbols.this.bTypes.ClassBType),Map[CoreBTypesFromSymbols.this.bTypes.global.Symbol,CoreBTypesFromSymbols.this.bTypes.ClassBType]]</text>
<text text-anchor="middle" x="18766.614" y="-23219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[RefChecks.this.global.analyzer.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node324" class="node">
<title>List[RefChecks.this.global.analyzer.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-23302.8701" rx="385.2464" ry="26.7407"/>
<text text-anchor="start" x="18502.114" y="-23306.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[RefChecks.this.global.analyzer.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-23291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.Tree,That] -->
<g id="node325" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-23374.8701" rx="403.5161" ry="26.7407"/>
<text text-anchor="start" x="18489.114" y="-23378.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-23363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- List[Parsers.this.global.Tree] =&gt; Parsers.this.global.Tree -->
<g id="node326" class="node">
<title>List[Parsers.this.global.Tree] =&gt; Parsers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-23446.8701" rx="231.4481" ry="26.7407"/>
<text text-anchor="start" x="18611.114" y="-23450.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Parsers.this.global.Tree] =&gt; Parsers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-23435.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 5ms</text>
</g>
<!-- JavaScanners.this.global.javanme.STRICTFPkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node327" class="node">
<title>JavaScanners.this.global.javanme.STRICTFPkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-23518.8701" rx="282.6855" ry="26.7407"/>
<text text-anchor="start" x="18574.614" y="-23522.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.STRICTFPkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-23507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],scala.tools.nsc.util.ClassPath,Seq[scala.tools.nsc.util.ClassPath]] -->
<g id="node328" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],scala.tools.nsc.util.ClassPath,Seq[scala.tools.nsc.util.ClassPath]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-23590.8701" rx="549.3439" ry="26.7407"/>
<text text-anchor="start" x="18386.114" y="-23594.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],scala.tools.nsc.util.ClassPath,Seq[scala.tools.nsc.util.ClassPath]]</text>
<text text-anchor="middle" x="18766.614" y="-23579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- String(&#39;launching implicit search for %s.%s[%s]&#39;) =&gt; ?{def format: ?} -->
<g id="node329" class="node">
<title>String(&#39;launching implicit search for %s.%s[%s]&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-23662.8701" rx="285.8424" ry="26.7407"/>
<text text-anchor="start" x="18572.614" y="-23666.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;launching implicit search for %s.%s[%s]&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-23651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],String,That] -->
<g id="node330" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-23734.8701" rx="338.9084" ry="26.7407"/>
<text text-anchor="start" x="18535.114" y="-23738.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-23723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.FORkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node331" class="node">
<title>JavaScanners.this.global.javanme.FORkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-23806.8701" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="18592.114" y="-23810.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.FORkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-23795.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Short]) =&gt; Array[Class[_]] -->
<g id="node332" class="node">
<title>(=&gt; Array[Short]) =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-23878.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="18662.114" y="-23882.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Short]) =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-23867.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; java.nio.ByteBuffer -->
<g id="node333" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; java.nio.ByteBuffer</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-23950.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="18617.614" y="-23954.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; java.nio.ByteBuffer</text>
<text text-anchor="middle" x="18766.614" y="-23939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ScalaSettings.this.BooleanSetting =&gt; ?{def enablingIfNotSetByUser: ?} -->
<g id="node334" class="node">
<title>ScalaSettings.this.BooleanSetting =&gt; ?{def enablingIfNotSetByUser: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-24022.8701" rx="291.1561" ry="26.7407"/>
<text text-anchor="start" x="18568.614" y="-24026.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ScalaSettings.this.BooleanSetting =&gt; ?{def enablingIfNotSetByUser: ?}</text>
<text text-anchor="middle" x="18766.614" y="-24011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[PropositionalLogic.this.Prop],PropositionalLogic.this.Prop,That] -->
<g id="node335" class="node">
<title>scala.collection.generic.CanBuildFrom[List[PropositionalLogic.this.Prop],PropositionalLogic.this.Prop,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-24094.8701" rx="433.4129" ry="26.7407"/>
<text text-anchor="start" x="18468.114" y="-24098.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[PropositionalLogic.this.Prop],PropositionalLogic.this.Prop,That]</text>
<text text-anchor="middle" x="18766.614" y="-24083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; List[String] -->
<g id="node336" class="node">
<title>((Nothing, Nothing)) =&gt; List[String]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-24166.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="18665.614" y="-24170.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; List[String]</text>
<text text-anchor="middle" x="18766.614" y="-24155.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;defined by %s&#39;) =&gt; ?{def format: ?} -->
<g id="node337" class="node">
<title>String(&#39;defined by %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-24238.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="18646.114" y="-24242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;defined by %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-24227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.LONG.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node338" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.LONG.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-24310.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-24314.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.LONG.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-24299.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Reifier.this.global.Symbol],Reifier.this.global.Symbol,That] -->
<g id="node339" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Reifier.this.global.Symbol],Reifier.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-24382.8701" rx="521.2754" ry="26.7407"/>
<text text-anchor="start" x="18406.114" y="-24386.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Reifier.this.global.Symbol],Reifier.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-24371.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[JavaParsers.this.global.Tree],JavaParsers.this.global.Tree,That] -->
<g id="node340" class="node">
<title>scala.collection.generic.CanBuildFrom[List[JavaParsers.this.global.Tree],JavaParsers.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-24454.8701" rx="427.5993" ry="26.7407"/>
<text text-anchor="start" x="18472.114" y="-24458.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[JavaParsers.this.global.Tree],JavaParsers.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-24443.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[T],Int,That] -->
<g id="node341" class="node">
<title>scala.collection.generic.CanBuildFrom[List[T],Int,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-24526.8701" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="18612.614" y="-24530.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[T],Int,That]</text>
<text text-anchor="middle" x="18766.614" y="-24515.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Checkable.this.global.Symbol, Checkable.this.global.TypeVar)],Checkable.this.global.Type,That] -->
<g id="node342" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Checkable.this.global.Symbol, Checkable.this.global.TypeVar)],Checkable.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-24598.8701" rx="565.8709" ry="26.7407"/>
<text text-anchor="start" x="18374.614" y="-24602.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Checkable.this.global.Symbol, Checkable.this.global.TypeVar)],Checkable.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-24587.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39; (@ = \&#39;%s\&#39;)&#39;) =&gt; ?{def format: ?} -->
<g id="node343" class="node">
<title>String(&#39; (@ = \&#39;%s\&#39;)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-24670.8701" rx="170.3255" ry="26.7407"/>
<text text-anchor="start" x="18654.114" y="-24674.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39; (@ = &#39;%s&#39;)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-24659.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[MatchTreeMaking.this.global.Symbol] =&gt; scala.collection.TraversableLike[El1,Repr1] -->
<g id="node344" class="node">
<title>List[MatchTreeMaking.this.global.Symbol] =&gt; scala.collection.TraversableLike[El1,Repr1]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-24742.8701" rx="368.3053" ry="26.7407"/>
<text text-anchor="start" x="18514.114" y="-24746.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[MatchTreeMaking.this.global.Symbol] =&gt; scala.collection.TraversableLike[El1,Repr1]</text>
<text text-anchor="middle" x="18766.614" y="-24731.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Contexts.this.ContextReporter -->
<g id="node345" class="node">
<title>(=&gt; Unit) =&gt; Contexts.this.ContextReporter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-24814.8701" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="18645.114" y="-24818.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Contexts.this.ContextReporter</text>
<text text-anchor="middle" x="18766.614" y="-24803.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[CleanUp.this.global.Symbol],String,That] -->
<g id="node346" class="node">
<title>scala.collection.generic.CanBuildFrom[List[CleanUp.this.global.Symbol],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-24886.8701" rx="345.5506" ry="26.7407"/>
<text text-anchor="start" x="18530.114" y="-24890.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[CleanUp.this.global.Symbol],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-24875.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Tree)],SpecializeTypes.this.global.Tree,That] -->
<g id="node347" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Tree)],SpecializeTypes.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-24958.8701" rx="614.4516" ry="26.7407"/>
<text text-anchor="start" x="18340.114" y="-24962.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Tree)],SpecializeTypes.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-24947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[BCodeIdiomatic.this.bTypes.BType] -->
<g id="node348" class="node">
<title>scala.reflect.ClassTag[BCodeIdiomatic.this.bTypes.BType]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-25030.8701" rx="241.6612" ry="26.7407"/>
<text text-anchor="start" x="18603.614" y="-25034.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[BCodeIdiomatic.this.bTypes.BType]</text>
<text text-anchor="middle" x="18766.614" y="-25019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Enclosures.this.universe.analyzer.Context],Enclosures.this.universe.analyzer.global.Tree,That] -->
<g id="node349" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Enclosures.this.universe.analyzer.Context],Enclosures.this.universe.analyzer.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-25102.8701" rx="548.9298" ry="26.7407"/>
<text text-anchor="start" x="18386.614" y="-25106.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Enclosures.this.universe.analyzer.Context],Enclosures.this.universe.analyzer.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-25091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(List[scala.reflect.io.Path], scala.util.Try[scala.tools.nsc.plugins.PluginDescription])],scala.util.Try[(scala.tools.nsc.plugins.PluginDescription, scala.reflect.internal.util.ScalaClassLoader)],PDResults] -->
<g id="node350" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(List[scala.reflect.io.Path], scala.util.Try[scala.tools.nsc.plugins.PluginDescription])],scala.util.Try[(scala.tools.nsc.plugins.PluginDescription, scala.reflect.internal.util.ScalaClassLoader)],PDResults]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-25174.8701" rx="951.5315" ry="26.7407"/>
<text text-anchor="start" x="18101.614" y="-25178.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(List[scala.reflect.io.Path], scala.util.Try[scala.tools.nsc.plugins.PluginDescription])],scala.util.Try[(scala.tools.nsc.plugins.PluginDescription, scala.reflect.internal.util.ScalaClassLoader)],PDResults]</text>
<text text-anchor="middle" x="18766.614" y="-25163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchOptimizer.this.TreeMaker],List[MatchOptimizer.this.Tree],That] -->
<g id="node351" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchOptimizer.this.TreeMaker],List[MatchOptimizer.this.Tree],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-25246.8701" rx="461.0672" ry="26.7407"/>
<text text-anchor="start" x="18448.614" y="-25250.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchOptimizer.this.TreeMaker],List[MatchOptimizer.this.Tree],That]</text>
<text text-anchor="middle" x="18766.614" y="-25235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; Scanners.this.Offset -->
<g id="node352" class="node">
<title>String =&gt; Scanners.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-25318.8701" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="18683.114" y="-25322.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; Scanners.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-25307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Set[MatchAnalyzer.this.Prop] -->
<g id="node353" class="node">
<title>((Nothing, Nothing)) =&gt; Set[MatchAnalyzer.this.Prop]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-25390.8701" rx="224.72" ry="26.7407"/>
<text text-anchor="start" x="18615.614" y="-25394.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Set[MatchAnalyzer.this.Prop]</text>
<text text-anchor="middle" x="18766.614" y="-25379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int =&gt; ?{def +=: ?} -->
<g id="node354" class="node">
<title>Int =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-25462.8701" rx="89.191" ry="26.7407"/>
<text text-anchor="start" x="18711.614" y="-25466.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-25451.6701" font-family="Times,serif" font-size="14.00" fill="#000000">140 times = 32ms</text>
</g>
<!-- Array[java.net.URL] =&gt; Seq[java.net.URL] -->
<g id="node355" class="node">
<title>Array[java.net.URL] =&gt; Seq[java.net.URL]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-25534.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="18646.114" y="-25538.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[java.net.URL] =&gt; Seq[java.net.URL]</text>
<text text-anchor="middle" x="18766.614" y="-25523.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Double] -->
<g id="node356" class="node">
<title>((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Double]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-25606.8701" rx="227.8769" ry="26.7407"/>
<text text-anchor="start" x="18613.614" y="-25610.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Double]</text>
<text text-anchor="middle" x="18766.614" y="-25595.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Symbol,List[SpecializeTypes.this.global.Symbol]] -->
<g id="node357" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Symbol,List[SpecializeTypes.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-25678.8701" rx="631.3927" ry="26.7407"/>
<text text-anchor="start" x="18328.114" y="-25682.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Symbol,List[SpecializeTypes.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-25667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Duplicators.this.global.Tree -->
<g id="node358" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Duplicators.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-25750.8701" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="18585.114" y="-25754.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Duplicators.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-25739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Symbol],RefChecks.this.global.Type,That] -->
<g id="node359" class="node">
<title>scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Symbol],RefChecks.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-25822.8701" rx="437.8983" ry="26.7407"/>
<text text-anchor="start" x="18465.114" y="-25826.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Symbol],RefChecks.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-25811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.io.Directory =&gt; tools.nsc.io.File -->
<g id="node360" class="node">
<title>scala.reflect.io.Directory =&gt; tools.nsc.io.File</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-25894.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="18643.114" y="-25898.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.io.Directory =&gt; tools.nsc.io.File</text>
<text text-anchor="middle" x="18766.614" y="-25883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; String -->
<g id="node361" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-25966.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="18644.614" y="-25970.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-25955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">91 times = 6ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; MatchCodeGen.this.global.Symbol -->
<g id="node362" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; MatchCodeGen.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-26038.8701" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="18590.614" y="-26042.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; MatchCodeGen.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-26027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Namers.this.ConstructorDefaultsAttachment] -->
<g id="node363" class="node">
<title>scala.reflect.ClassTag[Namers.this.ConstructorDefaultsAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-26110.8701" rx="274.2149" ry="26.7407"/>
<text text-anchor="start" x="18580.614" y="-26114.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Namers.this.ConstructorDefaultsAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-26099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 3ms</text>
</g>
<!-- List[Typers.this.global.Symbol] =&gt; ?{def ++=: ?} -->
<g id="node364" class="node">
<title>List[Typers.this.global.Symbol] =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-26182.8701" rx="207.7788" ry="26.7407"/>
<text text-anchor="start" x="18627.614" y="-26186.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Typers.this.global.Symbol] =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-26171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.Symbol],Delambdafy.this.global.TermSymbol,That] -->
<g id="node365" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.Symbol],Delambdafy.this.global.TermSymbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-26254.8701" rx="480.6653" ry="26.7407"/>
<text text-anchor="start" x="18434.614" y="-26258.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.Symbol],Delambdafy.this.global.TermSymbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-26243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.Tree,List[Parsers.this.global.Tree]] -->
<g id="node366" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.Tree,List[Parsers.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-26326.8701" rx="488.7216" ry="26.7407"/>
<text text-anchor="start" x="18429.114" y="-26330.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.Tree,List[Parsers.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-26315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Type],Erasure.this.global.Tree,That] -->
<g id="node367" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Type],Erasure.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-26398.8701" rx="399.5307" ry="26.7407"/>
<text text-anchor="start" x="18492.114" y="-26402.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Type],Erasure.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-26387.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- lazyAccessor.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node368" class="node">
<title>lazyAccessor.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-26470.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="18671.614" y="-26474.6701" font-family="Times,serif" font-size="14.00" fill="#000000">lazyAccessor.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-26459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Int) =&gt; ?{def *=: ?} -->
<g id="node369" class="node">
<title>(=&gt; Int) =&gt; ?{def *=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-26542.8701" rx="108.789" ry="26.7407"/>
<text text-anchor="start" x="18697.614" y="-26546.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Int) =&gt; ?{def *=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-26531.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; String -->
<g id="node370" class="node">
<title>((Nothing, Nothing)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-26614.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="18680.614" y="-26618.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-26603.6701" font-family="Times,serif" font-size="14.00" fill="#000000">52 times = 13ms</text>
</g>
<!-- String(&#39;typechecking macro def %s at %s&#39;) =&gt; ?{def format: ?} -->
<g id="node371" class="node">
<title>String(&#39;typechecking macro def %s at %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-26686.8701" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="18592.114" y="-26690.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;typechecking macro def %s at %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-26675.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; SpecializeTypes.this.global.gen.global.Symbol -->
<g id="node372" class="node">
<title>((Nothing, Nothing)) =&gt; SpecializeTypes.this.global.gen.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-26758.8701" rx="290.7418" ry="26.7407"/>
<text text-anchor="start" x="18569.114" y="-26762.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; SpecializeTypes.this.global.gen.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-26747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Long =&gt; ?{def |=: ?} -->
<g id="node373" class="node">
<title>Long =&gt; ?{def |=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-26830.8701" rx="94.5053" ry="26.7407"/>
<text text-anchor="start" x="18707.614" y="-26834.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Long =&gt; ?{def |=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-26819.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- Array[String] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node374" class="node">
<title>Array[String] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-26902.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-26906.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-26891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[GenTrees.this.global.ImportSelector],GenTrees.this.global.Tree,List[GenTrees.this.global.Tree]] -->
<g id="node375" class="node">
<title>scala.collection.generic.CanBuildFrom[List[GenTrees.this.global.ImportSelector],GenTrees.this.global.Tree,List[GenTrees.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-26974.8701" rx="557.4004" ry="26.7407"/>
<text text-anchor="start" x="18380.614" y="-26978.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[GenTrees.this.global.ImportSelector],GenTrees.this.global.Tree,List[GenTrees.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-26963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;incomplete option %s (requires %s)&#39;) =&gt; ?{def format: ?} -->
<g id="node376" class="node">
<title>String(&#39;incomplete option %s (requires %s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-27046.8701" rx="265.3302" ry="26.7407"/>
<text text-anchor="start" x="18587.114" y="-27050.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;incomplete option %s (requires %s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-27035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Tree -->
<g id="node377" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-27118.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="18595.114" y="-27122.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-27107.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.typechecker.StdAttachments.&lt;refinement&gt;.type =&gt; ?{def materializeExpr: ?} -->
<g id="node378" class="node">
<title>scala.tools.nsc.typechecker.StdAttachments.&lt;refinement&gt;.type =&gt; ?{def materializeExpr: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-27190.8701" rx="372.7906" ry="26.7407"/>
<text text-anchor="start" x="18511.114" y="-27194.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.StdAttachments.&lt;refinement&gt;.type =&gt; ?{def materializeExpr: ?}</text>
<text text-anchor="middle" x="18766.614" y="-27179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; java.awt.Component -->
<g id="node379" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; java.awt.Component</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-27262.8701" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="18630.614" y="-27266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; java.awt.Component</text>
<text text-anchor="middle" x="18766.614" y="-27251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Typers.this.global.Type -->
<g id="node380" class="node">
<title>(=&gt; Unit) =&gt; Typers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-27334.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="18662.614" y="-27338.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Typers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-27323.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- AliasingFrame.this.aliases.type =&gt; ?{def toList: ?} -->
<g id="node381" class="node">
<title>AliasingFrame.this.aliases.type =&gt; ?{def toList: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-27406.8701" rx="210.0214" ry="26.7407"/>
<text text-anchor="start" x="18626.114" y="-27410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">AliasingFrame.this.aliases.type =&gt; ?{def toList: ?}</text>
<text text-anchor="middle" x="18766.614" y="-27395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Byte] -->
<g id="node382" class="node">
<title>(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-27478.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="18610.614" y="-27482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Byte]</text>
<text text-anchor="middle" x="18766.614" y="-27467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SyntheticMethods.this.global.Tree],SyntheticMethods.this.global.Tree,List[SyntheticMethods.this.global.Tree]] -->
<g id="node383" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SyntheticMethods.this.global.Tree],SyntheticMethods.this.global.Tree,List[SyntheticMethods.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-27550.8701" rx="615.78" ry="26.7407"/>
<text text-anchor="start" x="18339.114" y="-27554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SyntheticMethods.this.global.Tree],SyntheticMethods.this.global.Tree,List[SyntheticMethods.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-27539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- t1.type =&gt; ?{def INT_&#45;: ?} -->
<g id="node384" class="node">
<title>t1.type =&gt; ?{def INT_&#45;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-27622.8701" rx="117.2596" ry="26.7407"/>
<text text-anchor="start" x="18691.614" y="-27626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">t1.type =&gt; ?{def INT_&#45;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-27611.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Duplicators.this.global.DelambdafyTarget.type] -->
<g id="node385" class="node">
<title>scala.reflect.ClassTag[Duplicators.this.global.DelambdafyTarget.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-27694.8701" rx="284.0141" ry="26.7407"/>
<text text-anchor="start" x="18573.614" y="-27698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Duplicators.this.global.DelambdafyTarget.type]</text>
<text text-anchor="middle" x="18766.614" y="-27683.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (=&gt; Array[Long]) =&gt; Array[Int] -->
<g id="node386" class="node">
<title>(=&gt; Array[Long]) =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-27766.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-27770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Long]) =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-27755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Double -->
<g id="node387" class="node">
<title>(=&gt; Unit) =&gt; Double</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-27838.8701" rx="94.5053" ry="26.7407"/>
<text text-anchor="start" x="18707.614" y="-27842.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Double</text>
<text text-anchor="middle" x="18766.614" y="-27827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.reflect.io.Path] -->
<g id="node388" class="node">
<title>scala.reflect.ClassTag[scala.reflect.io.Path]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-27910.8701" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="38043.3606" y="-27914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.reflect.io.Path]</text>
<text text-anchor="middle" x="38161.3606" y="-27899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.Settings#BooleanSetting =&gt; ?{def ||: ?} -->
<g id="node389" class="node">
<title>scala.tools.nsc.Settings#BooleanSetting =&gt; ?{def ||: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-27982.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="18616.114" y="-27986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.Settings#BooleanSetting =&gt; ?{def ||: ?}</text>
<text text-anchor="middle" x="18766.614" y="-27971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">17 times = 13ms</text>
</g>
<!-- Boolean =&gt; scala.reflect.internal.util.TriState -->
<g id="node390" class="node">
<title>Boolean =&gt; scala.reflect.internal.util.TriState</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-28054.8701" rx="187.2667" ry="26.7407"/>
<text text-anchor="start" x="18642.114" y="-28058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean =&gt; scala.reflect.internal.util.TriState</text>
<text text-anchor="middle" x="18766.614" y="-28043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;&#45;&#39;) =&gt; ?{def *: ?} -->
<g id="node391" class="node">
<title>String(&#39;&#45;&#39;) =&gt; ?{def *: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-28126.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-28130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;&#45;&#39;) =&gt; ?{def *: ?}</text>
<text text-anchor="middle" x="18766.614" y="-28115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;macro classloader: initializing from &#45;cp: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node392" class="node">
<title>String(&#39;macro classloader: initializing from &#45;cp: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-28198.8701" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="18565.114" y="-28202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;macro classloader: initializing from &#45;cp: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-28187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Printers.this.Symbol -->
<g id="node393" class="node">
<title>((Nothing, Nothing)) =&gt; Printers.this.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-28270.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="18641.614" y="-28274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Printers.this.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-28259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- Int(32) =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node394" class="node">
<title>Int(32) =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-28342.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-28346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(32) =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-28331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[ExtensionMethods.this.global.Symbol],String,That] -->
<g id="node395" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[ExtensionMethods.this.global.Symbol],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-28414.8701" rx="503.4201" ry="26.7407"/>
<text text-anchor="start" x="18418.614" y="-28418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[ExtensionMethods.this.global.Symbol],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-28403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[String] =&gt; ?{def /:: ?} -->
<g id="node396" class="node">
<title>Array[String] =&gt; ?{def /:: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-28486.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="18686.614" y="-28490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def /:: ?}</text>
<text text-anchor="middle" x="18766.614" y="-28475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- maxName.type =&gt; ?{def min: ?} -->
<g id="node397" class="node">
<title>maxName.type =&gt; ?{def min: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-28558.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="18674.614" y="-28562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">maxName.type =&gt; ?{def min: ?}</text>
<text text-anchor="middle" x="18766.614" y="-28547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- argPos.type =&gt; ?{def contains: ?} -->
<g id="node398" class="node">
<title>argPos.type =&gt; ?{def contains: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-28630.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="18673.114" y="-28634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">argPos.type =&gt; ?{def contains: ?}</text>
<text text-anchor="middle" x="18766.614" y="-28619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; JavaParsers.this.global.TypeBounds -->
<g id="node399" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; JavaParsers.this.global.TypeBounds</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-28702.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-28706.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; JavaParsers.this.global.TypeBounds</text>
<text text-anchor="middle" x="18766.614" y="-28691.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.concurrent.ExecutionContext -->
<g id="node400" class="node">
<title>scala.concurrent.ExecutionContext</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-28774.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="18671.614" y="-28778.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.concurrent.ExecutionContext</text>
<text text-anchor="middle" x="18766.614" y="-28763.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.runtime.StructuralCallSite] -->
<g id="node401" class="node">
<title>scala.reflect.ClassTag[scala.runtime.StructuralCallSite]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-28846.8701" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="18615.114" y="-28850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.runtime.StructuralCallSite]</text>
<text text-anchor="middle" x="18766.614" y="-28835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Callsite.this.callee.type =&gt; ?{def get: ?} -->
<g id="node402" class="node">
<title>Callsite.this.callee.type =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-28918.8701" rx="168.0831" ry="26.7407"/>
<text text-anchor="start" x="18655.614" y="-28922.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Callsite.this.callee.type =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-28907.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.Tree,List[Interface.this.global.Tree]] -->
<g id="node403" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.Tree,List[Interface.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-28990.8701" rx="507.9054" ry="26.7407"/>
<text text-anchor="start" x="18415.614" y="-28994.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.Tree,List[Interface.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-28979.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- sym.type =&gt; ?{def +: ?} -->
<g id="node404" class="node">
<title>sym.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-29062.8701" rx="108.375" ry="26.7407"/>
<text text-anchor="start" x="18698.114" y="-29066.6701" font-family="Times,serif" font-size="14.00" fill="#000000">sym.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-29051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;\n** %s moved:\n** Previously:\n%s\n** Currently:\n%s&#39;) =&gt; ?{def format: ?} -->
<g id="node405" class="node">
<title>String(&#39;\n** %s moved:\n** Previously:\n%s\n** Currently:\n%s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-29187.8701" rx="109.7032" ry="79.8063"/>
<text text-anchor="middle" x="18766.614" y="-29229.1701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;</text>
<text text-anchor="middle" x="18766.614" y="-29214.1701" font-family="Times,serif" font-size="14.00" fill="#000000">** %s moved:</text>
<text text-anchor="middle" x="18766.614" y="-29199.1701" font-family="Times,serif" font-size="14.00" fill="#000000">** Previously:</text>
<text text-anchor="middle" x="18766.614" y="-29184.1701" font-family="Times,serif" font-size="14.00" fill="#000000">%s</text>
<text text-anchor="middle" x="18766.614" y="-29169.1701" font-family="Times,serif" font-size="14.00" fill="#000000">** Currently:</text>
<text text-anchor="start" x="18697.114" y="-29154.1701" font-family="Times,serif" font-size="14.00" fill="#000000">%s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-29139.1701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CNF.this.Cnf =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node406" class="node">
<title>CNF.this.Cnf =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-29312.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-29316.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CNF.this.Cnf =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-29301.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.Symbol],List[BCodeSkelBuilder.this.global.AnnotationInfo],List[List[BCodeSkelBuilder.this.global.AnnotationInfo]]] -->
<g id="node407" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.Symbol],List[BCodeSkelBuilder.this.global.AnnotationInfo],List[List[BCodeSkelBuilder.this.global.AnnotationInfo]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-29384.8701" rx="760.2796" ry="26.7407"/>
<text text-anchor="start" x="18237.114" y="-29388.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.Symbol],List[BCodeSkelBuilder.this.global.AnnotationInfo],List[List[BCodeSkelBuilder.this.global.AnnotationInfo]]]</text>
<text text-anchor="middle" x="18766.614" y="-29373.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Macros.this.global.FreeTermSymbol],Macros.this.global.FreeSymbol{def name: Macros.this.global.Name{def newName(str: String): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def subName(from: Int,to: Int): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def companionName: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TypeName with Macros.this.global.TermName &lt;: Macros.this.global.Name}; def next: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}}; def rawname: Macros.this.global.Name{def newName(str: String): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def subName(from: Int,to: Int): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def companionName: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TypeName with Macros.this.global.TermName &lt;: Macros.this.global.Name}; def next: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}}; type TypeOfClonedSymbol &gt;: Macros.this.global.TermSymbol with Macros.this.global.TypeSkolem &lt;: Macros.this.global.Symbol{def name: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def rawname: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; type TypeOfClonedSymbol &gt;: Macros.this.global.TermSymbol with Macros.this.global.TypeSkolem &lt;: Macros.this.global.Symbol{type TypeOfClonedSymbol &gt;: Macros.this.global.TermSymbol with Macros.this.global.TypeSkolem &lt;: Macros.this.global.Symbol; type NameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; type NameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}}; type NameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name{def newName(str: String): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def subName(from: Int,to: Int): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def companionName: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TypeName with Macros.this.global.TermName &lt;: Macros.this.global.Name}; def next: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}}},That] -->
<g id="node408" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Macros.this.global.FreeTermSymbol],Macros.this.global.FreeSymbol{def name: Macros.this.global.Name{def newName(str: String): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def subName(from: Int,to: Int): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def companionName: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TypeName with Macros.this.global.TermName &lt;: Macros.this.global.Name}; def next: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}}; def rawname: Macros.this.global.Name{def newName(str: String): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def subName(from: Int,to: Int): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def companionName: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TypeName with Macros.this.global.TermName &lt;: Macros.this.global.Name}; def next: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}}; type TypeOfClonedSymbol &gt;: Macros.this.global.TermSymbol with Macros.this.global.TypeSkolem &lt;: Macros.this.global.Symbol{def name: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def rawname: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; type TypeOfClonedSymbol &gt;: Macros.this.global.TermSymbol with Macros.this.global.TypeSkolem &lt;: Macros.this.global.Symbol{type TypeOfClonedSymbol &gt;: Macros.this.global.TermSymbol with Macros.this.global.TypeSkolem &lt;: Macros.this.global.Symbol; type NameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; type NameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}}; type NameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name{def newName(str: String): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def subName(from: Int,to: Int): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def companionName: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TypeName with Macros.this.global.TermName &lt;: Macros.this.global.Name}; def next: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}}},That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-29456.8701" rx="18766.7279" ry="26.7407"/>
<text text-anchor="start" x="5504.614" y="-29460.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Macros.this.global.FreeTermSymbol],Macros.this.global.FreeSymbol{def name: Macros.this.global.Name{def newName(str: String): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def subName(from: Int,to: Int): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def companionName: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TypeName with Macros.this.global.TermName &lt;: Macros.this.global.Name}; def next: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}}; def rawname: Macros.this.global.Name{def newName(str: String): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def subName(from: Int,to: Int): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def companionName: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TypeName with Macros.this.global.TermName &lt;: Macros.this.global.Name}; def next: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}}; type TypeOfClonedSymbol &gt;: Macros.this.global.TermSymbol with Macros.this.global.TypeSkolem &lt;: Macros.this.global.Symbol{def name: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def rawname: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; type TypeOfClonedSymbol &gt;: Macros.this.global.TermSymbol with Macros.this.global.TypeSkolem &lt;: Macros.this.global.Symbol{type TypeOfClonedSymbol &gt;: Macros.this.global.TermSymbol with Macros.this.global.TypeSkolem &lt;: Macros.this.global.Symbol; type NameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; type NameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}}; type NameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name{def newName(str: String): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def subName(from: Int,to: Int): Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; def companionName: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TypeName with Macros.this.global.TermName &lt;: Macros.this.global.Name}; def next: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name{def next: Macros.this.global.Name; type ThisNameType &gt;: Macros.this.global.TermName with Macros.this.global.TypeName &lt;: Macros.this.global.Name}}},That]</text>
<text text-anchor="middle" x="18766.614" y="-29445.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],SpecializeTypes.this.global.TypeTree,That] -->
<g id="node409" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],SpecializeTypes.this.global.TypeTree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-29528.8701" rx="485.5648" ry="26.7407"/>
<text text-anchor="start" x="18431.114" y="-29532.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],SpecializeTypes.this.global.TypeTree,That]</text>
<text text-anchor="middle" x="18766.614" y="-29517.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.asm.tree.analysis.Frame[scala.tools.asm.tree.analysis.SourceValue] =&gt; ?{def peekStack: ?} -->
<g id="node410" class="node">
<title>scala.tools.asm.tree.analysis.Frame[scala.tools.asm.tree.analysis.SourceValue] =&gt; ?{def peekStack: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-29600.8701" rx="410.6582" ry="26.7407"/>
<text text-anchor="start" x="18484.114" y="-29604.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.asm.tree.analysis.Frame[scala.tools.asm.tree.analysis.SourceValue] =&gt; ?{def peekStack: ?}</text>
<text text-anchor="middle" x="18766.614" y="-29589.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Symbol -->
<g id="node411" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-29672.8701" rx="284.0141" ry="26.7407"/>
<text text-anchor="start" x="18573.614" y="-29676.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-29661.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- xs.type =&gt; ?{def mkLines: ?} -->
<g id="node412" class="node">
<title>xs.type =&gt; ?{def mkLines: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-29744.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="18683.614" y="-29748.6701" font-family="Times,serif" font-size="14.00" fill="#000000">xs.type =&gt; ?{def mkLines: ?}</text>
<text text-anchor="middle" x="18766.614" y="-29733.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ContextErrors.this.Context -->
<g id="node413" class="node">
<title>ContextErrors.this.Context</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-29816.8701" rx="115.0173" ry="26.7407"/>
<text text-anchor="start" x="18693.114" y="-29820.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ContextErrors.this.Context</text>
<text text-anchor="middle" x="18766.614" y="-29805.6701" font-family="Times,serif" font-size="14.00" fill="#000000">107 times = 10ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Namers.this.global.ClassDef -->
<g id="node414" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Namers.this.global.ClassDef</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-29888.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-29892.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Namers.this.global.ClassDef</text>
<text text-anchor="middle" x="18766.614" y="-29877.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Map[Calculate.this.global.Symbol,Int] =&gt; ?{def +=: ?} -->
<g id="node415" class="node">
<title>Map[Calculate.this.global.Symbol,Int] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-29960.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="18613.114" y="-29964.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Map[Calculate.this.global.Symbol,Int] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-29949.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- (=&gt; Char(&#39;.&#39;)) =&gt; String -->
<g id="node416" class="node">
<title>(=&gt; Char(&#39;.&#39;)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-30032.8701" rx="103.4757" ry="26.7407"/>
<text text-anchor="start" x="18701.614" y="-30036.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Char(&#39;.&#39;)) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-30021.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- MatchCodeGen.this.global.Symbol =&gt; List[MatchCodeGen.this.global.Symbol] -->
<g id="node417" class="node">
<title>MatchCodeGen.this.global.Symbol =&gt; List[MatchCodeGen.this.global.Symbol]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-30104.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="18545.614" y="-30108.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchCodeGen.this.global.Symbol =&gt; List[MatchCodeGen.this.global.Symbol]</text>
<text text-anchor="middle" x="18766.614" y="-30093.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Typers.this.global.Tree =&gt; Typers.this.global.Type -->
<g id="node418" class="node">
<title>Typers.this.global.Tree =&gt; Typers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-30176.8701" rx="210.0214" ry="26.7407"/>
<text text-anchor="start" x="18626.114" y="-30180.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Typers.this.global.Tree =&gt; Typers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-30165.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- String =&gt; ?{def stripPrefix: ?} -->
<g id="node419" class="node">
<title>String =&gt; ?{def stripPrefix: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-30248.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-30252.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def stripPrefix: ?}</text>
<text text-anchor="middle" x="18766.614" y="-30237.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- s.name.type =&gt; ?{def +: ?} -->
<g id="node420" class="node">
<title>s.name.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-30320.8701" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="18690.114" y="-30324.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.name.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-30309.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Int] =&gt; Array[CNF.this.Clause] -->
<g id="node421" class="node">
<title>Array[Int] =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-30392.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="18661.114" y="-30396.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Int] =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-30381.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Typers.this.global.Tree -->
<g id="node422" class="node">
<title>((Nothing, Nothing)) =&gt; Typers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-30464.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="18634.114" y="-30468.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Typers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-30453.6701" font-family="Times,serif" font-size="14.00" fill="#000000">37 times = 2ms</text>
</g>
<!-- JavaScanners.this.global.javanme.SUPERkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node423" class="node">
<title>JavaScanners.this.global.javanme.SUPERkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-30536.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="18584.614" y="-30540.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.SUPERkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-30525.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;amp&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node424" class="node">
<title>String(&#39;amp&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-30608.8701" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="18685.614" y="-30612.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;amp&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-30597.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Symbol,List[Typers.this.global.Symbol]] -->
<g id="node425" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Symbol,List[Typers.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-30680.8701" rx="510.5622" ry="26.7407"/>
<text text-anchor="start" x="18413.614" y="-30684.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Symbol,List[Typers.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-30669.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Any],Any,That] -->
<g id="node426" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Any],Any,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-30752.8701" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="18601.114" y="-30756.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Any],Any,That]</text>
<text text-anchor="middle" x="18766.614" y="-30741.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Long] -->
<g id="node427" class="node">
<title>(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Long]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-30824.8701" rx="234.1047" ry="26.7407"/>
<text text-anchor="start" x="18609.114" y="-30828.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Long]</text>
<text text-anchor="middle" x="18766.614" y="-30813.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Patterns for classfile names from which the inliner is allowed to pull in code.\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Matches classes in the empty package\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;** &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;All classes\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;a.C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Class a.C\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;a.* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Classes in package a\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;a.** &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Classes in a and in sub&#45;packages of a\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;**.Util &#160;&#160;&#160;&#160;&#160;&#160;&#160;Classes named Util in any package (including the empty package)\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;a.**.*Util* &#160;&#160;&#160;Classes in a and sub&#45;packages with Util in their name (including a.Util)\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;a.C$D &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The nested class D defined in class a.C\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;scala.Predef$ &#160;The scala.Predef object\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;&lt;sources&gt; &#160;&#160;&#160;&#160;&#160;Classes defined in source files compiled in the current compilation, either\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;passed explicitly to the compiler or picked up from the `&#45;sourcepath`\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|The setting accepts a list of patterns: `&#45;opt&#45;inline&#45;from:p1:p2`. The setting can be passed\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|multiple times, the list of patterns gets extended. A leading `!` marks a pattern excluding.\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|The last matching pattern defines whether a classfile is included or excluded (default: excluded).\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|For example, `a.**:!a.b.**` includes classes in a and sub&#45;packages, but not in a.b and sub&#45;packages.\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|Note: on the command&#45;line you might need to quote patterns containing `*` to prevent the shell\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|from expanding it to a list of files in the current directory.&#39;) =&gt; ?{def stripMargin: ?} -->
<g id="node428" class="node">
<title>String(&#39;Patterns for classfile names from which the inliner is allowed to pull in code.\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Matches classes in the empty package\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;** &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;All classes\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;a.C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Class a.C\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;a.* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Classes in package a\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;a.** &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Classes in a and in sub&#45;packages of a\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;**.Util &#160;&#160;&#160;&#160;&#160;&#160;&#160;Classes named Util in any package (including the empty package)\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;a.**.*Util* &#160;&#160;&#160;Classes in a and sub&#45;packages with Util in their name (including a.Util)\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;a.C$D &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The nested class D defined in class a.C\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;scala.Predef$ &#160;The scala.Predef object\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;&lt;sources&gt; &#160;&#160;&#160;&#160;&#160;Classes defined in source files compiled in the current compilation, either\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;passed explicitly to the compiler or picked up from the `&#45;sourcepath`\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|The setting accepts a list of patterns: `&#45;opt&#45;inline&#45;from:p1:p2`. The setting can be passed\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|multiple times, the list of patterns gets extended. A leading `!` marks a pattern excluding.\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|The last matching pattern defines whether a classfile is included or excluded (default: excluded).\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|For example, `a.**:!a.b.**` includes classes in a and sub&#45;packages, but not in a.b and sub&#45;packages.\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|Note: on the command&#45;line you might need to quote patterns containing `*` to prevent the shell\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;|from expanding it to a list of files in the current directory.&#39;) =&gt; ?{def stripMargin: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-31097.8701" rx="422.6998" ry="228.291"/>
<text text-anchor="middle" x="18766.614" y="-31244.1701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Patterns for classfile names from which the inliner is allowed to pull in code.</text>
<text text-anchor="middle" x="18766.614" y="-31229.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Matches classes in the empty package</text>
<text text-anchor="middle" x="18766.614" y="-31214.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;** &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;All classes</text>
<text text-anchor="middle" x="18766.614" y="-31199.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;a.C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Class a.C</text>
<text text-anchor="middle" x="18766.614" y="-31184.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;a.* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Classes in package a</text>
<text text-anchor="middle" x="18766.614" y="-31169.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;a.** &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Classes in a and in sub&#45;packages of a</text>
<text text-anchor="middle" x="18766.614" y="-31154.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;**.Util &#160;&#160;&#160;&#160;&#160;&#160;&#160;Classes named Util in any package (including the empty package)</text>
<text text-anchor="middle" x="18766.614" y="-31139.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;a.**.*Util* &#160;&#160;&#160;Classes in a and sub&#45;packages with Util in their name (including a.Util)</text>
<text text-anchor="middle" x="18766.614" y="-31124.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;a.C$D &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The nested class D defined in class a.C</text>
<text text-anchor="middle" x="18766.614" y="-31109.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;scala.Predef$ &#160;The scala.Predef object</text>
<text text-anchor="middle" x="18766.614" y="-31094.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;&lt;sources&gt; &#160;&#160;&#160;&#160;&#160;Classes defined in source files compiled in the current compilation, either</text>
<text text-anchor="middle" x="18766.614" y="-31079.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;passed explicitly to the compiler or picked up from the `&#45;sourcepath`</text>
<text text-anchor="middle" x="18766.614" y="-31064.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;|</text>
<text text-anchor="middle" x="18766.614" y="-31049.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;|The setting accepts a list of patterns: `&#45;opt&#45;inline&#45;from:p1:p2`. The setting can be passed</text>
<text text-anchor="middle" x="18766.614" y="-31034.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;|multiple times, the list of patterns gets extended. A leading `!` marks a pattern excluding.</text>
<text text-anchor="middle" x="18766.614" y="-31019.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;|The last matching pattern defines whether a classfile is included or excluded (default: excluded).</text>
<text text-anchor="middle" x="18766.614" y="-31004.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;|For example, `a.**:!a.b.**` includes classes in a and sub&#45;packages, but not in a.b and sub&#45;packages.</text>
<text text-anchor="middle" x="18766.614" y="-30989.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;|</text>
<text text-anchor="middle" x="18766.614" y="-30974.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;|Note: on the command&#45;line you might need to quote patterns containing `*` to prevent the shell</text>
<text text-anchor="start" x="18475.614" y="-30959.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;|from expanding it to a list of files in the current directory.&#39;) =&gt; ?{def stripMargin: ?}</text>
<text text-anchor="middle" x="18766.614" y="-30944.1701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Tree,List[Typers.this.global.Tree]] -->
<g id="node429" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Tree,List[Typers.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-31370.8701" rx="485.1505" ry="26.7407"/>
<text text-anchor="start" x="18431.614" y="-31374.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Tree,List[Typers.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-31359.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; ToolBoxGlobal.this.CompilationUnit -->
<g id="node430" class="node">
<title>((Nothing, Nothing)) =&gt; ToolBoxGlobal.this.CompilationUnit</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-31442.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="18595.114" y="-31446.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; ToolBoxGlobal.this.CompilationUnit</text>
<text text-anchor="middle" x="18766.614" y="-31431.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- threaded.type =&gt; ?{def asScala: ?} -->
<g id="node431" class="node">
<title>threaded.type =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-31514.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="18670.114" y="-31518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">threaded.type =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-31503.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ScalaSettings.this.BooleanSetting =&gt; ?{def andThen: ?} -->
<g id="node432" class="node">
<title>ScalaSettings.this.BooleanSetting =&gt; ?{def andThen: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-31586.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-31590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ScalaSettings.this.BooleanSetting =&gt; ?{def andThen: ?}</text>
<text text-anchor="middle" x="18766.614" y="-31575.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[IndexedSeq[SpecializeTypes.this.global.ClassSymbol],SpecializeTypes.this.global.Type,That] -->
<g id="node433" class="node">
<title>scala.collection.generic.CanBuildFrom[IndexedSeq[SpecializeTypes.this.global.ClassSymbol],SpecializeTypes.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-31658.8701" rx="529.746" ry="26.7407"/>
<text text-anchor="start" x="18400.114" y="-31662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[IndexedSeq[SpecializeTypes.this.global.ClassSymbol],SpecializeTypes.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-31647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Reifiers.this.global.Symbol -->
<g id="node434" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Reifiers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-31730.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="18560.614" y="-31734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Reifiers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-31719.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- (=&gt; TypeDiagnostics.this.global.Scope) =&gt; TypeDiagnostics.this.global.Type -->
<g id="node435" class="node">
<title>(=&gt; TypeDiagnostics.this.global.Scope) =&gt; TypeDiagnostics.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-31802.8701" rx="313.4968" ry="26.7407"/>
<text text-anchor="start" x="18553.114" y="-31806.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; TypeDiagnostics.this.global.Scope) =&gt; TypeDiagnostics.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-31791.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;This for %s, reified as freeVar&#39;) =&gt; ?{def format: ?} -->
<g id="node436" class="node">
<title>String(&#39;This for %s, reified as freeVar&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-31874.8701" rx="243.9037" ry="26.7407"/>
<text text-anchor="start" x="18602.114" y="-31878.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;This for %s, reified as freeVar&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-31863.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Extractors.this.global.Symbol -->
<g id="node437" class="node">
<title>((Nothing, Nothing)) =&gt; Extractors.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-31946.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="18616.114" y="-31950.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Extractors.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-31935.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- NullnessFrame.this.type =&gt; ?{def stackTop: ?} -->
<g id="node438" class="node">
<title>NullnessFrame.this.type =&gt; ?{def stackTop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-32018.8701" rx="195.7372" ry="26.7407"/>
<text text-anchor="start" x="18636.114" y="-32022.6701" font-family="Times,serif" font-size="14.00" fill="#000000">NullnessFrame.this.type =&gt; ?{def stackTop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-32007.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 2ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Set[PropositionalLogic.this.Prop] -->
<g id="node439" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Set[PropositionalLogic.this.Prop]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-32090.8701" rx="252.3743" ry="26.7407"/>
<text text-anchor="start" x="18596.114" y="-32094.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Set[PropositionalLogic.this.Prop]</text>
<text text-anchor="middle" x="18766.614" y="-32079.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Namers.this.global.ImportSelector],Namers.this.global.Name,List[Namers.this.global.Name]] -->
<g id="node440" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Namers.this.global.ImportSelector],Namers.this.global.Name,List[Namers.this.global.Name]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-32162.8701" rx="548.9298" ry="26.7407"/>
<text text-anchor="start" x="18386.614" y="-32166.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Namers.this.global.ImportSelector],Namers.this.global.Name,List[Namers.this.global.Name]]</text>
<text text-anchor="middle" x="18766.614" y="-32151.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- ((List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Symbol]) -->
<g id="node441" class="node">
<title>((List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-32234.8701" rx="504.7485" ry="26.7407"/>
<text text-anchor="start" x="18417.614" y="-32238.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</text>
<text text-anchor="middle" x="18766.614" y="-32223.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[CNF.this.Sym,Int],(Int, CNF.this.Sym),Map[Int,CNF.this.Sym]] -->
<g id="node442" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[CNF.this.Sym,Int],(Int, CNF.this.Sym),Map[Int,CNF.this.Sym]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-32306.8701" rx="545.3587" ry="26.7407"/>
<text text-anchor="start" x="18389.114" y="-32310.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[CNF.this.Sym,Int],(Int, CNF.this.Sym),Map[Int,CNF.this.Sym]]</text>
<text text-anchor="middle" x="18766.614" y="-32295.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Flatten.this.global.Tree =&gt; Flatten.this.global.Type -->
<g id="node443" class="node">
<title>Flatten.this.global.Tree =&gt; Flatten.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-32378.8701" rx="210.0214" ry="26.7407"/>
<text text-anchor="start" x="18626.114" y="-32382.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Flatten.this.global.Tree =&gt; Flatten.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-32367.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;$amp$plus&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType -->
<g id="node444" class="node">
<title>String(&#39;$amp$plus&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-32450.8701" rx="374.5333" ry="26.7407"/>
<text text-anchor="start" x="18509.614" y="-32454.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;$amp$plus&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</text>
<text text-anchor="middle" x="18766.614" y="-32439.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- invocationFrame.type =&gt; ?{def stackTop: ?} -->
<g id="node445" class="node">
<title>invocationFrame.type =&gt; ?{def stackTop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-32522.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="18643.114" y="-32526.6701" font-family="Times,serif" font-size="14.00" fill="#000000">invocationFrame.type =&gt; ?{def stackTop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-32511.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; MatchOptimization.this.global.Symbol -->
<g id="node446" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; MatchOptimization.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-32594.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-32598.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; MatchOptimization.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-32583.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.INT.type),That] -->
<g id="node447" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.INT.type),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-32666.8701" rx="434.3272" ry="26.7407"/>
<text text-anchor="start" x="18467.614" y="-32670.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.INT.type),That]</text>
<text text-anchor="middle" x="18766.614" y="-32655.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Int, Int)],DocComments.this.UseCase,That] -->
<g id="node448" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Int, Int)],DocComments.this.UseCase,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-32738.8701" rx="356.2637" ry="26.7407"/>
<text text-anchor="start" x="18522.614" y="-32742.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Int, Int)],DocComments.this.UseCase,That]</text>
<text text-anchor="middle" x="18766.614" y="-32727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Global.this.analyzer.typerFactory.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node449" class="node">
<title>Global.this.analyzer.typerFactory.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-32810.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="18616.114" y="-32814.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.analyzer.typerFactory.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-32799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[scala.reflect.io.Path] =&gt; ?{def map: ?} -->
<g id="node450" class="node">
<title>Array[scala.reflect.io.Path] =&gt; ?{def map: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-32882.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="18641.614" y="-32886.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[scala.reflect.io.Path] =&gt; ?{def map: ?}</text>
<text text-anchor="middle" x="18766.614" y="-32871.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[(MatchAnalyzer.this.Var, (Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const]))],String,That] -->
<g id="node451" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[(MatchAnalyzer.this.Var, (Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const]))],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-32954.8701" rx="596.182" ry="26.7407"/>
<text text-anchor="start" x="18353.114" y="-32958.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[(MatchAnalyzer.this.Var, (Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const]))],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-32943.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- name.type =&gt; ?{def getterName: ?} -->
<g id="node452" class="node">
<title>name.type =&gt; ?{def getterName: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-33026.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="18667.114" y="-33030.6701" font-family="Times,serif" font-size="14.00" fill="#000000">name.type =&gt; ?{def getterName: ?}</text>
<text text-anchor="middle" x="18766.614" y="-33015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[ClassLoader] -->
<g id="node453" class="node">
<title>scala.reflect.ClassTag[ClassLoader]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-33098.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="18668.614" y="-33102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ClassLoader]</text>
<text text-anchor="middle" x="18766.614" y="-33087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.reflect.io.AbstractFile] -->
<g id="node454" class="node">
<title>scala.reflect.ClassTag[scala.reflect.io.AbstractFile]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-33170.8701" rx="208.693" ry="26.7407"/>
<text text-anchor="start" x="18627.114" y="-33174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.reflect.io.AbstractFile]</text>
<text text-anchor="middle" x="18766.614" y="-33159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 3ms</text>
</g>
<!-- (=&gt; Array[Double]) =&gt; Array[Class[_]] -->
<g id="node455" class="node">
<title>(=&gt; Array[Double]) =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-33242.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="18656.614" y="-33246.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Double]) =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-33231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; =&gt; String -->
<g id="node456" class="node">
<title>((Nothing, Nothing)) =&gt; =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-33314.8701" rx="147.1565" ry="26.7407"/>
<text text-anchor="start" x="18670.614" y="-33318.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-33303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 2ms</text>
</g>
<!-- (=&gt; Macros.this.global.Scope) =&gt; Macros.this.global.Type -->
<g id="node457" class="node">
<title>(=&gt; Macros.this.global.Scope) =&gt; Macros.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-33386.8701" rx="241.6612" ry="26.7407"/>
<text text-anchor="start" x="18603.614" y="-33390.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Macros.this.global.Scope) =&gt; Macros.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-33375.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Compiling source file%s: %s to %s&#39;) =&gt; ?{def format: ?} -->
<g id="node458" class="node">
<title>String(&#39;Compiling source file%s: %s to %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-33458.8701" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="18587.614" y="-33462.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Compiling source file%s: %s to %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-33447.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],String,That] -->
<g id="node459" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-33530.8701" rx="347.379" ry="26.7407"/>
<text text-anchor="start" x="18529.114" y="-33534.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-33519.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- _1.s.type =&gt; Boolean -->
<g id="node460" class="node">
<title>_1.s.type =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-33602.8701" rx="95.4188" ry="26.7407"/>
<text text-anchor="start" x="18707.114" y="-33606.6701" font-family="Times,serif" font-size="14.00" fill="#000000">_1.s.type =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-33591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[String] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node461" class="node">
<title>Option[String] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-33674.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="18605.614" y="-33678.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[String] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-33663.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;internal error: %s (%s, %s) is not supported&#39;) =&gt; ?{def format: ?} -->
<g id="node462" class="node">
<title>String(&#39;internal error: %s (%s, %s) is not supported&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-33746.8701" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="18565.114" y="-33750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;internal error: %s (%s, %s) is not supported&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-33735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- List[TreeBrowsers.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node463" class="node">
<title>List[TreeBrowsers.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-33818.8701" rx="333.0946" ry="26.7407"/>
<text text-anchor="start" x="18539.114" y="-33822.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[TreeBrowsers.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-33807.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Map[Int,scala.tools.asm.Type] =&gt; ?{def +=: ?} -->
<g id="node464" class="node">
<title>scala.collection.immutable.Map[Int,scala.tools.asm.Type] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-33890.8701" rx="304.1118" ry="26.7407"/>
<text text-anchor="start" x="18559.614" y="-33894.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[Int,scala.tools.asm.Type] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-33879.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;PrefixedAttribute&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType -->
<g id="node465" class="node">
<title>String(&#39;PrefixedAttribute&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-33962.8701" rx="397.2881" ry="26.7407"/>
<text text-anchor="start" x="18493.614" y="-33966.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;PrefixedAttribute&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</text>
<text text-anchor="middle" x="18766.614" y="-33951.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[T],(T, T),Seq[(T, T)]] -->
<g id="node466" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[T],(T, T),Seq[(T, T)]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-34034.8701" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="18585.114" y="-34038.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[T],(T, T),Seq[(T, T)]]</text>
<text text-anchor="middle" x="18766.614" y="-34023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- frame.type =&gt; ?{def getValue: ?} -->
<g id="node467" class="node">
<title>frame.type =&gt; ?{def getValue: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-34106.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="18673.114" y="-34110.6701" font-family="Times,serif" font-size="14.00" fill="#000000">frame.type =&gt; ?{def getValue: ?}</text>
<text text-anchor="middle" x="18766.614" y="-34095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[StdAttachments.this.SuperArgsAttachment] -->
<g id="node468" class="node">
<title>scala.reflect.ClassTag[StdAttachments.this.SuperArgsAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-34178.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="18584.614" y="-34182.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[StdAttachments.this.SuperArgsAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-34167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Double] =&gt; Array[CNF.this.Clause] -->
<g id="node469" class="node">
<title>Array[Double] =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-34250.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="18649.114" y="-34254.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Double] =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-34239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; List[TreeCheckers.this.global.DefTree]) =&gt; ?{def ::=: ?} -->
<g id="node470" class="node">
<title>(=&gt; List[TreeCheckers.this.global.DefTree]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-34322.8701" rx="250.1317" ry="26.7407"/>
<text text-anchor="start" x="18597.614" y="-34326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[TreeCheckers.this.global.DefTree]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-34311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- jvmargs.type =&gt; ?{def toList: ?} -->
<g id="node471" class="node">
<title>jvmargs.type =&gt; ?{def toList: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-34394.8701" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="18676.114" y="-34398.6701" font-family="Times,serif" font-size="14.00" fill="#000000">jvmargs.type =&gt; ?{def toList: ?}</text>
<text text-anchor="middle" x="18766.614" y="-34383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Unit =&gt; Typers.this.ContextReporter -->
<g id="node472" class="node">
<title>Unit =&gt; Typers.this.ContextReporter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-34466.8701" rx="154.7129" ry="26.7407"/>
<text text-anchor="start" x="18665.114" y="-34470.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Typers.this.ContextReporter</text>
<text text-anchor="middle" x="18766.614" y="-34455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Long] =&gt; Long -->
<g id="node473" class="node">
<title>Array[Long] =&gt; Long</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-34538.8701" rx="97.6615" ry="26.7407"/>
<text text-anchor="start" x="18705.614" y="-34542.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Long] =&gt; Long</text>
<text text-anchor="middle" x="18766.614" y="-34527.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Array[StackTraceElement] =&gt; ?{def mkString: ?} -->
<g id="node474" class="node">
<title>Array[StackTraceElement] =&gt; ?{def mkString: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-34610.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="18628.114" y="-34614.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[StackTraceElement] =&gt; ?{def mkString: ?}</text>
<text text-anchor="middle" x="18766.614" y="-34599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- MatchTranslation.this.global.Tree =&gt; ?{def DOT: ?} -->
<g id="node475" class="node">
<title>MatchTranslation.this.global.Tree =&gt; ?{def DOT: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-34682.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="18620.614" y="-34686.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchTranslation.this.global.Tree =&gt; ?{def DOT: ?}</text>
<text text-anchor="middle" x="18766.614" y="-34671.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.INTkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node476" class="node">
<title>JavaScanners.this.global.javanme.INTkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-34754.8701" rx="255.0313" ry="26.7407"/>
<text text-anchor="start" x="18594.114" y="-34758.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.INTkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-34743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- desc.type =&gt; ?{def last: ?} -->
<g id="node477" class="node">
<title>desc.type =&gt; ?{def last: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-34826.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="18692.614" y="-34830.6701" font-family="Times,serif" font-size="14.00" fill="#000000">desc.type =&gt; ?{def last: ?}</text>
<text text-anchor="middle" x="18766.614" y="-34815.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[java.lang.reflect.TypeVariable[Class[_$1]]],String,That] -->
<g id="node478" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[java.lang.reflect.TypeVariable[Class[_$1]]],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-35042.8701" rx="408.9155" ry="26.7407"/>
<text text-anchor="start" x="18485.614" y="-35046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[java.lang.reflect.TypeVariable[Class[_$1]]],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-35031.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[String] -->
<g id="node2369" class="node">
<title>scala.reflect.ClassTag[String]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-34970.8701" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="38080.3606" y="-34974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[String]</text>
<text text-anchor="middle" x="38161.3606" y="-34959.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 9ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[java.lang.reflect.TypeVariable[Class[_$1]]],String,That]&#45;&gt;scala.reflect.ClassTag[String] -->
<g id="edge21" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[java.lang.reflect.TypeVariable[Class[_$1]]],String,That]&#45;&gt;scala.reflect.ClassTag[String]</title>
<path fill="none" stroke="#000000" d="M19173.9741,-35045.1626C21563.0648,-35058.1423 33778.6402,-35117.979 37533.2279,-35006.8701 37705.9706,-35001.7581 37905.1146,-34989.2143 38032.0457,-34980.3774"/>
<polygon fill="#000000" stroke="#000000" points="38032.4656,-34983.8566 38042.1972,-34979.6678 38031.9775,-34976.8737 38032.4656,-34983.8566"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.ClassBType),That] -->
<g id="node479" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.ClassBType),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-35114.8701" rx="445.4545" ry="26.7407"/>
<text text-anchor="start" x="18459.614" y="-35118.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.ClassBType),That]</text>
<text text-anchor="middle" x="18766.614" y="-35103.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- includedFiles.type =&gt; ?{def nonEmpty: ?} -->
<g id="node480" class="node">
<title>includedFiles.type =&gt; ?{def nonEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-35186.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="18649.114" y="-35190.6701" font-family="Times,serif" font-size="14.00" fill="#000000">includedFiles.type =&gt; ?{def nonEmpty: ?}</text>
<text text-anchor="middle" x="18766.614" y="-35175.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- otpe.type =&gt; ?{def +: ?} -->
<g id="node481" class="node">
<title>otpe.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-35258.8701" rx="108.375" ry="26.7407"/>
<text text-anchor="start" x="18698.114" y="-35262.6701" font-family="Times,serif" font-size="14.00" fill="#000000">otpe.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-35247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Reshape.this.global.CompoundTypeTreeOriginalAttachment] -->
<g id="node482" class="node">
<title>scala.reflect.ClassTag[Reshape.this.global.CompoundTypeTreeOriginalAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-35330.8701" rx="337.08" ry="26.7407"/>
<text text-anchor="start" x="18536.114" y="-35334.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Reshape.this.global.CompoundTypeTreeOriginalAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-35319.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Array[BCodeSkelBuilder.this.bTypes.BType] =&gt; Array[String] -->
<g id="node483" class="node">
<title>Array[BCodeSkelBuilder.this.bTypes.BType] =&gt; Array[String]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-35402.8701" rx="257.2738" ry="26.7407"/>
<text text-anchor="start" x="18592.614" y="-35406.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[BCodeSkelBuilder.this.bTypes.BType] =&gt; Array[String]</text>
<text text-anchor="middle" x="18766.614" y="-35391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Tree -->
<g id="node484" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-35474.8701" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="18608.114" y="-35478.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-35463.6701" font-family="Times,serif" font-size="14.00" fill="#000000">40 times = 6ms</text>
</g>
<!-- scala.collection.immutable.Set[Reifier.this.global.Symbol] =&gt; ?{def ++=: ?} -->
<g id="node485" class="node">
<title>scala.collection.immutable.Set[Reifier.this.global.Symbol] =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-35546.8701" rx="311.6683" ry="26.7407"/>
<text text-anchor="start" x="18554.114" y="-35550.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[Reifier.this.global.Symbol] =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-35535.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; Validators.this.global.Scope) =&gt; Validators.this.global.Type -->
<g id="node486" class="node">
<title>(=&gt; Validators.this.global.Scope) =&gt; Validators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-35618.8701" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="18588.614" y="-35622.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Validators.this.global.Scope) =&gt; Validators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-35607.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- i.type =&gt; ?{def toInt: ?} -->
<g id="node487" class="node">
<title>i.type =&gt; ?{def toInt: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-35690.8701" rx="106.5467" ry="26.7407"/>
<text text-anchor="start" x="18699.114" y="-35694.6701" font-family="Times,serif" font-size="14.00" fill="#000000">i.type =&gt; ?{def toInt: ?}</text>
<text text-anchor="middle" x="18766.614" y="-35679.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(2048) =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node488" class="node">
<title>Int(2048) =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-35762.8701" rx="224.72" ry="26.7407"/>
<text text-anchor="start" x="18615.614" y="-35766.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(2048) =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-35751.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Reifiers.this.global.Type -->
<g id="node489" class="node">
<title>Unit =&gt; Reifiers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-35834.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="18674.614" y="-35838.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Reifiers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-35823.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.analyzer.global.Type],(RefChecks.this.global.analyzer.global.Type, RefChecks.this.global.Type),That] -->
<g id="node490" class="node">
<title>scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.analyzer.global.Type],(RefChecks.this.global.analyzer.global.Type, RefChecks.this.global.Type),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-35906.8701" rx="668.846" ry="26.7407"/>
<text text-anchor="start" x="18301.614" y="-35910.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.analyzer.global.Type],(RefChecks.this.global.analyzer.global.Type, RefChecks.this.global.Type),That]</text>
<text text-anchor="middle" x="18766.614" y="-35895.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.ValDef,List[SpecializeTypes.this.global.ValDef]] -->
<g id="node491" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.ValDef,List[SpecializeTypes.this.global.ValDef]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-35978.8701" rx="627.4075" ry="26.7407"/>
<text text-anchor="start" x="18331.114" y="-35982.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.ValDef,List[SpecializeTypes.this.global.ValDef]]</text>
<text text-anchor="middle" x="18766.614" y="-35967.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; DocComments.this.Symbol -->
<g id="node492" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; DocComments.this.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-36050.8701" rx="231.4481" ry="26.7407"/>
<text text-anchor="start" x="18611.114" y="-36054.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; DocComments.this.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-36039.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; SpecializeTypes.this.global.Scope) =&gt; SpecializeTypes.this.global.Type -->
<g id="node493" class="node">
<title>(=&gt; SpecializeTypes.this.global.Scope) =&gt; SpecializeTypes.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-36122.8701" rx="309.0113" ry="26.7407"/>
<text text-anchor="start" x="18556.114" y="-36126.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; SpecializeTypes.this.global.Scope) =&gt; SpecializeTypes.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-36111.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; java.nio.ByteBuffer -->
<g id="node494" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; java.nio.ByteBuffer</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-36194.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="18607.114" y="-36198.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; java.nio.ByteBuffer</text>
<text text-anchor="middle" x="18766.614" y="-36183.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Reifiers.this.global.Tree],Reifiers.this.ApplyHole,That] -->
<g id="node495" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Reifiers.this.global.Tree],Reifiers.this.ApplyHole,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-36266.8701" rx="398.2023" ry="26.7407"/>
<text text-anchor="start" x="18493.114" y="-36270.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Reifiers.this.global.Tree],Reifiers.this.ApplyHole,That]</text>
<text text-anchor="middle" x="18766.614" y="-36255.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Nothing],DependencyGraph.this.Edge,That] -->
<g id="node496" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Nothing],DependencyGraph.this.Edge,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-36338.8701" rx="354.0212" ry="26.7407"/>
<text text-anchor="start" x="18524.114" y="-36342.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Nothing],DependencyGraph.this.Edge,That]</text>
<text text-anchor="middle" x="18766.614" y="-36327.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; List[TreeCheckers.this.global.MemberDef]) =&gt; ?{def ::=: ?} -->
<g id="node497" class="node">
<title>(=&gt; List[TreeCheckers.this.global.MemberDef]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-36410.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="18586.114" y="-36414.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[TreeCheckers.this.global.MemberDef]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-36399.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scalaFiles.type =&gt; ?{def ++: ?} -->
<g id="node498" class="node">
<title>scalaFiles.type =&gt; ?{def ++: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-36482.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="18679.114" y="-36486.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scalaFiles.type =&gt; ?{def ++: ?}</text>
<text text-anchor="middle" x="18766.614" y="-36471.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Array[String] =&gt; Array[Int] -->
<g id="node499" class="node">
<title>Array[String] =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-36554.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="18689.614" y="-36558.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-36543.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Flatten.this.global.Tree) =&gt; Flatten.this.global.Type -->
<g id="node500" class="node">
<title>(=&gt; Flatten.this.global.Tree) =&gt; Flatten.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-36626.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-36630.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Flatten.this.global.Tree) =&gt; Flatten.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-36615.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- StdOpts.this.SelfUpdate.name.type =&gt; ?{def &#45;&#45;|: ?} -->
<g id="node501" class="node">
<title>StdOpts.this.SelfUpdate.name.type =&gt; ?{def &#45;&#45;|: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-36698.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="18625.114" y="-36702.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StdOpts.this.SelfUpdate.name.type =&gt; ?{def &#45;&#45;|: ?}</text>
<text text-anchor="middle" x="18766.614" y="-36687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[scala.reflect.io.Path]],(List[scala.reflect.io.Path], scala.util.Try[scala.tools.nsc.plugins.PluginDescription]),That] -->
<g id="node502" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[scala.reflect.io.Path]],(List[scala.reflect.io.Path], scala.util.Try[scala.tools.nsc.plugins.PluginDescription]),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-36770.8701" rx="634.0496" ry="26.7407"/>
<text text-anchor="start" x="18326.114" y="-36774.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[scala.reflect.io.Path]],(List[scala.reflect.io.Path], scala.util.Try[scala.tools.nsc.plugins.PluginDescription]),That]</text>
<text text-anchor="middle" x="18766.614" y="-36759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Symbol],BTypesFromSymbols.this.ClassBType,That] -->
<g id="node503" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Symbol],BTypesFromSymbols.this.ClassBType,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-36842.8701" rx="523.9323" ry="26.7407"/>
<text text-anchor="start" x="18404.114" y="-36846.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Symbol],BTypesFromSymbols.this.ClassBType,That]</text>
<text text-anchor="middle" x="18766.614" y="-36831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Symbol],List[BCodeHelpers.this.global.AnnotationInfo],List[List[BCodeHelpers.this.global.AnnotationInfo]]] -->
<g id="node504" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Symbol],List[BCodeHelpers.this.global.AnnotationInfo],List[List[BCodeHelpers.this.global.AnnotationInfo]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-36914.8701" rx="712.1131" ry="26.7407"/>
<text text-anchor="start" x="18271.114" y="-36918.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Symbol],List[BCodeHelpers.this.global.AnnotationInfo],List[List[BCodeHelpers.this.global.AnnotationInfo]]]</text>
<text text-anchor="middle" x="18766.614" y="-36903.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Erasure.this.global.Scope) =&gt; Erasure.this.global.Type -->
<g id="node505" class="node">
<title>(=&gt; Erasure.this.global.Scope) =&gt; Erasure.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-36986.8701" rx="241.6612" ry="26.7407"/>
<text text-anchor="start" x="18603.614" y="-36990.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Erasure.this.global.Scope) =&gt; Erasure.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-36975.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- Unit =&gt; Namers.this.global.Type -->
<g id="node506" class="node">
<title>Unit =&gt; Namers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-37058.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="18674.614" y="-37062.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Namers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-37047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeGen.this.global.ValDef],TreeGen.this.global.Symbol,List[TreeGen.this.global.Symbol]] -->
<g id="node507" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeGen.this.global.ValDef],TreeGen.this.global.Symbol,List[TreeGen.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-37130.8701" rx="542.2018" ry="26.7407"/>
<text text-anchor="start" x="18391.114" y="-37134.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeGen.this.global.ValDef],TreeGen.this.global.Symbol,List[TreeGen.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-37119.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.Map[String,String],(String, String),That] -->
<g id="node508" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.Map[String,String],(String, String),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-37202.8701" rx="419.1287" ry="26.7407"/>
<text text-anchor="start" x="18478.114" y="-37206.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.Map[String,String],(String, String),That]</text>
<text text-anchor="middle" x="18766.614" y="-37191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- String(&#39;No %s available for %s&#39;) =&gt; ?{def format: ?} -->
<g id="node509" class="node">
<title>String(&#39;No %s available for %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-37274.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="18620.614" y="-37278.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;No %s available for %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-37263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- labelSym.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node510" class="node">
<title>labelSym.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-37346.8701" rx="131.5437" ry="26.7407"/>
<text text-anchor="start" x="18681.614" y="-37350.6701" font-family="Times,serif" font-size="14.00" fill="#000000">labelSym.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-37335.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Int) =&gt; ?{def &amp;=: ?} -->
<g id="node511" class="node">
<title>(=&gt; Int) =&gt; ?{def &amp;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-37418.8701" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="18695.614" y="-37422.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Int) =&gt; ?{def &amp;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-37407.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.CaseDef],MatchTranslation.this.global.CaseDef,That] -->
<g id="node512" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.CaseDef],MatchTranslation.this.global.CaseDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-37490.8701" rx="506.077" ry="26.7407"/>
<text text-anchor="start" x="18416.614" y="-37494.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.CaseDef],MatchTranslation.this.global.CaseDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-37479.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[SymbolicXMLBuilder.this.global.Tree],SymbolicXMLBuilder.this.global.Apply,That] -->
<g id="node513" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[SymbolicXMLBuilder.this.global.Tree],SymbolicXMLBuilder.this.global.Apply,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-37562.8701" rx="519.9471" ry="26.7407"/>
<text text-anchor="start" x="18407.114" y="-37566.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[SymbolicXMLBuilder.this.global.Tree],SymbolicXMLBuilder.this.global.Apply,That]</text>
<text text-anchor="middle" x="18766.614" y="-37551.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;PCData&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType -->
<g id="node514" class="node">
<title>String(&#39;PCData&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-37634.8701" rx="362.0773" ry="26.7407"/>
<text text-anchor="start" x="18518.614" y="-37638.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;PCData&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</text>
<text text-anchor="middle" x="18766.614" y="-37623.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Symbol],LambdaLift.this.global.Symbol,That] -->
<g id="node515" class="node">
<title>scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Symbol],LambdaLift.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-37706.8701" rx="456.5821" ry="26.7407"/>
<text text-anchor="start" x="18451.614" y="-37710.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Symbol],LambdaLift.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-37695.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[s.IntSetting],String,That] -->
<g id="node516" class="node">
<title>scala.collection.generic.CanBuildFrom[List[s.IntSetting],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-37778.8701" rx="280.0286" ry="26.7407"/>
<text text-anchor="start" x="18576.614" y="-37782.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[s.IntSetting],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-37767.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Global.this.uncurry.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node517" class="node">
<title>Global.this.uncurry.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-37850.8701" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="18654.614" y="-37854.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.uncurry.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-37839.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Long =&gt; Long -->
<g id="node518" class="node">
<title>Long =&gt; Long</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-37922.8701" rx="69.0935" ry="26.7407"/>
<text text-anchor="start" x="18725.614" y="-37926.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Long =&gt; Long</text>
<text text-anchor="middle" x="18766.614" y="-37911.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;EntityRef&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType -->
<g id="node519" class="node">
<title>String(&#39;EntityRef&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-37994.8701" rx="367.8912" ry="26.7407"/>
<text text-anchor="start" x="18514.614" y="-37998.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;EntityRef&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</text>
<text text-anchor="middle" x="18766.614" y="-37983.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; SymbolTables.this.SymbolTable) =&gt; ?{def +=: ?} -->
<g id="node520" class="node">
<title>(=&gt; SymbolTables.this.SymbolTable) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-38066.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="18614.614" y="-38070.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; SymbolTables.this.SymbolTable) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-38055.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[Infer.this.global.Symbol]) =&gt; Infer.this.global.Type -->
<g id="node521" class="node">
<title>(=&gt; List[Infer.this.global.Symbol]) =&gt; Infer.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-38138.8701" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="18598.614" y="-38142.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Infer.this.global.Symbol]) =&gt; Infer.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-38127.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- String(&#39;bin&#39;) =&gt; scala.reflect.io.Path -->
<g id="node522" class="node">
<title>String(&#39;bin&#39;) =&gt; scala.reflect.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-38210.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="18668.614" y="-38214.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;bin&#39;) =&gt; scala.reflect.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-38199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int =&gt; ?{def &#45;=: ?} -->
<g id="node523" class="node">
<title>Int =&gt; ?{def &#45;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-38282.8701" rx="86.0347" ry="26.7407"/>
<text text-anchor="start" x="18713.614" y="-38286.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; ?{def &#45;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-38271.6701" font-family="Times,serif" font-size="14.00" fill="#000000">29 times = 9ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Tree],MatchApproximation.this.global.Tree,That] -->
<g id="node524" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Tree],MatchApproximation.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-38354.8701" rx="506.077" ry="26.7407"/>
<text text-anchor="start" x="18416.614" y="-38358.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Tree],MatchApproximation.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-38343.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[LambdaLift.this.global.Symbol] =&gt; LambdaLift.this.global.Type -->
<g id="node525" class="node">
<title>List[LambdaLift.this.global.Symbol] =&gt; LambdaLift.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-38426.8701" rx="283.5996" ry="26.7407"/>
<text text-anchor="start" x="18574.114" y="-38430.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[LambdaLift.this.global.Symbol] =&gt; LambdaLift.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-38415.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Null&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType -->
<g id="node526" class="node">
<title>String(&#39;Null&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-38498.8701" rx="349.1216" ry="26.7407"/>
<text text-anchor="start" x="18527.614" y="-38502.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Null&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</text>
<text text-anchor="middle" x="18766.614" y="-38487.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- clauses.type =&gt; ?{def find: ?} -->
<g id="node527" class="node">
<title>clauses.type =&gt; ?{def find: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-38570.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="18683.614" y="-38574.6701" font-family="Times,serif" font-size="14.00" fill="#000000">clauses.type =&gt; ?{def find: ?}</text>
<text text-anchor="middle" x="18766.614" y="-38559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchApproximator.this.Test],MatchApproximator.this.Prop,Iterable[MatchApproximator.this.Prop]] -->
<g id="node528" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchApproximator.this.Test],MatchApproximator.this.Prop,Iterable[MatchApproximator.this.Prop]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-38642.8701" rx="579.2409" ry="26.7407"/>
<text text-anchor="start" x="18365.114" y="-38646.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchApproximator.this.Test],MatchApproximator.this.Prop,Iterable[MatchApproximator.this.Prop]]</text>
<text text-anchor="middle" x="18766.614" y="-38631.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[Comparable[_ &gt;: java.io.File with String &lt;: java.io.Serializable] with java.io.Serializable] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node529" class="node">
<title>Option[Comparable[_ &gt;: java.io.File with String &lt;: java.io.Serializable] with java.io.Serializable] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-38714.8701" rx="562.2998" ry="26.7407"/>
<text text-anchor="start" x="18377.114" y="-38718.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Comparable[_ &gt;: java.io.File with String &lt;: java.io.Serializable] with java.io.Serializable] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-38703.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- callee.type =&gt; ?{def get: ?} -->
<g id="node530" class="node">
<title>callee.type =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-38786.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="18689.614" y="-38790.6701" font-family="Times,serif" font-size="14.00" fill="#000000">callee.type =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-38775.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- file.type =&gt; ?{def isJarOrZip: ?} -->
<g id="node531" class="node">
<title>file.type =&gt; ?{def isJarOrZip: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-38858.8701" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="18676.114" y="-38862.6701" font-family="Times,serif" font-size="14.00" fill="#000000">file.type =&gt; ?{def isJarOrZip: ?}</text>
<text text-anchor="middle" x="18766.614" y="-38847.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(EtaExpansion.this.global.ValDef, Boolean)],EtaExpansion.this.global.gen.global.Tree,That] -->
<g id="node532" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(EtaExpansion.this.global.ValDef, Boolean)],EtaExpansion.this.global.gen.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-38930.8701" rx="542.2018" ry="26.7407"/>
<text text-anchor="start" x="18391.114" y="-38934.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(EtaExpansion.this.global.ValDef, Boolean)],EtaExpansion.this.global.gen.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-38919.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Float]) =&gt; Array[CNF.this.Clause] -->
<g id="node533" class="node">
<title>(=&gt; Array[Float]) =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-39002.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="18640.114" y="-39006.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Float]) =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-38991.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- String =&gt; ?{def forall: ?} -->
<g id="node534" class="node">
<title>String =&gt; ?{def forall: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-39074.8701" rx="111.0315" ry="26.7407"/>
<text text-anchor="start" x="18696.114" y="-39078.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def forall: ?}</text>
<text text-anchor="middle" x="18766.614" y="-39063.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;(\\S+)&#39;) =&gt; ?{def r: ?} -->
<g id="node535" class="node">
<title>String(&#39;(\\S+)&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-39146.8701" rx="123.0732" ry="26.7407"/>
<text text-anchor="start" x="18687.614" y="-39150.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;(\S+)&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-39135.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Tree],BCodeHelpers.this.global.Symbol,List[BCodeHelpers.this.global.Symbol]] -->
<g id="node536" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Tree],BCodeHelpers.this.global.Symbol,List[BCodeHelpers.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-39218.8701" rx="599.7531" ry="26.7407"/>
<text text-anchor="start" x="18350.614" y="-39222.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Tree],BCodeHelpers.this.global.Symbol,List[BCodeHelpers.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-39207.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- settings.BooleanSetting =&gt; Boolean -->
<g id="node537" class="node">
<title>settings.BooleanSetting =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-39290.8701" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="18667.614" y="-39294.6701" font-family="Times,serif" font-size="14.00" fill="#000000">settings.BooleanSetting =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-39279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- annotss.type =&gt; ?{def foreach: ?} -->
<g id="node538" class="node">
<title>annotss.type =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-39362.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="18673.114" y="-39366.6701" font-family="Times,serif" font-size="14.00" fill="#000000">annotss.type =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-39351.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(TreeCheckers.this.global.MemberDef, Int)],(Any, String),That] -->
<g id="node539" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(TreeCheckers.this.global.MemberDef, Int)],(Any, String),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-39434.8701" rx="432.9988" ry="26.7407"/>
<text text-anchor="start" x="18468.614" y="-39438.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(TreeCheckers.this.global.MemberDef, Int)],(Any, String),That]</text>
<text text-anchor="middle" x="18766.614" y="-39423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Namers.this.global.FlagSet -->
<g id="node540" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Namers.this.global.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-39506.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="18613.114" y="-39510.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Namers.this.global.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-39495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Typers.this.global.TermName =&gt; ?{def stripSuffix: ?} -->
<g id="node541" class="node">
<title>Typers.this.global.TermName =&gt; ?{def stripSuffix: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-39578.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="18616.114" y="-39582.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Typers.this.global.TermName =&gt; ?{def stripSuffix: ?}</text>
<text text-anchor="middle" x="18766.614" y="-39567.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Float -->
<g id="node542" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Float</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-39650.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="18647.614" y="-39654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Float</text>
<text text-anchor="middle" x="18766.614" y="-39639.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Unit =&gt; java.nio.CharBuffer -->
<g id="node543" class="node">
<title>Unit =&gt; java.nio.CharBuffer</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-39722.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="18688.114" y="-39726.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; java.nio.CharBuffer</text>
<text text-anchor="middle" x="18766.614" y="-39711.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Iterable[scala.reflect.io.AbstractFile],String,That] -->
<g id="node544" class="node">
<title>scala.collection.generic.CanBuildFrom[Iterable[scala.reflect.io.AbstractFile],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-39794.8701" rx="356.2637" ry="26.7407"/>
<text text-anchor="start" x="18522.614" y="-39798.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Iterable[scala.reflect.io.AbstractFile],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-39783.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- SyntheticMethods.this.global.definitions.Any_hashCode.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node545" class="node">
<title>SyntheticMethods.this.global.definitions.Any_hashCode.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-39866.8701" rx="313.4968" ry="26.7407"/>
<text text-anchor="start" x="18553.114" y="-39870.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SyntheticMethods.this.global.definitions.Any_hashCode.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-39855.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Var],String,That] -->
<g id="node546" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Var],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-39938.8701" rx="329.5235" ry="26.7407"/>
<text text-anchor="start" x="18541.614" y="-39942.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Var],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-39927.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- types.type =&gt; ?{def indices: ?} -->
<g id="node547" class="node">
<title>types.type =&gt; ?{def indices: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-40010.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="18680.614" y="-40014.6701" font-family="Times,serif" font-size="14.00" fill="#000000">types.type =&gt; ?{def indices: ?}</text>
<text text-anchor="middle" x="18766.614" y="-39999.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Extractors.this.global.Symbol -->
<g id="node548" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Extractors.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-40082.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="18605.614" y="-40086.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Extractors.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-40071.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.bTypes.ClassBType],tools.nsc.backend.jvm.BTypes.InternalName,That] -->
<g id="node549" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.bTypes.ClassBType],tools.nsc.backend.jvm.BTypes.InternalName,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-40154.8701" rx="555.5719" ry="26.7407"/>
<text text-anchor="start" x="18381.614" y="-40158.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.bTypes.ClassBType],tools.nsc.backend.jvm.BTypes.InternalName,That]</text>
<text text-anchor="middle" x="18766.614" y="-40143.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; Unit) =&gt; scala.sys.process.ProcessIO -->
<g id="node550" class="node">
<title>(=&gt; Unit) =&gt; scala.sys.process.ProcessIO</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-40226.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="18652.114" y="-40230.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; scala.sys.process.ProcessIO</text>
<text text-anchor="middle" x="18766.614" y="-40215.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((List[Nothing], List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Symbol]) -->
<g id="node551" class="node">
<title>((List[Nothing], List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-40298.8701" rx="620.6795" ry="26.7407"/>
<text text-anchor="start" x="18335.614" y="-40302.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((List[Nothing], List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</text>
<text text-anchor="middle" x="18766.614" y="-40287.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[String],java.io.File,That] -->
<g id="node552" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[String],java.io.File,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-40370.8701" rx="398.6165" ry="26.7407"/>
<text text-anchor="start" x="18492.614" y="-40374.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[String],java.io.File,That]</text>
<text text-anchor="middle" x="18766.614" y="-40359.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Checkable.this.global.Symbol],(Checkable.this.global.Symbol, Checkable.this.global.TypeVar),That] -->
<g id="node553" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Checkable.this.global.Symbol],(Checkable.this.global.Symbol, Checkable.this.global.TypeVar),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-40442.8701" rx="576.0841" ry="26.7407"/>
<text text-anchor="start" x="18367.114" y="-40446.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Checkable.this.global.Symbol],(Checkable.this.global.Symbol, Checkable.this.global.TypeVar),That]</text>
<text text-anchor="middle" x="18766.614" y="-40431.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- acc.NameType =&gt; ?{def localName: ?} -->
<g id="node554" class="node">
<title>acc.NameType =&gt; ?{def localName: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-40514.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="18656.614" y="-40518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">acc.NameType =&gt; ?{def localName: ?}</text>
<text text-anchor="middle" x="18766.614" y="-40503.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.LabelDef],(BCodeSkelBuilder.this.global.Symbol, BCodeSkelBuilder.this.global.LabelDef),That] -->
<g id="node555" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.LabelDef],(BCodeSkelBuilder.this.global.Symbol, BCodeSkelBuilder.this.global.LabelDef),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-40586.8701" rx="680.4735" ry="26.7407"/>
<text text-anchor="start" x="18293.614" y="-40590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.LabelDef],(BCodeSkelBuilder.this.global.Symbol, BCodeSkelBuilder.this.global.LabelDef),That]</text>
<text text-anchor="middle" x="18766.614" y="-40575.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; StringBuilder -->
<g id="node556" class="node">
<title>((Nothing, Nothing)) =&gt; StringBuilder</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-40658.8701" rx="161.441" ry="26.7407"/>
<text text-anchor="start" x="18660.614" y="-40662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; StringBuilder</text>
<text text-anchor="middle" x="18766.614" y="-40647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- BCodeSkelBuilder.this.global.Symbol =&gt; PlainSkelBuilder.this.Local -->
<g id="node557" class="node">
<title>BCodeSkelBuilder.this.global.Symbol =&gt; PlainSkelBuilder.this.Local</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-40730.8701" rx="282.6855" ry="26.7407"/>
<text text-anchor="start" x="18574.614" y="-40734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">BCodeSkelBuilder.this.global.Symbol =&gt; PlainSkelBuilder.this.Local</text>
<text text-anchor="middle" x="18766.614" y="-40719.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Double]) =&gt; Array[Int] -->
<g id="node558" class="node">
<title>(=&gt; Array[Double]) =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-40802.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="18671.614" y="-40806.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Double]) =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-40791.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- Array[Byte] =&gt; Array[Int] -->
<g id="node559" class="node">
<title>Array[Byte] =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-40874.8701" rx="114.6026" ry="26.7407"/>
<text text-anchor="start" x="18693.614" y="-40878.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Byte] =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-40863.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; java.io.Writer -->
<g id="node560" class="node">
<title>((Nothing, Nothing)) =&gt; java.io.Writer</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-40946.8701" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="18659.114" y="-40950.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; java.io.Writer</text>
<text text-anchor="middle" x="18766.614" y="-40935.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Tree -->
<g id="node561" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-41018.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="18598.114" y="-41022.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-41007.6701" font-family="Times,serif" font-size="14.00" fill="#000000">40 times = 1ms</text>
</g>
<!-- ((SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type)) =&gt; (A1, A2) -->
<g id="node562" class="node">
<title>((SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type)) =&gt; (A1, A2)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-41090.8701" rx="347.7931" ry="26.7407"/>
<text text-anchor="start" x="18528.614" y="-41094.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type)) =&gt; (A1, A2)</text>
<text text-anchor="middle" x="18766.614" y="-41079.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- handlerFrame.type =&gt; ?{def stackTop: ?} -->
<g id="node563" class="node">
<title>handlerFrame.type =&gt; ?{def stackTop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-41162.8701" rx="174.8109" ry="26.7407"/>
<text text-anchor="start" x="18651.114" y="-41166.6701" font-family="Times,serif" font-size="14.00" fill="#000000">handlerFrame.type =&gt; ?{def stackTop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-41151.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; TailCalls.this.global.Tree -->
<g id="node564" class="node">
<title>((Nothing, Nothing)) =&gt; TailCalls.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-41234.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="18628.114" y="-41238.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; TailCalls.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-41223.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 1ms</text>
</g>
<!-- Array[Unit] =&gt; Array[AnyRef] -->
<g id="node565" class="node">
<title>Array[Unit] =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-41306.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="18680.614" y="-41310.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Unit] =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-41295.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; TailCalls.this.global.Symbol -->
<g id="node566" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; TailCalls.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-41378.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-41382.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; TailCalls.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-41367.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- args.type =&gt; ?{def mkString: ?} -->
<g id="node567" class="node">
<title>args.type =&gt; ?{def mkString: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-41450.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="18677.114" y="-41454.6701" font-family="Times,serif" font-size="14.00" fill="#000000">args.type =&gt; ?{def mkString: ?}</text>
<text text-anchor="middle" x="18766.614" y="-41439.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Int, Int)],(String, (Int, Int)),scala.collection.GenTraversableOnce[(String, (Int, Int))]] -->
<g id="node568" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Int, Int)],(String, (Int, Int)),scala.collection.GenTraversableOnce[(String, (Int, Int))]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-41522.8701" rx="513.2191" ry="26.7407"/>
<text text-anchor="start" x="18411.614" y="-41526.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Int, Int)],(String, (Int, Int)),scala.collection.GenTraversableOnce[(String, (Int, Int))]]</text>
<text text-anchor="middle" x="18766.614" y="-41511.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- requests.type =&gt; ?{def foreach: ?} -->
<g id="node569" class="node">
<title>requests.type =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-41594.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="18671.614" y="-41598.6701" font-family="Times,serif" font-size="14.00" fill="#000000">requests.type =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-41583.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol -->
<g id="node570" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-41666.8701" rx="288.4991" ry="26.7407"/>
<text text-anchor="start" x="18570.614" y="-41670.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-41655.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- Scanners.this.global.nme.TRUEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node571" class="node">
<title>Scanners.this.global.nme.TRUEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-41738.8701" rx="231.4481" ry="26.7407"/>
<text text-anchor="start" x="18611.114" y="-41742.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.TRUEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-41727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Constructors.this.global.Modifiers -->
<g id="node572" class="node">
<title>(=&gt; Unit) =&gt; Constructors.this.global.Modifiers</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-41810.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="18634.114" y="-41814.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Constructors.this.global.Modifiers</text>
<text text-anchor="middle" x="18766.614" y="-41799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;\nClasses which cannot access %s %s %s.&#39;) =&gt; ?{def format: ?} -->
<g id="node573" class="node">
<title>String(&#39;\nClasses which cannot access %s %s %s.&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-41892.8701" rx="254.6169" ry="37.4533"/>
<text text-anchor="middle" x="18766.614" y="-41904.1701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;</text>
<text text-anchor="start" x="18594.614" y="-41889.1701" font-family="Times,serif" font-size="14.00" fill="#000000">Classes which cannot access %s %s %s.&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-41874.1701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- getter.NameType =&gt; ?{def setterName: ?} -->
<g id="node574" class="node">
<title>getter.NameType =&gt; ?{def setterName: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-41974.8701" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="18648.614" y="-41978.6701" font-family="Times,serif" font-size="14.00" fill="#000000">getter.NameType =&gt; ?{def setterName: ?}</text>
<text text-anchor="middle" x="18766.614" y="-41963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Contexts.this.Context -->
<g id="node575" class="node">
<title>Contexts.this.Context</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-42046.8701" rx="94.5053" ry="26.7407"/>
<text text-anchor="start" x="18707.614" y="-42050.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Contexts.this.Context</text>
<text text-anchor="middle" x="18766.614" y="-42035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; java.awt.PopupMenu -->
<g id="node576" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; java.awt.PopupMenu</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-42118.8701" rx="205.5364" ry="26.7407"/>
<text text-anchor="start" x="18629.114" y="-42122.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; java.awt.PopupMenu</text>
<text text-anchor="middle" x="18766.614" y="-42107.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- name0.type =&gt; ?{def dropLocal: ?} -->
<g id="node577" class="node">
<title>name0.type =&gt; ?{def dropLocal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-42190.8701" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="18667.614" y="-42194.6701" font-family="Times,serif" font-size="14.00" fill="#000000">name0.type =&gt; ?{def dropLocal: ?}</text>
<text text-anchor="middle" x="18766.614" y="-42179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Flatten.this.global.AnnotationInfo =&gt; Flatten.this.global.Type -->
<g id="node578" class="node">
<title>Flatten.this.global.AnnotationInfo =&gt; Flatten.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-42262.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="18596.614" y="-42266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Flatten.this.global.AnnotationInfo =&gt; Flatten.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-42251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.Type],BCodeSkelBuilder.this.bTypes.BType,List[BCodeSkelBuilder.this.bTypes.BType]] -->
<g id="node579" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.Type],BCodeSkelBuilder.this.bTypes.BType,List[BCodeSkelBuilder.this.bTypes.BType]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-42334.8701" rx="649.6623" ry="26.7407"/>
<text text-anchor="start" x="18315.114" y="-42338.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.Type],BCodeSkelBuilder.this.bTypes.BType,List[BCodeSkelBuilder.this.bTypes.BType]]</text>
<text text-anchor="middle" x="18766.614" y="-42323.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- List[Duplicators.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node580" class="node">
<title>List[Duplicators.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-42406.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="18545.614" y="-42410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Duplicators.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-42395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.math.Ordering[(String, String)] -->
<g id="node581" class="node">
<title>scala.math.Ordering[(String, String)]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-42550.8701" rx="154.7129" ry="26.7407"/>
<text text-anchor="start" x="18665.114" y="-42554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.math.Ordering[(String, String)]</text>
<text text-anchor="middle" x="18766.614" y="-42539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scala.math.Ordering[String] -->
<g id="node1091" class="node">
<title>scala.math.Ordering[String]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-42550.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="38084.3606" y="-42554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.math.Ordering[String]</text>
<text text-anchor="middle" x="38161.3606" y="-42539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 14ms</text>
</g>
<!-- scala.math.Ordering[(String, String)]&#45;&gt;scala.math.Ordering[String] -->
<g id="edge24" class="edge">
<title>scala.math.Ordering[(String, String)]&#45;&gt;scala.math.Ordering[String]</title>
<path fill="none" stroke="#000000" d="M18921.6682,-42550.8701C20658.5365,-42550.8701 36432.7527,-42550.8701 38030.904,-42550.8701"/>
<polygon fill="#000000" stroke="#000000" points="38030.9728,-42554.3702 38040.9728,-42550.8701 38030.9727,-42547.3702 38030.9728,-42554.3702"/>
</g>
<!-- Scanners.this.global.nme.DEFkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node582" class="node">
<title>Scanners.this.global.nme.DEFkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-42622.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="18616.114" y="-42626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.DEFkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-42611.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[T] -->
<g id="node583" class="node">
<title>scala.reflect.ClassTag[T]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-42694.8701" rx="108.375" ry="26.7407"/>
<text text-anchor="start" x="18698.114" y="-42698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[T]</text>
<text text-anchor="middle" x="18766.614" y="-42683.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 9ms</text>
</g>
<!-- String =&gt; ?{def lines: ?} -->
<g id="node584" class="node">
<title>String =&gt; ?{def lines: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-42766.8701" rx="108.375" ry="26.7407"/>
<text text-anchor="start" x="18698.114" y="-42770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def lines: ?}</text>
<text text-anchor="middle" x="18766.614" y="-42755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[AccessorSynthesis.this.BitmapInfo],AccessorSynthesis.this.global.Tree,That] -->
<g id="node585" class="node">
<title>scala.collection.generic.CanBuildFrom[List[AccessorSynthesis.this.BitmapInfo],AccessorSynthesis.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-42838.8701" rx="482.9079" ry="26.7407"/>
<text text-anchor="start" x="18433.114" y="-42842.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[AccessorSynthesis.this.BitmapInfo],AccessorSynthesis.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-42827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[String] =&gt; ?{def mkString: ?} -->
<g id="node586" class="node">
<title>Array[String] =&gt; ?{def mkString: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-42910.8701" rx="154.7129" ry="26.7407"/>
<text text-anchor="start" x="18665.114" y="-42914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def mkString: ?}</text>
<text text-anchor="middle" x="18766.614" y="-42899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- MatchTranslation.this.global.Tree =&gt; ?{def ANY_!=: ?} -->
<g id="node587" class="node">
<title>MatchTranslation.this.global.Tree =&gt; ?{def ANY_!=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-42982.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="18610.114" y="-42986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchTranslation.this.global.Tree =&gt; ?{def ANY_!=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-42971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Type], List[Infer.this.global.Symbol]) -->
<g id="node588" class="node">
<title>((List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-43054.8701" rx="673.3314" ry="26.7407"/>
<text text-anchor="start" x="18298.614" y="-43058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</text>
<text text-anchor="middle" x="18766.614" y="-43043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Namers.this.global.Tree =&gt; Namers.this.global.Type -->
<g id="node589" class="node">
<title>Namers.this.global.Tree =&gt; Namers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-43126.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="18620.614" y="-43130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Namers.this.global.Tree =&gt; Namers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-43115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[((Holes.this.global.Type, scala.reflect.quasiquotes.Rank), Int)],Holes.this.global.ValDef,List[Holes.this.global.Tree]] -->
<g id="node590" class="node">
<title>scala.collection.generic.CanBuildFrom[List[((Holes.this.global.Type, scala.reflect.quasiquotes.Rank), Int)],Holes.this.global.ValDef,List[Holes.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-43198.8701" rx="635.878" ry="26.7407"/>
<text text-anchor="start" x="18325.114" y="-43202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[((Holes.this.global.Type, scala.reflect.quasiquotes.Rank), Int)],Holes.this.global.ValDef,List[Holes.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-43187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; javax.swing.text.Document -->
<g id="node591" class="node">
<title>((Nothing, Nothing)) =&gt; javax.swing.text.Document</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-43270.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-43274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; javax.swing.text.Document</text>
<text text-anchor="middle" x="18766.614" y="-43259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; DocComments.this.Symbol -->
<g id="node592" class="node">
<title>((Nothing, Nothing)) =&gt; DocComments.this.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-43342.8701" rx="217.1636" ry="26.7407"/>
<text text-anchor="start" x="18621.114" y="-43346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; DocComments.this.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-43331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Infer.this.global.Symbol] =&gt; scala.collection.TraversableLike[El1,Repr1] -->
<g id="node593" class="node">
<title>List[Infer.this.global.Symbol] =&gt; scala.collection.TraversableLike[El1,Repr1]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-43414.8701" rx="314.8251" ry="26.7407"/>
<text text-anchor="start" x="18552.114" y="-43418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Infer.this.global.Symbol] =&gt; scala.collection.TraversableLike[El1,Repr1]</text>
<text text-anchor="middle" x="18766.614" y="-43403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.ValDef],ContextErrors.this.global.TermName,List[ContextErrors.this.global.analyzer.global.Name]] -->
<g id="node594" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.ValDef],ContextErrors.this.global.TermName,List[ContextErrors.this.global.analyzer.global.Name]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-43486.8701" rx="673.3314" ry="26.7407"/>
<text text-anchor="start" x="18298.614" y="-43490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.ValDef],ContextErrors.this.global.TermName,List[ContextErrors.this.global.analyzer.global.Name]]</text>
<text text-anchor="middle" x="18766.614" y="-43475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Scanners.this.Offset) =&gt; ?{def +=: ?} -->
<g id="node595" class="node">
<title>(=&gt; Scanners.this.Offset) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-43558.8701" rx="176.5537" ry="26.7407"/>
<text text-anchor="start" x="18649.614" y="-43562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Scanners.this.Offset) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-43547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- (=&gt; MatchCodeGen.this.global.Symbol) =&gt; List[MatchCodeGen.this.global.Symbol] -->
<g id="node596" class="node">
<title>(=&gt; MatchCodeGen.this.global.Symbol) =&gt; List[MatchCodeGen.this.global.Symbol]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-43630.8701" rx="344.2221" ry="26.7407"/>
<text text-anchor="start" x="18531.114" y="-43634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; MatchCodeGen.this.global.Symbol) =&gt; List[MatchCodeGen.this.global.Symbol]</text>
<text text-anchor="middle" x="18766.614" y="-43619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Char(&#39;$&#39;) =&gt; CharSequence -->
<g id="node597" class="node">
<title>Char(&#39;$&#39;) =&gt; CharSequence</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-43702.8701" rx="116.8455" ry="26.7407"/>
<text text-anchor="start" x="18692.114" y="-43706.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Char(&#39;$&#39;) =&gt; CharSequence</text>
<text text-anchor="middle" x="18766.614" y="-43691.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- frames.type =&gt; ?{def size: ?} -->
<g id="node598" class="node">
<title>frames.type =&gt; ?{def size: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-43774.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="18684.614" y="-43778.6701" font-family="Times,serif" font-size="14.00" fill="#000000">frames.type =&gt; ?{def size: ?}</text>
<text text-anchor="middle" x="18766.614" y="-43763.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Constructors.this.global.ValDef],Constructors.this.global.Symbol,That] -->
<g id="node599" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Constructors.this.global.ValDef],Constructors.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-43846.8701" rx="459.7388" ry="26.7407"/>
<text text-anchor="start" x="18449.614" y="-43850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Constructors.this.global.ValDef],Constructors.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-43835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; JavaParsers.this.global.FlagSet -->
<g id="node600" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; JavaParsers.this.global.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-43918.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="18602.614" y="-43922.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; JavaParsers.this.global.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-43907.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; org.apache.tools.ant.Project -->
<g id="node601" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; org.apache.tools.ant.Project</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-43990.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-43994.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; org.apache.tools.ant.Project</text>
<text text-anchor="middle" x="18766.614" y="-43979.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;scala.runtime.&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node602" class="node">
<title>String(&#39;scala.runtime.&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-44062.8701" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="18659.114" y="-44066.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;scala.runtime.&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-44051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; (CompilationUnits.this.Tree =&gt; CompilationUnits.this.Tree) -->
<g id="node603" class="node">
<title>(=&gt; Unit) =&gt; (CompilationUnits.this.Tree =&gt; CompilationUnits.this.Tree)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-44134.8701" rx="300.5408" ry="26.7407"/>
<text text-anchor="start" x="18562.114" y="-44138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; (CompilationUnits.this.Tree =&gt; CompilationUnits.this.Tree)</text>
<text text-anchor="middle" x="18766.614" y="-44123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- f.type =&gt; ?{def isPackage: ?} -->
<g id="node604" class="node">
<title>f.type =&gt; ?{def isPackage: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-44206.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="18684.614" y="-44210.6701" font-family="Times,serif" font-size="14.00" fill="#000000">f.type =&gt; ?{def isPackage: ?}</text>
<text text-anchor="middle" x="18766.614" y="-44195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Array[Solver.this.Clause] =&gt; Traversable[Traversable[?]] -->
<g id="node605" class="node">
<title>Array[Solver.this.Clause] =&gt; Traversable[Traversable[?]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-44278.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-44282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Solver.this.Clause] =&gt; Traversable[Traversable[?]]</text>
<text text-anchor="middle" x="18766.614" y="-44267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],List[scala.reflect.io.Path],That] -->
<g id="node606" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],List[scala.reflect.io.Path],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-44350.8701" rx="333.0946" ry="26.7407"/>
<text text-anchor="start" x="18539.114" y="-44354.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],List[scala.reflect.io.Path],That]</text>
<text text-anchor="middle" x="18766.614" y="-44339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.internal.util.FakePos =&gt; ?{def +: ?} -->
<g id="node607" class="node">
<title>scala.reflect.internal.util.FakePos =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-44422.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="18632.614" y="-44426.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.internal.util.FakePos =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-44411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- s.type =&gt; ?{def take: ?} -->
<g id="node608" class="node">
<title>s.type =&gt; ?{def take: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-44494.8701" rx="105.218" ry="26.7407"/>
<text text-anchor="start" x="18700.114" y="-44498.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def take: ?}</text>
<text text-anchor="middle" x="18766.614" y="-44483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Global.this.Symbol],String,That] -->
<g id="node609" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Global.this.Symbol],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-44566.8701" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="18554.614" y="-44570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Global.this.Symbol],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-44555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Double =&gt; JavaScanner.this.ScanPosition -->
<g id="node610" class="node">
<title>Double =&gt; JavaScanner.this.ScanPosition</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-44638.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="18652.114" y="-44642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Double =&gt; JavaScanner.this.ScanPosition</text>
<text text-anchor="middle" x="18766.614" y="-44627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[String],TypeDiagnostics.this.global.TermName,Set[TypeDiagnostics.this.global.TermName]] -->
<g id="node611" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[String],TypeDiagnostics.this.global.TermName,Set[TypeDiagnostics.this.global.TermName]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-44710.8701" rx="650.5765" ry="26.7407"/>
<text text-anchor="start" x="18314.614" y="-44714.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[String],TypeDiagnostics.this.global.TermName,Set[TypeDiagnostics.this.global.TermName]]</text>
<text text-anchor="middle" x="18766.614" y="-44699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.GOTOkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node612" class="node">
<title>JavaScanners.this.global.javanme.GOTOkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-44782.8701" rx="265.7444" ry="26.7407"/>
<text text-anchor="start" x="18586.614" y="-44786.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.GOTOkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-44771.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Taggers.this.c.universe.definitions.IntTpe.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node613" class="node">
<title>Taggers.this.c.universe.definitions.IntTpe.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-44854.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="18593.614" y="-44858.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Taggers.this.c.universe.definitions.IntTpe.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-44843.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; TreeDSL.this.global.Tree -->
<g id="node614" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; TreeDSL.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-44926.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="18617.614" y="-44930.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; TreeDSL.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-44915.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;isBlackbox&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node615" class="node">
<title>String(&#39;isBlackbox&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-44998.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="18667.114" y="-45002.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;isBlackbox&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-44987.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.Tree,That] -->
<g id="node616" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-45070.8701" rx="393.717" ry="26.7407"/>
<text text-anchor="start" x="18496.114" y="-45074.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-45059.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Map[scala.tools.asm.tree.AbstractInsnNode,List[scala.tools.asm.tree.AbstractInsnNode]]) =&gt; ?{def +=: ?} -->
<g id="node617" class="node">
<title>(=&gt; scala.collection.immutable.Map[scala.tools.asm.tree.AbstractInsnNode,List[scala.tools.asm.tree.AbstractInsnNode]]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-45142.8701" rx="550.2582" ry="26.7407"/>
<text text-anchor="start" x="18385.614" y="-45146.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Map[scala.tools.asm.tree.AbstractInsnNode,List[scala.tools.asm.tree.AbstractInsnNode]]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-45131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Char] -->
<g id="node618" class="node">
<title>scala.reflect.ClassTag[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-45214.8701" rx="120.8306" ry="26.7407"/>
<text text-anchor="start" x="18689.114" y="-45218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Char]</text>
<text text-anchor="middle" x="18766.614" y="-45203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Some[Reshape.this.global.DefDef] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node619" class="node">
<title>Some[Reshape.this.global.DefDef] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-45286.8701" rx="317.4819" ry="26.7407"/>
<text text-anchor="start" x="18550.114" y="-45290.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Some[Reshape.this.global.DefDef] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-45275.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- callsite.callee.type =&gt; ?{def get: ?} -->
<g id="node620" class="node">
<title>callsite.callee.type =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-45358.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="18668.614" y="-45362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">callsite.callee.type =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-45347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Global.this.CompilationUnit],scala.tools.nsc.Global.Run.trackerFactory.SymbolTracker,That] -->
<g id="node621" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Global.this.CompilationUnit],scala.tools.nsc.Global.Run.trackerFactory.SymbolTracker,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-45430.8701" rx="546.6871" ry="26.7407"/>
<text text-anchor="start" x="18388.114" y="-45434.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Global.this.CompilationUnit],scala.tools.nsc.Global.Run.trackerFactory.SymbolTracker,That]</text>
<text text-anchor="middle" x="18766.614" y="-45419.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; List[scala.tools.nsc.typechecker.TypersTracking.typingStack.Frame]) =&gt; ?{def ::=: ?} -->
<g id="node622" class="node">
<title>(=&gt; List[scala.tools.nsc.typechecker.TypersTracking.typingStack.Frame]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-45502.8701" rx="364.3201" ry="26.7407"/>
<text text-anchor="start" x="18517.114" y="-45506.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[scala.tools.nsc.typechecker.TypersTracking.typingStack.Frame]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-45491.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (String, tools.nsc.backend.jvm.BTypes.MethodInlineInfo) &lt;:&lt; (T, U) -->
<g id="node623" class="node">
<title>(String, tools.nsc.backend.jvm.BTypes.MethodInlineInfo) &lt;:&lt; (T, U)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-45574.8701" rx="280.943" ry="26.7407"/>
<text text-anchor="start" x="18576.114" y="-45578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(String, tools.nsc.backend.jvm.BTypes.MethodInlineInfo) &lt;:&lt; (T, U)</text>
<text text-anchor="middle" x="18766.614" y="-45563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Printers.this.Symbol -->
<g id="node624" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Printers.this.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-45646.8701" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="18631.114" y="-45650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Printers.this.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-45635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Typers.this.global.Type, Typers.this.global.Symbol)],List[Typers.this.global.Type],That] -->
<g id="node625" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Typers.this.global.Type, Typers.this.global.Symbol)],List[Typers.this.global.Type],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-45718.8701" rx="531.9887" ry="26.7407"/>
<text text-anchor="start" x="18398.614" y="-45722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Typers.this.global.Type, Typers.this.global.Symbol)],List[Typers.this.global.Type],That]</text>
<text text-anchor="middle" x="18766.614" y="-45707.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Any =&gt; Nothing)) =&gt; List[String] -->
<g id="node626" class="node">
<title>(=&gt; (Nothing, Any =&gt; Nothing)) =&gt; List[String]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-45790.8701" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="18632.114" y="-45794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Any =&gt; Nothing)) =&gt; List[String]</text>
<text text-anchor="middle" x="18766.614" y="-45779.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTrackers.this.global.Symbol],(SymbolTrackers.this.global.Symbol, SymbolTrackers.this.global.Symbol),That] -->
<g id="node627" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTrackers.this.global.Symbol],(SymbolTrackers.this.global.Symbol, SymbolTrackers.this.global.Symbol),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-45862.8701" rx="746.9096" ry="26.7407"/>
<text text-anchor="start" x="18246.614" y="-45866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTrackers.this.global.Symbol],(SymbolTrackers.this.global.Symbol, SymbolTrackers.this.global.Symbol),That]</text>
<text text-anchor="middle" x="18766.614" y="-45851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Boolean -->
<g id="node628" class="node">
<title>(=&gt; Unit) =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-45934.8701" rx="98.0761" ry="26.7407"/>
<text text-anchor="start" x="18705.114" y="-45938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-45923.6701" font-family="Times,serif" font-size="14.00" fill="#000000">51 times = 4ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[TreesAndTypesDomain.this.Const],TreesAndTypesDomain.this.Sym,Set[TreesAndTypesDomain.this.Sym]] -->
<g id="node629" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[TreesAndTypesDomain.this.Const],TreesAndTypesDomain.this.Sym,Set[TreesAndTypesDomain.this.Sym]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-46006.8701" rx="709.8704" ry="26.7407"/>
<text text-anchor="start" x="18272.614" y="-46010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[TreesAndTypesDomain.this.Const],TreesAndTypesDomain.this.Sym,Set[TreesAndTypesDomain.this.Sym]]</text>
<text text-anchor="middle" x="18766.614" y="-45995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Char(&#39;/&#39;)) =&gt; String -->
<g id="node630" class="node">
<title>(=&gt; Char(&#39;/&#39;)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-46078.8701" rx="103.4757" ry="26.7407"/>
<text text-anchor="start" x="18701.614" y="-46082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Char(&#39;/&#39;)) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-46067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[String]],String,That] -->
<g id="node631" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[String]],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-46150.8701" rx="280.943" ry="26.7407"/>
<text text-anchor="start" x="18576.114" y="-46154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[String]],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-46139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.reflect.internal.util.SourceFile],scala.reflect.internal.util.SourceFile,That] -->
<g id="node632" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.reflect.internal.util.SourceFile],scala.reflect.internal.util.SourceFile,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-46222.8701" rx="487.3932" ry="26.7407"/>
<text text-anchor="start" x="18430.114" y="-46226.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.reflect.internal.util.SourceFile],scala.reflect.internal.util.SourceFile,That]</text>
<text text-anchor="middle" x="18766.614" y="-46211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- args.type =&gt; ?{def par: ?} -->
<g id="node633" class="node">
<title>args.type =&gt; ?{def par: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-46294.8701" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="18694.114" y="-46298.6701" font-family="Times,serif" font-size="14.00" fill="#000000">args.type =&gt; ?{def par: ?}</text>
<text text-anchor="middle" x="18766.614" y="-46283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Parsers.this.global.Symbol -->
<g id="node634" class="node">
<title>((Nothing, Nothing)) =&gt; Parsers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-46366.8701" rx="212.6784" ry="26.7407"/>
<text text-anchor="start" x="18624.114" y="-46370.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Parsers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-46355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Double) =&gt; JavaScanner.this.ScanPosition -->
<g id="node635" class="node">
<title>(=&gt; Double) =&gt; JavaScanner.this.ScanPosition</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-46438.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="18637.114" y="-46442.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Double) =&gt; JavaScanner.this.ScanPosition</text>
<text text-anchor="middle" x="18766.614" y="-46427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;failed to typecheck the materialized tag: %n%s&#39;) =&gt; ?{def format: ?} -->
<g id="node636" class="node">
<title>String(&#39;failed to typecheck the materialized tag: %n%s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-46510.8701" rx="309.0113" ry="26.7407"/>
<text text-anchor="start" x="18556.114" y="-46514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;failed to typecheck the materialized tag: %n%s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-46499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],String,That] -->
<g id="node637" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-46582.8701" rx="383.0039" ry="26.7407"/>
<text text-anchor="start" x="18503.614" y="-46586.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-46571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;tvars&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node638" class="node">
<title>String(&#39;tvars&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-46654.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="18684.614" y="-46658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;tvars&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-46643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; MethodSynthesis.this.global.Type -->
<g id="node639" class="node">
<title>(Any =&gt; Nothing) =&gt; MethodSynthesis.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-46726.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="18610.614" y="-46730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; MethodSynthesis.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-46715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; SymbolicXMLBuilder.this.global.Type -->
<g id="node640" class="node">
<title>(=&gt; Unit) =&gt; SymbolicXMLBuilder.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-46798.8701" rx="219.4064" ry="26.7407"/>
<text text-anchor="start" x="18619.614" y="-46802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; SymbolicXMLBuilder.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-46787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.TRAITkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node641" class="node">
<title>Scanners.this.global.nme.TRAITkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-46870.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-46874.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.TRAITkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-46859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; LambdaLift.this.global.AnnotationInfo) =&gt; LambdaLift.this.global.Type -->
<g id="node642" class="node">
<title>(=&gt; LambdaLift.this.global.AnnotationInfo) =&gt; LambdaLift.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-46942.8701" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="18554.614" y="-46946.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; LambdaLift.this.global.AnnotationInfo) =&gt; LambdaLift.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-46931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; scala.reflect.io.AbstractFile -->
<g id="node643" class="node">
<title>String =&gt; scala.reflect.io.AbstractFile</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-47014.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="18662.614" y="-47018.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; scala.reflect.io.AbstractFile</text>
<text text-anchor="middle" x="18766.614" y="-47003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 4ms</text>
</g>
<!-- x$5.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node644" class="node">
<title>x$5.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-47086.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="18697.114" y="-47090.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$5.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-47075.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; BCodeSyncAndTry.this.global.Tree -->
<g id="node645" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; BCodeSyncAndTry.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-47158.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-47162.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; BCodeSyncAndTry.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-47147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 0ms</text>
</g>
<!-- String(&#39;attribute %s may only be defined once&#39;) =&gt; ?{def format: ?} -->
<g id="node646" class="node">
<title>String(&#39;attribute %s may only be defined once&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-47230.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-47234.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;attribute %s may only be defined once&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-47219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; TreeBuilder.this.global.Symbol -->
<g id="node647" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; TreeBuilder.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-47302.8701" rx="318.8103" ry="26.7407"/>
<text text-anchor="start" x="18549.114" y="-47306.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; TreeBuilder.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-47291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 0ms</text>
</g>
<!-- String(&#39;metalevel breach in %s: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node648" class="node">
<title>String(&#39;metalevel breach in %s: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-47374.8701" rx="234.1047" ry="26.7407"/>
<text text-anchor="start" x="18609.114" y="-47378.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;metalevel breach in %s: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-47363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; TreeBuilder.this.global.Symbol -->
<g id="node649" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; TreeBuilder.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-47446.8701" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="18559.114" y="-47450.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; TreeBuilder.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-47435.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 3ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; SyntheticMethods.this.global.Symbol -->
<g id="node650" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; SyntheticMethods.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-47518.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="18568.114" y="-47522.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; SyntheticMethods.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-47507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; RefChecks.this.global.analyzer.global.Symbol -->
<g id="node651" class="node">
<title>((Nothing, Nothing)) =&gt; RefChecks.this.global.analyzer.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-47590.8701" rx="288.4991" ry="26.7407"/>
<text text-anchor="start" x="18570.614" y="-47594.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; RefChecks.this.global.analyzer.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-47579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.math.Ordering[Typers.this.global.Symbol#NameType] -->
<g id="node652" class="node">
<title>scala.math.Ordering[Typers.this.global.Symbol#NameType]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-47662.8701" rx="246.5607" ry="26.7407"/>
<text text-anchor="start" x="18600.114" y="-47666.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.math.Ordering[Typers.this.global.Symbol#NameType]</text>
<text text-anchor="middle" x="18766.614" y="-47651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Boolean =&gt; ?{def ||=: ?} -->
<g id="node653" class="node">
<title>Boolean =&gt; ?{def ||=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-47734.8701" rx="108.789" ry="26.7407"/>
<text text-anchor="start" x="18697.614" y="-47738.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean =&gt; ?{def ||=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-47723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Parsers.this.global.Tree -->
<g id="node654" class="node">
<title>((Nothing, Nothing)) =&gt; Parsers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-47806.8701" rx="200.2225" ry="26.7407"/>
<text text-anchor="start" x="18633.114" y="-47810.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Parsers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-47795.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- SyntheticMethods.this.global.Tree =&gt; ?{def DOT: ?} -->
<g id="node655" class="node">
<title>SyntheticMethods.this.global.Tree =&gt; ?{def DOT: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-47878.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-47882.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SyntheticMethods.this.global.Tree =&gt; ?{def DOT: ?}</text>
<text text-anchor="middle" x="18766.614" y="-47867.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Constructors.this.global.Symbol =&gt; ?{def &#45;&gt;: ?} -->
<g id="node656" class="node">
<title>Constructors.this.global.Symbol =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-47950.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="18632.614" y="-47954.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Constructors.this.global.Symbol =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-47939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- frame.type =&gt; ?{def stackTop: ?} -->
<g id="node657" class="node">
<title>frame.type =&gt; ?{def stackTop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-48022.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="18673.114" y="-48026.6701" font-family="Times,serif" font-size="14.00" fill="#000000">frame.type =&gt; ?{def stackTop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-48011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.gen.global.Symbol],BCodeSkelBuilder.this.global.gen.global.RefTree,That] -->
<g id="node658" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.gen.global.Symbol],BCodeSkelBuilder.this.global.gen.global.RefTree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-48094.8701" rx="595.2678" ry="26.7407"/>
<text text-anchor="start" x="18353.614" y="-48098.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.gen.global.Symbol],BCodeSkelBuilder.this.global.gen.global.RefTree,That]</text>
<text text-anchor="middle" x="18766.614" y="-48083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- frame.type =&gt; ?{def peekStack: ?} -->
<g id="node659" class="node">
<title>frame.type =&gt; ?{def peekStack: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-48166.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="18670.114" y="-48170.6701" font-family="Times,serif" font-size="14.00" fill="#000000">frame.type =&gt; ?{def peekStack: ?}</text>
<text text-anchor="middle" x="18766.614" y="-48155.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 2ms</text>
</g>
<!-- share.type =&gt; ?{def isEmpty: ?} -->
<g id="node660" class="node">
<title>share.type =&gt; ?{def isEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-48238.8701" rx="138.6859" ry="26.7407"/>
<text text-anchor="start" x="18676.614" y="-48242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">share.type =&gt; ?{def isEmpty: ?}</text>
<text text-anchor="middle" x="18766.614" y="-48227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def compare: ?} -->
<g id="node661" class="node">
<title>String =&gt; ?{def compare: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-48310.8701" rx="123.9879" ry="26.7407"/>
<text text-anchor="start" x="18687.114" y="-48314.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def compare: ?}</text>
<text text-anchor="middle" x="18766.614" y="-48299.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- GenTrees.this.global.Symbol =&gt; ?{def metalevel: ?} -->
<g id="node662" class="node">
<title>GenTrees.this.global.Symbol =&gt; ?{def metalevel: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-48382.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="18620.614" y="-48386.6701" font-family="Times,serif" font-size="14.00" fill="#000000">GenTrees.this.global.Symbol =&gt; ?{def metalevel: ?}</text>
<text text-anchor="middle" x="18766.614" y="-48371.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; Int) =&gt; ?{def &#45;=: ?} -->
<g id="node663" class="node">
<title>(=&gt; Int) =&gt; ?{def &#45;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-48454.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-48458.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Int) =&gt; ?{def &#45;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-48443.6701" font-family="Times,serif" font-size="14.00" fill="#000000">29 times = 2ms</text>
</g>
<!-- String(&#39;specialized overload for %s in %s&#39;) =&gt; ?{def format: ?} -->
<g id="node664" class="node">
<title>String(&#39;specialized overload for %s in %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-48526.8701" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="18592.114" y="-48530.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;specialized overload for %s in %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-48515.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; PatternTypers.this.global.Tree -->
<g id="node665" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; PatternTypers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-48598.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-48602.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; PatternTypers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-48587.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[Duplicators.this.global.Symbol]) =&gt; Duplicators.this.global.Type -->
<g id="node666" class="node">
<title>(=&gt; List[Duplicators.this.global.Symbol]) =&gt; Duplicators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-48670.8701" rx="300.5408" ry="26.7407"/>
<text text-anchor="start" x="18562.114" y="-48674.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Duplicators.this.global.Symbol]) =&gt; Duplicators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-48659.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; JavaParsers.this.global.Symbol -->
<g id="node667" class="node">
<title>((Nothing, Nothing)) =&gt; JavaParsers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-48742.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-48746.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; JavaParsers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-48731.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Trees.this.Type],Trees.this.TypeTree,List[Trees.this.gen.global.Tree]] -->
<g id="node668" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Trees.this.Type],Trees.this.TypeTree,List[Trees.this.gen.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-48814.8701" rx="454.8394" ry="26.7407"/>
<text text-anchor="start" x="18453.114" y="-48818.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Trees.this.Type],Trees.this.TypeTree,List[Trees.this.gen.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-48803.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BCodeSkelBuilder.this.bTypes.ClassInfo] =&gt; ?{def get: ?} -->
<g id="node669" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BCodeSkelBuilder.this.bTypes.ClassInfo] =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-48886.8701" rx="506.9911" ry="26.7407"/>
<text text-anchor="start" x="18416.114" y="-48890.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BCodeSkelBuilder.this.bTypes.ClassInfo] =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-48875.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- String(&#39;internal\\.reificationSupport\\.FlagsRepr\\((\\d+)[lL]\\)&#39;) =&gt; ?{def r: ?} -->
<g id="node670" class="node">
<title>String(&#39;internal\\.reificationSupport\\.FlagsRepr\\((\\d+)[lL]\\)&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-48958.8701" rx="297.884" ry="26.7407"/>
<text text-anchor="start" x="18564.114" y="-48962.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;internal\.reificationSupport\.FlagsRepr\((\d+)[lL]\)&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-48947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.OptimizerWarning,(scala.tools.asm.tree.MethodNode, tools.nsc.backend.jvm.BTypes.InternalName)] =&gt; ?{def withFilter: ?} -->
<g id="node671" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.OptimizerWarning,(scala.tools.asm.tree.MethodNode, tools.nsc.backend.jvm.BTypes.InternalName)] =&gt; ?{def withFilter: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-49030.8701" rx="688.9441" ry="26.7407"/>
<text text-anchor="start" x="18287.614" y="-49034.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.OptimizerWarning,(scala.tools.asm.tree.MethodNode, tools.nsc.backend.jvm.BTypes.InternalName)] =&gt; ?{def withFilter: ?}</text>
<text text-anchor="middle" x="18766.614" y="-49019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.Tree],ExtensionMethods.this.global.analyzer.global.Tree,That] -->
<g id="node672" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.Tree],ExtensionMethods.this.global.analyzer.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-49102.8701" rx="544.4444" ry="26.7407"/>
<text text-anchor="start" x="18389.614" y="-49106.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.Tree],ExtensionMethods.this.global.analyzer.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-49091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- rtpe.type =&gt; ?{def +: ?} -->
<g id="node673" class="node">
<title>rtpe.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-49174.8701" rx="106.5467" ry="26.7407"/>
<text text-anchor="start" x="18699.114" y="-49178.6701" font-family="Times,serif" font-size="14.00" fill="#000000">rtpe.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-49163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.global.definitions.LongClass.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node674" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.global.definitions.LongClass.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-49246.8701" rx="359.4206" ry="26.7407"/>
<text text-anchor="start" x="18520.614" y="-49250.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.global.definitions.LongClass.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-49235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.CONSTkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node675" class="node">
<title>JavaScanners.this.global.javanme.CONSTkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-49318.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="18583.114" y="-49322.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.CONSTkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-49307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit]] -->
<g id="node676" class="node">
<title>scala.reflect.ClassTag[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-49390.8701" rx="366.0628" ry="26.7407"/>
<text text-anchor="start" x="18515.614" y="-49394.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit]]</text>
<text text-anchor="middle" x="18766.614" y="-49379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 5ms</text>
</g>
<!-- Scanners.this.global.nme.THISkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node677" class="node">
<title>Scanners.this.global.nme.THISkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-49462.8701" rx="227.8769" ry="26.7407"/>
<text text-anchor="start" x="18613.614" y="-49466.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.THISkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-49451.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeInfo.this.global.Tree],TreeInfo.this.global.Tree,List[TreeInfo.this.global.Tree]] -->
<g id="node678" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeInfo.this.global.Tree],TreeInfo.this.global.Tree,List[TreeInfo.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-49534.8701" rx="506.077" ry="26.7407"/>
<text text-anchor="start" x="18416.614" y="-49538.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeInfo.this.global.Tree],TreeInfo.this.global.Tree,List[TreeInfo.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-49523.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;illegal combination of modifiers: %s and %s for: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node679" class="node">
<title>String(&#39;illegal combination of modifiers: %s and %s for: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-49606.8701" rx="330.852" ry="26.7407"/>
<text text-anchor="start" x="18540.614" y="-49610.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;illegal combination of modifiers: %s and %s for: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-49595.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int =&gt; ?{def until: ?} -->
<g id="node680" class="node">
<title>Int =&gt; ?{def until: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-49678.8701" rx="94.5053" ry="26.7407"/>
<text text-anchor="start" x="18707.614" y="-49682.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; ?{def until: ?}</text>
<text text-anchor="middle" x="18766.614" y="-49667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- Scanners.this.global.nme.TRYkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node681" class="node">
<title>Scanners.this.global.nme.TRYkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-49750.8701" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="18615.114" y="-49754.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.TRYkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-49739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[TreeMakers.this.TreeMaker]],TreeMakers.this.Casegen =&gt; MatchTreeMaking.this.global.Tree,List[TreeMakers.this.Casegen =&gt; MatchTreeMaking.this.global.Tree]] -->
<g id="node682" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[TreeMakers.this.TreeMaker]],TreeMakers.this.Casegen =&gt; MatchTreeMaking.this.global.Tree,List[TreeMakers.this.Casegen =&gt; MatchTreeMaking.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-49822.8701" rx="847.6421" ry="26.7407"/>
<text text-anchor="start" x="18175.114" y="-49826.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[TreeMakers.this.TreeMaker]],TreeMakers.this.Casegen =&gt; MatchTreeMaking.this.global.Tree,List[TreeMakers.this.Casegen =&gt; MatchTreeMaking.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-49811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def apply: ?} -->
<g id="node683" class="node">
<title>String =&gt; ?{def apply: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-49894.8701" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="18695.614" y="-49898.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def apply: ?}</text>
<text text-anchor="middle" x="18766.614" y="-49883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 3ms</text>
</g>
<!-- s.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node684" class="node">
<title>s.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-49966.8701" rx="98.9899" ry="26.7407"/>
<text text-anchor="start" x="18704.614" y="-49970.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-49955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- sys.Prop.Creator[String] -->
<g id="node685" class="node">
<title>sys.Prop.Creator[String]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-50038.8701" rx="105.218" ry="26.7407"/>
<text text-anchor="start" x="18700.114" y="-50042.6701" font-family="Times,serif" font-size="14.00" fill="#000000">sys.Prop.Creator[String]</text>
<text text-anchor="middle" x="18766.614" y="-50027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Reshape.this.global.FlagSet -->
<g id="node686" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Reshape.this.global.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-50110.8701" rx="253.2885" ry="26.7407"/>
<text text-anchor="start" x="18595.614" y="-50114.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Reshape.this.global.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-50099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Option[(Int, Inliner.this.postProcessor.callGraph.ArgInfo)] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node687" class="node">
<title>Option[(Int, Inliner.this.postProcessor.callGraph.ArgInfo)] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-50182.8701" rx="408.9155" ry="26.7407"/>
<text text-anchor="start" x="18485.614" y="-50186.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[(Int, Inliner.this.postProcessor.callGraph.ArgInfo)] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-50171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- NullnessFrame.this.type =&gt; ?{def setValue: ?} -->
<g id="node688" class="node">
<title>NullnessFrame.this.type =&gt; ?{def setValue: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-50254.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="18637.114" y="-50258.6701" font-family="Times,serif" font-size="14.00" fill="#000000">NullnessFrame.this.type =&gt; ?{def setValue: ?}</text>
<text text-anchor="middle" x="18766.614" y="-50243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[Macros.this.global.Symbol]) =&gt; Macros.this.global.Type -->
<g id="node689" class="node">
<title>(=&gt; List[Macros.this.global.Symbol]) =&gt; Macros.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-50326.8701" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="18583.614" y="-50330.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Macros.this.global.Symbol]) =&gt; Macros.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-50315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- PatternMatchingStats.this.Counter =&gt; Ordered[PatternMatchingStats.this.Counter] -->
<g id="node690" class="node">
<title>PatternMatchingStats.this.Counter =&gt; Ordered[PatternMatchingStats.this.Counter]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-50398.8701" rx="331.7662" ry="26.7407"/>
<text text-anchor="start" x="18540.114" y="-50402.6701" font-family="Times,serif" font-size="14.00" fill="#000000">PatternMatchingStats.this.Counter =&gt; Ordered[PatternMatchingStats.this.Counter]</text>
<text text-anchor="middle" x="18766.614" y="-50387.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.VARkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node691" class="node">
<title>Scanners.this.global.nme.VARkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-50470.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="18614.614" y="-50474.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.VARkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-50459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- fmt.type =&gt; ?{def format: ?} -->
<g id="node692" class="node">
<title>fmt.type =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-50542.8701" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="18685.614" y="-50546.6701" font-family="Times,serif" font-size="14.00" fill="#000000">fmt.type =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-50531.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- String(&#39;call site&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node693" class="node">
<title>String(&#39;call site&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-50614.8701" rx="138.6859" ry="26.7407"/>
<text text-anchor="start" x="18676.614" y="-50618.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;call site&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-50603.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Checkable.this.global.Type],Checkable.this.global.Type,That] -->
<g id="node694" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Checkable.this.global.Type],Checkable.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-50686.8701" rx="423.6139" ry="26.7407"/>
<text text-anchor="start" x="18475.114" y="-50690.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Checkable.this.global.Type],Checkable.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-50675.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[scala.tools.asm.Type],CallGraph.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.BType,That] -->
<g id="node695" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[scala.tools.asm.Type],CallGraph.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.BType,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-50758.8701" rx="613.5375" ry="26.7407"/>
<text text-anchor="start" x="18340.614" y="-50762.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[scala.tools.asm.Type],CallGraph.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.BType,That]</text>
<text text-anchor="middle" x="18766.614" y="-50747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[CallGraph.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.BType] -->
<g id="node1753" class="node">
<title>scala.reflect.ClassTag[CallGraph.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.BType]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-50758.8701" rx="415.1434" ry="26.7407"/>
<text text-anchor="start" x="37875.8606" y="-50762.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[CallGraph.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.BType]</text>
<text text-anchor="middle" x="38161.3606" y="-50747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[scala.tools.asm.Type],CallGraph.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.BType,That]&#45;&gt;scala.reflect.ClassTag[CallGraph.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.BType] -->
<g id="edge5" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[scala.tools.asm.Type],CallGraph.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.BType,That]&#45;&gt;scala.reflect.ClassTag[CallGraph.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.BType]</title>
<path fill="none" stroke="#000000" d="M19380.4448,-50758.8701C22354.6297,-50758.8701 35226.1885,-50758.8701 37736.1508,-50758.8701"/>
<polygon fill="#000000" stroke="#000000" points="37736.2191,-50762.3702 37746.2191,-50758.8701 37736.219,-50755.3702 37736.2191,-50762.3702"/>
</g>
<!-- String =&gt; ?{def init: ?} -->
<g id="node696" class="node">
<title>String =&gt; ?{def init: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-50830.8701" rx="103.4757" ry="26.7407"/>
<text text-anchor="start" x="18701.614" y="-50834.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def init: ?}</text>
<text text-anchor="middle" x="18766.614" y="-50819.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[String],String,That] -->
<g id="node697" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[String],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-34970.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="18586.114" y="-34974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[String],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-34959.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 13ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[String],String,That]&#45;&gt;scala.reflect.ClassTag[String] -->
<g id="edge20" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[String],String,That]&#45;&gt;scala.reflect.ClassTag[String]</title>
<path fill="none" stroke="#000000" d="M19033.4034,-34970.8701C21239.7209,-34970.8701 36425.5366,-34970.8701 38025.1147,-34970.8701"/>
<polygon fill="#000000" stroke="#000000" points="38025.2008,-34974.3702 38035.2008,-34970.8701 38025.2008,-34967.3702 38025.2008,-34974.3702"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Symbol],BCodeBodyBuilder.this.bTypes.BType,List[BCodeBodyBuilder.this.bTypes.BType]] -->
<g id="node698" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Symbol],BCodeBodyBuilder.this.bTypes.BType,List[BCodeBodyBuilder.this.bTypes.BType]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-50902.8701" rx="671.503" ry="26.7407"/>
<text text-anchor="start" x="18299.614" y="-50906.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Symbol],BCodeBodyBuilder.this.bTypes.BType,List[BCodeBodyBuilder.this.bTypes.BType]]</text>
<text text-anchor="middle" x="18766.614" y="-50891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; JavaParsers.this.global.Tree -->
<g id="node699" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; JavaParsers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-50974.8701" rx="231.4481" ry="26.7407"/>
<text text-anchor="start" x="18611.114" y="-50978.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; JavaParsers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-50963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Type],BTypesFromSymbols.this.ClassBType,That] -->
<g id="node700" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Type],BTypesFromSymbols.this.ClassBType,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-51046.8701" rx="513.2191" ry="26.7407"/>
<text text-anchor="start" x="18411.614" y="-51050.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Type],BTypesFromSymbols.this.ClassBType,That]</text>
<text text-anchor="middle" x="18766.614" y="-51035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.IntMap[ClosureOptimizer.this.postProcessor.callGraph.ArgInfo],(Int, ClosureOptimizer.this.postProcessor.callGraph.ArgInfo),That] -->
<g id="node701" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.IntMap[ClosureOptimizer.this.postProcessor.callGraph.ArgInfo],(Int, ClosureOptimizer.this.postProcessor.callGraph.ArgInfo),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-51118.8701" rx="784.7771" ry="26.7407"/>
<text text-anchor="start" x="18219.614" y="-51122.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.IntMap[ClosureOptimizer.this.postProcessor.callGraph.ArgInfo],(Int, ClosureOptimizer.this.postProcessor.callGraph.ArgInfo),That]</text>
<text text-anchor="middle" x="18766.614" y="-51107.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.reflect.ClassTag[Enclosures.this.universe.Template] -->
<g id="node702" class="node">
<title>scala.reflect.ClassTag[Enclosures.this.universe.Template]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-51190.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-51194.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Enclosures.this.universe.Template]</text>
<text text-anchor="middle" x="18766.614" y="-51179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Trees.this.Tree],Trees.this.Tree,That] -->
<g id="node703" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Trees.this.Tree],Trees.this.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-51262.8701" rx="328.1951" ry="26.7407"/>
<text text-anchor="start" x="18542.614" y="-51266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Trees.this.Tree],Trees.this.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-51251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[Any],Int,That] -->
<g id="node704" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[Any],Int,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-51334.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="18605.614" y="-51338.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[Any],Int,That]</text>
<text text-anchor="middle" x="18766.614" y="-51323.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Internals.this.universe.analyzer.ContextReporter -->
<g id="node705" class="node">
<title>(=&gt; Unit) =&gt; Internals.this.universe.analyzer.ContextReporter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-51406.8701" rx="252.3743" ry="26.7407"/>
<text text-anchor="start" x="18596.114" y="-51410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Internals.this.universe.analyzer.ContextReporter</text>
<text text-anchor="middle" x="18766.614" y="-51395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;scala/Tuple[12]\\$mc[IJDCZ]{1,2}\\$sp&#39;) =&gt; ?{def r: ?} -->
<g id="node706" class="node">
<title>String(&#39;scala/Tuple[12]\\$mc[IJDCZ]{1,2}\\$sp&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-51478.8701" rx="252.3743" ry="26.7407"/>
<text text-anchor="start" x="18596.114" y="-51482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;scala/Tuple[12]\$mc[IJDCZ]{1,2}\$sp&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-51467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- sym.NameType =&gt; ?{def +: ?} -->
<g id="node707" class="node">
<title>sym.NameType =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-51550.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="18679.114" y="-51554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">sym.NameType =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-51539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- List[TailCalls.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node708" class="node">
<title>List[TailCalls.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-51622.8701" rx="314.8251" ry="26.7407"/>
<text text-anchor="start" x="18552.114" y="-51626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[TailCalls.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-51611.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;seeing private member %s, currentClass: %s, owner: %s, isAccessible: %b, isLocalName: %b&#39;) =&gt; ?{def format: ?} -->
<g id="node709" class="node">
<title>String(&#39;seeing private member %s, currentClass: %s, owner: %s, isAccessible: %b, isLocalName: %b&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-51694.8701" rx="493.6211" ry="26.7407"/>
<text text-anchor="start" x="18425.614" y="-51698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;seeing private member %s, currentClass: %s, owner: %s, isAccessible: %b, isLocalName: %b&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-51683.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; TypeNode.this.type) =&gt; ?{def typeName_=: ?} -->
<g id="node710" class="node">
<title>(=&gt; TypeNode.this.type) =&gt; ?{def typeName_=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-51766.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="18623.614" y="-51770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; TypeNode.this.type) =&gt; ?{def typeName_=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-51755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; relativePath.type) =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): Seq[String]} -->
<g id="node711" class="node">
<title>(=&gt; relativePath.type) =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): Seq[String]}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-51838.8701" rx="283.5996" ry="26.7407"/>
<text text-anchor="start" x="18574.114" y="-51842.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; relativePath.type) =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): Seq[String]}</text>
<text text-anchor="middle" x="18766.614" y="-51827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.asm.tree.MethodNode =&gt; ?{def foreachInsn: ?} -->
<g id="node712" class="node">
<title>scala.tools.asm.tree.MethodNode =&gt; ?{def foreachInsn: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-51910.8701" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="18604.114" y="-51914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.asm.tree.MethodNode =&gt; ?{def foreachInsn: ?}</text>
<text text-anchor="middle" x="18766.614" y="-51899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type),That] -->
<g id="node713" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-51982.8701" rx="629.1501" ry="26.7407"/>
<text text-anchor="start" x="18329.614" y="-51986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type),That]</text>
<text text-anchor="middle" x="18766.614" y="-51971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.util.List[java.lang.management.GarbageCollectorMXBean] =&gt; ?{def asScala: ?} -->
<g id="node714" class="node">
<title>java.util.List[java.lang.management.GarbageCollectorMXBean] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-52054.8701" rx="344.2221" ry="26.7407"/>
<text text-anchor="start" x="18531.114" y="-52058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.List[java.lang.management.GarbageCollectorMXBean] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-52043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Symbol],String,List[String]] -->
<g id="node715" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Symbol],String,List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-52126.8701" rx="395.0455" ry="26.7407"/>
<text text-anchor="start" x="18495.114" y="-52130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Symbol],String,List[String]]</text>
<text text-anchor="middle" x="18766.614" y="-52115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Taggers.this.c.universe.definitions.NullTpe.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node716" class="node">
<title>Taggers.this.c.universe.definitions.NullTpe.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-52198.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-52202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Taggers.this.c.universe.definitions.NullTpe.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-52187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[scala.tools.asm.Type],scala.tools.asm.Type,That] -->
<g id="node717" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[scala.tools.asm.Type],scala.tools.asm.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-52270.8701" rx="382.5895" ry="26.7407"/>
<text text-anchor="start" x="18504.114" y="-52274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[scala.tools.asm.Type],scala.tools.asm.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-52259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.tools.asm.Type] -->
<g id="node1463" class="node">
<title>scala.reflect.ClassTag[scala.tools.asm.Type]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-52270.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="38039.3606" y="-52274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.tools.asm.Type]</text>
<text text-anchor="middle" x="38161.3606" y="-52259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[scala.tools.asm.Type],scala.tools.asm.Type,That]&#45;&gt;scala.reflect.ClassTag[scala.tools.asm.Type] -->
<g id="edge17" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[scala.tools.asm.Type],scala.tools.asm.Type,That]&#45;&gt;scala.reflect.ClassTag[scala.tools.asm.Type]</title>
<path fill="none" stroke="#000000" d="M19149.4,-52270.8701C21694.273,-52270.8701 36122.9828,-52270.8701 37967.3522,-52270.8701"/>
<polygon fill="#000000" stroke="#000000" points="37967.3751,-52274.3702 37977.375,-52270.8701 37967.375,-52267.3702 37967.3751,-52274.3702"/>
</g>
<!-- java.util.Iterator[scala.tools.asm.tree.TryCatchBlockNode] =&gt; ?{def asScala: ?} -->
<g id="node718" class="node">
<title>java.util.Iterator[scala.tools.asm.tree.TryCatchBlockNode] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-52342.8701" rx="321.9673" ry="26.7407"/>
<text text-anchor="start" x="18547.114" y="-52346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.Iterator[scala.tools.asm.tree.TryCatchBlockNode] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-52331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[StdAttachments.this.MacroExpansionAttachment] -->
<g id="node719" class="node">
<title>scala.reflect.ClassTag[StdAttachments.this.MacroExpansionAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-52414.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="18566.614" y="-52418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[StdAttachments.this.MacroExpansionAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-52403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- Int(101) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node720" class="node">
<title>Int(101) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-52486.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-52490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(101) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-52475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- Scanners.this.global.nme.NEWkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node721" class="node">
<title>Scanners.this.global.nme.NEWkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-52558.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="18613.114" y="-52562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.NEWkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-52547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; String) =&gt; Int -->
<g id="node722" class="node">
<title>(=&gt; String) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-52630.8701" rx="83.3772" ry="26.7407"/>
<text text-anchor="start" x="18715.614" y="-52634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; String) =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-52619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">270 times = 13ms</text>
</g>
<!-- txt.type =&gt; ?{def foreach: ?} -->
<g id="node723" class="node">
<title>txt.type =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-52702.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="18686.614" y="-52706.6701" font-family="Times,serif" font-size="14.00" fill="#000000">txt.type =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-52691.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.typechecker.ContextMode.MacrosEnabled.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node724" class="node">
<title>scala.tools.nsc.typechecker.ContextMode.MacrosEnabled.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-52774.8701" rx="318.3962" ry="26.7407"/>
<text text-anchor="start" x="18549.614" y="-52778.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.ContextMode.MacrosEnabled.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-52763.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[(String, Any)],String,That] -->
<g id="node725" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[(String, Any)],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-52846.8701" rx="287.1707" ry="26.7407"/>
<text text-anchor="start" x="18571.614" y="-52850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[(String, Any)],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-52835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[_1],MatchTreeMaking.this.global.Symbol,That] -->
<g id="node726" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[_1],MatchTreeMaking.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-52918.8701" rx="474.4373" ry="26.7407"/>
<text text-anchor="start" x="18439.114" y="-52922.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[_1],MatchTreeMaking.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-52907.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.Set[Macros.this.global.Symbol],Int,scala.collection.mutable.Set[Int]] -->
<g id="node727" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.Set[Macros.this.global.Symbol],Int,scala.collection.mutable.Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-52990.8701" rx="529.746" ry="26.7407"/>
<text text-anchor="start" x="18400.114" y="-52994.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.Set[Macros.this.global.Symbol],Int,scala.collection.mutable.Set[Int]]</text>
<text text-anchor="middle" x="18766.614" y="-52979.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Void] -->
<g id="node728" class="node">
<title>scala.reflect.ClassTag[Void]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-53062.8701" rx="121.7449" ry="26.7407"/>
<text text-anchor="start" x="18688.614" y="-53066.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Void]</text>
<text text-anchor="middle" x="18766.614" y="-53051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.Seq[WorkScheduler.this.Action],T,Seq[T]] -->
<g id="node729" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.Seq[WorkScheduler.this.Action],T,Seq[T]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-53134.8701" rx="428.5134" ry="26.7407"/>
<text text-anchor="start" x="18471.614" y="-53138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.Seq[WorkScheduler.this.Action],T,Seq[T]]</text>
<text text-anchor="middle" x="18766.614" y="-53123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Text&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType -->
<g id="node730" class="node">
<title>String(&#39;Text&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-53206.8701" rx="349.1216" ry="26.7407"/>
<text text-anchor="start" x="18527.614" y="-53210.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Text&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</text>
<text text-anchor="middle" x="18766.614" y="-53195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.Symbol,List[Infer.this.global.Symbol]] -->
<g id="node731" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.Symbol,List[Infer.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-53278.8701" rx="503.4201" ry="26.7407"/>
<text text-anchor="start" x="18418.614" y="-53282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.Symbol,List[Infer.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-53267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- parts.type =&gt; ?{def init: ?} -->
<g id="node732" class="node">
<title>parts.type =&gt; ?{def init: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-53350.8701" rx="117.2596" ry="26.7407"/>
<text text-anchor="start" x="18691.614" y="-53354.6701" font-family="Times,serif" font-size="14.00" fill="#000000">parts.type =&gt; ?{def init: ?}</text>
<text text-anchor="middle" x="18766.614" y="-53339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; EtaExpansion.this.global.Symbol -->
<g id="node733" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; EtaExpansion.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-53422.8701" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="18554.614" y="-53426.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; EtaExpansion.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-53411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- Int(1) =&gt; ?{def until: ?} -->
<g id="node734" class="node">
<title>Int(1) =&gt; ?{def until: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-53494.8701" rx="106.1321" ry="26.7407"/>
<text text-anchor="start" x="18699.614" y="-53498.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(1) =&gt; ?{def until: ?}</text>
<text text-anchor="middle" x="18766.614" y="-53483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: ?V] -->
<g id="node735" class="node">
<title>((Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: ?V]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-53566.8701" rx="282.2713" ry="26.7407"/>
<text text-anchor="start" x="18575.114" y="-53570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: ?V]</text>
<text text-anchor="middle" x="18766.614" y="-53555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Array[Byte] -->
<g id="node736" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Array[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-53638.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="18628.114" y="-53642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Array[Byte]</text>
<text text-anchor="middle" x="18766.614" y="-53627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Implicits.this.SearchResult, List[Implicits.this.global.TypeConstraint])],(Implicits.this.SearchResult, List[Implicits.this.global.TypeConstraint]),List[(Implicits.this.SearchResult, List[Implicits.this.global.TypeConstraint])]] -->
<g id="node737" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Implicits.this.SearchResult, List[Implicits.this.global.TypeConstraint])],(Implicits.this.SearchResult, List[Implicits.this.global.TypeConstraint]),List[(Implicits.this.SearchResult, List[Implicits.this.global.TypeConstraint])]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-53710.8701" rx="1045.2077" ry="26.7407"/>
<text text-anchor="start" x="18035.614" y="-53714.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Implicits.this.SearchResult, List[Implicits.this.global.TypeConstraint])],(Implicits.this.SearchResult, List[Implicits.this.global.TypeConstraint]),List[(Implicits.this.SearchResult, List[Implicits.this.global.TypeConstraint])]]</text>
<text text-anchor="middle" x="18766.614" y="-53699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; TypingTransformers.this.global.Symbol -->
<g id="node738" class="node">
<title>((Nothing, Nothing)) =&gt; TypingTransformers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-53782.8701" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="18587.614" y="-53786.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; TypingTransformers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-53771.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; List[RefChecks.this.global.Type] -->
<g id="node739" class="node">
<title>((Nothing, Nothing)) =&gt; List[RefChecks.this.global.Type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-53854.8701" rx="237.6758" ry="26.7407"/>
<text text-anchor="start" x="18606.614" y="-53858.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; List[RefChecks.this.global.Type]</text>
<text text-anchor="middle" x="18766.614" y="-53843.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; java.util.Collection[_ &lt;: scala.tools.asm.tree.TryCatchBlockNode] -->
<g id="node740" class="node">
<title>((Nothing, Nothing)) =&gt; java.util.Collection[_ &lt;: scala.tools.asm.tree.TryCatchBlockNode]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-53926.8701" rx="366.0628" ry="26.7407"/>
<text text-anchor="start" x="18515.614" y="-53930.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; java.util.Collection[_ &lt;: scala.tools.asm.tree.TryCatchBlockNode]</text>
<text text-anchor="middle" x="18766.614" y="-53915.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Reshape.this.global.Tree -->
<g id="node741" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Reshape.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-53998.8701" rx="219.4064" ry="26.7407"/>
<text text-anchor="start" x="18619.614" y="-54002.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Reshape.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-53987.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; String -->
<g id="node742" class="node">
<title>Unit =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-54070.8701" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="18723.114" y="-54074.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-54059.6701" font-family="Times,serif" font-size="14.00" fill="#000000">23 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol -->
<g id="node743" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-54142.8701" rx="325.0384" ry="26.7407"/>
<text text-anchor="start" x="18544.614" y="-54146.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-54131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- code.type =&gt; ?{def indices: ?} -->
<g id="node744" class="node">
<title>code.type =&gt; ?{def indices: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-54214.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-54218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">code.type =&gt; ?{def indices: ?}</text>
<text text-anchor="middle" x="18766.614" y="-54203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- String(&#39;library&#39;) =&gt; scala.reflect.io.Path -->
<g id="node745" class="node">
<title>String(&#39;library&#39;) =&gt; scala.reflect.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-54286.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="18659.614" y="-54290.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;library&#39;) =&gt; scala.reflect.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-54275.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[SymbolTables.this.ReifyAliasAttachment] -->
<g id="node746" class="node">
<title>scala.reflect.ClassTag[SymbolTables.this.ReifyAliasAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-54358.8701" rx="263.5019" ry="26.7407"/>
<text text-anchor="start" x="18588.114" y="-54362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[SymbolTables.this.ReifyAliasAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-54347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- String(&#39;List\\[List\\[.*?\\].*?\\]&#39;) =&gt; ?{def r: ?} -->
<g id="node747" class="node">
<title>String(&#39;List\\[List\\[.*?\\].*?\\]&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-54430.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="18647.614" y="-54434.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;List\[List\[.*?\].*?\]&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-54419.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Set %s to private[%s]&#39;) =&gt; ?{def format: ?} -->
<g id="node748" class="node">
<title>String(&#39;Set %s to private[%s]&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-54502.8701" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="18625.614" y="-54506.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Set %s to private[%s]&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-54491.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Contexts.this.ContextReporter -->
<g id="node749" class="node">
<title>Unit =&gt; Contexts.this.ContextReporter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-54574.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="18659.614" y="-54578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Contexts.this.ContextReporter</text>
<text text-anchor="middle" x="18766.614" y="-54563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[NamesDefaults.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node750" class="node">
<title>Option[NamesDefaults.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-54646.8701" rx="350.9501" ry="26.7407"/>
<text text-anchor="start" x="18526.614" y="-54650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[NamesDefaults.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-54635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.reflect.internal.util.SourceFile],Global.this.CompilationUnit,That] -->
<g id="node751" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.reflect.internal.util.SourceFile],Global.this.CompilationUnit,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-54718.8701" rx="460.1531" ry="26.7407"/>
<text text-anchor="start" x="18449.114" y="-54722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.reflect.internal.util.SourceFile],Global.this.CompilationUnit,That]</text>
<text text-anchor="middle" x="18766.614" y="-54707.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- xs.type =&gt; ?{def forall: ?} -->
<g id="node752" class="node">
<title>xs.type =&gt; ?{def forall: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-54790.8701" rx="115.0173" ry="26.7407"/>
<text text-anchor="start" x="18693.114" y="-54794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">xs.type =&gt; ?{def forall: ?}</text>
<text text-anchor="middle" x="18766.614" y="-54779.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[Validators.this.global.Symbol]],String,That] -->
<g id="node753" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[Validators.this.global.Symbol]],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-54862.8701" rx="372.7906" ry="26.7407"/>
<text text-anchor="start" x="18511.114" y="-54866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[Validators.this.global.Symbol]],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-54851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- s.type =&gt; ?{def find: ?} -->
<g id="node754" class="node">
<title>s.type =&gt; ?{def find: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-54934.8701" rx="105.218" ry="26.7407"/>
<text text-anchor="start" x="18700.114" y="-54938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def find: ?}</text>
<text text-anchor="middle" x="18766.614" y="-54923.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[StackTraceElement] =&gt; ?{def take: ?} -->
<g id="node755" class="node">
<title>Array[StackTraceElement] =&gt; ?{def take: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-55006.8701" rx="186.8525" ry="26.7407"/>
<text text-anchor="start" x="18642.614" y="-55010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[StackTraceElement] =&gt; ?{def take: ?}</text>
<text text-anchor="middle" x="18766.614" y="-54995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Long =&gt; ?{def +=: ?} -->
<g id="node756" class="node">
<title>Long =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-55078.8701" rx="98.9899" ry="26.7407"/>
<text text-anchor="start" x="18704.614" y="-55082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Long =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-55067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; MultiChoiceSetting.this.domain.ValueSet) =&gt; ?{def +=: ?} -->
<g id="node757" class="node">
<title>(=&gt; MultiChoiceSetting.this.domain.ValueSet) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-55150.8701" rx="260.8448" ry="26.7407"/>
<text text-anchor="start" x="18590.114" y="-55154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; MultiChoiceSetting.this.domain.ValueSet) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-55139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- (=&gt; List[() =&gt; Unit]) =&gt; ?{def ::=: ?} -->
<g id="node758" class="node">
<title>(=&gt; List[() =&gt; Unit]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-55222.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="18661.114" y="-55226.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[() =&gt; Unit]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-55211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Char] -->
<g id="node759" class="node">
<title>(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-55294.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="18610.114" y="-55298.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Char]</text>
<text text-anchor="middle" x="18766.614" y="-55283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.TraversableOnce[B]) =&gt; Traversable[?B] -->
<g id="node760" class="node">
<title>(=&gt; scala.collection.TraversableOnce[B]) =&gt; Traversable[?B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-55366.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="18596.614" y="-55370.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.TraversableOnce[B]) =&gt; Traversable[?B]</text>
<text text-anchor="middle" x="18766.614" y="-55355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[T],(T, NamesDefaults.this.global.Symbol),That] -->
<g id="node761" class="node">
<title>scala.collection.generic.CanBuildFrom[List[T],(T, NamesDefaults.this.global.Symbol),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-55438.8701" rx="371.4623" ry="26.7407"/>
<text text-anchor="start" x="18512.114" y="-55442.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[T],(T, NamesDefaults.this.global.Symbol),That]</text>
<text text-anchor="middle" x="18766.614" y="-55427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- i.type =&gt; ?{def min: ?} -->
<g id="node762" class="node">
<title>i.type =&gt; ?{def min: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-55510.8701" rx="103.8894" ry="26.7407"/>
<text text-anchor="start" x="18701.114" y="-55514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">i.type =&gt; ?{def min: ?}</text>
<text text-anchor="middle" x="18766.614" y="-55499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Global.this.erasure.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node763" class="node">
<title>Global.this.erasure.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-55582.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="18656.114" y="-55586.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.erasure.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-55571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; Holes.this.global.Symbol -->
<g id="node764" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; Holes.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-55654.8701" rx="280.943" ry="26.7407"/>
<text text-anchor="start" x="18576.114" y="-55658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; Holes.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-55643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 5ms</text>
</g>
<!-- Duplicators.this.global.Tree =&gt; Duplicators.this.global.Type -->
<g id="node765" class="node">
<title>Duplicators.this.global.Tree =&gt; Duplicators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-55726.8701" rx="246.1463" ry="26.7407"/>
<text text-anchor="start" x="18600.614" y="-55730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Duplicators.this.global.Tree =&gt; Duplicators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-55715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.Map[Reifiers.this.global.Name,Set[Reifiers.this.global.TermName]],Iterator[Reifiers.this.global.Apply],That] -->
<g id="node766" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.Map[Reifiers.this.global.Name,Set[Reifiers.this.global.TermName]],Iterator[Reifiers.this.global.Apply],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-55798.8701" rx="686.7014" ry="26.7407"/>
<text text-anchor="start" x="18289.114" y="-55802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.Map[Reifiers.this.global.Name,Set[Reifiers.this.global.TermName]],Iterator[Reifiers.this.global.Apply],That]</text>
<text text-anchor="middle" x="18766.614" y="-55787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 20ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Int],Int,Set[Int]] -->
<g id="node767" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Int],Int,Set[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-55870.8701" rx="349.1216" ry="26.7407"/>
<text text-anchor="start" x="18527.614" y="-55874.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Int],Int,Set[Int]]</text>
<text text-anchor="middle" x="18766.614" y="-55859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Unapplies.this.global.FlagSet -->
<g id="node768" class="node">
<title>((Nothing, Nothing)) =&gt; Unapplies.this.global.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-55942.8701" rx="222.9775" ry="26.7407"/>
<text text-anchor="start" x="18617.114" y="-55946.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Unapplies.this.global.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-55931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.reflect.macros.contexts.Context],scala.reflect.internal.util.Position,That] -->
<g id="node769" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.reflect.macros.contexts.Context],scala.reflect.internal.util.Position,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-56014.8701" rx="484.2363" ry="26.7407"/>
<text text-anchor="start" x="18432.114" y="-56018.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.reflect.macros.contexts.Context],scala.reflect.internal.util.Position,That]</text>
<text text-anchor="middle" x="18766.614" y="-56003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[JavaParsers.this.global.TypeDef],JavaParsers.this.global.Ident,List[JavaParsers.this.global.Tree]] -->
<g id="node770" class="node">
<title>scala.collection.generic.CanBuildFrom[List[JavaParsers.this.global.TypeDef],JavaParsers.this.global.Ident,List[JavaParsers.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-56086.8701" rx="557.8145" ry="26.7407"/>
<text text-anchor="start" x="18380.114" y="-56090.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[JavaParsers.this.global.TypeDef],JavaParsers.this.global.Ident,List[JavaParsers.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-56075.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Typers.this.global.treeInfo.global.Tree] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node771" class="node">
<title>List[Typers.this.global.treeInfo.global.Tree] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-56158.8701" rx="354.9352" ry="26.7407"/>
<text text-anchor="start" x="18523.614" y="-56162.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Typers.this.global.treeInfo.global.Tree] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-56147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Validators.this.global.Symbol],Validators.this.global.Type,List[Validators.this.global.Type]] -->
<g id="node772" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Validators.this.global.Symbol],Validators.this.global.Type,List[Validators.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-56230.8701" rx="542.2018" ry="26.7407"/>
<text text-anchor="start" x="18391.114" y="-56234.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Validators.this.global.Symbol],Validators.this.global.Type,List[Validators.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-56219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- String(&#39;reifying symbol %s for tree %s&#39;) =&gt; ?{def format: ?} -->
<g id="node773" class="node">
<title>String(&#39;reifying symbol %s for tree %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-56302.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="18599.614" y="-56306.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;reifying symbol %s for tree %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-56291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; JavaParsers.this.global.Symbol -->
<g id="node774" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; JavaParsers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-56374.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="18560.614" y="-56378.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; JavaParsers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-56363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Type],String,List[String]] -->
<g id="node775" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Type],String,List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-56446.8701" rx="362.9917" ry="26.7407"/>
<text text-anchor="start" x="18518.114" y="-56450.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Type],String,List[String]]</text>
<text text-anchor="middle" x="18766.614" y="-56435.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.OptManifest[scala.tools.nsc.io.Directory] -->
<g id="node776" class="node">
<title>scala.reflect.OptManifest[scala.tools.nsc.io.Directory]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-56518.8701" rx="220.7347" ry="26.7407"/>
<text text-anchor="start" x="18618.614" y="-56522.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.OptManifest[scala.tools.nsc.io.Directory]</text>
<text text-anchor="middle" x="18766.614" y="-56507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Validators.this.global.TypeDef],Validators.this.global.Symbol,List[Validators.this.global.Symbol]] -->
<g id="node777" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Validators.this.global.TypeDef],Validators.this.global.Symbol,List[Validators.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-56590.8701" rx="567.1993" ry="26.7407"/>
<text text-anchor="start" x="18373.614" y="-56594.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Validators.this.global.TypeDef],Validators.this.global.Symbol,List[Validators.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-56579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.reflect.ClassTag[UnCurry.this.VarargsSymbolAttachment] -->
<g id="node778" class="node">
<title>scala.reflect.ClassTag[UnCurry.this.VarargsSymbolAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-56662.8701" rx="260.8448" ry="26.7407"/>
<text text-anchor="start" x="18590.114" y="-56666.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[UnCurry.this.VarargsSymbolAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-56651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Int, Int)],String,That] -->
<g id="node779" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Int, Int)],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-56734.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="18584.614" y="-56738.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Int, Int)],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-56723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Byte] =&gt; Array[Class[_]] -->
<g id="node781" class="node">
<title>Array[Byte] =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-56806.8701" rx="135.5294" ry="26.7407"/>
<text text-anchor="start" x="18678.614" y="-56810.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Byte] =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-56795.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)],SymbolTables.this.global.TermName,That] -->
<g id="node782" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)],SymbolTables.this.global.TermName,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-56878.8701" rx="647.9197" ry="26.7407"/>
<text text-anchor="start" x="18316.614" y="-56882.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)],SymbolTables.this.global.TermName,That]</text>
<text text-anchor="middle" x="18766.614" y="-56867.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],java.net.URL,List[java.net.URL]] -->
<g id="node783" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],java.net.URL,List[java.net.URL]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-56950.8701" rx="343.8079" ry="26.7407"/>
<text text-anchor="start" x="18531.614" y="-56954.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],java.net.URL,List[java.net.URL]]</text>
<text text-anchor="middle" x="18766.614" y="-56939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Int) =&gt; ?{def |=: ?} -->
<g id="node784" class="node">
<title>(=&gt; Int) =&gt; ?{def |=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-57022.8701" rx="106.1321" ry="26.7407"/>
<text text-anchor="start" x="18699.614" y="-57026.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Int) =&gt; ?{def |=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-57011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; String -->
<g id="node785" class="node">
<title>(=&gt; Unit) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-57094.8701" rx="89.6056" ry="26.7407"/>
<text text-anchor="start" x="18711.114" y="-57098.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-57083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">37 times = 3ms</text>
</g>
<!-- (=&gt; Long) =&gt; JavaScanner.this.ScanPosition -->
<g id="node786" class="node">
<title>(=&gt; Long) =&gt; JavaScanner.this.ScanPosition</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-57166.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="18643.114" y="-57170.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Long) =&gt; JavaScanner.this.ScanPosition</text>
<text text-anchor="middle" x="18766.614" y="-57155.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[NamesDefaults.this.global.Tree] -->
<g id="node787" class="node">
<title>scala.reflect.ClassTag[NamesDefaults.this.global.Tree]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-57238.8701" rx="224.72" ry="26.7407"/>
<text text-anchor="start" x="18615.614" y="-57242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[NamesDefaults.this.global.Tree]</text>
<text text-anchor="middle" x="18766.614" y="-57227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;resetting visibility of field: %s =&gt; %s&#39;) =&gt; ?{def format: ?} -->
<g id="node788" class="node">
<title>String(&#39;resetting visibility of field: %s =&gt; %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-57310.8701" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="18581.614" y="-57314.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;resetting visibility of field: %s =&gt; %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-57299.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;extra specialized mixins for %s: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node789" class="node">
<title>String(&#39;extra specialized mixins for %s: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-57382.8701" rx="265.3302" ry="26.7407"/>
<text text-anchor="start" x="18587.114" y="-57386.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;extra specialized mixins for %s: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-57371.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[java.lang.invoke.MethodType] -->
<g id="node790" class="node">
<title>scala.reflect.ClassTag[java.lang.invoke.MethodType]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-57454.8701" rx="218.492" ry="26.7407"/>
<text text-anchor="start" x="18620.114" y="-57458.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[java.lang.invoke.MethodType]</text>
<text text-anchor="middle" x="18766.614" y="-57443.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.tools.asm.tree.analysis.Analyzer[scala.tools.asm.tree.analysis.BasicValue] =&gt; scala.tools.asm.tree.analysis.Analyzer[V] -->
<g id="node791" class="node">
<title>scala.tools.asm.tree.analysis.Analyzer[scala.tools.asm.tree.analysis.BasicValue] =&gt; scala.tools.asm.tree.analysis.Analyzer[V]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-57526.8701" rx="497.6064" ry="26.7407"/>
<text text-anchor="start" x="18422.614" y="-57530.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.asm.tree.analysis.Analyzer[scala.tools.asm.tree.analysis.BasicValue] =&gt; scala.tools.asm.tree.analysis.Analyzer[V]</text>
<text text-anchor="middle" x="18766.614" y="-57515.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Double -->
<g id="node792" class="node">
<title>Unit =&gt; Double</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-57598.8701" rx="73.5782" ry="26.7407"/>
<text text-anchor="start" x="18722.614" y="-57602.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Double</text>
<text text-anchor="middle" x="18766.614" y="-57587.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Int(4096) =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node793" class="node">
<title>Int(4096) =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-57670.8701" rx="224.72" ry="26.7407"/>
<text text-anchor="start" x="18615.614" y="-57674.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(4096) =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-57659.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;NamespaceBinding&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType -->
<g id="node794" class="node">
<title>String(&#39;NamespaceBinding&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-57742.8701" rx="405.7586" ry="26.7407"/>
<text text-anchor="start" x="18487.614" y="-57746.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;NamespaceBinding&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</text>
<text text-anchor="middle" x="18766.614" y="-57731.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Double] -->
<g id="node795" class="node">
<title>(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Double]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-57814.8701" rx="241.6612" ry="26.7407"/>
<text text-anchor="start" x="18603.614" y="-57818.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Double]</text>
<text text-anchor="middle" x="18766.614" y="-57803.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Comparable[_ &gt;: java.io.File with String &lt;: java.io.Serializable] with java.io.Serializable],String,That] -->
<g id="node796" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Comparable[_ &gt;: java.io.File with String &lt;: java.io.Serializable] with java.io.Serializable],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-57886.8701" rx="580.5693" ry="26.7407"/>
<text text-anchor="start" x="18364.114" y="-57890.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Comparable[_ &gt;: java.io.File with String &lt;: java.io.Serializable] with java.io.Serializable],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-57875.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; Array[Float]) =&gt; Array[Class[_]] -->
<g id="node797" class="node">
<title>(=&gt; Array[Float]) =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-57958.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="18662.614" y="-57962.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Float]) =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-57947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Array[Float] =&gt; Array[AnyRef] -->
<g id="node798" class="node">
<title>Array[Float] =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-58030.8701" rx="135.5294" ry="26.7407"/>
<text text-anchor="start" x="18678.614" y="-58034.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Float] =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-58019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- String(&#39;@param&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node799" class="node">
<title>String(&#39;@param&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-58102.8701" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="18674.114" y="-58106.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;@param&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-58091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;Expanded \&#39;%s\&#39; to \&#39;%s\&#39; in %s&#39;) =&gt; ?{def format: ?} -->
<g id="node800" class="node">
<title>String(&#39;Expanded \&#39;%s\&#39; to \&#39;%s\&#39; in %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-58174.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-58178.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Expanded &#39;%s&#39; to &#39;%s&#39; in %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-58163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- defines.type =&gt; ?{def toList: ?} -->
<g id="node801" class="node">
<title>defines.type =&gt; ?{def toList: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-58246.8701" rx="135.5294" ry="26.7407"/>
<text text-anchor="start" x="18678.614" y="-58250.6701" font-family="Times,serif" font-size="14.00" fill="#000000">defines.type =&gt; ?{def toList: ?}</text>
<text text-anchor="middle" x="18766.614" y="-58235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; TreeBuilder.this.global.Type -->
<g id="node802" class="node">
<title>(=&gt; Unit) =&gt; TreeBuilder.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-58318.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="18649.114" y="-58322.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; TreeBuilder.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-58307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[MultiChoiceSetting.this.domain.ValueSet,MultiChoiceSetting.this.domain.Value,MultiChoiceSetting.this.domain.ValueSet] -->
<g id="node803" class="node">
<title>scala.collection.generic.CanBuildFrom[MultiChoiceSetting.this.domain.ValueSet,MultiChoiceSetting.this.domain.Value,MultiChoiceSetting.this.domain.ValueSet]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-58390.8701" rx="647.0054" ry="26.7407"/>
<text text-anchor="start" x="18317.114" y="-58394.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[MultiChoiceSetting.this.domain.ValueSet,MultiChoiceSetting.this.domain.Value,MultiChoiceSetting.this.domain.ValueSet]</text>
<text text-anchor="middle" x="18766.614" y="-58379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.UNIT.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node804" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.UNIT.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-58462.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="18583.114" y="-58466.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.UNIT.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-58451.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Boolean -->
<g id="node805" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-58534.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="18649.114" y="-58538.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-58523.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Array[scala.tools.asm.Handle]] -->
<g id="node806" class="node">
<title>scala.reflect.ClassTag[Array[scala.tools.asm.Handle]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-58606.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-58610.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Array[scala.tools.asm.Handle]]</text>
<text text-anchor="middle" x="18766.614" y="-58595.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;context.outer.enclClass.owner&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node807" class="node">
<title>String(&#39;context.outer.enclClass.owner&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-58678.8701" rx="224.72" ry="26.7407"/>
<text text-anchor="start" x="18615.614" y="-58682.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;context.outer.enclClass.owner&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-58667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- parts.type =&gt; ?{def last: ?} -->
<g id="node808" class="node">
<title>parts.type =&gt; ?{def last: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-58750.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="18691.114" y="-58754.6701" font-family="Times,serif" font-size="14.00" fill="#000000">parts.type =&gt; ?{def last: ?}</text>
<text text-anchor="middle" x="18766.614" y="-58739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Int(1) =&gt; ?{def max: ?} -->
<g id="node809" class="node">
<title>Int(1) =&gt; ?{def max: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-58822.8701" rx="105.218" ry="26.7407"/>
<text text-anchor="start" x="18700.114" y="-58826.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(1) =&gt; ?{def max: ?}</text>
<text text-anchor="middle" x="18766.614" y="-58811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[scala.tools.asm.Type] =&gt; ?{def map: ?} -->
<g id="node810" class="node">
<title>Array[scala.tools.asm.Type] =&gt; ?{def map: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-58894.8701" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="18637.614" y="-58898.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[scala.tools.asm.Type] =&gt; ?{def map: ?}</text>
<text text-anchor="middle" x="18766.614" y="-58883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Iterable[SymbolTables.this.global.Symbol],SymbolTables.this.global.TermName,That] -->
<g id="node811" class="node">
<title>scala.collection.generic.CanBuildFrom[Iterable[SymbolTables.this.global.Symbol],SymbolTables.this.global.TermName,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-58966.8701" rx="504.3343" ry="26.7407"/>
<text text-anchor="start" x="18418.114" y="-58970.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Iterable[SymbolTables.this.global.Symbol],SymbolTables.this.global.TermName,That]</text>
<text text-anchor="middle" x="18766.614" y="-58955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; UnCurry.this.global.analyzer.global.Symbol -->
<g id="node812" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; UnCurry.this.global.analyzer.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-59038.8701" rx="294.7271" ry="26.7407"/>
<text text-anchor="start" x="18566.114" y="-59042.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; UnCurry.this.global.analyzer.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-59027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; SymbolicXMLBuilder.this.global.Symbol -->
<g id="node813" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; SymbolicXMLBuilder.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-59110.8701" rx="345.5506" ry="26.7407"/>
<text text-anchor="start" x="18530.114" y="-59114.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; SymbolicXMLBuilder.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-59099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Interface.this.global.Symbol#NameType],(Interface.this.global.Symbol#NameType, Interface.this.global.Tree),That] -->
<g id="node814" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Interface.this.global.Symbol#NameType],(Interface.this.global.Symbol#NameType, Interface.this.global.Tree),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-59182.8701" rx="636.2922" ry="26.7407"/>
<text text-anchor="start" x="18324.614" y="-59186.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Interface.this.global.Symbol#NameType],(Interface.this.global.Symbol#NameType, Interface.this.global.Tree),That]</text>
<text text-anchor="middle" x="18766.614" y="-59171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Tree],SpecializeTypes.this.global.analyzer.global.Tree,That] -->
<g id="node815" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Tree],SpecializeTypes.this.global.analyzer.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-59254.8701" rx="525.2607" ry="26.7407"/>
<text text-anchor="start" x="18403.114" y="-59258.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Tree],SpecializeTypes.this.global.analyzer.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-59243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((List[Nothing], List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type]) -->
<g id="node816" class="node">
<title>((List[Nothing], List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-59326.8701" rx="499.849" ry="26.7407"/>
<text text-anchor="start" x="18421.114" y="-59330.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((List[Nothing], List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type])</text>
<text text-anchor="middle" x="18766.614" y="-59315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Implicits.this.InfoMap -->
<g id="node817" class="node">
<title>Implicits.this.InfoMap</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-59398.8701" rx="98.9899" ry="26.7407"/>
<text text-anchor="start" x="18704.614" y="-59402.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Implicits.this.InfoMap</text>
<text text-anchor="middle" x="18766.614" y="-59387.6701" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 3ms</text>
</g>
<!-- (=&gt; List[Fields.this.global.Symbol]) =&gt; Fields.this.global.Type -->
<g id="node818" class="node">
<title>(=&gt; List[Fields.this.global.Symbol]) =&gt; Fields.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-59470.8701" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="18592.114" y="-59474.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Fields.this.global.Symbol]) =&gt; Fields.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-59459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;\n &#160;&#160;&#160;&#160;&#160;|tp = %s\n &#160;&#160;&#160;&#160;&#160;|tp.typeSymbol = %s\n &#160;&#160;&#160;&#160;&#160;|tp.typeSymbol.owner = %s\n &#160;&#160;&#160;&#160;&#160;|tp.typeSymbolDirect = %s\n &#160;&#160;&#160;&#160;&#160;|tp.typeSymbolDirect.owner = %s\n &#160;&#160;&#160;&#160;&#160;&#39;) =&gt; ?{def stripMargin: ?} -->
<g id="node819" class="node">
<title>String(&#39;\n &#160;&#160;&#160;&#160;&#160;|tp = %s\n &#160;&#160;&#160;&#160;&#160;|tp.typeSymbol = %s\n &#160;&#160;&#160;&#160;&#160;|tp.typeSymbol.owner = %s\n &#160;&#160;&#160;&#160;&#160;|tp.typeSymbolDirect = %s\n &#160;&#160;&#160;&#160;&#160;|tp.typeSymbolDirect.owner = %s\n &#160;&#160;&#160;&#160;&#160;&#39;) =&gt; ?{def stripMargin: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-59605.8701" rx="160.5265" ry="90.5193"/>
<text text-anchor="middle" x="18766.614" y="-59654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;</text>
<text text-anchor="middle" x="18766.614" y="-59639.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;|tp = %s</text>
<text text-anchor="middle" x="18766.614" y="-59624.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;|tp.typeSymbol = %s</text>
<text text-anchor="middle" x="18766.614" y="-59609.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;|tp.typeSymbol.owner = %s</text>
<text text-anchor="middle" x="18766.614" y="-59594.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;|tp.typeSymbolDirect = %s</text>
<text text-anchor="middle" x="18766.614" y="-59579.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;|tp.typeSymbolDirect.owner = %s</text>
<text text-anchor="start" x="18661.114" y="-59564.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#39;) =&gt; ?{def stripMargin: ?}</text>
<text text-anchor="middle" x="18766.614" y="-59549.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node820" class="node">
<title>String =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-59740.8701" rx="205.5364" ry="26.7407"/>
<text text-anchor="start" x="18629.114" y="-59744.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-59729.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Erasure.this.global.Tree -->
<g id="node821" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Erasure.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-59812.8701" rx="252.3743" ry="26.7407"/>
<text text-anchor="start" x="18596.114" y="-59816.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Erasure.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-59801.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; List[Erasure.this.global.Tree]) =&gt; ?{def ::=: ?} -->
<g id="node822" class="node">
<title>(=&gt; List[Erasure.this.global.Tree]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-59884.8701" rx="212.2642" ry="26.7407"/>
<text text-anchor="start" x="18624.614" y="-59888.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Erasure.this.global.Tree]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-59873.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- MultiStringSetting.this.T =&gt; ?{def ++=: ?} -->
<g id="node823" class="node">
<title>MultiStringSetting.this.T =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-59956.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="18646.114" y="-59960.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MultiStringSetting.this.T =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-59945.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.Type,That] -->
<g id="node824" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-60028.8701" rx="406.6728" ry="26.7407"/>
<text text-anchor="start" x="18487.114" y="-60032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-60017.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;_\\d\\d?&#39;) =&gt; ?{def r: ?} -->
<g id="node825" class="node">
<title>String(&#39;_\\d\\d?&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-60100.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="18685.114" y="-60104.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;_\d\d?&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-60089.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Seq[scala.tools.nsc.classpath.PackageEntry] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node826" class="node">
<title>Seq[scala.tools.nsc.classpath.PackageEntry] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-60172.8701" rx="354.0212" ry="26.7407"/>
<text text-anchor="start" x="18524.114" y="-60176.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Seq[scala.tools.nsc.classpath.PackageEntry] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-60161.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- SpecializeTypes.this.global.Tree =&gt; SpecializeTypes.this.global.Type -->
<g id="node827" class="node">
<title>SpecializeTypes.this.global.Tree =&gt; SpecializeTypes.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-60244.8701" rx="282.2713" ry="26.7407"/>
<text text-anchor="start" x="18575.114" y="-60248.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SpecializeTypes.this.global.Tree =&gt; SpecializeTypes.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-60233.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeSyncAndTry.this.global.CaseDef],Product with Serializable with SyncAndTryBuilder.this.EHClause,List[SyncAndTryBuilder.this.EHClause]] -->
<g id="node828" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeSyncAndTry.this.global.CaseDef],Product with Serializable with SyncAndTryBuilder.this.EHClause,List[SyncAndTryBuilder.this.EHClause]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-60316.8701" rx="761.608" ry="26.7407"/>
<text text-anchor="start" x="18236.114" y="-60320.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeSyncAndTry.this.global.CaseDef],Product with Serializable with SyncAndTryBuilder.this.EHClause,List[SyncAndTryBuilder.this.EHClause]]</text>
<text text-anchor="middle" x="18766.614" y="-60305.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[() =&gt; Typers.this.global.gen.global.Tree],Typers.this.global.gen.global.Tree,That] -->
<g id="node829" class="node">
<title>scala.collection.generic.CanBuildFrom[List[() =&gt; Typers.this.global.gen.global.Tree],Typers.this.global.gen.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-60388.8701" rx="501.1775" ry="26.7407"/>
<text text-anchor="start" x="18420.114" y="-60392.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[() =&gt; Typers.this.global.gen.global.Tree],Typers.this.global.gen.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-60377.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Namers.this.ClassForCaseCompanionAttachment] -->
<g id="node830" class="node">
<title>scala.reflect.ClassTag[Namers.this.ClassForCaseCompanionAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-60460.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="18566.614" y="-60464.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Namers.this.ClassForCaseCompanionAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-60449.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 3ms</text>
</g>
<!-- JavaScanners.this.global.javanme.ASSERTkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node831" class="node">
<title>JavaScanners.this.global.javanme.ASSERTkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-60532.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-60536.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.ASSERTkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-60521.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Char(&#39;$&#39;) =&gt; String -->
<g id="node832" class="node">
<title>Char(&#39;$&#39;) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-60604.8701" rx="84.7059" ry="26.7407"/>
<text text-anchor="start" x="18714.614" y="-60608.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Char(&#39;$&#39;) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-60593.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def takeRight: ?} -->
<g id="node833" class="node">
<title>String =&gt; ?{def takeRight: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-60676.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="18684.614" y="-60680.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def takeRight: ?}</text>
<text text-anchor="middle" x="18766.614" y="-60665.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- TypeAdaptingTransformer.this.global.gen.global.RefTree =&gt; ?{def APPLY: ?} -->
<g id="node834" class="node">
<title>TypeAdaptingTransformer.this.global.gen.global.RefTree =&gt; ?{def APPLY: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-60748.8701" rx="320.1388" ry="26.7407"/>
<text text-anchor="start" x="18548.114" y="-60752.6701" font-family="Times,serif" font-size="14.00" fill="#000000">TypeAdaptingTransformer.this.global.gen.global.RefTree =&gt; ?{def APPLY: ?}</text>
<text text-anchor="middle" x="18766.614" y="-60737.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; (Typers.this.global.Tree =&gt; Typers.this.global.Tree) -->
<g id="node835" class="node">
<title>Unit =&gt; (Typers.this.global.Tree =&gt; Typers.this.global.Tree)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-60820.8701" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="18599.114" y="-60824.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; (Typers.this.global.Tree =&gt; Typers.this.global.Tree)</text>
<text text-anchor="middle" x="18766.614" y="-60809.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- index.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node836" class="node">
<title>index.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-60892.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="18692.614" y="-60896.6701" font-family="Times,serif" font-size="14.00" fill="#000000">index.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-60881.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],Infer.this.global.WildcardType.type,List[Infer.this.global.Type]] -->
<g id="node837" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],Infer.this.global.WildcardType.type,List[Infer.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-60964.8701" rx="533.7313" ry="26.7407"/>
<text text-anchor="start" x="18397.114" y="-60968.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],Infer.this.global.WildcardType.type,List[Infer.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-60953.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[String] =&gt; Array[scala.tools.asm.Label] -->
<g id="node838" class="node">
<title>Array[String] =&gt; Array[scala.tools.asm.Label]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-61036.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="18638.614" y="-61040.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; Array[scala.tools.asm.Label]</text>
<text text-anchor="middle" x="18766.614" y="-61025.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;case %s has case ancestor %s, but case&#45;to&#45;case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non&#45;leaf nodes.&#39;) =&gt; ?{def format: ?} -->
<g id="node839" class="node">
<title>String(&#39;case %s has case ancestor %s, but case&#45;to&#45;case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non&#45;leaf nodes.&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-61108.8701" rx="715.6841" ry="26.7407"/>
<text text-anchor="start" x="18268.614" y="-61112.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;case %s has case ancestor %s, but case&#45;to&#45;case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non&#45;leaf nodes.&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-61097.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Unit)) =&gt; Typers.this.global.Symbol -->
<g id="node840" class="node">
<title>((Nothing, Unit)) =&gt; Typers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-61180.8701" rx="197.0658" ry="26.7407"/>
<text text-anchor="start" x="18635.114" y="-61184.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit)) =&gt; Typers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-61169.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Char] =&gt; Array[Int] -->
<g id="node841" class="node">
<title>Array[Char] =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-61252.8701" rx="115.0173" ry="26.7407"/>
<text text-anchor="start" x="18693.114" y="-61256.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Char] =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-61241.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- (=&gt; List[ClassfileParser.this.symbolTable.Type]) =&gt; ?{def ::=: ?} -->
<g id="node842" class="node">
<title>(=&gt; List[ClassfileParser.this.symbolTable.Type]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-61324.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="18584.614" y="-61328.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[ClassfileParser.this.symbolTable.Type]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-61313.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;\&#39;\&#39;\\&#39;) =&gt; ?{def contains(x$1: ? &gt;: Char): Boolean} -->
<g id="node843" class="node">
<title>String(&#39;\&#39;\&#39;\\&#39;) =&gt; ?{def contains(x$1: ? &gt;: Char): Boolean}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-61396.8701" rx="227.8769" ry="26.7407"/>
<text text-anchor="start" x="18613.614" y="-61400.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;&#39;&#39;\&#39;) =&gt; ?{def contains(x$1: ? &gt;: Char): Boolean}</text>
<text text-anchor="middle" x="18766.614" y="-61385.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Unit)) =&gt; Printers.this.Name -->
<g id="node844" class="node">
<title>(=&gt; (Nothing, Unit)) =&gt; Printers.this.Name</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-61468.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="18646.114" y="-61472.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit)) =&gt; Printers.this.Name</text>
<text text-anchor="middle" x="18766.614" y="-61457.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Global.this.specializeTypes.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node845" class="node">
<title>Global.this.specializeTypes.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-61540.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="18632.614" y="-61544.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.specializeTypes.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-61529.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Internals.this.universe.analyzer.ContextReporter -->
<g id="node846" class="node">
<title>Unit =&gt; Internals.this.universe.analyzer.ContextReporter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-61612.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="18610.614" y="-61616.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Internals.this.universe.analyzer.ContextReporter</text>
<text text-anchor="middle" x="18766.614" y="-61601.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,Option[BackendUtils.this.postProcessor.bTypes.InnerClassEntry]] =&gt; ?{def get: ?} -->
<g id="node847" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,Option[BackendUtils.this.postProcessor.bTypes.InnerClassEntry]] =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-61684.8701" rx="601.0815" ry="26.7407"/>
<text text-anchor="start" x="18349.614" y="-61688.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,Option[BackendUtils.this.postProcessor.bTypes.InnerClassEntry]] =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-61673.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- MatchTreeMaking.this.global.gen.global.RefTree =&gt; ?{def OBJ_EQ: ?} -->
<g id="node848" class="node">
<title>MatchTreeMaking.this.global.gen.global.RefTree =&gt; ?{def OBJ_EQ: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-61756.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="18566.614" y="-61760.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchTreeMaking.this.global.gen.global.RefTree =&gt; ?{def OBJ_EQ: ?}</text>
<text text-anchor="middle" x="18766.614" y="-61745.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.SHORT.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node849" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.SHORT.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-61828.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="18577.114" y="-61832.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.SHORT.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-61817.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.ArrayBuffer[MatchAnalyzer.this.Prop],MatchAnalyzer.this.Prop,That] -->
<g id="node850" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.ArrayBuffer[MatchAnalyzer.this.Prop],MatchAnalyzer.this.Prop,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-61900.8701" rx="535.0598" ry="26.7407"/>
<text text-anchor="start" x="18396.114" y="-61904.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.ArrayBuffer[MatchAnalyzer.this.Prop],MatchAnalyzer.this.Prop,That]</text>
<text text-anchor="middle" x="18766.614" y="-61889.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Typers.this.global.statistics.Counter -->
<g id="node851" class="node">
<title>((Nothing, Nothing)) =&gt; Typers.this.global.statistics.Counter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-61972.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="18599.614" y="-61976.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Typers.this.global.statistics.Counter</text>
<text text-anchor="middle" x="18766.614" y="-61961.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.gen.global.ValDef],BCodeSkelBuilder.this.global.gen.global.Symbol,That] -->
<g id="node852" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.gen.global.ValDef],BCodeSkelBuilder.this.global.gen.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-62044.8701" rx="592.611" ry="26.7407"/>
<text text-anchor="start" x="18355.614" y="-62048.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.gen.global.ValDef],BCodeSkelBuilder.this.global.gen.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-62033.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[MatchTranslation.this.global.CaseDef]],MatchTranslation.this.global.CaseDef,That] -->
<g id="node853" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[MatchTranslation.this.global.CaseDef]],MatchTranslation.this.global.CaseDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-62116.8701" rx="527.5033" ry="26.7407"/>
<text text-anchor="start" x="18401.614" y="-62120.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[MatchTranslation.this.global.CaseDef]],MatchTranslation.this.global.CaseDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-62105.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CleanUp.this.CODE.SelectStart =&gt; CleanUp.this.global.Tree -->
<g id="node854" class="node">
<title>CleanUp.this.CODE.SelectStart =&gt; CleanUp.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-62188.8701" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="18598.614" y="-62192.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CleanUp.this.CODE.SelectStart =&gt; CleanUp.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-62177.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Type,List[SpecializeTypes.this.global.Type]] -->
<g id="node855" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Type,List[SpecializeTypes.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-62260.8701" rx="610.4664" ry="26.7407"/>
<text text-anchor="start" x="18343.114" y="-62264.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Type,List[SpecializeTypes.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-62249.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.reflect.macros.contexts.Context{val universe: Macros.this.global.type}],scala.reflect.internal.util.Position,That] -->
<g id="node856" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.reflect.macros.contexts.Context{val universe: Macros.this.global.type}],scala.reflect.internal.util.Position,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-62332.8701" rx="637.2064" ry="26.7407"/>
<text text-anchor="start" x="18324.114" y="-62336.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.reflect.macros.contexts.Context{val universe: Macros.this.global.type}],scala.reflect.internal.util.Position,That]</text>
<text text-anchor="middle" x="18766.614" y="-62321.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- (=&gt; Map[Calculate.this.global.Symbol,Int]) =&gt; ?{def +=: ?} -->
<g id="node857" class="node">
<title>(=&gt; Map[Calculate.this.global.Symbol,Int]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-62404.8701" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="18598.614" y="-62408.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Map[Calculate.this.global.Symbol,Int]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-62393.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%s is param accessor? %b&#39;) =&gt; ?{def format: ?} -->
<g id="node858" class="node">
<title>String(&#39;%s is param accessor? %b&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-62476.8701" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="18612.614" y="-62480.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s is param accessor? %b&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-62465.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; ToolBoxGlobal.this.Symbol -->
<g id="node859" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; ToolBoxGlobal.this.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-62548.8701" rx="306.3546" ry="26.7407"/>
<text text-anchor="start" x="18558.114" y="-62552.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; ToolBoxGlobal.this.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-62537.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Unit =&gt; RefChecks.this.global.Type -->
<g id="node860" class="node">
<title>Unit =&gt; RefChecks.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-62620.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="18666.614" y="-62624.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; RefChecks.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-62609.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;), &#39;) =&gt; ?{def :/:: ?} -->
<g id="node861" class="node">
<title>String(&#39;), &#39;) =&gt; ?{def :/:: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-62692.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="18692.614" y="-62696.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;), &#39;) =&gt; ?{def :/:: ?}</text>
<text text-anchor="middle" x="18766.614" y="-62681.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Typers.this.global.constfold.global.Tree -->
<g id="node862" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Typers.this.global.constfold.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-62764.8701" rx="277.786" ry="26.7407"/>
<text text-anchor="start" x="18578.114" y="-62768.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Typers.this.global.constfold.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-62753.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[String],java.io.File,Array[java.io.File]] -->
<g id="node863" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[String],java.io.File,Array[java.io.File]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-62836.8701" rx="341.5652" ry="26.7407"/>
<text text-anchor="start" x="18533.114" y="-62840.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[String],java.io.File,Array[java.io.File]]</text>
<text text-anchor="middle" x="18766.614" y="-62825.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- scala.reflect.ClassTag[java.io.File] -->
<g id="node1429" class="node">
<title>scala.reflect.ClassTag[java.io.File]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-62836.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="38066.3606" y="-62840.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[java.io.File]</text>
<text text-anchor="middle" x="38161.3606" y="-62825.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[String],java.io.File,Array[java.io.File]]&#45;&gt;scala.reflect.ClassTag[java.io.File] -->
<g id="edge14" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[String],java.io.File,Array[java.io.File]]&#45;&gt;scala.reflect.ClassTag[java.io.File]</title>
<path fill="none" stroke="#000000" d="M19108.3798,-62836.8701C21552.2153,-62836.8701 36323.593,-62836.8701 38005.4613,-62836.8701"/>
<polygon fill="#000000" stroke="#000000" points="38005.4844,-62840.3702 38015.4843,-62836.8701 38005.4843,-62833.3702 38005.4844,-62840.3702"/>
</g>
<!-- scala.tools.nsc.Global.&lt;refinement&gt;.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node864" class="node">
<title>scala.tools.nsc.Global.&lt;refinement&gt;.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-62908.8701" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="18608.114" y="-62912.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.Global.&lt;refinement&gt;.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-62897.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[CompilerCommand.this.Setting],String,That] -->
<g id="node865" class="node">
<title>scala.collection.generic.CanBuildFrom[List[CompilerCommand.this.Setting],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-62980.8701" rx="359.8347" ry="26.7407"/>
<text text-anchor="start" x="18520.114" y="-62984.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[CompilerCommand.this.Setting],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-62969.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; ExplicitOuter.this.global.Symbol -->
<g id="node866" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; ExplicitOuter.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-63052.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="18596.614" y="-63056.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; ExplicitOuter.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-63041.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Int =&gt; JavaScanners.this.global.Position -->
<g id="node867" class="node">
<title>Int =&gt; JavaScanners.this.global.Position</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-63124.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="18656.114" y="-63128.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; JavaScanners.this.global.Position</text>
<text text-anchor="middle" x="18766.614" y="-63113.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Object] -->
<g id="node868" class="node">
<title>((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Object]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-63196.8701" rx="224.72" ry="26.7407"/>
<text text-anchor="start" x="18615.614" y="-63200.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Object]</text>
<text text-anchor="middle" x="18766.614" y="-63185.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[String] =&gt; Seq[String] -->
<g id="node869" class="node">
<title>Array[String] =&gt; Seq[String]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-63268.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="18686.614" y="-63272.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; Seq[String]</text>
<text text-anchor="middle" x="18766.614" y="-63257.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 2ms</text>
</g>
<!-- k.NameType =&gt; ?{def +: ?} -->
<g id="node870" class="node">
<title>k.NameType =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-63340.8701" rx="123.0732" ry="26.7407"/>
<text text-anchor="start" x="18687.614" y="-63344.6701" font-family="Times,serif" font-size="14.00" fill="#000000">k.NameType =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-63329.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.CompilationUnit -->
<g id="node871" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.CompilationUnit</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-63412.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-63416.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.CompilationUnit</text>
<text text-anchor="middle" x="18766.614" y="-63401.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; (List[Nothing], List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Symbol]) -->
<g id="node872" class="node">
<title>(=&gt; (List[Nothing], List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-63484.8701" rx="634.9638" ry="26.7407"/>
<text text-anchor="start" x="18325.614" y="-63488.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (List[Nothing], List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</text>
<text text-anchor="middle" x="18766.614" y="-63473.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Typers.this.global.statistics.Counter -->
<g id="node873" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Typers.this.global.statistics.Counter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-63556.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-63560.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Typers.this.global.statistics.Counter</text>
<text text-anchor="middle" x="18766.614" y="-63545.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.ARROWkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node874" class="node">
<title>Scanners.this.global.nme.ARROWkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-63628.8701" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="18603.114" y="-63632.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.ARROWkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-63617.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.Name -->
<g id="node875" class="node">
<title>(=&gt; (Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.Name</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-63700.8701" rx="251.0458" ry="26.7407"/>
<text text-anchor="start" x="18597.114" y="-63704.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.Name</text>
<text text-anchor="middle" x="18766.614" y="-63689.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; CleanUp.this.global.Symbol -->
<g id="node876" class="node">
<title>((Nothing, Nothing)) =&gt; CleanUp.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-63772.8701" rx="219.4064" ry="26.7407"/>
<text text-anchor="start" x="18619.614" y="-63776.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; CleanUp.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-63761.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Parsers.this.global.Symbol -->
<g id="node877" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Parsers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-63844.8701" rx="300.5408" ry="26.7407"/>
<text text-anchor="start" x="18562.114" y="-63848.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Parsers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-63833.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashSet[scala.tools.nsc.SubComponent],String,That] -->
<g id="node878" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashSet[scala.tools.nsc.SubComponent],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-63916.8701" rx="467.2952" ry="26.7407"/>
<text text-anchor="start" x="18444.114" y="-63920.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashSet[scala.tools.nsc.SubComponent],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-63905.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Array[Float] =&gt; Array[Int] -->
<g id="node879" class="node">
<title>Array[Float] =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-63988.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="18692.614" y="-63992.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Float] =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-63977.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- (=&gt; Float) =&gt; JavaScanner.this.ScanPosition -->
<g id="node880" class="node">
<title>(=&gt; Float) =&gt; JavaScanner.this.ScanPosition</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-64060.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="18643.114" y="-64064.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Float) =&gt; JavaScanner.this.ScanPosition</text>
<text text-anchor="middle" x="18766.614" y="-64049.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- call.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node881" class="node">
<title>call.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-64132.8701" rx="108.789" ry="26.7407"/>
<text text-anchor="start" x="18697.614" y="-64136.6701" font-family="Times,serif" font-size="14.00" fill="#000000">call.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-64121.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- TypeDiagnostics.this.global.AnnotationInfo =&gt; TypeDiagnostics.this.global.Type -->
<g id="node882" class="node">
<title>TypeDiagnostics.this.global.AnnotationInfo =&gt; TypeDiagnostics.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-64204.8701" rx="328.1951" ry="26.7407"/>
<text text-anchor="start" x="18542.614" y="-64208.6701" font-family="Times,serif" font-size="14.00" fill="#000000">TypeDiagnostics.this.global.AnnotationInfo =&gt; TypeDiagnostics.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-64193.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Map[BCodeSyncAndTry.this.global.Symbol,scala.tools.asm.Label] =&gt; ?{def &#45;=: ?} -->
<g id="node883" class="node">
<title>scala.collection.immutable.Map[BCodeSyncAndTry.this.global.Symbol,scala.tools.asm.Label] =&gt; ?{def &#45;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-64276.8701" rx="444.5404" ry="26.7407"/>
<text text-anchor="start" x="18460.114" y="-64280.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[BCodeSyncAndTry.this.global.Symbol,scala.tools.asm.Label] =&gt; ?{def &#45;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-64265.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Type],BTypesFromSymbols.this.global.Symbol,List[BTypesFromSymbols.this.global.Symbol]] -->
<g id="node884" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Type],BTypesFromSymbols.this.global.Symbol,List[BTypesFromSymbols.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-64348.8701" rx="688.0298" ry="26.7407"/>
<text text-anchor="start" x="18288.114" y="-64352.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Type],BTypesFromSymbols.this.global.Symbol,List[BTypesFromSymbols.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-64337.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Parsers.this.Offset =&gt; ?{def max: ?} -->
<g id="node885" class="node">
<title>Parsers.this.Offset =&gt; ?{def max: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-64420.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="18665.614" y="-64424.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Parsers.this.Offset =&gt; ?{def max: ?}</text>
<text text-anchor="middle" x="18766.614" y="-64409.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- (Int, JavaScanners.this.global.Name) &lt;:&lt; (T, U) -->
<g id="node886" class="node">
<title>(Int, JavaScanners.this.global.Name) &lt;:&lt; (T, U)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-64492.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="18634.114" y="-64496.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Int, JavaScanners.this.global.Name) &lt;:&lt; (T, U)</text>
<text text-anchor="middle" x="18766.614" y="-64481.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ContextErrors.this.global.Type =&gt; ?{def +: ?} -->
<g id="node887" class="node">
<title>ContextErrors.this.global.Type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-64564.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="18638.614" y="-64568.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ContextErrors.this.global.Type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-64553.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- consumerFrame.type =&gt; ?{def stackTop: ?} -->
<g id="node888" class="node">
<title>consumerFrame.type =&gt; ?{def stackTop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-64636.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="18644.614" y="-64640.6701" font-family="Times,serif" font-size="14.00" fill="#000000">consumerFrame.type =&gt; ?{def stackTop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-64625.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; String) =&gt; scala.reflect.io.Directory -->
<g id="node889" class="node">
<title>(=&gt; String) =&gt; scala.reflect.io.Directory</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-64708.8701" rx="168.0831" ry="26.7407"/>
<text text-anchor="start" x="18655.614" y="-64712.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; String) =&gt; scala.reflect.io.Directory</text>
<text text-anchor="middle" x="18766.614" y="-64697.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 0ms</text>
</g>
<!-- Array[scala.tools.asm.Type] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node890" class="node">
<title>Array[scala.tools.asm.Type] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-64780.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="18568.114" y="-64784.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[scala.tools.asm.Type] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-64769.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MethodSynthesis.this.global.Symbol],MethodSynthesis.this.global.Ident,List[MethodSynthesis.this.global.Tree]] -->
<g id="node891" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MethodSynthesis.this.global.Symbol],MethodSynthesis.this.global.Ident,List[MethodSynthesis.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-64852.8701" rx="620.6795" ry="26.7407"/>
<text text-anchor="start" x="18335.614" y="-64856.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MethodSynthesis.this.global.Symbol],MethodSynthesis.this.global.Ident,List[MethodSynthesis.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-64841.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def reverse: ?} -->
<g id="node892" class="node">
<title>String =&gt; ?{def reverse: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-64924.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="18691.114" y="-64928.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def reverse: ?}</text>
<text text-anchor="middle" x="18766.614" y="-64913.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.SWITCHkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node893" class="node">
<title>JavaScanners.this.global.javanme.SWITCHkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-64996.8701" rx="276.4575" ry="26.7407"/>
<text text-anchor="start" x="18579.114" y="-65000.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.SWITCHkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-64985.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTrackers.this.global.Tree],String,That] -->
<g id="node894" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTrackers.this.global.Tree],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-65068.8701" rx="466.881" ry="26.7407"/>
<text text-anchor="start" x="18444.614" y="-65072.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTrackers.this.global.Tree],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-65057.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Tree],(ContextErrors.this.global.Tree, ContextErrors.this.global.Tree),That] -->
<g id="node895" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Tree],(ContextErrors.this.global.Tree, ContextErrors.this.global.Tree),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-65140.8701" rx="576.0841" ry="26.7407"/>
<text text-anchor="start" x="18367.114" y="-65144.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Tree],(ContextErrors.this.global.Tree, ContextErrors.this.global.Tree),That]</text>
<text text-anchor="middle" x="18766.614" y="-65129.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Float -->
<g id="node896" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Float</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-65212.8701" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="18657.614" y="-65216.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Float</text>
<text text-anchor="middle" x="18766.614" y="-65201.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(MatchAnalyzer.this.Var, List[MatchAnalyzer.this.Sym])],List[scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]],That] -->
<g id="node897" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(MatchAnalyzer.this.Var, List[MatchAnalyzer.this.Sym])],List[scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-65284.8701" rx="939.9899" ry="26.7407"/>
<text text-anchor="start" x="18110.114" y="-65288.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(MatchAnalyzer.this.Var, List[MatchAnalyzer.this.Sym])],List[scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]],That]</text>
<text text-anchor="middle" x="18766.614" y="-65273.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.TRANSIENTkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node898" class="node">
<title>JavaScanners.this.global.javanme.TRANSIENTkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-65356.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="18568.114" y="-65360.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.TRANSIENTkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-65345.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.profile.ProfileCounters =&gt; ?{def +=: ?} -->
<g id="node899" class="node">
<title>scala.tools.nsc.profile.ProfileCounters =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-65428.8701" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="18615.114" y="-65432.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.profile.ProfileCounters =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-65417.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Double =&gt; ?{def formatted: ?} -->
<g id="node900" class="node">
<title>Double =&gt; ?{def formatted: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-65500.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="18680.614" y="-65504.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Double =&gt; ?{def formatted: ?}</text>
<text text-anchor="middle" x="18766.614" y="-65489.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(65536) =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node901" class="node">
<title>Int(65536) =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-65572.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-65576.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(65536) =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-65561.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.ValDef],BCodeSkelBuilder.this.global.Symbol,List[BCodeSkelBuilder.this.global.Symbol]] -->
<g id="node902" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.ValDef],BCodeSkelBuilder.this.global.Symbol,List[BCodeSkelBuilder.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-65644.8701" rx="658.1329" ry="26.7407"/>
<text text-anchor="start" x="18309.114" y="-65648.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.ValDef],BCodeSkelBuilder.this.global.Symbol,List[BCodeSkelBuilder.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-65633.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; SpecializeTypes.this.global.Tree -->
<g id="node903" class="node">
<title>(Any =&gt; Nothing) =&gt; SpecializeTypes.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-65716.8701" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="18615.114" y="-65720.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; SpecializeTypes.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-65705.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(scala.tools.asm.Type, Int)],scala.tools.asm.tree.VarInsnNode,List[scala.tools.asm.tree.AbstractInsnNode]] -->
<g id="node904" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(scala.tools.asm.Type, Int)],scala.tools.asm.tree.VarInsnNode,List[scala.tools.asm.tree.AbstractInsnNode]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-65788.8701" rx="597.5105" ry="26.7407"/>
<text text-anchor="start" x="18352.114" y="-65792.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(scala.tools.asm.Type, Int)],scala.tools.asm.tree.VarInsnNode,List[scala.tools.asm.tree.AbstractInsnNode]]</text>
<text text-anchor="middle" x="18766.614" y="-65777.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- rest.type =&gt; ?{def nonEmpty: ?} -->
<g id="node905" class="node">
<title>rest.type =&gt; ?{def nonEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-65860.8701" rx="140.0143" ry="26.7407"/>
<text text-anchor="start" x="18675.614" y="-65864.6701" font-family="Times,serif" font-size="14.00" fill="#000000">rest.type =&gt; ?{def nonEmpty: ?}</text>
<text text-anchor="middle" x="18766.614" y="-65849.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Unit, Any =&gt; Nothing)) =&gt; OfflineCompilerCommand.this.Setting =&gt; Boolean -->
<g id="node906" class="node">
<title>((Nothing, Unit, Any =&gt; Nothing)) =&gt; OfflineCompilerCommand.this.Setting =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-65932.8701" rx="364.7342" ry="26.7407"/>
<text text-anchor="start" x="18516.614" y="-65936.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit, Any =&gt; Nothing)) =&gt; OfflineCompilerCommand.this.Setting =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-65921.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Double] =&gt; Array[Int] -->
<g id="node907" class="node">
<title>Array[Double] =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-66004.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="18686.614" y="-66008.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Double] =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-65993.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(scala.tools.nsc.io.AbstractFile, scala.tools.nsc.io.AbstractFile)],scala.reflect.io.AbstractFile,List[scala.tools.nsc.io.AbstractFile]] -->
<g id="node908" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(scala.tools.nsc.io.AbstractFile, scala.tools.nsc.io.AbstractFile)],scala.reflect.io.AbstractFile,List[scala.tools.nsc.io.AbstractFile]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-66076.8701" rx="680.8877" ry="26.7407"/>
<text text-anchor="start" x="18293.114" y="-66080.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(scala.tools.nsc.io.AbstractFile, scala.tools.nsc.io.AbstractFile)],scala.reflect.io.AbstractFile,List[scala.tools.nsc.io.AbstractFile]]</text>
<text text-anchor="middle" x="18766.614" y="-66065.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],Option[MatchAnalyzer.this.CounterExample],That] -->
<g id="node909" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],Option[MatchAnalyzer.this.CounterExample],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-66148.8701" rx="537.3023" ry="26.7407"/>
<text text-anchor="start" x="18394.614" y="-66152.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],Option[MatchAnalyzer.this.CounterExample],That]</text>
<text text-anchor="middle" x="18766.614" y="-66137.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(String, String)],String,That] -->
<g id="node910" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(String, String)],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-66220.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="18566.614" y="-66224.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(String, String)],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-66209.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(String, String)],(String, String),That] -->
<g id="node911" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(String, String)],(String, String),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-66292.8701" rx="329.5235" ry="26.7407"/>
<text text-anchor="start" x="18541.614" y="-66296.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(String, String)],(String, String),That]</text>
<text text-anchor="middle" x="18766.614" y="-66281.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Infer.this.global.Type, Infer.this.global.Symbol, Infer.this.global.KindErrors)],String,List[String]] -->
<g id="node912" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Infer.this.global.Type, Infer.this.global.Symbol, Infer.this.global.KindErrors)],String,List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-66364.8701" rx="565.8709" ry="26.7407"/>
<text text-anchor="start" x="18374.614" y="-66368.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Infer.this.global.Type, Infer.this.global.Symbol, Infer.this.global.KindErrors)],String,List[String]]</text>
<text text-anchor="middle" x="18766.614" y="-66353.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; MethodSynthesis.this.global.Type -->
<g id="node913" class="node">
<title>Unit =&gt; MethodSynthesis.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-66436.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="18649.114" y="-66440.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; MethodSynthesis.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-66425.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.reflect.api.Universe#TypeTag[java.util.Formattable] -->
<g id="node914" class="node">
<title>scala.reflect.api.Universe#TypeTag[java.util.Formattable]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-66508.8701" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="18608.114" y="-66512.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.api.Universe#TypeTag[java.util.Formattable]</text>
<text text-anchor="middle" x="18766.614" y="-66497.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;pre&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node915" class="node">
<title>String(&#39;pre&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-66580.8701" rx="120.8306" ry="26.7407"/>
<text text-anchor="start" x="18689.114" y="-66584.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;pre&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-66569.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[StdAttachments.this.MacroExpanderAttachment] -->
<g id="node916" class="node">
<title>scala.reflect.ClassTag[StdAttachments.this.MacroExpanderAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-66652.8701" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="18569.614" y="-66656.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[StdAttachments.this.MacroExpanderAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-66641.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 4ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; SuperAccessors.this.global.Symbol -->
<g id="node917" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; SuperAccessors.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-66724.8701" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="18590.614" y="-66728.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; SuperAccessors.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-66713.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Tree -->
<g id="node918" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-66796.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="18598.114" y="-66800.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-66785.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[(String, String)],String,Set[String]] -->
<g id="node919" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[(String, String)],String,Set[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-66868.8701" rx="422.6998" ry="26.7407"/>
<text text-anchor="start" x="18475.614" y="-66872.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[(String, String)],String,Set[String]]</text>
<text text-anchor="middle" x="18766.614" y="-66857.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;[&#39;) =&gt; ?{def *: ?} -->
<g id="node920" class="node">
<title>String(&#39;[&#39;) =&gt; ?{def *: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-66940.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-66944.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;[&#39;) =&gt; ?{def *: ?}</text>
<text text-anchor="middle" x="18766.614" y="-66929.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(scala.tools.asm.Type, Int)],scala.tools.asm.tree.AbstractInsnNode,That] -->
<g id="node921" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(scala.tools.asm.Type, Int)],scala.tools.asm.tree.AbstractInsnNode,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-67012.8701" rx="463.7241" ry="26.7407"/>
<text text-anchor="start" x="18446.614" y="-67016.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(scala.tools.asm.Type, Int)],scala.tools.asm.tree.AbstractInsnNode,That]</text>
<text text-anchor="middle" x="18766.614" y="-67001.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[Mixin.this.global.Symbol]) =&gt; ?{def +=: ?} -->
<g id="node922" class="node">
<title>(=&gt; scala.collection.immutable.Set[Mixin.this.global.Symbol]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-67084.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="18545.614" y="-67088.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[Mixin.this.global.Symbol]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-67073.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[ContextErrors.this.global.Symbol]],String,That] -->
<g id="node923" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[ContextErrors.this.global.Symbol]],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-67156.8701" rx="387.489" ry="26.7407"/>
<text text-anchor="start" x="18500.614" y="-67160.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[ContextErrors.this.global.Symbol]],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-67145.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cbuf.type =&gt; ?{def slice: ?} -->
<g id="node924" class="node">
<title>cbuf.type =&gt; ?{def slice: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-67228.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="18689.614" y="-67232.6701" font-family="Times,serif" font-size="14.00" fill="#000000">cbuf.type =&gt; ?{def slice: ?}</text>
<text text-anchor="middle" x="18766.614" y="-67217.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Symbol],(BCodeHelpers.this.global.Symbol, BCodeHelpers.this.global.Symbol, BCodeHelpers.this.global.Symbol),That] -->
<g id="node925" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Symbol],(BCodeHelpers.this.global.Symbol, BCodeHelpers.this.global.Symbol, BCodeHelpers.this.global.Symbol),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-67300.8701" rx="758.0369" ry="26.7407"/>
<text text-anchor="start" x="18238.614" y="-67304.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Symbol],(BCodeHelpers.this.global.Symbol, BCodeHelpers.this.global.Symbol, BCodeHelpers.this.global.Symbol),That]</text>
<text text-anchor="middle" x="18766.614" y="-67289.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Map[SuperAccessors.this.global.Symbol,SuperAccessors.this.global.analyzer.Typer]) =&gt; ?{def &#45;=: ?} -->
<g id="node926" class="node">
<title>(=&gt; scala.collection.immutable.Map[SuperAccessors.this.global.Symbol,SuperAccessors.this.global.analyzer.Typer]) =&gt; ?{def &#45;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-67372.8701" rx="531.9887" ry="26.7407"/>
<text text-anchor="start" x="18398.614" y="-67376.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Map[SuperAccessors.this.global.Symbol,SuperAccessors.this.global.analyzer.Typer]) =&gt; ?{def &#45;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-67361.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Evals.this.evalMirror.type =&gt; ?{def mkToolBox: ?} -->
<g id="node927" class="node">
<title>Evals.this.evalMirror.type =&gt; ?{def mkToolBox: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-67444.8701" rx="214.9209" ry="26.7407"/>
<text text-anchor="start" x="18622.614" y="-67448.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Evals.this.evalMirror.type =&gt; ?{def mkToolBox: ?}</text>
<text text-anchor="middle" x="18766.614" y="-67433.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 6ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Parsers.this.Offset -->
<g id="node928" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Parsers.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-67516.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-67520.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Parsers.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-67505.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 0ms</text>
</g>
<!-- String(&#39;scala.collection.immutable.&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node929" class="node">
<title>String(&#39;scala.collection.immutable.&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-67588.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-67592.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;scala.collection.immutable.&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-67577.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (scala.tools.asm.tree.LabelNode, scala.tools.asm.tree.LabelNode) &lt;:&lt; (scala.tools.asm.tree.LabelNode, scala.tools.asm.tree.LabelNode) -->
<g id="node930" class="node">
<title>(scala.tools.asm.tree.LabelNode, scala.tools.asm.tree.LabelNode) &lt;:&lt; (scala.tools.asm.tree.LabelNode, scala.tools.asm.tree.LabelNode)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-67660.8701" rx="538.2165" ry="26.7407"/>
<text text-anchor="start" x="18394.114" y="-67664.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(scala.tools.asm.tree.LabelNode, scala.tools.asm.tree.LabelNode) &lt;:&lt; (scala.tools.asm.tree.LabelNode, scala.tools.asm.tree.LabelNode)</text>
<text text-anchor="middle" x="18766.614" y="-67649.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[scala.reflect.io.AbstractFile],scala.tools.nsc.classpath.PackageEntryImpl,Seq[scala.tools.nsc.classpath.PackageEntry]] -->
<g id="node931" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[scala.reflect.io.AbstractFile],scala.tools.nsc.classpath.PackageEntryImpl,Seq[scala.tools.nsc.classpath.PackageEntry]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-67732.8701" rx="637.6207" ry="26.7407"/>
<text text-anchor="start" x="18323.614" y="-67736.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[scala.reflect.io.AbstractFile],scala.tools.nsc.classpath.PackageEntryImpl,Seq[scala.tools.nsc.classpath.PackageEntry]]</text>
<text text-anchor="middle" x="18766.614" y="-67721.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; scala.sys.process.ProcessIO -->
<g id="node932" class="node">
<title>Unit =&gt; scala.sys.process.ProcessIO</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-67804.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="18666.614" y="-67808.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; scala.sys.process.ProcessIO</text>
<text text-anchor="middle" x="18766.614" y="-67793.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MethodSynthesis.this.global.CaseDef],MethodSynthesis.this.global.CaseDef,That] -->
<g id="node933" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MethodSynthesis.this.global.CaseDef],MethodSynthesis.this.global.CaseDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-67876.8701" rx="503.4201" ry="26.7407"/>
<text text-anchor="start" x="18418.614" y="-67880.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MethodSynthesis.this.global.CaseDef],MethodSynthesis.this.global.CaseDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-67865.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Throwable -->
<g id="node934" class="node">
<title>Unit =&gt; Throwable</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-67948.8701" rx="86.9483" ry="26.7407"/>
<text text-anchor="start" x="18713.114" y="-67952.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Throwable</text>
<text text-anchor="middle" x="18766.614" y="-67937.6701" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 67ms</text>
</g>
<!-- java.util.jar.Attributes.Name.MAIN_CLASS.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node935" class="node">
<title>java.util.jar.Attributes.Name.MAIN_CLASS.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-68020.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="18584.614" y="-68024.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.jar.Attributes.Name.MAIN_CLASS.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-68009.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; TailCalls.this.global.Symbol -->
<g id="node936" class="node">
<title>((Nothing, Nothing)) =&gt; TailCalls.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-68092.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-68096.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; TailCalls.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-68081.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Namers.this.global.TypeDef],Namers.this.global.TypeDef,List[Namers.this.global.TypeDef]] -->
<g id="node937" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Namers.this.global.TypeDef],Namers.this.global.TypeDef,List[Namers.this.global.TypeDef]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-68164.8701" rx="545.7729" ry="26.7407"/>
<text text-anchor="start" x="18388.614" y="-68168.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Namers.this.global.TypeDef],Namers.this.global.TypeDef,List[Namers.this.global.TypeDef]]</text>
<text text-anchor="middle" x="18766.614" y="-68153.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Namers.this.global.Symbol],Namers.this.global.Symbol,That] -->
<g id="node938" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Namers.this.global.Symbol],Namers.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-68236.8701" rx="424.9424" ry="26.7407"/>
<text text-anchor="start" x="18474.114" y="-68240.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Namers.this.global.Symbol],Namers.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-68225.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$4.type =&gt; ?{def toImplicitCandidate: ?} -->
<g id="node939" class="node">
<title>x$4.type =&gt; ?{def toImplicitCandidate: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-68308.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="18649.114" y="-68312.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$4.type =&gt; ?{def toImplicitCandidate: ?}</text>
<text text-anchor="middle" x="18766.614" y="-68297.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; java.io.FileFilter -->
<g id="node940" class="node">
<title>(=&gt; Unit) =&gt; java.io.FileFilter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-68380.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-68384.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; java.io.FileFilter</text>
<text text-anchor="middle" x="18766.614" y="-68369.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;New session: total memory = %s, max memory = %s, free memory = %s&#39;) =&gt; ?{def format: ?} -->
<g id="node941" class="node">
<title>String(&#39;New session: total memory = %s, max memory = %s, free memory = %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-68452.8701" rx="415.1434" ry="26.7407"/>
<text text-anchor="start" x="18481.114" y="-68456.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;New session: total memory = %s, max memory = %s, free memory = %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-68441.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; MatchOptimization.this.global.Tree -->
<g id="node942" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; MatchOptimization.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-68524.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-68528.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; MatchOptimization.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-68513.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Global.this.tailCalls.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node943" class="node">
<title>Global.this.tailCalls.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-68596.8701" rx="171.6541" ry="26.7407"/>
<text text-anchor="start" x="18653.114" y="-68600.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.tailCalls.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-68585.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Symbol -->
<g id="node944" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-68668.8701" rx="298.2982" ry="26.7407"/>
<text text-anchor="start" x="18563.614" y="-68672.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-68657.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- closureInit.lambdaMetaFactoryCall.indy.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node945" class="node">
<title>closureInit.lambdaMetaFactoryCall.indy.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-68740.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="18596.614" y="-68744.6701" font-family="Times,serif" font-size="14.00" fill="#000000">closureInit.lambdaMetaFactoryCall.indy.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-68729.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],String,That] -->
<g id="node946" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-68812.8701" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="18544.114" y="-68816.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-68801.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node947" class="node">
<title>x.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-68884.8701" rx="99.9045" ry="26.7407"/>
<text text-anchor="start" x="18704.114" y="-68888.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-68873.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; ExplicitOuter.this.global.Symbol -->
<g id="node948" class="node">
<title>((Nothing, Nothing)) =&gt; ExplicitOuter.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-68956.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="18607.114" y="-68960.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; ExplicitOuter.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-68945.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],scala.tools.nsc.util.ClassPath,List[scala.tools.nsc.util.ClassPath]] -->
<g id="node949" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],scala.tools.nsc.util.ClassPath,List[scala.tools.nsc.util.ClassPath]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-69028.8701" rx="462.3957" ry="26.7407"/>
<text text-anchor="start" x="18447.614" y="-69032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],scala.tools.nsc.util.ClassPath,List[scala.tools.nsc.util.ClassPath]]</text>
<text text-anchor="middle" x="18766.614" y="-69017.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- what.type =&gt; ?{def +: ?} -->
<g id="node950" class="node">
<title>what.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-69100.8701" rx="110.1176" ry="26.7407"/>
<text text-anchor="start" x="18696.614" y="-69104.6701" font-family="Times,serif" font-size="14.00" fill="#000000">what.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-69089.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[Typers.this.global.Symbol]) =&gt; ?{def ++=: ?} -->
<g id="node951" class="node">
<title>(=&gt; scala.collection.immutable.Set[Typers.this.global.Symbol]) =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-69172.8701" rx="332.1805" ry="26.7407"/>
<text text-anchor="start" x="18539.614" y="-69176.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[Typers.this.global.Symbol]) =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-69161.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Boolean =&gt; ?{def |=: ?} -->
<g id="node952" class="node">
<title>Boolean =&gt; ?{def |=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-69244.8701" rx="106.5467" ry="26.7407"/>
<text text-anchor="start" x="18699.114" y="-69248.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean =&gt; ?{def |=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-69233.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.SEALEDkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node953" class="node">
<title>Scanners.this.global.nme.SEALEDkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-69316.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="18602.614" y="-69320.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.SEALEDkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-69305.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.AnnotationInfo],BTypesFromSymbols.this.global.Type,That] -->
<g id="node954" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.AnnotationInfo],BTypesFromSymbols.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-69388.8701" rx="552.0009" ry="26.7407"/>
<text text-anchor="start" x="18384.114" y="-69392.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.AnnotationInfo],BTypesFromSymbols.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-69377.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (BCodeSkelBuilder.this.global.Symbol, BCodeSkelBuilder.this.global.LabelDef) &lt;:&lt; (BCodeSkelBuilder.this.global.Symbol, BCodeSkelBuilder.this.global.LabelDef) -->
<g id="node955" class="node">
<title>(BCodeSkelBuilder.this.global.Symbol, BCodeSkelBuilder.this.global.LabelDef) &lt;:&lt; (BCodeSkelBuilder.this.global.Symbol, BCodeSkelBuilder.this.global.LabelDef)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-69460.8701" rx="658.1329" ry="26.7407"/>
<text text-anchor="start" x="18309.114" y="-69464.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(BCodeSkelBuilder.this.global.Symbol, BCodeSkelBuilder.this.global.LabelDef) &lt;:&lt; (BCodeSkelBuilder.this.global.Symbol, BCodeSkelBuilder.this.global.LabelDef)</text>
<text text-anchor="middle" x="18766.614" y="-69449.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Boolean =&gt; ?{def &amp;=: ?} -->
<g id="node956" class="node">
<title>Boolean =&gt; ?{def &amp;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-69532.8701" rx="112.36" ry="26.7407"/>
<text text-anchor="start" x="18695.114" y="-69536.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean =&gt; ?{def &amp;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-69521.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; Typers.this.global.Tree) =&gt; Typers.this.global.Type -->
<g id="node957" class="node">
<title>(=&gt; Typers.this.global.Tree) =&gt; Typers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-69604.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-69608.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Typers.this.global.Tree) =&gt; Typers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-69593.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; Array[BCodeBodyBuilder.this.bTypes.BType]) =&gt; Array[scala.tools.asm.Label] -->
<g id="node958" class="node">
<title>(=&gt; Array[BCodeBodyBuilder.this.bTypes.BType]) =&gt; Array[scala.tools.asm.Label]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-69676.8701" rx="341.5652" ry="26.7407"/>
<text text-anchor="start" x="18533.114" y="-69680.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[BCodeBodyBuilder.this.bTypes.BType]) =&gt; Array[scala.tools.asm.Label]</text>
<text text-anchor="middle" x="18766.614" y="-69665.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;lt&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node959" class="node">
<title>String(&#39;lt&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-69748.8701" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="18694.114" y="-69752.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;lt&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-69737.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],(Typers.this.global.TermName, Typers.this.global.Tree),That] -->
<g id="node960" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],(Typers.this.global.TermName, Typers.this.global.Tree),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-69820.8701" rx="520.3612" ry="26.7407"/>
<text text-anchor="start" x="18406.614" y="-69824.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],(Typers.this.global.TermName, Typers.this.global.Tree),That]</text>
<text text-anchor="middle" x="18766.614" y="-69809.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;\n &#160;&#160;&#160;|_@@PROGRAM@@()\n &#160;&#160;&#160;|{\n &#160;&#160;&#160;| &#160;local cur opts base\n &#160;&#160;&#160;| &#160;COMPREPLY=()\n &#160;&#160;&#160;| &#160;cur=\&#39;${COMP_WORDS[COMP_CWORD]}\&#39;\n &#160;&#160;&#160;| &#160;opts=\&#39;@@ALLOPTIONS@@\&#39;\n &#160;&#160;&#160;|\n &#160;&#160;&#160;| &#160;COMPREPLY=($(compgen &#45;W \&#39;${opts}\&#39; &#45;&#45; ${cur}))\n &#160;&#160;&#160;| &#160;_filedir\n &#160;&#160;&#160;| &#160;return 0\n &#160;&#160;&#160;|} &amp;&amp; complete &#45;F _@@PROGRAM@@ @@PROGRAM@@\n &#160;&#39;) =&gt; ?{def stripMargin: ?} -->
<g id="node961" class="node">
<title>String(&#39;\n &#160;&#160;&#160;|_@@PROGRAM@@()\n &#160;&#160;&#160;|{\n &#160;&#160;&#160;| &#160;local cur opts base\n &#160;&#160;&#160;| &#160;COMPREPLY=()\n &#160;&#160;&#160;| &#160;cur=\&#39;${COMP_WORDS[COMP_CWORD]}\&#39;\n &#160;&#160;&#160;| &#160;opts=\&#39;@@ALLOPTIONS@@\&#39;\n &#160;&#160;&#160;|\n &#160;&#160;&#160;| &#160;COMPREPLY=($(compgen &#45;W \&#39;${opts}\&#39; &#45;&#45; ${cur}))\n &#160;&#160;&#160;| &#160;_filedir\n &#160;&#160;&#160;| &#160;return 0\n &#160;&#160;&#160;|} &amp;&amp; complete &#45;F _@@PROGRAM@@ @@PROGRAM@@\n &#160;&#39;) =&gt; ?{def stripMargin: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-70019.8701" rx="275.1291" ry="154.2987"/>
<text text-anchor="middle" x="18766.614" y="-70113.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;</text>
<text text-anchor="middle" x="18766.614" y="-70098.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;|_@@PROGRAM@@()</text>
<text text-anchor="middle" x="18766.614" y="-70083.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;|{</text>
<text text-anchor="middle" x="18766.614" y="-70068.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;| &#160;local cur opts base</text>
<text text-anchor="middle" x="18766.614" y="-70053.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;| &#160;COMPREPLY=()</text>
<text text-anchor="middle" x="18766.614" y="-70038.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;| &#160;cur=&#39;${COMP_WORDS[COMP_CWORD]}&#39;</text>
<text text-anchor="middle" x="18766.614" y="-70023.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;| &#160;opts=&#39;@@ALLOPTIONS@@&#39;</text>
<text text-anchor="middle" x="18766.614" y="-70008.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;|</text>
<text text-anchor="middle" x="18766.614" y="-69993.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;| &#160;COMPREPLY=($(compgen &#45;W &#39;${opts}&#39; &#45;&#45; ${cur}))</text>
<text text-anchor="middle" x="18766.614" y="-69978.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;| &#160;_filedir</text>
<text text-anchor="middle" x="18766.614" y="-69963.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;| &#160;return 0</text>
<text text-anchor="middle" x="18766.614" y="-69948.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;|} &amp;&amp; complete &#45;F _@@PROGRAM@@ @@PROGRAM@@</text>
<text text-anchor="start" x="18580.114" y="-69933.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#39;) =&gt; ?{def stripMargin: ?}</text>
<text text-anchor="middle" x="18766.614" y="-69918.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;.&#39;) =&gt; ?{def *: ?} -->
<g id="node962" class="node">
<title>String(&#39;.&#39;) =&gt; ?{def *: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-70218.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-70222.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;.&#39;) =&gt; ?{def *: ?}</text>
<text text-anchor="middle" x="18766.614" y="-70207.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[DocComments.this.Symbol],(DocComments.this.Symbol, String, DocComments.this.Position),That] -->
<g id="node963" class="node">
<title>scala.collection.generic.CanBuildFrom[List[DocComments.this.Symbol],(DocComments.this.Symbol, String, DocComments.this.Position),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-70290.8701" rx="576.9983" ry="26.7407"/>
<text text-anchor="start" x="18366.614" y="-70294.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[DocComments.this.Symbol],(DocComments.this.Symbol, String, DocComments.this.Position),That]</text>
<text text-anchor="middle" x="18766.614" y="-70279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BackendUtils.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.ClassInfo] =&gt; ?{def get: ?} -->
<g id="node964" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BackendUtils.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.ClassInfo] =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-70362.8701" rx="683.5446" ry="26.7407"/>
<text text-anchor="start" x="18291.114" y="-70366.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BackendUtils.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.ClassInfo] =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-70351.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Mixin.this.global.Type],Mixin.this.global.TypeTree,That] -->
<g id="node965" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Mixin.this.global.Type],Mixin.this.global.TypeTree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-70434.8701" rx="408.9155" ry="26.7407"/>
<text text-anchor="start" x="18485.614" y="-70438.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Mixin.this.global.Type],Mixin.this.global.TypeTree,That]</text>
<text text-anchor="middle" x="18766.614" y="-70423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[(Contexts.this.global.Symbol, Contexts.this.global.Type)] =&gt; ?{def ::=: ?} -->
<g id="node966" class="node">
<title>List[(Contexts.this.global.Symbol, Contexts.this.global.Type)] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-70506.8701" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="18548.614" y="-70510.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[(Contexts.this.global.Symbol, Contexts.this.global.Type)] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-70495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;\n &#160;&#160;&#160;|&#45;&#45; Notes on option parsing &#45;&#45;\n &#160;&#160;&#160;|Boolean settings are always false unless set.\n &#160;&#160;&#160;|Where multiple values are accepted, they should be comma&#45;separated.\n &#160;&#160;&#160;| &#160;example: &#45;Xplugin:option1,option2\n &#160;&#160;&#160;|&lt;phases&gt; means one or a comma&#45;separated list of:\n &#160;&#160;&#160;| &#160;(partial) phase names, phase ids, phase id ranges, or the string \&#39;all\&#39;.\n &#160;&#160;&#160;| &#160;example: &#45;Xprint:all prints all phases.\n &#160;&#160;&#160;| &#160;example: &#45;Xprint:expl,24&#45;26 prints phases explicitouter, closelim, dce, jvm.\n &#160;&#160;&#160;| &#160;example: &#45;Xprint:&#45;4 prints only the phases up to typer.\n &#160;&#160;&#160;|\n &#160;&#39;) =&gt; ?{def stripMargin: ?} -->
<g id="node967" class="node">
<title>String(&#39;\n &#160;&#160;&#160;|&#45;&#45; Notes on option parsing &#45;&#45;\n &#160;&#160;&#160;|Boolean settings are always false unless set.\n &#160;&#160;&#160;|Where multiple values are accepted, they should be comma&#45;separated.\n &#160;&#160;&#160;| &#160;example: &#45;Xplugin:option1,option2\n &#160;&#160;&#160;|&lt;phases&gt; means one or a comma&#45;separated list of:\n &#160;&#160;&#160;| &#160;(partial) phase names, phase ids, phase id ranges, or the string \&#39;all\&#39;.\n &#160;&#160;&#160;| &#160;example: &#45;Xprint:all prints all phases.\n &#160;&#160;&#160;| &#160;example: &#45;Xprint:expl,24&#45;26 prints phases explicitouter, closelim, dce, jvm.\n &#160;&#160;&#160;| &#160;example: &#45;Xprint:&#45;4 prints only the phases up to typer.\n &#160;&#160;&#160;|\n &#160;&#39;) =&gt; ?{def stripMargin: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-70694.8701" rx="323.7099" ry="143.5854"/>
<text text-anchor="middle" x="18766.614" y="-70781.1701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;</text>
<text text-anchor="middle" x="18766.614" y="-70766.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;|&#45;&#45; Notes on option parsing &#45;&#45;</text>
<text text-anchor="middle" x="18766.614" y="-70751.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;|Boolean settings are always false unless set.</text>
<text text-anchor="middle" x="18766.614" y="-70736.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;|Where multiple values are accepted, they should be comma&#45;separated.</text>
<text text-anchor="middle" x="18766.614" y="-70721.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;| &#160;example: &#45;Xplugin:option1,option2</text>
<text text-anchor="middle" x="18766.614" y="-70706.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;|&lt;phases&gt; means one or a comma&#45;separated list of:</text>
<text text-anchor="middle" x="18766.614" y="-70691.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;| &#160;(partial) phase names, phase ids, phase id ranges, or the string &#39;all&#39;.</text>
<text text-anchor="middle" x="18766.614" y="-70676.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;| &#160;example: &#45;Xprint:all prints all phases.</text>
<text text-anchor="middle" x="18766.614" y="-70661.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;| &#160;example: &#45;Xprint:expl,24&#45;26 prints phases explicitouter, closelim, dce, jvm.</text>
<text text-anchor="middle" x="18766.614" y="-70646.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;| &#160;example: &#45;Xprint:&#45;4 prints only the phases up to typer.</text>
<text text-anchor="middle" x="18766.614" y="-70631.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;|</text>
<text text-anchor="start" x="18545.614" y="-70616.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#39;) =&gt; ?{def stripMargin: ?}</text>
<text text-anchor="middle" x="18766.614" y="-70601.1701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Validators.this.global.Symbol],String,That] -->
<g id="node968" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Validators.this.global.Symbol],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-70882.8701" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="18526.114" y="-70886.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Validators.this.global.Symbol],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-70871.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Some[SpecializeTypes.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node969" class="node">
<title>Some[SpecializeTypes.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-70954.8701" rx="349.1216" ry="26.7407"/>
<text text-anchor="start" x="18527.614" y="-70958.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Some[SpecializeTypes.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-70943.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.ValDef],Typers.this.global.ValDef,That] -->
<g id="node970" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.ValDef],Typers.this.global.ValDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-71026.8701" rx="412.9007" ry="26.7407"/>
<text text-anchor="start" x="18482.614" y="-71030.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.ValDef],Typers.this.global.ValDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-71015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Double -->
<g id="node971" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Double</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-71098.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="18641.614" y="-71102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Double</text>
<text text-anchor="middle" x="18766.614" y="-71087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; Array[Float]) =&gt; Array[Int] -->
<g id="node972" class="node">
<title>(=&gt; Array[Float]) =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-71170.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-71174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Float]) =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-71159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; MatchCodeGen.this.global.Symbol -->
<g id="node973" class="node">
<title>((Nothing, Nothing)) =&gt; MatchCodeGen.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-71242.8701" rx="246.1463" ry="26.7407"/>
<text text-anchor="start" x="18600.614" y="-71246.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; MatchCodeGen.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-71231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.Tree,To2] -->
<g id="node974" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.Tree,To2]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-71314.8701" rx="404.4302" ry="26.7407"/>
<text text-anchor="start" x="18488.614" y="-71318.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.Tree,To2]</text>
<text text-anchor="middle" x="18766.614" y="-71303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- s.type =&gt; ?{def last: ?} -->
<g id="node975" class="node">
<title>s.type =&gt; ?{def last: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-71386.8701" rx="103.4757" ry="26.7407"/>
<text text-anchor="start" x="18701.614" y="-71390.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def last: ?}</text>
<text text-anchor="middle" x="18766.614" y="-71375.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.COLONkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node976" class="node">
<title>Scanners.this.global.nme.COLONkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-71458.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="18605.614" y="-71462.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.COLONkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-71447.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[SwitchEmission.this.TreeMaker]],(MatchOptimization.this.global.Symbol, List[SwitchEmission.this.TreeMaker]),List[(MatchOptimization.this.global.Symbol, List[SwitchEmission.this.TreeMaker])]] -->
<g id="node977" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[SwitchEmission.this.TreeMaker]],(MatchOptimization.this.global.Symbol, List[SwitchEmission.this.TreeMaker]),List[(MatchOptimization.this.global.Symbol, List[SwitchEmission.this.TreeMaker])]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-71530.8701" rx="980.5143" ry="26.7407"/>
<text text-anchor="start" x="18081.114" y="-71534.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[SwitchEmission.this.TreeMaker]],(MatchOptimization.this.global.Symbol, List[SwitchEmission.this.TreeMaker]),List[(MatchOptimization.this.global.Symbol, List[SwitchEmission.this.TreeMaker])]]</text>
<text text-anchor="middle" x="18766.614" y="-71519.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; Int -->
<g id="node978" class="node">
<title>String =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-71602.8701" rx="82.0488" ry="26.7407"/>
<text text-anchor="start" x="18716.614" y="-71606.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-71591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">270 times = 16ms</text>
</g>
<!-- Int =&gt; scala.reflect.internal.util.Position -->
<g id="node979" class="node">
<title>Int =&gt; scala.reflect.internal.util.Position</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-71674.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="18656.614" y="-71678.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; scala.reflect.internal.util.Position</text>
<text text-anchor="middle" x="18766.614" y="-71663.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- JavaScanners.this.global.javanme.FINALLYkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node980" class="node">
<title>JavaScanners.this.global.javanme.FINALLYkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-71746.8701" rx="280.0286" ry="26.7407"/>
<text text-anchor="start" x="18576.614" y="-71750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.FINALLYkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-71735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Mixin.this.global.ValDef],Mixin.this.global.Ident,That] -->
<g id="node981" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Mixin.this.global.ValDef],Mixin.this.global.Ident,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-71818.8701" rx="399.5307" ry="26.7407"/>
<text text-anchor="start" x="18492.114" y="-71822.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Mixin.this.global.ValDef],Mixin.this.global.Ident,That]</text>
<text text-anchor="middle" x="18766.614" y="-71807.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.Offset =&gt; ?{def &#45;=: ?} -->
<g id="node982" class="node">
<title>Scanners.this.Offset =&gt; ?{def &#45;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-71890.8701" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="18666.114" y="-71894.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.Offset =&gt; ?{def &#45;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-71879.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%d scala and %d java source files&#39;) =&gt; ?{def format: ?} -->
<g id="node983" class="node">
<title>String(&#39;%d scala and %d java source files&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-71962.8701" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="18592.114" y="-71966.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%d scala and %d java source files&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-71951.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; JavaParsers.this.global.TypeBounds -->
<g id="node984" class="node">
<title>((Nothing, Nothing)) =&gt; JavaParsers.this.global.TypeBounds</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-72034.8701" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="18599.114" y="-72038.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; JavaParsers.this.global.TypeBounds</text>
<text text-anchor="middle" x="18766.614" y="-72023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;Text&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType -->
<g id="node985" class="node">
<title>String(&#39;Text&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-72106.8701" rx="347.7931" ry="26.7407"/>
<text text-anchor="start" x="18528.614" y="-72110.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Text&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</text>
<text text-anchor="middle" x="18766.614" y="-72095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Stream[ExtensionMethods.this.global.TermName] =&gt; ?{def #::: ?} -->
<g id="node986" class="node">
<title>scala.collection.immutable.Stream[ExtensionMethods.this.global.TermName] =&gt; ?{def #::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-72178.8701" rx="379.9328" ry="26.7407"/>
<text text-anchor="start" x="18506.114" y="-72182.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Stream[ExtensionMethods.this.global.TermName] =&gt; ?{def #::: ?}</text>
<text text-anchor="middle" x="18766.614" y="-72167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Macros.this.global.Tree -->
<g id="node987" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Macros.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-72250.8701" rx="252.3743" ry="26.7407"/>
<text text-anchor="start" x="18596.114" y="-72254.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Macros.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-72239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; List[SpecializeTypes.this.global.Type]) =&gt; ?{def ::=: ?} -->
<g id="node988" class="node">
<title>(=&gt; List[SpecializeTypes.this.global.Type]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-72322.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="18599.614" y="-72326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[SpecializeTypes.this.global.Type]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-72311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Infer.this.global.Symbol, Infer.this.global.Type)) =&gt; (Infer.this.global.Symbol, Infer.this.global.Type) -->
<g id="node989" class="node">
<title>((Infer.this.global.Symbol, Infer.this.global.Type)) =&gt; (Infer.this.global.Symbol, Infer.this.global.Type)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-72394.8701" rx="415.1434" ry="26.7407"/>
<text text-anchor="start" x="18481.114" y="-72398.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Infer.this.global.Symbol, Infer.this.global.Type)) =&gt; (Infer.this.global.Symbol, Infer.this.global.Type)</text>
<text text-anchor="middle" x="18766.614" y="-72383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.TypeConstraint,That] -->
<g id="node990" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.TypeConstraint,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-72466.8701" rx="434.3272" ry="26.7407"/>
<text text-anchor="start" x="18467.614" y="-72470.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.TypeConstraint,That]</text>
<text text-anchor="middle" x="18766.614" y="-72455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Infer.this.global.Tree) =&gt; Infer.this.global.Type -->
<g id="node991" class="node">
<title>(=&gt; Infer.this.global.Tree) =&gt; Infer.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-72538.8701" rx="214.9209" ry="26.7407"/>
<text text-anchor="start" x="18622.614" y="-72542.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Infer.this.global.Tree) =&gt; Infer.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-72527.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- String(&#39;proxy %s from %s has logical enclosure %s&#39;) =&gt; ?{def format: ?} -->
<g id="node992" class="node">
<title>String(&#39;proxy %s from %s has logical enclosure %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-72610.8701" rx="297.884" ry="26.7407"/>
<text text-anchor="start" x="18564.114" y="-72614.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;proxy %s from %s has logical enclosure %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-72599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[s.ChoiceSetting],String,That] -->
<g id="node993" class="node">
<title>scala.collection.generic.CanBuildFrom[List[s.ChoiceSetting],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-72682.8701" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="18565.114" y="-72686.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[s.ChoiceSetting],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-72671.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; LambdaLift.this.global.Scope) =&gt; LambdaLift.this.global.Type -->
<g id="node994" class="node">
<title>(=&gt; LambdaLift.this.global.Scope) =&gt; LambdaLift.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-72754.8701" rx="275.5435" ry="26.7407"/>
<text text-anchor="start" x="18579.614" y="-72758.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; LambdaLift.this.global.Scope) =&gt; LambdaLift.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-72743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; List[Implicits.this.global.Type] -->
<g id="node995" class="node">
<title>((Nothing, Nothing)) =&gt; List[Implicits.this.global.Type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-72826.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-72830.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; List[Implicits.this.global.Type]</text>
<text text-anchor="middle" x="18766.614" y="-72815.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; SpecializeTypes.this.global.Tree -->
<g id="node996" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; SpecializeTypes.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-72898.8701" rx="239.9186" ry="26.7407"/>
<text text-anchor="start" x="18605.114" y="-72902.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; SpecializeTypes.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-72887.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Unit, Unit)) =&gt; Contexts.this.global.Name -->
<g id="node997" class="node">
<title>(=&gt; (Nothing, Unit, Unit)) =&gt; Contexts.this.global.Name</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-72970.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-72974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit, Unit)) =&gt; Contexts.this.global.Name</text>
<text text-anchor="middle" x="18766.614" y="-72959.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Typers.this.global.Tree, Typers.this.global.Type)) =&gt; (A1, A2) -->
<g id="node998" class="node">
<title>((Typers.this.global.Tree, Typers.this.global.Type)) =&gt; (A1, A2)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-73042.8701" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="18588.614" y="-73046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Typers.this.global.Tree, Typers.this.global.Type)) =&gt; (A1, A2)</text>
<text text-anchor="middle" x="18766.614" y="-73031.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Global.this.refChecks.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node999" class="node">
<title>Global.this.refChecks.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-73114.8701" rx="178.7961" ry="26.7407"/>
<text text-anchor="start" x="18648.114" y="-73118.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.refChecks.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-73103.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- condSym.type =&gt; ?{def ===: ?} -->
<g id="node1000" class="node">
<title>condSym.type =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-73186.8701" rx="140.0143" ry="26.7407"/>
<text text-anchor="start" x="18675.614" y="-73190.6701" font-family="Times,serif" font-size="14.00" fill="#000000">condSym.type =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="18766.614" y="-73175.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.transform.UnCurry.UnCurryTransformer.dependentParamTypeErasure.ParamTransform],UnCurry.this.global.ValDef,That] -->
<g id="node1001" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.transform.UnCurry.UnCurryTransformer.dependentParamTypeErasure.ParamTransform],UnCurry.this.global.ValDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-73258.8701" rx="721.912" ry="26.7407"/>
<text text-anchor="start" x="18264.114" y="-73262.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.transform.UnCurry.UnCurryTransformer.dependentParamTypeErasure.ParamTransform],UnCurry.this.global.ValDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-73247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Array[Byte] -->
<g id="node1002" class="node">
<title>((Nothing, Nothing)) =&gt; Array[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-73330.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="18664.114" y="-73334.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Array[Byte]</text>
<text text-anchor="middle" x="18766.614" y="-73319.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Int(43) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1003" class="node">
<title>Int(43) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-73402.8701" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="18702.114" y="-73406.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(43) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-73391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[TypeDiagnostics.this.global.Symbol] =&gt; TypeDiagnostics.this.global.Type -->
<g id="node1004" class="node">
<title>List[TypeDiagnostics.this.global.Symbol] =&gt; TypeDiagnostics.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-73474.8701" rx="320.1388" ry="26.7407"/>
<text text-anchor="start" x="18548.114" y="-73478.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[TypeDiagnostics.this.global.Symbol] =&gt; TypeDiagnostics.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-73463.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- clauses.type =&gt; ?{def exists: ?} -->
<g id="node1005" class="node">
<title>clauses.type =&gt; ?{def exists: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-73546.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="18679.114" y="-73550.6701" font-family="Times,serif" font-size="14.00" fill="#000000">clauses.type =&gt; ?{def exists: ?}</text>
<text text-anchor="middle" x="18766.614" y="-73535.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Type],BCodeHelpers.this.bTypes.BType,List[BCodeHelpers.this.bTypes.BType]] -->
<g id="node1006" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Type],BCodeHelpers.this.bTypes.BType,List[BCodeHelpers.this.bTypes.BType]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-73618.8701" rx="601.9958" ry="26.7407"/>
<text text-anchor="start" x="18349.114" y="-73622.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.Type],BCodeHelpers.this.bTypes.BType,List[BCodeHelpers.this.bTypes.BType]]</text>
<text text-anchor="middle" x="18766.614" y="-73607.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$7.type =&gt; ?{def isDigit: ?} -->
<g id="node1007" class="node">
<title>x$7.type =&gt; ?{def isDigit: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-73690.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="18685.114" y="-73694.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$7.type =&gt; ?{def isDigit: ?}</text>
<text text-anchor="middle" x="18766.614" y="-73679.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(scala.reflect.io.File, scala.util.Try[scala.tools.nsc.plugins.PluginDescription])],scala.util.Success[(scala.tools.nsc.plugins.PluginDescription, scala.reflect.internal.util.ScalaClassLoader)],That] -->
<g id="node1008" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(scala.reflect.io.File, scala.util.Try[scala.tools.nsc.plugins.PluginDescription])],scala.util.Success[(scala.tools.nsc.plugins.PluginDescription, scala.reflect.internal.util.ScalaClassLoader)],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-73762.8701" rx="922.1345" ry="26.7407"/>
<text text-anchor="start" x="18122.614" y="-73766.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(scala.reflect.io.File, scala.util.Try[scala.tools.nsc.plugins.PluginDescription])],scala.util.Success[(scala.tools.nsc.plugins.PluginDescription, scala.reflect.internal.util.ScalaClassLoader)],That]</text>
<text text-anchor="middle" x="18766.614" y="-73751.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BTypesFromSymbols.this.ClassBType] =&gt; ?{def get: ?} -->
<g id="node1009" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BTypesFromSymbols.this.ClassBType] =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-73834.8701" rx="499.4349" ry="26.7407"/>
<text text-anchor="start" x="18421.614" y="-73838.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BTypesFromSymbols.this.ClassBType] =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-73823.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- symDefs.type =&gt; ?{def map: ?} -->
<g id="node1010" class="node">
<title>symDefs.type =&gt; ?{def map: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-73906.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-73910.6701" font-family="Times,serif" font-size="14.00" fill="#000000">symDefs.type =&gt; ?{def map: ?}</text>
<text text-anchor="middle" x="18766.614" y="-73895.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Array[Float] -->
<g id="node1011" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Array[Float]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-73978.8701" rx="171.6541" ry="26.7407"/>
<text text-anchor="start" x="18653.114" y="-73982.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Array[Float]</text>
<text text-anchor="middle" x="18766.614" y="-73967.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Delambdafy.this.LambdaMetaFactoryCapable] -->
<g id="node1012" class="node">
<title>scala.reflect.ClassTag[Delambdafy.this.LambdaMetaFactoryCapable]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-74050.8701" rx="281.357" ry="26.7407"/>
<text text-anchor="start" x="18575.614" y="-74054.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Delambdafy.this.LambdaMetaFactoryCapable]</text>
<text text-anchor="middle" x="18766.614" y="-74039.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Namers.this.global.TypeDef],Namers.this.global.TypeName,That] -->
<g id="node1013" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Namers.this.global.TypeDef],Namers.this.global.TypeName,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-74122.8701" rx="441.4694" ry="26.7407"/>
<text text-anchor="start" x="18462.614" y="-74126.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Namers.this.global.TypeDef],Namers.this.global.TypeName,That]</text>
<text text-anchor="middle" x="18766.614" y="-74111.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- owner.type =&gt; ?{def +: ?} -->
<g id="node1014" class="node">
<title>owner.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-74194.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="18692.614" y="-74198.6701" font-family="Times,serif" font-size="14.00" fill="#000000">owner.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-74183.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.DefDef,That] -->
<g id="node1015" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.DefDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-74266.8701" rx="487.8074" ry="26.7407"/>
<text text-anchor="start" x="18429.614" y="-74270.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.DefDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-74255.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- indy.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1016" class="node">
<title>indy.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-74338.8701" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="18695.614" y="-74342.6701" font-family="Times,serif" font-size="14.00" fill="#000000">indy.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-74327.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%s is no name&#39;) =&gt; ?{def format: ?} -->
<g id="node1017" class="node">
<title>String(&#39;%s is no name&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-74410.8701" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="18645.114" y="-74414.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s is no name&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-74399.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[TypeAdaptingTransformer.this.global.specializeTypes.SpecializedSuperConstructorCallArgument.type] -->
<g id="node1018" class="node">
<title>scala.reflect.ClassTag[TypeAdaptingTransformer.this.global.specializeTypes.SpecializedSuperConstructorCallArgument.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-74482.8701" rx="500.7632" ry="26.7407"/>
<text text-anchor="start" x="18420.614" y="-74486.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[TypeAdaptingTransformer.this.global.specializeTypes.SpecializedSuperConstructorCallArgument.type]</text>
<text text-anchor="middle" x="18766.614" y="-74471.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; scala.tools.nsc.Settings -->
<g id="node1019" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; scala.tools.nsc.Settings</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-74554.8701" rx="212.6784" ry="26.7407"/>
<text text-anchor="start" x="18624.114" y="-74558.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; scala.tools.nsc.Settings</text>
<text text-anchor="middle" x="18766.614" y="-74543.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreesAndTypesDomain.this.Sym],(TreesAndTypesDomain.this.Sym, List[TreesAndTypesDomain.this.Sym], List[TreesAndTypesDomain.this.Sym]),List[(TreesAndTypesDomain.this.Sym, List[TreesAndTypesDomain.this.Sym], List[TreesAndTypesDomain.this.Sym])]] -->
<g id="node1020" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreesAndTypesDomain.this.Sym],(TreesAndTypesDomain.this.Sym, List[TreesAndTypesDomain.this.Sym], List[TreesAndTypesDomain.this.Sym]),List[(TreesAndTypesDomain.this.Sym, List[TreesAndTypesDomain.this.Sym], List[TreesAndTypesDomain.this.Sym])]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-74626.8701" rx="1240.9448" ry="26.7407"/>
<text text-anchor="start" x="17897.114" y="-74630.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreesAndTypesDomain.this.Sym],(TreesAndTypesDomain.this.Sym, List[TreesAndTypesDomain.this.Sym], List[TreesAndTypesDomain.this.Sym]),List[(TreesAndTypesDomain.this.Sym, List[TreesAndTypesDomain.this.Sym], List[TreesAndTypesDomain.this.Sym])]]</text>
<text text-anchor="middle" x="18766.614" y="-74615.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.CLASSkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1021" class="node">
<title>JavaScanners.this.global.javanme.CLASSkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-74698.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="18584.614" y="-74702.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.CLASSkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-74687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.CHAR.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1022" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.CHAR.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-74770.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-74774.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.CHAR.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-74759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Double =&gt; Scanners.this.Offset -->
<g id="node1023" class="node">
<title>Double =&gt; Scanners.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-74842.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="18679.614" y="-74846.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Double =&gt; Scanners.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-74831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 1ms</text>
</g>
<!-- JavaScanners.this.global.javanme.SHORTkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1024" class="node">
<title>JavaScanners.this.global.javanme.SHORTkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-74914.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="18583.114" y="-74918.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.SHORTkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-74903.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;labeldef %s(%s) = &#39;) =&gt; ?{def format: ?} -->
<g id="node1025" class="node">
<title>String(&#39;labeldef %s(%s) = &#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-74986.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="18632.614" y="-74990.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;labeldef %s(%s) = &#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-74975.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.IMPORTkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1026" class="node">
<title>JavaScanners.this.global.javanme.IMPORTkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-75058.8701" rx="275.5435" ry="26.7407"/>
<text text-anchor="start" x="18579.614" y="-75062.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.IMPORTkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-75047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; scala.reflect.io.Directory -->
<g id="node1027" class="node">
<title>String =&gt; scala.reflect.io.Directory</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-75130.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="18670.114" y="-75134.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; scala.reflect.io.Directory</text>
<text text-anchor="middle" x="18766.614" y="-75119.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Fields.this.global.Symbol],List[Fields.this.global.Symbol],That] -->
<g id="node1028" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Fields.this.global.Symbol],List[Fields.this.global.Symbol],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-75202.8701" rx="432.0845" ry="26.7407"/>
<text text-anchor="start" x="18469.114" y="-75206.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Fields.this.global.Symbol],List[Fields.this.global.Symbol],That]</text>
<text text-anchor="middle" x="18766.614" y="-75191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Symbol -->
<g id="node1029" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-75274.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-75278.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-75263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.LinkedHashSet[ToolBoxImpl.this.frontEnd.Info],String,That] -->
<g id="node1030" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.LinkedHashSet[ToolBoxImpl.this.frontEnd.Info],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-75346.8701" rx="499.849" ry="26.7407"/>
<text text-anchor="start" x="18421.114" y="-75350.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.LinkedHashSet[ToolBoxImpl.this.frontEnd.Info],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-75335.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.asm.Type],(scala.tools.asm.Type, Int),That] -->
<g id="node1031" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.asm.Type],(scala.tools.asm.Type, Int),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-75418.8701" rx="397.2881" ry="26.7407"/>
<text text-anchor="start" x="18493.614" y="-75422.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.asm.Type],(scala.tools.asm.Type, Int),That]</text>
<text text-anchor="middle" x="18766.614" y="-75407.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.util.List[scala.tools.asm.tree.InnerClassNode] =&gt; ?{def asScala: ?} -->
<g id="node1032" class="node">
<title>java.util.List[scala.tools.asm.tree.InnerClassNode] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-75490.8701" rx="290.7418" ry="26.7407"/>
<text text-anchor="start" x="18569.114" y="-75494.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.List[scala.tools.asm.tree.InnerClassNode] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-75479.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (=&gt; List[SpecializeTypes.this.Overload]) =&gt; ?{def ::=: ?} -->
<g id="node1033" class="node">
<title>(=&gt; List[SpecializeTypes.this.Overload]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-75562.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="18607.114" y="-75566.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[SpecializeTypes.this.Overload]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-75551.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; MultiChoiceSetting.this.domain.ValueSet) =&gt; ?{def &#45;=: ?} -->
<g id="node1034" class="node">
<title>(=&gt; MultiChoiceSetting.this.domain.ValueSet) =&gt; ?{def &#45;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-75634.8701" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="18592.114" y="-75638.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; MultiChoiceSetting.this.domain.ValueSet) =&gt; ?{def &#45;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-75623.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; scala.tools.nsc.Settings -->
<g id="node1035" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; scala.tools.nsc.Settings</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-75706.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-75710.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; scala.tools.nsc.Settings</text>
<text text-anchor="middle" x="18766.614" y="-75695.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Ident],BCodeBodyBuilder.this.global.Symbol,List[BCodeBodyBuilder.this.global.Symbol]] -->
<g id="node1036" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Ident],BCodeBodyBuilder.this.global.Symbol,List[BCodeBodyBuilder.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-75778.8701" rx="661.2897" ry="26.7407"/>
<text text-anchor="start" x="18307.114" y="-75782.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Ident],BCodeBodyBuilder.this.global.Symbol,List[BCodeBodyBuilder.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-75767.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def asLines: ?} -->
<g id="node1037" class="node">
<title>String =&gt; ?{def asLines: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-75850.8701" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="18690.114" y="-75854.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def asLines: ?}</text>
<text text-anchor="middle" x="18766.614" y="-75839.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- (=&gt; List[T]) =&gt; ?{def +:=: ?} -->
<g id="node1038" class="node">
<title>(=&gt; List[T]) =&gt; ?{def +:=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-75922.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="18683.614" y="-75926.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[T]) =&gt; ?{def +:=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-75911.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(RefChecks.this.global.Symbol, List[RefChecks.this.global.Symbol])],String,That] -->
<g id="node1039" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(RefChecks.this.global.Symbol, List[RefChecks.this.global.Symbol])],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-75994.8701" rx="504.3343" ry="26.7407"/>
<text text-anchor="start" x="18418.114" y="-75998.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(RefChecks.this.global.Symbol, List[RefChecks.this.global.Symbol])],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-75983.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; TypingTransformers.this.global.analyzer.global.Symbol -->
<g id="node1040" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; TypingTransformers.this.global.analyzer.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-76066.8701" rx="340.651" ry="26.7407"/>
<text text-anchor="start" x="18533.614" y="-76070.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; TypingTransformers.this.global.analyzer.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-76055.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Fields.this.global.Scope) =&gt; Fields.this.global.Type -->
<g id="node1041" class="node">
<title>(=&gt; Fields.this.global.Scope) =&gt; Fields.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-76138.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-76142.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Fields.this.global.Scope) =&gt; Fields.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-76127.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.asm.tree.MethodNode],Inliner.this.postProcessor.inlinerHeuristics.InlineRequest,That] -->
<g id="node1042" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.asm.tree.MethodNode],Inliner.this.postProcessor.inlinerHeuristics.InlineRequest,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-76210.8701" rx="665.275" ry="26.7407"/>
<text text-anchor="start" x="18304.114" y="-76214.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.asm.tree.MethodNode],Inliner.this.postProcessor.inlinerHeuristics.InlineRequest,That]</text>
<text text-anchor="middle" x="18766.614" y="-76199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Short]) =&gt; Array[AnyRef] -->
<g id="node1043" class="node">
<title>(=&gt; Array[Short]) =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-76282.8701" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="18663.114" y="-76286.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Short]) =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-76271.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Unit =&gt; SymbolicXMLBuilder.this.global.Type -->
<g id="node1044" class="node">
<title>Unit =&gt; SymbolicXMLBuilder.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-76354.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="18634.114" y="-76358.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; SymbolicXMLBuilder.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-76343.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;typing (implicit views = %s, macros = %s): &#39;) =&gt; ?{def format: ?} -->
<g id="node1045" class="node">
<title>String(&#39;typing (implicit views = %s, macros = %s): &#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-76426.8701" rx="299.6267" ry="26.7407"/>
<text text-anchor="start" x="18562.614" y="-76430.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;typing (implicit views = %s, macros = %s): &#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-76415.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Global.this.analyzer.packageObjects.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1046" class="node">
<title>Global.this.analyzer.packageObjects.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-76498.8701" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="18608.114" y="-76502.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.analyzer.packageObjects.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-76487.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Type],ContextErrors.this.global.Type,That] -->
<g id="node1047" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Type],ContextErrors.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-76570.8701" rx="451.2683" ry="26.7407"/>
<text text-anchor="start" x="18455.614" y="-76574.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Type],ContextErrors.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-76559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; StringBuffer -->
<g id="node1048" class="node">
<title>((Nothing, Nothing)) =&gt; StringBuffer</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-76642.8701" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="18663.114" y="-76646.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; StringBuffer</text>
<text text-anchor="middle" x="18766.614" y="-76631.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.BYTE.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1049" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.BYTE.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-76714.8701" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="18581.614" y="-76718.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.BYTE.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-76703.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Printers.this.Tree],Printers.this.Tree,That] -->
<g id="node1050" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Printers.this.Tree],Printers.this.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-76786.8701" rx="345.1362" ry="26.7407"/>
<text text-anchor="start" x="18530.614" y="-76790.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Printers.this.Tree],Printers.this.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-76775.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeCheckers.this.global.Tree],String,That] -->
<g id="node1051" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeCheckers.this.global.Tree],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-76858.8701" rx="352.2784" ry="26.7407"/>
<text text-anchor="start" x="18525.614" y="-76862.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeCheckers.this.global.Tree],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-76847.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[java.lang.invoke.LambdaMetafactory] -->
<g id="node1052" class="node">
<title>scala.reflect.ClassTag[java.lang.invoke.LambdaMetafactory]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-76930.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="18599.614" y="-76934.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[java.lang.invoke.LambdaMetafactory]</text>
<text text-anchor="middle" x="18766.614" y="-76919.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashMap[(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.TypeEnv),SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.ClassDef,That] -->
<g id="node1053" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashMap[(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.TypeEnv),SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.ClassDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-77002.8701" rx="882.4385" ry="26.7407"/>
<text text-anchor="start" x="18150.614" y="-77006.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashMap[(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.TypeEnv),SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.ClassDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-76991.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Implicits.this.global.gen.global.Symbol -->
<g id="node1054" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Implicits.this.global.gen.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-77074.8701" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="18578.614" y="-77078.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Implicits.this.global.gen.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-77063.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Unit, Any =&gt; Nothing)) =&gt; (OfflineCompilerCommand.this.Setting =&gt; Boolean) -->
<g id="node1055" class="node">
<title>(=&gt; (Nothing, Unit, Any =&gt; Nothing)) =&gt; (OfflineCompilerCommand.this.Setting =&gt; Boolean)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-77146.8701" rx="385.2464" ry="26.7407"/>
<text text-anchor="start" x="18502.114" y="-77150.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit, Any =&gt; Nothing)) =&gt; (OfflineCompilerCommand.this.Setting =&gt; Boolean)</text>
<text text-anchor="middle" x="18766.614" y="-77135.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[java.nio.file.Path],java.nio.file.Path,That] -->
<g id="node1056" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[java.nio.file.Path],java.nio.file.Path,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-77218.8701" rx="343.8079" ry="26.7407"/>
<text text-anchor="start" x="18531.614" y="-77222.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[java.nio.file.Path],java.nio.file.Path,That]</text>
<text text-anchor="middle" x="18766.614" y="-77207.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SymbolTrackers.this.global.Symbol],(SymbolTrackers.this.global.Symbol, Int),That] -->
<g id="node1057" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SymbolTrackers.this.global.Symbol],(SymbolTrackers.this.global.Symbol, Int),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-77290.8701" rx="514.1333" ry="26.7407"/>
<text text-anchor="start" x="18411.114" y="-77294.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SymbolTrackers.this.global.Symbol],(SymbolTrackers.this.global.Symbol, Int),That]</text>
<text text-anchor="middle" x="18766.614" y="-77279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (SymbolTrackers.this.global.Symbol, Long) &lt;:&lt; (SymbolTrackers.this.global.Symbol, Long) -->
<g id="node1058" class="node">
<title>(SymbolTrackers.this.global.Symbol, Long) &lt;:&lt; (SymbolTrackers.this.global.Symbol, Long)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-77362.8701" rx="374.119" ry="26.7407"/>
<text text-anchor="start" x="18510.114" y="-77366.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(SymbolTrackers.this.global.Symbol, Long) &lt;:&lt; (SymbolTrackers.this.global.Symbol, Long)</text>
<text text-anchor="middle" x="18766.614" y="-77351.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;NodeBuffer&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType -->
<g id="node1059" class="node">
<title>String(&#39;NodeBuffer&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-77434.8701" rx="376.3617" ry="26.7407"/>
<text text-anchor="start" x="18508.614" y="-77438.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;NodeBuffer&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</text>
<text text-anchor="middle" x="18766.614" y="-77423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Float]) =&gt; Array[AnyRef] -->
<g id="node1060" class="node">
<title>(=&gt; Array[Float]) =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-77506.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="18664.114" y="-77510.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Float]) =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-77495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Unit =&gt; scala.io.Codec -->
<g id="node1061" class="node">
<title>Unit =&gt; scala.io.Codec</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-77578.8701" rx="101.6471" ry="26.7407"/>
<text text-anchor="start" x="18702.614" y="-77582.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; scala.io.Codec</text>
<text text-anchor="middle" x="18766.614" y="-77567.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;specialized override of %s by %s%s&#39;) =&gt; ?{def format: ?} -->
<g id="node1062" class="node">
<title>String(&#39;specialized override of %s by %s%s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-77650.8701" rx="267.0729" ry="26.7407"/>
<text text-anchor="start" x="18585.614" y="-77654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;specialized override of %s by %s%s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-77639.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Mixin.this.global.Symbol, List[Mixin.this.global.Symbol]) &lt;:&lt; (T, U) -->
<g id="node1063" class="node">
<title>(Mixin.this.global.Symbol, List[Mixin.this.global.Symbol]) &lt;:&lt; (T, U)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-77722.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="18571.114" y="-77726.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Mixin.this.global.Symbol, List[Mixin.this.global.Symbol]) &lt;:&lt; (T, U)</text>
<text text-anchor="middle" x="18766.614" y="-77711.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[java.lang.reflect.Type] =&gt; ?{def toList: ?} -->
<g id="node1064" class="node">
<title>Array[java.lang.reflect.Type] =&gt; ?{def toList: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-77794.8701" rx="202.4653" ry="26.7407"/>
<text text-anchor="start" x="18631.614" y="-77798.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[java.lang.reflect.Type] =&gt; ?{def toList: ?}</text>
<text text-anchor="middle" x="18766.614" y="-77783.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- v.type =&gt; ?{def +: ?} -->
<g id="node1065" class="node">
<title>v.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-77866.8701" rx="96.7474" ry="26.7407"/>
<text text-anchor="start" x="18706.114" y="-77870.6701" font-family="Times,serif" font-size="14.00" fill="#000000">v.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-77855.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.PUBLICkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1066" class="node">
<title>JavaScanners.this.global.javanme.PUBLICkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-77938.8701" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="18581.614" y="-77942.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.PUBLICkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-77927.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Infer.this.global.Symbol] =&gt; ?{def ::=: ?} -->
<g id="node1067" class="node">
<title>List[Infer.this.global.Symbol] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-78010.8701" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="18637.614" y="-78014.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Infer.this.global.Symbol] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-77999.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],(String, String),List[(String, String)]] -->
<g id="node1068" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],(String, String),List[(String, String)]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-78082.8701" rx="356.2637" ry="26.7407"/>
<text text-anchor="start" x="18522.614" y="-78086.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],(String, String),List[(String, String)]]</text>
<text text-anchor="middle" x="18766.614" y="-78071.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; List[Typers.this.global.Type] -->
<g id="node1069" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; List[Typers.this.global.Type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-78154.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="18607.114" y="-78158.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; List[Typers.this.global.Type]</text>
<text text-anchor="middle" x="18766.614" y="-78143.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.Symbol],ExtensionMethods.this.global.Type,That] -->
<g id="node1070" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.Symbol],ExtensionMethods.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-78226.8701" rx="497.6064" ry="26.7407"/>
<text text-anchor="start" x="18422.614" y="-78230.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.Symbol],ExtensionMethods.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-78215.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; java.util.Collection[_ &lt;: scala.tools.asm.tree.TryCatchBlockNode] -->
<g id="node1071" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; java.util.Collection[_ &lt;: scala.tools.asm.tree.TryCatchBlockNode]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-78298.8701" rx="380.3469" ry="26.7407"/>
<text text-anchor="start" x="18505.614" y="-78302.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; java.util.Collection[_ &lt;: scala.tools.asm.tree.TryCatchBlockNode]</text>
<text text-anchor="middle" x="18766.614" y="-78287.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;override case field accessor %s &#45;&gt; %s&#39;) =&gt; ?{def format: ?} -->
<g id="node1072" class="node">
<title>String(&#39;override case field accessor %s &#45;&gt; %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-78370.8701" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="18581.614" y="-78374.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;override case field accessor %s &#45;&gt; %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-78359.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[scala.tools.nsc.transform.patmat.Lit] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node1073" class="node">
<title>Option[scala.tools.nsc.transform.patmat.Lit] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-78442.8701" rx="354.0212" ry="26.7407"/>
<text text-anchor="start" x="18524.114" y="-78446.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[scala.tools.nsc.transform.patmat.Lit] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-78431.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Tree -->
<g id="node1074" class="node">
<title>((Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-78514.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-78518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-78503.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type)],SpecializeTypes.this.global.Type,List[SpecializeTypes.this.global.Type]] -->
<g id="node1075" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type)],SpecializeTypes.this.global.Type,List[SpecializeTypes.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-78586.8701" rx="750.4807" ry="26.7407"/>
<text text-anchor="start" x="18244.114" y="-78590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type)],SpecializeTypes.this.global.Type,List[SpecializeTypes.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-78575.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],context.WeakTypeTag[Nothing],That] -->
<g id="node1076" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],context.WeakTypeTag[Nothing],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-78658.8701" rx="349.1216" ry="26.7407"/>
<text text-anchor="start" x="18527.614" y="-78662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],context.WeakTypeTag[Nothing],That]</text>
<text text-anchor="middle" x="18766.614" y="-78647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; java.net.URI -->
<g id="node1077" class="node">
<title>((Nothing, Nothing)) =&gt; java.net.URI</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-78730.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="18662.614" y="-78734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; java.net.URI</text>
<text text-anchor="middle" x="18766.614" y="-78719.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 1ms</text>
</g>
<!-- scala.collection.immutable.Map[scala.tools.asm.tree.AbstractInsnNode,scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def +=: ?} -->
<g id="node1078" class="node">
<title>scala.collection.immutable.Map[scala.tools.asm.tree.AbstractInsnNode,scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-78802.8701" rx="508.3196" ry="26.7407"/>
<text text-anchor="start" x="18415.114" y="-78806.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[scala.tools.asm.tree.AbstractInsnNode,scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-78791.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- arg.type =&gt; ?{def stripPrefix: ?} -->
<g id="node1079" class="node">
<title>arg.type =&gt; ?{def stripPrefix: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-78874.8701" rx="138.6859" ry="26.7407"/>
<text text-anchor="start" x="18676.614" y="-78878.6701" font-family="Times,serif" font-size="14.00" fill="#000000">arg.type =&gt; ?{def stripPrefix: ?}</text>
<text text-anchor="middle" x="18766.614" y="-78863.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.Tree,That] -->
<g id="node1080" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-78946.8701" rx="406.6728" ry="26.7407"/>
<text text-anchor="start" x="18487.114" y="-78950.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-78935.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.Symbol,List[Interface.this.global.Symbol]] -->
<g id="node1081" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.Symbol,List[Interface.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-79018.8701" rx="533.3171" ry="26.7407"/>
<text text-anchor="start" x="18397.614" y="-79022.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.Symbol,List[Interface.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-79007.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Iterable[LambdaLifter.this.SymSet],LambdaLift.this.global.Symbol,That] -->
<g id="node1082" class="node">
<title>scala.collection.generic.CanBuildFrom[Iterable[LambdaLifter.this.SymSet],LambdaLift.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-79090.8701" rx="451.6825" ry="26.7407"/>
<text text-anchor="start" x="18455.114" y="-79094.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Iterable[LambdaLifter.this.SymSet],LambdaLift.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-79079.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Option[Parsers.this.global.Tree] =&gt; Traversable[=?Parsers.this.global.Tree] -->
<g id="node1083" class="node">
<title>Option[Parsers.this.global.Tree] =&gt; Traversable[=?Parsers.this.global.Tree]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-79162.8701" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="18559.114" y="-79166.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Parsers.this.global.Tree] =&gt; Traversable[=?Parsers.this.global.Tree]</text>
<text text-anchor="middle" x="18766.614" y="-79151.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TypersTracking.this.global.Symbol],String,That] -->
<g id="node1084" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TypersTracking.this.global.Symbol],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-79234.8701" rx="372.7906" ry="26.7407"/>
<text text-anchor="start" x="18511.114" y="-79238.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TypersTracking.this.global.Symbol],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-79223.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def take: ?} -->
<g id="node1085" class="node">
<title>String =&gt; ?{def take: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-79306.8701" rx="106.1321" ry="26.7407"/>
<text text-anchor="start" x="18699.614" y="-79310.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def take: ?}</text>
<text text-anchor="middle" x="18766.614" y="-79295.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- MatchCodeGen.this.CODE.SelectStart =&gt; MatchCodeGen.this.global.analyzer.global.Tree -->
<g id="node1086" class="node">
<title>MatchCodeGen.this.CODE.SelectStart =&gt; MatchCodeGen.this.global.analyzer.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-79378.8701" rx="364.3201" ry="26.7407"/>
<text text-anchor="start" x="18517.114" y="-79382.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchCodeGen.this.CODE.SelectStart =&gt; MatchCodeGen.this.global.analyzer.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-79367.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;$tmpscope&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType -->
<g id="node1087" class="node">
<title>String(&#39;$tmpscope&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-79450.8701" rx="374.119" ry="26.7407"/>
<text text-anchor="start" x="18510.114" y="-79454.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;$tmpscope&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</text>
<text text-anchor="middle" x="18766.614" y="-79439.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; SyntheticMethods.this.global.Symbol -->
<g id="node1088" class="node">
<title>((Nothing, Nothing)) =&gt; SyntheticMethods.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-79522.8701" rx="255.0313" ry="26.7407"/>
<text text-anchor="start" x="18594.114" y="-79526.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; SyntheticMethods.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-79511.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 2ms</text>
</g>
<!-- String(&#39;classes&#39;) =&gt; scala.reflect.io.Path -->
<g id="node1089" class="node">
<title>String(&#39;classes&#39;) =&gt; scala.reflect.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-79594.8701" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="18658.614" y="-79598.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;classes&#39;) =&gt; scala.reflect.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-79583.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Equals],Equals,That] -->
<g id="node1090" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Equals],Equals,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-79666.8701" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="18587.614" y="-79670.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Equals],Equals,That]</text>
<text text-anchor="middle" x="18766.614" y="-79655.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;.&#39;) =&gt; scala.reflect.io.Path -->
<g id="node1092" class="node">
<title>String(&#39;.&#39;) =&gt; scala.reflect.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-79738.8701" rx="140.0143" ry="26.7407"/>
<text text-anchor="start" x="18675.614" y="-79742.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;.&#39;) =&gt; scala.reflect.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-79727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; scala.text.Document -->
<g id="node1093" class="node">
<title>String =&gt; scala.text.Document</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-79810.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-79814.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; scala.text.Document</text>
<text text-anchor="middle" x="18766.614" y="-79799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Symbol],scala.reflect.internal.Variance,List[scala.tools.nsc.Variance]] -->
<g id="node1094" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Symbol],scala.reflect.internal.Variance,List[scala.tools.nsc.Variance]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-79882.8701" rx="534.6455" ry="26.7407"/>
<text text-anchor="start" x="18396.614" y="-79886.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Symbol],scala.reflect.internal.Variance,List[scala.tools.nsc.Variance]]</text>
<text text-anchor="middle" x="18766.614" y="-79871.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Reshape.this.global.Type -->
<g id="node1095" class="node">
<title>(=&gt; Unit) =&gt; Reshape.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-79954.8701" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="18658.614" y="-79958.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Reshape.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-79943.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchCodeGen.this.global.Tree],MatchCodeGen.this.global.Tree,That] -->
<g id="node1096" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchCodeGen.this.global.Tree],MatchCodeGen.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-80026.8701" rx="461.0672" ry="26.7407"/>
<text text-anchor="start" x="18448.614" y="-80030.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchCodeGen.this.global.Tree],MatchCodeGen.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-80015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- prefixParts.type =&gt; ?{def head: ?} -->
<g id="node1097" class="node">
<title>prefixParts.type =&gt; ?{def head: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-80098.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="18671.614" y="-80102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">prefixParts.type =&gt; ?{def head: ?}</text>
<text text-anchor="middle" x="18766.614" y="-80087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Int =&gt; ?{def |=: ?} -->
<g id="node1098" class="node">
<title>Int =&gt; ?{def |=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-80170.8701" rx="85.6199" ry="26.7407"/>
<text text-anchor="start" x="18714.114" y="-80174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; ?{def |=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-80159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.EXTENDSkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1099" class="node">
<title>Scanners.this.global.nme.EXTENDSkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-80242.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="18598.114" y="-80246.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.EXTENDSkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-80231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[String] =&gt; ?{def drop: ?} -->
<g id="node1100" class="node">
<title>Array[String] =&gt; ?{def drop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-80314.8701" rx="136.4432" ry="26.7407"/>
<text text-anchor="start" x="18678.114" y="-80318.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def drop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-80303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Holes.this.global.Symbol -->
<g id="node1101" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Holes.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-80386.8701" rx="294.7271" ry="26.7407"/>
<text text-anchor="start" x="18566.114" y="-80390.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Holes.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-80375.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.Tree -->
<g id="node1102" class="node">
<title>((Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-80458.8701" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="18599.114" y="-80462.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-80447.6701" font-family="Times,serif" font-size="14.00" fill="#000000">41 times = 8ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[scala.reflect.io.Path],java.net.URL,That] -->
<g id="node1103" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[scala.reflect.io.Path],java.net.URL,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-80530.8701" rx="340.2368" ry="26.7407"/>
<text text-anchor="start" x="18534.114" y="-80534.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[scala.reflect.io.Path],java.net.URL,That]</text>
<text text-anchor="middle" x="18766.614" y="-80519.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],scala.reflect.io.Path,That] -->
<g id="node1104" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],scala.reflect.io.Path,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-80602.8701" rx="311.6683" ry="26.7407"/>
<text text-anchor="start" x="18554.114" y="-80606.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],scala.reflect.io.Path,That]</text>
<text text-anchor="middle" x="18766.614" y="-80591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;[[syntax trees at end of %25s]]&#39;) =&gt; ?{def format: ?} -->
<g id="node1105" class="node">
<title>String(&#39;[[syntax trees at end of %25s]]&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-80674.8701" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="18601.114" y="-80678.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;[[syntax trees at end of %25s]]&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-80663.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%10.2fMB&#39;) =&gt; ?{def format: ?} -->
<g id="node1106" class="node">
<title>String(&#39;%10.2fMB&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-80746.8701" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="18654.614" y="-80750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%10.2fMB&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-80735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.IMPLEMENTSkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1107" class="node">
<title>JavaScanners.this.global.javanme.IMPLEMENTSkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-80818.8701" rx="301.4551" ry="26.7407"/>
<text text-anchor="start" x="18561.614" y="-80822.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.IMPLEMENTSkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-80807.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.SYNCHRONIZEDkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1108" class="node">
<title>JavaScanners.this.global.javanme.SYNCHRONIZEDkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-80890.8701" rx="313.4968" ry="26.7407"/>
<text text-anchor="start" x="18553.114" y="-80894.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.SYNCHRONIZEDkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-80879.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- alts.type =&gt; ?{def +: ?} -->
<g id="node1109" class="node">
<title>alts.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-80962.8701" rx="105.218" ry="26.7407"/>
<text text-anchor="start" x="18700.114" y="-80966.6701" font-family="Times,serif" font-size="14.00" fill="#000000">alts.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-80951.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[CleanUp.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node1110" class="node">
<title>List[CleanUp.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-81034.8701" rx="315.2393" ry="26.7407"/>
<text text-anchor="start" x="18551.614" y="-81038.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[CleanUp.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-81023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (SymbolTrackers.this.global.Symbol, SymbolTrackers.this.global.Symbol) &lt;:&lt; (T, U) -->
<g id="node1111" class="node">
<title>(SymbolTrackers.this.global.Symbol, SymbolTrackers.this.global.Symbol) &lt;:&lt; (T, U)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-81106.8701" rx="346.4646" ry="26.7407"/>
<text text-anchor="start" x="18529.614" y="-81110.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(SymbolTrackers.this.global.Symbol, SymbolTrackers.this.global.Symbol) &lt;:&lt; (T, U)</text>
<text text-anchor="middle" x="18766.614" y="-81095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type) &lt;:&lt; (SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type) -->
<g id="node1112" class="node">
<title>(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type) &lt;:&lt; (SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-81178.8701" rx="586.7973" ry="26.7407"/>
<text text-anchor="start" x="18359.614" y="-81182.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type) &lt;:&lt; (SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type)</text>
<text text-anchor="middle" x="18766.614" y="-81167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[CommonSubconditionElimination.this.Test],CommonSubconditionElimination.this.TreeMaker,That] -->
<g id="node1113" class="node">
<title>scala.collection.generic.CanBuildFrom[List[CommonSubconditionElimination.this.Test],CommonSubconditionElimination.this.TreeMaker,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-81250.8701" rx="576.0841" ry="26.7407"/>
<text text-anchor="start" x="18367.114" y="-81254.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[CommonSubconditionElimination.this.Test],CommonSubconditionElimination.this.TreeMaker,That]</text>
<text text-anchor="middle" x="18766.614" y="-81239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Stream[ExtensionMethods.this.global.TermName]) =&gt; ?{def #::: ?} -->
<g id="node1114" class="node">
<title>(=&gt; scala.collection.immutable.Stream[ExtensionMethods.this.global.TermName]) =&gt; ?{def #::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-81322.8701" rx="400.445" ry="26.7407"/>
<text text-anchor="start" x="18491.614" y="-81326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Stream[ExtensionMethods.this.global.TermName]) =&gt; ?{def #::: ?}</text>
<text text-anchor="middle" x="18766.614" y="-81311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[BoxUnbox.this.postProcessor.bTypes.coreBTypes.bTypes.ClassBType],tools.nsc.backend.jvm.BTypes.InternalName,That] -->
<g id="node1115" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[BoxUnbox.this.postProcessor.bTypes.coreBTypes.bTypes.ClassBType],tools.nsc.backend.jvm.BTypes.InternalName,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-81394.8701" rx="765.1791" ry="26.7407"/>
<text text-anchor="start" x="18233.614" y="-81398.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[BoxUnbox.this.postProcessor.bTypes.coreBTypes.bTypes.ClassBType],tools.nsc.backend.jvm.BTypes.InternalName,That]</text>
<text text-anchor="middle" x="18766.614" y="-81383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,(Int, scala.tools.asm.Type),Vector[(Int, scala.tools.asm.Type)]] -->
<g id="node1116" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,(Int, scala.tools.asm.Type),Vector[(Int, scala.tools.asm.Type)]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-81466.8701" rx="444.5404" ry="26.7407"/>
<text text-anchor="start" x="18460.114" y="-81470.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,(Int, scala.tools.asm.Type),Vector[(Int, scala.tools.asm.Type)]]</text>
<text text-anchor="middle" x="18766.614" y="-81455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[RefChecks.this.global.analyzer.global.Symbol]],Int,That] -->
<g id="node1117" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[RefChecks.this.global.analyzer.global.Symbol]],Int,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-81538.8701" rx="423.6139" ry="26.7407"/>
<text text-anchor="start" x="18475.114" y="-81542.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[RefChecks.this.global.analyzer.global.Symbol]],Int,That]</text>
<text text-anchor="middle" x="18766.614" y="-81527.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; GenTrees.this.SymbolTable) =&gt; ?{def ++=: ?} -->
<g id="node1118" class="node">
<title>(=&gt; GenTrees.this.SymbolTable) =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-81610.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="18623.614" y="-81614.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; GenTrees.this.SymbolTable) =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-81599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[StdAttachments.this.ReifyBindingAttachment] -->
<g id="node1119" class="node">
<title>scala.reflect.ClassTag[StdAttachments.this.ReifyBindingAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-81682.8701" rx="280.0286" ry="26.7407"/>
<text text-anchor="start" x="18576.614" y="-81686.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[StdAttachments.this.ReifyBindingAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-81671.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- Array[Int] =&gt; ?{def flatMap: ?} -->
<g id="node1120" class="node">
<title>Array[Int] =&gt; ?{def flatMap: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-81754.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-81758.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Int] =&gt; ?{def flatMap: ?}</text>
<text text-anchor="middle" x="18766.614" y="-81743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Unit =&gt; TreeBuilder.this.global.Type -->
<g id="node1121" class="node">
<title>Unit =&gt; TreeBuilder.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-81826.8701" rx="156.9554" ry="26.7407"/>
<text text-anchor="start" x="18663.614" y="-81830.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; TreeBuilder.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-81815.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.LinkedHashMap[Infer.this.global.Symbol,Option[Infer.this.global.Type]],(Infer.this.global.Symbol, Infer.this.global.Type),That] -->
<g id="node1122" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.LinkedHashMap[Infer.this.global.Symbol,Option[Infer.this.global.Type]],(Infer.this.global.Symbol, Infer.this.global.Type),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-81898.8701" rx="762.0223" ry="26.7407"/>
<text text-anchor="start" x="18235.614" y="-81902.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.LinkedHashMap[Infer.this.global.Symbol,Option[Infer.this.global.Type]],(Infer.this.global.Symbol, Infer.this.global.Type),That]</text>
<text text-anchor="middle" x="18766.614" y="-81887.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- JavaScanners.this.global.javanme.CATCHkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1123" class="node">
<title>JavaScanners.this.global.javanme.CATCHkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-81970.8701" rx="271.558" ry="26.7407"/>
<text text-anchor="start" x="18582.614" y="-81974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.CATCHkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-81959.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[StructuredTypeStrings.this.TypeNode],String,That] -->
<g id="node1124" class="node">
<title>scala.collection.generic.CanBuildFrom[List[StructuredTypeStrings.this.TypeNode],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-82042.8701" rx="381.6754" ry="26.7407"/>
<text text-anchor="start" x="18504.614" y="-82046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[StructuredTypeStrings.this.TypeNode],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-82031.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def split(x$1: ? &gt;: Char(&#39;,&#39;)): ?} -->
<g id="node1125" class="node">
<title>String =&gt; ?{def split(x$1: ? &gt;: Char(&#39;,&#39;)): ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-82114.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="18646.114" y="-82118.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def split(x$1: ? &gt;: Char(&#39;,&#39;)): ?}</text>
<text text-anchor="middle" x="18766.614" y="-82103.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.MemberDef with Serializable{def name: Parsers.this.global.Name{def next: Parsers.this.global.Name; type ThisNameType &gt;: Parsers.this.global.TypeName with Parsers.this.global.TermName &lt;: Parsers.this.global.Name}},List[Parsers.this.global.MemberDef]] -->
<g id="node1126" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.MemberDef with Serializable{def name: Parsers.this.global.Name{def next: Parsers.this.global.Name; type ThisNameType &gt;: Parsers.this.global.TypeName with Parsers.this.global.TermName &lt;: Parsers.this.global.Name}},List[Parsers.this.global.MemberDef]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-82186.8701" rx="1371.1601" ry="26.7407"/>
<text text-anchor="start" x="17805.114" y="-82190.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.MemberDef with Serializable{def name: Parsers.this.global.Name{def next: Parsers.this.global.Name; type ThisNameType &gt;: Parsers.this.global.TypeName with Parsers.this.global.TermName &lt;: Parsers.this.global.Name}},List[Parsers.this.global.MemberDef]]</text>
<text text-anchor="middle" x="18766.614" y="-82175.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Reshape.this.global.Name, Reshape.this.global.ClassfileAnnotArg)],Reshape.this.global.AssignOrNamedArg,That] -->
<g id="node1127" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Reshape.this.global.Name, Reshape.this.global.ClassfileAnnotArg)],Reshape.this.global.AssignOrNamedArg,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-82258.8701" rx="633.6354" ry="26.7407"/>
<text text-anchor="start" x="18326.614" y="-82262.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Reshape.this.global.Name, Reshape.this.global.ClassfileAnnotArg)],Reshape.this.global.AssignOrNamedArg,That]</text>
<text text-anchor="middle" x="18766.614" y="-82247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Array[Double] =&gt; Array[Class[_]] -->
<g id="node1128" class="node">
<title>Array[Double] =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-82330.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="18671.614" y="-82334.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Double] =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-82319.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.THISkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1129" class="node">
<title>JavaScanners.this.global.javanme.THISkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-82402.8701" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="18590.614" y="-82406.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.THISkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-82391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- String(&#39;symbol owners&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1130" class="node">
<title>String(&#39;symbol owners&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-82474.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="18656.114" y="-82478.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;symbol owners&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-82463.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeBuilder.this.global.Tree],TreeBuilder.this.global.Tree,List[TreeBuilder.this.global.Tree]] -->
<g id="node1131" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeBuilder.this.global.Tree],TreeBuilder.this.global.Tree,List[TreeBuilder.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-82546.8701" rx="544.4444" ry="26.7407"/>
<text text-anchor="start" x="18389.614" y="-82550.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeBuilder.this.global.Tree],TreeBuilder.this.global.Tree,List[TreeBuilder.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-82535.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Symbol],NamesDefaults.this.global.NamedType,That] -->
<g id="node1132" class="node">
<title>scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Symbol],NamesDefaults.this.global.NamedType,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-82618.8701" rx="500.7632" ry="26.7407"/>
<text text-anchor="start" x="18420.614" y="-82622.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Symbol],NamesDefaults.this.global.NamedType,That]</text>
<text text-anchor="middle" x="18766.614" y="-82607.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],MatchTranslation.this.global.Tree,That] -->
<g id="node1133" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],MatchTranslation.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-82690.8701" rx="491.3784" ry="26.7407"/>
<text text-anchor="start" x="18427.114" y="-82694.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],MatchTranslation.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-82679.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Typers.this.global.QualTypeSymAttachment] -->
<g id="node1134" class="node">
<title>scala.reflect.ClassTag[Typers.this.global.QualTypeSymAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-82762.8701" rx="275.5435" ry="26.7407"/>
<text text-anchor="start" x="18579.614" y="-82766.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Typers.this.global.QualTypeSymAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-82751.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[TreeMakers.this.TreeMaker]],List[TreeMakers.this.TreeMaker],That] -->
<g id="node1135" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[TreeMakers.this.TreeMaker]],List[TreeMakers.this.TreeMaker],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-82834.8701" rx="472.1947" ry="26.7407"/>
<text text-anchor="start" x="18440.614" y="-82838.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[TreeMakers.this.TreeMaker]],List[TreeMakers.this.TreeMaker],That]</text>
<text text-anchor="middle" x="18766.614" y="-82823.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.Type],Delambdafy.this.global.Type,That] -->
<g id="node1136" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.Type],Delambdafy.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-82906.8701" rx="438.3124" ry="26.7407"/>
<text text-anchor="start" x="18464.614" y="-82910.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.Type],Delambdafy.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-82895.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- TypersStats.this.StackableTimer =&gt; Ordered[TypersStats.this.StackableTimer] -->
<g id="node1137" class="node">
<title>TypersStats.this.StackableTimer =&gt; Ordered[TypersStats.this.StackableTimer]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-82978.8701" rx="316.5678" ry="26.7407"/>
<text text-anchor="start" x="18550.614" y="-82982.6701" font-family="Times,serif" font-size="14.00" fill="#000000">TypersStats.this.StackableTimer =&gt; Ordered[TypersStats.this.StackableTimer]</text>
<text text-anchor="middle" x="18766.614" y="-82967.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Symbol],BTypesFromSymbols.this.global.Symbol,That] -->
<g id="node1138" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Symbol],BTypesFromSymbols.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-83050.8701" rx="533.7313" ry="26.7407"/>
<text text-anchor="start" x="18397.114" y="-83054.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Symbol],BTypesFromSymbols.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-83039.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[global.analyzer.global.Tree],global.ClassDef,That] -->
<g id="node1139" class="node">
<title>scala.collection.generic.CanBuildFrom[List[global.analyzer.global.Tree],global.ClassDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-83122.8701" rx="379.9328" ry="26.7407"/>
<text text-anchor="start" x="18506.114" y="-83126.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[global.analyzer.global.Tree],global.ClassDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-83111.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Type],Implicits.this.global.Tree,That] -->
<g id="node1140" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Type],Implicits.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-83194.8701" rx="410.2439" ry="26.7407"/>
<text text-anchor="start" x="18484.614" y="-83198.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Type],Implicits.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-83183.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- MatchCodeGen.this.global.gen.global.RefTree =&gt; ?{def DOT: ?} -->
<g id="node1141" class="node">
<title>MatchCodeGen.this.global.gen.global.RefTree =&gt; ?{def DOT: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-83266.8701" rx="267.0729" ry="26.7407"/>
<text text-anchor="start" x="18585.614" y="-83270.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchCodeGen.this.global.gen.global.RefTree =&gt; ?{def DOT: ?}</text>
<text text-anchor="middle" x="18766.614" y="-83255.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.math.Ordering[T] -->
<g id="node1142" class="node">
<title>scala.math.Ordering[T]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-83338.8701" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="18702.114" y="-83342.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.math.Ordering[T]</text>
<text text-anchor="middle" x="18766.614" y="-83327.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Any],Reifiers.this.global.Tree,List[ApplyReifier.this.global.Tree]] -->
<g id="node1143" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Any],Reifiers.this.global.Tree,List[ApplyReifier.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-83410.8701" rx="439.6409" ry="26.7407"/>
<text text-anchor="start" x="18463.614" y="-83414.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Any],Reifiers.this.global.Tree,List[ApplyReifier.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-83399.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; GenSymbols.this.global.Tree -->
<g id="node1144" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; GenSymbols.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-83482.8701" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="18581.614" y="-83486.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; GenSymbols.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-83471.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; java.io.FileFilter -->
<g id="node1145" class="node">
<title>Unit =&gt; java.io.FileFilter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-83554.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="18697.114" y="-83558.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; java.io.FileFilter</text>
<text text-anchor="middle" x="18766.614" y="-83543.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- args.type =&gt; ?{def toList: ?} -->
<g id="node1146" class="node">
<title>args.type =&gt; ?{def toList: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-83626.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="18686.614" y="-83630.6701" font-family="Times,serif" font-size="14.00" fill="#000000">args.type =&gt; ?{def toList: ?}</text>
<text text-anchor="middle" x="18766.614" y="-83615.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[PureCodegen.this.Casegen =&gt; MatchCodeGen.this.global.Tree],MatchCodeGen.this.global.Tree,That] -->
<g id="node1147" class="node">
<title>scala.collection.generic.CanBuildFrom[List[PureCodegen.this.Casegen =&gt; MatchCodeGen.this.global.Tree],MatchCodeGen.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-83698.8701" rx="580.5693" ry="26.7407"/>
<text text-anchor="start" x="18364.114" y="-83702.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[PureCodegen.this.Casegen =&gt; MatchCodeGen.this.global.Tree],MatchCodeGen.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-83687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def dropRight: ?} -->
<g id="node1148" class="node">
<title>String =&gt; ?{def dropRight: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-83770.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="18683.614" y="-83774.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def dropRight: ?}</text>
<text text-anchor="middle" x="18766.614" y="-83759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String =&gt; ?{def replaceAllLiterally: ?} -->
<g id="node1149" class="node">
<title>String =&gt; ?{def replaceAllLiterally: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-83842.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="18659.614" y="-83846.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def replaceAllLiterally: ?}</text>
<text text-anchor="middle" x="18766.614" y="-83831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; SuperAccessors.this.global.Symbol -->
<g id="node1150" class="node">
<title>((Nothing, Nothing)) =&gt; SuperAccessors.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-83914.8701" rx="246.1463" ry="26.7407"/>
<text text-anchor="start" x="18600.614" y="-83918.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; SuperAccessors.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-83903.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; SpecializeTypes.this.TypeEnv -->
<g id="node1151" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; SpecializeTypes.this.TypeEnv</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-83986.8701" rx="240.3326" ry="26.7407"/>
<text text-anchor="start" x="18604.614" y="-83990.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; SpecializeTypes.this.TypeEnv</text>
<text text-anchor="middle" x="18766.614" y="-83975.6701" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 0ms</text>
</g>
<!-- Unit =&gt; (AnyRef =&gt; Int) -->
<g id="node1152" class="node">
<title>Unit =&gt; (AnyRef =&gt; Int)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-84058.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="18697.114" y="-84062.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; (AnyRef =&gt; Int)</text>
<text text-anchor="middle" x="18766.614" y="-84047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- s.type =&gt; ?{def init: ?} -->
<g id="node1153" class="node">
<title>s.type =&gt; ?{def init: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-84130.8701" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="18702.114" y="-84134.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def init: ?}</text>
<text text-anchor="middle" x="18766.614" y="-84119.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Boolean]) =&gt; Array[Class[_]] -->
<g id="node1154" class="node">
<title>(=&gt; Array[Boolean]) =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-84202.8701" rx="170.3255" ry="26.7407"/>
<text text-anchor="start" x="18654.114" y="-84206.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Boolean]) =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-84191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; SymbolTables.this.global.Type -->
<g id="node1155" class="node">
<title>(=&gt; Unit) =&gt; SymbolTables.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-84274.8701" rx="187.2667" ry="26.7407"/>
<text text-anchor="start" x="18642.114" y="-84278.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; SymbolTables.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-84263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Unit =&gt; scala.sys.process.ProcessLogger -->
<g id="node1156" class="node">
<title>Unit =&gt; scala.sys.process.ProcessLogger</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-84346.8701" rx="170.3255" ry="26.7407"/>
<text text-anchor="start" x="18654.114" y="-84350.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; scala.sys.process.ProcessLogger</text>
<text text-anchor="middle" x="18766.614" y="-84335.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.io.AbstractFile],scala.reflect.internal.util.BatchSourceFile,That] -->
<g id="node1157" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.io.AbstractFile],scala.reflect.internal.util.BatchSourceFile,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-84418.8701" rx="487.8074" ry="26.7407"/>
<text text-anchor="start" x="18429.614" y="-84422.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.io.AbstractFile],scala.reflect.internal.util.BatchSourceFile,That]</text>
<text text-anchor="middle" x="18766.614" y="-84407.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;HIklMSLNpzZsQBbhAaCYyjmdeRTrDFc&#39;) =&gt; ?{def contains(x$1: ? &gt;: Char): ?} -->
<g id="node1158" class="node">
<title>String(&#39;HIklMSLNpzZsQBbhAaCYyjmdeRTrDFc&#39;) =&gt; ?{def contains(x$1: ? &gt;: Char): ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-84490.8701" rx="360.749" ry="26.7407"/>
<text text-anchor="start" x="18519.614" y="-84494.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;HIklMSLNpzZsQBbhAaCYyjmdeRTrDFc&#39;) =&gt; ?{def contains(x$1: ? &gt;: Char): ?}</text>
<text text-anchor="middle" x="18766.614" y="-84479.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Unit]) =&gt; Array[Class[_]] -->
<g id="node1159" class="node">
<title>(=&gt; Array[Unit]) =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-84562.8701" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="18664.614" y="-84566.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Unit]) =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-84551.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; JavaParsers.this.global.Symbol -->
<g id="node1160" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; JavaParsers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-84634.8701" rx="243.9037" ry="26.7407"/>
<text text-anchor="start" x="18602.114" y="-84638.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; JavaParsers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-84623.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;argument file %s could not be found&#39;) =&gt; ?{def format: ?} -->
<g id="node1161" class="node">
<title>String(&#39;argument file %s could not be found&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-84706.8701" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="18585.114" y="-84710.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;argument file %s could not be found&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-84695.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.SubComponent],String,That] -->
<g id="node1162" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.SubComponent],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-84778.8701" rx="354.0212" ry="26.7407"/>
<text text-anchor="start" x="18524.114" y="-84782.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.SubComponent],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-84767.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Symbol -->
<g id="node1163" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-84850.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-84854.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-84839.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; List[Parsers.this.OpInfo]) =&gt; ?{def ::=: ?} -->
<g id="node1164" class="node">
<title>(=&gt; List[Parsers.this.OpInfo]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-84922.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="18637.114" y="-84926.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Parsers.this.OpInfo]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-84911.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Any =&gt; Nothing)) =&gt; List[String] -->
<g id="node1165" class="node">
<title>((Nothing, Any =&gt; Nothing)) =&gt; List[String]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-84994.8701" rx="187.2667" ry="26.7407"/>
<text text-anchor="start" x="18642.114" y="-84998.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Any =&gt; Nothing)) =&gt; List[String]</text>
<text text-anchor="middle" x="18766.614" y="-84983.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Erasure.this.global.Symbol] =&gt; Erasure.this.global.Type -->
<g id="node1166" class="node">
<title>List[Erasure.this.global.Symbol] =&gt; Erasure.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-85066.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="18598.114" y="-85070.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Erasure.this.global.Symbol] =&gt; Erasure.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-85055.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol -->
<g id="node1167" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-85138.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="18586.114" y="-85142.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-85127.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.ELSEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1168" class="node">
<title>Scanners.this.global.nme.ELSEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-85210.8701" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="18612.614" y="-85214.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.ELSEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-85199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%s %s %s%s, but &#39;) =&gt; ?{def format: ?} -->
<g id="node1169" class="node">
<title>String(&#39;%s %s %s%s, but &#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-85282.8701" rx="200.2225" ry="26.7407"/>
<text text-anchor="start" x="18633.114" y="-85286.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s %s %s%s, but &#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-85271.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[() =&gt; Unit] =&gt; ?{def ::=: ?} -->
<g id="node1170" class="node">
<title>List[() =&gt; Unit] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-85354.8701" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="18676.114" y="-85358.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[() =&gt; Unit] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-85343.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Char(&#39;.&#39;) =&gt; String -->
<g id="node1171" class="node">
<title>Char(&#39;.&#39;) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-85426.8701" rx="82.9636" ry="26.7407"/>
<text text-anchor="start" x="18716.114" y="-85430.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Char(&#39;.&#39;) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-85415.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 1ms</text>
</g>
<!-- (=&gt; (List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Type], List[Infer.this.global.Symbol]) -->
<g id="node1172" class="node">
<title>(=&gt; (List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-85498.8701" rx="687.1156" ry="26.7407"/>
<text text-anchor="start" x="18288.614" y="-85502.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</text>
<text text-anchor="middle" x="18766.614" y="-85487.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[PatternExpansion.this.global.Symbol],PatternExpansion.this.global.Type,List[PatternExpansion.this.global.Type]] -->
<g id="node1173" class="node">
<title>scala.collection.generic.CanBuildFrom[List[PatternExpansion.this.global.Symbol],PatternExpansion.this.global.Type,List[PatternExpansion.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-85570.8701" rx="625.1648" ry="26.7407"/>
<text text-anchor="start" x="18332.614" y="-85574.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[PatternExpansion.this.global.Symbol],PatternExpansion.this.global.Type,List[PatternExpansion.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-85559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[tools.nsc.io.File] -->
<g id="node1174" class="node">
<title>scala.reflect.ClassTag[tools.nsc.io.File]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-85642.8701" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="18658.614" y="-85646.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[tools.nsc.io.File]</text>
<text text-anchor="middle" x="18766.614" y="-85631.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(105) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1175" class="node">
<title>Int(105) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-85714.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-85718.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(105) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-85703.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Array[Boolean] =&gt; Array[CNF.this.Clause] -->
<g id="node1176" class="node">
<title>Array[Boolean] =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-85786.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="18646.114" y="-85790.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Boolean] =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-85775.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[Int],scala.tools.asm.tree.AbstractInsnNode,That] -->
<g id="node1177" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[Int],scala.tools.asm.tree.AbstractInsnNode,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-85858.8701" rx="370.5479" ry="26.7407"/>
<text text-anchor="start" x="18512.614" y="-85862.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[Int],scala.tools.asm.tree.AbstractInsnNode,That]</text>
<text text-anchor="middle" x="18766.614" y="-85847.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- since.type =&gt; ?{def nonEmpty: ?} -->
<g id="node1178" class="node">
<title>since.type =&gt; ?{def nonEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-85930.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="18671.614" y="-85934.6701" font-family="Times,serif" font-size="14.00" fill="#000000">since.type =&gt; ?{def nonEmpty: ?}</text>
<text text-anchor="middle" x="18766.614" y="-85919.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.TypeDef],ExtensionMethods.this.global.Symbol,That] -->
<g id="node1179" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.TypeDef],ExtensionMethods.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-86002.8701" rx="512.8049" ry="26.7407"/>
<text text-anchor="start" x="18412.114" y="-86006.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.TypeDef],ExtensionMethods.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-85991.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Symbol],NamesDefaults.this.global.Tree,That] -->
<g id="node1180" class="node">
<title>scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Symbol],NamesDefaults.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-86074.8701" rx="470.4521" ry="26.7407"/>
<text text-anchor="start" x="18442.114" y="-86078.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Symbol],NamesDefaults.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-86063.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Flatten.this.global.Symbol] =&gt; Flatten.this.global.Type -->
<g id="node1181" class="node">
<title>List[Flatten.this.global.Symbol] =&gt; Flatten.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-86146.8701" rx="243.9037" ry="26.7407"/>
<text text-anchor="start" x="18602.114" y="-86150.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Flatten.this.global.Symbol] =&gt; Flatten.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-86135.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; =&gt; String -->
<g id="node1182" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-86218.8701" rx="161.441" ry="26.7407"/>
<text text-anchor="start" x="18660.614" y="-86222.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-86207.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[PatternExpansion.this.global.Type],PatternExpansion.this.global.Type,That] -->
<g id="node1183" class="node">
<title>scala.collection.generic.CanBuildFrom[List[PatternExpansion.this.global.Type],PatternExpansion.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-86290.8701" rx="478.0084" ry="26.7407"/>
<text text-anchor="start" x="18436.614" y="-86294.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[PatternExpansion.this.global.Type],PatternExpansion.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-86279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.VALkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1184" class="node">
<title>Scanners.this.global.nme.VALkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-86362.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="18614.614" y="-86366.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.VALkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-86351.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.TypeDef],SpecializeTypes.this.global.Symbol,That] -->
<g id="node1185" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.TypeDef],SpecializeTypes.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-86434.8701" rx="493.6211" ry="26.7407"/>
<text text-anchor="start" x="18425.614" y="-86438.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.TypeDef],SpecializeTypes.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-86423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Delambdafy.this.global.analyzer.global.Tree -->
<g id="node1186" class="node">
<title>((Nothing, Nothing)) =&gt; Delambdafy.this.global.analyzer.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-86506.8701" rx="281.357" ry="26.7407"/>
<text text-anchor="start" x="18575.614" y="-86510.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Delambdafy.this.global.analyzer.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-86495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Type],Typers.this.global.Type,That] -->
<g id="node1187" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Type],Typers.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-86578.8701" rx="395.9596" ry="26.7407"/>
<text text-anchor="start" x="18494.614" y="-86582.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Type],Typers.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-86567.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Type], List[Infer.this.global.Symbol]) -->
<g id="node1188" class="node">
<title>((List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-86650.8701" rx="615.3659" ry="26.7407"/>
<text text-anchor="start" x="18339.614" y="-86654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</text>
<text text-anchor="middle" x="18766.614" y="-86639.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Boolean) =&gt; ?{def ||=: ?} -->
<g id="node1189" class="node">
<title>(=&gt; Boolean) =&gt; ?{def ||=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-86722.8701" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="18683.114" y="-86726.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Boolean) =&gt; ?{def ||=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-86711.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Erasure.this.global.AnnotationInfo) =&gt; Erasure.this.global.Type -->
<g id="node1190" class="node">
<title>(=&gt; Erasure.this.global.AnnotationInfo) =&gt; Erasure.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-86794.8701" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="18578.614" y="-86798.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Erasure.this.global.AnnotationInfo) =&gt; Erasure.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-86783.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- MultiChoiceSetting.this.domain.ValueSet =&gt; ?{def &#45;=: ?} -->
<g id="node1191" class="node">
<title>MultiChoiceSetting.this.domain.ValueSet =&gt; ?{def &#45;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-86866.8701" rx="237.6758" ry="26.7407"/>
<text text-anchor="start" x="18606.614" y="-86870.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MultiChoiceSetting.this.domain.ValueSet =&gt; ?{def &#45;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-86855.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Context.this.type =&gt; ?{def reporter_=: ?} -->
<g id="node1192" class="node">
<title>Context.this.type =&gt; ?{def reporter_=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-86938.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="18652.114" y="-86942.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Context.this.type =&gt; ?{def reporter_=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-86927.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; String) =&gt; scala.reflect.io.File -->
<g id="node1193" class="node">
<title>(=&gt; String) =&gt; scala.reflect.io.File</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-87010.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="18671.114" y="-87014.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; String) =&gt; scala.reflect.io.File</text>
<text text-anchor="middle" x="18766.614" y="-86999.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 0ms</text>
</g>
<!-- (SymbolTrackers.this.global.Symbol, scala.collection.immutable.Set[SymbolTrackers.this.global.Tree]) &lt;:&lt; (SymbolTrackers.this.global.Symbol, Set[SymbolTrackers.this.global.Tree]) -->
<g id="node1194" class="node">
<title>(SymbolTrackers.this.global.Symbol, scala.collection.immutable.Set[SymbolTrackers.this.global.Tree]) &lt;:&lt; (SymbolTrackers.this.global.Symbol, Set[SymbolTrackers.this.global.Tree])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-87082.8701" rx="731.2969" ry="26.7407"/>
<text text-anchor="start" x="18257.614" y="-87086.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(SymbolTrackers.this.global.Symbol, scala.collection.immutable.Set[SymbolTrackers.this.global.Tree]) &lt;:&lt; (SymbolTrackers.this.global.Symbol, Set[SymbolTrackers.this.global.Tree])</text>
<text text-anchor="middle" x="18766.614" y="-87071.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[(Int, CNF.this.Sym)],String,That] -->
<g id="node1195" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[(Int, CNF.this.Sym)],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-87154.8701" rx="313.4968" ry="26.7407"/>
<text text-anchor="start" x="18553.114" y="-87158.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[(Int, CNF.this.Sym)],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-87143.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Ordering[scala.tools.nsc.util.ClassPath] -->
<g id="node1196" class="node">
<title>Ordering[scala.tools.nsc.util.ClassPath]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-87226.8701" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="18658.614" y="-87230.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Ordering[scala.tools.nsc.util.ClassPath]</text>
<text text-anchor="middle" x="18766.614" y="-87215.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.immutable.Map[scala.tools.asm.tree.MethodInsnNode,CallGraph.this.Callsite] =&gt; ?{def +=: ?} -->
<g id="node1197" class="node">
<title>scala.collection.immutable.Map[scala.tools.asm.tree.MethodInsnNode,CallGraph.this.Callsite] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-87298.8701" rx="446.3688" ry="26.7407"/>
<text text-anchor="start" x="18459.114" y="-87302.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[scala.tools.asm.tree.MethodInsnNode,CallGraph.this.Callsite] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-87287.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; SpecializeTypes.this.global.AnnotationInfo) =&gt; SpecializeTypes.this.global.Type -->
<g id="node1198" class="node">
<title>(=&gt; SpecializeTypes.this.global.AnnotationInfo) =&gt; SpecializeTypes.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-87370.8701" rx="344.2221" ry="26.7407"/>
<text text-anchor="start" x="18531.114" y="-87374.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; SpecializeTypes.this.global.AnnotationInfo) =&gt; SpecializeTypes.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-87359.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- AliasingFrame.this.type =&gt; ?{def peekStack: ?} -->
<g id="node1199" class="node">
<title>AliasingFrame.this.type =&gt; ?{def peekStack: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-87442.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="18634.114" y="-87446.6701" font-family="Times,serif" font-size="14.00" fill="#000000">AliasingFrame.this.type =&gt; ?{def peekStack: ?}</text>
<text text-anchor="middle" x="18766.614" y="-87431.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[SpecializeTypes.this.Overload] =&gt; ?{def ::=: ?} -->
<g id="node1200" class="node">
<title>List[SpecializeTypes.this.Overload] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-87514.8701" rx="216.2494" ry="26.7407"/>
<text text-anchor="start" x="18621.614" y="-87518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[SpecializeTypes.this.Overload] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-87503.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; StringBuilder -->
<g id="node1201" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; StringBuilder</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-87586.8701" rx="212.2642" ry="26.7407"/>
<text text-anchor="start" x="18624.614" y="-87590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; StringBuilder</text>
<text text-anchor="middle" x="18766.614" y="-87575.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Int, CoreBTypesFromSymbols.this.bTypes.PrimitiveBType with Product with Serializable)],(Int, CoreBTypesFromSymbols.this.bTypes.PrimitiveBType with Product with Serializable),That] -->
<g id="node1202" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Int, CoreBTypesFromSymbols.this.bTypes.PrimitiveBType with Product with Serializable)],(Int, CoreBTypesFromSymbols.this.bTypes.PrimitiveBType with Product with Serializable),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-87658.8701" rx="926.1198" ry="26.7407"/>
<text text-anchor="start" x="18119.614" y="-87662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Int, CoreBTypesFromSymbols.this.bTypes.PrimitiveBType with Product with Serializable)],(Int, CoreBTypesFromSymbols.this.bTypes.PrimitiveBType with Product with Serializable),That]</text>
<text text-anchor="middle" x="18766.614" y="-87647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],SymbolicXMLBuilder.this.global.Tree,List[SymbolicXMLBuilder.this.global.Tree]] -->
<g id="node1203" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],SymbolicXMLBuilder.this.global.Tree,List[SymbolicXMLBuilder.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-87730.8701" rx="540.8734" ry="26.7407"/>
<text text-anchor="start" x="18392.114" y="-87734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],SymbolicXMLBuilder.this.global.Tree,List[SymbolicXMLBuilder.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-87719.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- expandee.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1204" class="node">
<title>expandee.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-87802.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-87806.6701" font-family="Times,serif" font-size="14.00" fill="#000000">expandee.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-87791.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39; &#160;&#39;) =&gt; ?{def *: ?} -->
<g id="node1205" class="node">
<title>String(&#39; &#160;&#39;) =&gt; ?{def *: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-87874.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="18697.114" y="-87878.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39; &#160;&#39;) =&gt; ?{def *: ?}</text>
<text text-anchor="middle" x="18766.614" y="-87863.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.Tree],MatchTranslator.this.BoundTree,List[MatchTranslator.this.BoundTree]] -->
<g id="node1206" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.Tree],MatchTranslator.this.BoundTree,List[MatchTranslator.this.BoundTree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-87946.8701" rx="600.1674" ry="26.7407"/>
<text text-anchor="start" x="18350.114" y="-87950.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.Tree],MatchTranslator.this.BoundTree,List[MatchTranslator.this.BoundTree]]</text>
<text text-anchor="middle" x="18766.614" y="-87935.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Seq[org.apache.tools.ant.types.Commandline.Argument] =&gt; ?{def :+=: ?} -->
<g id="node1207" class="node">
<title>Seq[org.apache.tools.ant.types.Commandline.Argument] =&gt; ?{def :+=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-88018.8701" rx="301.8692" ry="26.7407"/>
<text text-anchor="start" x="18561.114" y="-88022.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Seq[org.apache.tools.ant.types.Commandline.Argument] =&gt; ?{def :+=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-88007.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Byte] =&gt; Array[AnyRef] -->
<g id="node1208" class="node">
<title>Array[Byte] =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-88090.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="18679.614" y="-88094.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Byte] =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-88079.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- arg.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1209" class="node">
<title>arg.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-88162.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-88166.6701" font-family="Times,serif" font-size="14.00" fill="#000000">arg.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-88151.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Constructors.this.global.Tree -->
<g id="node1210" class="node">
<title>((Nothing, Nothing)) =&gt; Constructors.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-88234.8701" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="18618.114" y="-88238.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Constructors.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-88223.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.tools.nsc.profile.ProfileCounters) =&gt; ?{def +=: ?} -->
<g id="node1211" class="node">
<title>(=&gt; scala.tools.nsc.profile.ProfileCounters) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-88306.8701" rx="246.1463" ry="26.7407"/>
<text text-anchor="start" x="18600.614" y="-88310.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.tools.nsc.profile.ProfileCounters) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-88295.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; Char(&#39; &#39;)) =&gt; String -->
<g id="node1212" class="node">
<title>(=&gt; Char(&#39; &#39;)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-88378.8701" rx="103.4757" ry="26.7407"/>
<text text-anchor="start" x="18701.614" y="-88382.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Char(&#39; &#39;)) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-88367.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Group&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType -->
<g id="node1213" class="node">
<title>String(&#39;Group&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-88450.8701" rx="354.9352" ry="26.7407"/>
<text text-anchor="start" x="18523.614" y="-88454.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Group&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</text>
<text text-anchor="middle" x="18766.614" y="-88439.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; EtaExpansion.this.global.gen.global.ValDef -->
<g id="node1214" class="node">
<title>((Nothing, Nothing)) =&gt; EtaExpansion.this.global.gen.global.ValDef</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-88522.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="18577.114" y="-88526.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; EtaExpansion.this.global.gen.global.ValDef</text>
<text text-anchor="middle" x="18766.614" y="-88511.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- childSection.type =&gt; ?{def replaceAllLiterally: ?} -->
<g id="node1215" class="node">
<title>childSection.type =&gt; ?{def replaceAllLiterally: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-88594.8701" rx="206.4504" ry="26.7407"/>
<text text-anchor="start" x="18628.614" y="-88598.6701" font-family="Times,serif" font-size="14.00" fill="#000000">childSection.type =&gt; ?{def replaceAllLiterally: ?}</text>
<text text-anchor="middle" x="18766.614" y="-88583.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- MatchTreeMaking.this.global.Select =&gt; ?{def OBJ_EQ: ?} -->
<g id="node1216" class="node">
<title>MatchTreeMaking.this.global.Select =&gt; ?{def OBJ_EQ: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-88666.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="18602.614" y="-88670.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchTreeMaking.this.global.Select =&gt; ?{def OBJ_EQ: ?}</text>
<text text-anchor="middle" x="18766.614" y="-88655.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Parsers.this.global.BackquotedIdentifierAttachment.type] -->
<g id="node1217" class="node">
<title>scala.reflect.ClassTag[Parsers.this.global.BackquotedIdentifierAttachment.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-88738.8701" rx="321.053" ry="26.7407"/>
<text text-anchor="start" x="18547.614" y="-88742.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Parsers.this.global.BackquotedIdentifierAttachment.type]</text>
<text text-anchor="middle" x="18766.614" y="-88727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- scala.reflect.ClassTag[NamesDefaults.this.global.Type] -->
<g id="node1218" class="node">
<title>scala.reflect.ClassTag[NamesDefaults.this.global.Type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-88810.8701" rx="226.9626" ry="26.7407"/>
<text text-anchor="start" x="18614.114" y="-88814.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[NamesDefaults.this.global.Type]</text>
<text text-anchor="middle" x="18766.614" y="-88799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; String -->
<g id="node1219" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-88882.8701" rx="147.1565" ry="26.7407"/>
<text text-anchor="start" x="18670.614" y="-88886.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-88871.6701" font-family="Times,serif" font-size="14.00" fill="#000000">52 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Tree],AnyRef,That] -->
<g id="node1220" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Tree],AnyRef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-88954.8701" rx="381.6754" ry="26.7407"/>
<text text-anchor="start" x="18504.614" y="-88958.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Tree],AnyRef,That]</text>
<text text-anchor="middle" x="18766.614" y="-88943.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.FLOAT.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1221" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.FLOAT.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-89026.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="18577.114" y="-89030.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.FLOAT.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-89015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.Set[ss.Setting],List[String],That] -->
<g id="node1222" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.Set[ss.Setting],List[String],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-89098.8701" rx="353.6068" ry="26.7407"/>
<text text-anchor="start" x="18524.614" y="-89102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.Set[ss.Setting],List[String],That]</text>
<text text-anchor="middle" x="18766.614" y="-89087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; Array[Unit]) =&gt; Array[AnyRef] -->
<g id="node1223" class="node">
<title>(=&gt; Array[Unit]) =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-89170.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="18665.614" y="-89174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Unit]) =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-89159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[CNF.this.Prop],scala.tools.nsc.transform.patmat.Lit,Set[scala.tools.nsc.transform.patmat.Lit]] -->
<g id="node1224" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[CNF.this.Prop],scala.tools.nsc.transform.patmat.Lit,Set[scala.tools.nsc.transform.patmat.Lit]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-89242.8701" rx="651.4908" ry="26.7407"/>
<text text-anchor="start" x="18314.114" y="-89246.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[CNF.this.Prop],scala.tools.nsc.transform.patmat.Lit,Set[scala.tools.nsc.transform.patmat.Lit]]</text>
<text text-anchor="middle" x="18766.614" y="-89231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Int -->
<g id="node1225" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-89314.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="18679.614" y="-89318.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-89303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">42 times = 3ms</text>
</g>
<!-- Null &lt;:&lt; Reshape.this.global.ValDef -->
<g id="node1226" class="node">
<title>Null &lt;:&lt; Reshape.this.global.ValDef</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-89386.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="18665.614" y="-89390.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Null &lt;:&lt; Reshape.this.global.ValDef</text>
<text text-anchor="middle" x="18766.614" y="-89375.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; java.io.File -->
<g id="node1227" class="node">
<title>((Nothing, Nothing)) =&gt; java.io.File</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-89458.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="18666.614" y="-89462.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; java.io.File</text>
<text text-anchor="middle" x="18766.614" y="-89447.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[DirectoryLookup.this.F],FileEntryType,Seq[FileEntryType]] -->
<g id="node1228" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[DirectoryLookup.this.F],FileEntryType,Seq[FileEntryType]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-89602.8701" rx="425.8566" ry="26.7407"/>
<text text-anchor="start" x="18473.614" y="-89606.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[DirectoryLookup.this.F],FileEntryType,Seq[FileEntryType]]</text>
<text text-anchor="middle" x="18766.614" y="-89591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- DummyImplicit -->
<g id="node2537" class="node">
<title>DummyImplicit</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-89566.8701" rx="74.9067" ry="26.7407"/>
<text text-anchor="start" x="38116.3606" y="-89570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">DummyImplicit</text>
<text text-anchor="middle" x="38161.3606" y="-89555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[DirectoryLookup.this.F],FileEntryType,Seq[FileEntryType]]&#45;&gt;DummyImplicit -->
<g id="edge8" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[DirectoryLookup.this.F],FileEntryType,Seq[FileEntryType]]&#45;&gt;DummyImplicit</title>
<path fill="none" stroke="#000000" d="M19192.3037,-89602.0799C21914.5768,-89597.0269 36811.1718,-89569.3762 38075.792,-89567.0289"/>
<polygon fill="#000000" stroke="#000000" points="38076.1555,-89570.5283 38086.149,-89567.0097 38076.1424,-89563.5283 38076.1555,-89570.5283"/>
</g>
<!-- String(&#39;Compile succeeded with %d warning%s; see the compiler output for details.&#39;) =&gt; ?{def format: ?} -->
<g id="node1229" class="node">
<title>String(&#39;Compile succeeded with %d warning%s; see the compiler output for details.&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-89674.8701" rx="422.6998" ry="26.7407"/>
<text text-anchor="start" x="18475.614" y="-89678.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Compile succeeded with %d warning%s; see the compiler output for details.&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-89663.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$21.NameType =&gt; ?{def getterName: ?} -->
<g id="node1230" class="node">
<title>x$21.NameType =&gt; ?{def getterName: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-89746.8701" rx="176.5537" ry="26.7407"/>
<text text-anchor="start" x="18649.614" y="-89750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$21.NameType =&gt; ?{def getterName: ?}</text>
<text text-anchor="middle" x="18766.614" y="-89735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.Name,List[Parsers.this.global.analyzer.global.Name]] -->
<g id="node1231" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.Name,List[Parsers.this.global.analyzer.global.Name]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-89818.8701" rx="561.3856" ry="26.7407"/>
<text text-anchor="start" x="18377.614" y="-89822.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.Name,List[Parsers.this.global.analyzer.global.Name]]</text>
<text text-anchor="middle" x="18766.614" y="-89807.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit],Int,scala.collection.GenTraversableOnce[Int]] -->
<g id="node1232" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit],Int,scala.collection.GenTraversableOnce[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-89890.8701" rx="608.6379" ry="26.7407"/>
<text text-anchor="start" x="18344.114" y="-89894.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit],Int,scala.collection.GenTraversableOnce[Int]]</text>
<text text-anchor="middle" x="18766.614" y="-89879.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; CleanUp.this.global.Symbol -->
<g id="node1233" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; CleanUp.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-89962.8701" rx="233.1906" ry="26.7407"/>
<text text-anchor="start" x="18609.614" y="-89966.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; CleanUp.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-89951.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- x$6.type =&gt; ?{def toInt: ?} -->
<g id="node1234" class="node">
<title>x$6.type =&gt; ?{def toInt: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-90034.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="18691.114" y="-90038.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$6.type =&gt; ?{def toInt: ?}</text>
<text text-anchor="middle" x="18766.614" y="-90023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Symbol],String,That] -->
<g id="node1235" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Symbol],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-90106.8701" rx="376.7759" ry="26.7407"/>
<text text-anchor="start" x="18508.114" y="-90110.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Symbol],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-90095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Map[BCodeSkelBuilder.this.global.Symbol,scala.tools.asm.Label] =&gt; ?{def +=: ?} -->
<g id="node1236" class="node">
<title>scala.collection.immutable.Map[BCodeSkelBuilder.this.global.Symbol,scala.tools.asm.Label] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-90178.8701" rx="443.212" ry="26.7407"/>
<text text-anchor="start" x="18461.114" y="-90182.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[BCodeSkelBuilder.this.global.Symbol,scala.tools.asm.Label] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-90167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[_],Macros.this.global.Tree,That] -->
<g id="node1237" class="node">
<title>scala.collection.generic.CanBuildFrom[List[_],Macros.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-90250.8701" rx="309.9257" ry="26.7407"/>
<text text-anchor="start" x="18555.614" y="-90254.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[_],Macros.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-90239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Parsers.this.global.TypeBounds -->
<g id="node1238" class="node">
<title>((Nothing, Nothing)) =&gt; Parsers.this.global.TypeBounds</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-90322.8701" rx="231.4481" ry="26.7407"/>
<text text-anchor="start" x="18611.114" y="-90326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Parsers.this.global.TypeBounds</text>
<text text-anchor="middle" x="18766.614" y="-90311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; java.awt.PopupMenu -->
<g id="node1239" class="node">
<title>((Nothing, Nothing)) =&gt; java.awt.PopupMenu</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-90394.8701" rx="191.752" ry="26.7407"/>
<text text-anchor="start" x="18639.114" y="-90398.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; java.awt.PopupMenu</text>
<text text-anchor="middle" x="18766.614" y="-90383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- x$5.NameType =&gt; ?{def +: ?} -->
<g id="node1240" class="node">
<title>x$5.NameType =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-90466.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="18680.614" y="-90470.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$5.NameType =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-90455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],Char,That] -->
<g id="node1241" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],Char,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-90538.8701" rx="359.4206" ry="26.7407"/>
<text text-anchor="start" x="18520.614" y="-90542.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],Char,That]</text>
<text text-anchor="middle" x="18766.614" y="-90527.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Array[Byte] -->
<g id="node1242" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Array[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-90610.8701" rx="170.3255" ry="26.7407"/>
<text text-anchor="start" x="18654.114" y="-90614.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Array[Byte]</text>
<text text-anchor="middle" x="18766.614" y="-90599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- String(&#39;.&#45;:&#39;) =&gt; ?{def contains(x$1: ? &gt;: Char): Boolean} -->
<g id="node1243" class="node">
<title>String(&#39;.&#45;:&#39;) =&gt; ?{def contains(x$1: ? &gt;: Char): Boolean}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-90682.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-90686.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;.&#45;:&#39;) =&gt; ?{def contains(x$1: ? &gt;: Char): Boolean}</text>
<text text-anchor="middle" x="18766.614" y="-90671.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- origSym.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1244" class="node">
<title>origSym.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-90754.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="18683.614" y="-90758.6701" font-family="Times,serif" font-size="14.00" fill="#000000">origSym.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-90743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- nextFrame.type =&gt; ?{def stackTop: ?} -->
<g id="node1245" class="node">
<title>nextFrame.type =&gt; ?{def stackTop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-90826.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="18659.614" y="-90830.6701" font-family="Times,serif" font-size="14.00" fill="#000000">nextFrame.type =&gt; ?{def stackTop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-90815.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.typechecker.StdAttachments.&lt;refinement&gt;.type =&gt; ?{def interpolate: ?} -->
<g id="node1246" class="node">
<title>scala.tools.nsc.typechecker.StdAttachments.&lt;refinement&gt;.type =&gt; ?{def interpolate: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-90898.8701" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="18526.114" y="-90902.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.StdAttachments.&lt;refinement&gt;.type =&gt; ?{def interpolate: ?}</text>
<text text-anchor="middle" x="18766.614" y="-90887.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; Array[Int]) =&gt; Array[Class[_]] -->
<g id="node1247" class="node">
<title>(=&gt; Array[Int]) =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-90970.8701" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="18669.114" y="-90974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Int]) =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-90959.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Enclosures.this.universe.ImplDef] -->
<g id="node1248" class="node">
<title>scala.reflect.ClassTag[Enclosures.this.universe.ImplDef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-91042.8701" rx="231.4481" ry="26.7407"/>
<text text-anchor="start" x="18611.114" y="-91046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Enclosures.this.universe.ImplDef]</text>
<text text-anchor="middle" x="18766.614" y="-91031.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- (=&gt; Unit) =&gt; (Typers.this.global.Tree =&gt; Typers.this.global.Tree) -->
<g id="node1249" class="node">
<title>(=&gt; Unit) =&gt; (Typers.this.global.Tree =&gt; Typers.this.global.Tree)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-91114.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="18584.614" y="-91118.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; (Typers.this.global.Tree =&gt; Typers.this.global.Tree)</text>
<text text-anchor="middle" x="18766.614" y="-91103.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.runtime.Null$] -->
<g id="node1250" class="node">
<title>scala.reflect.ClassTag[scala.runtime.Null$]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-91186.8701" rx="178.7961" ry="26.7407"/>
<text text-anchor="start" x="18648.114" y="-91190.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.runtime.Null$]</text>
<text text-anchor="middle" x="18766.614" y="-91175.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- TypeNode.this.type =&gt; ?{def label_=: ?} -->
<g id="node1251" class="node">
<title>TypeNode.this.type =&gt; ?{def label_=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-91258.8701" rx="171.6541" ry="26.7407"/>
<text text-anchor="start" x="18653.114" y="-91262.6701" font-family="Times,serif" font-size="14.00" fill="#000000">TypeNode.this.type =&gt; ?{def label_=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-91247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Fields.this.global.Symbol -->
<g id="node1252" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Fields.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-91330.8701" rx="222.9775" ry="26.7407"/>
<text text-anchor="start" x="18617.114" y="-91334.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Fields.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-91319.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Int(41) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1253" class="node">
<title>Int(41) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-91402.8701" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="18702.114" y="-91406.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(41) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-91391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,(tools.nsc.backend.jvm.BTypes.InternalName, CoreBTypesFromSymbols.this.bTypes.MethodNameAndType),Map[tools.nsc.backend.jvm.BTypes.InternalName,CoreBTypesFromSymbols.this.bTypes.MethodNameAndType]] -->
<g id="node1254" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,(tools.nsc.backend.jvm.BTypes.InternalName, CoreBTypesFromSymbols.this.bTypes.MethodNameAndType),Map[tools.nsc.backend.jvm.BTypes.InternalName,CoreBTypesFromSymbols.this.bTypes.MethodNameAndType]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-91474.8701" rx="1079.0899" ry="26.7407"/>
<text text-anchor="start" x="18011.614" y="-91478.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,(tools.nsc.backend.jvm.BTypes.InternalName, CoreBTypesFromSymbols.this.bTypes.MethodNameAndType),Map[tools.nsc.backend.jvm.BTypes.InternalName,CoreBTypesFromSymbols.this.bTypes.MethodNameAndType]]</text>
<text text-anchor="middle" x="18766.614" y="-91463.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.explicitOuter.global.Tree],LambdaLift.this.global.Tree,List[LambdaLift.this.global.Tree]] -->
<g id="node1255" class="node">
<title>scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.explicitOuter.global.Tree],LambdaLift.this.global.Tree,List[LambdaLift.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-91546.8701" rx="623.8364" ry="26.7407"/>
<text text-anchor="start" x="18333.614" y="-91550.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.explicitOuter.global.Tree],LambdaLift.this.global.Tree,List[LambdaLift.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-91535.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Flatten.this.global.Scope =&gt; Flatten.this.global.Type -->
<g id="node1256" class="node">
<title>Flatten.this.global.Scope =&gt; Flatten.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-91618.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-91622.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Flatten.this.global.Scope =&gt; Flatten.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-91607.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- s.type =&gt; ?{def capitalize: ?} -->
<g id="node1257" class="node">
<title>s.type =&gt; ?{def capitalize: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-91690.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="18685.114" y="-91694.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def capitalize: ?}</text>
<text text-anchor="middle" x="18766.614" y="-91679.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- request.callsite.callee.type =&gt; ?{def get: ?} -->
<g id="node1258" class="node">
<title>request.callsite.callee.type =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-91762.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="18647.614" y="-91766.6701" font-family="Times,serif" font-size="14.00" fill="#000000">request.callsite.callee.type =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-91751.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; Unit) =&gt; java.io.PrintStream -->
<g id="node1259" class="node">
<title>(=&gt; Unit) =&gt; java.io.PrintStream</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-91834.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="18674.614" y="-91838.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; java.io.PrintStream</text>
<text text-anchor="middle" x="18766.614" y="-91823.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[PatternTypers.this.global.Symbol],PatternTypers.this.global.Type,List[PatternTypers.this.global.Type]] -->
<g id="node1260" class="node">
<title>scala.collection.generic.CanBuildFrom[List[PatternTypers.this.global.Symbol],PatternTypers.this.global.Type,List[PatternTypers.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-91906.8701" rx="583.2262" ry="26.7407"/>
<text text-anchor="start" x="18362.114" y="-91910.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[PatternTypers.this.global.Symbol],PatternTypers.this.global.Type,List[PatternTypers.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-91895.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(SymbolTrackers.this.global.Symbol, Int)],String,That] -->
<g id="node1261" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(SymbolTrackers.this.global.Symbol, Int)],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-91978.8701" rx="398.2023" ry="26.7407"/>
<text text-anchor="start" x="18493.114" y="-91982.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(SymbolTrackers.this.global.Symbol, Int)],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-91967.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Erasure.this.global.Scope =&gt; Erasure.this.global.Type -->
<g id="node1262" class="node">
<title>Erasure.this.global.Scope =&gt; Erasure.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-92050.8701" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="18618.114" y="-92054.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Erasure.this.global.Scope =&gt; Erasure.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-92039.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 1ms</text>
</g>
<!-- (=&gt; Array[Int]) =&gt; Array[AnyRef] -->
<g id="node1263" class="node">
<title>(=&gt; Array[Int]) =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-92122.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="18670.114" y="-92126.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Int]) =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-92111.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- java.util.Map[String,String] =&gt; ?{def asScala: ?} -->
<g id="node1264" class="node">
<title>java.util.Map[String,String] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-92194.8701" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="18631.114" y="-92198.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.Map[String,String] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-92183.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Iterable[Contexts.this.global.Symbol],Contexts.this.global.Symbol,Iterable[Contexts.this.global.Symbol]] -->
<g id="node1265" class="node">
<title>scala.collection.generic.CanBuildFrom[Iterable[Contexts.this.global.Symbol],Contexts.this.global.Symbol,Iterable[Contexts.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-92266.8701" rx="574.3415" ry="26.7407"/>
<text text-anchor="start" x="18368.614" y="-92270.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Iterable[Contexts.this.global.Symbol],Contexts.this.global.Symbol,Iterable[Contexts.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-92255.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; scala.tools.nsc.io.Path -->
<g id="node1266" class="node">
<title>String =&gt; scala.tools.nsc.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-92338.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-92342.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; scala.tools.nsc.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-92327.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.INSTANCEOFkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1267" class="node">
<title>JavaScanners.this.global.javanme.INSTANCEOFkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-92410.8701" rx="298.2982" ry="26.7407"/>
<text text-anchor="start" x="18563.614" y="-92414.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.INSTANCEOFkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-92399.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Int, CoreBTypesFromSymbols.this.bTypes.BOOL.type)],(Int, CoreBTypesFromSymbols.this.bTypes.PrimitiveBType with Product with Serializable),That] -->
<g id="node1268" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Int, CoreBTypesFromSymbols.this.bTypes.BOOL.type)],(Int, CoreBTypesFromSymbols.this.bTypes.PrimitiveBType with Product with Serializable),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-92482.8701" rx="790.5908" ry="26.7407"/>
<text text-anchor="start" x="18215.614" y="-92486.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Int, CoreBTypesFromSymbols.this.bTypes.BOOL.type)],(Int, CoreBTypesFromSymbols.this.bTypes.PrimitiveBType with Product with Serializable),That]</text>
<text text-anchor="middle" x="18766.614" y="-92471.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Global.this.fields.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1269" class="node">
<title>Global.this.fields.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-92554.8701" rx="161.441" ry="26.7407"/>
<text text-anchor="start" x="18660.614" y="-92558.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.fields.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-92543.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Global.this.postErasure.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1270" class="node">
<title>Global.this.postErasure.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-92626.8701" rx="185.0243" ry="26.7407"/>
<text text-anchor="start" x="18643.614" y="-92630.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.postErasure.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-92615.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;(?i)rc(\\d*)&#39;) =&gt; ?{def r: ?} -->
<g id="node1271" class="node">
<title>String(&#39;(?i)rc(\\d*)&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-92698.8701" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="18674.114" y="-92702.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;(?i)rc(\d*)&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-92687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(44) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1272" class="node">
<title>Int(44) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-92770.8701" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="18702.114" y="-92774.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(44) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-92759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.typechecker.ContextMode.SuperInit.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1273" class="node">
<title>scala.tools.nsc.typechecker.ContextMode.SuperInit.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-92842.8701" rx="293.3986" ry="26.7407"/>
<text text-anchor="start" x="18567.114" y="-92846.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.ContextMode.SuperInit.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-92831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[TypeDiagnostics.this.global.Symbol] =&gt; ?{def ::=: ?} -->
<g id="node1274" class="node">
<title>List[TypeDiagnostics.this.global.Symbol] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-92914.8701" rx="239.9186" ry="26.7407"/>
<text text-anchor="start" x="18605.114" y="-92918.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[TypeDiagnostics.this.global.Symbol] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-92903.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Macros.this.global.Type],Macros.this.global.Type,That] -->
<g id="node1275" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Macros.this.global.Type],Macros.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-92986.8701" rx="401.7733" ry="26.7407"/>
<text text-anchor="start" x="18490.614" y="-92990.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Macros.this.global.Type],Macros.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-92975.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[NodePrinters.this.global.AnnotationInfo],String,That] -->
<g id="node1276" class="node">
<title>scala.collection.generic.CanBuildFrom[List[NodePrinters.this.global.AnnotationInfo],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-93058.8701" rx="391.0601" ry="26.7407"/>
<text text-anchor="start" x="18498.114" y="-93062.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[NodePrinters.this.global.AnnotationInfo],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-93047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;calculateUndetparams: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node1277" class="node">
<title>String(&#39;calculateUndetparams: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-93130.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="18613.114" y="-93134.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;calculateUndetparams: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-93119.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- PathResolver.this.settings.BooleanSetting =&gt; Boolean -->
<g id="node1278" class="node">
<title>PathResolver.this.settings.BooleanSetting =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-93202.8701" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="18618.114" y="-93206.6701" font-family="Times,serif" font-size="14.00" fill="#000000">PathResolver.this.settings.BooleanSetting =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-93191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.ABSTRACTkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1279" class="node">
<title>JavaScanners.this.global.javanme.ABSTRACTkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-93274.8701" rx="289.4135" ry="26.7407"/>
<text text-anchor="start" x="18570.114" y="-93278.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.ABSTRACTkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-93263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- Long =&gt; Int -->
<g id="node1280" class="node">
<title>Long =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-93346.8701" rx="82.0488" ry="26.7407"/>
<text text-anchor="start" x="18716.614" y="-93350.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Long =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-93335.6701" font-family="Times,serif" font-size="14.00" fill="#000000">505 times = 30ms</text>
</g>
<!-- Scanners.this.global.nme.OBJECTkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1281" class="node">
<title>Scanners.this.global.nme.OBJECTkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-93418.8701" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="18604.114" y="-93422.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.OBJECTkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-93407.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; java.util.jar.Manifest -->
<g id="node1282" class="node">
<title>Unit =&gt; java.util.jar.Manifest</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-93490.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="18685.114" y="-93494.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; java.util.jar.Manifest</text>
<text text-anchor="middle" x="18766.614" y="-93479.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.math.Ordering[x$47._1.NameType forSome { val x$47: (SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type) }] -->
<g id="node1283" class="node">
<title>scala.math.Ordering[x$47._1.NameType forSome { val x$47: (SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type) }]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-93562.8701" rx="543.5303" ry="26.7407"/>
<text text-anchor="start" x="18390.114" y="-93566.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.math.Ordering[x$47._1.NameType forSome { val x$47: (SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type) }]</text>
<text text-anchor="middle" x="18766.614" y="-93551.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],(String, tools.nsc.backend.jvm.BTypes.MethodInlineInfo),That] -->
<g id="node1284" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],(String, tools.nsc.backend.jvm.BTypes.MethodInlineInfo),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-93634.8701" rx="584.5547" ry="26.7407"/>
<text text-anchor="start" x="18361.114" y="-93638.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],(String, tools.nsc.backend.jvm.BTypes.MethodInlineInfo),That]</text>
<text text-anchor="middle" x="18766.614" y="-93623.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- s.type =&gt; ?{def drop: ?} -->
<g id="node1285" class="node">
<title>s.type =&gt; ?{def drop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-93706.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-93710.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def drop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-93695.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- tpt1.type =&gt; ?{def +: ?} -->
<g id="node1286" class="node">
<title>tpt1.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-93778.8701" rx="106.5467" ry="26.7407"/>
<text text-anchor="start" x="18699.114" y="-93782.6701" font-family="Times,serif" font-size="14.00" fill="#000000">tpt1.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-93767.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def contains(x$1: ? &gt;: Char): ?} -->
<g id="node1287" class="node">
<title>String =&gt; ?{def contains(x$1: ? &gt;: Char): ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-93850.8701" rx="184.6098" ry="26.7407"/>
<text text-anchor="start" x="18644.114" y="-93854.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def contains(x$1: ? &gt;: Char): ?}</text>
<text text-anchor="middle" x="18766.614" y="-93839.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[MatchApproximator.this.TreeMaker]],Product with Serializable with MatchApproximator.this.Prop,Iterable[MatchApproximator.this.Prop]] -->
<g id="node1288" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[MatchApproximator.this.TreeMaker]],Product with Serializable with MatchApproximator.this.Prop,Iterable[MatchApproximator.this.Prop]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-93922.8701" rx="745.9953" ry="26.7407"/>
<text text-anchor="start" x="18247.114" y="-93926.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[MatchApproximator.this.TreeMaker]],Product with Serializable with MatchApproximator.this.Prop,Iterable[MatchApproximator.this.Prop]]</text>
<text text-anchor="middle" x="18766.614" y="-93911.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[MatchAnalyzer.this.Const],MatchAnalyzer.this.Const,That] -->
<g id="node1289" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[MatchAnalyzer.this.Const],MatchAnalyzer.this.Const,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-93994.8701" rx="415.1434" ry="26.7407"/>
<text text-anchor="start" x="18481.114" y="-93998.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[MatchAnalyzer.this.Const],MatchAnalyzer.this.Const,That]</text>
<text text-anchor="middle" x="18766.614" y="-93983.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Unapplies.this.global.ValDef],Unapplies.this.global.Tree,That] -->
<g id="node1290" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Unapplies.this.global.ValDef],Unapplies.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-94066.8701" rx="427.185" ry="26.7407"/>
<text text-anchor="start" x="18472.614" y="-94070.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Unapplies.this.global.ValDef],Unapplies.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-94055.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- pattern.type =&gt; ?{def dropRight: ?} -->
<g id="node1291" class="node">
<title>pattern.type =&gt; ?{def dropRight: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-94138.8701" rx="151.1419" ry="26.7407"/>
<text text-anchor="start" x="18667.614" y="-94142.6701" font-family="Times,serif" font-size="14.00" fill="#000000">pattern.type =&gt; ?{def dropRight: ?}</text>
<text text-anchor="middle" x="18766.614" y="-94127.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.beans.ScalaBeanInfo] -->
<g id="node1292" class="node">
<title>scala.reflect.ClassTag[scala.beans.ScalaBeanInfo]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-94210.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="18629.614" y="-94214.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.beans.ScalaBeanInfo]</text>
<text text-anchor="middle" x="18766.614" y="-94199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;reconstructed args&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1293" class="node">
<title>String(&#39;reconstructed args&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-94282.8701" rx="178.7961" ry="26.7407"/>
<text text-anchor="start" x="18648.114" y="-94286.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;reconstructed args&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-94271.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Erasure.this.global.AnnotationInfo =&gt; Erasure.this.global.Type -->
<g id="node1294" class="node">
<title>Erasure.this.global.AnnotationInfo =&gt; Erasure.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-94354.8701" rx="256.8596" ry="26.7407"/>
<text text-anchor="start" x="18593.114" y="-94358.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Erasure.this.global.AnnotationInfo =&gt; Erasure.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-94343.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; TreeGen.this.global.ValDef -->
<g id="node1295" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; TreeGen.this.global.ValDef</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-94426.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-94430.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; TreeGen.this.global.ValDef</text>
<text text-anchor="middle" x="18766.614" y="-94415.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Char(&#39; &#39;) =&gt; String -->
<g id="node1296" class="node">
<title>Char(&#39; &#39;) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-94498.8701" rx="82.9636" ry="26.7407"/>
<text text-anchor="start" x="18716.114" y="-94502.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Char(&#39; &#39;) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-94487.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[TreeAndTypeAnalysis.this.global.Symbol]],List[TreeAndTypeAnalysis.this.global.Type],That] -->
<g id="node1297" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[TreeAndTypeAnalysis.this.global.Symbol]],List[TreeAndTypeAnalysis.this.global.Type],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-94570.8701" rx="569.8561" ry="26.7407"/>
<text text-anchor="start" x="18371.614" y="-94574.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[TreeAndTypeAnalysis.this.global.Symbol]],List[TreeAndTypeAnalysis.this.global.Type],That]</text>
<text text-anchor="middle" x="18766.614" y="-94559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Double) =&gt; Parsers.this.Offset -->
<g id="node1298" class="node">
<title>(=&gt; Double) =&gt; Parsers.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-94642.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="18670.114" y="-94646.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Double) =&gt; Parsers.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-94631.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; AccessorSynthesis.this.global.Symbol -->
<g id="node1299" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; AccessorSynthesis.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-94714.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="18583.114" y="-94718.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; AccessorSynthesis.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-94703.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- List[BCodeIdiomatic.this.global.LabelDef] =&gt; ?{def ::=: ?} -->
<g id="node1300" class="node">
<title>List[BCodeIdiomatic.this.global.LabelDef] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-94786.8701" rx="244.818" ry="26.7407"/>
<text text-anchor="start" x="18601.614" y="-94790.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[BCodeIdiomatic.this.global.LabelDef] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-94775.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(T, NamesDefaults.this.global.Symbol)],T,That] -->
<g id="node1301" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(T, NamesDefaults.this.global.Symbol)],T,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-94858.8701" rx="371.4623" ry="26.7407"/>
<text text-anchor="start" x="18512.114" y="-94862.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(T, NamesDefaults.this.global.Symbol)],T,That]</text>
<text text-anchor="middle" x="18766.614" y="-94847.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; java.io.OutputStream -->
<g id="node1302" class="node">
<title>((Nothing, Nothing)) =&gt; java.io.OutputStream</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-94930.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="18638.614" y="-94934.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; java.io.OutputStream</text>
<text text-anchor="middle" x="18766.614" y="-94919.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 0ms</text>
</g>
<!-- List[SpecializeTypes.this.global.Symbol] =&gt; ?{def +: ?} -->
<g id="node1303" class="node">
<title>List[SpecializeTypes.this.global.Symbol] =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-95002.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="18610.114" y="-95006.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[SpecializeTypes.this.global.Symbol] =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-94991.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(49) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1304" class="node">
<title>Int(49) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-95074.8701" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="18702.114" y="-95078.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(49) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-95063.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;|/** As seen from %s, the missing signatures are as follows.\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| * &#160;For convenience, these are usable as stub implementations.\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| */\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|&#39;) =&gt; ?{def stripMargin: ?} -->
<g id="node1305" class="node">
<title>String(&#39;|/** As seen from %s, the missing signatures are as follows.\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| * &#160;For convenience, these are usable as stub implementations.\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| */\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|&#39;) =&gt; ?{def stripMargin: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-95178.8701" rx="300.5408" ry="58.8803"/>
<text text-anchor="middle" x="18766.614" y="-95205.1701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;|/** As seen from %s, the missing signatures are as follows.</text>
<text text-anchor="middle" x="18766.614" y="-95190.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| * &#160;For convenience, these are usable as stub implementations.</text>
<text text-anchor="middle" x="18766.614" y="-95175.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| */</text>
<text text-anchor="start" x="18562.114" y="-95160.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|&#39;) =&gt; ?{def stripMargin: ?}</text>
<text text-anchor="middle" x="18766.614" y="-95145.1701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Long) =&gt; String -->
<g id="node1306" class="node">
<title>(=&gt; Long) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-95282.8701" rx="92.7622" ry="26.7407"/>
<text text-anchor="start" x="18709.114" y="-95286.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Long) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-95271.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Int(256) =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node1307" class="node">
<title>Int(256) =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-95354.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-95358.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(256) =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-95343.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Tree,That] -->
<g id="node1308" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-95426.8701" rx="391.9745" ry="26.7407"/>
<text text-anchor="start" x="18497.614" y="-95430.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-95415.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; UnCurry.this.global.Tree -->
<g id="node1309" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; UnCurry.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-95498.8701" rx="257.2738" ry="26.7407"/>
<text text-anchor="start" x="18592.614" y="-95502.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; UnCurry.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-95487.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Namers.this.CaseApplyDefaultGetters] -->
<g id="node1310" class="node">
<title>scala.reflect.ClassTag[Namers.this.CaseApplyDefaultGetters]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-95570.8701" rx="250.1317" ry="26.7407"/>
<text text-anchor="start" x="18597.614" y="-95574.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Namers.this.CaseApplyDefaultGetters]</text>
<text text-anchor="middle" x="18766.614" y="-95559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 4ms</text>
</g>
<!-- (=&gt; List[TreeAndTypeAnalysis.this.global.Symbol]) =&gt; TreeAndTypeAnalysis.this.global.Type -->
<g id="node1311" class="node">
<title>(=&gt; List[TreeAndTypeAnalysis.this.global.Symbol]) =&gt; TreeAndTypeAnalysis.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-95642.8701" rx="385.2464" ry="26.7407"/>
<text text-anchor="start" x="18502.114" y="-95646.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[TreeAndTypeAnalysis.this.global.Symbol]) =&gt; TreeAndTypeAnalysis.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-95631.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Typers.this.global.gen.global.Symbol -->
<g id="node1312" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Typers.this.global.gen.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-95714.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="18584.614" y="-95718.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Typers.this.global.gen.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-95703.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Metalevels.this.global.Symbol],Metalevels.this.global.TermName,That] -->
<g id="node1313" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Metalevels.this.global.Symbol],Metalevels.this.global.TermName,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-95786.8701" rx="463.7241" ry="26.7407"/>
<text text-anchor="start" x="18446.614" y="-95790.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Metalevels.this.global.Symbol],Metalevels.this.global.TermName,That]</text>
<text text-anchor="middle" x="18766.614" y="-95775.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.reflect.ClassTag[MarkupParser.this.parser.symbXMLBuilder.TextAttache] -->
<g id="node1314" class="node">
<title>scala.reflect.ClassTag[MarkupParser.this.parser.symbXMLBuilder.TextAttache]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-95858.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="18545.614" y="-95862.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[MarkupParser.this.parser.symbXMLBuilder.TextAttache]</text>
<text text-anchor="middle" x="18766.614" y="-95847.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 4ms</text>
</g>
<!-- urls.type =&gt; ?{def mkString: ?} -->
<g id="node1315" class="node">
<title>urls.type =&gt; ?{def mkString: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-95930.8701" rx="136.4432" ry="26.7407"/>
<text text-anchor="start" x="18678.114" y="-95934.6701" font-family="Times,serif" font-size="14.00" fill="#000000">urls.type =&gt; ?{def mkString: ?}</text>
<text text-anchor="middle" x="18766.614" y="-95919.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; UnCurry.this.global.Symbol -->
<g id="node1316" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; UnCurry.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-96002.8701" rx="233.1906" ry="26.7407"/>
<text text-anchor="start" x="18609.614" y="-96006.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; UnCurry.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-95991.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- String(&#39;specialize accessor in %s: %s &#45;&gt; %s&#39;) =&gt; ?{def format: ?} -->
<g id="node1317" class="node">
<title>String(&#39;specialize accessor in %s: %s &#45;&gt; %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-96074.8701" rx="267.0729" ry="26.7407"/>
<text text-anchor="start" x="18585.614" y="-96078.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;specialize accessor in %s: %s &#45;&gt; %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-96063.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- includedFiles.type =&gt; ?{def filter: ?} -->
<g id="node1318" class="node">
<title>includedFiles.type =&gt; ?{def filter: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-96146.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="18664.114" y="-96150.6701" font-family="Times,serif" font-size="14.00" fill="#000000">includedFiles.type =&gt; ?{def filter: ?}</text>
<text text-anchor="middle" x="18766.614" y="-96135.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- name.type =&gt; ?{def dropLocal: ?} -->
<g id="node1319" class="node">
<title>name.type =&gt; ?{def dropLocal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-96218.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="18671.114" y="-96222.6701" font-family="Times,serif" font-size="14.00" fill="#000000">name.type =&gt; ?{def dropLocal: ?}</text>
<text text-anchor="middle" x="18766.614" y="-96207.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- member.type =&gt; ?{def +: ?} -->
<g id="node1320" class="node">
<title>member.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-96290.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="18686.614" y="-96294.6701" font-family="Times,serif" font-size="14.00" fill="#000000">member.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-96279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Global.this.superAccessors.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1321" class="node">
<title>Global.this.superAccessors.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-96362.8701" rx="199.3083" ry="26.7407"/>
<text text-anchor="start" x="18633.614" y="-96366.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.superAccessors.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-96351.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;reifying type %s for tree %s&#39;) =&gt; ?{def format: ?} -->
<g id="node1322" class="node">
<title>String(&#39;reifying type %s for tree %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-96434.8701" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="18608.114" y="-96438.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;reifying type %s for tree %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-96423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[String],(String, String),That] -->
<g id="node1323" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[String],(String, String),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-96506.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="18566.614" y="-96510.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[String],(String, String),That]</text>
<text text-anchor="middle" x="18766.614" y="-96495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; scala.tools.asm.tree.AbstractInsnNode -->
<g id="node1324" class="node">
<title>Unit =&gt; scala.tools.asm.tree.AbstractInsnNode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-96578.8701" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="18637.614" y="-96582.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; scala.tools.asm.tree.AbstractInsnNode</text>
<text text-anchor="middle" x="18766.614" y="-96567.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest] -->
<g id="node1325" class="node">
<title>scala.reflect.ClassTag[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-96650.8701" rx="321.9673" ry="26.7407"/>
<text text-anchor="start" x="18547.114" y="-96654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest]</text>
<text text-anchor="middle" x="18766.614" y="-96639.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.tools.nsc.typechecker.ContextMode.ReTyping.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1326" class="node">
<title>scala.tools.nsc.typechecker.ContextMode.ReTyping.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-96722.8701" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="18565.114" y="-96726.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.ContextMode.ReTyping.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-96711.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Tree],RefChecks.this.global.Type,List[RefChecks.this.global.Type]] -->
<g id="node1327" class="node">
<title>scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Tree],RefChecks.this.global.Type,List[RefChecks.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-96794.8701" rx="535.9739" ry="26.7407"/>
<text text-anchor="start" x="18395.614" y="-96798.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Tree],RefChecks.this.global.Type,List[RefChecks.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-96783.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[java.lang.invoke.MethodHandles] -->
<g id="node1328" class="node">
<title>scala.reflect.ClassTag[java.lang.invoke.MethodHandles]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-96866.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-96870.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[java.lang.invoke.MethodHandles]</text>
<text text-anchor="middle" x="18766.614" y="-96855.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- prefix.type =&gt; ?{def foreach: ?} -->
<g id="node1329" class="node">
<title>prefix.type =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-96938.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-96942.6701" font-family="Times,serif" font-size="14.00" fill="#000000">prefix.type =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-96927.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- clauses.type =&gt; ?{def foreach: ?} -->
<g id="node1330" class="node">
<title>clauses.type =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-97010.8701" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="18674.114" y="-97014.6701" font-family="Times,serif" font-size="14.00" fill="#000000">clauses.type =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-96999.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Reifiers.this.global.Tree],Reifiers.this.global.Tree,List[Reifiers.this.global.Tree]] -->
<g id="node1331" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Reifiers.this.global.Tree],Reifiers.this.global.Tree,List[Reifiers.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-97082.8701" rx="496.2779" ry="26.7407"/>
<text text-anchor="start" x="18423.614" y="-97086.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Reifiers.this.global.Tree],Reifiers.this.global.Tree,List[Reifiers.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-97071.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; Boolean) =&gt; ?{def &amp;&amp;=: ?} -->
<g id="node1332" class="node">
<title>(=&gt; Boolean) =&gt; ?{def &amp;&amp;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-97154.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="18674.614" y="-97158.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Boolean) =&gt; ?{def &amp;&amp;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-97143.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[String],org.apache.tools.ant.types.Commandline.Argument,That] -->
<g id="node1333" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[String],org.apache.tools.ant.types.Commandline.Argument,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-97226.8701" rx="443.212" ry="26.7407"/>
<text text-anchor="start" x="18461.114" y="-97230.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[String],org.apache.tools.ant.types.Commandline.Argument,That]</text>
<text text-anchor="middle" x="18766.614" y="-97215.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.reflect.ClassTag[org.apache.tools.ant.types.Commandline.Argument] -->
<g id="node2154" class="node">
<title>scala.reflect.ClassTag[org.apache.tools.ant.types.Commandline.Argument]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-97226.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="37955.3606" y="-97230.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[org.apache.tools.ant.types.Commandline.Argument]</text>
<text text-anchor="middle" x="38161.3606" y="-97215.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[String],org.apache.tools.ant.types.Commandline.Argument,That]&#45;&gt;scala.reflect.ClassTag[org.apache.tools.ant.types.Commandline.Argument] -->
<g id="edge23" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[String],org.apache.tools.ant.types.Commandline.Argument,That]&#45;&gt;scala.reflect.ClassTag[org.apache.tools.ant.types.Commandline.Argument]</title>
<path fill="none" stroke="#000000" d="M19210.1757,-97226.8701C21863.391,-97226.8701 35595.2698,-97226.8701 37848.3941,-97226.8701"/>
<polygon fill="#000000" stroke="#000000" points="37848.6434,-97230.3702 37858.6434,-97226.8701 37848.6433,-97223.3702 37848.6434,-97230.3702"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[BCodeHelpers.this.global.AnnotationInfo]],List[BCodeHelpers.this.global.AnnotationInfo],That] -->
<g id="node1334" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[BCodeHelpers.this.global.AnnotationInfo]],List[BCodeHelpers.this.global.AnnotationInfo],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-97298.8701" rx="576.0841" ry="26.7407"/>
<text text-anchor="start" x="18367.114" y="-97302.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[BCodeHelpers.this.global.AnnotationInfo]],List[BCodeHelpers.this.global.AnnotationInfo],That]</text>
<text text-anchor="middle" x="18766.614" y="-97287.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Array[Short] -->
<g id="node1335" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Array[Short]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-97370.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="18652.114" y="-97374.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Array[Short]</text>
<text text-anchor="middle" x="18766.614" y="-97359.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Byte] =&gt; ?{def take: ?} -->
<g id="node1336" class="node">
<title>Array[Byte] =&gt; ?{def take: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-97442.8701" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="18683.114" y="-97446.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Byte] =&gt; ?{def take: ?}</text>
<text text-anchor="middle" x="18766.614" y="-97431.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Type],Implicits.this.global.BoundedWildcardType,List[Implicits.this.global.Type]] -->
<g id="node1337" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Type],Implicits.this.global.BoundedWildcardType,List[Implicits.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-97514.8701" rx="586.3831" ry="26.7407"/>
<text text-anchor="start" x="18360.114" y="-97518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Type],Implicits.this.global.BoundedWildcardType,List[Implicits.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-97503.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ClosureOptimizer.this.Local],(ClosureOptimizer.this.Local, Int),That] -->
<g id="node1338" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ClosureOptimizer.this.Local],(ClosureOptimizer.this.Local, Int),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-97586.8701" rx="454.8394" ry="26.7407"/>
<text text-anchor="start" x="18453.114" y="-97590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ClosureOptimizer.this.Local],(ClosureOptimizer.this.Local, Int),That]</text>
<text text-anchor="middle" x="18766.614" y="-97575.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[SymbolicXMLBuilder.this.TextAttache] -->
<g id="node1339" class="node">
<title>scala.reflect.ClassTag[SymbolicXMLBuilder.this.TextAttache]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-97658.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="18593.614" y="-97662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[SymbolicXMLBuilder.this.TextAttache]</text>
<text text-anchor="middle" x="18766.614" y="-97647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Tree],SpecializeTypes.this.global.ClassDef,That] -->
<g id="node1340" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Tree],SpecializeTypes.this.global.ClassDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-97730.8701" rx="481.5794" ry="26.7407"/>
<text text-anchor="start" x="18434.114" y="-97734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Tree],SpecializeTypes.this.global.ClassDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-97719.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[ZipArchiveFileLookup.this.archive.DirEntry],scala.tools.nsc.classpath.PackageEntryImpl,Seq[scala.tools.nsc.classpath.PackageEntry]] -->
<g id="node1341" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[ZipArchiveFileLookup.this.archive.DirEntry],scala.tools.nsc.classpath.PackageEntryImpl,Seq[scala.tools.nsc.classpath.PackageEntry]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-97802.8701" rx="704.0568" ry="26.7407"/>
<text text-anchor="start" x="18276.614" y="-97806.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[ZipArchiveFileLookup.this.archive.DirEntry],scala.tools.nsc.classpath.PackageEntryImpl,Seq[scala.tools.nsc.classpath.PackageEntry]]</text>
<text text-anchor="middle" x="18766.614" y="-97791.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (List[Nothing], List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type]) -->
<g id="node1342" class="node">
<title>(=&gt; (List[Nothing], List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-97874.8701" rx="514.1333" ry="26.7407"/>
<text text-anchor="start" x="18411.114" y="-97878.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (List[Nothing], List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type])</text>
<text text-anchor="middle" x="18766.614" y="-97863.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Unit, Unit)) =&gt; Macros.this.global.Name -->
<g id="node1343" class="node">
<title>((Nothing, Unit, Unit)) =&gt; Macros.this.global.Name</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-97946.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-97950.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit, Unit)) =&gt; Macros.this.global.Name</text>
<text text-anchor="middle" x="18766.614" y="-97935.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[String]) =&gt; ?{def ::=: ?} -->
<g id="node1344" class="node">
<title>(=&gt; List[String]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-98018.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="18673.114" y="-98022.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[String]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-98007.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Type],(Typers.this.global.Type, Typers.this.global.Symbol),That] -->
<g id="node1345" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Type],(Typers.this.global.Type, Typers.this.global.Symbol),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-98090.8701" rx="510.5622" ry="26.7407"/>
<text text-anchor="start" x="18413.614" y="-98094.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Type],(Typers.this.global.Type, Typers.this.global.Symbol),That]</text>
<text text-anchor="middle" x="18766.614" y="-98079.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[ZipArchiveFileLookup.this.archive.DirEntry] =&gt; ?{def toSeq: ?} -->
<g id="node1346" class="node">
<title>Option[ZipArchiveFileLookup.this.archive.DirEntry] =&gt; ?{def toSeq: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-98162.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="18566.614" y="-98166.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[ZipArchiveFileLookup.this.archive.DirEntry] =&gt; ?{def toSeq: ?}</text>
<text text-anchor="middle" x="18766.614" y="-98151.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.reflect.internal.util.FreshNameCreator -->
<g id="node1347" class="node">
<title>scala.reflect.internal.util.FreshNameCreator</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-98234.8701" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="18646.614" y="-98238.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.internal.util.FreshNameCreator</text>
<text text-anchor="middle" x="18766.614" y="-98223.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 10ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Trees.this.Symbol],String,That] -->
<g id="node1348" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Trees.this.Symbol],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-98306.8701" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="18557.614" y="-98310.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Trees.this.Symbol],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-98295.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[String],scala.reflect.io.Path,That] -->
<g id="node1349" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[String],scala.reflect.io.Path,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-27910.8701" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="18548.614" y="-27914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[String],scala.reflect.io.Path,That]</text>
<text text-anchor="middle" x="18766.614" y="-27899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[String],scala.reflect.io.Path,That]&#45;&gt;scala.reflect.ClassTag[scala.reflect.io.Path] -->
<g id="edge11" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[String],scala.reflect.io.Path,That]&#45;&gt;scala.reflect.ClassTag[scala.reflect.io.Path]</title>
<path fill="none" stroke="#000000" d="M19086.5649,-27910.8701C21448.1247,-27910.8701 36135.1508,-27910.8701 37972.6411,-27910.8701"/>
<polygon fill="#000000" stroke="#000000" points="37972.9523,-27914.3702 37982.9523,-27910.8701 37972.9522,-27907.3702 37972.9523,-27914.3702"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Symbol],String,That] -->
<g id="node1350" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Symbol],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-98378.8701" rx="366.0628" ry="26.7407"/>
<text text-anchor="start" x="18515.614" y="-98382.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Symbol],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-98367.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;macro expansion is delayed: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node1351" class="node">
<title>String(&#39;macro expansion is delayed: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-98450.8701" rx="250.1317" ry="26.7407"/>
<text text-anchor="start" x="18597.614" y="-98454.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;macro expansion is delayed: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-98439.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.SUPERTYPEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1352" class="node">
<title>Scanners.this.global.nme.SUPERTYPEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-98522.8701" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="18590.614" y="-98526.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.SUPERTYPEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-98511.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- nextBinder.type =&gt; ?{def ===: ?} -->
<g id="node1353" class="node">
<title>nextBinder.type =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-98594.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="18671.614" y="-98598.6701" font-family="Times,serif" font-size="14.00" fill="#000000">nextBinder.type =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="18766.614" y="-98583.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.io.File =&gt; scala.reflect.io.Path -->
<g id="node1354" class="node">
<title>java.io.File =&gt; scala.reflect.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-98666.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="18670.114" y="-98670.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.io.File =&gt; scala.reflect.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-98655.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Symbol],ContextErrors.this.global.Symbol#NameType,That] -->
<g id="node1355" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Symbol],ContextErrors.this.global.Symbol#NameType,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-98738.8701" rx="520.3612" ry="26.7407"/>
<text text-anchor="start" x="18406.614" y="-98742.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Symbol],ContextErrors.this.global.Symbol#NameType,That]</text>
<text text-anchor="middle" x="18766.614" y="-98727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Array[Double] -->
<g id="node1356" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Array[Double]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-98810.8701" rx="180.1247" ry="26.7407"/>
<text text-anchor="start" x="18647.114" y="-98814.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Array[Double]</text>
<text text-anchor="middle" x="18766.614" y="-98799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[java.lang.invoke.CallSite] -->
<g id="node1357" class="node">
<title>scala.reflect.ClassTag[java.lang.invoke.CallSite]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-98882.8701" rx="199.3083" ry="26.7407"/>
<text text-anchor="start" x="18633.614" y="-98886.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[java.lang.invoke.CallSite]</text>
<text text-anchor="middle" x="18766.614" y="-98871.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[BCodeBodyBuilder.this.global.NoInlineCallsiteAttachment.type] -->
<g id="node1358" class="node">
<title>scala.reflect.ClassTag[BCodeBodyBuilder.this.global.NoInlineCallsiteAttachment.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-98954.8701" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="18526.114" y="-98958.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[BCodeBodyBuilder.this.global.NoInlineCallsiteAttachment.type]</text>
<text text-anchor="middle" x="18766.614" y="-98943.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Unit =&gt; Array[Byte] -->
<g id="node1359" class="node">
<title>Unit =&gt; Array[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-99026.8701" rx="92.7622" ry="26.7407"/>
<text text-anchor="start" x="18709.114" y="-99030.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Array[Byte]</text>
<text text-anchor="middle" x="18766.614" y="-99015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Array[java.lang.reflect.Constructor[_]] =&gt; ?{def filter: ?} -->
<g id="node1360" class="node">
<title>Array[java.lang.reflect.Constructor[_]] =&gt; ?{def filter: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-99098.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-99102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[java.lang.reflect.Constructor[_]] =&gt; ?{def filter: ?}</text>
<text text-anchor="middle" x="18766.614" y="-99087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- String =&gt; ?{def span: ?} -->
<g id="node1361" class="node">
<title>String =&gt; ?{def span: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-99170.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-99174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def span: ?}</text>
<text text-anchor="middle" x="18766.614" y="-99159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;TypeTree, non&#45;essential: %s (%s)&#39;) =&gt; ?{def format: ?} -->
<g id="node1362" class="node">
<title>String(&#39;TypeTree, non&#45;essential: %s (%s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-99242.8701" rx="257.2738" ry="26.7407"/>
<text text-anchor="start" x="18592.614" y="-99246.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;TypeTree, non&#45;essential: %s (%s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-99231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Reshape.this.global.FlagSet -->
<g id="node1363" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Reshape.this.global.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-99314.8701" rx="267.0729" ry="26.7407"/>
<text text-anchor="start" x="18585.614" y="-99318.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Reshape.this.global.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-99303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Constructors.this.global.Tree -->
<g id="node1364" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Constructors.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-99386.8701" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="18608.114" y="-99390.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Constructors.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-99375.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashSet[MutableSettings.this.Setting],MutableSettings.this.PrefixSetting,That] -->
<g id="node1365" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashSet[MutableSettings.this.Setting],MutableSettings.this.PrefixSetting,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-99458.8701" rx="567.6136" ry="26.7407"/>
<text text-anchor="start" x="18373.114" y="-99462.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashSet[MutableSettings.this.Setting],MutableSettings.this.PrefixSetting,That]</text>
<text text-anchor="middle" x="18766.614" y="-99447.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; scala.tools.asm.tree.InsnList -->
<g id="node1366" class="node">
<title>((Nothing, Nothing)) =&gt; scala.tools.asm.tree.InsnList</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-99530.8701" rx="219.4064" ry="26.7407"/>
<text text-anchor="start" x="18619.614" y="-99534.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; scala.tools.asm.tree.InsnList</text>
<text text-anchor="middle" x="18766.614" y="-99519.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 0ms</text>
</g>
<!-- c.NameType =&gt; ?{def +: ?} -->
<g id="node1367" class="node">
<title>c.NameType =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-99602.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="18688.114" y="-99606.6701" font-family="Times,serif" font-size="14.00" fill="#000000">c.NameType =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-99591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Scanners.this.global.Name, Int)],(Int, Scanners.this.global.Name),That] -->
<g id="node1368" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Scanners.this.global.Name, Int)],(Int, Scanners.this.global.Name),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-99674.8701" rx="463.7241" ry="26.7407"/>
<text text-anchor="start" x="18446.614" y="-99678.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Scanners.this.global.Name, Int)],(Int, Scanners.this.global.Name),That]</text>
<text text-anchor="middle" x="18766.614" y="-99663.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[TreeMakers.this.TreeMaker]],List[TreeMakers.this.TreeMaker],List[List[TreeMakers.this.TreeMaker]]] -->
<g id="node1369" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[TreeMakers.this.TreeMaker]],List[TreeMakers.this.TreeMaker],List[List[TreeMakers.this.TreeMaker]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-99746.8701" rx="605.981" ry="26.7407"/>
<text text-anchor="start" x="18346.114" y="-99750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[TreeMakers.this.TreeMaker]],List[TreeMakers.this.TreeMaker],List[List[TreeMakers.this.TreeMaker]]]</text>
<text text-anchor="middle" x="18766.614" y="-99735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- SpecializeTypes.this.global.AnnotationInfo =&gt; SpecializeTypes.this.global.Type -->
<g id="node1370" class="node">
<title>SpecializeTypes.this.global.AnnotationInfo =&gt; SpecializeTypes.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-99818.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="18545.614" y="-99822.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SpecializeTypes.this.global.AnnotationInfo =&gt; SpecializeTypes.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-99807.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.ModuleDef,That] -->
<g id="node1371" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.ModuleDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-99890.8701" rx="430.7561" ry="26.7407"/>
<text text-anchor="start" x="18470.114" y="-99894.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.ModuleDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-99879.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[BoxUnbox.this.postProcessor.bTypes.coreBTypes.bTypes.ClassBType],(tools.nsc.backend.jvm.BTypes.InternalName, scala.collection.immutable.Set[tools.nsc.backend.jvm.BTypes.InternalName]),That] -->
<g id="node1372" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[BoxUnbox.this.postProcessor.bTypes.coreBTypes.bTypes.ClassBType],(tools.nsc.backend.jvm.BTypes.InternalName, scala.collection.immutable.Set[tools.nsc.backend.jvm.BTypes.InternalName]),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-99962.8701" rx="1076.4331" ry="26.7407"/>
<text text-anchor="start" x="18013.614" y="-99966.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[BoxUnbox.this.postProcessor.bTypes.coreBTypes.bTypes.ClassBType],(tools.nsc.backend.jvm.BTypes.InternalName, scala.collection.immutable.Set[tools.nsc.backend.jvm.BTypes.InternalName]),That]</text>
<text text-anchor="middle" x="18766.614" y="-99951.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[String]) =&gt; Array[scala.tools.asm.Label] -->
<g id="node1373" class="node">
<title>(=&gt; Array[String]) =&gt; Array[scala.tools.asm.Label]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-100034.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="18623.614" y="-100038.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[String]) =&gt; Array[scala.tools.asm.Label]</text>
<text text-anchor="middle" x="18766.614" y="-100023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Parsers.this.global.Type -->
<g id="node1374" class="node">
<title>(=&gt; Unit) =&gt; Parsers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-100106.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="18662.114" y="-100110.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Parsers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-100095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- relativePath.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): ?} -->
<g id="node1375" class="node">
<title>relativePath.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-100178.8701" rx="222.9775" ry="26.7407"/>
<text text-anchor="start" x="18617.114" y="-100182.6701" font-family="Times,serif" font-size="14.00" fill="#000000">relativePath.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): ?}</text>
<text text-anchor="middle" x="18766.614" y="-100167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[DestructureTypes.this.global.Symbol],DestructureTypes.this.global.Type,List[DestructureTypes.this.global.Type]] -->
<g id="node1376" class="node">
<title>scala.collection.generic.CanBuildFrom[List[DestructureTypes.this.global.Symbol],DestructureTypes.this.global.Type,List[DestructureTypes.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-100250.8701" rx="626.4932" ry="26.7407"/>
<text text-anchor="start" x="18331.614" y="-100254.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[DestructureTypes.this.global.Symbol],DestructureTypes.this.global.Type,List[DestructureTypes.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-100239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Tree],RefChecks.this.global.Tree,List[RefChecks.this.global.Tree]] -->
<g id="node1377" class="node">
<title>scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Tree],RefChecks.this.global.Tree,List[RefChecks.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-100322.8701" rx="531.9887" ry="26.7407"/>
<text text-anchor="start" x="18398.614" y="-100326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Tree],RefChecks.this.global.Tree,List[RefChecks.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-100311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[Parsers.this.global.Tree]) =&gt; Parsers.this.global.Tree -->
<g id="node1378" class="node">
<title>(=&gt; List[Parsers.this.global.Tree]) =&gt; Parsers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-100394.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="18596.614" y="-100398.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Parsers.this.global.Tree]) =&gt; Parsers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-100383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Array[Long] =&gt; ?{def sum: ?} -->
<g id="node1379" class="node">
<title>Array[Long] =&gt; ?{def sum: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-100466.8701" rx="132.4583" ry="26.7407"/>
<text text-anchor="start" x="18681.114" y="-100470.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Long] =&gt; ?{def sum: ?}</text>
<text text-anchor="middle" x="18766.614" y="-100455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Mixin.this.global.erasure.global.Tree -->
<g id="node1380" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Mixin.this.global.erasure.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-100538.8701" rx="267.0729" ry="26.7407"/>
<text text-anchor="start" x="18585.614" y="-100542.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Mixin.this.global.erasure.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-100527.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Global.this.CompilationUnit],Global.this.Tree,That] -->
<g id="node1381" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Global.this.CompilationUnit],Global.this.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-100610.8701" rx="385.2464" ry="26.7407"/>
<text text-anchor="start" x="18502.114" y="-100614.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Global.this.CompilationUnit],Global.this.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-100599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Scanners.this.Offset) =&gt; ?{def &#45;=: ?} -->
<g id="node1382" class="node">
<title>(=&gt; Scanners.this.Offset) =&gt; ?{def &#45;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-100682.8701" rx="173.8966" ry="26.7407"/>
<text text-anchor="start" x="18651.614" y="-100686.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Scanners.this.Offset) =&gt; ?{def &#45;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-100671.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Array[Long] -->
<g id="node1383" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Array[Long]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-100754.8701" rx="172.5681" ry="26.7407"/>
<text text-anchor="start" x="18652.614" y="-100758.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Array[Long]</text>
<text text-anchor="middle" x="18766.614" y="-100743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; java.util.Properties -->
<g id="node1384" class="node">
<title>Unit =&gt; java.util.Properties</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-100826.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="18691.114" y="-100830.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; java.util.Properties</text>
<text text-anchor="middle" x="18766.614" y="-100815.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[CommonSubconditionElimination.this.ReusedCondTreeMaker] =&gt; ?{def head: ?} -->
<g id="node1385" class="node">
<title>Option[CommonSubconditionElimination.this.ReusedCondTreeMaker] =&gt; ?{def head: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-100898.8701" rx="362.0773" ry="26.7407"/>
<text text-anchor="start" x="18518.614" y="-100902.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[CommonSubconditionElimination.this.ReusedCondTreeMaker] =&gt; ?{def head: ?}</text>
<text text-anchor="middle" x="18766.614" y="-100887.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[NamesDefaults.this.global.Tree]],List[NamesDefaults.this.global.Tree],List[List[NamesDefaults.this.global.Tree]]] -->
<g id="node1386" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[NamesDefaults.this.global.Tree]],List[NamesDefaults.this.global.Tree],List[List[NamesDefaults.this.global.Tree]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-100970.8701" rx="647.9197" ry="26.7407"/>
<text text-anchor="start" x="18316.614" y="-100974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[NamesDefaults.this.global.Tree]],List[NamesDefaults.this.global.Tree],List[List[NamesDefaults.this.global.Tree]]]</text>
<text text-anchor="middle" x="18766.614" y="-100959.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.SubComponent],scala.tools.nsc.Phase,That] -->
<g id="node1387" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.SubComponent],scala.tools.nsc.Phase,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-101042.8701" rx="411.5723" ry="26.7407"/>
<text text-anchor="start" x="18483.614" y="-101046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.SubComponent],scala.tools.nsc.Phase,That]</text>
<text text-anchor="middle" x="18766.614" y="-101031.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.WHILEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1388" class="node">
<title>Scanners.this.global.nme.WHILEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-101114.8701" rx="237.6758" ry="26.7407"/>
<text text-anchor="start" x="18606.614" y="-101118.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.WHILEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-101103.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- bc.internalName.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1389" class="node">
<title>bc.internalName.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-101186.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="18662.114" y="-101190.6701" font-family="Times,serif" font-size="14.00" fill="#000000">bc.internalName.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-101175.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Fields.this.global.Symbol -->
<g id="node1390" class="node">
<title>((Nothing, Nothing)) =&gt; Fields.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-101258.8701" rx="208.693" ry="26.7407"/>
<text text-anchor="start" x="18627.114" y="-101262.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Fields.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-101247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Array[String] =&gt; ?{def toVector: ?} -->
<g id="node1391" class="node">
<title>Array[String] =&gt; ?{def toVector: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-101330.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="18667.114" y="-101334.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def toVector: ?}</text>
<text text-anchor="middle" x="18766.614" y="-101319.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(16384) =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node1392" class="node">
<title>Int(16384) =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-101402.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-101406.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(16384) =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-101391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Typers.this.global.AnnotationInfo) =&gt; Typers.this.global.Type -->
<g id="node1393" class="node">
<title>(=&gt; Typers.this.global.AnnotationInfo) =&gt; Typers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-101474.8701" rx="272.4724" ry="26.7407"/>
<text text-anchor="start" x="18582.114" y="-101478.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Typers.this.global.AnnotationInfo) =&gt; Typers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-101463.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; SuperAccessors.this.global.analyzer.global.Symbol -->
<g id="node1394" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; SuperAccessors.this.global.analyzer.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-101546.8701" rx="321.9673" ry="26.7407"/>
<text text-anchor="start" x="18547.114" y="-101550.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; SuperAccessors.this.global.analyzer.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-101535.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.util.Iterator[scala.tools.asm.tree.LocalVariableNode] =&gt; ?{def asScala: ?} -->
<g id="node1395" class="node">
<title>java.util.Iterator[scala.tools.asm.tree.LocalVariableNode] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-101618.8701" rx="317.4819" ry="26.7407"/>
<text text-anchor="start" x="18550.114" y="-101622.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.Iterator[scala.tools.asm.tree.LocalVariableNode] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-101607.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Typers.this.global.gen.global.Symbol -->
<g id="node1396" class="node">
<title>((Nothing, Nothing)) =&gt; Typers.this.global.gen.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-101690.8701" rx="254.6169" ry="26.7407"/>
<text text-anchor="start" x="18594.614" y="-101694.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Typers.this.global.gen.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-101679.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Boolean] =&gt; Array[Int] -->
<g id="node1397" class="node">
<title>Array[Boolean] =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-101762.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="18683.614" y="-101766.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Boolean] =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-101751.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- trace.type =&gt; ?{def reverse: ?} -->
<g id="node1398" class="node">
<title>trace.type =&gt; ?{def reverse: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-101834.8701" rx="132.4583" ry="26.7407"/>
<text text-anchor="start" x="18681.114" y="-101838.6701" font-family="Times,serif" font-size="14.00" fill="#000000">trace.type =&gt; ?{def reverse: ?}</text>
<text text-anchor="middle" x="18766.614" y="-101823.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (BTypesFromSymbols.this.global.Position, String)) =&gt; String -->
<g id="node1399" class="node">
<title>(=&gt; (BTypesFromSymbols.this.global.Position, String)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-101906.8701" rx="269.3154" ry="26.7407"/>
<text text-anchor="start" x="18584.114" y="-101910.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (BTypesFromSymbols.this.global.Position, String)) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-101895.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[IndexedSeq[CoreBTypesFromSymbols.this.bTypes.global.Symbol],CoreBTypesFromSymbols.this.bTypes.global.Symbol,That] -->
<g id="node1400" class="node">
<title>scala.collection.generic.CanBuildFrom[IndexedSeq[CoreBTypesFromSymbols.this.bTypes.global.Symbol],CoreBTypesFromSymbols.this.bTypes.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-101978.8701" rx="663.0324" ry="26.7407"/>
<text text-anchor="start" x="18305.614" y="-101982.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[IndexedSeq[CoreBTypesFromSymbols.this.bTypes.global.Symbol],CoreBTypesFromSymbols.this.bTypes.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-101967.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; TypeDiagnostics.this.global.Tree) =&gt; TypeDiagnostics.this.global.Type -->
<g id="node1401" class="node">
<title>(=&gt; TypeDiagnostics.this.global.Tree) =&gt; TypeDiagnostics.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-102050.8701" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="18557.614" y="-102054.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; TypeDiagnostics.this.global.Tree) =&gt; TypeDiagnostics.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-102039.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;%&#45;12s&#39;) =&gt; ?{def format: ?} -->
<g id="node1402" class="node">
<title>String(&#39;%&#45;12s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-102122.8701" rx="150.7276" ry="26.7407"/>
<text text-anchor="start" x="18668.114" y="-102126.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%&#45;12s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-102111.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- oldOwner.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1403" class="node">
<title>oldOwner.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-102194.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="18680.614" y="-102198.6701" font-family="Times,serif" font-size="14.00" fill="#000000">oldOwner.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-102183.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[java.nio.file.Path],scala.tools.nsc.classpath.ClassFileEntryImpl,That] -->
<g id="node1404" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[java.nio.file.Path],scala.tools.nsc.classpath.ClassFileEntryImpl,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-102266.8701" rx="449.0256" ry="26.7407"/>
<text text-anchor="start" x="18457.114" y="-102270.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[java.nio.file.Path],scala.tools.nsc.classpath.ClassFileEntryImpl,That]</text>
<text text-anchor="middle" x="18766.614" y="-102255.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def toInt: ?} -->
<g id="node1405" class="node">
<title>String =&gt; ?{def toInt: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-102338.8701" rx="108.375" ry="26.7407"/>
<text text-anchor="start" x="18698.114" y="-102342.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def toInt: ?}</text>
<text text-anchor="middle" x="18766.614" y="-102327.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,scala.reflect.io.AbstractFile,List[scala.reflect.io.AbstractFile]] -->
<g id="node1406" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,scala.reflect.io.AbstractFile,List[scala.reflect.io.AbstractFile]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-102410.8701" rx="438.3124" ry="26.7407"/>
<text text-anchor="start" x="18464.614" y="-102414.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,scala.reflect.io.AbstractFile,List[scala.reflect.io.AbstractFile]]</text>
<text text-anchor="middle" x="18766.614" y="-102399.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],SpecializeTypes.this.global.Type,List[SpecializeTypes.this.global.Type]] -->
<g id="node1407" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],SpecializeTypes.this.global.Type,List[SpecializeTypes.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-102482.8701" rx="599.7531" ry="26.7407"/>
<text text-anchor="start" x="18350.614" y="-102486.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],SpecializeTypes.this.global.Type,List[SpecializeTypes.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-102471.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Mixin.this.global.Select =&gt; ?{def ===: ?} -->
<g id="node1408" class="node">
<title>Mixin.this.global.Select =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-102554.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="18649.114" y="-102558.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Mixin.this.global.Select =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="18766.614" y="-102543.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Name],Option[String],List[Option[String]]] -->
<g id="node1409" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Name],Option[String],List[Option[String]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-102626.8701" rx="462.3957" ry="26.7407"/>
<text text-anchor="start" x="18447.614" y="-102630.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Name],Option[String],List[Option[String]]]</text>
<text text-anchor="middle" x="18766.614" y="-102615.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- TypeNode.this.type =&gt; ?{def typeName_=: ?} -->
<g id="node1410" class="node">
<title>TypeNode.this.type =&gt; ?{def typeName_=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-102698.8701" rx="193.0803" ry="26.7407"/>
<text text-anchor="start" x="18638.114" y="-102702.6701" font-family="Times,serif" font-size="14.00" fill="#000000">TypeNode.this.type =&gt; ?{def typeName_=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-102687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[Solver.this.Clause],List[String],Array[List[String]]] -->
<g id="node1411" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[Solver.this.Clause],List[String],Array[List[String]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-102770.8701" rx="390.146" ry="26.7407"/>
<text text-anchor="start" x="18498.614" y="-102774.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[Solver.this.Clause],List[String],Array[List[String]]]</text>
<text text-anchor="middle" x="18766.614" y="-102759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.reflect.ClassTag[List[String]] -->
<g id="node2566" class="node">
<title>scala.reflect.ClassTag[List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-102770.8701" rx="147.1565" ry="26.7407"/>
<text text-anchor="start" x="38065.3606" y="-102774.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[List[String]]</text>
<text text-anchor="middle" x="38161.3606" y="-102759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[Solver.this.Clause],List[String],Array[List[String]]]&#45;&gt;scala.reflect.ClassTag[List[String]] -->
<g id="edge19" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[Solver.this.Clause],List[String],Array[List[String]]]&#45;&gt;scala.reflect.ClassTag[List[String]]</title>
<path fill="none" stroke="#000000" d="M19157.0421,-102770.8701C21740.9144,-102770.8701 36326.3485,-102770.8701 38004.074,-102770.8701"/>
<polygon fill="#000000" stroke="#000000" points="38004.0742,-102774.3702 38014.0741,-102770.8701 38004.0741,-102767.3702 38004.0742,-102774.3702"/>
</g>
<!-- x$9.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1412" class="node">
<title>x$9.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-102842.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="18697.114" y="-102846.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$9.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-102831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Symbol],MatchApproximation.this.global.Symbol,To1] -->
<g id="node1413" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Symbol],MatchApproximation.this.global.Symbol,To1]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-102914.8701" rx="529.746" ry="26.7407"/>
<text text-anchor="start" x="18400.114" y="-102918.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Symbol],MatchApproximation.this.global.Symbol,To1]</text>
<text text-anchor="middle" x="18766.614" y="-102903.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,CallGraph.this.postProcessor.bTypes.ClassInfo] =&gt; ?{def get: ?} -->
<g id="node1414" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,CallGraph.this.postProcessor.bTypes.ClassInfo] =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-102986.8701" rx="530.1602" ry="26.7407"/>
<text text-anchor="start" x="18399.614" y="-102990.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,CallGraph.this.postProcessor.bTypes.ClassInfo] =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-102975.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; MatchTreeMaking.this.global.Symbol -->
<g id="node1415" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; MatchTreeMaking.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-103058.8701" rx="272.4724" ry="26.7407"/>
<text text-anchor="start" x="18582.114" y="-103062.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; MatchTreeMaking.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-103047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[PatternTypers.this.global.Symbol],PatternTypers.this.global.TypeSkolem,That] -->
<g id="node1416" class="node">
<title>scala.collection.generic.CanBuildFrom[List[PatternTypers.this.global.Symbol],PatternTypers.this.global.TypeSkolem,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-103130.8701" rx="490.9643" ry="26.7407"/>
<text text-anchor="start" x="18427.614" y="-103134.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[PatternTypers.this.global.Symbol],PatternTypers.this.global.TypeSkolem,That]</text>
<text text-anchor="middle" x="18766.614" y="-103119.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- str.type =&gt; ?{def takeWhile: ?} -->
<g id="node1417" class="node">
<title>str.type =&gt; ?{def takeWhile: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-103202.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="18679.114" y="-103206.6701" font-family="Times,serif" font-size="14.00" fill="#000000">str.type =&gt; ?{def takeWhile: ?}</text>
<text text-anchor="middle" x="18766.614" y="-103191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[PatternTypers.this.global.SubpatternsAttachment] -->
<g id="node1418" class="node">
<title>scala.reflect.ClassTag[PatternTypers.this.global.SubpatternsAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-103274.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="18568.114" y="-103278.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[PatternTypers.this.global.SubpatternsAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-103263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- nestedDirs.type =&gt; ?{def map: ?} -->
<g id="node1419" class="node">
<title>nestedDirs.type =&gt; ?{def map: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-103346.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="18673.114" y="-103350.6701" font-family="Times,serif" font-size="14.00" fill="#000000">nestedDirs.type =&gt; ?{def map: ?}</text>
<text text-anchor="middle" x="18766.614" y="-103335.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- MatchApproximator.this.Substitution =&gt; ?{def &gt;&gt;=: ?} -->
<g id="node1420" class="node">
<title>MatchApproximator.this.Substitution =&gt; ?{def &gt;&gt;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-103418.8701" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="18612.614" y="-103422.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchApproximator.this.Substitution =&gt; ?{def &gt;&gt;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-103407.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Extractors.this.global.TypeBounds -->
<g id="node1421" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Extractors.this.global.TypeBounds</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-103490.8701" rx="257.2738" ry="26.7407"/>
<text text-anchor="start" x="18592.614" y="-103494.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Extractors.this.global.TypeBounds</text>
<text text-anchor="middle" x="18766.614" y="-103479.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- settings.YprofileEnabled.type =&gt; ?{def unary_!: ?} -->
<g id="node1422" class="node">
<title>settings.YprofileEnabled.type =&gt; ?{def unary_!: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-103562.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="18625.114" y="-103566.6701" font-family="Times,serif" font-size="14.00" fill="#000000">settings.YprofileEnabled.type =&gt; ?{def unary_!: ?}</text>
<text text-anchor="middle" x="18766.614" y="-103551.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; TypeNode.this.type) =&gt; ?{def label_=: ?} -->
<g id="node1423" class="node">
<title>(=&gt; TypeNode.this.type) =&gt; ?{def label_=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-103634.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="18638.614" y="-103638.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; TypeNode.this.type) =&gt; ?{def label_=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-103623.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Option[NamesDefaults.this.global.ValDef]] -->
<g id="node1424" class="node">
<title>scala.reflect.ClassTag[Option[NamesDefaults.this.global.ValDef]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-103706.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="18584.614" y="-103710.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Option[NamesDefaults.this.global.ValDef]]</text>
<text text-anchor="middle" x="18766.614" y="-103695.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Int(0) =&gt; ?{def until: ?} -->
<g id="node1425" class="node">
<title>Int(0) =&gt; ?{def until: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-103778.8701" rx="106.1321" ry="26.7407"/>
<text text-anchor="start" x="18699.614" y="-103782.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(0) =&gt; ?{def until: ?}</text>
<text text-anchor="middle" x="18766.614" y="-103767.6701" font-family="Times,serif" font-size="14.00" fill="#000000">25 times = 17ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[Any],GenUtils.this.global.Tree,That] -->
<g id="node1426" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[Any],GenUtils.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-103850.8701" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="18544.114" y="-103854.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[Any],GenUtils.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-103839.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Reshape.this.global.ClassfileAnnotArg],Reshape.this.global.Tree,That] -->
<g id="node1427" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Reshape.this.global.ClassfileAnnotArg],Reshape.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-103922.8701" rx="458.4105" ry="26.7407"/>
<text text-anchor="start" x="18450.614" y="-103926.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Reshape.this.global.ClassfileAnnotArg],Reshape.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-103911.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- labelMap.type =&gt; ?{def asJava: ?} -->
<g id="node1428" class="node">
<title>labelMap.type =&gt; ?{def asJava: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-103994.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="18670.114" y="-103998.6701" font-family="Times,serif" font-size="14.00" fill="#000000">labelMap.type =&gt; ?{def asJava: ?}</text>
<text text-anchor="middle" x="18766.614" y="-103983.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[Erasure.this.global.QualTypeSymAttachment] -->
<g id="node1430" class="node">
<title>scala.reflect.ClassTag[Erasure.this.global.QualTypeSymAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-104066.8701" rx="278.7002" ry="26.7407"/>
<text text-anchor="start" x="18577.614" y="-104070.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Erasure.this.global.QualTypeSymAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-104055.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 3ms</text>
</g>
<!-- String =&gt; ?{def takeWhile: ?} -->
<g id="node1431" class="node">
<title>String =&gt; ?{def takeWhile: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-104138.8701" rx="130.2154" ry="26.7407"/>
<text text-anchor="start" x="18682.614" y="-104142.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def takeWhile: ?}</text>
<text text-anchor="middle" x="18766.614" y="-104127.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.FLOAT.type),That] -->
<g id="node1432" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.FLOAT.type),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-104210.8701" rx="449.0256" ry="26.7407"/>
<text text-anchor="start" x="18457.114" y="-104214.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.FLOAT.type),That]</text>
<text text-anchor="middle" x="18766.614" y="-104199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def split(x$1: ? &gt;: Char(&#39;.&#39;)): Array[String]} -->
<g id="node1433" class="node">
<title>String =&gt; ?{def split(x$1: ? &gt;: Char(&#39;.&#39;)): Array[String]}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-104282.8701" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="18612.614" y="-104286.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def split(x$1: ? &gt;: Char(&#39;.&#39;)): Array[String]}</text>
<text text-anchor="middle" x="18766.614" y="-104271.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Taggers.this.c.universe.definitions.ShortTpe.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1434" class="node">
<title>Taggers.this.c.universe.definitions.ShortTpe.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-104354.8701" rx="265.7444" ry="26.7407"/>
<text text-anchor="start" x="18586.614" y="-104358.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Taggers.this.c.universe.definitions.ShortTpe.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-104343.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; Unit) =&gt; BCodeBodyBuilder.this.bTypes.BType -->
<g id="node1435" class="node">
<title>(=&gt; Unit) =&gt; BCodeBodyBuilder.this.bTypes.BType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-104426.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="18620.614" y="-104430.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; BCodeBodyBuilder.this.bTypes.BType</text>
<text text-anchor="middle" x="18766.614" y="-104415.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[JavaParsers.this.global.TypeDef],JavaParsers.this.global.TypeDef,List[JavaParsers.this.global.TypeDef]] -->
<g id="node1436" class="node">
<title>scala.collection.generic.CanBuildFrom[List[JavaParsers.this.global.TypeDef],JavaParsers.this.global.TypeDef,List[JavaParsers.this.global.TypeDef]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-104498.8701" rx="589.0399" ry="26.7407"/>
<text text-anchor="start" x="18358.114" y="-104502.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[JavaParsers.this.global.TypeDef],JavaParsers.this.global.TypeDef,List[JavaParsers.this.global.TypeDef]]</text>
<text text-anchor="middle" x="18766.614" y="-104487.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],ClassfileParser.this.symbolTable.Type,That] -->
<g id="node1437" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],ClassfileParser.this.symbolTable.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-104570.8701" rx="372.7906" ry="26.7407"/>
<text text-anchor="start" x="18511.114" y="-104574.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],ClassfileParser.this.symbolTable.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-104559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Map[scala.tools.asm.tree.InvokeDynamicInsnNode,CallGraph.this.ClosureInstantiation] =&gt; ?{def +=: ?} -->
<g id="node1438" class="node">
<title>scala.collection.immutable.Map[scala.tools.asm.tree.InvokeDynamicInsnNode,CallGraph.this.ClosureInstantiation] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-104642.8701" rx="526.1749" ry="26.7407"/>
<text text-anchor="start" x="18402.614" y="-104646.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[scala.tools.asm.tree.InvokeDynamicInsnNode,CallGraph.this.ClosureInstantiation] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-104631.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Double =&gt; Long -->
<g id="node1439" class="node">
<title>Double =&gt; Long</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-104714.8701" rx="77.1494" ry="26.7407"/>
<text text-anchor="start" x="18720.114" y="-104718.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Double =&gt; Long</text>
<text text-anchor="middle" x="18766.614" y="-104703.6701" font-family="Times,serif" font-size="14.00" fill="#000000">20 times = 1ms</text>
</g>
<!-- String(&#39;This for %s, reified as This&#39;) =&gt; ?{def format: ?} -->
<g id="node1440" class="node">
<title>String(&#39;This for %s, reified as This&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-104786.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="18610.614" y="-104790.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;This for %s, reified as This&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-104775.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Throwable] =&gt; ?{def foreach: ?} -->
<g id="node1441" class="node">
<title>Array[Throwable] =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-104858.8701" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="18657.614" y="-104862.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Throwable] =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-104847.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Symbol],TypeDiagnostics.this.global.Type,List[TypeDiagnostics.this.global.Type]] -->
<g id="node1442" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Symbol],TypeDiagnostics.this.global.Type,List[TypeDiagnostics.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-104930.8701" rx="616.6942" ry="26.7407"/>
<text text-anchor="start" x="18338.614" y="-104934.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Symbol],TypeDiagnostics.this.global.Type,List[TypeDiagnostics.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-104919.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- MatchTranslation.this.CODE.SelectStart =&gt; MatchTranslation.this.global.Tree -->
<g id="node1443" class="node">
<title>MatchTranslation.this.CODE.SelectStart =&gt; MatchTranslation.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-105002.8701" rx="317.4819" ry="26.7407"/>
<text text-anchor="start" x="18550.114" y="-105006.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchTranslation.this.CODE.SelectStart =&gt; MatchTranslation.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-104991.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- List[ContextErrors.this.global.TypeBounds] =&gt; scala.collection.IterableLike[El2,Repr2] -->
<g id="node1444" class="node">
<title>List[ContextErrors.this.global.TypeBounds] =&gt; scala.collection.IterableLike[El2,Repr2]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-105074.8701" rx="352.6926" ry="26.7407"/>
<text text-anchor="start" x="18525.114" y="-105078.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[ContextErrors.this.global.TypeBounds] =&gt; scala.collection.IterableLike[El2,Repr2]</text>
<text text-anchor="middle" x="18766.614" y="-105063.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Unit =&gt; Unapplies.this.global.Type -->
<g id="node1445" class="node">
<title>Unit =&gt; Unapplies.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-105146.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="18668.614" y="-105150.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Unapplies.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-105135.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- String(&#39;java.lang.&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1446" class="node">
<title>String(&#39;java.lang.&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-105218.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="18671.114" y="-105222.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;java.lang.&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-105207.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- clauses.type =&gt; ?{def :+: ?} -->
<g id="node1447" class="node">
<title>clauses.type =&gt; ?{def :+: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-105290.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="18688.114" y="-105294.6701" font-family="Times,serif" font-size="14.00" fill="#000000">clauses.type =&gt; ?{def :+: ?}</text>
<text text-anchor="middle" x="18766.614" y="-105279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Set[Typers.this.global.Symbol] =&gt; ?{def ++=: ?} -->
<g id="node1448" class="node">
<title>scala.collection.immutable.Set[Typers.this.global.Symbol] =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-105362.8701" rx="311.6683" ry="26.7407"/>
<text text-anchor="start" x="18554.114" y="-105366.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[Typers.this.global.Symbol] =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-105351.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Typers.this.MacroExpansionAttachment] -->
<g id="node1449" class="node">
<title>scala.reflect.ClassTag[Typers.this.MacroExpansionAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-105434.8701" rx="258.6023" ry="26.7407"/>
<text text-anchor="start" x="18591.614" y="-105438.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Typers.this.MacroExpansionAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-105423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Unit =&gt; Char -->
<g id="node1450" class="node">
<title>Unit =&gt; Char</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-105506.8701" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="18726.614" y="-105510.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Char</text>
<text text-anchor="middle" x="18766.614" y="-105495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Seq[String] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node1451" class="node">
<title>Seq[String] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-105578.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="18613.114" y="-105582.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Seq[String] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-105567.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Compile failed with %d error%s; see the compiler error output for details.&#39;) =&gt; ?{def format: ?} -->
<g id="node1452" class="node">
<title>String(&#39;Compile failed with %d error%s; see the compiler error output for details.&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-105650.8701" rx="413.815" ry="26.7407"/>
<text text-anchor="start" x="18482.114" y="-105654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Compile failed with %d error%s; see the compiler error output for details.&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-105639.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.ValDef],Typers.this.global.Symbol,That] -->
<g id="node1453" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.ValDef],Typers.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-105722.8701" rx="415.1434" ry="26.7407"/>
<text text-anchor="start" x="18481.114" y="-105726.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.ValDef],Typers.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-105711.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Unit, Unit)) =&gt; LambdaLift.this.global.Symbol -->
<g id="node1454" class="node">
<title>(=&gt; (Nothing, Unit, Unit)) =&gt; LambdaLift.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-105794.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="18595.114" y="-105798.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit, Unit)) =&gt; LambdaLift.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-105783.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.VOIDkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1455" class="node">
<title>JavaScanners.this.global.javanme.VOIDkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-105866.8701" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="18588.614" y="-105870.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.VOIDkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-105855.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[T],T,List[T]] -->
<g id="node1456" class="node">
<title>scala.collection.generic.CanBuildFrom[List[T],T,List[T]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-105938.8701" rx="234.1047" ry="26.7407"/>
<text text-anchor="start" x="18609.114" y="-105942.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[T],T,List[T]]</text>
<text text-anchor="middle" x="18766.614" y="-105927.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,ClosureOptimizer.this.Local,List[ClosureOptimizer.this.Local]] -->
<g id="node1457" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,ClosureOptimizer.this.Local,List[ClosureOptimizer.this.Local]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-106010.8701" rx="446.3688" ry="26.7407"/>
<text text-anchor="start" x="18459.114" y="-106014.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,ClosureOptimizer.this.Local,List[ClosureOptimizer.this.Local]]</text>
<text text-anchor="middle" x="18766.614" y="-105999.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Quasiquotes.this.c.universe.Tree],(String, Quasiquotes.this.c.universe.Position),That] -->
<g id="node1458" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Quasiquotes.this.c.universe.Tree],(String, Quasiquotes.this.c.universe.Position),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-106082.8701" rx="512.8049" ry="26.7407"/>
<text text-anchor="start" x="18412.114" y="-106086.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Quasiquotes.this.c.universe.Tree],(String, Quasiquotes.this.c.universe.Position),That]</text>
<text text-anchor="middle" x="18766.614" y="-106071.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- String(&#39;%s has no name&#39;) =&gt; ?{def format: ?} -->
<g id="node1459" class="node">
<title>String(&#39;%s has no name&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-106154.8701" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="18640.614" y="-106158.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s has no name&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-106143.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.NATIVEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1460" class="node">
<title>JavaScanners.this.global.javanme.NATIVEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-106226.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-106230.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.NATIVEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-106215.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[InlineSourceMatcher.this.Entry] =&gt; ?{def ::=: ?} -->
<g id="node1461" class="node">
<title>List[InlineSourceMatcher.this.Entry] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-106298.8701" rx="220.7347" ry="26.7407"/>
<text text-anchor="start" x="18618.614" y="-106302.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[InlineSourceMatcher.this.Entry] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-106287.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; StringBuilder -->
<g id="node1462" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; StringBuilder</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-106370.8701" rx="197.9798" ry="26.7407"/>
<text text-anchor="start" x="18634.614" y="-106374.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; StringBuilder</text>
<text text-anchor="middle" x="18766.614" y="-106359.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Long) =&gt; Parsers.this.Offset -->
<g id="node1464" class="node">
<title>(=&gt; Long) =&gt; Parsers.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-106442.8701" rx="140.0143" ry="26.7407"/>
<text text-anchor="start" x="18675.614" y="-106446.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Long) =&gt; Parsers.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-106431.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Tree],(BCodeBodyBuilder.this.global.Tree, BCodeBodyBuilder.this.bTypes.BType),That] -->
<g id="node1465" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Tree],(BCodeBodyBuilder.this.global.Tree, BCodeBodyBuilder.this.bTypes.BType),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-106514.8701" rx="654.1476" ry="26.7407"/>
<text text-anchor="start" x="18312.114" y="-106518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Tree],(BCodeBodyBuilder.this.global.Tree, BCodeBodyBuilder.this.bTypes.BType),That]</text>
<text text-anchor="middle" x="18766.614" y="-106503.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[DependencyGraph.this.Edge],String,That] -->
<g id="node1466" class="node">
<title>scala.collection.generic.CanBuildFrom[List[DependencyGraph.this.Edge],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-106586.8701" rx="346.4646" ry="26.7407"/>
<text text-anchor="start" x="18529.614" y="-106590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[DependencyGraph.this.Edge],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-106575.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[Int],Char,Stream[Char]] -->
<g id="node1467" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[Int],Char,Stream[Char]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-106658.8701" rx="395.9596" ry="26.7407"/>
<text text-anchor="start" x="18494.614" y="-106662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[Int],Char,Stream[Char]]</text>
<text text-anchor="middle" x="18766.614" y="-106647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.TypeEnv],sym.TypeOfClonedSymbol,That] -->
<g id="node1468" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.TypeEnv],sym.TypeOfClonedSymbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-106730.8701" rx="436.0699" ry="26.7407"/>
<text text-anchor="start" x="18466.114" y="-106734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.TypeEnv],sym.TypeOfClonedSymbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-106719.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Delambdafy.this.global.mixer.NeedStaticImpl.type] -->
<g id="node1469" class="node">
<title>scala.reflect.ClassTag[Delambdafy.this.global.mixer.NeedStaticImpl.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-106802.8701" rx="300.5408" ry="26.7407"/>
<text text-anchor="start" x="18562.114" y="-106806.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Delambdafy.this.global.mixer.NeedStaticImpl.type]</text>
<text text-anchor="middle" x="18766.614" y="-106791.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.tools.asm.tree.analysis.Frame[scala.tools.asm.tree.analysis.SourceValue] =&gt; ?{def stackTop: ?} -->
<g id="node1470" class="node">
<title>scala.tools.asm.tree.analysis.Frame[scala.tools.asm.tree.analysis.SourceValue] =&gt; ?{def stackTop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-106874.8701" rx="406.6728" ry="26.7407"/>
<text text-anchor="start" x="18487.114" y="-106878.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.asm.tree.analysis.Frame[scala.tools.asm.tree.analysis.SourceValue] =&gt; ?{def stackTop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-106863.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 3ms</text>
</g>
<!-- scala.collection.immutable.Set[BoxUnbox.this.BoxConsumer] =&gt; ?{def +=: ?} -->
<g id="node1471" class="node">
<title>scala.collection.immutable.Set[BoxUnbox.this.BoxConsumer] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-106946.8701" rx="320.1388" ry="26.7407"/>
<text text-anchor="start" x="18548.114" y="-106950.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[BoxUnbox.this.BoxConsumer] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-106935.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- List[TreeAndTypeAnalysis.this.global.Symbol] =&gt; TreeAndTypeAnalysis.this.global.Type -->
<g id="node1472" class="node">
<title>List[TreeAndTypeAnalysis.this.global.Symbol] =&gt; TreeAndTypeAnalysis.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-107018.8701" rx="364.7342" ry="26.7407"/>
<text text-anchor="start" x="18516.614" y="-107022.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[TreeAndTypeAnalysis.this.global.Symbol] =&gt; TreeAndTypeAnalysis.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-107007.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Char(&#39;*&#39;) =&gt; CharSequence -->
<g id="node1473" class="node">
<title>Char(&#39;*&#39;) =&gt; CharSequence</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-107090.8701" rx="116.8455" ry="26.7407"/>
<text text-anchor="start" x="18692.114" y="-107094.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Char(&#39;*&#39;) =&gt; CharSequence</text>
<text text-anchor="middle" x="18766.614" y="-107079.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Some[(AnalyzerPlugins.this.MacroPlugin, T)] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node1474" class="node">
<title>Some[(AnalyzerPlugins.this.MacroPlugin, T)] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-107162.8701" rx="362.0773" ry="26.7407"/>
<text text-anchor="start" x="18518.614" y="-107166.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Some[(AnalyzerPlugins.this.MacroPlugin, T)] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-107151.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unapplies.this.CODE.SelectStart =&gt; Unapplies.this.global.Tree -->
<g id="node1475" class="node">
<title>Unapplies.this.CODE.SelectStart =&gt; Unapplies.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-107234.8701" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="18592.114" y="-107238.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unapplies.this.CODE.SelectStart =&gt; Unapplies.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-107223.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Errors.this.global.Symbol],String,That] -->
<g id="node1476" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Errors.this.global.Symbol],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-107306.8701" rx="335.7515" ry="26.7407"/>
<text text-anchor="start" x="18537.114" y="-107310.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Errors.this.global.Symbol],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-107295.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 8ms</text>
</g>
<!-- scala.reflect.io.Path =&gt; tools.nsc.io.File -->
<g id="node1477" class="node">
<title>scala.reflect.io.Path =&gt; tools.nsc.io.File</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-107378.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="18657.114" y="-107382.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.io.Path =&gt; tools.nsc.io.File</text>
<text text-anchor="middle" x="18766.614" y="-107367.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Creating new `this` during tailcalls\n &#160;method: %s\n &#160;current class: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node1478" class="node">
<title>String(&#39;Creating new `this` during tailcalls\n &#160;method: %s\n &#160;current class: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-107471.8701" rx="173.8966" ry="48.1667"/>
<text text-anchor="middle" x="18766.614" y="-107490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Creating new `this` during tailcalls</text>
<text text-anchor="middle" x="18766.614" y="-107475.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;method: %s</text>
<text text-anchor="start" x="18651.614" y="-107460.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;current class: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-107445.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Option[BCodeSkelBuilder.this.global.AnnotationInfo] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node1479" class="node">
<title>Option[BCodeSkelBuilder.this.global.AnnotationInfo] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-107564.8701" rx="391.9745" ry="26.7407"/>
<text text-anchor="start" x="18497.614" y="-107568.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[BCodeSkelBuilder.this.global.AnnotationInfo] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-107553.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;verdict: inlined as %s&#39;) =&gt; ?{def format: ?} -->
<g id="node1480" class="node">
<title>String(&#39;verdict: inlined as %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-107636.8701" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="18626.614" y="-107640.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;verdict: inlined as %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-107625.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Parsers.this.global.ValDef],Parsers.this.global.ValDef,List[Parsers.this.global.ValDef]] -->
<g id="node1481" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Parsers.this.global.ValDef],Parsers.this.global.ValDef,List[Parsers.this.global.ValDef]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-107708.8701" rx="520.3612" ry="26.7407"/>
<text text-anchor="start" x="18406.614" y="-107712.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Parsers.this.global.ValDef],Parsers.this.global.ValDef,List[Parsers.this.global.ValDef]]</text>
<text text-anchor="middle" x="18766.614" y="-107697.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; SymbolTables.this.global.Tree -->
<g id="node1482" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; SymbolTables.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-107780.8701" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="18587.614" y="-107784.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; SymbolTables.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-107769.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; TreeGen.this.global.Tree -->
<g id="node1483" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; TreeGen.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-107852.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-107856.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; TreeGen.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-107841.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; TreeDSL.this.global.gen.global.Symbol -->
<g id="node1484" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; TreeDSL.this.global.gen.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-107924.8701" rx="277.786" ry="26.7407"/>
<text text-anchor="start" x="18578.114" y="-107928.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; TreeDSL.this.global.gen.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-107913.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Equals] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node1485" class="node">
<title>List[Equals] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-107996.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="18610.614" y="-108000.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Equals] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-107985.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Validators.this.global.AnnotationInfo =&gt; Validators.this.global.Type -->
<g id="node1486" class="node">
<title>Validators.this.global.AnnotationInfo =&gt; Validators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-108068.8701" rx="277.786" ry="26.7407"/>
<text text-anchor="start" x="18578.114" y="-108072.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Validators.this.global.AnnotationInfo =&gt; Validators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-108057.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: scala.tools.nsc.backend.jvm.analysis.NullnessValue] -->
<g id="node1487" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: scala.tools.nsc.backend.jvm.analysis.NullnessValue]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-108140.8701" rx="485.5648" ry="26.7407"/>
<text text-anchor="start" x="18431.114" y="-108144.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: scala.tools.nsc.backend.jvm.analysis.NullnessValue]</text>
<text text-anchor="middle" x="18766.614" y="-108129.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Long =&gt; Scanners.this.Offset -->
<g id="node1488" class="node">
<title>Long =&gt; Scanners.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-108212.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="18685.114" y="-108216.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Long =&gt; Scanners.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-108201.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[CoreBTypesFromSymbols.this.bTypes.global.Symbol,CoreBTypesFromSymbols.this.bTypes.global.TermSymbol],(CoreBTypesFromSymbols.this.bTypes.global.TermSymbol, CoreBTypesFromSymbols.this.bTypes.PrimitiveBType),Map[CoreBTypesFromSymbols.this.bTypes.global.Symbol,CoreBTypesFromSymbols.this.bTypes.PrimitiveBType]] -->
<g id="node1489" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[CoreBTypesFromSymbols.this.bTypes.global.Symbol,CoreBTypesFromSymbols.this.bTypes.global.TermSymbol],(CoreBTypesFromSymbols.this.bTypes.global.TermSymbol, CoreBTypesFromSymbols.this.bTypes.PrimitiveBType),Map[CoreBTypesFromSymbols.this.bTypes.global.Symbol,CoreBTypesFromSymbols.this.bTypes.PrimitiveBType]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-108284.8701" rx="1659.6592" ry="26.7407"/>
<text text-anchor="start" x="17601.114" y="-108288.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[CoreBTypesFromSymbols.this.bTypes.global.Symbol,CoreBTypesFromSymbols.this.bTypes.global.TermSymbol],(CoreBTypesFromSymbols.this.bTypes.global.TermSymbol, CoreBTypesFromSymbols.this.bTypes.PrimitiveBType),Map[CoreBTypesFromSymbols.this.bTypes.global.Symbol,CoreBTypesFromSymbols.this.bTypes.PrimitiveBType]]</text>
<text text-anchor="middle" x="18766.614" y="-108273.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.util.Iterator[scala.tools.asm.tree.MethodNode] =&gt; ?{def asScala: ?} -->
<g id="node1490" class="node">
<title>java.util.Iterator[scala.tools.asm.tree.MethodNode] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-108356.8701" rx="293.3986" ry="26.7407"/>
<text text-anchor="start" x="18567.114" y="-108360.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.Iterator[scala.tools.asm.tree.MethodNode] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-108345.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;[Connected to compilation daemon at port %d]&#39;) =&gt; ?{def format: ?} -->
<g id="node1491" class="node">
<title>String(&#39;[Connected to compilation daemon at port %d]&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-108428.8701" rx="309.0113" ry="26.7407"/>
<text text-anchor="start" x="18556.114" y="-108432.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;[Connected to compilation daemon at port %d]&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-108417.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,CallGraph.this.postProcessor.bTypes.ClassInfo] =&gt; ?{def orThrow: ?} -->
<g id="node1492" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,CallGraph.this.postProcessor.bTypes.ClassInfo] =&gt; ?{def orThrow: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-108500.8701" rx="552.0009" ry="26.7407"/>
<text text-anchor="start" x="18384.114" y="-108504.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,CallGraph.this.postProcessor.bTypes.ClassInfo] =&gt; ?{def orThrow: ?}</text>
<text text-anchor="middle" x="18766.614" y="-108489.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- List[(Typers.this.global.Type, Typers.this.global.Symbol)] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node1493" class="node">
<title>List[(Typers.this.global.Type, Typers.this.global.Symbol)] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-108572.8701" rx="411.5723" ry="26.7407"/>
<text text-anchor="start" x="18483.614" y="-108576.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[(Typers.this.global.Type, Typers.this.global.Symbol)] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-108561.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[MatchAnalyzer.this.Test]],MatchAnalyzer.this.Not,That] -->
<g id="node1494" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[MatchAnalyzer.this.Test]],MatchAnalyzer.this.Not,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-108644.8701" rx="422.6998" ry="26.7407"/>
<text text-anchor="start" x="18475.614" y="-108648.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[MatchAnalyzer.this.Test]],MatchAnalyzer.this.Not,That]</text>
<text text-anchor="middle" x="18766.614" y="-108633.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Taggers.this.c.universe.definitions.LongTpe.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1495" class="node">
<title>Taggers.this.c.universe.definitions.LongTpe.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-108716.8701" rx="265.3302" ry="26.7407"/>
<text text-anchor="start" x="18587.114" y="-108720.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Taggers.this.c.universe.definitions.LongTpe.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-108705.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39; %s[%s]&#39;) =&gt; ?{def format: ?} -->
<g id="node1496" class="node">
<title>String(&#39; %s[%s]&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-108788.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="18662.114" y="-108792.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39; %s[%s]&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-108777.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Parsers.this.Offset -->
<g id="node1497" class="node">
<title>((Nothing, Nothing)) =&gt; Parsers.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-108860.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="18647.614" y="-108864.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Parsers.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-108849.6701" font-family="Times,serif" font-size="14.00" fill="#000000">35 times = 3ms</text>
</g>
<!-- (=&gt; List[(scala.tools.nsc.Phase, scala.tools.nsc.typechecker.TreeCheckers.SymbolTracker.PhaseMap)]) =&gt; ?{def ::=: ?} -->
<g id="node1498" class="node">
<title>(=&gt; List[(scala.tools.nsc.Phase, scala.tools.nsc.typechecker.TreeCheckers.SymbolTracker.PhaseMap)]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-108932.8701" rx="478.0084" ry="26.7407"/>
<text text-anchor="start" x="18436.614" y="-108936.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[(scala.tools.nsc.Phase, scala.tools.nsc.typechecker.TreeCheckers.SymbolTracker.PhaseMap)]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-108921.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchOptimization.this.global.CaseDef],MatchOptimization.this.global.CaseDef,List[MatchOptimization.this.global.CaseDef]] -->
<g id="node1499" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchOptimization.this.global.CaseDef],MatchOptimization.this.global.CaseDef,List[MatchOptimization.this.global.CaseDef]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-109004.8701" rx="679.5592" ry="26.7407"/>
<text text-anchor="start" x="18294.114" y="-109008.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchOptimization.this.global.CaseDef],MatchOptimization.this.global.CaseDef,List[MatchOptimization.this.global.CaseDef]]</text>
<text text-anchor="middle" x="18766.614" y="-108993.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- tree.name.type =&gt; ?{def setterName: ?} -->
<g id="node1500" class="node">
<title>tree.name.type =&gt; ?{def setterName: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-109076.8701" rx="168.0831" ry="26.7407"/>
<text text-anchor="start" x="18655.614" y="-109080.6701" font-family="Times,serif" font-size="14.00" fill="#000000">tree.name.type =&gt; ?{def setterName: ?}</text>
<text text-anchor="middle" x="18766.614" y="-109065.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Symbol],MatchApproximation.this.global.gen.global.RefTree,That] -->
<g id="node1501" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Symbol],MatchApproximation.this.global.gen.global.RefTree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-109148.8701" rx="576.0841" ry="26.7407"/>
<text text-anchor="start" x="18367.114" y="-109152.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Symbol],MatchApproximation.this.global.gen.global.RefTree,That]</text>
<text text-anchor="middle" x="18766.614" y="-109137.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- invokeArgTypes.type =&gt; ?{def indices: ?} -->
<g id="node1502" class="node">
<title>invokeArgTypes.type =&gt; ?{def indices: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-109220.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="18649.114" y="-109224.6701" font-family="Times,serif" font-size="14.00" fill="#000000">invokeArgTypes.type =&gt; ?{def indices: ?}</text>
<text text-anchor="middle" x="18766.614" y="-109209.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; DestructureTypes.this.global.Type -->
<g id="node1503" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; DestructureTypes.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-109292.8701" rx="256.8596" ry="26.7407"/>
<text text-anchor="start" x="18593.114" y="-109296.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; DestructureTypes.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-109281.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.BYTE.type),That] -->
<g id="node1504" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.BYTE.type),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-109364.8701" rx="442.7977" ry="26.7407"/>
<text text-anchor="start" x="18461.614" y="-109368.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.BYTE.type),That]</text>
<text text-anchor="middle" x="18766.614" y="-109353.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Long) =&gt; Scanners.this.Offset -->
<g id="node1505" class="node">
<title>(=&gt; Long) =&gt; Scanners.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-109436.8701" rx="147.1565" ry="26.7407"/>
<text text-anchor="start" x="18670.614" y="-109440.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Long) =&gt; Scanners.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-109425.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 0ms</text>
</g>
<!-- packageDirName.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): ?} -->
<g id="node1506" class="node">
<title>packageDirName.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-109508.8701" rx="244.818" ry="26.7407"/>
<text text-anchor="start" x="18601.614" y="-109512.6701" font-family="Times,serif" font-size="14.00" fill="#000000">packageDirName.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): ?}</text>
<text text-anchor="middle" x="18766.614" y="-109497.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Null &lt;:&lt; String -->
<g id="node1507" class="node">
<title>Null &lt;:&lt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-109580.8701" rx="71.3357" ry="26.7407"/>
<text text-anchor="start" x="18724.114" y="-109584.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Null &lt;:&lt; String</text>
<text text-anchor="middle" x="18766.614" y="-109569.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- List[scala.tools.nsc.SubComponent] =&gt; scala.collection.GenTraversableOnce[scala.tools.nsc.SubComponent] -->
<g id="node1508" class="node">
<title>List[scala.tools.nsc.SubComponent] =&gt; scala.collection.GenTraversableOnce[scala.tools.nsc.SubComponent]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-109652.8701" rx="436.0699" ry="26.7407"/>
<text text-anchor="start" x="18466.114" y="-109656.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[scala.tools.nsc.SubComponent] =&gt; scala.collection.GenTraversableOnce[scala.tools.nsc.SubComponent]</text>
<text text-anchor="middle" x="18766.614" y="-109641.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],MatchTranslation.this.global.Tree,List[MatchTranslation.this.global.Tree]] -->
<g id="node1509" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],MatchTranslation.this.global.Tree,List[MatchTranslation.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-109724.8701" rx="490.05" ry="26.7407"/>
<text text-anchor="start" x="18428.114" y="-109728.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],MatchTranslation.this.global.Tree,List[MatchTranslation.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-109713.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Namers.this.global.Symbol] =&gt; Namers.this.global.Type -->
<g id="node1510" class="node">
<title>List[Namers.this.global.Symbol] =&gt; Namers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-109796.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="18596.614" y="-109800.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Namers.this.global.Symbol] =&gt; Namers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-109785.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[DependencyGraph.this.Node],List[scala.tools.nsc.SubComponent],That] -->
<g id="node1511" class="node">
<title>scala.collection.generic.CanBuildFrom[List[DependencyGraph.this.Node],List[scala.tools.nsc.SubComponent],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-109868.8701" rx="463.7241" ry="26.7407"/>
<text text-anchor="start" x="18446.614" y="-109872.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[DependencyGraph.this.Node],List[scala.tools.nsc.SubComponent],That]</text>
<text text-anchor="middle" x="18766.614" y="-109857.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.OptimizerWarning,(scala.tools.asm.tree.ClassNode, Option[String])] =&gt; ?{def withFilter: ?} -->
<g id="node1512" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.OptimizerWarning,(scala.tools.asm.tree.ClassNode, Option[String])] =&gt; ?{def withFilter: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-109940.8701" rx="561.3856" ry="26.7407"/>
<text text-anchor="start" x="18377.614" y="-109944.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.OptimizerWarning,(scala.tools.asm.tree.ClassNode, Option[String])] =&gt; ?{def withFilter: ?}</text>
<text text-anchor="middle" x="18766.614" y="-109929.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Class[_]] -->
<g id="node1513" class="node">
<title>scala.reflect.ClassTag[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-110012.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="18679.614" y="-110016.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-110001.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 4ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; MarkupParsers.this.Offset -->
<g id="node1514" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; MarkupParsers.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-110084.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="18599.614" y="-110088.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; MarkupParsers.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-110073.6701" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 3ms</text>
</g>
<!-- tree.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1515" class="node">
<title>tree.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-110156.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="18697.114" y="-110160.6701" font-family="Times,serif" font-size="14.00" fill="#000000">tree.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-110145.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;)&#39;) =&gt; ?{def ::: ?} -->
<g id="node1516" class="node">
<title>String(&#39;)&#39;) =&gt; ?{def ::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-110228.8701" rx="108.375" ry="26.7407"/>
<text text-anchor="start" x="18698.114" y="-110232.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;)&#39;) =&gt; ?{def ::: ?}</text>
<text text-anchor="middle" x="18766.614" y="-110217.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 3ms</text>
</g>
<!-- Iterator[Set[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest]] =&gt; ?{def flatten: ?} -->
<g id="node1517" class="node">
<title>Iterator[Set[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest]] =&gt; ?{def flatten: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-6022.8701" rx="364.3201" ry="26.7407"/>
<text text-anchor="start" x="18517.114" y="-6026.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Iterator[Set[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest]] =&gt; ?{def flatten: ?}</text>
<text text-anchor="middle" x="18766.614" y="-6011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Iterator[Set[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest]] =&gt; ?{def flatten: ?}&#45;&gt;Set[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest] =&gt; scala.collection.TraversableOnce[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest] -->
<g id="edge1" class="edge">
<title>Iterator[Set[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest]] =&gt; ?{def flatten: ?}&#45;&gt;Set[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest] =&gt; scala.collection.TraversableOnce[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest]</title>
<path fill="none" stroke="#000000" d="M19130.87,-6022.8701C21480.8443,-6022.8701 34500.2611,-6022.8701 37530.8364,-6022.8701"/>
<polygon fill="#000000" stroke="#000000" points="37531.0757,-6026.3702 37541.0756,-6022.8701 37531.0756,-6019.3702 37531.0757,-6026.3702"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.ListBuffer[() =&gt; String],String,That] -->
<g id="node1518" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.ListBuffer[() =&gt; String],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-110300.8701" rx="403.5161" ry="26.7407"/>
<text text-anchor="start" x="18489.114" y="-110304.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.ListBuffer[() =&gt; String],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-110289.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Set[Reporting.this.Symbol] =&gt; ?{def +=: ?} -->
<g id="node1519" class="node">
<title>scala.collection.immutable.Set[Reporting.this.Symbol] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-110372.8701" rx="291.1561" ry="26.7407"/>
<text text-anchor="start" x="18568.614" y="-110376.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[Reporting.this.Symbol] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-110361.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[IndexedSeq[(Int, Array[Byte])],((Int, Array[Byte]), Int),That] -->
<g id="node1520" class="node">
<title>scala.collection.generic.CanBuildFrom[IndexedSeq[(Int, Array[Byte])],((Int, Array[Byte]), Int),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-110444.8701" rx="403.1017" ry="26.7407"/>
<text text-anchor="start" x="18489.614" y="-110448.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[IndexedSeq[(Int, Array[Byte])],((Int, Array[Byte]), Int),That]</text>
<text text-anchor="middle" x="18766.614" y="-110433.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Long -->
<g id="node1521" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Long</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-110516.8701" rx="180.1247" ry="26.7407"/>
<text text-anchor="start" x="18647.114" y="-110520.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Long</text>
<text text-anchor="middle" x="18766.614" y="-110505.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeMakers.this.TreeMaker],TreeMakers.this.TreeMaker,List[TreeMakers.this.TreeMaker]] -->
<g id="node1522" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeMakers.this.TreeMaker],TreeMakers.this.TreeMaker,List[TreeMakers.this.TreeMaker]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-110588.8701" rx="542.2018" ry="26.7407"/>
<text text-anchor="start" x="18391.114" y="-110592.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeMakers.this.TreeMaker],TreeMakers.this.TreeMaker,List[TreeMakers.this.TreeMaker]]</text>
<text text-anchor="middle" x="18766.614" y="-110577.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;UnprefixedAttribute&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType -->
<g id="node1523" class="node">
<title>String(&#39;UnprefixedAttribute&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-110660.8701" rx="408.9155" ry="26.7407"/>
<text text-anchor="start" x="18485.614" y="-110664.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;UnprefixedAttribute&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</text>
<text text-anchor="middle" x="18766.614" y="-110649.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;nested free ref: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node1524" class="node">
<title>String(&#39;nested free ref: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-110732.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="18634.114" y="-110736.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;nested free ref: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-110721.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Taggers.this.c.universe.definitions.NothingTpe.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1525" class="node">
<title>Taggers.this.c.universe.definitions.NothingTpe.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-110804.8701" rx="276.4575" ry="26.7407"/>
<text text-anchor="start" x="18579.114" y="-110808.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Taggers.this.c.universe.definitions.NothingTpe.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-110793.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[java.net.URL],String,That] -->
<g id="node1526" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[java.net.URL],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-110876.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="18571.114" y="-110880.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[java.net.URL],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-110865.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode],CopyProp.this.ProducedValue,scala.collection.TraversableOnce[CopyProp.this.ProducedValue]] -->
<g id="node1527" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode],CopyProp.this.ProducedValue,scala.collection.TraversableOnce[CopyProp.this.ProducedValue]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-110948.8701" rx="813.7598" ry="26.7407"/>
<text text-anchor="start" x="18199.114" y="-110952.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode],CopyProp.this.ProducedValue,scala.collection.TraversableOnce[CopyProp.this.ProducedValue]]</text>
<text text-anchor="middle" x="18766.614" y="-110937.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.ClassNotFound,scala.tools.asm.tree.ClassNode] =&gt; ?{def get: ?} -->
<g id="node1528" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.ClassNotFound,scala.tools.asm.tree.ClassNode] =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-111020.8701" rx="453.011" ry="26.7407"/>
<text text-anchor="start" x="18454.114" y="-111024.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.ClassNotFound,scala.tools.asm.tree.ClassNode] =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-111009.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[Erasure.this.TypeRefAttachment] -->
<g id="node1529" class="node">
<title>scala.reflect.ClassTag[Erasure.this.TypeRefAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-111092.8701" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="18612.614" y="-111096.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Erasure.this.TypeRefAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-111081.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Symbol -->
<g id="node1530" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-111164.8701" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="18599.114" y="-111168.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-111153.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Validators.this.global.Scope =&gt; Validators.this.global.Type -->
<g id="node1531" class="node">
<title>Validators.this.global.Scope =&gt; Validators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-111236.8701" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="18603.114" y="-111240.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Validators.this.global.Scope =&gt; Validators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-111225.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.CaseDef],List[MatchTranslator.this.TreeMaker],List[List[MatchTranslator.this.TreeMaker]]] -->
<g id="node1532" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.CaseDef],List[MatchTranslator.this.TreeMaker],List[List[MatchTranslator.this.TreeMaker]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-111308.8701" rx="658.1329" ry="26.7407"/>
<text text-anchor="start" x="18309.114" y="-111312.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.CaseDef],List[MatchTranslator.this.TreeMaker],List[List[MatchTranslator.this.TreeMaker]]]</text>
<text text-anchor="middle" x="18766.614" y="-111297.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Array[Char] -->
<g id="node1533" class="node">
<title>(=&gt; Unit) =&gt; Array[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-111380.8701" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="18694.114" y="-111384.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Array[Char]</text>
<text text-anchor="middle" x="18766.614" y="-111369.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 0ms</text>
</g>
<!-- nameAndType.type =&gt; ?{def span: ?} -->
<g id="node1534" class="node">
<title>nameAndType.type =&gt; ?{def span: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-111452.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="18661.114" y="-111456.6701" font-family="Times,serif" font-size="14.00" fill="#000000">nameAndType.type =&gt; ?{def span: ?}</text>
<text text-anchor="middle" x="18766.614" y="-111441.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;name expected, but char \&#39;%s\&#39; cannot start a name&#39;) =&gt; ?{def format: ?} -->
<g id="node1535" class="node">
<title>String(&#39;name expected, but char \&#39;%s\&#39; cannot start a name&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-111524.8701" rx="316.1535" ry="26.7407"/>
<text text-anchor="start" x="18551.114" y="-111528.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;name expected, but char &#39;%s&#39; cannot start a name&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-111513.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;([^\&#39;])(_root_\\.)?scala\\.collection\\.immutable\\.&#39;) =&gt; ?{def r: ?} -->
<g id="node1536" class="node">
<title>String(&#39;([^\&#39;])(_root_\\.)?scala\\.collection\\.immutable\\.&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-111596.8701" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="18578.614" y="-111600.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;([^&#39;])(_root_\.)?scala\.collection\.immutable\.&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-111585.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Int -->
<g id="node1537" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-111668.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="18653.614" y="-111672.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-111657.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 0ms</text>
</g>
<!-- List[Typers.this.global.Tree] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node1538" class="node">
<title>List[Typers.this.global.Tree] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-111740.8701" rx="295.6413" ry="26.7407"/>
<text text-anchor="start" x="18565.614" y="-111744.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Typers.this.global.Tree] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-111729.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- str.type =&gt; ?{def drop: ?} -->
<g id="node1539" class="node">
<title>str.type =&gt; ?{def drop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-111812.8701" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="18694.614" y="-111816.6701" font-family="Times,serif" font-size="14.00" fill="#000000">str.type =&gt; ?{def drop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-111801.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Traversable[Global.this.Symbol],String,That] -->
<g id="node1540" class="node">
<title>scala.collection.generic.CanBuildFrom[Traversable[Global.this.Symbol],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-111884.8701" rx="341.5652" ry="26.7407"/>
<text text-anchor="start" x="18533.114" y="-111888.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Traversable[Global.this.Symbol],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-111873.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- args.type =&gt; ?{def drop: ?} -->
<g id="node1541" class="node">
<title>args.type =&gt; ?{def drop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-111956.8701" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="18690.114" y="-111960.6701" font-family="Times,serif" font-size="14.00" fill="#000000">args.type =&gt; ?{def drop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-111945.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; MatchAnalyzer.this.Var -->
<g id="node1542" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; MatchAnalyzer.this.Var</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-112028.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="18605.614" y="-112032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; MatchAnalyzer.this.Var</text>
<text text-anchor="middle" x="18766.614" y="-112017.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Fields.this.global.Symbol] =&gt; Fields.this.global.Type -->
<g id="node1543" class="node">
<title>List[Fields.this.global.Symbol] =&gt; Fields.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-112100.8701" rx="237.6758" ry="26.7407"/>
<text text-anchor="start" x="18606.614" y="-112104.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Fields.this.global.Symbol] =&gt; Fields.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-112089.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[java.lang.invoke.SerializedLambda] -->
<g id="node1544" class="node">
<title>scala.reflect.ClassTag[java.lang.invoke.SerializedLambda]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-112172.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="18605.614" y="-112176.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[java.lang.invoke.SerializedLambda]</text>
<text text-anchor="middle" x="18766.614" y="-112161.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[org.apache.tools.ant.types.Commandline.Argument],String,Seq[String]] -->
<g id="node1545" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[org.apache.tools.ant.types.Commandline.Argument],String,Seq[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-112244.8701" rx="461.9816" ry="26.7407"/>
<text text-anchor="start" x="18448.114" y="-112248.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[org.apache.tools.ant.types.Commandline.Argument],String,Seq[String]]</text>
<text text-anchor="middle" x="18766.614" y="-112233.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[Any]],List[Any],That] -->
<g id="node1546" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[Any]],List[Any],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-112316.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="18571.114" y="-112320.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[Any]],List[Any],That]</text>
<text text-anchor="middle" x="18766.614" y="-112305.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.OptimizerWarning,(scala.tools.asm.tree.FieldNode, tools.nsc.backend.jvm.BTypes.InternalName)] =&gt; ?{def withFilter: ?} -->
<g id="node1547" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.OptimizerWarning,(scala.tools.asm.tree.FieldNode, tools.nsc.backend.jvm.BTypes.InternalName)] =&gt; ?{def withFilter: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-112388.8701" rx="678.2308" ry="26.7407"/>
<text text-anchor="start" x="18295.114" y="-112392.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.OptimizerWarning,(scala.tools.asm.tree.FieldNode, tools.nsc.backend.jvm.BTypes.InternalName)] =&gt; ?{def withFilter: ?}</text>
<text text-anchor="middle" x="18766.614" y="-112377.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; CharSequence -->
<g id="node1548" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; CharSequence</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-112460.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-112464.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; CharSequence</text>
<text text-anchor="middle" x="18766.614" y="-112449.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.FLOATkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1549" class="node">
<title>JavaScanners.this.global.javanme.FLOATkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-112532.8701" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="18583.614" y="-112536.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.FLOATkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-112521.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Duplicators.this.global.Symbol] =&gt; Duplicators.this.global.Type -->
<g id="node1550" class="node">
<title>List[Duplicators.this.global.Symbol] =&gt; Duplicators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-112604.8701" rx="280.0286" ry="26.7407"/>
<text text-anchor="start" x="18576.614" y="-112608.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Duplicators.this.global.Symbol] =&gt; Duplicators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-112593.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Typers.this.global.CompoundTypeTreeOriginalAttachment] -->
<g id="node1551" class="node">
<title>scala.reflect.ClassTag[Typers.this.global.CompoundTypeTreeOriginalAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-112676.8701" rx="331.7662" ry="26.7407"/>
<text text-anchor="start" x="18540.114" y="-112680.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Typers.this.global.CompoundTypeTreeOriginalAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-112665.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Iterable[BCodeHelpers.this.global.Symbol],BCodeHelpers.this.global.Symbol#NameType,That] -->
<g id="node1552" class="node">
<title>scala.collection.generic.CanBuildFrom[Iterable[BCodeHelpers.this.global.Symbol],BCodeHelpers.this.global.Symbol#NameType,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-112748.8701" rx="538.6308" ry="26.7407"/>
<text text-anchor="start" x="18393.614" y="-112752.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Iterable[BCodeHelpers.this.global.Symbol],BCodeHelpers.this.global.Symbol#NameType,That]</text>
<text text-anchor="middle" x="18766.614" y="-112737.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(SyntheticMethods.this.global.TermSymbol, () =&gt; SyntheticMethods.this.global.Tree)],(SyntheticMethods.this.global.TermSymbol, () =&gt; SyntheticMethods.this.global.Tree),That] -->
<g id="node1553" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(SyntheticMethods.this.global.TermSymbol, () =&gt; SyntheticMethods.this.global.Tree)],(SyntheticMethods.this.global.TermSymbol, () =&gt; SyntheticMethods.this.global.Tree),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-112820.8701" rx="883.3528" ry="26.7407"/>
<text text-anchor="start" x="18150.114" y="-112824.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(SyntheticMethods.this.global.TermSymbol, () =&gt; SyntheticMethods.this.global.Tree)],(SyntheticMethods.this.global.TermSymbol, () =&gt; SyntheticMethods.this.global.Tree),That]</text>
<text text-anchor="middle" x="18766.614" y="-112809.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.ValDef],ExtensionMethods.this.global.Symbol,That] -->
<g id="node1554" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.ValDef],ExtensionMethods.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-112892.8701" rx="506.077" ry="26.7407"/>
<text text-anchor="start" x="18416.614" y="-112896.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.ValDef],ExtensionMethods.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-112881.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.languageFeature.implicitConversions -->
<g id="node1555" class="node">
<title>scala.languageFeature.implicitConversions</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-112964.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="18649.114" y="-112968.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.languageFeature.implicitConversions</text>
<text text-anchor="middle" x="18766.614" y="-112953.6701" font-family="Times,serif" font-size="14.00" fill="#000000">24 times = 5ms</text>
</g>
<!-- Array[String] =&gt; ?{def withFilter: ?} -->
<g id="node1556" class="node">
<title>Array[String] =&gt; ?{def withFilter: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-113036.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="18664.114" y="-113040.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def withFilter: ?}</text>
<text text-anchor="middle" x="18766.614" y="-113025.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[java.io.File],java.io.File,List[java.io.File]] -->
<g id="node1557" class="node">
<title>scala.collection.generic.CanBuildFrom[List[java.io.File],java.io.File,List[java.io.File]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-113108.8701" rx="347.379" ry="26.7407"/>
<text text-anchor="start" x="18529.114" y="-113112.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[java.io.File],java.io.File,List[java.io.File]]</text>
<text text-anchor="middle" x="18766.614" y="-113097.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Mixin.this.global.erasure.global.Tree -->
<g id="node1558" class="node">
<title>((Nothing, Nothing)) =&gt; Mixin.this.global.erasure.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-113180.8701" rx="253.2885" ry="26.7407"/>
<text text-anchor="start" x="18595.614" y="-113184.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Mixin.this.global.erasure.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-113169.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.FORSOMEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1559" class="node">
<title>Scanners.this.global.nme.FORSOMEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-113252.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="18596.614" y="-113256.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.FORSOMEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-113241.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.AbsTypeError],Typers.this.AbsTypeError,List[Typers.this.AbsTypeError]] -->
<g id="node1560" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.AbsTypeError],Typers.this.AbsTypeError,List[Typers.this.AbsTypeError]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-113324.8701" rx="519.0328" ry="26.7407"/>
<text text-anchor="start" x="18407.614" y="-113328.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.AbsTypeError],Typers.this.AbsTypeError,List[Typers.this.AbsTypeError]]</text>
<text text-anchor="middle" x="18766.614" y="-113313.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],scala.tools.nsc.ClassPathMemoryConsumptionTester.MainRetainsGlobal,That] -->
<g id="node1561" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],scala.tools.nsc.ClassPathMemoryConsumptionTester.MainRetainsGlobal,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-113396.8701" rx="644.3486" ry="26.7407"/>
<text text-anchor="start" x="18319.114" y="-113400.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],scala.tools.nsc.ClassPathMemoryConsumptionTester.MainRetainsGlobal,That]</text>
<text text-anchor="middle" x="18766.614" y="-113385.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- ex.type =&gt; ?{def DOT: ?} -->
<g id="node1562" class="node">
<title>ex.type =&gt; ?{def DOT: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-113468.8701" rx="114.6026" ry="26.7407"/>
<text text-anchor="start" x="18693.614" y="-113472.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ex.type =&gt; ?{def DOT: ?}</text>
<text text-anchor="middle" x="18766.614" y="-113457.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Mixin.this.global.Tree],Mixin.this.global.Tree,List[Mixin.this.global.Tree]] -->
<g id="node1563" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Mixin.this.global.Tree],Mixin.this.global.Tree,List[Mixin.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-113540.8701" rx="477.0942" ry="26.7407"/>
<text text-anchor="start" x="18437.114" y="-113544.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Mixin.this.global.Tree],Mixin.this.global.Tree,List[Mixin.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-113529.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SyntheticMethods.this.global.Symbol],SyntheticMethods.this.global.Assign,That] -->
<g id="node1564" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SyntheticMethods.this.global.Symbol],SyntheticMethods.this.global.Assign,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-113612.8701" rx="500.7632" ry="26.7407"/>
<text text-anchor="start" x="18420.614" y="-113616.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SyntheticMethods.this.global.Symbol],SyntheticMethods.this.global.Assign,That]</text>
<text text-anchor="middle" x="18766.614" y="-113601.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Namers.this.global.Symbol -->
<g id="node1565" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Namers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-113684.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-113688.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Namers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-113673.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Unit)) =&gt; Int -->
<g id="node1566" class="node">
<title>(=&gt; (Nothing, Unit)) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-113756.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="18689.614" y="-113760.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit)) =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-113745.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[BCodeBodyBuilder.this.global.InlineAnnotatedAttachment] -->
<g id="node1567" class="node">
<title>scala.reflect.ClassTag[BCodeBodyBuilder.this.global.InlineAnnotatedAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-113828.8701" rx="330.852" ry="26.7407"/>
<text text-anchor="start" x="18540.614" y="-113832.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[BCodeBodyBuilder.this.global.InlineAnnotatedAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-113817.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.immutable.Set[Erasure.this.global.Symbol] =&gt; ?{def +=: ?} -->
<g id="node1568" class="node">
<title>scala.collection.immutable.Set[Erasure.this.global.Symbol] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-113900.8701" rx="309.0113" ry="26.7407"/>
<text text-anchor="start" x="18556.114" y="-113904.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[Erasure.this.global.Symbol] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-113889.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[String],(scala.tools.nsc.util.ClassPath, scala.tools.nsc.util.ClassPath),That] -->
<g id="node1569" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[String],(scala.tools.nsc.util.ClassPath, scala.tools.nsc.util.ClassPath),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-113972.8701" rx="470.4521" ry="26.7407"/>
<text text-anchor="start" x="18442.114" y="-113976.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[String],(scala.tools.nsc.util.ClassPath, scala.tools.nsc.util.ClassPath),That]</text>
<text text-anchor="middle" x="18766.614" y="-113961.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,Boolean] =&gt; ?{def orThrow: ?} -->
<g id="node1570" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,Boolean] =&gt; ?{def orThrow: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-114044.8701" rx="402.1876" ry="26.7407"/>
<text text-anchor="start" x="18490.114" y="-114048.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,Boolean] =&gt; ?{def orThrow: ?}</text>
<text text-anchor="middle" x="18766.614" y="-114033.6701" font-family="Times,serif" font-size="14.00" fill="#000000">17 times = 10ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],DocComments.this.TermName,That] -->
<g id="node1571" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],DocComments.this.TermName,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-114116.8701" rx="357.5922" ry="26.7407"/>
<text text-anchor="start" x="18521.614" y="-114120.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],DocComments.this.TermName,That]</text>
<text text-anchor="middle" x="18766.614" y="-114105.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[AccessorSynthesis.this.global.TermSymbol] -->
<g id="node1572" class="node">
<title>scala.reflect.ClassTag[AccessorSynthesis.this.global.TermSymbol]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-114188.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="37977.8606" y="-114192.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[AccessorSynthesis.this.global.TermSymbol]</text>
<text text-anchor="middle" x="38161.3606" y="-114177.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;.*\\$anonfun\\$.*\\$\\d+\\$adapted&#39;) =&gt; ?{def r: ?} -->
<g id="node1573" class="node">
<title>String(&#39;.*\\$anonfun\\$.*\\$\\d+\\$adapted&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-114260.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="18617.614" y="-114264.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;.*\$anonfun\$.*\$\d+\$adapted&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-114249.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Map[BCodeSkelBuilder.this.global.Symbol,scala.tools.asm.Label]) =&gt; ?{def +=: ?} -->
<g id="node1574" class="node">
<title>(=&gt; scala.collection.immutable.Map[BCodeSkelBuilder.this.global.Symbol,scala.tools.asm.Label]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-114332.8701" rx="463.7241" ry="26.7407"/>
<text text-anchor="start" x="18446.614" y="-114336.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Map[BCodeSkelBuilder.this.global.Symbol,scala.tools.asm.Label]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-114321.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; List[Typers.this.global.Tree] -->
<g id="node1575" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; List[Typers.this.global.Tree]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-114404.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-114408.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; List[Typers.this.global.Tree]</text>
<text text-anchor="middle" x="18766.614" y="-114393.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Char -->
<g id="node1576" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Char</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-114476.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="18658.114" y="-114480.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Char</text>
<text text-anchor="middle" x="18766.614" y="-114465.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- files.type =&gt; ?{def foreach: ?} -->
<g id="node1577" class="node">
<title>files.type =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-114548.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-114552.6701" font-family="Times,serif" font-size="14.00" fill="#000000">files.type =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-114537.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; TreeGen.this.global.Symbol -->
<g id="node1578" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; TreeGen.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-114620.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="18610.114" y="-114624.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; TreeGen.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-114609.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Symbol#NameType,That] -->
<g id="node1579" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Symbol#NameType,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-114692.8701" rx="641.1917" ry="26.7407"/>
<text text-anchor="start" x="18321.114" y="-114696.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Symbol#NameType,That]</text>
<text text-anchor="middle" x="18766.614" y="-114681.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Infer.this.global.Scope) =&gt; Infer.this.global.Type -->
<g id="node1580" class="node">
<title>(=&gt; Infer.this.global.Scope) =&gt; Infer.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-114764.8701" rx="220.7347" ry="26.7407"/>
<text text-anchor="start" x="18618.614" y="-114768.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Infer.this.global.Scope) =&gt; Infer.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-114753.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; Array[Boolean]) =&gt; Array[AnyRef] -->
<g id="node1581" class="node">
<title>(=&gt; Array[Boolean]) =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-114836.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="18655.114" y="-114840.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Boolean]) =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-114825.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.LARROWkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1582" class="node">
<title>Scanners.this.global.nme.LARROWkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-114908.8701" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="18599.114" y="-114912.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.LARROWkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-114897.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Int, Scanners.this.global.Name) &lt;:&lt; (T, U) -->
<g id="node1583" class="node">
<title>(Int, Scanners.this.global.Name) &lt;:&lt; (T, U)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-114980.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="18646.114" y="-114984.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Int, Scanners.this.global.Name) &lt;:&lt; (T, U)</text>
<text text-anchor="middle" x="18766.614" y="-114969.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.tools.nsc.Phase] -->
<g id="node1584" class="node">
<title>scala.reflect.ClassTag[scala.tools.nsc.Phase]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-115052.8701" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="18645.114" y="-115056.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.tools.nsc.Phase]</text>
<text text-anchor="middle" x="18766.614" y="-115041.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SymbolTables.this.global.AnnotationInfo],SymbolTables.this.reifier.global.Tree,List[SymbolTables.this.reifier.global.Tree]] -->
<g id="node1585" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SymbolTables.this.global.AnnotationInfo],SymbolTables.this.reifier.global.Tree,List[SymbolTables.this.reifier.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-115124.8701" rx="666.1892" ry="26.7407"/>
<text text-anchor="start" x="18303.614" y="-115128.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SymbolTables.this.global.AnnotationInfo],SymbolTables.this.reifier.global.Tree,List[SymbolTables.this.reifier.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-115113.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;Filling in: %s (%s)&#39;) =&gt; ?{def format: ?} -->
<g id="node1586" class="node">
<title>String(&#39;Filling in: %s (%s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-115196.8701" rx="200.2225" ry="26.7407"/>
<text text-anchor="start" x="18633.114" y="-115200.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Filling in: %s (%s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-115185.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%(?:(\\d+)\\$)?([&#45;#+ 0,(\\&lt;]+)?(\\d+)?(\\.\\d+)?([tT]?[%a&#45;zA&#45;Z])?&#39;) =&gt; ?{def r: ?} -->
<g id="node1587" class="node">
<title>String(&#39;%(?:(\\d+)\\$)?([&#45;#+ 0,(\\&lt;]+)?(\\d+)?(\\.\\d+)?([tT]?[%a&#45;zA&#45;Z])?&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-115268.8701" rx="339.3225" ry="26.7407"/>
<text text-anchor="start" x="18534.614" y="-115272.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%(?:(\d+)\$)?([&#45;#+ 0,(\&lt;]+)?(\d+)?(\.\d+)?([tT]?[%a&#45;zA&#45;Z])?&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-115257.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[java.lang.invoke.MethodHandle] -->
<g id="node1588" class="node">
<title>scala.reflect.ClassTag[java.lang.invoke.MethodHandle]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-115340.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="18614.614" y="-115344.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[java.lang.invoke.MethodHandle]</text>
<text text-anchor="middle" x="18766.614" y="-115329.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[Int],PatternExpansion.this.global.Symbol,That] -->
<g id="node1589" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[Int],PatternExpansion.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-115412.8701" rx="485.5648" ry="26.7407"/>
<text text-anchor="start" x="18431.114" y="-115416.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[Int],PatternExpansion.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-115401.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[scala.tools.nsc.typechecker.TypersTracking.typingStack.Frame] =&gt; ?{def ::=: ?} -->
<g id="node1590" class="node">
<title>List[scala.tools.nsc.typechecker.TypersTracking.typingStack.Frame] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-115484.8701" rx="342.8936" ry="26.7407"/>
<text text-anchor="start" x="18532.114" y="-115488.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[scala.tools.nsc.typechecker.TypersTracking.typingStack.Frame] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-115473.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Parsers.this.global.Tree) =&gt; Parsers.this.global.Apply -->
<g id="node1591" class="node">
<title>(=&gt; Parsers.this.global.Tree) =&gt; Parsers.this.global.Apply</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-115556.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="18607.114" y="-115560.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Parsers.this.global.Tree) =&gt; Parsers.this.global.Apply</text>
<text text-anchor="middle" x="18766.614" y="-115545.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.math.Ordering[Int] -->
<g id="node1592" class="node">
<title>scala.math.Ordering[Int]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-42478.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="38093.3606" y="-42482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.math.Ordering[Int]</text>
<text text-anchor="middle" x="38161.3606" y="-42467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 11ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; java.io.FileDescriptor -->
<g id="node1593" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; java.io.FileDescriptor</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-115628.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="18628.114" y="-115632.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; java.io.FileDescriptor</text>
<text text-anchor="middle" x="18766.614" y="-115617.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.tools.nsc.reporters.Reporter] -->
<g id="node1594" class="node">
<title>scala.reflect.ClassTag[scala.tools.nsc.reporters.Reporter]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-115700.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-115704.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.tools.nsc.reporters.Reporter]</text>
<text text-anchor="middle" x="18766.614" y="-115689.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- java.util.Set[scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def asScala: ?} -->
<g id="node1595" class="node">
<title>java.util.Set[scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-115772.8701" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="18565.114" y="-115776.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.Set[scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-115761.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Long =&gt; String -->
<g id="node1596" class="node">
<title>Long =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-115844.8701" rx="72.25" ry="26.7407"/>
<text text-anchor="start" x="18723.614" y="-115848.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Long =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-115833.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Symbol],LambdaLift.this.global.TermSymbol,List[LambdaLift.this.global.Symbol]] -->
<g id="node1597" class="node">
<title>scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Symbol],LambdaLift.this.global.TermSymbol,List[LambdaLift.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-115916.8701" rx="603.7384" ry="26.7407"/>
<text text-anchor="start" x="18347.614" y="-115920.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Symbol],LambdaLift.this.global.TermSymbol,List[LambdaLift.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-115905.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Fields.this.global.Scope =&gt; Fields.this.global.Type -->
<g id="node1598" class="node">
<title>Fields.this.global.Scope =&gt; Fields.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-115988.8701" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="18626.614" y="-115992.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Fields.this.global.Scope =&gt; Fields.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-115977.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;%s != %s&#39;) =&gt; ?{def format: ?} -->
<g id="node1599" class="node">
<title>String(&#39;%s != %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-116060.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="18658.114" y="-116064.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s != %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-116049.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- name.type =&gt; ?{def +: ?} -->
<g id="node1600" class="node">
<title>name.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-116132.8701" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="18694.614" y="-116136.6701" font-family="Times,serif" font-size="14.00" fill="#000000">name.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-116121.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Ident],RefChecks.this.global.Tree with Serializable,That] -->
<g id="node1601" class="node">
<title>scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Ident],RefChecks.this.global.Tree with Serializable,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-116204.8701" rx="492.2927" ry="26.7407"/>
<text text-anchor="start" x="18426.614" y="-116208.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Ident],RefChecks.this.global.Tree with Serializable,That]</text>
<text text-anchor="middle" x="18766.614" y="-116193.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeCheckers.this.global.MemberDef],(TreeCheckers.this.global.MemberDef, Int),That] -->
<g id="node1602" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeCheckers.this.global.MemberDef],(TreeCheckers.this.global.MemberDef, Int),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-116276.8701" rx="527.5033" ry="26.7407"/>
<text text-anchor="start" x="18401.614" y="-116280.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeCheckers.this.global.MemberDef],(TreeCheckers.this.global.MemberDef, Int),That]</text>
<text text-anchor="middle" x="18766.614" y="-116265.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Symbol],LambdaLift.this.global.ValDef,That] -->
<g id="node1603" class="node">
<title>scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Symbol],LambdaLift.this.global.ValDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-116348.8701" rx="454.8394" ry="26.7407"/>
<text text-anchor="start" x="18453.114" y="-116352.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Symbol],LambdaLift.this.global.ValDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-116337.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[List[MatchOptimizer.this.Tree]] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node1604" class="node">
<title>List[List[MatchOptimizer.this.Tree]] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-116420.8701" rx="328.1951" ry="26.7407"/>
<text text-anchor="start" x="18542.614" y="-116424.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[List[MatchOptimizer.this.Tree]] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-116409.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Mixin.this.NeedStaticImpl.type] -->
<g id="node1605" class="node">
<title>scala.reflect.ClassTag[Mixin.this.NeedStaticImpl.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-116492.8701" rx="224.72" ry="26.7407"/>
<text text-anchor="start" x="18615.614" y="-116496.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Mixin.this.NeedStaticImpl.type]</text>
<text text-anchor="middle" x="18766.614" y="-116481.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[scala.tools.nsc.ClassPathMemoryConsumptionTester.MainRetainsGlobal],Boolean,That] -->
<g id="node1606" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[scala.tools.nsc.ClassPathMemoryConsumptionTester.MainRetainsGlobal],Boolean,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-116564.8701" rx="665.275" ry="26.7407"/>
<text text-anchor="start" x="18304.114" y="-116568.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[scala.tools.nsc.ClassPathMemoryConsumptionTester.MainRetainsGlobal],Boolean,That]</text>
<text text-anchor="middle" x="18766.614" y="-116553.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; Set[Reifiers.this.global.TermName]) =&gt; ?{def +=: ?} -->
<g id="node1607" class="node">
<title>(=&gt; Set[Reifiers.this.global.TermName]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-116636.8701" rx="238.0901" ry="26.7407"/>
<text text-anchor="start" x="18606.114" y="-116640.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Set[Reifiers.this.global.TermName]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-116625.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int =&gt; ?{def *=: ?} -->
<g id="node1608" class="node">
<title>Int =&gt; ?{def *=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-116708.8701" rx="88.2768" ry="26.7407"/>
<text text-anchor="start" x="18712.114" y="-116712.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; ?{def *=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-116697.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%s%s references %s %s.&#39;) =&gt; ?{def format: ?} -->
<g id="node1609" class="node">
<title>String(&#39;%s%s references %s %s.&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-116780.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="18616.114" y="-116784.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s%s references %s %s.&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-116769.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$10.type =&gt; ?{def filterNot: ?} -->
<g id="node1610" class="node">
<title>x$10.type =&gt; ?{def filterNot: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-116852.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="18677.114" y="-116856.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$10.type =&gt; ?{def filterNot: ?}</text>
<text text-anchor="middle" x="18766.614" y="-116841.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- t.type =&gt; ?{def +: ?} -->
<g id="node1611" class="node">
<title>t.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-116924.8701" rx="94.5053" ry="26.7407"/>
<text text-anchor="start" x="18707.614" y="-116928.6701" font-family="Times,serif" font-size="14.00" fill="#000000">t.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-116913.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.ast.parser.BracePair],String,That] -->
<g id="node1612" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.ast.parser.BracePair],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-116996.8701" rx="371.4623" ry="26.7407"/>
<text text-anchor="start" x="18512.114" y="-117000.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.ast.parser.BracePair],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-116985.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- dname.type =&gt; ?{def getterName: ?} -->
<g id="node1613" class="node">
<title>dname.type =&gt; ?{def getterName: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-117068.8701" rx="156.9554" ry="26.7407"/>
<text text-anchor="start" x="18663.614" y="-117072.6701" font-family="Times,serif" font-size="14.00" fill="#000000">dname.type =&gt; ?{def getterName: ?}</text>
<text text-anchor="middle" x="18766.614" y="-117057.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Int] -->
<g id="node1614" class="node">
<title>scala.reflect.ClassTag[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-117140.8701" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="18694.614" y="-117144.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Int]</text>
<text text-anchor="middle" x="18766.614" y="-117129.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 5ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Symbol],(MatchApproximation.this.global.Symbol, MatchApproximation.this.global.Tree),That] -->
<g id="node1615" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Symbol],(MatchApproximation.this.global.Symbol, MatchApproximation.this.global.Tree),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-117212.8701" rx="690.6867" ry="26.7407"/>
<text text-anchor="start" x="18286.114" y="-117216.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Symbol],(MatchApproximation.this.global.Symbol, MatchApproximation.this.global.Tree),That]</text>
<text text-anchor="middle" x="18766.614" y="-117201.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Reshape.this.global.Symbol, Reshape.this.global.ValOrDefDef) &lt;:&lt; (T, U) -->
<g id="node1616" class="node">
<title>(Reshape.this.global.Symbol, Reshape.this.global.ValOrDefDef) &lt;:&lt; (T, U)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-117284.8701" rx="306.3546" ry="26.7407"/>
<text text-anchor="start" x="18558.114" y="-117288.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Reshape.this.global.Symbol, Reshape.this.global.ValOrDefDef) &lt;:&lt; (T, U)</text>
<text text-anchor="middle" x="18766.614" y="-117273.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[java.net.URL],java.net.URL,That] -->
<g id="node1617" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[java.net.URL],java.net.URL,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-117356.8701" rx="316.1535" ry="26.7407"/>
<text text-anchor="start" x="18551.114" y="-117360.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[java.net.URL],java.net.URL,That]</text>
<text text-anchor="middle" x="18766.614" y="-117345.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Taggers.this.c.universe.definitions.DoubleTpe.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1618" class="node">
<title>Taggers.this.c.universe.definitions.DoubleTpe.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-117428.8701" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="18581.614" y="-117432.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Taggers.this.c.universe.definitions.DoubleTpe.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-117417.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;trimmed %s inlineable free defs from its symbol table: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node1619" class="node">
<title>String(&#39;trimmed %s inlineable free defs from its symbol table: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-117500.8701" rx="353.6068" ry="26.7407"/>
<text text-anchor="start" x="18524.614" y="-117504.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;trimmed %s inlineable free defs from its symbol table: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-117489.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;candidate implicit %s is shadowed by %s&#39;) =&gt; ?{def format: ?} -->
<g id="node1620" class="node">
<title>String(&#39;candidate implicit %s is shadowed by %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-117572.8701" rx="287.1707" ry="26.7407"/>
<text text-anchor="start" x="18571.614" y="-117576.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;candidate implicit %s is shadowed by %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-117561.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.Set[Delambdafy.this.global.Symbol]) =&gt; ?{def +=: ?} -->
<g id="node1621" class="node">
<title>(=&gt; scala.collection.Set[Delambdafy.this.global.Symbol]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-117644.8701" rx="303.1977" ry="26.7407"/>
<text text-anchor="start" x="18560.114" y="-117648.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.Set[Delambdafy.this.global.Symbol]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-117633.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchApproximator.this.TreeMaker],MatchApproximator.this.Prop,Iterable[MatchApproximator.this.Prop]] -->
<g id="node1622" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchApproximator.this.TreeMaker],MatchApproximator.this.Prop,Iterable[MatchApproximator.this.Prop]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-117716.8701" rx="605.981" ry="26.7407"/>
<text text-anchor="start" x="18346.114" y="-117720.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchApproximator.this.TreeMaker],MatchApproximator.this.Prop,Iterable[MatchApproximator.this.Prop]]</text>
<text text-anchor="middle" x="18766.614" y="-117705.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[FormatInterpolator.this.c.universe.treeInfo.global.Tree] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node1623" class="node">
<title>List[FormatInterpolator.this.c.universe.treeInfo.global.Tree] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-117788.8701" rx="417.3861" ry="26.7407"/>
<text text-anchor="start" x="18479.614" y="-117792.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[FormatInterpolator.this.c.universe.treeInfo.global.Tree] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-117777.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Seq[org.apache.tools.ant.types.Commandline.Argument] =&gt; ?{def ++=: ?} -->
<g id="node1624" class="node">
<title>Seq[org.apache.tools.ant.types.Commandline.Argument] =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-117860.8701" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="18559.114" y="-117864.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Seq[org.apache.tools.ant.types.Commandline.Argument] =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-117849.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MixinOverrideError$3],String,That] -->
<g id="node1625" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MixinOverrideError$3],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-117932.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="18545.614" y="-117936.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MixinOverrideError$3],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-117921.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.IFkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1626" class="node">
<title>Scanners.this.global.nme.IFkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-118004.8701" rx="214.9209" ry="26.7407"/>
<text text-anchor="start" x="18622.614" y="-118008.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.IFkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-117993.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Namers.this.global.Type],Namers.this.global.Type,That] -->
<g id="node1627" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Namers.this.global.Type],Namers.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-118076.8701" rx="403.5161" ry="26.7407"/>
<text text-anchor="start" x="18489.114" y="-118080.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Namers.this.global.Type],Namers.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-118065.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; scala.tools.asm.tree.AbstractInsnNode -->
<g id="node1628" class="node">
<title>(=&gt; Unit) =&gt; scala.tools.asm.tree.AbstractInsnNode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-118148.8701" rx="214.007" ry="26.7407"/>
<text text-anchor="start" x="18623.114" y="-118152.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; scala.tools.asm.tree.AbstractInsnNode</text>
<text text-anchor="middle" x="18766.614" y="-118137.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.typechecker.ContextMode.ConstructorSuffix.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1629" class="node">
<title>scala.tools.nsc.typechecker.ContextMode.ConstructorSuffix.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-118220.8701" rx="326.8668" ry="26.7407"/>
<text text-anchor="start" x="18543.614" y="-118224.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.ContextMode.ConstructorSuffix.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-118209.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],T,That] -->
<g id="node1630" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],T,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-118292.8701" rx="366.0628" ry="26.7407"/>
<text text-anchor="start" x="18515.614" y="-118296.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],T,That]</text>
<text text-anchor="middle" x="18766.614" y="-118281.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Checkable.this.global.Type] =&gt; scala.collection.IterableLike[El2,Repr2] -->
<g id="node1631" class="node">
<title>List[Checkable.this.global.Type] =&gt; scala.collection.IterableLike[El2,Repr2]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-118364.8701" rx="309.9257" ry="26.7407"/>
<text text-anchor="start" x="18555.614" y="-118368.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Checkable.this.global.Type] =&gt; scala.collection.IterableLike[El2,Repr2]</text>
<text text-anchor="middle" x="18766.614" y="-118353.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.FINALkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1632" class="node">
<title>Scanners.this.global.nme.FINALkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-118436.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-118440.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.FINALkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-118425.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1633" class="node">
<title>String =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-118508.8701" rx="98.9899" ry="26.7407"/>
<text text-anchor="start" x="18704.614" y="-118512.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-118497.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Type],BTypesFromSymbols.this.global.Type,That] -->
<g id="node1634" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Type],BTypesFromSymbols.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-118580.8701" rx="512.8049" ry="26.7407"/>
<text text-anchor="start" x="18412.114" y="-118584.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Type],BTypesFromSymbols.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-118569.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- CleanUp.this.global.gen.global.RefTree =&gt; ?{def APPLY: ?} -->
<g id="node1635" class="node">
<title>CleanUp.this.global.gen.global.RefTree =&gt; ?{def APPLY: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-118652.8701" rx="251.0458" ry="26.7407"/>
<text text-anchor="start" x="18597.114" y="-118656.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CleanUp.this.global.gen.global.RefTree =&gt; ?{def APPLY: ?}</text>
<text text-anchor="middle" x="18766.614" y="-118641.6701" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 2ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.scalaPrimitives.global.Symbol -->
<g id="node1636" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.scalaPrimitives.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-118724.8701" rx="363.4058" ry="26.7407"/>
<text text-anchor="start" x="18517.614" y="-118728.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.scalaPrimitives.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-118713.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; scala.reflect.io.File -->
<g id="node1637" class="node">
<title>String =&gt; scala.reflect.io.File</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-118796.8701" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="18685.614" y="-118800.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; scala.reflect.io.File</text>
<text text-anchor="middle" x="18766.614" y="-118785.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 5ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.global.definitions.CharClass.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1638" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.global.definitions.CharClass.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-118868.8701" rx="357.5922" ry="26.7407"/>
<text text-anchor="start" x="18521.614" y="-118872.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.global.definitions.CharClass.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-118857.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ExplicitOuter.this.global.Symbol],String,Any] -->
<g id="node1639" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ExplicitOuter.this.global.Symbol],String,Any]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-118940.8701" rx="362.9917" ry="26.7407"/>
<text text-anchor="start" x="18518.114" y="-118944.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ExplicitOuter.this.global.Symbol],String,Any]</text>
<text text-anchor="middle" x="18766.614" y="-118929.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.THROWkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1640" class="node">
<title>JavaScanners.this.global.javanme.THROWkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-119012.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-119016.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.THROWkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-119001.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Duplicators.this.global.AnnotationInfo =&gt; Duplicators.this.global.Type -->
<g id="node1641" class="node">
<title>Duplicators.this.global.AnnotationInfo =&gt; Duplicators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-119084.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="18571.114" y="-119088.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Duplicators.this.global.AnnotationInfo =&gt; Duplicators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-119073.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.ArrayBuffer[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)],SymbolTables.this.global.ValDef,scala.collection.TraversableOnce[SymbolTables.this.global.Tree]] -->
<g id="node1642" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.ArrayBuffer[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)],SymbolTables.this.global.ValDef,scala.collection.TraversableOnce[SymbolTables.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-119156.8701" rx="994.3843" ry="26.7407"/>
<text text-anchor="start" x="18071.614" y="-119160.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.ArrayBuffer[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)],SymbolTables.this.global.ValDef,scala.collection.TraversableOnce[SymbolTables.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-119145.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 15ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Iterable[Option[Infer.this.global.Type]],Infer.this.global.Type,Iterable[Infer.this.global.Type]] -->
<g id="node1643" class="node">
<title>scala.collection.generic.CanBuildFrom[Iterable[Option[Infer.this.global.Type]],Infer.this.global.Type,Iterable[Infer.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-119228.8701" rx="529.746" ry="26.7407"/>
<text text-anchor="start" x="18400.114" y="-119232.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Iterable[Option[Infer.this.global.Type]],Infer.this.global.Type,Iterable[Infer.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-119217.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[Any]],Int,Seq[Int]] -->
<g id="node1644" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[Any]],Int,Seq[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-119300.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-119304.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[Any]],Int,Seq[Int]]</text>
<text text-anchor="middle" x="18766.614" y="-119289.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],Int,That] -->
<g id="node1645" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],Int,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-119372.8701" rx="246.5607" ry="26.7407"/>
<text text-anchor="start" x="18600.114" y="-119376.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],Int,That]</text>
<text text-anchor="middle" x="18766.614" y="-119361.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[AnyRef] =&gt; ?{def foreach: ?} -->
<g id="node1646" class="node">
<title>Array[AnyRef] =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-119444.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="18665.614" y="-119448.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[AnyRef] =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-119433.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- formatStr.type =&gt; ?{def format: ?} -->
<g id="node1647" class="node">
<title>formatStr.type =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-119516.8701" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="18669.114" y="-119520.6701" font-family="Times,serif" font-size="14.00" fill="#000000">formatStr.type =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-119505.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- jvmargs.type =&gt; ?{def isEmpty: ?} -->
<g id="node1648" class="node">
<title>jvmargs.type =&gt; ?{def isEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-119588.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="18668.614" y="-119592.6701" font-family="Times,serif" font-size="14.00" fill="#000000">jvmargs.type =&gt; ?{def isEmpty: ?}</text>
<text text-anchor="middle" x="18766.614" y="-119577.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;compiler version&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1649" class="node">
<title>String(&#39;compiler version&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-119660.8701" rx="173.8966" ry="26.7407"/>
<text text-anchor="start" x="18651.614" y="-119664.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;compiler version&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-119649.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]],MatchAnalyzer.this.CounterExample,That] -->
<g id="node1650" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]],MatchAnalyzer.this.CounterExample,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-119732.8701" rx="733.0395" ry="26.7407"/>
<text text-anchor="start" x="18256.114" y="-119736.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]],MatchAnalyzer.this.CounterExample,That]</text>
<text text-anchor="middle" x="18766.614" y="-119721.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],String,PrefixSetting.this.T] -->
<g id="node1651" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],String,PrefixSetting.this.T]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-119804.8701" rx="317.4819" ry="26.7407"/>
<text text-anchor="start" x="18550.114" y="-119808.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],String,PrefixSetting.this.T]</text>
<text text-anchor="middle" x="18766.614" y="-119793.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[TypeDiagnostics.this.global.Symbol]) =&gt; TypeDiagnostics.this.global.Type -->
<g id="node1652" class="node">
<title>(=&gt; List[TypeDiagnostics.this.global.Symbol]) =&gt; TypeDiagnostics.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-119876.8701" rx="340.651" ry="26.7407"/>
<text text-anchor="start" x="18533.614" y="-119880.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[TypeDiagnostics.this.global.Symbol]) =&gt; TypeDiagnostics.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-119865.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Enclosures.this.universe.analyzer.OpenImplicit],Enclosures.this.ImplicitCandidate,List[Enclosures.this.ImplicitCandidate]] -->
<g id="node1653" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Enclosures.this.universe.analyzer.OpenImplicit],Enclosures.this.ImplicitCandidate,List[Enclosures.this.ImplicitCandidate]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-119948.8701" rx="659.9613" ry="26.7407"/>
<text text-anchor="start" x="18308.114" y="-119952.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Enclosures.this.universe.analyzer.OpenImplicit],Enclosures.this.ImplicitCandidate,List[Enclosures.this.ImplicitCandidate]]</text>
<text text-anchor="middle" x="18766.614" y="-119937.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[global.analyzer.Context],global.analyzer.global.Tree,That] -->
<g id="node1654" class="node">
<title>scala.collection.generic.CanBuildFrom[List[global.analyzer.Context],global.analyzer.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-120020.8701" rx="410.2439" ry="26.7407"/>
<text text-anchor="start" x="18484.614" y="-120024.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[global.analyzer.Context],global.analyzer.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-120009.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- (=&gt; Flatten.this.global.Scope) =&gt; Flatten.this.global.Type -->
<g id="node1655" class="node">
<title>(=&gt; Flatten.this.global.Scope) =&gt; Flatten.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-120092.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="18607.114" y="-120096.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Flatten.this.global.Scope) =&gt; Flatten.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-120081.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; String) =&gt; Scanners.this.Offset -->
<g id="node1656" class="node">
<title>(=&gt; String) =&gt; Scanners.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-120164.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="18668.614" y="-120168.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; String) =&gt; Scanners.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-120153.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; java.awt.Component -->
<g id="node1657" class="node">
<title>((Nothing, Nothing)) =&gt; java.awt.Component</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-120236.8701" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="18640.614" y="-120240.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; java.awt.Component</text>
<text text-anchor="middle" x="18766.614" y="-120225.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Unit =&gt; FormatInterpolator.this.c.universe.FlagSet -->
<g id="node1658" class="node">
<title>Unit =&gt; FormatInterpolator.this.c.universe.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-120308.8701" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="18626.614" y="-120312.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; FormatInterpolator.this.c.universe.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-120297.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Iterator[String] =&gt; ?{def mkLines: ?} -->
<g id="node1659" class="node">
<title>Iterator[String] =&gt; ?{def mkLines: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-120380.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="18662.614" y="-120384.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Iterator[String] =&gt; ?{def mkLines: ?}</text>
<text text-anchor="middle" x="18766.614" y="-120369.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[AnyRef] =&gt; ?{def take: ?} -->
<g id="node1660" class="node">
<title>Array[AnyRef] =&gt; ?{def take: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-120452.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="18674.614" y="-120456.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[AnyRef] =&gt; ?{def take: ?}</text>
<text text-anchor="middle" x="18766.614" y="-120441.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; SuperAccessors.this.global.analyzer.global.Symbol -->
<g id="node1661" class="node">
<title>((Nothing, Nothing)) =&gt; SuperAccessors.this.global.analyzer.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-120524.8701" rx="307.6829" ry="26.7407"/>
<text text-anchor="start" x="18557.114" y="-120528.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; SuperAccessors.this.global.analyzer.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-120513.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[CompilerCommand.this.settings.Setting],Int,That] -->
<g id="node1662" class="node">
<title>scala.collection.generic.CanBuildFrom[List[CompilerCommand.this.settings.Setting],Int,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-120596.8701" rx="379.0185" ry="26.7407"/>
<text text-anchor="start" x="18506.614" y="-120600.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[CompilerCommand.this.settings.Setting],Int,That]</text>
<text text-anchor="middle" x="18766.614" y="-120585.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: V] -->
<g id="node1663" class="node">
<title>((Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: V]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-120668.8701" rx="277.786" ry="26.7407"/>
<text text-anchor="start" x="18578.114" y="-120672.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: V]</text>
<text text-anchor="middle" x="18766.614" y="-120657.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Class[_]],scala.tools.nsc.plugins.Plugin,List[scala.tools.nsc.plugins.Plugin]] -->
<g id="node1664" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Class[_]],scala.tools.nsc.plugins.Plugin,List[scala.tools.nsc.plugins.Plugin]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-120740.8701" rx="476.68" ry="26.7407"/>
<text text-anchor="start" x="18437.614" y="-120744.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Class[_]],scala.tools.nsc.plugins.Plugin,List[scala.tools.nsc.plugins.Plugin]]</text>
<text text-anchor="middle" x="18766.614" y="-120729.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Elem&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType -->
<g id="node1665" class="node">
<title>String(&#39;Elem&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-120812.8701" rx="352.6926" ry="26.7407"/>
<text text-anchor="start" x="18525.114" y="-120816.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Elem&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</text>
<text text-anchor="middle" x="18766.614" y="-120801.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Int] =&gt; Array[AnyRef] -->
<g id="node1666" class="node">
<title>Array[Int] =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-120884.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="18685.114" y="-120888.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Int] =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-120873.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- ((Nothing, Any =&gt; Nothing)) =&gt; String -->
<g id="node1667" class="node">
<title>((Nothing, Any =&gt; Nothing)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-120956.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="18657.114" y="-120960.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Any =&gt; Nothing)) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-120945.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Array[Float] =&gt; Array[CNF.this.Clause] -->
<g id="node1668" class="node">
<title>Array[Float] =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-121028.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="18655.114" y="-121032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Float] =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-121017.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ScalaLogic.this.global.Type],TreesAndTypesDomain.this.Sym,That] -->
<g id="node1669" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ScalaLogic.this.global.Type],TreesAndTypesDomain.this.Sym,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-121100.8701" rx="450.3541" ry="26.7407"/>
<text text-anchor="start" x="18456.114" y="-121104.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ScalaLogic.this.global.Type],TreesAndTypesDomain.this.Sym,That]</text>
<text text-anchor="middle" x="18766.614" y="-121089.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Long]) =&gt; Array[CNF.this.Clause] -->
<g id="node1670" class="node">
<title>(=&gt; Array[Long]) =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-121172.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="18640.114" y="-121176.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Long]) =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-121161.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Macros.this.global.Symbol],Int,scala.collection.TraversableOnce[Int]] -->
<g id="node1671" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Macros.this.global.Symbol],Int,scala.collection.TraversableOnce[Int]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-121244.8701" rx="455.2536" ry="26.7407"/>
<text text-anchor="start" x="18452.614" y="-121248.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Macros.this.global.Symbol],Int,scala.collection.TraversableOnce[Int]]</text>
<text text-anchor="middle" x="18766.614" y="-121233.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- String(&#39;Member %s of mixin %s is missing a concrete super implementation.&#39;) =&gt; ?{def format: ?} -->
<g id="node1672" class="node">
<title>String(&#39;Member %s of mixin %s is missing a concrete super implementation.&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-121316.8701" rx="398.2023" ry="26.7407"/>
<text text-anchor="start" x="18493.114" y="-121320.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Member %s of mixin %s is missing a concrete super implementation.&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-121305.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchOptimization.this.global.Symbol],MatchOptimization.this.global.ValDef,List[CommonSubconditionElimination.this.Tree]] -->
<g id="node1673" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchOptimization.this.global.Symbol],MatchOptimization.this.global.ValDef,List[CommonSubconditionElimination.this.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-121388.8701" rx="687.1156" ry="26.7407"/>
<text text-anchor="start" x="18288.614" y="-121392.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchOptimization.this.global.Symbol],MatchOptimization.this.global.ValDef,List[CommonSubconditionElimination.this.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-121377.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Boolean -->
<g id="node1674" class="node">
<title>Unit =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-121460.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="18719.614" y="-121464.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-121449.6701" font-family="Times,serif" font-size="14.00" fill="#000000">51 times = 18ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[AnalyzerPlugins.this.MacroPlugin],(AnalyzerPlugins.this.MacroPlugin, Option[T]),That] -->
<g id="node1675" class="node">
<title>scala.collection.generic.CanBuildFrom[List[AnalyzerPlugins.this.MacroPlugin],(AnalyzerPlugins.this.MacroPlugin, Option[T]),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-121532.8701" rx="529.746" ry="26.7407"/>
<text text-anchor="start" x="18400.114" y="-121536.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[AnalyzerPlugins.this.MacroPlugin],(AnalyzerPlugins.this.MacroPlugin, Option[T]),That]</text>
<text text-anchor="middle" x="18766.614" y="-121521.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Symbol],String,That] -->
<g id="node1676" class="node">
<title>scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Symbol],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-121604.8701" rx="353.6068" ry="26.7407"/>
<text text-anchor="start" x="18524.614" y="-121608.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Symbol],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-121593.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; UnCurry.this.global.analyzer.global.Symbol -->
<g id="node1677" class="node">
<title>((Nothing, Nothing)) =&gt; UnCurry.this.global.analyzer.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-121676.8701" rx="280.943" ry="26.7407"/>
<text text-anchor="start" x="18576.114" y="-121680.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; UnCurry.this.global.analyzer.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-121665.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; TypingTransformers.this.global.analyzer.global.Symbol -->
<g id="node1678" class="node">
<title>((Nothing, Nothing)) =&gt; TypingTransformers.this.global.analyzer.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-121748.8701" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="18544.114" y="-121752.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; TypingTransformers.this.global.analyzer.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-121737.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;sym.accessBoundary(sym.owner)&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1679" class="node">
<title>String(&#39;sym.accessBoundary(sym.owner)&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-121820.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="18605.614" y="-121824.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;sym.accessBoundary(sym.owner)&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-121809.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Char]) =&gt; Array[AnyRef] -->
<g id="node1680" class="node">
<title>(=&gt; Array[Char]) =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-121892.8701" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="18664.614" y="-121896.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Char]) =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-121881.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[DocComments.this.Symbol],(DocComments.this.Type, Boolean),List[(DocComments.this.Type, Boolean)]] -->
<g id="node1681" class="node">
<title>scala.collection.generic.CanBuildFrom[List[DocComments.this.Symbol],(DocComments.this.Type, Boolean),List[(DocComments.this.Type, Boolean)]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-121964.8701" rx="605.0669" ry="26.7407"/>
<text text-anchor="start" x="18346.614" y="-121968.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[DocComments.this.Symbol],(DocComments.this.Type, Boolean),List[(DocComments.this.Type, Boolean)]]</text>
<text text-anchor="middle" x="18766.614" y="-121953.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Scanners.this.global.nme.CASEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1682" class="node">
<title>Scanners.this.global.nme.CASEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-122036.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-122040.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.CASEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-122025.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[(Contexts.this.global.Symbol, Contexts.this.global.Type)]) =&gt; ?{def ::=: ?} -->
<g id="node1683" class="node">
<title>(=&gt; List[(Contexts.this.global.Symbol, Contexts.this.global.Type)]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-122108.8701" rx="340.651" ry="26.7407"/>
<text text-anchor="start" x="18533.614" y="-122112.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[(Contexts.this.global.Symbol, Contexts.this.global.Type)]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-122097.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; List[ClassfileParser.this.symbolTable.Type] -->
<g id="node1684" class="node">
<title>((Nothing, Nothing)) =&gt; List[ClassfileParser.this.symbolTable.Type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-122180.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="18577.114" y="-122184.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; List[ClassfileParser.this.symbolTable.Type]</text>
<text text-anchor="middle" x="18766.614" y="-122169.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- SyntheticMethods.this.global.nme.CASE_ACCESSOR.type =&gt; ?{def +: ?} -->
<g id="node1685" class="node">
<title>SyntheticMethods.this.global.nme.CASE_ACCESSOR.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-122252.8701" rx="305.4403" ry="26.7407"/>
<text text-anchor="start" x="18558.614" y="-122256.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SyntheticMethods.this.global.nme.CASE_ACCESSOR.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-122241.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Object] -->
<g id="node1686" class="node">
<title>(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Object]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-122324.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="18605.614" y="-122328.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Object]</text>
<text text-anchor="middle" x="18766.614" y="-122313.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- SyntheticMethods.this.global.definitions.Any_toString.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1687" class="node">
<title>SyntheticMethods.this.global.definitions.Any_toString.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-122396.8701" rx="306.3546" ry="26.7407"/>
<text text-anchor="start" x="18558.114" y="-122400.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SyntheticMethods.this.global.definitions.Any_toString.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-122385.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.LinkedHashMap[ToolBoxGlobal.this.FreeTermSymbol,ToolBoxGlobal.this.TermName],ToolBoxGlobal.this.TermSymbol,That] -->
<g id="node1688" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.LinkedHashMap[ToolBoxGlobal.this.FreeTermSymbol,ToolBoxGlobal.this.TermName],ToolBoxGlobal.this.TermSymbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-122468.8701" rx="762.9364" ry="26.7407"/>
<text text-anchor="start" x="18235.114" y="-122472.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.LinkedHashMap[ToolBoxGlobal.this.FreeTermSymbol,ToolBoxGlobal.this.TermName],ToolBoxGlobal.this.TermSymbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-122457.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Short]) =&gt; Array[CNF.this.Clause] -->
<g id="node1689" class="node">
<title>(=&gt; Array[Short]) =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-122540.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="18639.614" y="-122544.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Short]) =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-122529.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Tree],LambdaLift.this.global.Tree,That] -->
<g id="node1690" class="node">
<title>scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Tree],LambdaLift.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-122612.8701" rx="431.1703" ry="26.7407"/>
<text text-anchor="start" x="18469.614" y="-122616.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Tree],LambdaLift.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-122601.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,BTypesFromSymbols.this.global.Symbol,List[BTypesFromSymbols.this.global.Symbol]] -->
<g id="node1691" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,BTypesFromSymbols.this.global.Symbol,List[BTypesFromSymbols.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-122684.8701" rx="548.0155" ry="26.7407"/>
<text text-anchor="start" x="18387.114" y="-122688.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,BTypesFromSymbols.this.global.Symbol,List[BTypesFromSymbols.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-122673.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[String],String,That] -->
<g id="node1692" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[String],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-122756.8701" rx="258.6023" ry="26.7407"/>
<text text-anchor="start" x="18591.614" y="-122760.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[String],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-122745.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Unit =&gt; Parsers.this.Location -->
<g id="node1693" class="node">
<title>Unit =&gt; Parsers.this.Location</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-122828.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="18685.114" y="-122832.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Parsers.this.Location</text>
<text text-anchor="middle" x="18766.614" y="-122817.6701" font-family="Times,serif" font-size="14.00" fill="#000000">24 times = 3ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.Symbol -->
<g id="node1694" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-122900.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-122904.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-122889.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Macros.this.global.Symbol],(Macros.this.global.Symbol, Macros.this.global.Type),That] -->
<g id="node1695" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Macros.this.global.Symbol],(Macros.this.global.Symbol, Macros.this.global.Type),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-122972.8701" rx="528.8318" ry="26.7407"/>
<text text-anchor="start" x="18400.614" y="-122976.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Macros.this.global.Symbol],(Macros.this.global.Symbol, Macros.this.global.Type),That]</text>
<text text-anchor="middle" x="18766.614" y="-122961.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Tree],(BCodeBodyBuilder.this.global.Tree, BCodeBodyBuilder.this.global.Symbol),That] -->
<g id="node1696" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Tree],(BCodeBodyBuilder.this.global.Tree, BCodeBodyBuilder.this.global.Symbol),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-123044.8701" rx="654.1476" ry="26.7407"/>
<text text-anchor="start" x="18312.114" y="-123048.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Tree],(BCodeBodyBuilder.this.global.Tree, BCodeBodyBuilder.this.global.Symbol),That]</text>
<text text-anchor="middle" x="18766.614" y="-123033.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest],scala.tools.asm.tree.MethodNode,That] -->
<g id="node1697" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest],scala.tools.asm.tree.MethodNode,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-123116.8701" rx="561.3856" ry="26.7407"/>
<text text-anchor="start" x="18377.614" y="-123120.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest],scala.tools.asm.tree.MethodNode,That]</text>
<text text-anchor="middle" x="18766.614" y="-123105.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[SpecializeTypes.this.global.Symbol,SpecializeTypes.this.global.Type],(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type),SpecializeTypes.this.TypeEnv] -->
<g id="node1698" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[SpecializeTypes.this.global.Symbol,SpecializeTypes.this.global.Type],(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type),SpecializeTypes.this.TypeEnv]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-123188.8701" rx="968.9726" ry="26.7407"/>
<text text-anchor="start" x="18089.614" y="-123192.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[SpecializeTypes.this.global.Symbol,SpecializeTypes.this.global.Type],(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Type),SpecializeTypes.this.TypeEnv]</text>
<text text-anchor="middle" x="18766.614" y="-123177.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- String(&#39;ProcInstr&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType -->
<g id="node1699" class="node">
<title>String(&#39;ProcInstr&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-123260.8701" rx="365.6484" ry="26.7407"/>
<text text-anchor="start" x="18516.114" y="-123264.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;ProcInstr&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</text>
<text text-anchor="middle" x="18766.614" y="-123249.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.FORkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1700" class="node">
<title>Scanners.this.global.nme.FORkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-123332.8701" rx="224.72" ry="26.7407"/>
<text text-anchor="start" x="18615.614" y="-123336.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.FORkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-123321.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ToolBoxGlobal.this.FreeTermSymbol],() =&gt; Any,That] -->
<g id="node1701" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ToolBoxGlobal.this.FreeTermSymbol],() =&gt; Any,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-123404.8701" rx="400.445" ry="26.7407"/>
<text text-anchor="start" x="18491.614" y="-123408.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ToolBoxGlobal.this.FreeTermSymbol],() =&gt; Any,That]</text>
<text text-anchor="middle" x="18766.614" y="-123393.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Solver.this.Clause]) =&gt; List[List[?A]] -->
<g id="node1702" class="node">
<title>(=&gt; Array[Solver.this.Clause]) =&gt; List[List[?A]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-123476.8701" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="18632.114" y="-123480.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Solver.this.Clause]) =&gt; List[List[?A]]</text>
<text text-anchor="middle" x="18766.614" y="-123465.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Char(&#39;$&#39;)) =&gt; CharSequence -->
<g id="node1703" class="node">
<title>(=&gt; Char(&#39;$&#39;)) =&gt; CharSequence</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-123548.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-123552.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Char(&#39;$&#39;)) =&gt; CharSequence</text>
<text text-anchor="middle" x="18766.614" y="-123537.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Unit, Unit)) =&gt; Macros.this.global.Position -->
<g id="node1704" class="node">
<title>(=&gt; (Nothing, Unit, Unit)) =&gt; Macros.this.global.Position</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-123620.8701" rx="237.6758" ry="26.7407"/>
<text text-anchor="start" x="18606.614" y="-123624.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit, Unit)) =&gt; Macros.this.global.Position</text>
<text text-anchor="middle" x="18766.614" y="-123609.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Typers.this.Context -->
<g id="node1705" class="node">
<title>Typers.this.Context</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-123692.8701" rx="87.8629" ry="26.7407"/>
<text text-anchor="start" x="18712.614" y="-123696.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Typers.this.Context</text>
<text text-anchor="middle" x="18766.614" y="-123681.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 0ms</text>
</g>
<!-- Numeric[Long] -->
<g id="node1706" class="node">
<title>Numeric[Long]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-123764.8701" rx="72.25" ry="26.7407"/>
<text text-anchor="start" x="18723.614" y="-123768.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Numeric[Long]</text>
<text text-anchor="middle" x="18766.614" y="-123753.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Any],Errors.this.global.Position,That] -->
<g id="node1707" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Any],Errors.this.global.Position,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-123836.8701" rx="330.4379" ry="26.7407"/>
<text text-anchor="start" x="18541.114" y="-123840.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Any],Errors.this.global.Position,That]</text>
<text text-anchor="middle" x="18766.614" y="-123825.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Reshape.this.global.Symbol -->
<g id="node1708" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Reshape.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-123908.8701" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="18559.114" y="-123912.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Reshape.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-123897.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Unapplies.this.global.Tree -->
<g id="node1709" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Unapplies.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-123980.8701" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="18615.114" y="-123984.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Unapplies.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-123969.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- end.type =&gt; ?{def max: ?} -->
<g id="node1710" class="node">
<title>end.type =&gt; ?{def max: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-124052.8701" rx="116.8455" ry="26.7407"/>
<text text-anchor="start" x="18692.114" y="-124056.6701" font-family="Times,serif" font-size="14.00" fill="#000000">end.type =&gt; ?{def max: ?}</text>
<text text-anchor="middle" x="18766.614" y="-124041.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.MemberDef],TypeDiagnostics.this.global.Symbol,That] -->
<g id="node1711" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.MemberDef],TypeDiagnostics.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-124124.8701" rx="511.4765" ry="26.7407"/>
<text text-anchor="start" x="18413.114" y="-124128.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.MemberDef],TypeDiagnostics.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-124113.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;underlyingSymbol(sym)&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1712" class="node">
<title>String(&#39;underlyingSymbol(sym)&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-124196.8701" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="18631.114" y="-124200.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;underlyingSymbol(sym)&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-124185.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Taggers.this.c.universe.definitions.FloatTpe.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1713" class="node">
<title>Taggers.this.c.universe.definitions.FloatTpe.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-124268.8701" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="18587.614" y="-124272.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Taggers.this.c.universe.definitions.FloatTpe.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-124257.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; Int) =&gt; String -->
<g id="node1714" class="node">
<title>(=&gt; Int) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-124340.8701" rx="83.3772" ry="26.7407"/>
<text text-anchor="start" x="18715.614" y="-124344.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Int) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-124329.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,List[BTypes.this.ClassBType]] =&gt; ?{def orThrow: ?} -->
<g id="node1715" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,List[BTypes.this.ClassBType]] =&gt; ?{def orThrow: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-124412.8701" rx="487.3932" ry="26.7407"/>
<text text-anchor="start" x="18430.114" y="-124416.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,List[BTypes.this.ClassBType]] =&gt; ?{def orThrow: ?}</text>
<text text-anchor="middle" x="18766.614" y="-124401.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Helpers.this.global.treeInfo.global.Symbol],Helpers.this.global.Symbol,That] -->
<g id="node1716" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Helpers.this.global.treeInfo.global.Symbol],Helpers.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-124484.8701" rx="482.9079" ry="26.7407"/>
<text text-anchor="start" x="18433.114" y="-124488.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Helpers.this.global.treeInfo.global.Symbol],Helpers.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-124473.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Reshape.this.global.Tree -->
<g id="node1717" class="node">
<title>((Nothing, Nothing)) =&gt; Reshape.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-124556.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="18629.614" y="-124560.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Reshape.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-124545.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- firstLocalIndex.type =&gt; ?{def until: ?} -->
<g id="node1718" class="node">
<title>firstLocalIndex.type =&gt; ?{def until: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-124628.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="18659.614" y="-124632.6701" font-family="Times,serif" font-size="14.00" fill="#000000">firstLocalIndex.type =&gt; ?{def until: ?}</text>
<text text-anchor="middle" x="18766.614" y="-124617.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Object] -->
<g id="node1719" class="node">
<title>scala.reflect.ClassTag[Object]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-124700.8701" rx="127.9727" ry="26.7407"/>
<text text-anchor="start" x="18684.114" y="-124704.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Object]</text>
<text text-anchor="middle" x="18766.614" y="-124689.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; BrowsingLoaders.this.global.Symbol -->
<g id="node1720" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; BrowsingLoaders.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-124772.8701" rx="267.0729" ry="26.7407"/>
<text text-anchor="start" x="18585.614" y="-124776.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; BrowsingLoaders.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-124761.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; StringBuffer -->
<g id="node1721" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; StringBuffer</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-124844.8701" rx="171.6541" ry="26.7407"/>
<text text-anchor="start" x="18653.114" y="-124848.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; StringBuffer</text>
<text text-anchor="middle" x="18766.614" y="-124833.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Reshape.this.global.Symbol =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1722" class="node">
<title>Reshape.this.global.Symbol =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-124916.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="18644.614" y="-124920.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Reshape.this.global.Symbol =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-124905.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- List[Contexts.this.ImportInfo] =&gt; ?{def ::=: ?} -->
<g id="node1723" class="node">
<title>List[Contexts.this.ImportInfo] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-124988.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="18637.114" y="-124992.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Contexts.this.ImportInfo] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-124977.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Infer.this.global.Type] -->
<g id="node1724" class="node">
<title>scala.reflect.ClassTag[Infer.this.global.Type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-125060.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="18643.114" y="-125064.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Infer.this.global.Type]</text>
<text text-anchor="middle" x="18766.614" y="-125049.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Float) =&gt; String -->
<g id="node1725" class="node">
<title>(=&gt; Float) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-125132.8701" rx="92.7622" ry="26.7407"/>
<text text-anchor="start" x="18709.114" y="-125136.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Float) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-125121.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- name.type =&gt; ?{def dropModule: ?} -->
<g id="node1726" class="node">
<title>name.type =&gt; ?{def dropModule: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-125204.8701" rx="154.7129" ry="26.7407"/>
<text text-anchor="start" x="18665.114" y="-125208.6701" font-family="Times,serif" font-size="14.00" fill="#000000">name.type =&gt; ?{def dropModule: ?}</text>
<text text-anchor="middle" x="18766.614" y="-125193.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Map[String,List[String]]) =&gt; ?{def +=: ?} -->
<g id="node1727" class="node">
<title>(=&gt; scala.collection.immutable.Map[String,List[String]]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-125276.8701" rx="300.5408" ry="26.7407"/>
<text text-anchor="start" x="18562.114" y="-125280.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Map[String,List[String]]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-125265.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.CaseDef],List[MatchTranslator.this.TreeMaker],That] -->
<g id="node1728" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.CaseDef],List[MatchTranslator.this.TreeMaker],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-125348.8701" rx="506.9911" ry="26.7407"/>
<text text-anchor="start" x="18416.114" y="-125352.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.CaseDef],List[MatchTranslator.this.TreeMaker],That]</text>
<text text-anchor="middle" x="18766.614" y="-125337.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Typers.this.universe.analyzer.global.Tree -->
<g id="node1729" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Typers.this.universe.analyzer.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-125420.8701" rx="305.4403" ry="26.7407"/>
<text text-anchor="start" x="18558.614" y="-125424.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Typers.this.universe.analyzer.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-125409.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Double) =&gt; Long -->
<g id="node1730" class="node">
<title>(=&gt; Double) =&gt; Long</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-125492.8701" rx="97.6615" ry="26.7407"/>
<text text-anchor="start" x="18705.614" y="-125496.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Double) =&gt; Long</text>
<text text-anchor="middle" x="18766.614" y="-125481.6701" font-family="Times,serif" font-size="14.00" fill="#000000">20 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; java.net.Proxy -->
<g id="node1731" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; java.net.Proxy</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-125564.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="18647.614" y="-125568.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; java.net.Proxy</text>
<text text-anchor="middle" x="18766.614" y="-125553.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((List[TypeDiagnostics.this.global.Type], List[TypeDiagnostics.this.global.Type], List[TypeDiagnostics.this.global.Symbol])) =&gt; ?{def zipped: ?} -->
<g id="node1732" class="node">
<title>((List[TypeDiagnostics.this.global.Type], List[TypeDiagnostics.this.global.Type], List[TypeDiagnostics.this.global.Symbol])) =&gt; ?{def zipped: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-125636.8701" rx="579.6552" ry="26.7407"/>
<text text-anchor="start" x="18364.614" y="-125640.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((List[TypeDiagnostics.this.global.Type], List[TypeDiagnostics.this.global.Type], List[TypeDiagnostics.this.global.Symbol])) =&gt; ?{def zipped: ?}</text>
<text text-anchor="middle" x="18766.614" y="-125625.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,(CoreBTypesFromSymbols.this.bTypes.PrimitiveBType, CoreBTypesFromSymbols.this.bTypes.MethodNameAndType),Map[CoreBTypesFromSymbols.this.bTypes.BType,CoreBTypesFromSymbols.this.bTypes.MethodNameAndType]] -->
<g id="node1733" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,(CoreBTypesFromSymbols.this.bTypes.PrimitiveBType, CoreBTypesFromSymbols.this.bTypes.MethodNameAndType),Map[CoreBTypesFromSymbols.this.bTypes.BType,CoreBTypesFromSymbols.this.bTypes.MethodNameAndType]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-125708.8701" rx="1124.0996" ry="26.7407"/>
<text text-anchor="start" x="17979.614" y="-125712.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,(CoreBTypesFromSymbols.this.bTypes.PrimitiveBType, CoreBTypesFromSymbols.this.bTypes.MethodNameAndType),Map[CoreBTypesFromSymbols.this.bTypes.BType,CoreBTypesFromSymbols.this.bTypes.MethodNameAndType]]</text>
<text text-anchor="middle" x="18766.614" y="-125697.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Validators.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node1734" class="node">
<title>List[Validators.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-125780.8701" rx="321.9673" ry="26.7407"/>
<text text-anchor="start" x="18547.114" y="-125784.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Validators.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-125769.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- share.type =&gt; ?{def reverseIterator: ?} -->
<g id="node1735" class="node">
<title>share.type =&gt; ?{def reverseIterator: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-125852.8701" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="18660.114" y="-125856.6701" font-family="Times,serif" font-size="14.00" fill="#000000">share.type =&gt; ?{def reverseIterator: ?}</text>
<text text-anchor="middle" x="18766.614" y="-125841.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- nullCheck.type =&gt; ?{def AND: ?} -->
<g id="node1736" class="node">
<title>nullCheck.type =&gt; ?{def AND: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-125924.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="18671.614" y="-125928.6701" font-family="Times,serif" font-size="14.00" fill="#000000">nullCheck.type =&gt; ?{def AND: ?}</text>
<text text-anchor="middle" x="18766.614" y="-125913.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Constructors.this.global.Symbol -->
<g id="node1737" class="node">
<title>((Nothing, Nothing)) =&gt; Constructors.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-125996.8701" rx="234.1047" ry="26.7407"/>
<text text-anchor="start" x="18609.114" y="-126000.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Constructors.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-125985.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ClassfileParser.this.symbolTable.Symbol#NameType =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1738" class="node">
<title>ClassfileParser.this.symbolTable.Symbol#NameType =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-126068.8701" rx="283.5996" ry="26.7407"/>
<text text-anchor="start" x="18574.114" y="-126072.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ClassfileParser.this.symbolTable.Symbol#NameType =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-126057.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;tree position&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1739" class="node">
<title>String(&#39;tree position&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-126140.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="18664.114" y="-126144.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;tree position&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-126129.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- entry.type =&gt; ?{def isPackage: ?} -->
<g id="node1740" class="node">
<title>entry.type =&gt; ?{def isPackage: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-126212.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="18673.114" y="-126216.6701" font-family="Times,serif" font-size="14.00" fill="#000000">entry.type =&gt; ?{def isPackage: ?}</text>
<text text-anchor="middle" x="18766.614" y="-126201.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Constructors.this.global.OuterArgCanBeElided.type] -->
<g id="node1741" class="node">
<title>scala.reflect.ClassTag[Constructors.this.global.OuterArgCanBeElided.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-126284.8701" rx="303.1977" ry="26.7407"/>
<text text-anchor="start" x="18560.114" y="-126288.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Constructors.this.global.OuterArgCanBeElided.type]</text>
<text text-anchor="middle" x="18766.614" y="-126273.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],scala.reflect.internal.Variance,That] -->
<g id="node1742" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],scala.reflect.internal.Variance,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-126356.8701" rx="429.8419" ry="26.7407"/>
<text text-anchor="start" x="18470.614" y="-126360.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],scala.reflect.internal.Variance,That]</text>
<text text-anchor="middle" x="18766.614" y="-126345.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- clazz.type =&gt; ?{def +: ?} -->
<g id="node1743" class="node">
<title>clazz.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-126428.8701" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="18695.614" y="-126432.6701" font-family="Times,serif" font-size="14.00" fill="#000000">clazz.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-126417.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- (=&gt; JavaParsers.this.global.Modifiers) =&gt; ?{def |=: ?} -->
<g id="node1744" class="node">
<title>(=&gt; JavaParsers.this.global.Modifiers) =&gt; ?{def |=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-126500.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="18616.114" y="-126504.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; JavaParsers.this.global.Modifiers) =&gt; ?{def |=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-126489.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Long -->
<g id="node1745" class="node">
<title>((Nothing, Nothing)) =&gt; Long</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-126572.8701" rx="129.3012" ry="26.7407"/>
<text text-anchor="start" x="18683.114" y="-126576.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Long</text>
<text text-anchor="middle" x="18766.614" y="-126561.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Type],Implicits.this.global.Type,List[Implicits.this.global.Type]] -->
<g id="node1746" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Type],Implicits.this.global.Type,List[Implicits.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-126644.8701" rx="515.4617" ry="26.7407"/>
<text text-anchor="start" x="18410.114" y="-126648.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Type],Implicits.this.global.Type,List[Implicits.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-126633.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(55) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1747" class="node">
<title>Int(55) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-126716.8701" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="18702.114" y="-126720.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(55) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-126705.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[SpecializeTypes.this.global.Type]],scala.collection.immutable.Map[SpecializeTypes.this.global.Symbol,SpecializeTypes.this.global.Type],List[SpecializeTypes.this.TypeEnv]] -->
<g id="node1748" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[SpecializeTypes.this.global.Type]],scala.collection.immutable.Map[SpecializeTypes.this.global.Symbol,SpecializeTypes.this.global.Type],List[SpecializeTypes.this.TypeEnv]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-126788.8701" rx="881.5244" ry="26.7407"/>
<text text-anchor="start" x="18151.114" y="-126792.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[SpecializeTypes.this.global.Type]],scala.collection.immutable.Map[SpecializeTypes.this.global.Symbol,SpecializeTypes.this.global.Type],List[SpecializeTypes.this.TypeEnv]]</text>
<text text-anchor="middle" x="18766.614" y="-126777.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;&#45;D%s=true&#39;) =&gt; ?{def format: ?} -->
<g id="node1749" class="node">
<title>String(&#39;&#45;D%s=true&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-126860.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="18655.114" y="-126864.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;&#45;D%s=true&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-126849.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; scala.sys.process.ProcessLogger -->
<g id="node1750" class="node">
<title>(=&gt; Unit) =&gt; scala.sys.process.ProcessLogger</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-126932.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="18639.614" y="-126936.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; scala.sys.process.ProcessLogger</text>
<text text-anchor="middle" x="18766.614" y="-126921.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- MatchCodeGen.this.CODE.SelectStart =&gt; ?{def APPLY: ?} -->
<g id="node1751" class="node">
<title>MatchCodeGen.this.CODE.SelectStart =&gt; ?{def APPLY: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-127004.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="18599.614" y="-127008.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchCodeGen.this.CODE.SelectStart =&gt; ?{def APPLY: ?}</text>
<text text-anchor="middle" x="18766.614" y="-126993.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; Array[BCodeSkelBuilder.this.bTypes.BType]) =&gt; Array[String] -->
<g id="node1752" class="node">
<title>(=&gt; Array[BCodeSkelBuilder.this.bTypes.BType]) =&gt; Array[String]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-127076.8701" rx="277.786" ry="26.7407"/>
<text text-anchor="start" x="18578.114" y="-127080.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[BCodeSkelBuilder.this.bTypes.BType]) =&gt; Array[String]</text>
<text text-anchor="middle" x="18766.614" y="-127065.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; java.io.OutputStream -->
<g id="node1754" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; java.io.OutputStream</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-127148.8701" rx="206.4504" ry="26.7407"/>
<text text-anchor="start" x="18628.614" y="-127152.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; java.io.OutputStream</text>
<text text-anchor="middle" x="18766.614" y="-127137.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.Type,Any] -->
<g id="node1755" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.Type,Any]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-127220.8701" rx="405.7586" ry="26.7407"/>
<text text-anchor="start" x="18487.614" y="-127224.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.Type,Any]</text>
<text text-anchor="middle" x="18766.614" y="-127209.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;context.owner&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1756" class="node">
<title>String(&#39;context.owner&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-127292.8701" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="18659.114" y="-127296.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;context.owner&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-127281.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; FastTrack.this.macros.global.Symbol) =&gt; FastTrack.this.macros.global.Tree -->
<g id="node1757" class="node">
<title>(=&gt; FastTrack.this.macros.global.Symbol) =&gt; FastTrack.this.macros.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-127364.8701" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="18544.114" y="-127368.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; FastTrack.this.macros.global.Symbol) =&gt; FastTrack.this.macros.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-127353.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 1ms</text>
</g>
<!-- (=&gt; Macros.this.global.Tree) =&gt; Macros.this.global.Type -->
<g id="node1758" class="node">
<title>(=&gt; Macros.this.global.Tree) =&gt; Macros.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-127436.8701" rx="236.3475" ry="26.7407"/>
<text text-anchor="start" x="18607.614" y="-127440.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Macros.this.global.Tree) =&gt; Macros.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-127425.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$1.type =&gt; ?{def isLocalToReifee: ?} -->
<g id="node1759" class="node">
<title>x$1.type =&gt; ?{def isLocalToReifee: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-127508.8701" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="18658.614" y="-127512.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$1.type =&gt; ?{def isLocalToReifee: ?}</text>
<text text-anchor="middle" x="18766.614" y="-127497.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.asm.Type],scala.tools.asm.tree.InsnNode,That] -->
<g id="node1760" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.asm.Type],scala.tools.asm.tree.InsnNode,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-127580.8701" rx="409.3297" ry="26.7407"/>
<text text-anchor="start" x="18485.114" y="-127584.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.asm.Type],scala.tools.asm.tree.InsnNode,That]</text>
<text text-anchor="middle" x="18766.614" y="-127569.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; BCodeSkelBuilder.this.global.Symbol -->
<g id="node1761" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; BCodeSkelBuilder.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-127652.8701" rx="271.558" ry="26.7407"/>
<text text-anchor="start" x="18582.614" y="-127656.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; BCodeSkelBuilder.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-127641.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.Symbol],(MatchTranslation.this.global.Symbol, MatchTranslation.this.global.Tree),That] -->
<g id="node1762" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.Symbol],(MatchTranslation.this.global.Symbol, MatchTranslation.this.global.Tree),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-127724.8701" rx="644.3486" ry="26.7407"/>
<text text-anchor="start" x="18319.114" y="-127728.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.Symbol],(MatchTranslation.this.global.Symbol, MatchTranslation.this.global.Tree),That]</text>
<text text-anchor="middle" x="18766.614" y="-127713.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],(Typers.this.global.Symbol, Typers.this.global.Tree),That] -->
<g id="node1763" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],(Typers.this.global.Symbol, Typers.this.global.Tree),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-127796.8701" rx="519.0328" ry="26.7407"/>
<text text-anchor="start" x="18407.614" y="-127800.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],(Typers.this.global.Symbol, Typers.this.global.Tree),That]</text>
<text text-anchor="middle" x="18766.614" y="-127785.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- MatchTranslation.this.global.Apply =&gt; ?{def AND: ?} -->
<g id="node1764" class="node">
<title>MatchTranslation.this.global.Apply =&gt; ?{def AND: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-127868.8701" rx="225.6341" ry="26.7407"/>
<text text-anchor="start" x="18615.114" y="-127872.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchTranslation.this.global.Apply =&gt; ?{def AND: ?}</text>
<text text-anchor="middle" x="18766.614" y="-127857.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[scala.tools.asm.tree.TryCatchBlockNode] =&gt; ?{def asJava: ?} -->
<g id="node1765" class="node">
<title>List[scala.tools.asm.tree.TryCatchBlockNode] =&gt; ?{def asJava: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-127940.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="18583.114" y="-127944.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[scala.tools.asm.tree.TryCatchBlockNode] =&gt; ?{def asJava: ?}</text>
<text text-anchor="middle" x="18766.614" y="-127929.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Global.this.explicitOuter.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1766" class="node">
<title>Global.this.explicitOuter.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-128012.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="18640.114" y="-128016.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.explicitOuter.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-128001.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;MetaData&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType -->
<g id="node1767" class="node">
<title>String(&#39;MetaData&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-128084.8701" rx="368.3053" ry="26.7407"/>
<text text-anchor="start" x="18514.114" y="-128088.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;MetaData&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</text>
<text text-anchor="middle" x="18766.614" y="-128073.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Unit)) =&gt; TailCalls.this.global.Tree -->
<g id="node1768" class="node">
<title>(=&gt; (Nothing, Unit)) =&gt; TailCalls.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-128156.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="18628.114" y="-128160.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit)) =&gt; TailCalls.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-128145.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; java.io.File -->
<g id="node1769" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; java.io.File</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-128228.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="18656.614" y="-128232.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; java.io.File</text>
<text text-anchor="middle" x="18766.614" y="-128217.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 0ms</text>
</g>
<!-- String =&gt; ?{def padTo: ?} -->
<g id="node1770" class="node">
<title>String =&gt; ?{def padTo: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-128300.8701" rx="114.6026" ry="26.7407"/>
<text text-anchor="start" x="18693.614" y="-128304.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def padTo: ?}</text>
<text text-anchor="middle" x="18766.614" y="-128289.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- LambdaLift.this.global.Tree =&gt; LambdaLift.this.global.Type -->
<g id="node1771" class="node">
<title>LambdaLift.this.global.Tree =&gt; LambdaLift.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-128372.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="18598.114" y="-128376.6701" font-family="Times,serif" font-size="14.00" fill="#000000">LambdaLift.this.global.Tree =&gt; LambdaLift.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-128361.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; scala.tools.nsc.Settings -->
<g id="node1772" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; scala.tools.nsc.Settings</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-128444.8701" rx="271.558" ry="26.7407"/>
<text text-anchor="start" x="18582.614" y="-128448.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; scala.tools.nsc.Settings</text>
<text text-anchor="middle" x="18766.614" y="-128433.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Typers.this.global.Tree -->
<g id="node1773" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Typers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-128516.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="18623.614" y="-128520.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Typers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-128505.6701" font-family="Times,serif" font-size="14.00" fill="#000000">37 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; StringBuffer -->
<g id="node1774" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; StringBuffer</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-128588.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="18637.114" y="-128592.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; StringBuffer</text>
<text text-anchor="middle" x="18766.614" y="-128577.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[StdAttachments.this.MacroImplRefAttachment.type] -->
<g id="node1775" class="node">
<title>scala.reflect.ClassTag[StdAttachments.this.MacroImplRefAttachment.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-128660.8701" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="18559.114" y="-128664.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[StdAttachments.this.MacroImplRefAttachment.type]</text>
<text text-anchor="middle" x="18766.614" y="-128649.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 4ms</text>
</g>
<!-- x$12.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1776" class="node">
<title>x$12.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-128732.8701" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="18694.114" y="-128736.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$12.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-128721.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Set[Reifiers.this.global.TermName] =&gt; ?{def +=: ?} -->
<g id="node1777" class="node">
<title>Set[Reifiers.this.global.TermName] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-128804.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="18620.614" y="-128808.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Set[Reifiers.this.global.TermName] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-128793.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- Unit =&gt; BCodeBodyBuilder.this.bTypes.BType -->
<g id="node1778" class="node">
<title>Unit =&gt; BCodeBodyBuilder.this.bTypes.BType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-128876.8701" rx="197.0658" ry="26.7407"/>
<text text-anchor="start" x="18635.114" y="-128880.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; BCodeBodyBuilder.this.bTypes.BType</text>
<text text-anchor="middle" x="18766.614" y="-128865.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- name.type =&gt; ?{def stripPrefix: ?} -->
<g id="node1779" class="node">
<title>name.type =&gt; ?{def stripPrefix: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-128948.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="18670.114" y="-128952.6701" font-family="Times,serif" font-size="14.00" fill="#000000">name.type =&gt; ?{def stripPrefix: ?}</text>
<text text-anchor="middle" x="18766.614" y="-128937.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%s expands to %s in %s&#39;) =&gt; ?{def format: ?} -->
<g id="node1780" class="node">
<title>String(&#39;%s expands to %s in %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-129020.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="18617.614" y="-129024.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s expands to %s in %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-129009.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Symbol,That] -->
<g id="node1781" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-129092.8701" rx="489.1359" ry="26.7407"/>
<text text-anchor="start" x="18428.614" y="-129096.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-129081.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[Parsers.this.global.Tree] =&gt; scala.collection.TraversableOnce[=?Parsers.this.global.Tree] -->
<g id="node1782" class="node">
<title>Option[Parsers.this.global.Tree] =&gt; scala.collection.TraversableOnce[=?Parsers.this.global.Tree]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-129164.8701" rx="386.5749" ry="26.7407"/>
<text text-anchor="start" x="18501.114" y="-129168.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Parsers.this.global.Tree] =&gt; scala.collection.TraversableOnce[=?Parsers.this.global.Tree]</text>
<text text-anchor="middle" x="18766.614" y="-129153.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[DocComments.this.TermName],DocComments.this.Name{def next: DocComments.this.Name; type ThisNameType &gt;: DocComments.this.TermName with DocComments.this.TypeName &lt;: DocComments.this.Name},That] -->
<g id="node1783" class="node">
<title>scala.collection.generic.CanBuildFrom[List[DocComments.this.TermName],DocComments.this.Name{def next: DocComments.this.Name; type ThisNameType &gt;: DocComments.this.TermName with DocComments.this.TypeName &lt;: DocComments.this.Name},That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-129236.8701" rx="1059.9061" ry="26.7407"/>
<text text-anchor="start" x="18025.114" y="-129240.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[DocComments.this.TermName],DocComments.this.Name{def next: DocComments.this.Name; type ThisNameType &gt;: DocComments.this.TermName with DocComments.this.TypeName &lt;: DocComments.this.Name},That]</text>
<text text-anchor="middle" x="18766.614" y="-129225.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; Long -->
<g id="node1784" class="node">
<title>String =&gt; Long</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-129308.8701" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="18723.114" y="-129312.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; Long</text>
<text text-anchor="middle" x="18766.614" y="-129297.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; List[String] -->
<g id="node1785" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; List[String]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-129380.8701" rx="168.0831" ry="26.7407"/>
<text text-anchor="start" x="18655.614" y="-129384.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; List[String]</text>
<text text-anchor="middle" x="18766.614" y="-129369.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],List[SpecializeTypes.this.global.Type],List[List[SpecializeTypes.this.global.Type]]] -->
<g id="node1786" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],List[SpecializeTypes.this.global.Type],List[List[SpecializeTypes.this.global.Type]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-129452.8701" rx="642.1059" ry="26.7407"/>
<text text-anchor="start" x="18320.614" y="-129456.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],List[SpecializeTypes.this.global.Type],List[List[SpecializeTypes.this.global.Type]]]</text>
<text text-anchor="middle" x="18766.614" y="-129441.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- x$7.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1787" class="node">
<title>x$7.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-129524.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="18697.114" y="-129528.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$7.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-129513.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Position -->
<g id="node1788" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Position</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-129596.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="18598.114" y="-129600.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Position</text>
<text text-anchor="middle" x="18766.614" y="-129585.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Typers.this.SuperArgsAttachment] -->
<g id="node1789" class="node">
<title>scala.reflect.ClassTag[Typers.this.SuperArgsAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-129668.8701" rx="234.1047" ry="26.7407"/>
<text text-anchor="start" x="18609.114" y="-129672.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Typers.this.SuperArgsAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-129657.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.OptManifest[Int] -->
<g id="node1790" class="node">
<title>scala.reflect.OptManifest[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-129740.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="18685.114" y="-129744.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.OptManifest[Int]</text>
<text text-anchor="middle" x="18766.614" y="-129729.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Solver.this.Clause] =&gt; Traversable[Traversable[=?Nothing]] -->
<g id="node1791" class="node">
<title>Array[Solver.this.Clause] =&gt; Traversable[Traversable[=?Nothing]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-129812.8701" rx="271.558" ry="26.7407"/>
<text text-anchor="start" x="18582.614" y="-129816.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Solver.this.Clause] =&gt; Traversable[Traversable[=?Nothing]]</text>
<text text-anchor="middle" x="18766.614" y="-129801.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[org.apache.tools.ant.types.Commandline.Argument],org.apache.tools.ant.types.Commandline.Argument,Seq[org.apache.tools.ant.types.Commandline.Argument]] -->
<g id="node1792" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[org.apache.tools.ant.types.Commandline.Argument],org.apache.tools.ant.types.Commandline.Argument,Seq[org.apache.tools.ant.types.Commandline.Argument]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-129884.8701" rx="815.0883" ry="26.7407"/>
<text text-anchor="start" x="18198.114" y="-129888.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[org.apache.tools.ant.types.Commandline.Argument],org.apache.tools.ant.types.Commandline.Argument,Seq[org.apache.tools.ant.types.Commandline.Argument]]</text>
<text text-anchor="middle" x="18766.614" y="-129873.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],String,List[_]] -->
<g id="node1793" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],String,List[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-129956.8701" rx="338.9084" ry="26.7407"/>
<text text-anchor="start" x="18535.114" y="-129960.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],String,List[_]]</text>
<text text-anchor="middle" x="18766.614" y="-129945.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Constructors.this.global.Name =&gt; ?{def getterName: ?} -->
<g id="node1794" class="node">
<title>Constructors.this.global.Name =&gt; ?{def getterName: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-130028.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-130032.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Constructors.this.global.Name =&gt; ?{def getterName: ?}</text>
<text text-anchor="middle" x="18766.614" y="-130017.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Implicits.this.global.TypeVar],Implicits.this.global.TypeConstraint,That] -->
<g id="node1795" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Implicits.this.global.TypeVar],Implicits.this.global.TypeConstraint,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-130100.8701" rx="465.9667" ry="26.7407"/>
<text text-anchor="start" x="18445.114" y="-130104.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Implicits.this.global.TypeVar],Implicits.this.global.TypeConstraint,That]</text>
<text text-anchor="middle" x="18766.614" y="-130089.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Float =&gt; JavaScanner.this.ScanPosition -->
<g id="node1796" class="node">
<title>Float =&gt; JavaScanner.this.ScanPosition</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-130172.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="18658.114" y="-130176.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Float =&gt; JavaScanner.this.ScanPosition</text>
<text text-anchor="middle" x="18766.614" y="-130161.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[String] =&gt; ?{def ++=: ?} -->
<g id="node1797" class="node">
<title>List[String] =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-130244.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="18683.614" y="-130248.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[String] =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-130233.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Type],BTypesFromSymbols.this.BType,List[BTypesFromSymbols.this.BType]] -->
<g id="node1798" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Type],BTypesFromSymbols.this.BType,List[BTypesFromSymbols.this.BType]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-130316.8701" rx="626.4932" ry="26.7407"/>
<text text-anchor="start" x="18331.614" y="-130320.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BTypesFromSymbols.this.global.Type],BTypesFromSymbols.this.BType,List[BTypesFromSymbols.this.BType]]</text>
<text text-anchor="middle" x="18766.614" y="-130305.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol -->
<g id="node1799" class="node">
<title>((Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-130388.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="18596.614" y="-130392.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-130377.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- Array[Int] =&gt; ?{def map: ?} -->
<g id="node1800" class="node">
<title>Array[Int] =&gt; ?{def map: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-130460.8701" rx="123.0732" ry="26.7407"/>
<text text-anchor="start" x="18687.614" y="-130464.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Int] =&gt; ?{def map: ?}</text>
<text text-anchor="middle" x="18766.614" y="-130449.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; SpecializeTypes.this.TypeEnv -->
<g id="node1801" class="node">
<title>((Nothing, Nothing)) =&gt; SpecializeTypes.this.TypeEnv</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-130532.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="18614.614" y="-130536.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; SpecializeTypes.this.TypeEnv</text>
<text text-anchor="middle" x="18766.614" y="-130521.6701" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 1ms</text>
</g>
<!-- String(&#39;\n(Note that %s does not match %s%s)&#39;) =&gt; ?{def format: ?} -->
<g id="node1802" class="node">
<title>String(&#39;\n(Note that %s does not match %s%s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-130614.8701" rx="243.4897" ry="37.4533"/>
<text text-anchor="middle" x="18766.614" y="-130626.1701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;</text>
<text text-anchor="start" x="18602.614" y="-130611.1701" font-family="Times,serif" font-size="14.00" fill="#000000">(Note that %s does not match %s%s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-130596.1701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Map[scala.tools.asm.tree.MethodInsnNode,CallGraph.this.Callsite]) =&gt; ?{def +=: ?} -->
<g id="node1803" class="node">
<title>(=&gt; scala.collection.immutable.Map[scala.tools.asm.tree.MethodInsnNode,CallGraph.this.Callsite]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-130696.8701" rx="466.881" ry="26.7407"/>
<text text-anchor="start" x="18444.614" y="-130700.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Map[scala.tools.asm.tree.MethodInsnNode,CallGraph.this.Callsite]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-130685.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%s:%s to %s:%s&#39;) =&gt; ?{def format: ?} -->
<g id="node1804" class="node">
<title>String(&#39;%s:%s to %s:%s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-130768.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="18638.614" y="-130772.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s:%s to %s:%s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-130757.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;macro expansion has failed: %s at %s&#39;) =&gt; ?{def format: ?} -->
<g id="node1805" class="node">
<title>String(&#39;macro expansion has failed: %s at %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-130840.8701" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="18581.614" y="-130844.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;macro expansion has failed: %s at %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-130829.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%04x&#39;) =&gt; ?{def format: ?} -->
<g id="node1806" class="node">
<title>String(&#39;%04x&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-130912.8701" rx="148.4848" ry="26.7407"/>
<text text-anchor="start" x="18669.614" y="-130916.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%04x&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-130901.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.analyzer.global.Symbol],RefChecks.this.global.analyzer.global.Type,That] -->
<g id="node1807" class="node">
<title>scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.analyzer.global.Symbol],RefChecks.this.global.analyzer.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-130984.8701" rx="560.9715" ry="26.7407"/>
<text text-anchor="start" x="18378.114" y="-130988.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.analyzer.global.Symbol],RefChecks.this.global.analyzer.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-130973.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- AliasingFrame.this.type =&gt; ?{def stackTop: ?} -->
<g id="node1808" class="node">
<title>AliasingFrame.this.type =&gt; ?{def stackTop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-131056.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="18637.114" y="-131060.6701" font-family="Times,serif" font-size="14.00" fill="#000000">AliasingFrame.this.type =&gt; ?{def stackTop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-131045.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Macros.this.global.Symbol] =&gt; Macros.this.global.Type -->
<g id="node1809" class="node">
<title>List[Macros.this.global.Symbol] =&gt; Macros.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-131128.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="18598.114" y="-131132.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Macros.this.global.Symbol] =&gt; Macros.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-131117.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Char] =&gt; Array[Class[_]] -->
<g id="node1810" class="node">
<title>Array[Char] =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-131200.8701" rx="136.4432" ry="26.7407"/>
<text text-anchor="start" x="18678.114" y="-131204.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Char] =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-131189.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Parsers.this.Offset -->
<g id="node1811" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Parsers.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-131272.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="18637.114" y="-131276.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Parsers.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-131261.6701" font-family="Times,serif" font-size="14.00" fill="#000000">35 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeGen.this.global.Symbol],TreeGen.this.global.Tree,That] -->
<g id="node1812" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeGen.this.global.Symbol],TreeGen.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-131344.8701" rx="418.7145" ry="26.7407"/>
<text text-anchor="start" x="18478.614" y="-131348.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeGen.this.global.Symbol],TreeGen.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-131333.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- file.type =&gt; ?{def isClass: ?} -->
<g id="node1813" class="node">
<title>file.type =&gt; ?{def isClass: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-131416.8701" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="18685.614" y="-131420.6701" font-family="Times,serif" font-size="14.00" fill="#000000">file.type =&gt; ?{def isClass: ?}</text>
<text text-anchor="middle" x="18766.614" y="-131405.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[java.io.File],String,That] -->
<g id="node1814" class="node">
<title>scala.collection.generic.CanBuildFrom[List[java.io.File],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-131488.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="18577.114" y="-131492.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[java.io.File],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-131477.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; String -->
<g id="node1815" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-131560.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-131564.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-131549.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Short] -->
<g id="node1816" class="node">
<title>(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Short]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-131632.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-131636.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Short]</text>
<text text-anchor="middle" x="18766.614" y="-131621.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; (String =&gt; Unit) -->
<g id="node1817" class="node">
<title>(=&gt; Unit) =&gt; (String =&gt; Unit)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-131704.8701" rx="130.2154" ry="26.7407"/>
<text text-anchor="start" x="18682.614" y="-131708.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; (String =&gt; Unit)</text>
<text text-anchor="middle" x="18766.614" y="-131693.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- Array[StackTraceElement] =&gt; ?{def indexWhere: ?} -->
<g id="node1818" class="node">
<title>Array[StackTraceElement] =&gt; ?{def indexWhere: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-131776.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="18620.614" y="-131780.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[StackTraceElement] =&gt; ?{def indexWhere: ?}</text>
<text text-anchor="middle" x="18766.614" y="-131765.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[Int],MethodSynthesis.this.global.CaseDef,That] -->
<g id="node1819" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[Int],MethodSynthesis.this.global.CaseDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-131848.8701" rx="368.3053" ry="26.7407"/>
<text text-anchor="start" x="18514.114" y="-131852.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[Int],MethodSynthesis.this.global.CaseDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-131837.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,String,Set[String]] -->
<g id="node1820" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,String,Set[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-131920.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="18583.114" y="-131924.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,String,Set[String]]</text>
<text text-anchor="middle" x="18766.614" y="-131909.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Implicits.this.global.gen.global.Symbol -->
<g id="node1821" class="node">
<title>((Nothing, Nothing)) =&gt; Implicits.this.global.gen.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-131992.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-131996.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Implicits.this.global.gen.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-131981.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.typechecker.StdAttachments.&lt;refinement&gt;.type =&gt; ?{def materializeClassTag: ?} -->
<g id="node1822" class="node">
<title>scala.tools.nsc.typechecker.StdAttachments.&lt;refinement&gt;.type =&gt; ?{def materializeClassTag: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-132064.8701" rx="389.7317" ry="26.7407"/>
<text text-anchor="start" x="18499.114" y="-132068.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.StdAttachments.&lt;refinement&gt;.type =&gt; ?{def materializeClassTag: ?}</text>
<text text-anchor="middle" x="18766.614" y="-132053.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Boolean -->
<g id="node1823" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-132136.8701" rx="155.627" ry="26.7407"/>
<text text-anchor="start" x="18664.614" y="-132140.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-132125.6701" font-family="Times,serif" font-size="14.00" fill="#000000">231 times = 16ms</text>
</g>
<!-- Array[String] =&gt; ?{def foreach: ?} -->
<g id="node1824" class="node">
<title>Array[String] =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-132208.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="18670.114" y="-132212.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-132197.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Holes.this.global.Type, scala.reflect.quasiquotes.Rank)],((Holes.this.global.Type, scala.reflect.quasiquotes.Rank), Int),That] -->
<g id="node1825" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Holes.this.global.Type, scala.reflect.quasiquotes.Rank)],((Holes.this.global.Type, scala.reflect.quasiquotes.Rank), Int),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-132280.8701" rx="666.6034" ry="26.7407"/>
<text text-anchor="start" x="18303.114" y="-132284.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Holes.this.global.Type, scala.reflect.quasiquotes.Rank)],((Holes.this.global.Type, scala.reflect.quasiquotes.Rank), Int),That]</text>
<text text-anchor="middle" x="18766.614" y="-132269.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;, &#39;) =&gt; ?{def ::: ?} -->
<g id="node1826" class="node">
<title>String(&#39;, &#39;) =&gt; ?{def ::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-132352.8701" rx="110.1176" ry="26.7407"/>
<text text-anchor="start" x="18696.614" y="-132356.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;, &#39;) =&gt; ?{def ::: ?}</text>
<text text-anchor="middle" x="18766.614" y="-132341.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.tools.cmd.FromString[T] -->
<g id="node1827" class="node">
<title>scala.tools.cmd.FromString[T]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-132424.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-132428.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.cmd.FromString[T]</text>
<text text-anchor="middle" x="18766.614" y="-132413.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; ToolBoxGlobal.this.Symbol -->
<g id="node1828" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; ToolBoxGlobal.this.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-132496.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="18568.114" y="-132500.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; ToolBoxGlobal.this.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-132485.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- next.type =&gt; ?{def prefixLength: ?} -->
<g id="node1829" class="node">
<title>next.type =&gt; ?{def prefixLength: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-132568.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="18667.114" y="-132572.6701" font-family="Times,serif" font-size="14.00" fill="#000000">next.type =&gt; ?{def prefixLength: ?}</text>
<text text-anchor="middle" x="18766.614" y="-132557.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Taggers.this.c.universe.definitions.BooleanTpe.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1830" class="node">
<title>Taggers.this.c.universe.definitions.BooleanTpe.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-132640.8701" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="18578.614" y="-132644.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Taggers.this.c.universe.definitions.BooleanTpe.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-132629.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[UnCurry.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node1831" class="node">
<title>List[UnCurry.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-132712.8701" rx="315.2393" ry="26.7407"/>
<text text-anchor="start" x="18551.614" y="-132716.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[UnCurry.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-132701.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Unit)) =&gt; String -->
<g id="node1832" class="node">
<title>((Nothing, Unit)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-132784.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="18691.114" y="-132788.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit)) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-132773.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[String] =&gt; ?{def map: ?} -->
<g id="node1833" class="node">
<title>Array[String] =&gt; ?{def map: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-132856.8701" rx="135.5294" ry="26.7407"/>
<text text-anchor="start" x="18678.614" y="-132860.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def map: ?}</text>
<text text-anchor="middle" x="18766.614" y="-132845.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.io.JFile =&gt; scala.reflect.io.Path -->
<g id="node1834" class="node">
<title>scala.tools.nsc.io.JFile =&gt; scala.reflect.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-132928.8701" rx="191.752" ry="26.7407"/>
<text text-anchor="start" x="18639.114" y="-132932.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.io.JFile =&gt; scala.reflect.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-132917.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.runtime.LambdaDeserialize] -->
<g id="node1835" class="node">
<title>scala.reflect.ClassTag[scala.runtime.LambdaDeserialize]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-133000.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="18610.614" y="-133004.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.runtime.LambdaDeserialize]</text>
<text text-anchor="middle" x="18766.614" y="-132989.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Contexts.this.global.Symbol],Contexts.this.ImplicitInfo,List[Contexts.this.ImplicitInfo]] -->
<g id="node1836" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Contexts.this.global.Symbol],Contexts.this.ImplicitInfo,List[Contexts.this.ImplicitInfo]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-133072.8701" rx="525.2607" ry="26.7407"/>
<text text-anchor="start" x="18403.114" y="-133076.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Contexts.this.global.Symbol],Contexts.this.ImplicitInfo,List[Contexts.this.ImplicitInfo]]</text>
<text text-anchor="middle" x="18766.614" y="-133061.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- reflect.runtime.universe.TypeTag[T] -->
<g id="node1837" class="node">
<title>reflect.runtime.universe.TypeTag[T]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-133144.8701" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="18666.114" y="-133148.6701" font-family="Times,serif" font-size="14.00" fill="#000000">reflect.runtime.universe.TypeTag[T]</text>
<text text-anchor="middle" x="18766.614" y="-133133.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;%d source file%s&#39;) =&gt; ?{def format: ?} -->
<g id="node1838" class="node">
<title>String(&#39;%d source file%s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-133216.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="18637.114" y="-133220.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%d source file%s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-133205.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; FormatInterpolator.this.c.universe.FlagSet -->
<g id="node1839" class="node">
<title>(=&gt; Unit) =&gt; FormatInterpolator.this.c.universe.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-133288.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-133292.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; FormatInterpolator.this.c.universe.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-133277.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.MATCHkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1840" class="node">
<title>Scanners.this.global.nme.MATCHkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-133360.8701" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="18604.114" y="-133364.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.MATCHkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-133349.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- frame$2.type =&gt; ?{def getValue: ?} -->
<g id="node1841" class="node">
<title>frame$2.type =&gt; ?{def getValue: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-133432.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="18666.614" y="-133436.6701" font-family="Times,serif" font-size="14.00" fill="#000000">frame$2.type =&gt; ?{def getValue: ?}</text>
<text text-anchor="middle" x="18766.614" y="-133421.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Type],List[TreeAndTypeAnalysis.this.global.Type],That] -->
<g id="node1842" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Type],List[TreeAndTypeAnalysis.this.global.Type],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-133504.8701" rx="538.2165" ry="26.7407"/>
<text text-anchor="start" x="18394.114" y="-133508.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Type],List[TreeAndTypeAnalysis.this.global.Type],That]</text>
<text text-anchor="middle" x="18766.614" y="-133493.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Symbol],RefChecks.this.global.Ident,That] -->
<g id="node1843" class="node">
<title>scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Symbol],RefChecks.this.global.Ident,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-133576.8701" rx="437.8983" ry="26.7407"/>
<text text-anchor="start" x="18465.114" y="-133580.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Symbol],RefChecks.this.global.Ident,That]</text>
<text text-anchor="middle" x="18766.614" y="-133565.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.util.jar.Manifest =&gt; ?{def apply: ?} -->
<g id="node1844" class="node">
<title>java.util.jar.Manifest =&gt; ?{def apply: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-133648.8701" rx="168.997" ry="26.7407"/>
<text text-anchor="start" x="18655.114" y="-133652.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.jar.Manifest =&gt; ?{def apply: ?}</text>
<text text-anchor="middle" x="18766.614" y="-133637.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Array[Char] -->
<g id="node1845" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Array[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-133720.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="18628.114" y="-133724.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Array[Char]</text>
<text text-anchor="middle" x="18766.614" y="-133709.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Unapplies.this.global.Symbol -->
<g id="node1846" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Unapplies.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-133792.8701" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="18554.614" y="-133796.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; Unapplies.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-133781.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; MethodSynthesis.this.global.Type -->
<g id="node1847" class="node">
<title>(=&gt; Unit) =&gt; MethodSynthesis.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-133864.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="18634.114" y="-133868.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; MethodSynthesis.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-133853.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- String(&#39;NoPrefix()&#39;) =&gt; scala.text.Document -->
<g id="node1848" class="node">
<title>String(&#39;NoPrefix()&#39;) =&gt; scala.text.Document</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-133936.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="18646.114" y="-133940.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;NoPrefix()&#39;) =&gt; scala.text.Document</text>
<text text-anchor="middle" x="18766.614" y="-133925.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.Tree with Serializable,That] -->
<g id="node1849" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.Tree with Serializable,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-134008.8701" rx="461.9816" ry="26.7407"/>
<text text-anchor="start" x="18448.114" y="-134012.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Parsers.this.global.Tree with Serializable,That]</text>
<text text-anchor="middle" x="18766.614" y="-133997.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; JavaParsers.this.global.Tree -->
<g id="node1850" class="node">
<title>((Nothing, Nothing)) =&gt; JavaParsers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-134080.8701" rx="217.1636" ry="26.7407"/>
<text text-anchor="start" x="18621.114" y="-134084.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; JavaParsers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-134069.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;ALLOPTIONS&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1851" class="node">
<title>String(&#39;ALLOPTIONS&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-134152.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="18656.114" y="-134156.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;ALLOPTIONS&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-134141.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Type,Any] -->
<g id="node1852" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Type,Any]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-134224.8701" rx="393.3028" ry="26.7407"/>
<text text-anchor="start" x="18496.614" y="-134228.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Type,Any]</text>
<text text-anchor="middle" x="18766.614" y="-134213.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[ClassfileParser.this.symbolTable.ClassfileAnnotArg] -->
<g id="node1853" class="node">
<title>scala.reflect.ClassTag[ClassfileParser.this.symbolTable.ClassfileAnnotArg]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-134296.8701" rx="304.1118" ry="26.7407"/>
<text text-anchor="start" x="18559.614" y="-134300.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ClassfileParser.this.symbolTable.ClassfileAnnotArg]</text>
<text text-anchor="middle" x="18766.614" y="-134285.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- tgt.type =&gt; ?{def APPLY: ?} -->
<g id="node1854" class="node">
<title>tgt.type =&gt; ?{def APPLY: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-134368.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="18685.114" y="-134372.6701" font-family="Times,serif" font-size="14.00" fill="#000000">tgt.type =&gt; ?{def APPLY: ?}</text>
<text text-anchor="middle" x="18766.614" y="-134357.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; DefaultMacroCompiler.this.global.Tree -->
<g id="node1855" class="node">
<title>((Nothing, Nothing)) =&gt; DefaultMacroCompiler.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-134440.8701" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="18588.614" y="-134444.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; DefaultMacroCompiler.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-134429.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Implicits.this.global.Tree =&gt; Implicits.this.SearchResult -->
<g id="node1856" class="node">
<title>Implicits.this.global.Tree =&gt; Implicits.this.SearchResult</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-134512.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-134516.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Implicits.this.global.Tree =&gt; Implicits.this.SearchResult</text>
<text text-anchor="middle" x="18766.614" y="-134501.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 1ms</text>
</g>
<!-- (=&gt; Float) =&gt; Parsers.this.Offset -->
<g id="node1857" class="node">
<title>(=&gt; Float) =&gt; Parsers.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-134584.8701" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="18676.114" y="-134588.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Float) =&gt; Parsers.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-134573.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;lib&#39;) =&gt; scala.reflect.io.Path -->
<g id="node1858" class="node">
<title>String(&#39;lib&#39;) =&gt; scala.reflect.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-134656.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="18670.114" y="-134660.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;lib&#39;) =&gt; scala.reflect.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-134645.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],java.net.URL,Seq[java.net.URL]] -->
<g id="node1859" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],java.net.URL,Seq[java.net.URL]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-134728.8701" rx="430.7561" ry="26.7407"/>
<text text-anchor="start" x="18470.114" y="-134732.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],java.net.URL,Seq[java.net.URL]]</text>
<text text-anchor="middle" x="18766.614" y="-134717.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Macros.this.global.Tree -->
<g id="node1860" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Macros.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-134800.8701" rx="238.0901" ry="26.7407"/>
<text text-anchor="start" x="18606.114" y="-134804.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Macros.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-134789.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.IntMap[CallGraph.this.postProcessor.bTypes.ClassBType],(scala.collection.immutable.IntMapUtils.Int, Product with Serializable with CallGraph.this.ArgInfo),scala.collection.immutable.IntMap[CallGraph.this.ArgInfo]] -->
<g id="node1861" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.IntMap[CallGraph.this.postProcessor.bTypes.ClassBType],(scala.collection.immutable.IntMapUtils.Int, Product with Serializable with CallGraph.this.ArgInfo),scala.collection.immutable.IntMap[CallGraph.this.ArgInfo]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-134872.8701" rx="1126.3422" ry="26.7407"/>
<text text-anchor="start" x="17978.114" y="-134876.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.IntMap[CallGraph.this.postProcessor.bTypes.ClassBType],(scala.collection.immutable.IntMapUtils.Int, Product with Serializable with CallGraph.this.ArgInfo),scala.collection.immutable.IntMap[CallGraph.this.ArgInfo]]</text>
<text text-anchor="middle" x="18766.614" y="-134861.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Typers.this.global.gen.global.RefTree =&gt; ?{def APPLY: ?} -->
<g id="node1862" class="node">
<title>Typers.this.global.gen.global.RefTree =&gt; ?{def APPLY: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-134944.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="18602.614" y="-134948.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Typers.this.global.gen.global.RefTree =&gt; ?{def APPLY: ?}</text>
<text text-anchor="middle" x="18766.614" y="-134933.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],String,scala.collection.TraversableOnce[String]] -->
<g id="node1863" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],String,scala.collection.TraversableOnce[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-135016.8701" rx="398.6165" ry="26.7407"/>
<text text-anchor="start" x="18492.614" y="-135020.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],String,scala.collection.TraversableOnce[String]]</text>
<text text-anchor="middle" x="18766.614" y="-135005.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Scanners.this.global.nme.IMPLICITkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1864" class="node">
<title>Scanners.this.global.nme.IMPLICITkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-135088.8701" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="18599.114" y="-135092.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.IMPLICITkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-135077.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[MatchAnalyzer.this.CounterExample] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node1865" class="node">
<title>Option[MatchAnalyzer.this.CounterExample] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-135160.8701" rx="359.8347" ry="26.7407"/>
<text text-anchor="start" x="18520.114" y="-135164.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[MatchAnalyzer.this.CounterExample] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-135149.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(0) =&gt; ?{def to: ?} -->
<g id="node1866" class="node">
<title>Int(0) =&gt; ?{def to: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-135232.8701" rx="96.3333" ry="26.7407"/>
<text text-anchor="start" x="18706.614" y="-135236.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(0) =&gt; ?{def to: ?}</text>
<text text-anchor="middle" x="18766.614" y="-135221.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- relativePath.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): Seq[String]} -->
<g id="node1867" class="node">
<title>relativePath.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): Seq[String]}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-135304.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-135308.6701" font-family="Times,serif" font-size="14.00" fill="#000000">relativePath.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): Seq[String]}</text>
<text text-anchor="middle" x="18766.614" y="-135293.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[org.apache.tools.ant.types.Commandline.Argument] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node1868" class="node">
<title>Array[org.apache.tools.ant.types.Commandline.Argument] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-135376.8701" rx="410.6582" ry="26.7407"/>
<text text-anchor="start" x="18484.114" y="-135380.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[org.apache.tools.ant.types.Commandline.Argument] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-135365.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; javax.swing.text.Document -->
<g id="node1869" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; javax.swing.text.Document</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-135448.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-135452.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; javax.swing.text.Document</text>
<text text-anchor="middle" x="18766.614" y="-135437.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Nil.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1870" class="node">
<title>scala.collection.immutable.Nil.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-135520.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="18623.614" y="-135524.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Nil.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-135509.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchTranslator.this.BoundTree],MatchTranslator.this.TreeMaker,That] -->
<g id="node1871" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchTranslator.this.BoundTree],MatchTranslator.this.TreeMaker,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-135592.8701" rx="465.0526" ry="26.7407"/>
<text text-anchor="start" x="18445.614" y="-135596.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchTranslator.this.BoundTree],MatchTranslator.this.TreeMaker,That]</text>
<text text-anchor="middle" x="18766.614" y="-135581.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.TypeVar,That] -->
<g id="node1872" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.TypeVar,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-135664.8701" rx="421.3713" ry="26.7407"/>
<text text-anchor="start" x="18476.614" y="-135668.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.TypeVar,That]</text>
<text text-anchor="middle" x="18766.614" y="-135653.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; org.apache.tools.ant.Project -->
<g id="node1873" class="node">
<title>((Nothing, Nothing)) =&gt; org.apache.tools.ant.Project</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-135736.8701" rx="216.2494" ry="26.7407"/>
<text text-anchor="start" x="18621.614" y="-135740.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; org.apache.tools.ant.Project</text>
<text text-anchor="middle" x="18766.614" y="-135725.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Unit =&gt; (String =&gt; Unit) -->
<g id="node1874" class="node">
<title>Unit =&gt; (String =&gt; Unit)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-135808.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="18697.114" y="-135812.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; (String =&gt; Unit)</text>
<text text-anchor="middle" x="18766.614" y="-135797.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- ft.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1875" class="node">
<title>ft.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-135880.8701" rx="101.2327" ry="26.7407"/>
<text text-anchor="start" x="18703.114" y="-135884.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ft.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-135869.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode],scala.tools.asm.tree.AbstractInsnNode,That] -->
<g id="node1876" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode],scala.tools.asm.tree.AbstractInsnNode,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-135952.8701" rx="612.209" ry="26.7407"/>
<text text-anchor="start" x="18341.614" y="-135956.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode],scala.tools.asm.tree.AbstractInsnNode,That]</text>
<text text-anchor="middle" x="18766.614" y="-135941.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; StringBuilder -->
<g id="node1877" class="node">
<title>Unit =&gt; StringBuilder</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-136024.8701" rx="97.6615" ry="26.7407"/>
<text text-anchor="start" x="18705.614" y="-136028.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; StringBuilder</text>
<text text-anchor="middle" x="18766.614" y="-136013.6701" font-family="Times,serif" font-size="14.00" fill="#000000">25 times = 3ms</text>
</g>
<!-- (=&gt; List[scala.tools.asm.tree.AbstractInsnNode]) =&gt; ?{def ::=: ?} -->
<g id="node1878" class="node">
<title>(=&gt; List[scala.tools.asm.tree.AbstractInsnNode]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-136096.8701" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="18585.114" y="-136100.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[scala.tools.asm.tree.AbstractInsnNode]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-136085.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- phasePart.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;,&#39;)): ?} -->
<g id="node1879" class="node">
<title>phasePart.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;,&#39;)): ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-136168.8701" rx="214.007" ry="26.7407"/>
<text text-anchor="start" x="18623.114" y="-136172.6701" font-family="Times,serif" font-size="14.00" fill="#000000">phasePart.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;,&#39;)): ?}</text>
<text text-anchor="middle" x="18766.614" y="-136157.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.WildcardType.type,List[Infer.this.global.Type]] -->
<g id="node1880" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.WildcardType.type,List[Infer.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-136240.8701" rx="537.3023" ry="26.7407"/>
<text text-anchor="start" x="18394.614" y="-136244.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.WildcardType.type,List[Infer.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-136229.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.TRYkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1881" class="node">
<title>JavaScanners.this.global.javanme.TRYkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-136312.8701" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="18592.114" y="-136316.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.TRYkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-136301.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.TermSymbol],Delambdafy.this.global.gen.global.RefTree,That] -->
<g id="node1882" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.TermSymbol],Delambdafy.this.global.gen.global.RefTree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-136384.8701" rx="525.2607" ry="26.7407"/>
<text text-anchor="start" x="18403.114" y="-136388.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.TermSymbol],Delambdafy.this.global.gen.global.RefTree,That]</text>
<text text-anchor="middle" x="18766.614" y="-136373.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Int] =&gt; (Int =&gt; Int) -->
<g id="node1883" class="node">
<title>Array[Int] =&gt; (Int =&gt; Int)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-136456.8701" rx="112.36" ry="26.7407"/>
<text text-anchor="start" x="18695.114" y="-136460.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Int] =&gt; (Int =&gt; Int)</text>
<text text-anchor="middle" x="18766.614" y="-136445.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.Position -->
<g id="node1884" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.Position</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-136528.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="18613.114" y="-136532.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.Position</text>
<text text-anchor="middle" x="18766.614" y="-136517.6701" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 2ms</text>
</g>
<!-- Scanners.this.global.nme.OVERRIDEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1885" class="node">
<title>Scanners.this.global.nme.OVERRIDEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-136600.8701" rx="254.6169" ry="26.7407"/>
<text text-anchor="start" x="18594.614" y="-136604.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.OVERRIDEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-136589.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.CaseDef],Typers.this.global.CaseDef,List[Typers.this.global.CaseDef]] -->
<g id="node1886" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.CaseDef],Typers.this.global.CaseDef,List[Typers.this.global.CaseDef]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-136672.8701" rx="531.9887" ry="26.7407"/>
<text text-anchor="start" x="18398.614" y="-136676.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.CaseDef],Typers.this.global.CaseDef,List[Typers.this.global.CaseDef]]</text>
<text text-anchor="middle" x="18766.614" y="-136661.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- scala.tools.nsc.typechecker.StdAttachments.&lt;refinement&gt;.type =&gt; ?{def materializeTypeTag: ?} -->
<g id="node1887" class="node">
<title>scala.tools.nsc.typechecker.StdAttachments.&lt;refinement&gt;.type =&gt; ?{def materializeTypeTag: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-136744.8701" rx="388.4034" ry="26.7407"/>
<text text-anchor="start" x="18500.114" y="-136748.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.StdAttachments.&lt;refinement&gt;.type =&gt; ?{def materializeTypeTag: ?}</text>
<text text-anchor="middle" x="18766.614" y="-136733.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- String(&#39;scala.collection.mutable.&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1888" class="node">
<title>String(&#39;scala.collection.mutable.&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-136816.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="18629.614" y="-136820.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;scala.collection.mutable.&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-136805.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- parentSym.type =&gt; ?{def +: ?} -->
<g id="node1889" class="node">
<title>parentSym.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-136888.8701" rx="133.7865" ry="26.7407"/>
<text text-anchor="start" x="18680.114" y="-136892.6701" font-family="Times,serif" font-size="14.00" fill="#000000">parentSym.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-136877.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Type],Typers.this.global.Symbol#NameType,Any] -->
<g id="node1890" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Type],Typers.this.global.Symbol#NameType,Any]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-136960.8701" rx="453.011" ry="26.7407"/>
<text text-anchor="start" x="18454.114" y="-136964.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Type],Typers.this.global.Symbol#NameType,Any]</text>
<text text-anchor="middle" x="18766.614" y="-136949.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]],scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])],That] -->
<g id="node1891" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]],scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-137032.8701" rx="1178.0798" ry="26.7407"/>
<text text-anchor="start" x="17941.614" y="-137036.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]],scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])],That]</text>
<text text-anchor="middle" x="18766.614" y="-137021.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; JavaParsers.this.global.FlagSet -->
<g id="node1892" class="node">
<title>((Nothing, Nothing)) =&gt; JavaParsers.this.global.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-137104.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="18613.114" y="-137108.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; JavaParsers.this.global.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-137093.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Unapplies.this.global.Type -->
<g id="node1893" class="node">
<title>(=&gt; Unit) =&gt; Unapplies.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-137176.8701" rx="170.3255" ry="26.7407"/>
<text text-anchor="start" x="18654.114" y="-137180.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Unapplies.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-137165.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- Int =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node1894" class="node">
<title>Int =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-137248.8701" rx="199.3083" ry="26.7407"/>
<text text-anchor="start" x="18633.614" y="-137252.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-137237.6701" font-family="Times,serif" font-size="14.00" fill="#000000">28 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Macros.this.global.Tree],Any,Any] -->
<g id="node1895" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Macros.this.global.Tree],Any,Any]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-137320.8701" rx="320.1388" ry="26.7407"/>
<text text-anchor="start" x="18548.114" y="-137324.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Macros.this.global.Tree],Any,Any]</text>
<text text-anchor="middle" x="18766.614" y="-137309.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[MatchAnalyzer.this.Test]],MatchAnalyzer.this.Prop,That] -->
<g id="node1896" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[MatchAnalyzer.this.Test]],MatchAnalyzer.this.Prop,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-137392.8701" rx="426.2708" ry="26.7407"/>
<text text-anchor="start" x="18473.114" y="-137396.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[MatchAnalyzer.this.Test]],MatchAnalyzer.this.Prop,That]</text>
<text text-anchor="middle" x="18766.614" y="-137381.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- originNames.type =&gt; ?{def withFilter: ?} -->
<g id="node1897" class="node">
<title>originNames.type =&gt; ?{def withFilter: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-137464.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="18652.114" y="-137468.6701" font-family="Times,serif" font-size="14.00" fill="#000000">originNames.type =&gt; ?{def withFilter: ?}</text>
<text text-anchor="middle" x="18766.614" y="-137453.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- (=&gt; Char) =&gt; CharSequence -->
<g id="node1898" class="node">
<title>(=&gt; Char) =&gt; CharSequence</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-137536.8701" rx="123.0732" ry="26.7407"/>
<text text-anchor="start" x="18687.614" y="-137540.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Char) =&gt; CharSequence</text>
<text text-anchor="middle" x="18766.614" y="-137525.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.CaseDef],Typers.this.global.Tree,That] -->
<g id="node1899" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.CaseDef],Typers.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-137608.8701" rx="407.0871" ry="26.7407"/>
<text text-anchor="start" x="18486.614" y="-137612.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.CaseDef],Typers.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-137597.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Unapplies.this.global.FlagSet -->
<g id="node1900" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Unapplies.this.global.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-137680.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="18607.114" y="-137684.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Unapplies.this.global.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-137669.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Any =&gt; Nothing)) =&gt; String -->
<g id="node1901" class="node">
<title>(=&gt; (Nothing, Any =&gt; Nothing)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-137752.8701" rx="180.1247" ry="26.7407"/>
<text text-anchor="start" x="18647.114" y="-137756.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Any =&gt; Nothing)) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-137741.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Map[String,String]) =&gt; ?{def ++=: ?} -->
<g id="node1902" class="node">
<title>(=&gt; scala.collection.immutable.Map[String,String]) =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-137824.8701" rx="285.8424" ry="26.7407"/>
<text text-anchor="start" x="18572.614" y="-137828.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Map[String,String]) =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-137813.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- OptimizedCasegen.this.matchEnd.type =&gt; ?{def APPLY: ?} -->
<g id="node1903" class="node">
<title>OptimizedCasegen.this.matchEnd.type =&gt; ?{def APPLY: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-137896.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="18599.614" y="-137900.6701" font-family="Times,serif" font-size="14.00" fill="#000000">OptimizedCasegen.this.matchEnd.type =&gt; ?{def APPLY: ?}</text>
<text text-anchor="middle" x="18766.614" y="-137885.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Parsers.this.Location -->
<g id="node1904" class="node">
<title>(=&gt; Unit) =&gt; Parsers.this.Location</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-137968.8701" rx="147.1565" ry="26.7407"/>
<text text-anchor="start" x="18670.614" y="-137972.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Parsers.this.Location</text>
<text text-anchor="middle" x="18766.614" y="-137957.6701" font-family="Times,serif" font-size="14.00" fill="#000000">24 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[AccessorSynthesis.this.global.Symbol],(AccessorSynthesis.this.global.Symbol, Int),That] -->
<g id="node1905" class="node">
<title>scala.collection.generic.CanBuildFrom[List[AccessorSynthesis.this.global.Symbol],(AccessorSynthesis.this.global.Symbol, Int),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-138040.8701" rx="529.746" ry="26.7407"/>
<text text-anchor="start" x="18400.114" y="-138044.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[AccessorSynthesis.this.global.Symbol],(AccessorSynthesis.this.global.Symbol, Int),That]</text>
<text text-anchor="middle" x="18766.614" y="-138029.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],scala.reflect.internal.util.SourceFile,List[scala.reflect.internal.util.SourceFile]] -->
<g id="node1906" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],scala.reflect.internal.util.SourceFile,List[scala.reflect.internal.util.SourceFile]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-138112.8701" rx="514.5476" ry="26.7407"/>
<text text-anchor="start" x="18410.614" y="-138116.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],scala.reflect.internal.util.SourceFile,List[scala.reflect.internal.util.SourceFile]]</text>
<text text-anchor="middle" x="18766.614" y="-138101.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[SpecializeTypes.this.global.Type] =&gt; ?{def ::=: ?} -->
<g id="node1907" class="node">
<title>List[SpecializeTypes.this.global.Type] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-138184.8701" rx="226.9626" ry="26.7407"/>
<text text-anchor="start" x="18614.114" y="-138188.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[SpecializeTypes.this.global.Type] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-138173.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;performing macro expansion %s at %s&#39;) =&gt; ?{def format: ?} -->
<g id="node1908" class="node">
<title>String(&#39;performing macro expansion %s at %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-138256.8701" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="18578.614" y="-138260.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;performing macro expansion %s at %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-138245.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Type],RefChecks.this.global.Symbol,That] -->
<g id="node1909" class="node">
<title>scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Type],RefChecks.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-138328.8701" rx="437.8983" ry="26.7407"/>
<text text-anchor="start" x="18465.114" y="-138332.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Type],RefChecks.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-138317.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;no accessors for %s/%s, specialized methods must access field in subclass&#39;) =&gt; ?{def format: ?} -->
<g id="node1910" class="node">
<title>String(&#39;no accessors for %s/%s, specialized methods must access field in subclass&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-138400.8701" rx="414.2292" ry="26.7407"/>
<text text-anchor="start" x="18481.614" y="-138404.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;no accessors for %s/%s, specialized methods must access field in subclass&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-138389.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.Type,List[Infer.this.global.Type]] -->
<g id="node1911" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.Type,List[Infer.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-138472.8701" rx="482.4938" ry="26.7407"/>
<text text-anchor="start" x="18433.614" y="-138476.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.Type,List[Infer.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-138461.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[UnCurry.this.global.ValDef],UnCurry.this.global.Symbol,List[UnCurry.this.global.Symbol]] -->
<g id="node1912" class="node">
<title>scala.collection.generic.CanBuildFrom[List[UnCurry.this.global.ValDef],UnCurry.this.global.Symbol,List[UnCurry.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-138544.8701" rx="543.5303" ry="26.7407"/>
<text text-anchor="start" x="18390.114" y="-138548.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[UnCurry.this.global.ValDef],UnCurry.this.global.Symbol,List[UnCurry.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-138533.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;[Executing command: %s]&#39;) =&gt; ?{def format: ?} -->
<g id="node1913" class="node">
<title>String(&#39;[Executing command: %s]&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-138616.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-138620.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;[Executing command: %s]&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-138605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$7.type =&gt; ?{def drop: ?} -->
<g id="node1914" class="node">
<title>x$7.type =&gt; ?{def drop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-138688.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="18691.114" y="-138692.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$7.type =&gt; ?{def drop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-138677.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode],scala.tools.asm.tree.AbstractInsnNode,Set[scala.tools.asm.tree.AbstractInsnNode]] -->
<g id="node1915" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode],scala.tools.asm.tree.AbstractInsnNode,Set[scala.tools.asm.tree.AbstractInsnNode]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-138760.8701" rx="761.608" ry="26.7407"/>
<text text-anchor="start" x="18236.114" y="-138764.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode],scala.tools.asm.tree.AbstractInsnNode,Set[scala.tools.asm.tree.AbstractInsnNode]]</text>
<text text-anchor="middle" x="18766.614" y="-138749.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[Implicits.this.ImplicitInfo]],Implicits.this.ImplicitInfo,That] -->
<g id="node1916" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[Implicits.this.ImplicitInfo]],Implicits.this.ImplicitInfo,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-138832.8701" rx="434.3272" ry="26.7407"/>
<text text-anchor="start" x="18467.614" y="-138836.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[Implicits.this.ImplicitInfo]],Implicits.this.ImplicitInfo,That]</text>
<text text-anchor="middle" x="18766.614" y="-138821.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],Int,That] -->
<g id="node1917" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],Int,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-138904.8701" rx="370.5479" ry="26.7407"/>
<text text-anchor="start" x="18512.614" y="-138908.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.IndexedSeq[Int],Int,That]</text>
<text text-anchor="middle" x="18766.614" y="-138893.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Long] =&gt; Array[AnyRef] -->
<g id="node1918" class="node">
<title>Array[Long] =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-138976.8701" rx="136.4432" ry="26.7407"/>
<text text-anchor="start" x="18678.114" y="-138980.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Long] =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-138965.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.VOLATILEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1919" class="node">
<title>JavaScanners.this.global.javanme.VOLATILEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-139048.8701" rx="286.2565" ry="26.7407"/>
<text text-anchor="start" x="18572.114" y="-139052.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.VOLATILEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-139037.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Symbol],List[TreeAndTypeAnalysis.this.global.Symbol],That] -->
<g id="node1920" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Symbol],List[TreeAndTypeAnalysis.this.global.Symbol],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-139120.8701" rx="559.143" ry="26.7407"/>
<text text-anchor="start" x="18379.114" y="-139124.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Symbol],List[TreeAndTypeAnalysis.this.global.Symbol],That]</text>
<text text-anchor="middle" x="18766.614" y="-139109.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.CHAR.type),That] -->
<g id="node1921" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.CHAR.type),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-139192.8701" rx="444.5404" ry="26.7407"/>
<text text-anchor="start" x="18460.114" y="-139196.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.CHAR.type),That]</text>
<text text-anchor="middle" x="18766.614" y="-139181.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol -->
<g id="node1922" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-139264.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="18560.614" y="-139268.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-139253.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.PROTECTEDkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1923" class="node">
<title>Scanners.this.global.nme.PROTECTEDkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-139336.8701" rx="261.7591" ry="26.7407"/>
<text text-anchor="start" x="18589.614" y="-139340.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.PROTECTEDkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-139325.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[CommonSubconditionElimination.this.TreeMaker] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node1924" class="node">
<title>Option[CommonSubconditionElimination.this.TreeMaker] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-139408.8701" rx="410.6582" ry="26.7407"/>
<text text-anchor="start" x="18484.114" y="-139412.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[CommonSubconditionElimination.this.TreeMaker] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-139397.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Erasure.this.global.Type =&gt; ?{def +: ?} -->
<g id="node1925" class="node">
<title>Erasure.this.global.Type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-139480.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="18656.614" y="-139484.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Erasure.this.global.Type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-139469.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; List[States.this.global.Tree] -->
<g id="node1926" class="node">
<title>(=&gt; Unit) =&gt; List[States.this.global.Tree]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-139552.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="18652.114" y="-139556.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; List[States.this.global.Tree]</text>
<text text-anchor="middle" x="18766.614" y="-139541.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Checkable.this.global.Symbol],scala.reflect.internal.Variance,That] -->
<g id="node1927" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Checkable.this.global.Symbol],scala.reflect.internal.Variance,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-139624.8701" rx="444.1261" ry="26.7407"/>
<text text-anchor="start" x="18460.614" y="-139628.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Checkable.this.global.Symbol],scala.reflect.internal.Variance,That]</text>
<text text-anchor="middle" x="18766.614" y="-139613.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Long =&gt; Double -->
<g id="node1928" class="node">
<title>Long =&gt; Double</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-139696.8701" rx="77.1494" ry="26.7407"/>
<text text-anchor="start" x="18720.114" y="-139700.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Long =&gt; Double</text>
<text text-anchor="middle" x="18766.614" y="-139685.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; scala.reflect.io.Path -->
<g id="node1929" class="node">
<title>String =&gt; scala.reflect.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-139768.8701" rx="127.9727" ry="26.7407"/>
<text text-anchor="start" x="18684.114" y="-139772.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; scala.reflect.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-139757.6701" font-family="Times,serif" font-size="14.00" fill="#000000">26 times = 5ms</text>
</g>
<!-- (Any, Any) &lt;:&lt; (T, U) -->
<g id="node1930" class="node">
<title>(Any, Any) &lt;:&lt; (T, U)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-139840.8701" rx="100.3184" ry="26.7407"/>
<text text-anchor="start" x="18703.614" y="-139844.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Any, Any) &lt;:&lt; (T, U)</text>
<text text-anchor="middle" x="18766.614" y="-139829.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Unit)) =&gt; Int -->
<g id="node1931" class="node">
<title>((Nothing, Unit)) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-139912.8701" rx="105.218" ry="26.7407"/>
<text text-anchor="start" x="18700.114" y="-139916.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit)) =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-139901.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- tree.type =&gt; ?{def MEMBER_==: ?} -->
<g id="node1932" class="node">
<title>tree.type =&gt; ?{def MEMBER_==: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-139984.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="18662.114" y="-139988.6701" font-family="Times,serif" font-size="14.00" fill="#000000">tree.type =&gt; ?{def MEMBER_==: ?}</text>
<text text-anchor="middle" x="18766.614" y="-139973.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.reflect.ClassTag[UnCurry.this.global.DelambdafyTarget.type] -->
<g id="node1933" class="node">
<title>scala.reflect.ClassTag[UnCurry.this.global.DelambdafyTarget.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-140056.8701" rx="273.8007" ry="26.7407"/>
<text text-anchor="start" x="18581.114" y="-140060.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[UnCurry.this.global.DelambdafyTarget.type]</text>
<text text-anchor="middle" x="18766.614" y="-140045.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (Macros.this.global.Symbol, Macros.this.global.ValDef) &lt;:&lt; (T, U) -->
<g id="node1934" class="node">
<title>(Macros.this.global.Symbol, Macros.this.global.ValDef) &lt;:&lt; (T, U)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-140128.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-140132.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Macros.this.global.Symbol, Macros.this.global.ValDef) &lt;:&lt; (T, U)</text>
<text text-anchor="middle" x="18766.614" y="-140117.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[scala.tools.asm.tree.TryCatchBlockNode]) =&gt; ?{def ++=: ?} -->
<g id="node1935" class="node">
<title>(=&gt; scala.collection.immutable.Set[scala.tools.asm.tree.TryCatchBlockNode]) =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-140200.8701" rx="388.4034" ry="26.7407"/>
<text text-anchor="start" x="18500.114" y="-140204.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[scala.tools.asm.tree.TryCatchBlockNode]) =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-140189.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Type],Typers.this.global.Type,List[Typers.this.global.Type]] -->
<g id="node1936" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Type],Typers.this.global.Type,List[Typers.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-140272.8701" rx="491.3784" ry="26.7407"/>
<text text-anchor="start" x="18427.114" y="-140276.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Type],Typers.this.global.Type,List[Typers.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-140261.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Some[Reshape.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node1937" class="node">
<title>Some[Reshape.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-140344.8701" rx="317.4819" ry="26.7407"/>
<text text-anchor="start" x="18550.114" y="-140348.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Some[Reshape.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-140333.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- java.util.List[scala.tools.asm.tree.AnnotationNode] =&gt; ?{def asScala: ?} -->
<g id="node1938" class="node">
<title>java.util.List[scala.tools.asm.tree.AnnotationNode] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-140416.8701" rx="292.9846" ry="26.7407"/>
<text text-anchor="start" x="18567.614" y="-140420.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.List[scala.tools.asm.tree.AnnotationNode] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-140405.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- String(&#39;@throws&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1939" class="node">
<title>String(&#39;@throws&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-140488.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="18673.114" y="-140492.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;@throws&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-140477.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- s.type =&gt; ?{def flatMap: ?} -->
<g id="node1940" class="node">
<title>s.type =&gt; ?{def flatMap: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-140560.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="18689.614" y="-140564.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def flatMap: ?}</text>
<text text-anchor="middle" x="18766.614" y="-140549.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.LAZYkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1941" class="node">
<title>Scanners.this.global.nme.LAZYkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-140632.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="18610.614" y="-140636.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.LAZYkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-140621.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[Infer.this.global.Symbol]) =&gt; ?{def ::=: ?} -->
<g id="node1942" class="node">
<title>(=&gt; List[Infer.this.global.Symbol]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-140704.8701" rx="214.007" ry="26.7407"/>
<text text-anchor="start" x="18623.114" y="-140708.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Infer.this.global.Symbol]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-140693.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[(SymbolTrackers.this.global.Symbol, SymbolTrackers.this.global.Symbol)] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node1943" class="node">
<title>Option[(SymbolTrackers.this.global.Symbol, SymbolTrackers.this.global.Symbol)] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-140776.8701" rx="506.077" ry="26.7407"/>
<text text-anchor="start" x="18416.614" y="-140780.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[(SymbolTrackers.this.global.Symbol, SymbolTrackers.this.global.Symbol)] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-140765.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.ArrayBuffer[SymbolTables.this.global.Tree],SymbolTables.this.global.Tree,That] -->
<g id="node1944" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.ArrayBuffer[SymbolTables.this.global.Tree],SymbolTables.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-140848.8701" rx="578.3267" ry="26.7407"/>
<text text-anchor="start" x="18365.614" y="-140852.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.ArrayBuffer[SymbolTables.this.global.Tree],SymbolTables.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-140837.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;%s%s is %s in %s.&#39;) =&gt; ?{def format: ?} -->
<g id="node1945" class="node">
<title>String(&#39;%s%s is %s in %s.&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-140920.8701" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="18632.114" y="-140924.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s%s is %s in %s.&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-140909.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.Symbol,That] -->
<g id="node1946" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-140992.8701" rx="417.3861" ry="26.7407"/>
<text text-anchor="start" x="18479.614" y="-140996.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-140981.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; String) =&gt; scala.reflect.io.AbstractFile -->
<g id="node1947" class="node">
<title>(=&gt; String) =&gt; scala.reflect.io.AbstractFile</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-141064.8701" rx="178.7961" ry="26.7407"/>
<text text-anchor="start" x="18648.114" y="-141068.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; String) =&gt; scala.reflect.io.AbstractFile</text>
<text text-anchor="middle" x="18766.614" y="-141053.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[String,Char,That] -->
<g id="node1948" class="node">
<title>scala.collection.generic.CanBuildFrom[String,Char,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-141136.8701" rx="233.1906" ry="26.7407"/>
<text text-anchor="start" x="18609.614" y="-141140.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[String,Char,That]</text>
<text text-anchor="middle" x="18766.614" y="-141125.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Global.this.terminal.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1949" class="node">
<title>Global.this.terminal.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-141208.8701" rx="172.5681" ry="26.7407"/>
<text text-anchor="start" x="18652.614" y="-141212.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.terminal.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-141197.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Option[Typers.this.global.ClassfileAnnotArg],That] -->
<g id="node1950" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Option[Typers.this.global.ClassfileAnnotArg],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-141280.8701" rx="479.3368" ry="26.7407"/>
<text text-anchor="start" x="18435.614" y="-141284.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Option[Typers.this.global.ClassfileAnnotArg],That]</text>
<text text-anchor="middle" x="18766.614" y="-141269.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Erasure.this.global.Tree =&gt; Erasure.this.global.Type -->
<g id="node1951" class="node">
<title>Erasure.this.global.Tree =&gt; Erasure.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-141352.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-141356.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Erasure.this.global.Tree =&gt; Erasure.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-141341.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.BYTEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1952" class="node">
<title>JavaScanners.this.global.javanme.BYTEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-141424.8701" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="18587.614" y="-141428.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.BYTEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-141413.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Int, scala.tools.asm.Type)],scala.tools.asm.tree.VarInsnNode,That] -->
<g id="node1953" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Int, scala.tools.asm.Type)],scala.tools.asm.tree.VarInsnNode,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-141496.8701" rx="446.3688" ry="26.7407"/>
<text text-anchor="start" x="18459.114" y="-141500.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Int, scala.tools.asm.Type)],scala.tools.asm.tree.VarInsnNode,That]</text>
<text text-anchor="middle" x="18766.614" y="-141485.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; java.lang.reflect.Method -->
<g id="node1954" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; java.lang.reflect.Method</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-141568.8701" rx="218.492" ry="26.7407"/>
<text text-anchor="start" x="18620.114" y="-141572.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; java.lang.reflect.Method</text>
<text text-anchor="middle" x="18766.614" y="-141557.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.Position -->
<g id="node1955" class="node">
<title>((Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.Position</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-141640.8701" rx="244.818" ry="26.7407"/>
<text text-anchor="start" x="18601.614" y="-141644.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.Position</text>
<text text-anchor="middle" x="18766.614" y="-141629.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.ValDef],Typers.this.global.Type,List[Typers.this.global.Type]] -->
<g id="node1956" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.ValDef],Typers.this.global.Type,List[Typers.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-141712.8701" rx="499.849" ry="26.7407"/>
<text text-anchor="start" x="18421.114" y="-141716.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.ValDef],Typers.this.global.Type,List[Typers.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-141701.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Symbol -->
<g id="node1957" class="node">
<title>((Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-141784.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="18599.614" y="-141788.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; SpecializeTypes.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-141773.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; Reifiers.this.global.Symbol -->
<g id="node1958" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; Reifiers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-141856.8701" rx="288.4991" ry="26.7407"/>
<text text-anchor="start" x="18570.614" y="-141860.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; Reifiers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-141845.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- (=&gt; Reifier.this.SymbolTable) =&gt; ?{def ++=: ?} -->
<g id="node1959" class="node">
<title>(=&gt; Reifier.this.SymbolTable) =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-141928.8701" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="18631.114" y="-141932.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Reifier.this.SymbolTable) =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-141917.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.ValDef],Typers.this.global.Ident,That] -->
<g id="node1960" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.ValDef],Typers.this.global.Ident,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-142000.8701" rx="404.4302" ry="26.7407"/>
<text text-anchor="start" x="18488.614" y="-142004.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.ValDef],Typers.this.global.Ident,That]</text>
<text text-anchor="middle" x="18766.614" y="-141989.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Float -->
<g id="node1961" class="node">
<title>Unit =&gt; Float</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-142072.8701" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="18726.614" y="-142076.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Float</text>
<text text-anchor="middle" x="18766.614" y="-142061.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest],Inliner.this.postProcessor.inlinerHeuristics.InlineRequest,List[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest]] -->
<g id="node1962" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest],Inliner.this.postProcessor.inlinerHeuristics.InlineRequest,List[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-142144.8701" rx="875.2964" ry="26.7407"/>
<text text-anchor="start" x="18155.614" y="-142148.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest],Inliner.this.postProcessor.inlinerHeuristics.InlineRequest,List[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest]]</text>
<text text-anchor="middle" x="18766.614" y="-142133.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(103) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1963" class="node">
<title>Int(103) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-142216.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-142220.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(103) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-142205.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Map[scala.tools.asm.tree.AbstractInsnNode,scala.tools.asm.tree.AbstractInsnNode]) =&gt; ?{def +=: ?} -->
<g id="node1964" class="node">
<title>(=&gt; scala.collection.immutable.Map[scala.tools.asm.tree.AbstractInsnNode,scala.tools.asm.tree.AbstractInsnNode]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-142288.8701" rx="528.8318" ry="26.7407"/>
<text text-anchor="start" x="18400.614" y="-142292.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Map[scala.tools.asm.tree.AbstractInsnNode,scala.tools.asm.tree.AbstractInsnNode]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-142277.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.typechecker.StdAttachments.&lt;refinement&gt;.type =&gt; ?{def expandQuasiquote: ?} -->
<g id="node1965" class="node">
<title>scala.tools.nsc.typechecker.StdAttachments.&lt;refinement&gt;.type =&gt; ?{def expandQuasiquote: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-142360.8701" rx="381.6754" ry="26.7407"/>
<text text-anchor="start" x="18504.614" y="-142364.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.StdAttachments.&lt;refinement&gt;.type =&gt; ?{def expandQuasiquote: ?}</text>
<text text-anchor="middle" x="18766.614" y="-142349.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[Int],scala.tools.asm.tree.analysis.SourceValue,Seq[scala.tools.asm.tree.analysis.SourceValue]] -->
<g id="node1966" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[Int],scala.tools.asm.tree.analysis.SourceValue,Seq[scala.tools.asm.tree.analysis.SourceValue]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-142432.8701" rx="548.9298" ry="26.7407"/>
<text text-anchor="start" x="18386.614" y="-142436.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[Int],scala.tools.asm.tree.analysis.SourceValue,Seq[scala.tools.asm.tree.analysis.SourceValue]]</text>
<text text-anchor="middle" x="18766.614" y="-142421.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Long] =&gt; Array[Class[_]] -->
<g id="node1967" class="node">
<title>Array[Long] =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-142504.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="18677.114" y="-142508.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Long] =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-142493.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.mutable.Buffer[scala.tools.asm.tree.AnnotationNode] =&gt; ?{def asJava: ?} -->
<g id="node1968" class="node">
<title>scala.collection.mutable.Buffer[scala.tools.asm.tree.AnnotationNode] =&gt; ?{def asJava: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-142576.8701" rx="361.1632" ry="26.7407"/>
<text text-anchor="start" x="18519.114" y="-142580.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.mutable.Buffer[scala.tools.asm.tree.AnnotationNode] =&gt; ?{def asJava: ?}</text>
<text text-anchor="middle" x="18766.614" y="-142565.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Array[Byte] -->
<g id="node1969" class="node">
<title>(=&gt; Unit) =&gt; Array[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-142648.8701" rx="113.2743" ry="26.7407"/>
<text text-anchor="start" x="18694.614" y="-142652.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Array[Byte]</text>
<text text-anchor="middle" x="18766.614" y="-142637.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Symbol],String,List[String]] -->
<g id="node1970" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Symbol],String,List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-142720.8701" rx="403.5161" ry="26.7407"/>
<text text-anchor="start" x="18489.114" y="-142724.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Symbol],String,List[String]]</text>
<text text-anchor="middle" x="18766.614" y="-142709.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.CHARkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1971" class="node">
<title>JavaScanners.this.global.javanme.CHARkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-142792.8701" rx="265.7444" ry="26.7407"/>
<text text-anchor="start" x="18586.614" y="-142796.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.CHARkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-142781.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; Parsers.this.global.Symbol -->
<g id="node1972" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; Parsers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-142864.8701" rx="285.8424" ry="26.7407"/>
<text text-anchor="start" x="18572.614" y="-142868.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; Parsers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-142853.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 1ms</text>
</g>
<!-- (=&gt; Array[Boolean]) =&gt; Array[CNF.this.Clause] -->
<g id="node1973" class="node">
<title>(=&gt; Array[Boolean]) =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-142936.8701" rx="202.4653" ry="26.7407"/>
<text text-anchor="start" x="18631.614" y="-142940.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Boolean]) =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-142925.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.math.Ordering[tools.nsc.backend.jvm.BTypes.InternalName] -->
<g id="node1974" class="node">
<title>scala.math.Ordering[tools.nsc.backend.jvm.BTypes.InternalName]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-143008.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="18583.114" y="-143012.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.math.Ordering[tools.nsc.backend.jvm.BTypes.InternalName]</text>
<text text-anchor="middle" x="18766.614" y="-142997.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (tools.nsc.backend.jvm.BTypes.InternalName, scala.collection.immutable.Set[tools.nsc.backend.jvm.BTypes.InternalName]) &lt;:&lt; (tools.nsc.backend.jvm.BTypes.InternalName, Set[tools.nsc.backend.jvm.BTypes.InternalName]) -->
<g id="node1975" class="node">
<title>(tools.nsc.backend.jvm.BTypes.InternalName, scala.collection.immutable.Set[tools.nsc.backend.jvm.BTypes.InternalName]) &lt;:&lt; (tools.nsc.backend.jvm.BTypes.InternalName, Set[tools.nsc.backend.jvm.BTypes.InternalName])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-143080.8701" rx="896.7228" ry="26.7407"/>
<text text-anchor="start" x="18140.614" y="-143084.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(tools.nsc.backend.jvm.BTypes.InternalName, scala.collection.immutable.Set[tools.nsc.backend.jvm.BTypes.InternalName]) &lt;:&lt; (tools.nsc.backend.jvm.BTypes.InternalName, Set[tools.nsc.backend.jvm.BTypes.InternalName])</text>
<text text-anchor="middle" x="18766.614" y="-143069.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int =&gt; ?{def &amp;=: ?} -->
<g id="node1976" class="node">
<title>Int =&gt; ?{def &amp;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-143152.8701" rx="91.4341" ry="26.7407"/>
<text text-anchor="start" x="18710.114" y="-143156.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; ?{def &amp;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-143141.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],SpecializeTypes.this.global.Type,That] -->
<g id="node1977" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],SpecializeTypes.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-143224.8701" rx="468.2094" ry="26.7407"/>
<text text-anchor="start" x="18443.614" y="-143228.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],SpecializeTypes.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-143213.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39; (and %s &lt;: %s)&#39;) =&gt; ?{def format: ?} -->
<g id="node1978" class="node">
<title>String(&#39; (and %s &lt;: %s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-143296.8701" rx="189.5092" ry="26.7407"/>
<text text-anchor="start" x="18640.614" y="-143300.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39; (and %s &lt;: %s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-143285.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; BCodeSyncAndTry.this.global.Symbol -->
<g id="node1979" class="node">
<title>((Nothing, Nothing)) =&gt; BCodeSyncAndTry.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-143368.8701" rx="260.8448" ry="26.7407"/>
<text text-anchor="start" x="18590.114" y="-143372.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; BCodeSyncAndTry.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-143357.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.global.definitions.DoubleClass.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1980" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.global.definitions.DoubleClass.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-143440.8701" rx="366.9768" ry="26.7407"/>
<text text-anchor="start" x="18515.114" y="-143444.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.global.definitions.DoubleClass.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-143429.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.FlagSet -->
<g id="node1981" class="node">
<title>(=&gt; (Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-143512.8701" rx="256.8596" ry="26.7407"/>
<text text-anchor="start" x="18593.114" y="-143516.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-143501.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[DocComments.this.Symbol],DocComments.this.Symbol,That] -->
<g id="node1982" class="node">
<title>scala.collection.generic.CanBuildFrom[List[DocComments.this.Symbol],DocComments.this.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-143584.8701" rx="427.5993" ry="26.7407"/>
<text text-anchor="start" x="18472.114" y="-143588.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[DocComments.this.Symbol],DocComments.this.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-143573.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Char(&#39;,&#39;) =&gt; String -->
<g id="node1983" class="node">
<title>Char(&#39;,&#39;) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-143656.8701" rx="82.9636" ry="26.7407"/>
<text text-anchor="start" x="18716.114" y="-143660.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Char(&#39;,&#39;) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-143645.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.LinkedHashMap[ToolBoxGlobal.this.FreeTermSymbol,ToolBoxGlobal.this.TermName],(ToolBoxGlobal.this.TermName, ToolBoxGlobal.this.FreeTermSymbol),That] -->
<g id="node1984" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.LinkedHashMap[ToolBoxGlobal.this.FreeTermSymbol,ToolBoxGlobal.this.TermName],(ToolBoxGlobal.this.TermName, ToolBoxGlobal.this.FreeTermSymbol),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-143728.8701" rx="914.9923" ry="26.7407"/>
<text text-anchor="start" x="18127.614" y="-143732.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.LinkedHashMap[ToolBoxGlobal.this.FreeTermSymbol,ToolBoxGlobal.this.TermName],(ToolBoxGlobal.this.TermName, ToolBoxGlobal.this.FreeTermSymbol),That]</text>
<text text-anchor="middle" x="18766.614" y="-143717.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def split(x$1: ? &gt;: Char(&#39;.&#39;)): ?} -->
<g id="node1985" class="node">
<title>String =&gt; ?{def split(x$1: ? &gt;: Char(&#39;.&#39;)): ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-143800.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="18646.114" y="-143804.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def split(x$1: ? &gt;: Char(&#39;.&#39;)): ?}</text>
<text text-anchor="middle" x="18766.614" y="-143789.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- qual.type =&gt; ?{def DOT: ?} -->
<g id="node1986" class="node">
<title>qual.type =&gt; ?{def DOT: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-143872.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="18688.114" y="-143876.6701" font-family="Times,serif" font-size="14.00" fill="#000000">qual.type =&gt; ?{def DOT: ?}</text>
<text text-anchor="middle" x="18766.614" y="-143861.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; java.io.FilenameFilter -->
<g id="node1987" class="node">
<title>Unit =&gt; java.io.FilenameFilter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-143944.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-143948.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; java.io.FilenameFilter</text>
<text text-anchor="middle" x="18766.614" y="-143933.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Unit] =&gt; Array[Class[_]] -->
<g id="node1988" class="node">
<title>Array[Unit] =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-144016.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="18679.114" y="-144020.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Unit] =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-144005.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- pattern.type =&gt; ?{def contains(x$1: ? &gt;: Char(&#39;*&#39;)): Boolean} -->
<g id="node1989" class="node">
<title>pattern.type =&gt; ?{def contains(x$1: ? &gt;: Char(&#39;*&#39;)): Boolean}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-144088.8701" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="18598.614" y="-144092.6701" font-family="Times,serif" font-size="14.00" fill="#000000">pattern.type =&gt; ?{def contains(x$1: ? &gt;: Char(&#39;*&#39;)): Boolean}</text>
<text text-anchor="middle" x="18766.614" y="-144077.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- res.type =&gt; ?{def toList: ?} -->
<g id="node1990" class="node">
<title>res.type =&gt; ?{def toList: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-144160.8701" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="18690.114" y="-144164.6701" font-family="Times,serif" font-size="14.00" fill="#000000">res.type =&gt; ?{def toList: ?}</text>
<text text-anchor="middle" x="18766.614" y="-144149.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.Type],Infer.this.global.Type,List[Infer.this.global.Type]] -->
<g id="node1991" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.Type],Infer.this.global.Type,List[Infer.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-144232.8701" rx="468.2094" ry="26.7407"/>
<text text-anchor="start" x="18443.614" y="-144236.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.Type],Infer.this.global.Type,List[Infer.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-144221.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- JavaScanners.this.global.javanme.TRUEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1992" class="node">
<title>JavaScanners.this.global.javanme.TRUEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-144304.8701" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="18587.614" y="-144308.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.TRUEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-144293.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;SearchResult(%s, %s)&#39;) =&gt; ?{def format: ?} -->
<g id="node1993" class="node">
<title>String(&#39;SearchResult(%s, %s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-144376.8701" rx="212.2642" ry="26.7407"/>
<text text-anchor="start" x="18624.614" y="-144380.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;SearchResult(%s, %s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-144365.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.MACROkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node1994" class="node">
<title>Scanners.this.global.nme.MACROkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-144448.8701" rx="241.6612" ry="26.7407"/>
<text text-anchor="start" x="18603.614" y="-144452.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.MACROkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-144437.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Boolean -->
<g id="node1995" class="node">
<title>((Nothing, Nothing)) =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-144520.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="18674.614" y="-144524.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-144509.6701" font-family="Times,serif" font-size="14.00" fill="#000000">231 times = 73ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchOptimization.this.global.CaseDef],MatchOptimization.this.global.Symbol,That] -->
<g id="node1996" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchOptimization.this.global.CaseDef],MatchOptimization.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-144592.8701" rx="519.0328" ry="26.7407"/>
<text text-anchor="start" x="18407.614" y="-144596.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchOptimization.this.global.CaseDef],MatchOptimization.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-144581.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[scala.reflect.io.Path],java.net.URL,That] -->
<g id="node1997" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[scala.reflect.io.Path],java.net.URL,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-144736.8701" rx="347.7931" ry="26.7407"/>
<text text-anchor="start" x="18528.614" y="-144740.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[scala.reflect.io.Path],java.net.URL,That]</text>
<text text-anchor="middle" x="18766.614" y="-144725.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[java.net.URL] -->
<g id="node2984" class="node">
<title>scala.reflect.ClassTag[java.net.URL]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-144700.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="38060.3606" y="-144704.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[java.net.URL]</text>
<text text-anchor="middle" x="38161.3606" y="-144689.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[scala.reflect.io.Path],java.net.URL,That]&#45;&gt;scala.reflect.ClassTag[java.net.URL] -->
<g id="edge15" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[scala.reflect.io.Path],java.net.URL,That]&#45;&gt;scala.reflect.ClassTag[java.net.URL]</title>
<path fill="none" stroke="#000000" d="M19114.5884,-144736.2242C21572.941,-144731.661 36275.0153,-144704.3714 37996.7974,-144701.1755"/>
<polygon fill="#000000" stroke="#000000" points="37997.07,-144704.6751 38007.0634,-144701.1565 37997.0569,-144697.6751 37997.07,-144704.6751"/>
</g>
<!-- Option[Typers.this.global.ClassfileAnnotArg] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node1998" class="node">
<title>Option[Typers.this.global.ClassfileAnnotArg] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-144808.8701" rx="362.0773" ry="26.7407"/>
<text text-anchor="start" x="18518.614" y="-144812.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Typers.this.global.ClassfileAnnotArg] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-144797.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)],(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName),List[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)]] -->
<g id="node1999" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)],(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName),List[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-144880.8701" rx="1083.0752" ry="26.7407"/>
<text text-anchor="start" x="18008.614" y="-144884.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)],(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName),List[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)]]</text>
<text text-anchor="middle" x="18766.614" y="-144869.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (=&gt; List[JavaParsers.this.global.Tree]) =&gt; ?{def :+=: ?} -->
<g id="node2000" class="node">
<title>(=&gt; List[JavaParsers.this.global.Tree]) =&gt; ?{def :+=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-144952.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-144956.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[JavaParsers.this.global.Tree]) =&gt; ?{def :+=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-144941.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cond.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2001" class="node">
<title>cond.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-145024.8701" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="18694.114" y="-145028.6701" font-family="Times,serif" font-size="14.00" fill="#000000">cond.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-145013.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeGen.this.global.Type],TreeGen.this.global.TypeTree,List[TreeGen.this.global.Tree]] -->
<g id="node2002" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeGen.this.global.Type],TreeGen.this.global.TypeTree,List[TreeGen.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-145096.8701" rx="527.5033" ry="26.7407"/>
<text text-anchor="start" x="18401.614" y="-145100.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeGen.this.global.Type],TreeGen.this.global.TypeTree,List[TreeGen.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-145085.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Holes.this.global.Type -->
<g id="node2003" class="node">
<title>Unit =&gt; Holes.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-145168.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="18680.614" y="-145172.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Holes.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-145157.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;gt&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2004" class="node">
<title>String(&#39;gt&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-145240.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="18692.614" y="-145244.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;gt&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-145229.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[scala.tools.asm.Handle] =&gt; Seq[scala.tools.asm.Handle] -->
<g id="node2005" class="node">
<title>Array[scala.tools.asm.Handle] =&gt; Seq[scala.tools.asm.Handle]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-145312.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="18593.614" y="-145316.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[scala.tools.asm.Handle] =&gt; Seq[scala.tools.asm.Handle]</text>
<text text-anchor="middle" x="18766.614" y="-145301.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,CallGraph.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.ClassInfo] =&gt; ?{def orThrow: ?} -->
<g id="node2006" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,CallGraph.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.ClassInfo] =&gt; ?{def orThrow: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-145384.8701" rx="692.9293" ry="26.7407"/>
<text text-anchor="start" x="18284.614" y="-145388.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,CallGraph.this.postProcessor.bTypesFromClassfile.postProcessor.bTypes.ClassInfo] =&gt; ?{def orThrow: ?}</text>
<text text-anchor="middle" x="18766.614" y="-145373.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(JavaScanners.this.global.Name, Int)],(Int, JavaScanners.this.global.Name),That] -->
<g id="node2007" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(JavaScanners.this.global.Name, Int)],(Int, JavaScanners.this.global.Name),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-145456.8701" rx="497.6064" ry="26.7407"/>
<text text-anchor="start" x="18422.614" y="-145460.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(JavaScanners.this.global.Name, Int)],(Int, JavaScanners.this.global.Name),That]</text>
<text text-anchor="middle" x="18766.614" y="-145445.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;locals (%d total): %n&#39;) =&gt; ?{def format: ?} -->
<g id="node2008" class="node">
<title>String(&#39;locals (%d total): %n&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-145528.8701" rx="208.693" ry="26.7407"/>
<text text-anchor="start" x="18627.114" y="-145532.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;locals (%d total): %n&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-145517.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Set[Infer.this.global.TypeVar] =&gt; ?{def &#45;=: ?} -->
<g id="node2009" class="node">
<title>scala.collection.immutable.Set[Infer.this.global.TypeVar] =&gt; ?{def &#45;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-145600.8701" rx="299.2124" ry="26.7407"/>
<text text-anchor="start" x="18563.114" y="-145604.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[Infer.this.global.TypeVar] =&gt; ?{def &#45;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-145589.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],java.io.File,List[java.io.File]] -->
<g id="node2010" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],java.io.File,List[java.io.File]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-145672.8701" rx="326.8668" ry="26.7407"/>
<text text-anchor="start" x="18543.614" y="-145676.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],java.io.File,List[java.io.File]]</text>
<text text-anchor="middle" x="18766.614" y="-145661.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Char] =&gt; ?{def iterator: ?} -->
<g id="node2011" class="node">
<title>Array[Char] =&gt; ?{def iterator: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-145744.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="18674.614" y="-145748.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Char] =&gt; ?{def iterator: ?}</text>
<text text-anchor="middle" x="18766.614" y="-145733.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- JavaScanners.this.global.javanme.PROTECTEDkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2012" class="node">
<title>JavaScanners.this.global.javanme.PROTECTEDkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-145816.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="18566.614" y="-145820.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.PROTECTEDkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-145805.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[ExtensionMethods.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node2013" class="node">
<title>List[ExtensionMethods.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-145888.8701" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="18526.114" y="-145892.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[ExtensionMethods.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-145877.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Short] =&gt; Array[AnyRef] -->
<g id="node2014" class="node">
<title>Array[Short] =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-145960.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-145964.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Short] =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-145949.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[SpecializeTypes.this.SpecializedSuperConstructorCallArgument.type] -->
<g id="node2015" class="node">
<title>scala.reflect.ClassTag[SpecializeTypes.this.SpecializedSuperConstructorCallArgument.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-146032.8701" rx="369.6338" ry="26.7407"/>
<text text-anchor="start" x="18513.114" y="-146036.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[SpecializeTypes.this.SpecializedSuperConstructorCallArgument.type]</text>
<text text-anchor="middle" x="18766.614" y="-146021.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.global.definitions.UnitClass.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2016" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.global.definitions.UnitClass.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-146104.8701" rx="355.8495" ry="26.7407"/>
<text text-anchor="start" x="18523.114" y="-146108.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.global.definitions.UnitClass.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-146093.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)],String,That] -->
<g id="node2017" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-146176.8701" rx="525.2607" ry="26.7407"/>
<text text-anchor="start" x="18403.114" y="-146180.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-146165.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; TreeAndTypeAnalysis.this.global.AnnotationInfo) =&gt; TreeAndTypeAnalysis.this.global.Type -->
<g id="node2018" class="node">
<title>(=&gt; TreeAndTypeAnalysis.this.global.AnnotationInfo) =&gt; TreeAndTypeAnalysis.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-146248.8701" rx="393.3028" ry="26.7407"/>
<text text-anchor="start" x="18496.614" y="-146252.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; TreeAndTypeAnalysis.this.global.AnnotationInfo) =&gt; TreeAndTypeAnalysis.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-146237.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Map[scala.tools.asm.tree.InvokeDynamicInsnNode,CallGraph.this.ClosureInstantiation]) =&gt; ?{def +=: ?} -->
<g id="node2019" class="node">
<title>(=&gt; scala.collection.immutable.Map[scala.tools.asm.tree.InvokeDynamicInsnNode,CallGraph.this.ClosureInstantiation]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-146320.8701" rx="546.6871" ry="26.7407"/>
<text text-anchor="start" x="18388.114" y="-146324.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Map[scala.tools.asm.tree.InvokeDynamicInsnNode,CallGraph.this.ClosureInstantiation]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-146309.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[String] =&gt; ?{def ::=: ?} -->
<g id="node2020" class="node">
<title>List[String] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-146392.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="18688.114" y="-146396.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[String] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-146381.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[PatternTypers.this.global.Tree],PatternTypers.this.global.Tree,That] -->
<g id="node2021" class="node">
<title>scala.collection.generic.CanBuildFrom[List[PatternTypers.this.global.Tree],PatternTypers.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-146464.8701" rx="446.3688" ry="26.7407"/>
<text text-anchor="start" x="18459.114" y="-146468.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[PatternTypers.this.global.Tree],PatternTypers.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-146453.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.global.definitions.ShortClass.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2022" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.global.definitions.ShortClass.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-146536.8701" rx="359.8347" ry="26.7407"/>
<text text-anchor="start" x="18520.114" y="-146540.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.global.definitions.ShortClass.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-146525.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[StackTraceElement] =&gt; ?{def dropRight: ?} -->
<g id="node2023" class="node">
<title>Array[StackTraceElement] =&gt; ?{def dropRight: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-146608.8701" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="18626.614" y="-146612.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[StackTraceElement] =&gt; ?{def dropRight: ?}</text>
<text text-anchor="middle" x="18766.614" y="-146597.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Array[Int] -->
<g id="node2024" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-146680.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="18659.614" y="-146684.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-146669.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[TypeDiagnostics.this.TypeDiag]) =&gt; ?{def +=: ?} -->
<g id="node2025" class="node">
<title>(=&gt; scala.collection.immutable.Set[TypeDiagnostics.this.TypeDiag]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-146752.8701" rx="346.4646" ry="26.7407"/>
<text text-anchor="start" x="18529.614" y="-146756.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[TypeDiagnostics.this.TypeDiag]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-146741.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;COMMAND: \&#39;scala %s\&#39;&#39;) =&gt; ?{def format: ?} -->
<g id="node2026" class="node">
<title>String(&#39;COMMAND: \&#39;scala %s\&#39;&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-146824.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-146828.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;COMMAND: &#39;scala %s&#39;&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-146813.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Namers.this.global.TypeDef],Namers.this.global.Symbol,List[Namers.this.global.Symbol]] -->
<g id="node2027" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Namers.this.global.TypeDef],Namers.this.global.Symbol,List[Namers.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-146896.8701" rx="538.2165" ry="26.7407"/>
<text text-anchor="start" x="18394.114" y="-146900.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Namers.this.global.TypeDef],Namers.this.global.Symbol,List[Namers.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-146885.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Extractors.this.global.TypeBounds -->
<g id="node2028" class="node">
<title>((Nothing, Nothing)) =&gt; Extractors.this.global.TypeBounds</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-146968.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="18602.614" y="-146972.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Extractors.this.global.TypeBounds</text>
<text text-anchor="middle" x="18766.614" y="-146957.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; BCodeSyncAndTry.this.global.Symbol -->
<g id="node2029" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; BCodeSyncAndTry.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-147040.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-147044.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; BCodeSyncAndTry.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-147029.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- Float =&gt; Long -->
<g id="node2030" class="node">
<title>Float =&gt; Long</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-147112.8701" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="18723.114" y="-147116.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Float =&gt; Long</text>
<text text-anchor="middle" x="18766.614" y="-147101.6701" font-family="Times,serif" font-size="14.00" fill="#000000">20 times = 0ms</text>
</g>
<!-- ((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Short] -->
<g id="node2031" class="node">
<title>((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Short]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-147184.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-147188.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Short]</text>
<text text-anchor="middle" x="18766.614" y="-147173.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[List[RefChecks.this.global.Type]]) =&gt; ?{def +=: ?} -->
<g id="node2032" class="node">
<title>(=&gt; scala.collection.immutable.Set[List[RefChecks.this.global.Type]]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-147256.8701" rx="352.6926" ry="26.7407"/>
<text text-anchor="start" x="18525.114" y="-147260.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[List[RefChecks.this.global.Type]]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-147245.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Parsers.this.global.Type -->
<g id="node2033" class="node">
<title>Unit =&gt; Parsers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-147328.8701" rx="138.6859" ry="26.7407"/>
<text text-anchor="start" x="18676.614" y="-147332.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Parsers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-147317.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; TreeDSL.this.global.gen.global.Symbol -->
<g id="node2034" class="node">
<title>((Nothing, Nothing)) =&gt; TreeDSL.this.global.gen.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-147400.8701" rx="263.5019" ry="26.7407"/>
<text text-anchor="start" x="18588.114" y="-147404.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; TreeDSL.this.global.gen.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-147389.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[Namers.this.global.ValDef]],List[Namers.this.global.ValDef],List[List[Namers.this.global.ValDef]]] -->
<g id="node2035" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[Namers.this.global.ValDef]],List[Namers.this.global.ValDef],List[List[Namers.this.global.ValDef]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-147472.8701" rx="591.6968" ry="26.7407"/>
<text text-anchor="start" x="18356.114" y="-147476.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[Namers.this.global.ValDef]],List[Namers.this.global.ValDef],List[List[Namers.this.global.ValDef]]]</text>
<text text-anchor="middle" x="18766.614" y="-147461.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.NULLkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2036" class="node">
<title>Scanners.this.global.nme.NULLkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-147544.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="18610.614" y="-147548.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.NULLkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-147533.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Unit, Unit)) =&gt; Contexts.this.global.Name -->
<g id="node2037" class="node">
<title>((Nothing, Unit, Unit)) =&gt; Contexts.this.global.Name</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-147616.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-147620.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit, Unit)) =&gt; Contexts.this.global.Name</text>
<text text-anchor="middle" x="18766.614" y="-147605.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeGen.this.global.Symbol],TreeGen.this.global.TermSymbol,That] -->
<g id="node2038" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeGen.this.global.Symbol],TreeGen.this.global.TermSymbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-147688.8701" rx="452.5967" ry="26.7407"/>
<text text-anchor="start" x="18454.614" y="-147692.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeGen.this.global.Symbol],TreeGen.this.global.TermSymbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-147677.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.CLASSkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2039" class="node">
<title>Scanners.this.global.nme.CLASSkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-147760.8701" rx="236.3475" ry="26.7407"/>
<text text-anchor="start" x="18607.614" y="-147764.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.CLASSkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-147749.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Map[BCodeSyncAndTry.this.global.Symbol,scala.tools.asm.Label]) =&gt; ?{def &#45;=: ?} -->
<g id="node2040" class="node">
<title>(=&gt; scala.collection.immutable.Map[BCodeSyncAndTry.this.global.Symbol,scala.tools.asm.Label]) =&gt; ?{def &#45;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-147832.8701" rx="465.0526" ry="26.7407"/>
<text text-anchor="start" x="18445.614" y="-147836.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Map[BCodeSyncAndTry.this.global.Symbol,scala.tools.asm.Label]) =&gt; ?{def &#45;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-147821.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],Infer.this.global.Type,That] -->
<g id="node2041" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],Infer.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-147904.8701" rx="391.0601" ry="26.7407"/>
<text text-anchor="start" x="18498.114" y="-147908.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],Infer.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-147893.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Boolean) =&gt; ?{def &amp;=: ?} -->
<g id="node2042" class="node">
<title>(=&gt; Boolean) =&gt; ?{def &amp;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-147976.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="18680.614" y="-147980.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Boolean) =&gt; ?{def &amp;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-147965.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- part.type =&gt; ?{def stripSuffix: ?} -->
<g id="node2043" class="node">
<title>part.type =&gt; ?{def stripSuffix: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-148048.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="18674.614" y="-148052.6701" font-family="Times,serif" font-size="14.00" fill="#000000">part.type =&gt; ?{def stripSuffix: ?}</text>
<text text-anchor="middle" x="18766.614" y="-148037.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.tools.nsc.typechecker.ContextMode.SecondTry.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2044" class="node">
<title>scala.tools.nsc.typechecker.ContextMode.SecondTry.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-148120.8701" rx="299.6267" ry="26.7407"/>
<text text-anchor="start" x="18562.614" y="-148124.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.ContextMode.SecondTry.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-148109.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Parsers.this.global.Tree =&gt; Parsers.this.global.Apply -->
<g id="node2045" class="node">
<title>Parsers.this.global.Tree =&gt; Parsers.this.global.Apply</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-148192.8701" rx="216.2494" ry="26.7407"/>
<text text-anchor="start" x="18621.614" y="-148196.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Parsers.this.global.Tree =&gt; Parsers.this.global.Apply</text>
<text text-anchor="middle" x="18766.614" y="-148181.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.AnnotationInfo],BCodeSkelBuilder.this.global.AnnotationInfo,That] -->
<g id="node2046" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.AnnotationInfo],BCodeSkelBuilder.this.global.AnnotationInfo,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-148264.8701" rx="565.8709" ry="26.7407"/>
<text text-anchor="start" x="18374.614" y="-148268.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeSkelBuilder.this.global.AnnotationInfo],BCodeSkelBuilder.this.global.AnnotationInfo,That]</text>
<text text-anchor="middle" x="18766.614" y="-148253.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Flatten.this.global.AnnotationInfo) =&gt; Flatten.this.global.Type -->
<g id="node2047" class="node">
<title>(=&gt; Flatten.this.global.AnnotationInfo) =&gt; Flatten.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-148336.8701" rx="272.4724" ry="26.7407"/>
<text text-anchor="start" x="18582.114" y="-148340.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Flatten.this.global.AnnotationInfo) =&gt; Flatten.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-148325.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- SyntheticMethods.this.global.Ident =&gt; ?{def IS_OBJ: ?} -->
<g id="node2048" class="node">
<title>SyntheticMethods.this.global.Ident =&gt; ?{def IS_OBJ: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-148408.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="18610.114" y="-148412.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SyntheticMethods.this.global.Ident =&gt; ?{def IS_OBJ: ?}</text>
<text text-anchor="middle" x="18766.614" y="-148397.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- name.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;$&#39;)): ?} -->
<g id="node2049" class="node">
<title>name.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;$&#39;)): ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-148480.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="18632.614" y="-148484.6701" font-family="Times,serif" font-size="14.00" fill="#000000">name.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;$&#39;)): ?}</text>
<text text-anchor="middle" x="18766.614" y="-148469.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- SyntheticMethods.this.global.Apply =&gt; ?{def OR: ?} -->
<g id="node2050" class="node">
<title>SyntheticMethods.this.global.Apply =&gt; ?{def OR: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-148552.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-148556.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SyntheticMethods.this.global.Apply =&gt; ?{def OR: ?}</text>
<text text-anchor="middle" x="18766.614" y="-148541.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Not setting associatedFile to %s because %s is a %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2051" class="node">
<title>String(&#39;Not setting associatedFile to %s because %s is a %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-148624.8701" rx="328.1951" ry="26.7407"/>
<text text-anchor="start" x="18542.614" y="-148628.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Not setting associatedFile to %s because %s is a %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-148613.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$6.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2052" class="node">
<title>x$6.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-148696.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="18697.114" y="-148700.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$6.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-148685.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; SymbolTables.this.global.Type -->
<g id="node2053" class="node">
<title>Unit =&gt; SymbolTables.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-148768.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="18656.614" y="-148772.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; SymbolTables.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-148757.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Erasure.this.global.CaseDef],Erasure.this.global.CaseDef,List[Erasure.this.global.CaseDef]] -->
<g id="node2054" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Erasure.this.global.CaseDef],Erasure.this.global.CaseDef,List[Erasure.this.global.CaseDef]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-148840.8701" rx="539.5449" ry="26.7407"/>
<text text-anchor="start" x="18393.114" y="-148844.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Erasure.this.global.CaseDef],Erasure.this.global.CaseDef,List[Erasure.this.global.CaseDef]]</text>
<text text-anchor="middle" x="18766.614" y="-148829.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- trace.type =&gt; ?{def size: ?} -->
<g id="node2055" class="node">
<title>trace.type =&gt; ?{def size: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-148912.8701" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="18690.114" y="-148916.6701" font-family="Times,serif" font-size="14.00" fill="#000000">trace.type =&gt; ?{def size: ?}</text>
<text text-anchor="middle" x="18766.614" y="-148901.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; List[Any]) =&gt; ?{def ::=: ?} -->
<g id="node2056" class="node">
<title>(=&gt; List[Any]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-148984.8701" rx="136.4432" ry="26.7407"/>
<text text-anchor="start" x="18678.114" y="-148988.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Any]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-148973.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; java.util.jar.Manifest -->
<g id="node2057" class="node">
<title>(=&gt; Unit) =&gt; java.util.jar.Manifest</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-149056.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="18670.114" y="-149060.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; java.util.jar.Manifest</text>
<text text-anchor="middle" x="18766.614" y="-149045.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[SpecializeTypes.this.global.Type]],List[SpecializeTypes.this.global.Type],That] -->
<g id="node2058" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[SpecializeTypes.this.global.Type]],List[SpecializeTypes.this.global.Type],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-149128.8701" rx="510.5622" ry="26.7407"/>
<text text-anchor="start" x="18413.614" y="-149132.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[SpecializeTypes.this.global.Type]],List[SpecializeTypes.this.global.Type],That]</text>
<text text-anchor="middle" x="18766.614" y="-149117.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.YIELDkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2059" class="node">
<title>Scanners.this.global.nme.YIELDkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-149200.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-149204.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.YIELDkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-149189.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; NodePrinters.this.global.Tree -->
<g id="node2060" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; NodePrinters.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-149272.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="18607.114" y="-149276.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; NodePrinters.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-149261.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Symbol],RefChecks.this.global.TypeBounds,That] -->
<g id="node2061" class="node">
<title>scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Symbol],RefChecks.this.global.TypeBounds,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-149344.8701" rx="466.881" ry="26.7407"/>
<text text-anchor="start" x="18444.614" y="-149348.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Symbol],RefChecks.this.global.TypeBounds,That]</text>
<text text-anchor="middle" x="18766.614" y="-149333.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.util.ListIterator[scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def asScala: ?} -->
<g id="node2062" class="node">
<title>java.util.ListIterator[scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-149416.8701" rx="326.8668" ry="26.7407"/>
<text text-anchor="start" x="18543.614" y="-149420.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.ListIterator[scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-149405.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 4ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],Infer.this.global.TypeVar,List[Infer.this.global.TypeVar]] -->
<g id="node2063" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],Infer.this.global.TypeVar,List[Infer.this.global.TypeVar]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-149488.8701" rx="506.9911" ry="26.7407"/>
<text text-anchor="start" x="18416.114" y="-149492.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],Infer.this.global.TypeVar,List[Infer.this.global.TypeVar]]</text>
<text text-anchor="middle" x="18766.614" y="-149477.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Comment&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType -->
<g id="node2064" class="node">
<title>String(&#39;Comment&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-149560.8701" rx="369.2195" ry="26.7407"/>
<text text-anchor="start" x="18513.614" y="-149564.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Comment&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</text>
<text text-anchor="middle" x="18766.614" y="-149549.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Macros.this.global.treeInfo.global.Tree],Macros.this.global.treeInfo.global.Tree,List[Macros.this.global.gen.global.Tree]] -->
<g id="node2065" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Macros.this.global.treeInfo.global.Tree],Macros.this.global.treeInfo.global.Tree,List[Macros.this.global.gen.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-149632.8701" rx="654.5618" ry="26.7407"/>
<text text-anchor="start" x="18311.614" y="-149636.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Macros.this.global.treeInfo.global.Tree],Macros.this.global.treeInfo.global.Tree,List[Macros.this.global.gen.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-149621.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[TreeCheckers.this.global.MemberDef] =&gt; ?{def ::=: ?} -->
<g id="node2066" class="node">
<title>List[TreeCheckers.this.global.MemberDef] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-149704.8701" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="18601.114" y="-149708.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[TreeCheckers.this.global.MemberDef] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-149693.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;[check: %s] %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2067" class="node">
<title>String(&#39;[check: %s] %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-149776.8701" rx="186.8525" ry="26.7407"/>
<text text-anchor="start" x="18642.614" y="-149780.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;[check: %s] %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-149765.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- List[scala.reflect.macros.contexts.Context{val universe: Macros.this.global.type}] =&gt; ?{def ::=: ?} -->
<g id="node2068" class="node">
<title>List[scala.reflect.macros.contexts.Context{val universe: Macros.this.global.type}] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-149848.8701" rx="395.9596" ry="26.7407"/>
<text text-anchor="start" x="18494.614" y="-149852.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[scala.reflect.macros.contexts.Context{val universe: Macros.this.global.type}] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-149837.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.languageFeature.existentials -->
<g id="node2069" class="node">
<title>scala.languageFeature.existentials</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-149920.8701" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="18674.114" y="-149924.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.languageFeature.existentials</text>
<text text-anchor="middle" x="18766.614" y="-149909.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Array[Char] =&gt; Array[AnyRef] -->
<g id="node2070" class="node">
<title>Array[Char] =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-149992.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="18679.114" y="-149996.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Char] =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-149981.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- String(&#39;plugins&#39;) =&gt; scala.reflect.io.Path -->
<g id="node2071" class="node">
<title>String(&#39;plugins&#39;) =&gt; scala.reflect.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-150064.8701" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="18657.614" y="-150068.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;plugins&#39;) =&gt; scala.reflect.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-150053.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Interface.this.global.Symbol],Interface.this.global.Symbol,To1] -->
<g id="node2072" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Interface.this.global.Symbol],Interface.this.global.Symbol,To1]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-150136.8701" rx="429.8419" ry="26.7407"/>
<text text-anchor="start" x="18470.614" y="-150140.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Interface.this.global.Symbol],Interface.this.global.Symbol,To1]</text>
<text text-anchor="middle" x="18766.614" y="-150125.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Unapplies.this.global.TypeDef],Unapplies.this.global.Ident,List[Unapplies.this.global.Tree]] -->
<g id="node2073" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Unapplies.this.global.TypeDef],Unapplies.this.global.Ident,List[Unapplies.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-150208.8701" rx="540.4593" ry="26.7407"/>
<text text-anchor="start" x="18392.614" y="-150212.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Unapplies.this.global.TypeDef],Unapplies.this.global.Ident,List[Unapplies.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-150197.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Int(8192) =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node2074" class="node">
<title>Int(8192) =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-150280.8701" rx="224.72" ry="26.7407"/>
<text text-anchor="start" x="18615.614" y="-150284.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(8192) =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-150269.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.CaseDef],Typers.this.global.CaseDef,That] -->
<g id="node2075" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.CaseDef],Typers.this.global.CaseDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-150352.8701" rx="422.6998" ry="26.7407"/>
<text text-anchor="start" x="18475.614" y="-150356.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.CaseDef],Typers.this.global.CaseDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-150341.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- s.type =&gt; ?{def toInt: ?} -->
<g id="node2076" class="node">
<title>s.type =&gt; ?{def toInt: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-150424.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-150428.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def toInt: ?}</text>
<text text-anchor="middle" x="18766.614" y="-150413.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;$buf&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType -->
<g id="node2077" class="node">
<title>String(&#39;$buf&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-150496.8701" rx="349.1216" ry="26.7407"/>
<text text-anchor="start" x="18527.614" y="-150500.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;$buf&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</text>
<text text-anchor="middle" x="18766.614" y="-150485.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Executing ant task scalacfork, origin: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2078" class="node">
<title>String(&#39;Executing ant task scalacfork, origin: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-150568.8701" rx="284.0141" ry="26.7407"/>
<text text-anchor="start" x="18573.614" y="-150572.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Executing ant task scalacfork, origin: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-150557.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- boxMethodSym.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2079" class="node">
<title>boxMethodSym.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-150640.8701" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="18663.114" y="-150644.6701" font-family="Times,serif" font-size="14.00" fill="#000000">boxMethodSym.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-150629.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((List[Checkable.this.global.Type], List[Checkable.this.global.Type])) =&gt; ?{def zipped: ?} -->
<g id="node2080" class="node">
<title>((List[Checkable.this.global.Type], List[Checkable.this.global.Type])) =&gt; ?{def zipped: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-150712.8701" rx="364.3201" ry="26.7407"/>
<text text-anchor="start" x="18517.114" y="-150716.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((List[Checkable.this.global.Type], List[Checkable.this.global.Type])) =&gt; ?{def zipped: ?}</text>
<text text-anchor="middle" x="18766.614" y="-150701.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- lazySym.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2081" class="node">
<title>lazySym.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-150784.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="18683.614" y="-150788.6701" font-family="Times,serif" font-size="14.00" fill="#000000">lazySym.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-150773.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; BrowsingLoaders.this.global.Symbol -->
<g id="node2082" class="node">
<title>((Nothing, Nothing)) =&gt; BrowsingLoaders.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-150856.8701" rx="253.2885" ry="26.7407"/>
<text text-anchor="start" x="18595.614" y="-150860.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; BrowsingLoaders.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-150845.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Array[Long] -->
<g id="node2083" class="node">
<title>((Nothing, Nothing)) =&gt; Array[Long]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-150928.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="18662.614" y="-150932.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Array[Long]</text>
<text text-anchor="middle" x="18766.614" y="-150917.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; NamesDefaults.this.global.gen.global.Symbol -->
<g id="node2084" class="node">
<title>((Nothing, Nothing)) =&gt; NamesDefaults.this.global.gen.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-151000.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="18571.114" y="-151004.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; NamesDefaults.this.global.gen.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-150989.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],Solver.this.Sym,List[Solver.this.Sym]] -->
<g id="node2085" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],Solver.this.Sym,List[Solver.this.Sym]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-151072.8701" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="18526.114" y="-151076.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],Solver.this.Sym,List[Solver.this.Sym]]</text>
<text text-anchor="middle" x="18766.614" y="-151061.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[java.io.File],String,List[String]] -->
<g id="node2086" class="node">
<title>scala.collection.generic.CanBuildFrom[List[java.io.File],String,List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-151144.8701" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="18557.614" y="-151148.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[java.io.File],String,List[String]]</text>
<text text-anchor="middle" x="18766.614" y="-151133.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Taggers.this.c.universe.definitions.CharTpe.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2087" class="node">
<title>Taggers.this.c.universe.definitions.CharTpe.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-151216.8701" rx="263.5019" ry="26.7407"/>
<text text-anchor="start" x="18588.114" y="-151220.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Taggers.this.c.universe.definitions.CharTpe.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-151205.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[Throwable] -->
<g id="node2088" class="node">
<title>scala.reflect.ClassTag[Throwable]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-151288.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="18673.114" y="-151292.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Throwable]</text>
<text text-anchor="middle" x="18766.614" y="-151277.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; MatchTreeMaking.this.global.Symbol -->
<g id="node2089" class="node">
<title>((Nothing, Nothing)) =&gt; MatchTreeMaking.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-151360.8701" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="18592.114" y="-151364.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; MatchTreeMaking.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-151349.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def +=: ?} -->
<g id="node2090" class="node">
<title>scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-151432.8701" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="18526.114" y="-151436.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-151421.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Char =&gt; ?{def toLower: ?} -->
<g id="node2091" class="node">
<title>Char =&gt; ?{def toLower: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-151504.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="18691.114" y="-151508.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Char =&gt; ?{def toLower: ?}</text>
<text text-anchor="middle" x="18766.614" y="-151493.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.tools.asm.Label] -->
<g id="node2092" class="node">
<title>scala.reflect.ClassTag[scala.tools.asm.Label]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-151576.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="18643.114" y="-151580.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.tools.asm.Label]</text>
<text text-anchor="middle" x="18766.614" y="-151565.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- String(&#39;jvm&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2093" class="node">
<title>String(&#39;jvm&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-151648.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="18686.614" y="-151652.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;jvm&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-151637.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- thisCase.type =&gt; ?{def DOT: ?} -->
<g id="node2094" class="node">
<title>thisCase.type =&gt; ?{def DOT: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-151720.8701" rx="137.7717" ry="26.7407"/>
<text text-anchor="start" x="18677.114" y="-151724.6701" font-family="Times,serif" font-size="14.00" fill="#000000">thisCase.type =&gt; ?{def DOT: ?}</text>
<text text-anchor="middle" x="18766.614" y="-151709.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; TreeGen.this.global.Tree -->
<g id="node2095" class="node">
<title>((Nothing, Nothing)) =&gt; TreeGen.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-151792.8701" rx="205.5364" ry="26.7407"/>
<text text-anchor="start" x="18629.114" y="-151796.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; TreeGen.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-151781.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; List[RefChecks.this.global.Type] -->
<g id="node2096" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; List[RefChecks.this.global.Type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-151864.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="18596.614" y="-151868.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; List[RefChecks.this.global.Type]</text>
<text text-anchor="middle" x="18766.614" y="-151853.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- StringContext =&gt; ?{def sm: ?} -->
<g id="node2097" class="node">
<title>StringContext =&gt; ?{def sm: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-151936.8701" rx="132.4583" ry="26.7407"/>
<text text-anchor="start" x="18681.114" y="-151940.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StringContext =&gt; ?{def sm: ?}</text>
<text text-anchor="middle" x="18766.614" y="-151925.6701" font-family="Times,serif" font-size="14.00" fill="#000000">31 times = 11ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Array[Char] -->
<g id="node2098" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Array[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-152008.8701" rx="193.0803" ry="26.7407"/>
<text text-anchor="start" x="18638.114" y="-152012.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Array[Char]</text>
<text text-anchor="middle" x="18766.614" y="-151997.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.FlagSet -->
<g id="node2099" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-152080.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="18614.614" y="-152084.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-152069.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- oldEntry.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2100" class="node">
<title>oldEntry.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-152152.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="18683.614" y="-152156.6701" font-family="Times,serif" font-size="14.00" fill="#000000">oldEntry.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-152141.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; (CompilationUnits.this.Tree =&gt; CompilationUnits.this.Tree) -->
<g id="node2101" class="node">
<title>Unit =&gt; (CompilationUnits.this.Tree =&gt; CompilationUnits.this.Tree)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-152224.8701" rx="280.0286" ry="26.7407"/>
<text text-anchor="start" x="18576.614" y="-152228.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; (CompilationUnits.this.Tree =&gt; CompilationUnits.this.Tree)</text>
<text text-anchor="middle" x="18766.614" y="-152213.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(MatchTranslation.this.global.Symbol, MatchTranslation.this.global.Tree)],MatchTranslation.this.global.Symbol,That] -->
<g id="node2102" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(MatchTranslation.this.global.Symbol, MatchTranslation.this.global.Tree)],MatchTranslation.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-152296.8701" rx="644.3486" ry="26.7407"/>
<text text-anchor="start" x="18319.114" y="-152300.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(MatchTranslation.this.global.Symbol, MatchTranslation.this.global.Tree)],MatchTranslation.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-152285.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Placeholders.this.global.Tree],Placeholders.this.global.Tree,List[Placeholders.this.global.Tree]] -->
<g id="node2103" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Placeholders.this.global.Tree],Placeholders.this.global.Tree,List[Placeholders.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-152368.8701" rx="552.0009" ry="26.7407"/>
<text text-anchor="start" x="18384.114" y="-152372.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Placeholders.this.global.Tree],Placeholders.this.global.Tree,List[Placeholders.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-152357.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 7ms</text>
</g>
<!-- scala.reflect.ClassTag[Parsers.this.Q.type] -->
<g id="node2104" class="node">
<title>scala.reflect.ClassTag[Parsers.this.Q.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-152440.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="18650.614" y="-152444.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Parsers.this.Q.type]</text>
<text text-anchor="middle" x="18766.614" y="-152429.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 7ms</text>
</g>
<!-- Array[Float] =&gt; Array[Class[_]] -->
<g id="node2105" class="node">
<title>Array[Float] =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-152512.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-152516.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Float] =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-152501.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Symbol],Implicits.this.global.Symbol,That] -->
<g id="node2106" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Symbol],Implicits.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-152584.8701" rx="433.4129" ry="26.7407"/>
<text text-anchor="start" x="18468.114" y="-152588.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Symbol],Implicits.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-152573.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;MacroContext(%s@%s +%d)&#39;) =&gt; ?{def format: ?} -->
<g id="node2107" class="node">
<title>String(&#39;MacroContext(%s@%s +%d)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-152656.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="18602.614" y="-152660.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;MacroContext(%s@%s +%d)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-152645.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Int -->
<g id="node2108" class="node">
<title>(=&gt; Unit) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-152728.8701" rx="77.1494" ry="26.7407"/>
<text text-anchor="start" x="18720.114" y="-152732.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-152717.6701" font-family="Times,serif" font-size="14.00" fill="#000000">90 times = 4ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Interface.this.global.Symbol],Interface.this.global.Symbol#NameType,That] -->
<g id="node2109" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Interface.this.global.Symbol],Interface.this.global.Symbol#NameType,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-152800.8701" rx="480.251" ry="26.7407"/>
<text text-anchor="start" x="18435.114" y="-152804.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Interface.this.global.Symbol],Interface.this.global.Symbol#NameType,That]</text>
<text text-anchor="middle" x="18766.614" y="-152789.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: V] -->
<g id="node2110" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: V]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-152872.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="18568.114" y="-152876.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: V]</text>
<text text-anchor="middle" x="18766.614" y="-152861.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;\n&lt;&lt;&#45;&#45; %s %s after phase \&#39;%s\&#39; &#45;&#45;&gt;&gt;&#39;) =&gt; ?{def format: ?} -->
<g id="node2111" class="node">
<title>String(&#39;\n&lt;&lt;&#45;&#45; %s %s after phase \&#39;%s\&#39; &#45;&#45;&gt;&gt;&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-152954.8701" rx="228.291" ry="37.4533"/>
<text text-anchor="middle" x="18766.614" y="-152966.1701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;</text>
<text text-anchor="start" x="18613.114" y="-152951.1701" font-family="Times,serif" font-size="14.00" fill="#000000">&lt;&lt;&#45;&#45; %s %s after phase &#39;%s&#39; &#45;&#45;&gt;&gt;&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-152936.1701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.DOTkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2112" class="node">
<title>Scanners.this.global.nme.DOTkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-153036.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="18614.614" y="-153040.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.DOTkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-153025.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.FALSEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2113" class="node">
<title>JavaScanners.this.global.javanme.FALSEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-153108.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="18584.614" y="-153112.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.FALSEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-153097.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- msg.type =&gt; ?{def format: ?} -->
<g id="node2114" class="node">
<title>msg.type =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-153180.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="18683.614" y="-153184.6701" font-family="Times,serif" font-size="14.00" fill="#000000">msg.type =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-153169.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- args.type =&gt; ?{def map: ?} -->
<g id="node2115" class="node">
<title>args.type =&gt; ?{def map: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-153252.8701" rx="118.5882" ry="26.7407"/>
<text text-anchor="start" x="18690.614" y="-153256.6701" font-family="Times,serif" font-size="14.00" fill="#000000">args.type =&gt; ?{def map: ?}</text>
<text text-anchor="middle" x="18766.614" y="-153241.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;reflective typecheck has failed: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2116" class="node">
<title>String(&#39;reflective typecheck has failed: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-153324.8701" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="18590.614" y="-153328.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;reflective typecheck has failed: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-153313.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Implicits.this.ImplicitInfo -->
<g id="node2117" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Implicits.this.ImplicitInfo</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-153396.8701" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="18590.614" y="-153400.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Implicits.this.ImplicitInfo</text>
<text text-anchor="middle" x="18766.614" y="-153385.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Parsers.this.global.Position -->
<g id="node2118" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Parsers.this.global.Position</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-153468.8701" rx="250.1317" ry="26.7407"/>
<text text-anchor="start" x="18597.614" y="-153472.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Parsers.this.global.Position</text>
<text text-anchor="middle" x="18766.614" y="-153457.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Any],GenUtils.this.global.Tree,That] -->
<g id="node2119" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Any],GenUtils.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-153540.8701" rx="326.8668" ry="26.7407"/>
<text text-anchor="start" x="18543.614" y="-153544.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Any],GenUtils.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-153529.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Scanners.this.Offset =&gt; ?{def +=: ?} -->
<g id="node2120" class="node">
<title>Scanners.this.Offset =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-153612.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="18664.114" y="-153616.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.Offset =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-153601.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- String(&#39;(%2s) &#39;) =&gt; ?{def format: ?} -->
<g id="node2121" class="node">
<title>String(&#39;(%2s) &#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-153684.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="18667.114" y="-153688.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;(%2s) &#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-153673.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- default.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2122" class="node">
<title>default.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-153756.8701" rx="121.7449" ry="26.7407"/>
<text text-anchor="start" x="18688.614" y="-153760.6701" font-family="Times,serif" font-size="14.00" fill="#000000">default.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-153745.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[Infer.this.global.TypeVar]) =&gt; ?{def &#45;=: ?} -->
<g id="node2123" class="node">
<title>(=&gt; scala.collection.immutable.Set[Infer.this.global.TypeVar]) =&gt; ?{def &#45;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-153828.8701" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="18548.614" y="-153832.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[Infer.this.global.TypeVar]) =&gt; ?{def &#45;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-153817.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.ClassNode -->
<g id="node2124" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.ClassNode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-153900.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="18602.614" y="-153904.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.ClassNode</text>
<text text-anchor="middle" x="18766.614" y="-153889.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTracker.this.Node],SymbolTracker.this.Node,List[SymbolTracker.this.Node]] -->
<g id="node2125" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTracker.this.Node],SymbolTracker.this.Node,List[SymbolTracker.this.Node]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-153972.8701" rx="619.3511" ry="26.7407"/>
<text text-anchor="start" x="18336.614" y="-153976.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTracker.this.Node],SymbolTracker.this.Node,List[SymbolTracker.this.Node]]</text>
<text text-anchor="middle" x="18766.614" y="-153961.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; TailCalls.this.global.Tree -->
<g id="node2126" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; TailCalls.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-154044.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="18617.614" y="-154048.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; TailCalls.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-154033.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Typers.this.global.Symbol -->
<g id="node2127" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Typers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-154116.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="18614.614" y="-154120.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Typers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-154105.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Duplicators.this.global.Position -->
<g id="node2128" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Duplicators.this.global.Position</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-154188.8701" rx="281.357" ry="26.7407"/>
<text text-anchor="start" x="18575.614" y="-154192.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Duplicators.this.global.Position</text>
<text text-anchor="middle" x="18766.614" y="-154177.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Global.this.lambdaLift.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2129" class="node">
<title>Global.this.lambdaLift.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-154260.8701" rx="183.2814" ry="26.7407"/>
<text text-anchor="start" x="18645.114" y="-154264.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.lambdaLift.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-154249.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ToolBoxGlobal.this.Symbol =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2130" class="node">
<title>ToolBoxGlobal.this.Symbol =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-154332.8701" rx="185.0243" ry="26.7407"/>
<text text-anchor="start" x="18643.614" y="-154336.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ToolBoxGlobal.this.Symbol =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-154321.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- sym.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2131" class="node">
<title>sym.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-154404.8701" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="18695.614" y="-154408.6701" font-family="Times,serif" font-size="14.00" fill="#000000">sym.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-154393.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],Infer.this.global.Type,Any] -->
<g id="node2132" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],Infer.this.global.Type,Any]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-154476.8701" rx="389.7317" ry="26.7407"/>
<text text-anchor="start" x="18499.114" y="-154480.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],Infer.this.global.Type,Any]</text>
<text text-anchor="middle" x="18766.614" y="-154465.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;misc&#39;) =&gt; scala.reflect.io.Path -->
<g id="node2133" class="node">
<title>String(&#39;misc&#39;) =&gt; scala.reflect.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-154548.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="18664.114" y="-154552.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;misc&#39;) =&gt; scala.reflect.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-154537.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- BoundTree.this.binder.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2134" class="node">
<title>BoundTree.this.binder.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-154620.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="18646.114" y="-154624.6701" font-family="Times,serif" font-size="14.00" fill="#000000">BoundTree.this.binder.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-154609.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- copyOp.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2135" class="node">
<title>copyOp.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-154692.8701" rx="125.316" ry="26.7407"/>
<text text-anchor="start" x="18686.114" y="-154696.6701" font-family="Times,serif" font-size="14.00" fill="#000000">copyOp.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-154681.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Infer.this.global.Symbol] =&gt; Infer.this.global.Type -->
<g id="node2136" class="node">
<title>List[Infer.this.global.Symbol] =&gt; Infer.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-154764.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="18613.114" y="-154768.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Infer.this.global.Symbol] =&gt; Infer.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-154753.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[CNF.this.Clause],CNF.this.Clause,CNF.this.Cnf] -->
<g id="node2137" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[CNF.this.Clause],CNF.this.Clause,CNF.this.Cnf]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-154836.8701" rx="381.6754" ry="26.7407"/>
<text text-anchor="start" x="18504.614" y="-154840.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[CNF.this.Clause],CNF.this.Clause,CNF.this.Cnf]</text>
<text text-anchor="middle" x="18766.614" y="-154825.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[CNF.this.Clause] -->
<g id="node3182" class="node">
<title>scala.reflect.ClassTag[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-154836.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="38051.8606" y="-154840.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[CNF.this.Clause]</text>
<text text-anchor="middle" x="38161.3606" y="-154825.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[CNF.this.Clause],CNF.this.Clause,CNF.this.Cnf]&#45;&gt;scala.reflect.ClassTag[CNF.this.Clause] -->
<g id="edge3" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[CNF.this.Clause],CNF.this.Clause,CNF.this.Cnf]&#45;&gt;scala.reflect.ClassTag[CNF.this.Clause]</title>
<path fill="none" stroke="#000000" d="M19148.5854,-154836.8701C21699.3056,-154836.8701 36215.0078,-154836.8701 37984.6247,-154836.8701"/>
<polygon fill="#000000" stroke="#000000" points="37984.8672,-154840.3702 37994.8672,-154836.8701 37984.8672,-154833.3702 37984.8672,-154840.3702"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],scala.tools.nsc.util.ClassPath,That] -->
<g id="node2138" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],scala.tools.nsc.util.ClassPath,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-154908.8701" rx="347.379" ry="26.7407"/>
<text text-anchor="start" x="18529.114" y="-154912.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],scala.tools.nsc.util.ClassPath,That]</text>
<text text-anchor="middle" x="18766.614" y="-154897.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;symbol definition&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2139" class="node">
<title>String(&#39;symbol definition&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-154980.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="18649.114" y="-154984.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;symbol definition&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-154969.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[Helpers.this.global.treeInfo.global.Symbol]],List[Helpers.this.global.treeInfo.global.Symbol],List[List[Helpers.this.global.Symbol]]] -->
<g id="node2140" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[Helpers.this.global.treeInfo.global.Symbol]],List[Helpers.this.global.treeInfo.global.Symbol],List[List[Helpers.this.global.Symbol]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-155052.8701" rx="715.6841" ry="26.7407"/>
<text text-anchor="start" x="18268.614" y="-155056.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[Helpers.this.global.treeInfo.global.Symbol]],List[Helpers.this.global.treeInfo.global.Symbol],List[List[Helpers.this.global.Symbol]]]</text>
<text text-anchor="middle" x="18766.614" y="-155041.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,Boolean] =&gt; ?{def get: ?} -->
<g id="node2141" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,Boolean] =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-155124.8701" rx="380.3469" ry="26.7407"/>
<text text-anchor="start" x="18505.614" y="-155128.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,Boolean] =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-155113.6701" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 11ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Traversable[String],String,That] -->
<g id="node2142" class="node">
<title>scala.collection.generic.CanBuildFrom[Traversable[String],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-155196.8701" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="18569.614" y="-155200.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Traversable[String],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-155185.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[OptimizedCodegen.this.Casegen =&gt; MatchCodeGen.this.global.Tree],MatchCodeGen.this.global.LabelDef,That] -->
<g id="node2143" class="node">
<title>scala.collection.generic.CanBuildFrom[List[OptimizedCodegen.this.Casegen =&gt; MatchCodeGen.this.global.Tree],MatchCodeGen.this.global.LabelDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-155268.8701" rx="622.9222" ry="26.7407"/>
<text text-anchor="start" x="18334.114" y="-155272.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[OptimizedCodegen.this.Casegen =&gt; MatchCodeGen.this.global.Tree],MatchCodeGen.this.global.LabelDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-155257.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.SUBTYPEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2144" class="node">
<title>Scanners.this.global.nme.SUBTYPEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-155340.8701" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="18598.614" y="-155344.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.SUBTYPEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-155329.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; scala.tools.nsc.reporters.Reporter -->
<g id="node2145" class="node">
<title>((Nothing, Nothing)) =&gt; scala.tools.nsc.reporters.Reporter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-155412.8701" rx="237.6758" ry="26.7407"/>
<text text-anchor="start" x="18606.614" y="-155416.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; scala.tools.nsc.reporters.Reporter</text>
<text text-anchor="middle" x="18766.614" y="-155401.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[GenTypes.this.global.AnnotationInfo],GenTypes.this.global.Tree,List[GenTypes.this.global.Tree]] -->
<g id="node2146" class="node">
<title>scala.collection.generic.CanBuildFrom[List[GenTypes.this.global.AnnotationInfo],GenTypes.this.global.Tree,List[GenTypes.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-155484.8701" rx="564.9566" ry="26.7407"/>
<text text-anchor="start" x="18375.114" y="-155488.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[GenTypes.this.global.AnnotationInfo],GenTypes.this.global.Tree,List[GenTypes.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-155473.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;;\n (Note that %s is abstract,\n &#160;and is therefore overridden by concrete %s)&#39;) =&gt; ?{def format: ?} -->
<g id="node2147" class="node">
<title>String(&#39;;\n (Note that %s is abstract,\n &#160;and is therefore overridden by concrete %s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-155577.8701" rx="272.4724" ry="48.1667"/>
<text text-anchor="middle" x="18766.614" y="-155596.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;;</text>
<text text-anchor="middle" x="18766.614" y="-155581.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> (Note that %s is abstract,</text>
<text text-anchor="start" x="18582.114" y="-155566.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;and is therefore overridden by concrete %s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-155551.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[SymbolTables.this.global.Tree] -->
<g id="node2148" class="node">
<title>scala.reflect.ClassTag[SymbolTables.this.global.Tree]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-155670.8701" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="18618.114" y="-155674.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[SymbolTables.this.global.Tree]</text>
<text text-anchor="middle" x="18766.614" y="-155659.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Elem&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType -->
<g id="node2149" class="node">
<title>String(&#39;Elem&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-155742.8701" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="18526.114" y="-155746.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Elem&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</text>
<text text-anchor="middle" x="18766.614" y="-155731.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[Mixin.this.global.Symbol]) =&gt; ?{def ::=: ?} -->
<g id="node2150" class="node">
<title>(=&gt; List[Mixin.this.global.Symbol]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-155814.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-155818.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Mixin.this.global.Symbol]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-155803.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Not],MatchAnalyzer.this.Var,That] -->
<g id="node2151" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Not],MatchAnalyzer.this.Var,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-155886.8701" rx="399.5307" ry="26.7407"/>
<text text-anchor="start" x="18492.114" y="-155890.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Not],MatchAnalyzer.this.Var,That]</text>
<text text-anchor="middle" x="18766.614" y="-155875.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.SUPERkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2152" class="node">
<title>Scanners.this.global.nme.SUPERkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-155958.8701" rx="236.3475" ry="26.7407"/>
<text text-anchor="start" x="18607.614" y="-155962.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.SUPERkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-155947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[scala.tools.nsc.transform.patmat.Lit] =&gt; ?{def toSet: ?} -->
<g id="node2153" class="node">
<title>Option[scala.tools.nsc.transform.patmat.Lit] =&gt; ?{def toSet: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-156030.8701" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="18592.114" y="-156034.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[scala.tools.nsc.transform.patmat.Lit] =&gt; ?{def toSet: ?}</text>
<text text-anchor="middle" x="18766.614" y="-156019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; String) =&gt; Char -->
<g id="node2155" class="node">
<title>(=&gt; String) =&gt; Char</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-156102.8701" rx="91.4341" ry="26.7407"/>
<text text-anchor="start" x="18710.114" y="-156106.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; String) =&gt; Char</text>
<text text-anchor="middle" x="18766.614" y="-156091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(SyntheticMethods.this.global.TermSymbol, () =&gt; SyntheticMethods.this.global.Tree)],SyntheticMethods.this.global.Tree,That] -->
<g id="node2156" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(SyntheticMethods.this.global.TermSymbol, () =&gt; SyntheticMethods.this.global.Tree)],SyntheticMethods.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-156174.8701" rx="680.8877" ry="26.7407"/>
<text text-anchor="start" x="18293.114" y="-156178.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(SyntheticMethods.this.global.TermSymbol, () =&gt; SyntheticMethods.this.global.Tree)],SyntheticMethods.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-156163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Symbol -->
<g id="node2157" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-156246.8701" rx="284.9281" ry="26.7407"/>
<text text-anchor="start" x="18573.114" y="-156250.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-156235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; List[MatchCodeGen.this.global.Tree] -->
<g id="node2158" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; List[MatchCodeGen.this.global.Tree]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-156318.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="18584.614" y="-156322.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; List[MatchCodeGen.this.global.Tree]</text>
<text text-anchor="middle" x="18766.614" y="-156307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;\&#39;%s\&#39; expected instead of \&#39;%s\&#39;&#39;) =&gt; ?{def format: ?} -->
<g id="node2159" class="node">
<title>String(&#39;\&#39;%s\&#39; expected instead of \&#39;%s\&#39;&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-156390.8701" rx="236.3475" ry="26.7407"/>
<text text-anchor="start" x="18607.614" y="-156394.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;&#39;%s&#39; expected instead of &#39;%s&#39;&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-156379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; List[States.this.global.Tree] -->
<g id="node2160" class="node">
<title>Unit =&gt; List[States.this.global.Tree]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-156462.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="18666.614" y="-156466.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; List[States.this.global.Tree]</text>
<text text-anchor="middle" x="18766.614" y="-156451.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scala.collection.immutable.Map[scala.tools.asm.tree.AbstractInsnNode,List[scala.tools.asm.tree.AbstractInsnNode]] =&gt; ?{def +=: ?} -->
<g id="node2161" class="node">
<title>scala.collection.immutable.Map[scala.tools.asm.tree.AbstractInsnNode,List[scala.tools.asm.tree.AbstractInsnNode]] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-156534.8701" rx="529.746" ry="26.7407"/>
<text text-anchor="start" x="18400.114" y="-156538.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[scala.tools.asm.tree.AbstractInsnNode,List[scala.tools.asm.tree.AbstractInsnNode]] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-156523.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;%s DefTrees with symbol \&#39;%s\&#39;: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2162" class="node">
<title>String(&#39;%s DefTrees with symbol \&#39;%s\&#39;: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-156606.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-156610.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s DefTrees with symbol &#39;%s&#39;: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-156595.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((UnCurry.this.global.ValDef, UnCurry.this.global.ValDef)) =&gt; (A1, A2) -->
<g id="node2163" class="node">
<title>((UnCurry.this.global.ValDef, UnCurry.this.global.ValDef)) =&gt; (A1, A2)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-156678.8701" rx="296.9697" ry="26.7407"/>
<text text-anchor="start" x="18564.614" y="-156682.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((UnCurry.this.global.ValDef, UnCurry.this.global.ValDef)) =&gt; (A1, A2)</text>
<text text-anchor="middle" x="18766.614" y="-156667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.Type],Infer.this.global.Name,That] -->
<g id="node2164" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.Type],Infer.this.global.Name,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-156750.8701" rx="383.918" ry="26.7407"/>
<text text-anchor="start" x="18503.114" y="-156754.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.Type],Infer.this.global.Name,That]</text>
<text text-anchor="middle" x="18766.614" y="-156739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.Tree -->
<g id="node2165" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-156822.8701" rx="214.007" ry="26.7407"/>
<text text-anchor="start" x="18623.114" y="-156826.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-156811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Array[scala.tools.asm.Type] =&gt; ?{def corresponds: ?} -->
<g id="node2166" class="node">
<title>Array[scala.tools.asm.Type] =&gt; ?{def corresponds: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-156894.8701" rx="222.9775" ry="26.7407"/>
<text text-anchor="start" x="18617.114" y="-156898.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[scala.tools.asm.Type] =&gt; ?{def corresponds: ?}</text>
<text text-anchor="middle" x="18766.614" y="-156883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 9ms</text>
</g>
<!-- Scanners.this.global.nme.TYPEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2167" class="node">
<title>Scanners.this.global.nme.TYPEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-156966.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-156970.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.TYPEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-156955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Base directory is `%s`&#39;) =&gt; ?{def format: ?} -->
<g id="node2168" class="node">
<title>String(&#39;Base directory is `%s`&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-157038.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="18625.114" y="-157042.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Base directory is `%s`&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-157027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[(scala.tools.nsc.io.AbstractFile, scala.tools.nsc.io.AbstractFile)] =&gt; ?{def ::=: ?} -->
<g id="node2169" class="node">
<title>List[(scala.tools.nsc.io.AbstractFile, scala.tools.nsc.io.AbstractFile)] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-157110.8701" rx="342.4795" ry="26.7407"/>
<text text-anchor="start" x="18532.614" y="-157114.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[(scala.tools.nsc.io.AbstractFile, scala.tools.nsc.io.AbstractFile)] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-157099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(46) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2170" class="node">
<title>Int(46) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-157182.8701" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="18702.114" y="-157186.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(46) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-157171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[TypeDiagnostics.this.global.Type] =&gt; scala.collection.IterableLike[El2,Repr2] -->
<g id="node2171" class="node">
<title>List[TypeDiagnostics.this.global.Type] =&gt; scala.collection.IterableLike[El2,Repr2]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-157254.8701" rx="334.423" ry="26.7407"/>
<text text-anchor="start" x="18538.114" y="-157258.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[TypeDiagnostics.this.global.Type] =&gt; scala.collection.IterableLike[El2,Repr2]</text>
<text text-anchor="middle" x="18766.614" y="-157243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.SubComponent],scala.tools.nsc.SubComponent,List[scala.tools.nsc.SubComponent]] -->
<g id="node2172" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.SubComponent],scala.tools.nsc.SubComponent,List[scala.tools.nsc.SubComponent]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-157326.8701" rx="571.1846" ry="26.7407"/>
<text text-anchor="start" x="18370.614" y="-157330.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.SubComponent],scala.tools.nsc.SubComponent,List[scala.tools.nsc.SubComponent]]</text>
<text text-anchor="middle" x="18766.614" y="-157315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.asm.tree.analysis.Frame[scala.tools.asm.tree.analysis.SourceValue] =&gt; ?{def getValue: ?} -->
<g id="node2173" class="node">
<title>scala.tools.asm.tree.analysis.Frame[scala.tools.asm.tree.analysis.SourceValue] =&gt; ?{def getValue: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-157398.8701" rx="405.7586" ry="26.7407"/>
<text text-anchor="start" x="18487.614" y="-157402.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.asm.tree.analysis.Frame[scala.tools.asm.tree.analysis.SourceValue] =&gt; ?{def getValue: ?}</text>
<text text-anchor="middle" x="18766.614" y="-157387.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;) %s %s(&#39;) =&gt; ?{def format: ?} -->
<g id="node2174" class="node">
<title>String(&#39;) %s %s(&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-157470.8701" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="18660.114" y="-157474.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;) %s %s(&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-157459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- cname.type =&gt; ?{def getterName: ?} -->
<g id="node2175" class="node">
<title>cname.type =&gt; ?{def getterName: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-157542.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="18664.114" y="-157546.6701" font-family="Times,serif" font-size="14.00" fill="#000000">cname.type =&gt; ?{def getterName: ?}</text>
<text text-anchor="middle" x="18766.614" y="-157531.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;define %s as %s%s instead. (SLS 4.5)&#39;) =&gt; ?{def format: ?} -->
<g id="node2176" class="node">
<title>String(&#39;define %s as %s%s instead. (SLS 4.5)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-157614.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-157618.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;define %s as %s%s instead. (SLS 4.5)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-157603.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%s %s unused or used in non&#45;specializable positions.&#39;) =&gt; ?{def format: ?} -->
<g id="node2177" class="node">
<title>String(&#39;%s %s unused or used in non&#45;specializable positions.&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-157686.8701" rx="332.1805" ry="26.7407"/>
<text text-anchor="start" x="18539.614" y="-157690.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s %s unused or used in non&#45;specializable positions.&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-157675.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; scala.reflect.io.AbstractFile -->
<g id="node2178" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; scala.reflect.io.AbstractFile</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-157758.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-157762.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; scala.reflect.io.AbstractFile</text>
<text text-anchor="middle" x="18766.614" y="-157747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- List[MatchApproximation.this.global.Symbol] =&gt; scala.collection.TraversableLike[El1,Repr1] -->
<g id="node2179" class="node">
<title>List[MatchApproximation.this.global.Symbol] =&gt; scala.collection.TraversableLike[El1,Repr1]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-157830.8701" rx="379.9328" ry="26.7407"/>
<text text-anchor="start" x="18506.114" y="-157834.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[MatchApproximation.this.global.Symbol] =&gt; scala.collection.TraversableLike[El1,Repr1]</text>
<text text-anchor="middle" x="18766.614" y="-157819.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Symbol],ContextErrors.this.global.TypeBounds,That] -->
<g id="node2180" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Symbol],ContextErrors.this.global.TypeBounds,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-157902.8701" rx="491.3784" ry="26.7407"/>
<text text-anchor="start" x="18427.114" y="-157906.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Symbol],ContextErrors.this.global.TypeBounds,That]</text>
<text text-anchor="middle" x="18766.614" y="-157891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 10ms</text>
</g>
<!-- scala.math.Ordering[(Int, String)] -->
<g id="node2181" class="node">
<title>scala.math.Ordering[(Int, String)]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-42478.8701" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="18674.114" y="-42482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.math.Ordering[(Int, String)]</text>
<text text-anchor="middle" x="18766.614" y="-42467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.math.Ordering[(Int, String)]&#45;&gt;scala.math.Ordering[String] -->
<g id="edge16" class="edge">
<title>scala.math.Ordering[(Int, String)]&#45;&gt;scala.math.Ordering[String]</title>
<path fill="none" stroke="#000000" d="M18908.68,-42478.0487C20422.7326,-42469.4569 33606.1383,-42398.6563 37533.2279,-42514.8701 37708.2295,-42520.0488 37910.3275,-42532.8552 38036.988,-42541.7075"/>
<polygon fill="#000000" stroke="#000000" points="38036.8899,-42545.2091 38047.1104,-42542.4178 38037.3799,-42538.2263 38036.8899,-42545.2091"/>
</g>
<!-- scala.math.Ordering[(Int, String)]&#45;&gt;scala.math.Ordering[Int] -->
<g id="edge4" class="edge">
<title>scala.math.Ordering[(Int, String)]&#45;&gt;scala.math.Ordering[Int]</title>
<path fill="none" stroke="#000000" d="M18908.8498,-42478.8701C20583.7372,-42478.8701 36514.4703,-42478.8701 38043.5751,-42478.8701"/>
<polygon fill="#000000" stroke="#000000" points="38043.7365,-42482.3702 38053.7364,-42478.8701 38043.7364,-42475.3702 38043.7365,-42482.3702"/>
</g>
<!-- ImplicitInfo.this.name.type =&gt; ?{def +: ?} -->
<g id="node2182" class="node">
<title>ImplicitInfo.this.name.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-157974.8701" rx="178.7961" ry="26.7407"/>
<text text-anchor="start" x="18648.114" y="-157978.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ImplicitInfo.this.name.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-157963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Int(8) =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node2183" class="node">
<title>Int(8) =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-158046.8701" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="18625.614" y="-158050.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(8) =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-158035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.LONG.type),That] -->
<g id="node2184" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.LONG.type),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-158118.8701" rx="444.5404" ry="26.7407"/>
<text text-anchor="start" x="18460.114" y="-158122.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.LONG.type),That]</text>
<text text-anchor="middle" x="18766.614" y="-158107.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;WildcardType()&#39;) =&gt; scala.text.Document -->
<g id="node2185" class="node">
<title>String(&#39;WildcardType()&#39;) =&gt; scala.text.Document</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-158190.8701" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="18631.114" y="-158194.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;WildcardType()&#39;) =&gt; scala.text.Document</text>
<text text-anchor="middle" x="18766.614" y="-158179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def capitalize: ?} -->
<g id="node2186" class="node">
<title>String =&gt; ?{def capitalize: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-158262.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="18685.114" y="-158266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def capitalize: ?}</text>
<text text-anchor="middle" x="18766.614" y="-158251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (String, Option[String]) &lt;:&lt; (T, U) -->
<g id="node2187" class="node">
<title>(String, Option[String]) &lt;:&lt; (T, U)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-158334.8701" rx="147.1565" ry="26.7407"/>
<text text-anchor="start" x="18670.614" y="-158338.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(String, Option[String]) &lt;:&lt; (T, U)</text>
<text text-anchor="middle" x="18766.614" y="-158323.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[Int]) =&gt; ?{def ::=: ?} -->
<g id="node2188" class="node">
<title>(=&gt; List[Int]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-158406.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-158410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Int]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-158395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- innerClassSym.NameType =&gt; ?{def +: ?} -->
<g id="node2189" class="node">
<title>innerClassSym.NameType =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-158478.8701" rx="176.5537" ry="26.7407"/>
<text text-anchor="start" x="18649.614" y="-158482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">innerClassSym.NameType =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-158467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- prefix.type =&gt; ?{def size: ?} -->
<g id="node2190" class="node">
<title>prefix.type =&gt; ?{def size: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-158550.8701" rx="123.9879" ry="26.7407"/>
<text text-anchor="start" x="18687.114" y="-158554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">prefix.type =&gt; ?{def size: ?}</text>
<text text-anchor="middle" x="18766.614" y="-158539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.Name -->
<g id="node2191" class="node">
<title>((Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.Name</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-158622.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="18607.114" y="-158626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.Name</text>
<text text-anchor="middle" x="18766.614" y="-158611.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Duplicators.this.global.Tree -->
<g id="node2192" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Duplicators.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-158694.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="18595.114" y="-158698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Duplicators.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-158683.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; TreeDSL.this.global.Tree -->
<g id="node2193" class="node">
<title>((Nothing, Nothing)) =&gt; TreeDSL.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-158766.8701" rx="207.7788" ry="26.7407"/>
<text text-anchor="start" x="18627.614" y="-158770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; TreeDSL.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-158755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.universe.analyzer.OpenImplicit],Typers.this.ImplicitCandidate,List[Typers.this.ImplicitCandidate]] -->
<g id="node2194" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.universe.analyzer.OpenImplicit],Typers.this.ImplicitCandidate,List[Typers.this.ImplicitCandidate]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-158838.8701" rx="613.5375" ry="26.7407"/>
<text text-anchor="start" x="18340.614" y="-158842.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.universe.analyzer.OpenImplicit],Typers.this.ImplicitCandidate,List[Typers.this.ImplicitCandidate]]</text>
<text text-anchor="middle" x="18766.614" y="-158827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; BCodeSkelBuilder.this.global.Symbol) =&gt; PlainSkelBuilder.this.Local -->
<g id="node2195" class="node">
<title>(=&gt; BCodeSkelBuilder.this.global.Symbol) =&gt; PlainSkelBuilder.this.Local</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-158910.8701" rx="303.1977" ry="26.7407"/>
<text text-anchor="start" x="18560.114" y="-158914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; BCodeSkelBuilder.this.global.Symbol) =&gt; PlainSkelBuilder.this.Local</text>
<text text-anchor="middle" x="18766.614" y="-158899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Null &lt;:&lt; StringBuilder -->
<g id="node2196" class="node">
<title>Null &lt;:&lt; StringBuilder</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-158982.8701" rx="100.3184" ry="26.7407"/>
<text text-anchor="start" x="18703.614" y="-158986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Null &lt;:&lt; StringBuilder</text>
<text text-anchor="middle" x="18766.614" y="-158971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Tree],String,List[String]] -->
<g id="node2197" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Tree],String,List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-159054.8701" rx="380.3469" ry="26.7407"/>
<text text-anchor="start" x="18505.614" y="-159058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Tree],String,List[String]]</text>
<text text-anchor="middle" x="18766.614" y="-159043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[tools.nsc.backend.jvm.BTypes.InternalName] -->
<g id="node2198" class="node">
<title>scala.reflect.ClassTag[tools.nsc.backend.jvm.BTypes.InternalName]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-159126.8701" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="18578.614" y="-159130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[tools.nsc.backend.jvm.BTypes.InternalName]</text>
<text text-anchor="middle" x="18766.614" y="-159115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(EtaExpansion.this.global.ValDef, Boolean)],EtaExpansion.this.global.ValDef,List[EtaExpansion.this.global.ValDef]] -->
<g id="node2199" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(EtaExpansion.this.global.ValDef, Boolean)],EtaExpansion.this.global.ValDef,List[EtaExpansion.this.global.ValDef]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-159198.8701" rx="639.8633" ry="26.7407"/>
<text text-anchor="start" x="18322.114" y="-159202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(EtaExpansion.this.global.ValDef, Boolean)],EtaExpansion.this.global.ValDef,List[EtaExpansion.this.global.ValDef]]</text>
<text text-anchor="middle" x="18766.614" y="-159187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; BCodeHelpers.this.global.AnnotationInfo -->
<g id="node2200" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; BCodeHelpers.this.global.AnnotationInfo</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-159270.8701" rx="284.0141" ry="26.7407"/>
<text text-anchor="start" x="18573.614" y="-159274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; BCodeHelpers.this.global.AnnotationInfo</text>
<text text-anchor="middle" x="18766.614" y="-159259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Reshape.this.global.AnnotationInfo],Reshape.this.global.Tree,That] -->
<g id="node2201" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Reshape.this.global.AnnotationInfo],Reshape.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-159342.8701" rx="444.5404" ry="26.7407"/>
<text text-anchor="start" x="18460.114" y="-159346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Reshape.this.global.AnnotationInfo],Reshape.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-159331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- String =&gt; ?{def stripMargin: ?} -->
<g id="node2202" class="node">
<title>String =&gt; ?{def stripMargin: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-159414.8701" rx="135.5294" ry="26.7407"/>
<text text-anchor="start" x="18678.614" y="-159418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def stripMargin: ?}</text>
<text text-anchor="middle" x="18766.614" y="-159403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 6ms</text>
</g>
<!-- List[UnCurry.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node2203" class="node">
<title>List[UnCurry.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-159486.8701" rx="313.4968" ry="26.7407"/>
<text text-anchor="start" x="18553.114" y="-159490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[UnCurry.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-159475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Aliases.this.universe.WeakTypeTag[T] -->
<g id="node2204" class="node">
<title>Aliases.this.universe.WeakTypeTag[T]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-159558.8701" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="18659.114" y="-159562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Aliases.this.universe.WeakTypeTag[T]</text>
<text text-anchor="middle" x="18766.614" y="-159547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Int(16) =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node2205" class="node">
<title>Int(16) =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-159630.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-159634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(16) =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-159619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- specArgs.type =&gt; ?{def corresponds: ?} -->
<g id="node2206" class="node">
<title>specArgs.type =&gt; ?{def corresponds: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-159702.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="18656.114" y="-159706.6701" font-family="Times,serif" font-size="14.00" fill="#000000">specArgs.type =&gt; ?{def corresponds: ?}</text>
<text text-anchor="middle" x="18766.614" y="-159691.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Namers.this.Context -->
<g id="node2207" class="node">
<title>Namers.this.Context</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-159774.8701" rx="91.4341" ry="26.7407"/>
<text text-anchor="start" x="18710.114" y="-159778.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Namers.this.Context</text>
<text text-anchor="middle" x="18766.614" y="-159763.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Solvable.this.cnf.type =&gt; ?{def ++: ?} -->
<g id="node2208" class="node">
<title>Solvable.this.cnf.type =&gt; ?{def ++: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-159846.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="18659.614" y="-159850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Solvable.this.cnf.type =&gt; ?{def ++: ?}</text>
<text text-anchor="middle" x="18766.614" y="-159835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.ListMap[SymbolTables.this.global.Symbol,SymbolTables.this.global.Tree],(SymbolTables.this.global.Symbol, SymbolTables.this.global.Tree),scala.collection.immutable.ListMap[SymbolTables.this.global.Symbol,SymbolTables.this.global.Tree]] -->
<g id="node2209" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.ListMap[SymbolTables.this.global.Symbol,SymbolTables.this.global.Tree],(SymbolTables.this.global.Symbol, SymbolTables.this.global.Tree),scala.collection.immutable.ListMap[SymbolTables.this.global.Symbol,SymbolTables.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-159918.8701" rx="1233.8027" ry="26.7407"/>
<text text-anchor="start" x="17902.114" y="-159922.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.ListMap[SymbolTables.this.global.Symbol,SymbolTables.this.global.Tree],(SymbolTables.this.global.Symbol, SymbolTables.this.global.Tree),scala.collection.immutable.ListMap[SymbolTables.this.global.Symbol,SymbolTables.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-159907.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- String(&#39;%d,%d: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2210" class="node">
<title>String(&#39;%d,%d: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-159990.8701" rx="172.5681" ry="26.7407"/>
<text text-anchor="start" x="18652.614" y="-159994.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%d,%d: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-159979.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; PatternTypers.this.global.Tree -->
<g id="node2211" class="node">
<title>((Nothing, Nothing)) =&gt; PatternTypers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-160062.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="18614.614" y="-160066.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; PatternTypers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-160051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- String(&#39;Unable to establish connection to server %s:%d&#39;) =&gt; ?{def format: ?} -->
<g id="node2212" class="node">
<title>String(&#39;Unable to establish connection to server %s:%d&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-160134.8701" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="18554.614" y="-160138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Unable to establish connection to server %s:%d&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-160123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.util.List[scala.tools.asm.Attribute] =&gt; ?{def asScala: ?} -->
<g id="node2213" class="node">
<title>java.util.List[scala.tools.asm.Attribute] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-160206.8701" rx="246.5607" ry="26.7407"/>
<text text-anchor="start" x="18600.114" y="-160210.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.List[scala.tools.asm.Attribute] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-160195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Scanners.this.global.nme.ABSTRACTkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2214" class="node">
<title>Scanners.this.global.nme.ABSTRACTkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-160278.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="18593.614" y="-160282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.ABSTRACTkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-160267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;|subclassing Classfile does not\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|make your annotation visible at runtime. &#160;If that is what\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|you want, you must write the annotation class in Java.&#39;) =&gt; ?{def stripMargin: ?} -->
<g id="node2215" class="node">
<title>String(&#39;|subclassing Classfile does not\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|make your annotation visible at runtime. &#160;If that is what\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|you want, you must write the annotation class in Java.&#39;) =&gt; ?{def stripMargin: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-160371.8701" rx="364.3201" ry="48.1667"/>
<text text-anchor="middle" x="18766.614" y="-160390.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;|subclassing Classfile does not</text>
<text text-anchor="middle" x="18766.614" y="-160375.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|make your annotation visible at runtime. &#160;If that is what</text>
<text text-anchor="start" x="18517.114" y="-160360.6701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|you want, you must write the annotation class in Java.&#39;) =&gt; ?{def stripMargin: ?}</text>
<text text-anchor="middle" x="18766.614" y="-160345.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; FastTrack.this.macros.global.Tree) =&gt; FastTrack.this.macros.global.Symbol -->
<g id="node2216" class="node">
<title>(=&gt; FastTrack.this.macros.global.Tree) =&gt; FastTrack.this.macros.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-160464.8701" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="18544.114" y="-160468.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; FastTrack.this.macros.global.Tree) =&gt; FastTrack.this.macros.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-160453.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit],String,That] -->
<g id="node2217" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-160536.8701" rx="478.9227" ry="26.7407"/>
<text text-anchor="start" x="18436.114" y="-160540.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-160525.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],SpecializeTypes.this.global.Symbol,That] -->
<g id="node2218" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],SpecializeTypes.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-160608.8701" rx="478.9227" ry="26.7407"/>
<text text-anchor="start" x="18436.114" y="-160612.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],SpecializeTypes.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-160597.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[java.util.Date] -->
<g id="node2219" class="node">
<title>scala.reflect.ClassTag[java.util.Date]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-160680.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="18665.614" y="-160684.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[java.util.Date]</text>
<text text-anchor="middle" x="18766.614" y="-160669.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Namers.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node2220" class="node">
<title>List[Namers.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-160752.8701" rx="311.6683" ry="26.7407"/>
<text text-anchor="start" x="18554.114" y="-160756.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Namers.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-160741.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[Contexts.this.ImportInfo]) =&gt; ?{def ::=: ?} -->
<g id="node2221" class="node">
<title>(=&gt; List[Contexts.this.ImportInfo]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-160824.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-160828.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Contexts.this.ImportInfo]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-160813.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;\n &#160;&#160;&#160;|#!/bin/sh\n &#160;&#160;&#160;|#\n &#160;&#160;&#160;|\n &#160;&#160;&#160;|scala @@MAINCLASS@@ \&#39;$@\&#39;\n &#160;&#160;&#160;|&#39;) =&gt; ?{def stripMargin: ?} -->
<g id="node2222" class="node">
<title>String(&#39;\n &#160;&#160;&#160;|#!/bin/sh\n &#160;&#160;&#160;|#\n &#160;&#160;&#160;|\n &#160;&#160;&#160;|scala @@MAINCLASS@@ \&#39;$@\&#39;\n &#160;&#160;&#160;|&#39;) =&gt; ?{def stripMargin: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-160949.8701" rx="157.8698" ry="79.8062"/>
<text text-anchor="middle" x="18766.614" y="-160991.1701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;</text>
<text text-anchor="middle" x="18766.614" y="-160976.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;|#!/bin/sh</text>
<text text-anchor="middle" x="18766.614" y="-160961.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;|#</text>
<text text-anchor="middle" x="18766.614" y="-160946.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;|</text>
<text text-anchor="middle" x="18766.614" y="-160931.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;|scala @@MAINCLASS@@ &#39;$@&#39;</text>
<text text-anchor="start" x="18663.114" y="-160916.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;|&#39;) =&gt; ?{def stripMargin: ?}</text>
<text text-anchor="middle" x="18766.614" y="-160901.1701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;while compiling&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2223" class="node">
<title>String(&#39;while compiling&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-161074.8701" rx="171.6541" ry="26.7407"/>
<text text-anchor="start" x="18653.114" y="-161078.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;while compiling&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-161063.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Ordering[SymbolTrackers.this.global.Symbol] -->
<g id="node2224" class="node">
<title>Ordering[SymbolTrackers.this.global.Symbol]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-161146.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="38033.3606" y="-161150.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Ordering[SymbolTrackers.this.global.Symbol]</text>
<text text-anchor="middle" x="38161.3606" y="-161135.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.treeInfo.global.Tree],String,List[String]] -->
<g id="node2225" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.treeInfo.global.Tree],String,List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-161218.8701" rx="439.6409" ry="26.7407"/>
<text text-anchor="start" x="18463.614" y="-161222.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.treeInfo.global.Tree],String,List[String]]</text>
<text text-anchor="middle" x="18766.614" y="-161207.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.Tree],List[MatchTranslator.this.TreeMaker],That] -->
<g id="node2226" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.Tree],List[MatchTranslator.this.TreeMaker],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-161290.8701" rx="491.3784" ry="26.7407"/>
<text text-anchor="start" x="18427.114" y="-161294.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.Tree],List[MatchTranslator.this.TreeMaker],That]</text>
<text text-anchor="middle" x="18766.614" y="-161279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[Namers.this.global.ValDef]],List[Namers.this.global.ValDef],That] -->
<g id="node2227" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[Namers.this.global.ValDef]],List[Namers.this.global.ValDef],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-161362.8701" rx="463.3099" ry="26.7407"/>
<text text-anchor="start" x="18447.114" y="-161366.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[Namers.this.global.ValDef]],List[Namers.this.global.ValDef],That]</text>
<text text-anchor="middle" x="18766.614" y="-161351.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Symbol],NamesDefaults.this.global.WildcardType.type,List[NamesDefaults.this.global.Type]] -->
<g id="node2228" class="node">
<title>scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Symbol],NamesDefaults.this.global.WildcardType.type,List[NamesDefaults.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-161434.8701" rx="656.3902" ry="26.7407"/>
<text text-anchor="start" x="18310.614" y="-161438.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Symbol],NamesDefaults.this.global.WildcardType.type,List[NamesDefaults.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-161423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.global.definitions.FloatClass.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2229" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.global.definitions.FloatClass.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-161506.8701" rx="358.5063" ry="26.7407"/>
<text text-anchor="start" x="18521.114" y="-161510.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.global.definitions.FloatClass.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-161495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; scala.tools.nsc.reporters.Reporter -->
<g id="node2230" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; scala.tools.nsc.reporters.Reporter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-161578.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="18596.614" y="-161582.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; scala.tools.nsc.reporters.Reporter</text>
<text text-anchor="middle" x="18766.614" y="-161567.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[String],(String, Option[String]),That] -->
<g id="node2231" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[String],(String, Option[String]),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-161650.8701" rx="334.423" ry="26.7407"/>
<text text-anchor="start" x="18538.114" y="-161654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[String],(String, Option[String]),That]</text>
<text text-anchor="middle" x="18766.614" y="-161639.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[(String, Option[String])] -->
<g id="node2293" class="node">
<title>scala.reflect.ClassTag[(String, Option[String])]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-161650.8701" rx="193.9948" ry="26.7407"/>
<text text-anchor="start" x="38032.3606" y="-161654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[(String, Option[String])]</text>
<text text-anchor="middle" x="38161.3606" y="-161639.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[String],(String, Option[String]),That]&#45;&gt;scala.reflect.ClassTag[(String, Option[String])] -->
<g id="edge7" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[String],(String, Option[String]),That]&#45;&gt;scala.reflect.ClassTag[(String, Option[String])]</title>
<path fill="none" stroke="#000000" d="M19101.2029,-161650.8701C21501.3809,-161650.8701 36057.0438,-161650.8701 37956.932,-161650.8701"/>
<polygon fill="#000000" stroke="#000000" points="37957.2597,-161654.3702 37967.2596,-161650.8701 37957.2596,-161647.3702 37957.2597,-161654.3702"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SymbolTrackers.this.Hierarchy],String,That] -->
<g id="node2232" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SymbolTrackers.this.Hierarchy],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-161722.8701" rx="357.1779" ry="26.7407"/>
<text text-anchor="start" x="18522.114" y="-161726.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SymbolTrackers.this.Hierarchy],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-161711.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TailCalls.this.global.Tree],TailCalls.this.global.Tree,That] -->
<g id="node2233" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TailCalls.this.global.Tree],TailCalls.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-161794.8701" rx="408.9155" ry="26.7407"/>
<text text-anchor="start" x="18485.614" y="-161798.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TailCalls.this.global.Tree],TailCalls.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-161783.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- str.type =&gt; ?{def splitAt: ?} -->
<g id="node2234" class="node">
<title>str.type =&gt; ?{def splitAt: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-161866.8701" rx="121.7449" ry="26.7407"/>
<text text-anchor="start" x="18688.614" y="-161870.6701" font-family="Times,serif" font-size="14.00" fill="#000000">str.type =&gt; ?{def splitAt: ?}</text>
<text text-anchor="middle" x="18766.614" y="-161855.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.OptManifest[String] -->
<g id="node2235" class="node">
<title>scala.reflect.OptManifest[String]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-161938.8701" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="18676.114" y="-161942.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.OptManifest[String]</text>
<text text-anchor="middle" x="18766.614" y="-161927.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SymbolTrackers.this.global.Symbol],Object,That] -->
<g id="node2236" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SymbolTrackers.this.global.Symbol],Object,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-162010.8701" rx="377.6901" ry="26.7407"/>
<text text-anchor="start" x="18507.614" y="-162014.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SymbolTrackers.this.global.Symbol],Object,That]</text>
<text text-anchor="middle" x="18766.614" y="-161999.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;macroEngine&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2237" class="node">
<title>String(&#39;macroEngine&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-162082.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="18661.114" y="-162086.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;macroEngine&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-162071.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[String] =&gt; ?{def last: ?} -->
<g id="node2238" class="node">
<title>Array[String] =&gt; ?{def last: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-162154.8701" rx="132.4583" ry="26.7407"/>
<text text-anchor="start" x="18681.114" y="-162158.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def last: ?}</text>
<text text-anchor="middle" x="18766.614" y="-162143.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- (=&gt; Array[Long]) =&gt; Array[Class[_]] -->
<g id="node2239" class="node">
<title>(=&gt; Array[Long]) =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-162226.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="18662.614" y="-162230.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Long]) =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-162215.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- LambdaLift.this.global.AnnotationInfo =&gt; LambdaLift.this.global.Type -->
<g id="node2240" class="node">
<title>LambdaLift.this.global.AnnotationInfo =&gt; LambdaLift.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-162298.8701" rx="290.7418" ry="26.7407"/>
<text text-anchor="start" x="18569.114" y="-162302.6701" font-family="Times,serif" font-size="14.00" fill="#000000">LambdaLift.this.global.AnnotationInfo =&gt; LambdaLift.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-162287.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[_1.Setting],String,That] -->
<g id="node2241" class="node">
<title>scala.collection.generic.CanBuildFrom[List[_1.Setting],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-162370.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-162374.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[_1.Setting],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-162359.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[TreesAndTypesDomain.this.Type],TreesAndTypesDomain.this.Const,That] -->
<g id="node2242" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[TreesAndTypesDomain.this.Type],TreesAndTypesDomain.this.Const,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-162442.8701" rx="581.4836" ry="26.7407"/>
<text text-anchor="start" x="18363.614" y="-162446.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[TreesAndTypesDomain.this.Type],TreesAndTypesDomain.this.Const,That]</text>
<text text-anchor="middle" x="18766.614" y="-162431.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[String,Char,Any] -->
<g id="node2243" class="node">
<title>scala.collection.generic.CanBuildFrom[String,Char,Any]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-162514.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="18610.114" y="-162518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[String,Char,Any]</text>
<text text-anchor="middle" x="18766.614" y="-162503.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Solution],MatchAnalyzer.this.CounterExample,That] -->
<g id="node2244" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Solution],MatchAnalyzer.this.CounterExample,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-162586.8701" rx="468.2094" ry="26.7407"/>
<text text-anchor="start" x="18443.614" y="-162590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Solution],MatchAnalyzer.this.CounterExample,That]</text>
<text text-anchor="middle" x="18766.614" y="-162575.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Namers.this.global.TypeDef],Namers.this.global.Symbol,That] -->
<g id="node2245" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Namers.this.global.TypeDef],Namers.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-162658.8701" rx="428.5134" ry="26.7407"/>
<text text-anchor="start" x="18471.614" y="-162662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Namers.this.global.TypeDef],Namers.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-162647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.ValOrDefDef,That] -->
<g id="node2246" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.ValOrDefDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-162730.8701" rx="438.3124" ry="26.7407"/>
<text text-anchor="start" x="18464.614" y="-162734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.ValOrDefDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-162719.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Tree],ContextErrors.this.global.Type,List[ContextErrors.this.global.Type]] -->
<g id="node2247" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Tree],ContextErrors.this.global.Type,List[ContextErrors.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-162802.8701" rx="572.0988" ry="26.7407"/>
<text text-anchor="start" x="18370.114" y="-162806.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Tree],ContextErrors.this.global.Type,List[ContextErrors.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-162791.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[scala.tools.asm.Handle]) =&gt; ?{def ::=: ?} -->
<g id="node2248" class="node">
<title>(=&gt; List[scala.tools.asm.Handle]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-162874.8701" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="18626.614" y="-162878.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[scala.tools.asm.Handle]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-162863.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.HASHkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2249" class="node">
<title>Scanners.this.global.nme.HASHkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-162946.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="18610.114" y="-162950.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.HASHkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-162935.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Long] =&gt; ?{def take: ?} -->
<g id="node2250" class="node">
<title>Array[Long] =&gt; ?{def take: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-163018.8701" rx="131.5437" ry="26.7407"/>
<text text-anchor="start" x="18681.614" y="-163022.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Long] =&gt; ?{def take: ?}</text>
<text text-anchor="middle" x="18766.614" y="-163007.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;tvars.constr&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2251" class="node">
<title>String(&#39;tvars.constr&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-163090.8701" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="18666.114" y="-163094.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;tvars.constr&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-163079.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[DocComments.this.Symbol],DocComments.this.Symbol#TypeOfClonedSymbol,List[DocComments.this.Symbol]] -->
<g id="node2252" class="node">
<title>scala.collection.generic.CanBuildFrom[List[DocComments.this.Symbol],DocComments.this.Symbol#TypeOfClonedSymbol,List[DocComments.this.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-163162.8701" rx="631.3927" ry="26.7407"/>
<text text-anchor="start" x="18328.114" y="-163166.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[DocComments.this.Symbol],DocComments.this.Symbol#TypeOfClonedSymbol,List[DocComments.this.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-163151.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- List[ClassfileParser.this.symbolTable.Type] =&gt; ?{def ::=: ?} -->
<g id="node2253" class="node">
<title>List[ClassfileParser.this.symbolTable.Type] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-163234.8701" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="18599.114" y="-163238.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[ClassfileParser.this.symbolTable.Type] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-163223.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],Typers.this.global.ValDef,That] -->
<g id="node2254" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],Typers.this.global.ValDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-163306.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="18545.614" y="-163310.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],Typers.this.global.ValDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-163295.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[String]) =&gt; ?{def +:=: ?} -->
<g id="node2255" class="node">
<title>(=&gt; List[String]) =&gt; ?{def +:=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-163378.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="18671.114" y="-163382.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[String]) =&gt; ?{def +:=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-163367.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; MatchTreeMaking.this.global.Tree -->
<g id="node2256" class="node">
<title>((Nothing, Nothing)) =&gt; MatchTreeMaking.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-163450.8701" rx="245.2322" ry="26.7407"/>
<text text-anchor="start" x="18601.114" y="-163454.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; MatchTreeMaking.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-163439.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.ENUMkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2257" class="node">
<title>JavaScanners.this.global.javanme.ENUMkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-163522.8701" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="18585.114" y="-163526.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.ENUMkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-163511.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Typers.this.global.Type -->
<g id="node2258" class="node">
<title>Unit =&gt; Typers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-163594.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-163598.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Typers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-163583.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Array[(String, Option[String])] =&gt; ?{def toMap: ?} -->
<g id="node2259" class="node">
<title>Array[(String, Option[String])] =&gt; ?{def toMap: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-163666.8701" rx="212.2642" ry="26.7407"/>
<text text-anchor="start" x="18624.614" y="-163670.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[(String, Option[String])] =&gt; ?{def toMap: ?}</text>
<text text-anchor="middle" x="18766.614" y="-163655.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- errTpe.type =&gt; ?{def +: ?} -->
<g id="node2260" class="node">
<title>errTpe.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-163738.8701" rx="117.2596" ry="26.7407"/>
<text text-anchor="start" x="18691.614" y="-163742.6701" font-family="Times,serif" font-size="14.00" fill="#000000">errTpe.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-163727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ContextErrors.this.global.Symbol =&gt; ?{def +: ?} -->
<g id="node2261" class="node">
<title>ContextErrors.this.global.Symbol =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-163810.8701" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="18631.114" y="-163814.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ContextErrors.this.global.Symbol =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-163799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- callsite.callsiteInstruction.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2262" class="node">
<title>callsite.callsiteInstruction.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-163882.8701" rx="193.0803" ry="26.7407"/>
<text text-anchor="start" x="18638.114" y="-163886.6701" font-family="Times,serif" font-size="14.00" fill="#000000">callsite.callsiteInstruction.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-163871.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int =&gt; JavaParsers.this.global.Position -->
<g id="node2263" class="node">
<title>Int =&gt; JavaParsers.this.global.Position</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-163954.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="18661.114" y="-163958.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; JavaParsers.this.global.Position</text>
<text text-anchor="middle" x="18766.614" y="-163943.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 3ms</text>
</g>
<!-- file.type =&gt; ?{def isScalaOrJavaSource: ?} -->
<g id="node2264" class="node">
<title>file.type =&gt; ?{def isScalaOrJavaSource: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-164026.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="18647.614" y="-164030.6701" font-family="Times,serif" font-size="14.00" fill="#000000">file.type =&gt; ?{def isScalaOrJavaSource: ?}</text>
<text text-anchor="middle" x="18766.614" y="-164015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- args.type =&gt; ?{def isEmpty: ?} -->
<g id="node2265" class="node">
<title>args.type =&gt; ?{def isEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-164098.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="18679.614" y="-164102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">args.type =&gt; ?{def isEmpty: ?}</text>
<text text-anchor="middle" x="18766.614" y="-164087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Typers.this.ClassForCaseCompanionAttachment] -->
<g id="node2266" class="node">
<title>scala.reflect.ClassTag[Typers.this.ClassForCaseCompanionAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-164170.8701" rx="290.7418" ry="26.7407"/>
<text text-anchor="start" x="18569.114" y="-164174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Typers.this.ClassForCaseCompanionAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-164159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Option[BCodeHelpers.this.global.AnnotationInfo] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node2267" class="node">
<title>Option[BCodeHelpers.this.global.AnnotationInfo] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-164242.8701" rx="376.3617" ry="26.7407"/>
<text text-anchor="start" x="18508.614" y="-164246.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[BCodeHelpers.this.global.AnnotationInfo] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-164231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Erasure.this.global.AnnotationInfo],Erasure.this.global.Type,That] -->
<g id="node2268" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Erasure.this.global.AnnotationInfo],Erasure.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-164314.8701" rx="440.5551" ry="26.7407"/>
<text text-anchor="start" x="18463.114" y="-164318.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Erasure.this.global.AnnotationInfo],Erasure.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-164303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- props.type =&gt; ?{def asScala: ?} -->
<g id="node2269" class="node">
<title>props.type =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-164386.8701" rx="135.5294" ry="26.7407"/>
<text text-anchor="start" x="18678.614" y="-164390.6701" font-family="Times,serif" font-size="14.00" fill="#000000">props.type =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-164375.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[CleanUp.this.global.Symbol],CleanUp.this.global.Type,List[CleanUp.this.global.Type]] -->
<g id="node2270" class="node">
<title>scala.collection.generic.CanBuildFrom[List[CleanUp.this.global.Symbol],CleanUp.this.global.Type,List[CleanUp.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-164458.8701" rx="524.8465" ry="26.7407"/>
<text text-anchor="start" x="18403.614" y="-164462.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[CleanUp.this.global.Symbol],CleanUp.this.global.Type,List[CleanUp.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-164447.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[PerRunReporting.this.ConditionalWarning],(scala.reflect.internal.util.Position, (String, String)),That] -->
<g id="node2271" class="node">
<title>scala.collection.generic.CanBuildFrom[List[PerRunReporting.this.ConditionalWarning],(scala.reflect.internal.util.Position, (String, String)),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-164530.8701" rx="574.7557" ry="26.7407"/>
<text text-anchor="start" x="18368.114" y="-164534.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[PerRunReporting.this.ConditionalWarning],(scala.reflect.internal.util.Position, (String, String)),That]</text>
<text text-anchor="middle" x="18766.614" y="-164519.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Parser.this.treeBuilder.global.gen.global.Tree],Parsers.this.global.Tree,That] -->
<g id="node2272" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Parser.this.treeBuilder.global.gen.global.Tree],Parsers.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-164602.8701" rx="478.9227" ry="26.7407"/>
<text text-anchor="start" x="18436.114" y="-164606.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Parser.this.treeBuilder.global.gen.global.Tree],Parsers.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-164591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],(SpecializeTypes.this.global.Type, SpecializeTypes.this.global.Type),That] -->
<g id="node2273" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],(SpecializeTypes.this.global.Type, SpecializeTypes.this.global.Type),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-164674.8701" rx="608.2237" ry="26.7407"/>
<text text-anchor="start" x="18344.614" y="-164678.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],(SpecializeTypes.this.global.Type, SpecializeTypes.this.global.Type),That]</text>
<text text-anchor="middle" x="18766.614" y="-164663.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;specialized %s on %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2274" class="node">
<title>String(&#39;specialized %s on %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-164746.8701" rx="210.0214" ry="26.7407"/>
<text text-anchor="start" x="18626.114" y="-164750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;specialized %s on %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-164735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- mix.type =&gt; ?{def +: ?} -->
<g id="node2275" class="node">
<title>mix.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-164818.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-164822.6701" font-family="Times,serif" font-size="14.00" fill="#000000">mix.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-164807.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],String,That] -->
<g id="node2276" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-164890.8701" rx="246.5607" ry="26.7407"/>
<text text-anchor="start" x="18600.114" y="-164894.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-164879.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Typers.this.global.AnnotationInfo =&gt; Typers.this.global.Type -->
<g id="node2277" class="node">
<title>Typers.this.global.AnnotationInfo =&gt; Typers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-164962.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="18596.614" y="-164966.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Typers.this.global.AnnotationInfo =&gt; Typers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-164951.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (SymbolTrackers.this.global.Symbol, Long) &lt;:&lt; (T, U) -->
<g id="node2278" class="node">
<title>(SymbolTrackers.this.global.Symbol, Long) &lt;:&lt; (T, U)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-165034.8701" rx="226.9626" ry="26.7407"/>
<text text-anchor="start" x="18614.114" y="-165038.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(SymbolTrackers.this.global.Symbol, Long) &lt;:&lt; (T, U)</text>
<text text-anchor="middle" x="18766.614" y="-165023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- pos.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2279" class="node">
<title>pos.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-165106.8701" rx="108.375" ry="26.7407"/>
<text text-anchor="start" x="18698.114" y="-165110.6701" font-family="Times,serif" font-size="14.00" fill="#000000">pos.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-165095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((MatchApproximation.this.global.Symbol, MatchApproximation.this.global.Tree)) =&gt; (A1, A2) -->
<g id="node2280" class="node">
<title>((MatchApproximation.this.global.Symbol, MatchApproximation.this.global.Tree)) =&gt; (A1, A2)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-165178.8701" rx="388.4034" ry="26.7407"/>
<text text-anchor="start" x="18500.114" y="-165182.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((MatchApproximation.this.global.Symbol, MatchApproximation.this.global.Tree)) =&gt; (A1, A2)</text>
<text text-anchor="middle" x="18766.614" y="-165167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39; in %s:%s:%s&#39;) =&gt; ?{def format: ?} -->
<g id="node2281" class="node">
<title>String(&#39; in %s:%s:%s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-165250.8701" rx="180.1247" ry="26.7407"/>
<text text-anchor="start" x="18647.114" y="-165254.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39; in %s:%s:%s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-165239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.api.Universe#TypeTag[DummyImplicit] -->
<g id="node2282" class="node">
<title>scala.reflect.api.Universe#TypeTag[DummyImplicit]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-165322.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="18620.614" y="-165326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.api.Universe#TypeTag[DummyImplicit]</text>
<text text-anchor="middle" x="18766.614" y="-165311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Int -->
<g id="node2283" class="node">
<title>((Nothing, Nothing)) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-165394.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="18689.614" y="-165398.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-165383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">42 times = 4ms</text>
</g>
<!-- java.util.List[scala.tools.asm.tree.MethodNode] =&gt; ?{def asScala: ?} -->
<g id="node2284" class="node">
<title>java.util.List[scala.tools.asm.tree.MethodNode] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-165466.8701" rx="280.0286" ry="26.7407"/>
<text text-anchor="start" x="18576.614" y="-165470.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.List[scala.tools.asm.tree.MethodNode] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-165455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 4ms</text>
</g>
<!-- Implicits.this.global.EmptyTree.type =&gt; Implicits.this.SearchResult -->
<g id="node2285" class="node">
<title>Implicits.this.global.EmptyTree.type =&gt; Implicits.this.SearchResult</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-165538.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-165542.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Implicits.this.global.EmptyTree.type =&gt; Implicits.this.SearchResult</text>
<text text-anchor="middle" x="18766.614" y="-165527.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- Global.this.pickler.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2286" class="node">
<title>Global.this.pickler.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-165610.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="18656.614" y="-165614.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.pickler.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-165599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[String] =&gt; ?{def dropRight: ?} -->
<g id="node2287" class="node">
<title>Array[String] =&gt; ?{def dropRight: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-165682.8701" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="18663.114" y="-165686.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def dropRight: ?}</text>
<text text-anchor="middle" x="18766.614" y="-165671.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Scanners.this.global.nme.EQUALSkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2288" class="node">
<title>Scanners.this.global.nme.EQUALSkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-165754.8701" rx="243.9037" ry="26.7407"/>
<text text-anchor="start" x="18602.114" y="-165758.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.EQUALSkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-165743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[scala.tools.asm.Type] =&gt; ?{def ++: ?} -->
<g id="node2289" class="node">
<title>Array[scala.tools.asm.Type] =&gt; ?{def ++: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-165826.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="18641.614" y="-165830.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[scala.tools.asm.Type] =&gt; ?{def ++: ?}</text>
<text text-anchor="middle" x="18766.614" y="-165815.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Fields.this.global.Tree =&gt; Fields.this.global.Type -->
<g id="node2290" class="node">
<title>Fields.this.global.Tree =&gt; Fields.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-165898.8701" rx="203.7936" ry="26.7407"/>
<text text-anchor="start" x="18630.614" y="-165902.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Fields.this.global.Tree =&gt; Fields.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-165887.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[java.net.URL],scala.tools.nsc.util.ClassPath,That] -->
<g id="node2291" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[java.net.URL],scala.tools.nsc.util.ClassPath,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-165970.8701" rx="375.4474" ry="26.7407"/>
<text text-anchor="start" x="18509.114" y="-165974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[java.net.URL],scala.tools.nsc.util.ClassPath,That]</text>
<text text-anchor="middle" x="18766.614" y="-165959.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Unit, Unit)) =&gt; Macros.this.global.Name -->
<g id="node2292" class="node">
<title>(=&gt; (Nothing, Unit, Unit)) =&gt; Macros.this.global.Name</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-166042.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-166046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit, Unit)) =&gt; Macros.this.global.Name</text>
<text text-anchor="middle" x="18766.614" y="-166031.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;ClassfileLoader setting %s.associatedFile = %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2294" class="node">
<title>String(&#39;ClassfileLoader setting %s.associatedFile = %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-166114.8701" rx="309.0113" ry="26.7407"/>
<text text-anchor="start" x="18556.114" y="-166118.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;ClassfileLoader setting %s.associatedFile = %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-166103.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Constructors.this.global.Tree],(Constructors.this.global.Symbol, Constructors.this.global.Tree),That] -->
<g id="node2295" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Constructors.this.global.Tree],(Constructors.this.global.Symbol, Constructors.this.global.Tree),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-166186.8701" rx="572.5131" ry="26.7407"/>
<text text-anchor="start" x="18369.614" y="-166190.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Constructors.this.global.Tree],(Constructors.this.global.Symbol, Constructors.this.global.Tree),That]</text>
<text text-anchor="middle" x="18766.614" y="-166175.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Array[Option[scala.tools.asm.tree.AbstractInsnNode]] =&gt; (Int =&gt; Option[scala.tools.asm.tree.AbstractInsnNode]) -->
<g id="node2296" class="node">
<title>Array[Option[scala.tools.asm.tree.AbstractInsnNode]] =&gt; (Int =&gt; Option[scala.tools.asm.tree.AbstractInsnNode])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-166258.8701" rx="453.011" ry="26.7407"/>
<text text-anchor="start" x="18454.114" y="-166262.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Option[scala.tools.asm.tree.AbstractInsnNode]] =&gt; (Int =&gt; Option[scala.tools.asm.tree.AbstractInsnNode])</text>
<text text-anchor="middle" x="18766.614" y="-166247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- currentInstructions.type =&gt; ?{def foreach: ?} -->
<g id="node2297" class="node">
<title>currentInstructions.type =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-166330.8701" rx="186.8525" ry="26.7407"/>
<text text-anchor="start" x="18642.614" y="-166334.6701" font-family="Times,serif" font-size="14.00" fill="#000000">currentInstructions.type =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-166319.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Constructors.this.global.Symbol -->
<g id="node2298" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Constructors.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-166402.8701" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="18599.114" y="-166406.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Constructors.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-166391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[TreeMakers.this.TreeMaker]],String,That] -->
<g id="node2299" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[TreeMakers.this.TreeMaker]],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-166474.8701" rx="366.0628" ry="26.7407"/>
<text text-anchor="start" x="18515.614" y="-166478.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[TreeMakers.this.TreeMaker]],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-166463.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.VIEWBOUNDkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2300" class="node">
<title>Scanners.this.global.nme.VIEWBOUNDkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-166546.8701" rx="265.7444" ry="26.7407"/>
<text text-anchor="start" x="18586.614" y="-166550.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.VIEWBOUNDkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-166535.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Unit)) =&gt; SpecializeTypes.this.global.Symbol -->
<g id="node2301" class="node">
<title>((Nothing, Nothing, Unit)) =&gt; SpecializeTypes.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-166618.8701" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="18583.614" y="-166622.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Unit)) =&gt; SpecializeTypes.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-166607.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.util.List[String] =&gt; ?{def asScala: ?} -->
<g id="node2302" class="node">
<title>java.util.List[String] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-166690.8701" rx="173.8966" ry="26.7407"/>
<text text-anchor="start" x="18651.614" y="-166694.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.List[String] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-166679.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 2ms</text>
</g>
<!-- Iterator[Reifiers.this.global.Apply] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node2303" class="node">
<title>Iterator[Reifiers.this.global.Apply] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-166762.8701" rx="318.8103" ry="26.7407"/>
<text text-anchor="start" x="18549.114" y="-166766.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Iterator[Reifiers.this.global.Apply] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-166751.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;\\$[$\\w]+&#39;) =&gt; ?{def r: ?} -->
<g id="node2304" class="node">
<title>String(&#39;\\$[$\\w]+&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-166834.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-166838.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;\$[$\w]+&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-166823.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTracker.this.Node],SymbolTracker.this.Node,That] -->
<g id="node2305" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTracker.this.Node],SymbolTracker.this.Node,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-166906.8701" rx="516.376" ry="26.7407"/>
<text text-anchor="start" x="18409.614" y="-166910.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTracker.this.Node],SymbolTracker.this.Node,That]</text>
<text text-anchor="middle" x="18766.614" y="-166895.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; ExtensionMethods.this.global.gen.global.Symbol -->
<g id="node2306" class="node">
<title>((Nothing, Nothing)) =&gt; ExtensionMethods.this.global.gen.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-166978.8701" rx="300.5408" ry="26.7407"/>
<text text-anchor="start" x="18562.114" y="-166982.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; ExtensionMethods.this.global.gen.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-166967.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- segments.type =&gt; ?{def last: ?} -->
<g id="node2307" class="node">
<title>segments.type =&gt; ?{def last: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-167050.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="18679.114" y="-167054.6701" font-family="Times,serif" font-size="14.00" fill="#000000">segments.type =&gt; ?{def last: ?}</text>
<text text-anchor="middle" x="18766.614" y="-167039.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; SyntheticMethods.this.global.Symbol -->
<g id="node2308" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; SyntheticMethods.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-167122.8701" rx="306.3546" ry="26.7407"/>
<text text-anchor="start" x="18558.114" y="-167126.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; SyntheticMethods.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-167111.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Long -->
<g id="node2309" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Long</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-167194.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="18673.114" y="-167198.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Long</text>
<text text-anchor="middle" x="18766.614" y="-167183.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Type],Option[String],To] -->
<g id="node2310" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Type],Option[String],To]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-167266.8701" rx="391.9745" ry="26.7407"/>
<text text-anchor="start" x="18497.614" y="-167270.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Type],Option[String],To]</text>
<text text-anchor="middle" x="18766.614" y="-167255.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[FormatInterpolator.this.c.universe.Tree],(FormatInterpolator.this.c.universe.Tree, Int),That] -->
<g id="node2311" class="node">
<title>scala.collection.generic.CanBuildFrom[List[FormatInterpolator.this.c.universe.Tree],(FormatInterpolator.this.c.universe.Tree, Int),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-167338.8701" rx="538.2165" ry="26.7407"/>
<text text-anchor="start" x="18394.114" y="-167342.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[FormatInterpolator.this.c.universe.Tree],(FormatInterpolator.this.c.universe.Tree, Int),That]</text>
<text text-anchor="middle" x="18766.614" y="-167327.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Unit)) =&gt; Printers.this.Name -->
<g id="node2312" class="node">
<title>((Nothing, Unit)) =&gt; Printers.this.Name</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-167410.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="18656.614" y="-167414.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit)) =&gt; Printers.this.Name</text>
<text text-anchor="middle" x="18766.614" y="-167399.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.tools.asm.Attribute] -->
<g id="node2313" class="node">
<title>scala.reflect.ClassTag[scala.tools.asm.Attribute]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-167482.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="18634.114" y="-167486.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.tools.asm.Attribute]</text>
<text text-anchor="middle" x="18766.614" y="-167471.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- None.type =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node2314" class="node">
<title>None.type =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-167554.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="18617.614" y="-167558.6701" font-family="Times,serif" font-size="14.00" fill="#000000">None.type =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-167543.6701" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 3ms</text>
</g>
<!-- Option[(Typers.this.global.TermName, Typers.this.global.Tree)] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node2315" class="node">
<title>Option[(Typers.this.global.TermName, Typers.this.global.Tree)] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-167626.8701" rx="433.4129" ry="26.7407"/>
<text text-anchor="start" x="18468.114" y="-167630.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[(Typers.this.global.TermName, Typers.this.global.Tree)] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-167615.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Validators.this.global.Tree) =&gt; Validators.this.global.Type -->
<g id="node2316" class="node">
<title>(=&gt; Validators.this.global.Tree) =&gt; Validators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-167698.8701" rx="257.2738" ry="26.7407"/>
<text text-anchor="start" x="18592.614" y="-167702.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Validators.this.global.Tree) =&gt; Validators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-167687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- GenTrees.this.SymbolTable =&gt; ?{def ++=: ?} -->
<g id="node2317" class="node">
<title>GenTrees.this.SymbolTable =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-167770.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="18638.614" y="-167774.6701" font-family="Times,serif" font-size="14.00" fill="#000000">GenTrees.this.SymbolTable =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-167759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- settings.YdisableFlatCpCaching.type =&gt; ?{def ||: ?} -->
<g id="node2318" class="node">
<title>settings.YdisableFlatCpCaching.type =&gt; ?{def ||: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-167842.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="18623.614" y="-167846.6701" font-family="Times,serif" font-size="14.00" fill="#000000">settings.YdisableFlatCpCaching.type =&gt; ?{def ||: ?}</text>
<text text-anchor="middle" x="18766.614" y="-167831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.Type],Delambdafy.this.global.Type,List[Delambdafy.this.global.specializeTypes.global.Type]] -->
<g id="node2319" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.Type],Delambdafy.this.global.Type,List[Delambdafy.this.global.specializeTypes.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-167914.8701" rx="645.677" ry="26.7407"/>
<text text-anchor="start" x="18318.114" y="-167918.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.Type],Delambdafy.this.global.Type,List[Delambdafy.this.global.specializeTypes.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-167903.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Interface.this.global.Symbol] =&gt; scala.collection.TraversableLike[El1,Repr1] -->
<g id="node2320" class="node">
<title>List[Interface.this.global.Symbol] =&gt; scala.collection.TraversableLike[El1,Repr1]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-167986.8701" rx="330.4379" ry="26.7407"/>
<text text-anchor="start" x="18541.114" y="-167990.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Interface.this.global.Symbol] =&gt; scala.collection.TraversableLike[El1,Repr1]</text>
<text text-anchor="middle" x="18766.614" y="-167975.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Mixin.this.global.Symbol],Mixin.this.global.Assign,That] -->
<g id="node2321" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Mixin.this.global.Symbol],Mixin.this.global.Assign,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-168058.8701" rx="408.9155" ry="26.7407"/>
<text text-anchor="start" x="18485.614" y="-168062.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Mixin.this.global.Symbol],Mixin.this.global.Assign,That]</text>
<text text-anchor="middle" x="18766.614" y="-168047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Array[java.net.URL] -->
<g id="node2322" class="node">
<title>((Nothing, Nothing)) =&gt; Array[java.net.URL]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-168130.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="18640.114" y="-168134.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Array[java.net.URL]</text>
<text text-anchor="middle" x="18766.614" y="-168119.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[(BCodeBodyBuilder.this.global.Symbol, scala.tools.asm.Label)] =&gt; ?{def ::=: ?} -->
<g id="node2323" class="node">
<title>List[(BCodeBodyBuilder.this.global.Symbol, scala.tools.asm.Label)] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-168202.8701" rx="345.5506" ry="26.7407"/>
<text text-anchor="start" x="18530.114" y="-168206.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[(BCodeBodyBuilder.this.global.Symbol, scala.tools.asm.Label)] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-168191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Constructors.this.global.Tree],(Constructors.this.global.Tree, Constructors.this.global.Tree),That] -->
<g id="node2324" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Constructors.this.global.Tree],(Constructors.this.global.Tree, Constructors.this.global.Tree),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-168274.8701" rx="560.0571" ry="26.7407"/>
<text text-anchor="start" x="18378.614" y="-168278.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Constructors.this.global.Tree],(Constructors.this.global.Tree, Constructors.this.global.Tree),That]</text>
<text text-anchor="middle" x="18766.614" y="-168263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; NamesDefaults.this.global.Symbol -->
<g id="node2325" class="node">
<title>((Nothing, Nothing)) =&gt; NamesDefaults.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-168346.8701" rx="244.818" ry="26.7407"/>
<text text-anchor="start" x="18601.614" y="-168350.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; NamesDefaults.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-168335.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- Parsers.this.global.Modifiers =&gt; ?{def |=: ?} -->
<g id="node2326" class="node">
<title>Parsers.this.global.Modifiers =&gt; ?{def |=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-168418.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="18643.114" y="-168422.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Parsers.this.global.Modifiers =&gt; ?{def |=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-168407.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.treeInfo.global.Tree],ExtensionMethods.this.global.treeInfo.global.Type,That] -->
<g id="node2327" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.treeInfo.global.Tree],ExtensionMethods.this.global.treeInfo.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-168490.8701" rx="603.7384" ry="26.7407"/>
<text text-anchor="start" x="18347.614" y="-168494.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.treeInfo.global.Tree],ExtensionMethods.this.global.treeInfo.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-168479.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Duplicators.this.global.AnnotationInfo) =&gt; Duplicators.this.global.Type -->
<g id="node2328" class="node">
<title>(=&gt; Duplicators.this.global.AnnotationInfo) =&gt; Duplicators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-168562.8701" rx="308.0972" ry="26.7407"/>
<text text-anchor="start" x="18556.614" y="-168566.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Duplicators.this.global.AnnotationInfo) =&gt; Duplicators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-168551.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; FormatInterpolator.this.c.universe.Symbol -->
<g id="node2329" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; FormatInterpolator.this.c.universe.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-168634.8701" rx="347.379" ry="26.7407"/>
<text text-anchor="start" x="18529.114" y="-168638.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; FormatInterpolator.this.c.universe.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-168623.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[Object],Object,That] -->
<g id="node2330" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[Object],Object,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-168706.8701" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="18588.614" y="-168710.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[Object],Object,That]</text>
<text text-anchor="middle" x="18766.614" y="-168695.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; StringBuffer -->
<g id="node2331" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; StringBuffer</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-168778.8701" rx="208.693" ry="26.7407"/>
<text text-anchor="start" x="18627.114" y="-168782.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; StringBuffer</text>
<text text-anchor="middle" x="18766.614" y="-168767.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; Char(&#39;*&#39;)) =&gt; CharSequence -->
<g id="node2332" class="node">
<title>(=&gt; Char(&#39;*&#39;)) =&gt; CharSequence</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-168850.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-168854.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Char(&#39;*&#39;)) =&gt; CharSequence</text>
<text text-anchor="middle" x="18766.614" y="-168839.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Symbol],TreeAndTypeAnalysis.this.global.Symbol,List[TreeAndTypeAnalysis.this.global.Symbol]] -->
<g id="node2333" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Symbol],TreeAndTypeAnalysis.this.global.Symbol,List[TreeAndTypeAnalysis.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-168922.8701" rx="704.9709" ry="26.7407"/>
<text text-anchor="start" x="18276.114" y="-168926.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Symbol],TreeAndTypeAnalysis.this.global.Symbol,List[TreeAndTypeAnalysis.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-168911.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.beans.BeanInfo] -->
<g id="node2334" class="node">
<title>scala.reflect.ClassTag[scala.beans.BeanInfo]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-168994.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="18644.614" y="-168998.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.beans.BeanInfo]</text>
<text text-anchor="middle" x="18766.614" y="-168983.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- tools.nsc.backend.jvm.BackendReporting.OptimizerWarning -->
<g id="node2335" class="node">
<title>tools.nsc.backend.jvm.BackendReporting.OptimizerWarning</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-169066.8701" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="18599.114" y="-169070.6701" font-family="Times,serif" font-size="14.00" fill="#000000">tools.nsc.backend.jvm.BackendReporting.OptimizerWarning</text>
<text text-anchor="middle" x="18766.614" y="-169055.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; ExtensionMethods.this.global.gen.global.Symbol -->
<g id="node2336" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; ExtensionMethods.this.global.gen.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-169138.8701" rx="314.8251" ry="26.7407"/>
<text text-anchor="start" x="18552.114" y="-169142.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; ExtensionMethods.this.global.gen.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-169127.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Unit)) =&gt; String -->
<g id="node2337" class="node">
<title>(=&gt; (Nothing, Unit)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-169210.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="18680.614" y="-169214.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit)) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-169199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[TypeDiagnostics.this.global.Symbol] =&gt; scala.collection.IterableLike[El3,Repr3] -->
<g id="node2338" class="node">
<title>List[TypeDiagnostics.this.global.Symbol] =&gt; scala.collection.IterableLike[El3,Repr3]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-169282.8701" rx="345.1362" ry="26.7407"/>
<text text-anchor="start" x="18530.614" y="-169286.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[TypeDiagnostics.this.global.Symbol] =&gt; scala.collection.IterableLike[El3,Repr3]</text>
<text text-anchor="middle" x="18766.614" y="-169271.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Set[SymbolTracker.this.Node] =&gt; List[SymbolTracker.this.Node] -->
<g id="node2339" class="node">
<title>scala.collection.immutable.Set[SymbolTracker.this.Node] =&gt; List[SymbolTracker.this.Node]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-169354.8701" rx="374.5333" ry="26.7407"/>
<text text-anchor="start" x="18509.614" y="-169358.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[SymbolTracker.this.Node] =&gt; List[SymbolTracker.this.Node]</text>
<text text-anchor="middle" x="18766.614" y="-169343.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- Ordering[SymbolTracker.this.Node] -->
<g id="node2738" class="node">
<title>Ordering[SymbolTracker.this.Node]</title>
<ellipse fill="none" stroke="#000000" cx="38161.3606" cy="-169354.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="38061.8606" y="-169358.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Ordering[SymbolTracker.this.Node]</text>
<text text-anchor="middle" x="38161.3606" y="-169343.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- scala.collection.immutable.Set[SymbolTracker.this.Node] =&gt; List[SymbolTracker.this.Node]&#45;&gt;Ordering[SymbolTracker.this.Node] -->
<g id="edge13" class="edge">
<title>scala.collection.immutable.Set[SymbolTracker.this.Node] =&gt; List[SymbolTracker.this.Node]&#45;&gt;Ordering[SymbolTracker.this.Node]</title>
<path fill="none" stroke="#000000" d="M19141.5595,-169354.8701C21679.4518,-169354.8701 36293.0725,-169354.8701 37998.8827,-169354.8701"/>
<polygon fill="#000000" stroke="#000000" points="37999.0529,-169358.3702 38009.0528,-169354.8701 37999.0528,-169351.3702 37999.0529,-169358.3702"/>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.AnnotationInfo],BCodeHelpers.this.global.AnnotationInfo,That] -->
<g id="node2340" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.AnnotationInfo],BCodeHelpers.this.global.AnnotationInfo,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-169426.8701" rx="533.7313" ry="26.7407"/>
<text text-anchor="start" x="18397.114" y="-169430.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeHelpers.this.global.AnnotationInfo],BCodeHelpers.this.global.AnnotationInfo,That]</text>
<text text-anchor="middle" x="18766.614" y="-169415.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Welcome to Scala %1$#s (%3$s, Java %2$s).\n &#160;&#160;&#160;&#160;&#160;|Type in expressions for evaluation. Or try :help.&#39;) =&gt; ?{def stripMargin: ?} -->
<g id="node2341" class="node">
<title>String(&#39;Welcome to Scala %1$#s (%3$s, Java %2$s).\n &#160;&#160;&#160;&#160;&#160;|Type in expressions for evaluation. Or try :help.&#39;) =&gt; ?{def stripMargin: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-169508.8701" rx="321.9673" ry="37.4533"/>
<text text-anchor="middle" x="18766.614" y="-169520.1701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Welcome to Scala %1$#s (%3$s, Java %2$s).</text>
<text text-anchor="start" x="18547.114" y="-169505.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;|Type in expressions for evaluation. Or try :help.&#39;) =&gt; ?{def stripMargin: ?}</text>
<text text-anchor="middle" x="18766.614" y="-169490.1701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;applied implicit conversion from %s to %s = %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2342" class="node">
<title>String(&#39;applied implicit conversion from %s to %s = %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-169590.8701" rx="316.1535" ry="26.7407"/>
<text text-anchor="start" x="18551.114" y="-169594.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;applied implicit conversion from %s to %s = %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-169579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashMap[PostProcessorFrontendAccessImpl.this.global.Symbol,scala.tools.nsc.io.AbstractFile],String,That] -->
<g id="node2343" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashMap[PostProcessorFrontendAccessImpl.this.global.Symbol,scala.tools.nsc.io.AbstractFile],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-169662.8701" rx="682.2161" ry="26.7407"/>
<text text-anchor="start" x="18292.114" y="-169666.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashMap[PostProcessorFrontendAccessImpl.this.global.Symbol,scala.tools.nsc.io.AbstractFile],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-169651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;reifying bound type %s (underlying type is %s)&#39;) =&gt; ?{def format: ?} -->
<g id="node2344" class="node">
<title>String(&#39;reifying bound type %s (underlying type is %s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-169734.8701" rx="309.9257" ry="26.7407"/>
<text text-anchor="start" x="18555.614" y="-169738.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;reifying bound type %s (underlying type is %s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-169723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[Flatten.this.global.Symbol]) =&gt; Flatten.this.global.Type -->
<g id="node2345" class="node">
<title>(=&gt; List[Flatten.this.global.Symbol]) =&gt; Flatten.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-169806.8701" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="18587.614" y="-169810.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Flatten.this.global.Symbol]) =&gt; Flatten.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-169795.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.languageFeature.postfixOps -->
<g id="node2346" class="node">
<title>scala.languageFeature.postfixOps</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-169878.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="18674.614" y="-169882.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.languageFeature.postfixOps</text>
<text text-anchor="middle" x="18766.614" y="-169867.6701" font-family="Times,serif" font-size="14.00" fill="#000000">44 times = 6ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Sym],scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])],That] -->
<g id="node2347" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Sym],scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-169950.8701" rx="792.8334" ry="26.7407"/>
<text text-anchor="start" x="18214.114" y="-169954.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Sym],scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])],That]</text>
<text text-anchor="middle" x="18766.614" y="-169939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.io.Jar.AttributeMap =&gt; ?{def asScala: ?} -->
<g id="node2348" class="node">
<title>scala.tools.nsc.io.Jar.AttributeMap =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-170022.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-170026.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.io.Jar.AttributeMap =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-170011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Namers.this.global.Scope) =&gt; Namers.this.global.Type -->
<g id="node2349" class="node">
<title>(=&gt; Namers.this.global.Scope) =&gt; Namers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-170094.8701" rx="243.9037" ry="26.7407"/>
<text text-anchor="start" x="18602.114" y="-170098.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Namers.this.global.Scope) =&gt; Namers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-170083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,scala.tools.asm.tree.AbstractInsnNode,Set[scala.tools.asm.tree.AbstractInsnNode]] -->
<g id="node2350" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,scala.tools.asm.tree.AbstractInsnNode,Set[scala.tools.asm.tree.AbstractInsnNode]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-170166.8701" rx="519.9471" ry="26.7407"/>
<text text-anchor="start" x="18407.114" y="-170170.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,scala.tools.asm.tree.AbstractInsnNode,Set[scala.tools.asm.tree.AbstractInsnNode]]</text>
<text text-anchor="middle" x="18766.614" y="-170155.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Const],String,That] -->
<g id="node2351" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Const],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-170238.8701" rx="337.08" ry="26.7407"/>
<text text-anchor="start" x="18536.114" y="-170242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Const],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-170227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; EtaExpansion.this.global.gen.global.Symbol -->
<g id="node2352" class="node">
<title>((Nothing, Nothing)) =&gt; EtaExpansion.this.global.gen.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-170310.8701" rx="281.357" ry="26.7407"/>
<text text-anchor="start" x="18575.614" y="-170314.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; EtaExpansion.this.global.gen.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-170299.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[(CNF.this.Sym, Int)],(CNF.this.Sym, Int),That] -->
<g id="node2353" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[(CNF.this.Sym, Int)],(CNF.this.Sym, Int),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-170382.8701" rx="472.1947" ry="26.7407"/>
<text text-anchor="start" x="18440.614" y="-170386.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[(CNF.this.Sym, Int)],(CNF.this.Sym, Int),That]</text>
<text text-anchor="middle" x="18766.614" y="-170371.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- prev.type =&gt; ?{def DOT: ?} -->
<g id="node2354" class="node">
<title>prev.type =&gt; ?{def DOT: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-170454.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="18688.114" y="-170458.6701" font-family="Times,serif" font-size="14.00" fill="#000000">prev.type =&gt; ?{def DOT: ?}</text>
<text text-anchor="middle" x="18766.614" y="-170443.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%s (%s)&#39;) =&gt; ?{def format: ?} -->
<g id="node2355" class="node">
<title>String(&#39;%s (%s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-170526.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="18662.114" y="-170530.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s (%s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-170515.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.BOOL.type),That] -->
<g id="node2356" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.BOOL.type),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-170598.8701" rx="444.1261" ry="26.7407"/>
<text text-anchor="start" x="18460.614" y="-170602.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.BOOL.type),That]</text>
<text text-anchor="middle" x="18766.614" y="-170587.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- MatchOptimization.this.global.gen.global.RefTree =&gt; ?{def DOT: ?} -->
<g id="node2357" class="node">
<title>MatchOptimization.this.global.gen.global.RefTree =&gt; ?{def DOT: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-170670.8701" rx="282.2713" ry="26.7407"/>
<text text-anchor="start" x="18575.114" y="-170674.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchOptimization.this.global.gen.global.RefTree =&gt; ?{def DOT: ?}</text>
<text text-anchor="middle" x="18766.614" y="-170659.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.WHILEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2358" class="node">
<title>JavaScanners.this.global.javanme.WHILEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-170742.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="18583.114" y="-170746.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.WHILEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-170731.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Reifier.this.SymbolTable =&gt; ?{def ++=: ?} -->
<g id="node2359" class="node">
<title>Reifier.this.SymbolTable =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-170814.8701" rx="181.9532" ry="26.7407"/>
<text text-anchor="start" x="18646.114" y="-170818.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Reifier.this.SymbolTable =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-170803.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.runtime.Nothing$] -->
<g id="node2360" class="node">
<title>scala.reflect.ClassTag[scala.runtime.Nothing$]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-170886.8701" rx="193.0803" ry="26.7407"/>
<text text-anchor="start" x="18638.114" y="-170890.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.runtime.Nothing$]</text>
<text text-anchor="middle" x="18766.614" y="-170875.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; CleanUp.this.global.analyzer.global.Symbol -->
<g id="node2361" class="node">
<title>((Nothing, Nothing)) =&gt; CleanUp.this.global.analyzer.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-170958.8701" rx="280.943" ry="26.7407"/>
<text text-anchor="start" x="18576.114" y="-170962.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; CleanUp.this.global.analyzer.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-170947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,(String, tools.nsc.backend.jvm.BTypes.MethodInlineInfo),Map[String,tools.nsc.backend.jvm.BTypes.MethodInlineInfo]] -->
<g id="node2362" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,(String, tools.nsc.backend.jvm.BTypes.MethodInlineInfo),Map[String,tools.nsc.backend.jvm.BTypes.MethodInlineInfo]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-171030.8701" rx="670.1745" ry="26.7407"/>
<text text-anchor="start" x="18300.614" y="-171034.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,(String, tools.nsc.backend.jvm.BTypes.MethodInlineInfo),Map[String,tools.nsc.backend.jvm.BTypes.MethodInlineInfo]]</text>
<text text-anchor="middle" x="18766.614" y="-171019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;typing implicit: %s %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2363" class="node">
<title>String(&#39;typing implicit: %s %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-171102.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-171106.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;typing implicit: %s %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-171091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.DOkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2364" class="node">
<title>JavaScanners.this.global.javanme.DOkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-171174.8701" rx="253.2885" ry="26.7407"/>
<text text-anchor="start" x="18595.614" y="-171178.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.DOkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-171163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Symbol]) -->
<g id="node2365" class="node">
<title>(=&gt; (List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-171246.8701" rx="519.0328" ry="26.7407"/>
<text text-anchor="start" x="18407.614" y="-171250.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</text>
<text text-anchor="middle" x="18766.614" y="-171235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int =&gt; ?{def max: ?} -->
<g id="node2366" class="node">
<title>Int =&gt; ?{def max: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-171318.8701" rx="94.5053" ry="26.7407"/>
<text text-anchor="start" x="18707.614" y="-171322.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int =&gt; ?{def max: ?}</text>
<text text-anchor="middle" x="18766.614" y="-171307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; java.net.URI -->
<g id="node2367" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; java.net.URI</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-171390.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="18652.114" y="-171394.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; java.net.URI</text>
<text text-anchor="middle" x="18766.614" y="-171379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[AccessorSynthesis.this.global.Tree],AccessorSynthesis.this.global.Tree,That] -->
<g id="node2368" class="node">
<title>scala.collection.generic.CanBuildFrom[List[AccessorSynthesis.this.global.Tree],AccessorSynthesis.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-171462.8701" rx="482.4938" ry="26.7407"/>
<text text-anchor="start" x="18433.614" y="-171466.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[AccessorSynthesis.this.global.Tree],AccessorSynthesis.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-171451.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[UnCurry.this.global.Tree],UnCurry.this.global.Tree,That] -->
<g id="node2370" class="node">
<title>scala.collection.generic.CanBuildFrom[List[UnCurry.this.global.Tree],UnCurry.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-171534.8701" rx="406.6728" ry="26.7407"/>
<text text-anchor="start" x="18487.114" y="-171538.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[UnCurry.this.global.Tree],UnCurry.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-171523.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.Symbol],ExtensionMethods.this.global.Symbol,That] -->
<g id="node2371" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.Symbol],ExtensionMethods.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-171606.8701" rx="508.3196" ry="26.7407"/>
<text text-anchor="start" x="18415.114" y="-171610.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.Symbol],ExtensionMethods.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-171595.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[StdAttachments.this.DynamicRewriteAttachment.type] -->
<g id="node2372" class="node">
<title>scala.reflect.ClassTag[StdAttachments.this.DynamicRewriteAttachment.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-171678.8701" rx="313.4968" ry="26.7407"/>
<text text-anchor="start" x="18553.114" y="-171682.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[StdAttachments.this.DynamicRewriteAttachment.type]</text>
<text text-anchor="middle" x="18766.614" y="-171667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- ((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Int] -->
<g id="node2373" class="node">
<title>((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-171750.8701" rx="210.0214" ry="26.7407"/>
<text text-anchor="start" x="18626.114" y="-171754.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-171739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%10s: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2374" class="node">
<title>String(&#39;%10s: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-171822.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="18658.114" y="-171826.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%10s: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-171811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[BCodeHelpers.this.global.AnnotationInfo]],(List[BCodeHelpers.this.global.AnnotationInfo], Int),That] -->
<g id="node2375" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[BCodeHelpers.this.global.AnnotationInfo]],(List[BCodeHelpers.this.global.AnnotationInfo], Int),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-171894.8701" rx="598.8389" ry="26.7407"/>
<text text-anchor="start" x="18351.114" y="-171898.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[BCodeHelpers.this.global.AnnotationInfo]],(List[BCodeHelpers.this.global.AnnotationInfo], Int),That]</text>
<text text-anchor="middle" x="18766.614" y="-171883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- mixin.type =&gt; ?{def +: ?} -->
<g id="node2376" class="node">
<title>mixin.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-171966.8701" rx="114.6026" ry="26.7407"/>
<text text-anchor="start" x="18693.614" y="-171970.6701" font-family="Times,serif" font-size="14.00" fill="#000000">mixin.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-171955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Any] =&gt; ?{def ::=: ?} -->
<g id="node2377" class="node">
<title>List[Any] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-172038.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="18692.614" y="-172042.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Any] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-172027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- (=&gt; Duplicators.this.global.Tree) =&gt; Duplicators.this.global.Type -->
<g id="node2378" class="node">
<title>(=&gt; Duplicators.this.global.Tree) =&gt; Duplicators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-172110.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="18586.114" y="-172114.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Duplicators.this.global.Tree) =&gt; Duplicators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-172099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 0ms</text>
</g>
<!-- TreeAndTypeAnalysis.this.global.AnnotationInfo =&gt; TreeAndTypeAnalysis.this.global.Type -->
<g id="node2379" class="node">
<title>TreeAndTypeAnalysis.this.global.AnnotationInfo =&gt; TreeAndTypeAnalysis.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-172182.8701" rx="372.7906" ry="26.7407"/>
<text text-anchor="start" x="18511.114" y="-172186.6701" font-family="Times,serif" font-size="14.00" fill="#000000">TreeAndTypeAnalysis.this.global.AnnotationInfo =&gt; TreeAndTypeAnalysis.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-172171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.AbsTypeError],String,That] -->
<g id="node2380" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.AbsTypeError],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-172254.8701" rx="336.6657" ry="26.7407"/>
<text text-anchor="start" x="18536.614" y="-172258.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.AbsTypeError],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-172243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;macro expansion has failed: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2381" class="node">
<title>String(&#39;macro expansion has failed: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-172326.8701" rx="248.8032" ry="26.7407"/>
<text text-anchor="start" x="18598.614" y="-172330.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;macro expansion has failed: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-172315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- nullnessAnalyzer.type =&gt; ?{def frameAt: ?} -->
<g id="node2382" class="node">
<title>nullnessAnalyzer.type =&gt; ?{def frameAt: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-172398.8701" rx="184.6098" ry="26.7407"/>
<text text-anchor="start" x="18644.114" y="-172402.6701" font-family="Times,serif" font-size="14.00" fill="#000000">nullnessAnalyzer.type =&gt; ?{def frameAt: ?}</text>
<text text-anchor="middle" x="18766.614" y="-172387.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[T],(T, T),That] -->
<g id="node2383" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[T],(T, T),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-172470.8701" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="18604.114" y="-172474.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[T],(T, T),That]</text>
<text text-anchor="middle" x="18766.614" y="-172459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[BCodeHelpers.this.global.mixer.NeedStaticImpl.type] -->
<g id="node2384" class="node">
<title>scala.reflect.ClassTag[BCodeHelpers.this.global.mixer.NeedStaticImpl.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-172542.8701" rx="309.0113" ry="26.7407"/>
<text text-anchor="start" x="18556.114" y="-172546.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[BCodeHelpers.this.global.mixer.NeedStaticImpl.type]</text>
<text text-anchor="middle" x="18766.614" y="-172531.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- List[NamesDefaults.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node2385" class="node">
<title>List[NamesDefaults.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-172614.8701" rx="340.651" ry="26.7407"/>
<text text-anchor="start" x="18533.614" y="-172618.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[NamesDefaults.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-172603.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[BCodeBodyBuilder.this.global.UseInvokeSpecial.type] -->
<g id="node2386" class="node">
<title>scala.reflect.ClassTag[BCodeBodyBuilder.this.global.UseInvokeSpecial.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-172686.8701" rx="312.5824" ry="26.7407"/>
<text text-anchor="start" x="18553.614" y="-172690.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[BCodeBodyBuilder.this.global.UseInvokeSpecial.type]</text>
<text text-anchor="middle" x="18766.614" y="-172675.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; Array[Long]) =&gt; Long -->
<g id="node2387" class="node">
<title>(=&gt; Array[Long]) =&gt; Long</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-172758.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="18691.114" y="-172762.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Long]) =&gt; Long</text>
<text text-anchor="middle" x="18766.614" y="-172747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scriptFile.type =&gt; ?{def stripSuffix: ?} -->
<g id="node2388" class="node">
<title>scriptFile.type =&gt; ?{def stripSuffix: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-172830.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="18659.614" y="-172834.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scriptFile.type =&gt; ?{def stripSuffix: ?}</text>
<text text-anchor="middle" x="18766.614" y="-172819.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,PostProcessor.this.bTypes.ClassBType] =&gt; ?{def get: ?} -->
<g id="node2389" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,PostProcessor.this.bTypes.ClassBType] =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-172902.8701" rx="498.5206" ry="26.7407"/>
<text text-anchor="start" x="18422.114" y="-172906.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,PostProcessor.this.bTypes.ClassBType] =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-172891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Int -->
<g id="node2390" class="node">
<title>Unit =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-172974.8701" rx="77.5641" ry="26.7407"/>
<text text-anchor="start" x="18719.614" y="-172978.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-172963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">90 times = 13ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],scala.reflect.internal.Variance,List[scala.reflect.internal.Variance]] -->
<g id="node2391" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],scala.reflect.internal.Variance,List[scala.reflect.internal.Variance]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-173046.8701" rx="544.4444" ry="26.7407"/>
<text text-anchor="start" x="18389.614" y="-173050.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],scala.reflect.internal.Variance,List[scala.reflect.internal.Variance]]</text>
<text text-anchor="middle" x="18766.614" y="-173035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[ZipArchiveFileLookup.this.archive.DirEntry],FileEntryType,Seq[FileEntryType]] -->
<g id="node2392" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[ZipArchiveFileLookup.this.archive.DirEntry],FileEntryType,Seq[FileEntryType]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-173118.8701" rx="499.4349" ry="26.7407"/>
<text text-anchor="start" x="18421.614" y="-173122.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[ZipArchiveFileLookup.this.archive.DirEntry],FileEntryType,Seq[FileEntryType]]</text>
<text text-anchor="middle" x="18766.614" y="-173107.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Type],String,That] -->
<g id="node2393" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Type],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-173190.8701" rx="366.0628" ry="26.7407"/>
<text text-anchor="start" x="18515.614" y="-173194.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.Type],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-173179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Unit)) =&gt; scala.tools.nsc.io.Path -->
<g id="node2394" class="node">
<title>(=&gt; (Nothing, Unit)) =&gt; scala.tools.nsc.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-173262.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="18637.114" y="-173266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit)) =&gt; scala.tools.nsc.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-173251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Array[Char] -->
<g id="node2395" class="node">
<title>((Nothing, Nothing)) =&gt; Array[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-173334.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="18664.114" y="-173338.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Array[Char]</text>
<text text-anchor="middle" x="18766.614" y="-173323.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;%s(&#39;) =&gt; ?{def format: ?} -->
<g id="node2396" class="node">
<title>String(&#39;%s(&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-173406.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="18674.614" y="-173410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s(&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-173395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Option[String] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node2397" class="node">
<title>Option[String] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-173478.8701" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="18604.114" y="-173482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[String] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-173467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BoxUnbox.this.postProcessor.bTypes.ClassInfo] =&gt; ?{def get: ?} -->
<g id="node2398" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BoxUnbox.this.postProcessor.bTypes.ClassInfo] =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-173550.8701" rx="532.4028" ry="26.7407"/>
<text text-anchor="start" x="18398.114" y="-173554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BoxUnbox.this.postProcessor.bTypes.ClassInfo] =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-173539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Array[Char] =&gt; IndexedSeq[Char] -->
<g id="node2399" class="node">
<title>Array[Char] =&gt; IndexedSeq[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-173622.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="18671.614" y="-173626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Char] =&gt; IndexedSeq[Char]</text>
<text text-anchor="middle" x="18766.614" y="-173611.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Array[String] =&gt; ?{def headOption: ?} -->
<g id="node2400" class="node">
<title>Array[String] =&gt; ?{def headOption: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-173694.8701" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="18659.114" y="-173698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def headOption: ?}</text>
<text text-anchor="middle" x="18766.614" y="-173683.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- imeth.NameType =&gt; ?{def +: ?} -->
<g id="node2401" class="node">
<title>imeth.NameType =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-173766.8701" rx="140.9288" ry="26.7407"/>
<text text-anchor="start" x="18675.114" y="-173770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">imeth.NameType =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-173755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest],Inliner.this.postProcessor.inlinerHeuristics.InlineRequest,That] -->
<g id="node2402" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest],Inliner.this.postProcessor.inlinerHeuristics.InlineRequest,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-173838.8701" rx="651.9049" ry="26.7407"/>
<text text-anchor="start" x="18313.614" y="-173842.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Inliner.this.postProcessor.inlinerHeuristics.InlineRequest],Inliner.this.postProcessor.inlinerHeuristics.InlineRequest,That]</text>
<text text-anchor="middle" x="18766.614" y="-173827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.nsc.Settings#Setting],String,String =&gt; Boolean] -->
<g id="node2403" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.nsc.Settings#Setting],String,String =&gt; Boolean]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-173910.8701" rx="515.4617" ry="26.7407"/>
<text text-anchor="start" x="18410.114" y="-173914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.nsc.Settings#Setting],String,String =&gt; Boolean]</text>
<text text-anchor="middle" x="18766.614" y="-173899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Checkable.this.global.Type] =&gt; scala.collection.TraversableLike[El1,Repr1] -->
<g id="node2404" class="node">
<title>List[Checkable.this.global.Type] =&gt; scala.collection.TraversableLike[El1,Repr1]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-173982.8701" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="18544.114" y="-173986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Checkable.this.global.Type] =&gt; scala.collection.TraversableLike[El1,Repr1]</text>
<text text-anchor="middle" x="18766.614" y="-173971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;$md&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType -->
<g id="node2405" class="node">
<title>String(&#39;$md&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-174054.8701" rx="349.1216" ry="26.7407"/>
<text text-anchor="start" x="18527.614" y="-174058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;$md&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</text>
<text text-anchor="middle" x="18766.614" y="-174043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; EtaExpansion.this.global.Type -->
<g id="node2406" class="node">
<title>(=&gt; Unit) =&gt; EtaExpansion.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-174126.8701" rx="184.6098" ry="26.7407"/>
<text text-anchor="start" x="18644.114" y="-174130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; EtaExpansion.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-174115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Parsers.this.global.Modifiers) =&gt; ?{def |=: ?} -->
<g id="node2407" class="node">
<title>(=&gt; Parsers.this.global.Modifiers) =&gt; ?{def |=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-174198.8701" rx="207.3647" ry="26.7407"/>
<text text-anchor="start" x="18628.114" y="-174202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Parsers.this.global.Modifiers) =&gt; ?{def |=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-174187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.gen.global.Tree],(Typers.this.global.Name, Option[Typers.this.global.ClassfileAnnotArg]),That] -->
<g id="node2408" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.gen.global.Tree],(Typers.this.global.Name, Option[Typers.this.global.ClassfileAnnotArg]),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-174270.8701" rx="629.1501" ry="26.7407"/>
<text text-anchor="start" x="18329.614" y="-174274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.gen.global.Tree],(Typers.this.global.Name, Option[Typers.this.global.ClassfileAnnotArg]),That]</text>
<text text-anchor="middle" x="18766.614" y="-174259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.TypeEnv],SpecializeTypes.this.global.Symbol,List[SpecializeTypes.this.global.Symbol]] -->
<g id="node2409" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.TypeEnv],SpecializeTypes.this.global.Symbol,List[SpecializeTypes.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-174342.8701" rx="610.4664" ry="26.7407"/>
<text text-anchor="start" x="18343.114" y="-174346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.TypeEnv],SpecializeTypes.this.global.Symbol,List[SpecializeTypes.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-174331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Double =&gt; Parsers.this.Offset -->
<g id="node2410" class="node">
<title>Double =&gt; Parsers.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-174414.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="18684.614" y="-174418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Double =&gt; Parsers.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-174403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[AccessorSynthesis.this.global.Name,List[AccessorSynthesis.this.global.Symbol]],AccessorSynthesis.this.global.TermSymbol,That] -->
<g id="node2411" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[AccessorSynthesis.this.global.Name,List[AccessorSynthesis.this.global.Symbol]],AccessorSynthesis.this.global.TermSymbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-174486.8701" rx="803.0467" ry="26.7407"/>
<text text-anchor="start" x="18206.614" y="-174490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[AccessorSynthesis.this.global.Name,List[AccessorSynthesis.this.global.Symbol]],AccessorSynthesis.this.global.TermSymbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-174475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],(String, String),That] -->
<g id="node2412" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],(String, String),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-174558.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="18566.614" y="-174562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],(String, String),That]</text>
<text text-anchor="middle" x="18766.614" y="-174547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[scala.tools.asm.Label] =&gt; Array[String] -->
<g id="node2413" class="node">
<title>Array[scala.tools.asm.Label] =&gt; Array[String]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-174630.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="18638.614" y="-174634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[scala.tools.asm.Label] =&gt; Array[String]</text>
<text text-anchor="middle" x="18766.614" y="-174619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- JavaParsers.this.global.Modifiers =&gt; ?{def |=: ?} -->
<g id="node2414" class="node">
<title>JavaParsers.this.global.Modifiers =&gt; ?{def |=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-174702.8701" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="18631.114" y="-174706.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaParsers.this.global.Modifiers =&gt; ?{def |=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-174691.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- String(&#39;inferring implicit %s of type %s, macros = %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2415" class="node">
<title>String(&#39;inferring implicit %s of type %s, macros = %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-174774.8701" rx="308.0972" ry="26.7407"/>
<text text-anchor="start" x="18556.614" y="-174778.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;inferring implicit %s of type %s, macros = %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-174763.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.AbstractInsnNode -->
<g id="node2416" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.AbstractInsnNode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-174846.8701" rx="271.558" ry="26.7407"/>
<text text-anchor="start" x="18582.614" y="-174850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.AbstractInsnNode</text>
<text text-anchor="middle" x="18766.614" y="-174835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 3ms</text>
</g>
<!-- String(&#39;missing end tag in XML literal for &lt;%s&gt;&#39;) =&gt; ?{def format: ?} -->
<g id="node2417" class="node">
<title>String(&#39;missing end tag in XML literal for &lt;%s&gt;&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-174918.8701" rx="286.2565" ry="26.7407"/>
<text text-anchor="start" x="18572.114" y="-174922.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;missing end tag in XML literal for &lt;%s&gt;&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-174907.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.languageFeature.higherKinds -->
<g id="node2418" class="node">
<title>scala.languageFeature.higherKinds</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-174990.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="18671.114" y="-174994.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.languageFeature.higherKinds</text>
<text text-anchor="middle" x="18766.614" y="-174979.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- SymbolTables.this.SymbolTable =&gt; ?{def +=: ?} -->
<g id="node2419" class="node">
<title>SymbolTables.this.SymbolTable =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-175062.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="18629.614" y="-175066.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SymbolTables.this.SymbolTable =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-175051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.BOOL.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2420" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.BOOL.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-175134.8701" rx="274.2149" ry="26.7407"/>
<text text-anchor="start" x="18580.614" y="-175138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.BOOL.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-175123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Typers.this.universe.analyzer.global.Tree -->
<g id="node2421" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Typers.this.universe.analyzer.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-175206.8701" rx="319.7246" ry="26.7407"/>
<text text-anchor="start" x="18548.614" y="-175210.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Typers.this.universe.analyzer.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-175195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Mixin.this.global.Symbol] =&gt; ?{def ::=: ?} -->
<g id="node2422" class="node">
<title>List[Mixin.this.global.Symbol] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-175278.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="18634.114" y="-175282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Mixin.this.global.Symbol] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-175267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Global.this.analyzer.namerFactory.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2423" class="node">
<title>Global.this.analyzer.namerFactory.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-175350.8701" rx="228.291" ry="26.7407"/>
<text text-anchor="start" x="18613.114" y="-175354.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.analyzer.namerFactory.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-175339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],scala.reflect.internal.Variance,That] -->
<g id="node2424" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],scala.reflect.internal.Variance,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-175422.8701" rx="422.2855" ry="26.7407"/>
<text text-anchor="start" x="18476.114" y="-175426.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],scala.reflect.internal.Variance,That]</text>
<text text-anchor="middle" x="18766.614" y="-175411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; java.io.FilenameFilter -->
<g id="node2425" class="node">
<title>(=&gt; Unit) =&gt; java.io.FilenameFilter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-175494.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="18667.114" y="-175498.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; java.io.FilenameFilter</text>
<text text-anchor="middle" x="18766.614" y="-175483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Constructors.this.global.Modifiers -->
<g id="node2426" class="node">
<title>Unit =&gt; Constructors.this.global.Modifiers</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-175566.8701" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="18648.614" y="-175570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Constructors.this.global.Modifiers</text>
<text text-anchor="middle" x="18766.614" y="-175555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Array[StackTraceElement] =&gt; ?{def reverse: ?} -->
<g id="node2427" class="node">
<title>Array[StackTraceElement] =&gt; ?{def reverse: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-175638.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="18634.114" y="-175642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[StackTraceElement] =&gt; ?{def reverse: ?}</text>
<text text-anchor="middle" x="18766.614" y="-175627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(AnalyzerPlugins.this.MacroPlugin, Option[T])],(AnalyzerPlugins.this.MacroPlugin, T),That] -->
<g id="node2428" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(AnalyzerPlugins.this.MacroPlugin, Option[T])],(AnalyzerPlugins.this.MacroPlugin, T),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-175710.8701" rx="546.6871" ry="26.7407"/>
<text text-anchor="start" x="18388.114" y="-175714.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(AnalyzerPlugins.this.MacroPlugin, Option[T])],(AnalyzerPlugins.this.MacroPlugin, T),That]</text>
<text text-anchor="middle" x="18766.614" y="-175699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Char] =&gt; ?{def drop: ?} -->
<g id="node2429" class="node">
<title>Array[Char] =&gt; ?{def drop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-175782.8701" rx="131.5437" ry="26.7407"/>
<text text-anchor="start" x="18681.614" y="-175786.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Char] =&gt; ?{def drop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-175771.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.reflect.ClassTag[Delambdafy.this.global.OuterArgCanBeElided.type] -->
<g id="node2430" class="node">
<title>scala.reflect.ClassTag[Delambdafy.this.global.OuterArgCanBeElided.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-175854.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="18560.614" y="-175858.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Delambdafy.this.global.OuterArgCanBeElided.type]</text>
<text text-anchor="middle" x="18766.614" y="-175843.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; MatchTreeMaking.this.global.Tree -->
<g id="node2431" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; MatchTreeMaking.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-175926.8701" rx="259.5164" ry="26.7407"/>
<text text-anchor="start" x="18591.114" y="-175930.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; MatchTreeMaking.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-175915.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Unit]) =&gt; Array[Int] -->
<g id="node2432" class="node">
<title>(=&gt; Array[Unit]) =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-175998.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="18679.614" y="-176002.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Unit]) =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-175987.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.AnnotationInfo],RefChecks.this.global.Type,List[RefChecks.this.global.Type]] -->
<g id="node2433" class="node">
<title>scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.AnnotationInfo],RefChecks.this.global.Type,List[RefChecks.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-176070.8701" rx="576.9983" ry="26.7407"/>
<text text-anchor="start" x="18366.614" y="-176074.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.AnnotationInfo],RefChecks.this.global.Type,List[RefChecks.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-176059.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[CommonSubconditionElimination.this.Test],(MatchOptimization.this.global.Symbol, MatchOptimization.this.global.gen.global.RefTree),That] -->
<g id="node2434" class="node">
<title>scala.collection.generic.CanBuildFrom[List[CommonSubconditionElimination.this.Test],(MatchOptimization.this.global.Symbol, MatchOptimization.this.global.gen.global.RefTree),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-176142.8701" rx="740.1816" ry="26.7407"/>
<text text-anchor="start" x="18251.114" y="-176146.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[CommonSubconditionElimination.this.Test],(MatchOptimization.this.global.Symbol, MatchOptimization.this.global.gen.global.RefTree),That]</text>
<text text-anchor="middle" x="18766.614" y="-176131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;@tparam&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2435" class="node">
<title>String(&#39;@tparam&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-176214.8701" rx="144.9138" ry="26.7407"/>
<text text-anchor="start" x="18672.114" y="-176218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;@tparam&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-176203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; Unapplies.this.global.Symbol -->
<g id="node2436" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; Unapplies.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-176286.8701" rx="296.9697" ry="26.7407"/>
<text text-anchor="start" x="18564.614" y="-176290.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; Unapplies.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-176275.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; SymbolTables.this.global.Symbol -->
<g id="node2437" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; SymbolTables.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-176358.8701" rx="328.1951" ry="26.7407"/>
<text text-anchor="start" x="18542.614" y="-176362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; SymbolTables.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-176347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- ((MatchOptimization.this.global.Symbol, MatchOptimization.this.global.gen.global.RefTree)) =&gt; (A1, A2) -->
<g id="node2438" class="node">
<title>((MatchOptimization.this.global.Symbol, MatchOptimization.this.global.gen.global.RefTree)) =&gt; (A1, A2)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-176430.8701" rx="429.4277" ry="26.7407"/>
<text text-anchor="start" x="18471.114" y="-176434.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((MatchOptimization.this.global.Symbol, MatchOptimization.this.global.gen.global.RefTree)) =&gt; (A1, A2)</text>
<text text-anchor="middle" x="18766.614" y="-176419.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[String],Placeholders.this.global.TermName,Set[Placeholders.this.global.Name]] -->
<g id="node2439" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[String],Placeholders.this.global.TermName,Set[Placeholders.this.global.Name]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-176502.8701" rx="597.5105" ry="26.7407"/>
<text text-anchor="start" x="18352.114" y="-176506.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[String],Placeholders.this.global.TermName,Set[Placeholders.this.global.Name]]</text>
<text text-anchor="middle" x="18766.614" y="-176491.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 17ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Annotated,List[Typers.this.global.Tree]] -->
<g id="node2440" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Annotated,List[Typers.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-176574.8701" rx="507.9054" ry="26.7407"/>
<text text-anchor="start" x="18415.614" y="-176578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Annotated,List[Typers.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-176563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Tree),That] -->
<g id="node2441" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Tree),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-176646.8701" rx="627.4075" ry="26.7407"/>
<text text-anchor="start" x="18331.114" y="-176650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Symbol],(SpecializeTypes.this.global.Symbol, SpecializeTypes.this.global.Tree),That]</text>
<text text-anchor="middle" x="18766.614" y="-176635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit],scala.tools.nsc.transform.patmat.Lit,That] -->
<g id="node2442" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit],scala.tools.nsc.transform.patmat.Lit,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-176718.8701" rx="594.8537" ry="26.7407"/>
<text text-anchor="start" x="18354.114" y="-176722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit],scala.tools.nsc.transform.patmat.Lit,That]</text>
<text text-anchor="middle" x="18766.614" y="-176707.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- input.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39; &#39;)): ?} -->
<g id="node2443" class="node">
<title>input.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39; &#39;)): ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-176790.8701" rx="196.6514" ry="26.7407"/>
<text text-anchor="start" x="18635.614" y="-176794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">input.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39; &#39;)): ?}</text>
<text text-anchor="middle" x="18766.614" y="-176779.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Erasure.this.global.SAMFunction] -->
<g id="node2444" class="node">
<title>scala.reflect.ClassTag[Erasure.this.global.SAMFunction]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-176862.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="18610.114" y="-176866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Erasure.this.global.SAMFunction]</text>
<text text-anchor="middle" x="18766.614" y="-176851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((List[RefChecks.this.global.Type], List[RefChecks.this.global.TypeBounds])) =&gt; ?{def zipped: ?} -->
<g id="node2445" class="node">
<title>((List[RefChecks.this.global.Type], List[RefChecks.this.global.TypeBounds])) =&gt; ?{def zipped: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-176934.8701" rx="395.9596" ry="26.7407"/>
<text text-anchor="start" x="18494.614" y="-176938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((List[RefChecks.this.global.Type], List[RefChecks.this.global.TypeBounds])) =&gt; ?{def zipped: ?}</text>
<text text-anchor="middle" x="18766.614" y="-176923.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- TypeDiagnostics.this.global.TypeTag[DummyImplicit] -->
<g id="node2446" class="node">
<title>TypeDiagnostics.this.global.TypeTag[DummyImplicit]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-177006.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="18614.614" y="-177010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">TypeDiagnostics.this.global.TypeTag[DummyImplicit]</text>
<text text-anchor="middle" x="18766.614" y="-176995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- NamesDefaults.this.Context -->
<g id="node2447" class="node">
<title>NamesDefaults.this.Context</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-177078.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="18689.614" y="-177082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">NamesDefaults.this.Context</text>
<text text-anchor="middle" x="18766.614" y="-177067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MultiChoiceSetting.this.domain.Value],String,List[String]] -->
<g id="node2448" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MultiChoiceSetting.this.domain.Value],String,List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-177150.8701" rx="412.9007" ry="26.7407"/>
<text text-anchor="start" x="18482.614" y="-177154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MultiChoiceSetting.this.domain.Value],String,List[String]]</text>
<text text-anchor="middle" x="18766.614" y="-177139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Macros.this.global.Tree =&gt; Macros.this.global.Type -->
<g id="node2449" class="node">
<title>Macros.this.global.Tree =&gt; Macros.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-177222.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-177226.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Macros.this.global.Tree =&gt; Macros.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-177211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[RefChecks.this.global.Type] =&gt; scala.collection.TraversableLike[El1,Repr1] -->
<g id="node2450" class="node">
<title>List[RefChecks.this.global.Type] =&gt; scala.collection.TraversableLike[El1,Repr1]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-177294.8701" rx="327.2809" ry="26.7407"/>
<text text-anchor="start" x="18543.114" y="-177298.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[RefChecks.this.global.Type] =&gt; scala.collection.TraversableLike[El1,Repr1]</text>
<text text-anchor="middle" x="18766.614" y="-177283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.Symbol],ExtensionMethods.this.global.Symbol,List[ExtensionMethods.this.global.Symbol]] -->
<g id="node2451" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.Symbol],ExtensionMethods.this.global.Symbol,List[ExtensionMethods.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-177366.8701" rx="660.3755" ry="26.7407"/>
<text text-anchor="start" x="18307.614" y="-177370.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.Symbol],ExtensionMethods.this.global.Symbol,List[ExtensionMethods.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-177355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.Type],Infer.this.global.Type,That] -->
<g id="node2452" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.Type],Infer.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-177438.8701" rx="380.3469" ry="26.7407"/>
<text text-anchor="start" x="18505.614" y="-177442.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.Type],Infer.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-177427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CleanUp.this.global.Apply =&gt; ?{def DOT: ?} -->
<g id="node2453" class="node">
<title>CleanUp.this.global.Apply =&gt; ?{def DOT: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-177510.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="18640.114" y="-177514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CleanUp.this.global.Apply =&gt; ?{def DOT: ?}</text>
<text text-anchor="middle" x="18766.614" y="-177499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Int(0) =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node2454" class="node">
<title>Int(0) =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-177582.8701" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="18625.614" y="-177586.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(0) =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-177571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[BCodeHelpers.this.bTypes.BType]) =&gt; Array[String] -->
<g id="node2455" class="node">
<title>(=&gt; Array[BCodeHelpers.this.bTypes.BType]) =&gt; Array[String]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-177654.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-177658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[BCodeHelpers.this.bTypes.BType]) =&gt; Array[String]</text>
<text text-anchor="middle" x="18766.614" y="-177643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.global.definitions.ByteClass.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2456" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.global.definitions.ByteClass.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-177726.8701" rx="357.1779" ry="26.7407"/>
<text text-anchor="start" x="18522.114" y="-177730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.global.definitions.ByteClass.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-177715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.Settings#BooleanSetting =&gt; ?{def &amp;&amp;: ?} -->
<g id="node2457" class="node">
<title>scala.tools.nsc.Settings#BooleanSetting =&gt; ?{def &amp;&amp;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-177798.8701" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="18608.114" y="-177802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.Settings#BooleanSetting =&gt; ?{def &amp;&amp;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-177787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">20 times = 10ms</text>
</g>
<!-- String(&#39;signature&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2458" class="node">
<title>String(&#39;signature&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-177870.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="18673.114" y="-177874.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;signature&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-177859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(String, Any)],Macros.this.global.Assign,That] -->
<g id="node2459" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(String, Any)],Macros.this.global.Assign,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-177942.8701" rx="365.6484" ry="26.7407"/>
<text text-anchor="start" x="18516.114" y="-177946.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(String, Any)],Macros.this.global.Assign,That]</text>
<text text-anchor="middle" x="18766.614" y="-177931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;site&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2460" class="node">
<title>String(&#39;site&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-178014.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="18688.114" y="-178018.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;site&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-178003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.AnnotationInfo],RefChecks.this.global.Tree,List[RefChecks.this.global.Tree]] -->
<g id="node2461" class="node">
<title>scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.AnnotationInfo],RefChecks.this.global.Tree,List[RefChecks.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-178086.8701" rx="572.5131" ry="26.7407"/>
<text text-anchor="start" x="18369.614" y="-178090.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.AnnotationInfo],RefChecks.this.global.Tree,List[RefChecks.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-178075.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: ?V] -->
<g id="node2462" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: ?V]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-178158.8701" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="18565.114" y="-178162.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.analysis.Frame[_ &lt;: ?V]</text>
<text text-anchor="middle" x="18766.614" y="-178147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[Any],String,That] -->
<g id="node2463" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[Any],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-178230.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="18596.614" y="-178234.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[Any],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-178219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[Reporting.this.Symbol]) =&gt; ?{def +=: ?} -->
<g id="node2464" class="node">
<title>(=&gt; scala.collection.immutable.Set[Reporting.this.Symbol]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-178302.8701" rx="311.6683" ry="26.7407"/>
<text text-anchor="start" x="18554.114" y="-178306.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[Reporting.this.Symbol]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-178291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Unit]) =&gt; Array[CNF.this.Clause] -->
<g id="node2465" class="node">
<title>(=&gt; Array[Unit]) =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-178374.8701" rx="187.2667" ry="26.7407"/>
<text text-anchor="start" x="18642.114" y="-178378.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Unit]) =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-178363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[BoxUnbox.this.BoxCreation]) =&gt; ?{def +=: ?} -->
<g id="node2466" class="node">
<title>(=&gt; scala.collection.immutable.Set[BoxUnbox.this.BoxCreation]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-178446.8701" rx="334.423" ry="26.7407"/>
<text text-anchor="start" x="18538.114" y="-178450.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[BoxUnbox.this.BoxCreation]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-178435.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;library version&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2467" class="node">
<title>String(&#39;library version&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-178518.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="18658.114" y="-178522.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;library version&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-178507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,scala.tools.nsc.classpath.ClassFileEntryImpl,Seq[scala.tools.nsc.classpath.ClassFileEntry]] -->
<g id="node2468" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,scala.tools.nsc.classpath.ClassFileEntryImpl,Seq[scala.tools.nsc.classpath.ClassFileEntry]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-178590.8701" rx="550.2582" ry="26.7407"/>
<text text-anchor="start" x="18385.614" y="-178594.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,scala.tools.nsc.classpath.ClassFileEntryImpl,Seq[scala.tools.nsc.classpath.ClassFileEntry]]</text>
<text text-anchor="middle" x="18766.614" y="-178579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- implMethodsArray.type =&gt; ?{def grouped: ?} -->
<g id="node2469" class="node">
<title>implMethodsArray.type =&gt; ?{def grouped: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-178662.8701" rx="191.752" ry="26.7407"/>
<text text-anchor="start" x="18639.114" y="-178666.6701" font-family="Times,serif" font-size="14.00" fill="#000000">implMethodsArray.type =&gt; ?{def grouped: ?}</text>
<text text-anchor="middle" x="18766.614" y="-178651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- SyntheticMethods.this.global.Tree =&gt; ?{def ANY_EQ: ?} -->
<g id="node2470" class="node">
<title>SyntheticMethods.this.global.Tree =&gt; ?{def ANY_EQ: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-178734.8701" rx="238.0901" ry="26.7407"/>
<text text-anchor="start" x="18606.114" y="-178738.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SyntheticMethods.this.global.Tree =&gt; ?{def ANY_EQ: ?}</text>
<text text-anchor="middle" x="18766.614" y="-178723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Scanners.this.global.CompilationUnit -->
<g id="node2471" class="node">
<title>((Nothing, Nothing)) =&gt; Scanners.this.global.CompilationUnit</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-178806.8701" rx="254.6169" ry="26.7407"/>
<text text-anchor="start" x="18594.614" y="-178810.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Scanners.this.global.CompilationUnit</text>
<text text-anchor="middle" x="18766.614" y="-178795.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;inferring implicit %s (macros = %s): &#39;) =&gt; ?{def format: ?} -->
<g id="node2472" class="node">
<title>String(&#39;inferring implicit %s (macros = %s): &#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-178878.8701" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="18581.614" y="-178882.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;inferring implicit %s (macros = %s): &#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-178867.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.ELSEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2473" class="node">
<title>JavaScanners.this.global.javanme.ELSEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-178950.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-178954.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.ELSEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-178939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Flatten.this.global.ScopeEntry],Flatten.this.global.Symbol,That] -->
<g id="node2474" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Flatten.this.global.ScopeEntry],Flatten.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-179022.8701" rx="432.0845" ry="26.7407"/>
<text text-anchor="start" x="18469.114" y="-179026.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Flatten.this.global.ScopeEntry],Flatten.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-179011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; scala.tools.nsc.Settings -->
<g id="node2475" class="node">
<title>((Nothing, Nothing)) =&gt; scala.tools.nsc.Settings</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-179094.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="18634.114" y="-179098.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; scala.tools.nsc.Settings</text>
<text text-anchor="middle" x="18766.614" y="-179083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 16ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashSet[CompilerCommand.this.settings.Setting],String,That] -->
<g id="node2476" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashSet[CompilerCommand.this.settings.Setting],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-179166.8701" rx="504.3343" ry="26.7407"/>
<text text-anchor="start" x="18418.114" y="-179170.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashSet[CompilerCommand.this.settings.Setting],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-179155.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 16ms</text>
</g>
<!-- scala.reflect.ClassTag[Typers.this.global.InlineAnnotatedAttachment] -->
<g id="node2477" class="node">
<title>scala.reflect.ClassTag[Typers.this.global.InlineAnnotatedAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-179238.8701" rx="281.357" ry="26.7407"/>
<text text-anchor="start" x="18575.614" y="-179242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Typers.this.global.InlineAnnotatedAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-179227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[BigDecimal] -->
<g id="node2478" class="node">
<title>scala.reflect.ClassTag[BigDecimal]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-179310.8701" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="18669.114" y="-179314.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[BigDecimal]</text>
<text text-anchor="middle" x="18766.614" y="-179299.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[Set[scala.tools.asm.tree.AbstractInsnNode]],Set[scala.tools.asm.tree.AbstractInsnNode],Vector[Set[scala.tools.asm.tree.AbstractInsnNode]]] -->
<g id="node2479" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[Set[scala.tools.asm.tree.AbstractInsnNode]],Set[scala.tools.asm.tree.AbstractInsnNode],Vector[Set[scala.tools.asm.tree.AbstractInsnNode]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-179382.8701" rx="844.9852" ry="26.7407"/>
<text text-anchor="start" x="18177.114" y="-179386.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[Set[scala.tools.asm.tree.AbstractInsnNode]],Set[scala.tools.asm.tree.AbstractInsnNode],Vector[Set[scala.tools.asm.tree.AbstractInsnNode]]]</text>
<text text-anchor="middle" x="18766.614" y="-179371.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- List[Typers.this.global.Type] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node2480" class="node">
<title>List[Typers.this.global.Type] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-179454.8701" rx="297.884" ry="26.7407"/>
<text text-anchor="start" x="18564.114" y="-179458.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Typers.this.global.Type] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-179443.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Duplicators.this.global.Symbol],(Duplicators.this.global.Symbol, Duplicators.this.global.Type),That] -->
<g id="node2481" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Duplicators.this.global.Symbol],(Duplicators.this.global.Symbol, Duplicators.this.global.Type),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-179526.8701" rx="574.7557" ry="26.7407"/>
<text text-anchor="start" x="18368.114" y="-179530.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Duplicators.this.global.Symbol],(Duplicators.this.global.Symbol, Duplicators.this.global.Type),That]</text>
<text text-anchor="middle" x="18766.614" y="-179515.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$11.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2482" class="node">
<title>x$11.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-179598.8701" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="18694.114" y="-179602.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$11.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-179587.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTrackers.this.global.Symbol],SymbolTracker.this.Node,That] -->
<g id="node2483" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTrackers.this.global.Symbol],SymbolTracker.this.Node,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-179670.8701" rx="555.5719" ry="26.7407"/>
<text text-anchor="start" x="18381.614" y="-179674.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTrackers.this.global.Symbol],SymbolTracker.this.Node,That]</text>
<text text-anchor="middle" x="18766.614" y="-179659.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Interface.this.global.analyzer.global.Tree -->
<g id="node2484" class="node">
<title>((Nothing, Nothing)) =&gt; Interface.this.global.analyzer.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-179742.8701" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="18585.114" y="-179746.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Interface.this.global.analyzer.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-179731.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- _1.type =&gt; Boolean -->
<g id="node2485" class="node">
<title>_1.type =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-179814.8701" rx="89.191" ry="26.7407"/>
<text text-anchor="start" x="18711.614" y="-179818.6701" font-family="Times,serif" font-size="14.00" fill="#000000">_1.type =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-179803.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[utils$1.global.Symbol],utils$1.global.Tree,That] -->
<g id="node2486" class="node">
<title>scala.collection.generic.CanBuildFrom[List[utils$1.global.Symbol],utils$1.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-179886.8701" rx="370.5479" ry="26.7407"/>
<text text-anchor="start" x="18512.614" y="-179890.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[utils$1.global.Symbol],utils$1.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-179875.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- Macros.this.global.AnnotationInfo =&gt; Macros.this.global.Type -->
<g id="node2487" class="node">
<title>Macros.this.global.AnnotationInfo =&gt; Macros.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-179958.8701" rx="256.8596" ry="26.7407"/>
<text text-anchor="start" x="18593.114" y="-179962.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Macros.this.global.AnnotationInfo =&gt; Macros.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-179947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[LambdaLift.this.global.Symbol]) =&gt; LambdaLift.this.global.Type -->
<g id="node2488" class="node">
<title>(=&gt; List[LambdaLift.this.global.Symbol]) =&gt; LambdaLift.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-180030.8701" rx="304.1118" ry="26.7407"/>
<text text-anchor="start" x="18559.614" y="-180034.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[LambdaLift.this.global.Symbol]) =&gt; LambdaLift.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-180019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Idle timeout exceeded on port %d; exiting&#39;) =&gt; ?{def format: ?} -->
<g id="node2489" class="node">
<title>String(&#39;Idle timeout exceeded on port %d; exiting&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-180102.8701" rx="289.4135" ry="26.7407"/>
<text text-anchor="start" x="18570.114" y="-180106.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Idle timeout exceeded on port %d; exiting&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-180091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[(scala.collection.immutable.IntMapUtils.Int, Product with Serializable with CallGraph.this.ArgInfo)] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node2490" class="node">
<title>Option[(scala.collection.immutable.IntMapUtils.Int, Product with Serializable with CallGraph.this.ArgInfo)] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-180174.8701" rx="603.3242" ry="26.7407"/>
<text text-anchor="start" x="18348.114" y="-180178.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[(scala.collection.immutable.IntMapUtils.Int, Product with Serializable with CallGraph.this.ArgInfo)] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-180163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- bf.type =&gt; ?{def foreach: ?} -->
<g id="node2491" class="node">
<title>bf.type =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-180246.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="18688.114" y="-180250.6701" font-family="Times,serif" font-size="14.00" fill="#000000">bf.type =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-180235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[TreeMakers.this.TreeMaker]],TreeMakers.this.Casegen =&gt; MatchTreeMaking.this.global.Tree,That] -->
<g id="node2492" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[TreeMakers.this.TreeMaker]],TreeMakers.this.Casegen =&gt; MatchTreeMaking.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-180318.8701" rx="593.0253" ry="26.7407"/>
<text text-anchor="start" x="18355.114" y="-180322.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[TreeMakers.this.TreeMaker]],TreeMakers.this.Casegen =&gt; MatchTreeMaking.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-180307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],scala.tools.nsc.classpath.ClassPathEntries,That] -->
<g id="node2493" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],scala.tools.nsc.classpath.ClassPathEntries,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-180390.8701" rx="484.2363" ry="26.7407"/>
<text text-anchor="start" x="18432.114" y="-180394.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],scala.tools.nsc.classpath.ClassPathEntries,That]</text>
<text text-anchor="middle" x="18766.614" y="-180379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Scanners.this.global.nme.ATkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2494" class="node">
<title>Scanners.this.global.nme.ATkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-180462.8701" rx="219.4064" ry="26.7407"/>
<text text-anchor="start" x="18619.614" y="-180466.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.ATkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-180451.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; TreeGen.this.global.ValDef -->
<g id="node2495" class="node">
<title>((Nothing, Nothing)) =&gt; TreeGen.this.global.ValDef</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-180534.8701" rx="216.2494" ry="26.7407"/>
<text text-anchor="start" x="18621.614" y="-180538.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; TreeGen.this.global.ValDef</text>
<text text-anchor="middle" x="18766.614" y="-180523.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; StringBuilder -->
<g id="node2496" class="node">
<title>(=&gt; Unit) =&gt; StringBuilder</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-180606.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="18691.114" y="-180610.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; StringBuilder</text>
<text text-anchor="middle" x="18766.614" y="-180595.6701" font-family="Times,serif" font-size="14.00" fill="#000000">25 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Parsers.this.global.ValDef],Parsers.this.global.Ident,That] -->
<g id="node2497" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Parsers.this.global.ValDef],Parsers.this.global.Ident,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-180678.8701" rx="406.6728" ry="26.7407"/>
<text text-anchor="start" x="18487.114" y="-180682.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Parsers.this.global.ValDef],Parsers.this.global.Ident,That]</text>
<text text-anchor="middle" x="18766.614" y="-180667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Delambdafy.this.global.analyzer.global.Tree -->
<g id="node2498" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Delambdafy.this.global.analyzer.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-180750.8701" rx="296.0556" ry="26.7407"/>
<text text-anchor="start" x="18565.114" y="-180754.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Delambdafy.this.global.analyzer.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-180739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Iterable[RefChecks.this.global.Symbol],RefChecks.this.global.TermName,That] -->
<g id="node2499" class="node">
<title>scala.collection.generic.CanBuildFrom[Iterable[RefChecks.this.global.Symbol],RefChecks.this.global.TermName,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-180822.8701" rx="476.68" ry="26.7407"/>
<text text-anchor="start" x="18437.614" y="-180826.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Iterable[RefChecks.this.global.Symbol],RefChecks.this.global.TermName,That]</text>
<text text-anchor="middle" x="18766.614" y="-180811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.CounterExample],String,That] -->
<g id="node2500" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.CounterExample],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-180894.8701" rx="380.3469" ry="26.7407"/>
<text text-anchor="start" x="18505.614" y="-180898.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.CounterExample],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-180883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[InlinerHeuristics.this.InlineRequest]) =&gt; ?{def +=: ?} -->
<g id="node2501" class="node">
<title>(=&gt; scala.collection.immutable.Set[InlinerHeuristics.this.InlineRequest]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-180966.8701" rx="360.749" ry="26.7407"/>
<text text-anchor="start" x="18519.614" y="-180970.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[InlinerHeuristics.this.InlineRequest]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-180955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[DocComments.this.UseCase],(DocComments.this.Symbol, String, DocComments.this.Position),That] -->
<g id="node2502" class="node">
<title>scala.collection.generic.CanBuildFrom[List[DocComments.this.UseCase],(DocComments.this.Symbol, String, DocComments.this.Position),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-181038.8701" rx="580.5693" ry="26.7407"/>
<text text-anchor="start" x="18364.114" y="-181042.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[DocComments.this.UseCase],(DocComments.this.Symbol, String, DocComments.this.Position),That]</text>
<text text-anchor="middle" x="18766.614" y="-181027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;\&#39;%s\&#39; does not accept multiple arguments&#39;) =&gt; ?{def format: ?} -->
<g id="node2503" class="node">
<title>String(&#39;\&#39;%s\&#39; does not accept multiple arguments&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-181110.8701" rx="281.357" ry="26.7407"/>
<text text-anchor="start" x="18575.614" y="-181114.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;&#39;%s&#39; does not accept multiple arguments&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-181099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Array[Byte] -->
<g id="node2504" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Array[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-181182.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="18638.614" y="-181186.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Array[Byte]</text>
<text text-anchor="middle" x="18766.614" y="-181171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[EtaExpansion.this.global.Symbol],(EtaExpansion.this.global.ValDef, Boolean),List[(EtaExpansion.this.global.ValDef, Boolean)]] -->
<g id="node2505" class="node">
<title>scala.collection.generic.CanBuildFrom[List[EtaExpansion.this.global.Symbol],(EtaExpansion.this.global.ValDef, Boolean),List[(EtaExpansion.this.global.ValDef, Boolean)]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-181254.8701" rx="685.7872" ry="26.7407"/>
<text text-anchor="start" x="18289.614" y="-181258.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[EtaExpansion.this.global.Symbol],(EtaExpansion.this.global.ValDef, Boolean),List[(EtaExpansion.this.global.ValDef, Boolean)]]</text>
<text text-anchor="middle" x="18766.614" y="-181243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- qual.type =&gt; ?{def +: ?} -->
<g id="node2506" class="node">
<title>qual.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-181326.8701" rx="108.375" ry="26.7407"/>
<text text-anchor="start" x="18698.114" y="-181330.6701" font-family="Times,serif" font-size="14.00" fill="#000000">qual.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-181315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; (AnyRef =&gt; Int) -->
<g id="node2507" class="node">
<title>(=&gt; Unit) =&gt; (AnyRef =&gt; Int)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-181398.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-181402.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; (AnyRef =&gt; Int)</text>
<text text-anchor="middle" x="18766.614" y="-181387.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x.type =&gt; ?{def dropLocal: ?} -->
<g id="node2508" class="node">
<title>x.type =&gt; ?{def dropLocal: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-181470.8701" rx="130.2154" ry="26.7407"/>
<text text-anchor="start" x="18682.614" y="-181474.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x.type =&gt; ?{def dropLocal: ?}</text>
<text text-anchor="middle" x="18766.614" y="-181459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def ::=: ?} -->
<g id="node2509" class="node">
<title>List[scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-181542.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="18599.614" y="-181546.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[scala.tools.asm.tree.AbstractInsnNode] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-181531.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeInfo.this.global.Tree],TreeInfo.this.global.Type,List[TreeInfo.this.global.Type]] -->
<g id="node2510" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeInfo.this.global.Tree],TreeInfo.this.global.Type,List[TreeInfo.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-181614.8701" rx="510.5622" ry="26.7407"/>
<text text-anchor="start" x="18413.614" y="-181618.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeInfo.this.global.Tree],TreeInfo.this.global.Type,List[TreeInfo.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-181603.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- getter.type =&gt; ?{def +: ?} -->
<g id="node2511" class="node">
<title>getter.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-181686.8701" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="18694.114" y="-181690.6701" font-family="Times,serif" font-size="14.00" fill="#000000">getter.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-181675.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[ScannersCommon.this.Token] -->
<g id="node2512" class="node">
<title>scala.reflect.ClassTag[ScannersCommon.this.Token]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-181758.8701" rx="217.1636" ry="26.7407"/>
<text text-anchor="start" x="18621.114" y="-181762.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[ScannersCommon.this.Token]</text>
<text text-anchor="middle" x="18766.614" y="-181747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Float =&gt; Parsers.this.Offset -->
<g id="node2513" class="node">
<title>Float =&gt; Parsers.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-181830.8701" rx="118.5882" ry="26.7407"/>
<text text-anchor="start" x="18690.614" y="-181834.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Float =&gt; Parsers.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-181819.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Namers.this.global.FlagSet -->
<g id="node2514" class="node">
<title>((Nothing, Nothing)) =&gt; Namers.this.global.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-181902.8701" rx="214.007" ry="26.7407"/>
<text text-anchor="start" x="18623.114" y="-181906.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Namers.this.global.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-181891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; UnCurry.this.global.Symbol -->
<g id="node2515" class="node">
<title>((Nothing, Nothing)) =&gt; UnCurry.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-181974.8701" rx="219.4064" ry="26.7407"/>
<text text-anchor="start" x="18619.614" y="-181978.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; UnCurry.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-181963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.ListBuffer[List[Parsers.this.global.ValDef]],String,That] -->
<g id="node2516" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.ListBuffer[List[Parsers.this.global.ValDef]],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-182046.8701" rx="479.3368" ry="26.7407"/>
<text text-anchor="start" x="18435.614" y="-182050.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.ListBuffer[List[Parsers.this.global.ValDef]],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-182035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Array[String] =&gt; ?{def toArray: ?} -->
<g id="node2517" class="node">
<title>Array[String] =&gt; ?{def toArray: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-182118.8701" rx="148.4848" ry="26.7407"/>
<text text-anchor="start" x="18669.614" y="-182122.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def toArray: ?}</text>
<text text-anchor="middle" x="18766.614" y="-182107.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- List[Interface.this.global.Tree] =&gt; scala.collection.IterableLike[El2,Repr2] -->
<g id="node2518" class="node">
<title>List[Interface.this.global.Tree] =&gt; scala.collection.IterableLike[El2,Repr2]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-182190.8701" rx="301.4551" ry="26.7407"/>
<text text-anchor="start" x="18561.614" y="-182194.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Interface.this.global.Tree] =&gt; scala.collection.IterableLike[El2,Repr2]</text>
<text text-anchor="middle" x="18766.614" y="-182179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; StringBuilder -->
<g id="node2519" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; StringBuilder</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-182262.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="18650.614" y="-182266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; StringBuilder</text>
<text text-anchor="middle" x="18766.614" y="-182251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- m.type =&gt; ?{def attrs: ?} -->
<g id="node2520" class="node">
<title>m.type =&gt; ?{def attrs: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-182334.8701" rx="110.1176" ry="26.7407"/>
<text text-anchor="start" x="18696.614" y="-182338.6701" font-family="Times,serif" font-size="14.00" fill="#000000">m.type =&gt; ?{def attrs: ?}</text>
<text text-anchor="middle" x="18766.614" y="-182323.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.util.Set[String] =&gt; ?{def asScala: ?} -->
<g id="node2521" class="node">
<title>java.util.Set[String] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-182406.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="18653.614" y="-182410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.Set[String] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-182395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- calleeParamTypes.type =&gt; ?{def foreach: ?} -->
<g id="node2522" class="node">
<title>calleeParamTypes.type =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-182478.8701" rx="185.0243" ry="26.7407"/>
<text text-anchor="start" x="18643.614" y="-182482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">calleeParamTypes.type =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-182467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.OptManifest[List[String]] -->
<g id="node2523" class="node">
<title>scala.reflect.OptManifest[List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-182550.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="18661.114" y="-182554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.OptManifest[List[String]]</text>
<text text-anchor="middle" x="18766.614" y="-182539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- List[RefChecks.this.global.TypeBounds] =&gt; scala.collection.IterableLike[El2,Repr2] -->
<g id="node2524" class="node">
<title>List[RefChecks.this.global.TypeBounds] =&gt; scala.collection.IterableLike[El2,Repr2]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-182622.8701" rx="340.651" ry="26.7407"/>
<text text-anchor="start" x="18533.614" y="-182626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[RefChecks.this.global.TypeBounds] =&gt; scala.collection.IterableLike[El2,Repr2]</text>
<text text-anchor="middle" x="18766.614" y="-182611.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- pat.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2525" class="node">
<title>pat.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-182694.8701" rx="106.5467" ry="26.7407"/>
<text text-anchor="start" x="18699.114" y="-182698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">pat.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-182683.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;_[12]\\$mc[IJDCZ]\\$sp&#39;) =&gt; ?{def r: ?} -->
<g id="node2526" class="node">
<title>String(&#39;_[12]\\$mc[IJDCZ]\\$sp&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-182766.8701" rx="191.752" ry="26.7407"/>
<text text-anchor="start" x="18639.114" y="-182770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;_[12]\$mc[IJDCZ]\$sp&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-182755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Boolean] =&gt; Array[AnyRef] -->
<g id="node2527" class="node">
<title>Array[Boolean] =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-182838.8701" rx="147.5709" ry="26.7407"/>
<text text-anchor="start" x="18670.114" y="-182842.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Boolean] =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-182827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Scanners.this.global.CompilationUnit -->
<g id="node2528" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Scanners.this.global.CompilationUnit</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-182910.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="18584.614" y="-182914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Scanners.this.global.CompilationUnit</text>
<text text-anchor="middle" x="18766.614" y="-182899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; packageDirName.type) =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): Seq[String]} -->
<g id="node2529" class="node">
<title>(=&gt; packageDirName.type) =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): Seq[String]}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-182982.8701" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="18559.114" y="-182986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; packageDirName.type) =&gt; ?{def split(x$1: ? &gt;: Char(&#39;/&#39;)): Seq[String]}</text>
<text text-anchor="middle" x="18766.614" y="-182971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[JavaParsers.this.global.Tree],JavaParsers.this.global.Tree,List[JavaParsers.this.global.Tree]] -->
<g id="node2530" class="node">
<title>scala.collection.generic.CanBuildFrom[List[JavaParsers.this.global.Tree],JavaParsers.this.global.Tree,List[JavaParsers.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-183054.8701" rx="539.5449" ry="26.7407"/>
<text text-anchor="start" x="18393.114" y="-183058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[JavaParsers.this.global.Tree],JavaParsers.this.global.Tree,List[JavaParsers.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-183043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; TypeAdaptingTransformer.this.global.Tree -->
<g id="node2531" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; TypeAdaptingTransformer.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-183126.8701" rx="289.8276" ry="26.7407"/>
<text text-anchor="start" x="18569.614" y="-183130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; TypeAdaptingTransformer.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-183115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;MAINCLASS&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2532" class="node">
<title>String(&#39;MAINCLASS&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-183198.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="18658.114" y="-183202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;MAINCLASS&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-183187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;ErrorType()&#39;) =&gt; scala.text.Document -->
<g id="node2533" class="node">
<title>String(&#39;ErrorType()&#39;) =&gt; scala.text.Document</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-183270.8701" rx="186.8525" ry="26.7407"/>
<text text-anchor="start" x="18642.614" y="-183274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;ErrorType()&#39;) =&gt; scala.text.Document</text>
<text text-anchor="middle" x="18766.614" y="-183259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;globalPhase=%s, enteringPhase=%s&#39;) =&gt; ?{def format: ?} -->
<g id="node2534" class="node">
<title>String(&#39;globalPhase=%s, enteringPhase=%s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-183342.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="18586.114" y="-183346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;globalPhase=%s, enteringPhase=%s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-183331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TailCalls.this.global.ValDef],TailCalls.this.global.Symbol,That] -->
<g id="node2535" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TailCalls.this.global.ValDef],TailCalls.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-183414.8701" rx="432.0845" ry="26.7407"/>
<text text-anchor="start" x="18469.114" y="-183418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TailCalls.this.global.ValDef],TailCalls.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-183403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BTypes.this.ClassInfo] =&gt; ?{def get: ?} -->
<g id="node2536" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BTypes.this.ClassInfo] =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-183486.8701" rx="434.3272" ry="26.7407"/>
<text text-anchor="start" x="18467.614" y="-183490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,BTypes.this.ClassInfo] =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-183475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 5ms</text>
</g>
<!-- scala.tools.nsc.Settings#BooleanSetting =&gt; NodePrinters.this.global.BooleanFlag -->
<g id="node2538" class="node">
<title>scala.tools.nsc.Settings#BooleanSetting =&gt; NodePrinters.this.global.BooleanFlag</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-183558.8701" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="18544.114" y="-183562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.Settings#BooleanSetting =&gt; NodePrinters.this.global.BooleanFlag</text>
<text text-anchor="middle" x="18766.614" y="-183547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; PatternTypers.this.global.Tree -->
<g id="node2539" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; PatternTypers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-183630.8701" rx="240.3326" ry="26.7407"/>
<text text-anchor="start" x="18604.614" y="-183634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; PatternTypers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-183619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[java.io.File],String,That] -->
<g id="node2540" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[java.io.File],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-34898.8701" rx="287.1707" ry="26.7407"/>
<text text-anchor="start" x="18571.614" y="-34902.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[java.io.File],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-34887.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[java.io.File],String,That]&#45;&gt;scala.reflect.ClassTag[String] -->
<g id="edge18" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[java.io.File],String,That]&#45;&gt;scala.reflect.ClassTag[String]</title>
<path fill="none" stroke="#000000" d="M19053.2308,-34897.2393C21114.9068,-34885.8361 33710.1991,-34821.7358 37533.2279,-34934.8701 37705.9706,-34939.982 37905.1146,-34952.5258 38032.0457,-34961.3628"/>
<polygon fill="#000000" stroke="#000000" points="38031.9775,-34964.8664 38042.1972,-34962.0723 38032.4656,-34957.8835 38031.9775,-34964.8664"/>
</g>
<!-- Unit =&gt; Implicits.this.global.TypeBounds -->
<g id="node2541" class="node">
<title>Unit =&gt; Implicits.this.global.TypeBounds</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-183702.8701" rx="174.8109" ry="26.7407"/>
<text text-anchor="start" x="18651.114" y="-183706.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Implicits.this.global.TypeBounds</text>
<text text-anchor="middle" x="18766.614" y="-183691.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[JavaParsers.this.global.Tree] =&gt; ?{def :+=: ?} -->
<g id="node2542" class="node">
<title>List[JavaParsers.this.global.Tree] =&gt; ?{def :+=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-183774.8701" rx="210.0214" ry="26.7407"/>
<text text-anchor="start" x="18626.114" y="-183778.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[JavaParsers.this.global.Tree] =&gt; ?{def :+=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-183763.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.math.Ordering[Long] -->
<g id="node2543" class="node">
<title>scala.math.Ordering[Long]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-183846.8701" rx="116.8455" ry="26.7407"/>
<text text-anchor="start" x="18692.114" y="-183850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.math.Ordering[Long]</text>
<text text-anchor="middle" x="18766.614" y="-183835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Mixin.this.global.Symbol],Mixin.this.global.Ident,That] -->
<g id="node2544" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Mixin.this.global.Symbol],Mixin.this.global.Ident,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-183918.8701" rx="401.7733" ry="26.7407"/>
<text text-anchor="start" x="18490.614" y="-183922.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Mixin.this.global.Symbol],Mixin.this.global.Ident,That]</text>
<text text-anchor="middle" x="18766.614" y="-183907.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Byte]) =&gt; Array[AnyRef] -->
<g id="node2545" class="node">
<title>(=&gt; Array[Byte]) =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-183990.8701" rx="154.7129" ry="26.7407"/>
<text text-anchor="start" x="18665.114" y="-183994.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Byte]) =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-183979.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Any, String)],(Any, String),That] -->
<g id="node2546" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Any, String)],(Any, String),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-184062.8701" rx="315.2393" ry="26.7407"/>
<text text-anchor="start" x="18551.614" y="-184066.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Any, String)],(Any, String),That]</text>
<text text-anchor="middle" x="18766.614" y="-184051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[String] &lt;:&lt; Option[B] -->
<g id="node2547" class="node">
<title>Option[String] &lt;:&lt; Option[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-184134.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="18685.114" y="-184138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[String] &lt;:&lt; Option[B]</text>
<text text-anchor="middle" x="18766.614" y="-184123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(String, SymbolicXMLBuilder.this.global.Tree)],SymbolicXMLBuilder.this.global.Assign,List[SymbolicXMLBuilder.this.global.Tree]] -->
<g id="node2548" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(String, SymbolicXMLBuilder.this.global.Tree)],SymbolicXMLBuilder.this.global.Assign,List[SymbolicXMLBuilder.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-184206.8701" rx="712.1131" ry="26.7407"/>
<text text-anchor="start" x="18271.114" y="-184210.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(String, SymbolicXMLBuilder.this.global.Tree)],SymbolicXMLBuilder.this.global.Assign,List[SymbolicXMLBuilder.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-184195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Unit, Any =&gt; Nothing)) =&gt; (CompilerCommand.this.Setting =&gt; Boolean) -->
<g id="node2549" class="node">
<title>(=&gt; (Nothing, Unit, Any =&gt; Nothing)) =&gt; (CompilerCommand.this.Setting =&gt; Boolean)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-184278.8701" rx="357.5922" ry="26.7407"/>
<text text-anchor="start" x="18521.614" y="-184282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit, Any =&gt; Nothing)) =&gt; (CompilerCommand.this.Setting =&gt; Boolean)</text>
<text text-anchor="middle" x="18766.614" y="-184267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- SpecializeTypes.this.global.Scope =&gt; SpecializeTypes.this.global.Type -->
<g id="node2550" class="node">
<title>SpecializeTypes.this.global.Scope =&gt; SpecializeTypes.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-184350.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="18571.114" y="-184354.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SpecializeTypes.this.global.Scope =&gt; SpecializeTypes.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-184339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; scala.tools.asm.tree.AbstractInsnNode -->
<g id="node2551" class="node">
<title>((Nothing, Nothing)) =&gt; scala.tools.asm.tree.AbstractInsnNode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-184422.8701" rx="257.2738" ry="26.7407"/>
<text text-anchor="start" x="18592.614" y="-184426.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; scala.tools.asm.tree.AbstractInsnNode</text>
<text text-anchor="middle" x="18766.614" y="-184411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Unapplies.this.global.ValDef],Unapplies.this.global.ValDef,That] -->
<g id="node2552" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Unapplies.this.global.ValDef],Unapplies.this.global.ValDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-184494.8701" rx="437.8983" ry="26.7407"/>
<text text-anchor="start" x="18465.114" y="-184498.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Unapplies.this.global.ValDef],Unapplies.this.global.ValDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-184483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.math.Ordering[SpecializeTypes.this.global.Type] -->
<g id="node2553" class="node">
<title>scala.math.Ordering[SpecializeTypes.this.global.Type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-184566.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="18616.114" y="-184570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.math.Ordering[SpecializeTypes.this.global.Type]</text>
<text text-anchor="middle" x="18766.614" y="-184555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; CharSequence -->
<g id="node2554" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; CharSequence</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-184638.8701" rx="200.6368" ry="26.7407"/>
<text text-anchor="start" x="18632.614" y="-184642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; CharSequence</text>
<text text-anchor="middle" x="18766.614" y="-184627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Reshape.this.global.ValOrDefDef],(Reshape.this.global.Symbol, Reshape.this.global.ValOrDefDef),That] -->
<g id="node2555" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Reshape.this.global.ValOrDefDef],(Reshape.this.global.Symbol, Reshape.this.global.ValOrDefDef),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-184710.8701" rx="593.0253" ry="26.7407"/>
<text text-anchor="start" x="18355.114" y="-184714.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Reshape.this.global.ValOrDefDef],(Reshape.this.global.Symbol, Reshape.this.global.ValOrDefDef),That]</text>
<text text-anchor="middle" x="18766.614" y="-184699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Int(1) =&gt; ?{def to: ?} -->
<g id="node2556" class="node">
<title>Int(1) =&gt; ?{def to: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-184782.8701" rx="96.3333" ry="26.7407"/>
<text text-anchor="start" x="18706.614" y="-184786.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(1) =&gt; ?{def to: ?}</text>
<text text-anchor="middle" x="18766.614" y="-184771.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 4ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Iterable[BoxUnbox.this.postProcessor.bTypes.ClassBType],BoxUnbox.this.postProcessor.bTypes.ClassBType,That] -->
<g id="node2557" class="node">
<title>scala.collection.generic.CanBuildFrom[Iterable[BoxUnbox.this.postProcessor.bTypes.ClassBType],BoxUnbox.this.postProcessor.bTypes.ClassBType,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-184854.8701" rx="615.3659" ry="26.7407"/>
<text text-anchor="start" x="18339.614" y="-184858.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Iterable[BoxUnbox.this.postProcessor.bTypes.ClassBType],BoxUnbox.this.postProcessor.bTypes.ClassBType,That]</text>
<text text-anchor="middle" x="18766.614" y="-184843.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.CaseDef],(MatchTranslation.this.global.TermSymbol, List[MatchTranslator.this.TreeMaker]),That] -->
<g id="node2558" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.CaseDef],(MatchTranslation.this.global.TermSymbol, List[MatchTranslator.this.TreeMaker]),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-184926.8701" rx="684.4587" ry="26.7407"/>
<text text-anchor="start" x="18290.614" y="-184930.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.CaseDef],(MatchTranslation.this.global.TermSymbol, List[MatchTranslator.this.TreeMaker]),That]</text>
<text text-anchor="middle" x="18766.614" y="-184915.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((List[Infer.this.global.Symbol], List[Infer.this.global.TypeVar])) =&gt; ?{def zipped: ?} -->
<g id="node2559" class="node">
<title>((List[Infer.this.global.Symbol], List[Infer.this.global.TypeVar])) =&gt; ?{def zipped: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-184998.8701" rx="345.1362" ry="26.7407"/>
<text text-anchor="start" x="18530.614" y="-185002.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((List[Infer.this.global.Symbol], List[Infer.this.global.TypeVar])) =&gt; ?{def zipped: ?}</text>
<text text-anchor="middle" x="18766.614" y="-184987.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Char -->
<g id="node2560" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Char</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-185070.8701" rx="178.7961" ry="26.7407"/>
<text text-anchor="start" x="18648.114" y="-185074.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Char</text>
<text text-anchor="middle" x="18766.614" y="-185059.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.backend.jvm.analysis.AliasSet],String,That] -->
<g id="node2561" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.backend.jvm.analysis.AliasSet],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-185142.8701" rx="412.9007" ry="26.7407"/>
<text text-anchor="start" x="18482.614" y="-185146.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.backend.jvm.analysis.AliasSet],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-185131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ClassfileParser.this.symbolTable.Symbol =&gt; ?{def +: ?} -->
<g id="node2562" class="node">
<title>ClassfileParser.this.symbolTable.Symbol =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-185214.8701" rx="232.7763" ry="26.7407"/>
<text text-anchor="start" x="18610.114" y="-185218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ClassfileParser.this.symbolTable.Symbol =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-185203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Any, String)],Int,That] -->
<g id="node2563" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Any, String)],Int,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-185286.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-185290.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Any, String)],Int,That]</text>
<text text-anchor="middle" x="18766.614" y="-185275.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchTranslator.this.BoundTree],MatchTranslation.this.global.Symbol,That] -->
<g id="node2564" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchTranslator.this.BoundTree],MatchTranslation.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-185358.8701" rx="482.9079" ry="26.7407"/>
<text text-anchor="start" x="18433.114" y="-185362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchTranslator.this.BoundTree],MatchTranslation.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-185347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def contains(x$1: ? &gt;: Char(&#39;$&#39;)): ?} -->
<g id="node2565" class="node">
<title>String =&gt; ?{def contains(x$1: ? &gt;: Char(&#39;$&#39;)): ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-185430.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="18634.114" y="-185434.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def contains(x$1: ? &gt;: Char(&#39;$&#39;)): ?}</text>
<text text-anchor="middle" x="18766.614" y="-185419.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((List[MatchApproximation.this.global.Symbol], List[MatchApproximation.this.global.Tree])) =&gt; ?{def zipped: ?} -->
<g id="node2567" class="node">
<title>((List[MatchApproximation.this.global.Symbol], List[MatchApproximation.this.global.Tree])) =&gt; ?{def zipped: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-185502.8701" rx="459.7388" ry="26.7407"/>
<text text-anchor="start" x="18449.614" y="-185506.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((List[MatchApproximation.this.global.Symbol], List[MatchApproximation.this.global.Tree])) =&gt; ?{def zipped: ?}</text>
<text text-anchor="middle" x="18766.614" y="-185491.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Namers.this.global.Scope =&gt; Namers.this.global.Type -->
<g id="node2568" class="node">
<title>Namers.this.global.Scope =&gt; Namers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-185574.8701" rx="223.3915" ry="26.7407"/>
<text text-anchor="start" x="18616.614" y="-185578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Namers.this.global.Scope =&gt; Namers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-185563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Unit =&gt; java.io.PrintWriter -->
<g id="node2569" class="node">
<title>Unit =&gt; java.io.PrintWriter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-185646.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="18691.114" y="-185650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; java.io.PrintWriter</text>
<text text-anchor="middle" x="18766.614" y="-185635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">13 times = 4ms</text>
</g>
<!-- SyntheticMethods.this.global.TermSymbol =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2570" class="node">
<title>SyntheticMethods.this.global.TermSymbol =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-185718.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="18602.614" y="-185722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SyntheticMethods.this.global.TermSymbol =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-185707.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 2ms</text>
</g>
<!-- prefixParts.type =&gt; ?{def tail: ?} -->
<g id="node2571" class="node">
<title>prefixParts.type =&gt; ?{def tail: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-185790.8701" rx="140.0143" ry="26.7407"/>
<text text-anchor="start" x="18675.614" y="-185794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">prefixParts.type =&gt; ?{def tail: ?}</text>
<text text-anchor="middle" x="18766.614" y="-185779.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- tpe.type =&gt; ?{def isLocalToReifee: ?} -->
<g id="node2572" class="node">
<title>tpe.type =&gt; ?{def isLocalToReifee: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-185862.8701" rx="161.441" ry="26.7407"/>
<text text-anchor="start" x="18660.614" y="-185866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">tpe.type =&gt; ?{def isLocalToReifee: ?}</text>
<text text-anchor="middle" x="18766.614" y="-185851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[s.StringSetting],String,That] -->
<g id="node2573" class="node">
<title>scala.collection.generic.CanBuildFrom[List[s.StringSetting],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-185934.8701" rx="292.9846" ry="26.7407"/>
<text text-anchor="start" x="18567.614" y="-185938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[s.StringSetting],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-185923.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,scala.tools.asm.tree.VarInsnNode,List[scala.tools.asm.tree.VarInsnNode]] -->
<g id="node2574" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,scala.tools.asm.tree.VarInsnNode,List[scala.tools.asm.tree.VarInsnNode]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-186006.8701" rx="486.4789" ry="26.7407"/>
<text text-anchor="start" x="18430.614" y="-186010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,scala.tools.asm.tree.VarInsnNode,List[scala.tools.asm.tree.VarInsnNode]]</text>
<text text-anchor="middle" x="18766.614" y="-185995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Numeric[Int] -->
<g id="node2575" class="node">
<title>Numeric[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-186078.8701" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="18726.614" y="-186082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Numeric[Int]</text>
<text text-anchor="middle" x="18766.614" y="-186067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 3ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; BCodeSyncAndTry.this.global.Tree -->
<g id="node2576" class="node">
<title>((Nothing, Nothing)) =&gt; BCodeSyncAndTry.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-186150.8701" rx="248.3891" ry="26.7407"/>
<text text-anchor="start" x="18599.114" y="-186154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; BCodeSyncAndTry.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-186139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 0ms</text>
</g>
<!-- String(&#39;inlineable free ref: %s in %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2577" class="node">
<title>String(&#39;inlineable free ref: %s in %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-186222.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="18607.114" y="-186226.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;inlineable free ref: %s in %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-186211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[InlineSourceMatcher.this.Entry]) =&gt; ?{def ::=: ?} -->
<g id="node2578" class="node">
<title>(=&gt; List[InlineSourceMatcher.this.Entry]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-186294.8701" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="18604.114" y="-186298.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[InlineSourceMatcher.this.Entry]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-186283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$2.type =&gt; ?{def toImplicitCandidate: ?} -->
<g id="node2579" class="node">
<title>x$2.type =&gt; ?{def toImplicitCandidate: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-186366.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="18649.114" y="-186370.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$2.type =&gt; ?{def toImplicitCandidate: ?}</text>
<text text-anchor="middle" x="18766.614" y="-186355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Array[Char] =&gt; Array[CNF.this.Clause] -->
<g id="node2580" class="node">
<title>Array[Char] =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-186438.8701" rx="168.0831" ry="26.7407"/>
<text text-anchor="start" x="18655.614" y="-186442.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Char] =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-186427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- List[Infer.this.global.TypeVar] =&gt; scala.collection.IterableLike[El2,Repr2] -->
<g id="node2581" class="node">
<title>List[Infer.this.global.TypeVar] =&gt; scala.collection.IterableLike[El2,Repr2]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-186510.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="18560.614" y="-186514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Infer.this.global.TypeVar] =&gt; scala.collection.IterableLike[El2,Repr2]</text>
<text text-anchor="middle" x="18766.614" y="-186499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- key.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;.&#39;)): ?} -->
<g id="node2582" class="node">
<title>key.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;.&#39;)): ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-186582.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="18639.614" y="-186586.6701" font-family="Times,serif" font-size="14.00" fill="#000000">key.type =&gt; ?{def split(x$1: ? &gt;: Char(&#39;.&#39;)): ?}</text>
<text text-anchor="middle" x="18766.614" y="-186571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Infer.this.global.AnnotationInfo) =&gt; Infer.this.global.Type -->
<g id="node2583" class="node">
<title>(=&gt; Infer.this.global.AnnotationInfo) =&gt; Infer.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-186654.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="18593.614" y="-186658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Infer.this.global.AnnotationInfo) =&gt; Infer.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-186643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.ValDef],TypeDiagnostics.this.global.Symbol,scala.collection.TraversableOnce[TypeDiagnostics.this.global.Symbol]] -->
<g id="node2584" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.ValDef],TypeDiagnostics.this.global.Symbol,scala.collection.TraversableOnce[TypeDiagnostics.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-186726.8701" rx="748.238" ry="26.7407"/>
<text text-anchor="start" x="18245.614" y="-186730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TypeDiagnostics.this.global.ValDef],TypeDiagnostics.this.global.Symbol,scala.collection.TraversableOnce[TypeDiagnostics.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-186715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Float) =&gt; Int -->
<g id="node2585" class="node">
<title>(=&gt; Float) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-186798.8701" rx="82.0488" ry="26.7407"/>
<text text-anchor="start" x="18716.614" y="-186802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Float) =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-186787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">478 times = 21ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Int,That] -->
<g id="node2586" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Int,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-186870.8701" rx="313.9108" ry="26.7407"/>
<text text-anchor="start" x="18552.614" y="-186874.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Parsers.this.global.Tree],Int,That]</text>
<text text-anchor="middle" x="18766.614" y="-186859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- PureMatchMonadInterface.this.matchStrategy.type =&gt; ?{def DOT: ?} -->
<g id="node2587" class="node">
<title>PureMatchMonadInterface.this.matchStrategy.type =&gt; ?{def DOT: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-186942.8701" rx="284.0141" ry="26.7407"/>
<text text-anchor="start" x="18573.614" y="-186946.6701" font-family="Times,serif" font-size="14.00" fill="#000000">PureMatchMonadInterface.this.matchStrategy.type =&gt; ?{def DOT: ?}</text>
<text text-anchor="middle" x="18766.614" y="-186931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Macros.this.global.Tree],(Any, Any),That] -->
<g id="node2588" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Macros.this.global.Tree],(Any, Any),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-187014.8701" rx="349.1216" ry="26.7407"/>
<text text-anchor="start" x="18527.614" y="-187018.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Macros.this.global.Tree],(Any, Any),That]</text>
<text text-anchor="middle" x="18766.614" y="-187003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Long) =&gt; ?{def +=: ?} -->
<g id="node2589" class="node">
<title>(=&gt; Long) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-187086.8701" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="18690.114" y="-187090.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Long) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-187075.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Some[NamesDefaults.this.global.Tree] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node2590" class="node">
<title>Some[NamesDefaults.this.global.Tree] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-187158.8701" rx="333.509" ry="26.7407"/>
<text text-anchor="start" x="18538.614" y="-187162.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Some[NamesDefaults.this.global.Tree] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-187147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- lits.type =&gt; ?{def toList: ?} -->
<g id="node2591" class="node">
<title>lits.type =&gt; ?{def toList: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-187230.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="18689.614" y="-187234.6701" font-family="Times,serif" font-size="14.00" fill="#000000">lits.type =&gt; ?{def toList: ?}</text>
<text text-anchor="middle" x="18766.614" y="-187219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.plugins.PluginComponent],String,That] -->
<g id="node2592" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.plugins.PluginComponent],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-187302.8701" rx="395.0455" ry="26.7407"/>
<text text-anchor="start" x="18495.114" y="-187306.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.plugins.PluginComponent],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-187291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%&#45;20s&#39;) =&gt; ?{def format: ?} -->
<g id="node2593" class="node">
<title>String(&#39;%&#45;20s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-187374.8701" rx="150.7276" ry="26.7407"/>
<text text-anchor="start" x="18668.114" y="-187378.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%&#45;20s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-187363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.runtime.SymbolLiteral] -->
<g id="node2594" class="node">
<title>scala.reflect.ClassTag[scala.runtime.SymbolLiteral]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-187446.8701" rx="212.6784" ry="26.7407"/>
<text text-anchor="start" x="18624.114" y="-187450.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.runtime.SymbolLiteral]</text>
<text text-anchor="middle" x="18766.614" y="-187435.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- JavaScanners.this.global.javanme.THROWSkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2595" class="node">
<title>JavaScanners.this.global.javanme.THROWSkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-187518.8701" rx="280.0286" ry="26.7407"/>
<text text-anchor="start" x="18576.614" y="-187522.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.THROWSkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-187507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SuperAccessors.this.global.Symbol],SuperAccessors.this.global.Symbol,That] -->
<g id="node2596" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SuperAccessors.this.global.Symbol],SuperAccessors.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-187590.8701" rx="486.4789" ry="26.7407"/>
<text text-anchor="start" x="18430.614" y="-187594.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SuperAccessors.this.global.Symbol],SuperAccessors.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-187579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- String(&#39;(default: %s)&#39;) =&gt; ?{def format: ?} -->
<g id="node2597" class="node">
<title>String(&#39;(default: %s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-187662.8701" rx="176.1392" ry="26.7407"/>
<text text-anchor="start" x="18650.114" y="-187666.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;(default: %s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-187651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- str.type =&gt; ?{def take: ?} -->
<g id="node2598" class="node">
<title>str.type =&gt; ?{def take: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-187734.8701" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="18695.614" y="-187738.6701" font-family="Times,serif" font-size="14.00" fill="#000000">str.type =&gt; ?{def take: ?}</text>
<text text-anchor="middle" x="18766.614" y="-187723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,(String, CoreBTypesFromSymbols.this.bTypes.MethodBType),Map[String,CoreBTypesFromSymbols.this.bTypes.MethodBType]] -->
<g id="node2599" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,(String, CoreBTypesFromSymbols.this.bTypes.MethodBType),Map[String,CoreBTypesFromSymbols.this.bTypes.MethodBType]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-187806.8701" rx="709.8704" ry="26.7407"/>
<text text-anchor="start" x="18272.614" y="-187810.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,(String, CoreBTypesFromSymbols.this.bTypes.MethodBType),Map[String,CoreBTypesFromSymbols.this.bTypes.MethodBType]]</text>
<text text-anchor="middle" x="18766.614" y="-187795.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Throwable -->
<g id="node2600" class="node">
<title>(=&gt; Unit) =&gt; Throwable</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-187878.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-187882.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Throwable</text>
<text text-anchor="middle" x="18766.614" y="-187867.6701" font-family="Times,serif" font-size="14.00" fill="#000000">18 times = 1ms</text>
</g>
<!-- String(&#39;TypeTree, essential: %s (%s)&#39;) =&gt; ?{def format: ?} -->
<g id="node2601" class="node">
<title>String(&#39;TypeTree, essential: %s (%s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-187950.8701" rx="239.9186" ry="26.7407"/>
<text text-anchor="start" x="18605.114" y="-187954.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;TypeTree, essential: %s (%s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-187939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- FastTrack.this.macros.global.Tree =&gt; FastTrack.this.macros.global.Symbol -->
<g id="node2602" class="node">
<title>FastTrack.this.macros.global.Tree =&gt; FastTrack.this.macros.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-188022.8701" rx="305.4403" ry="26.7407"/>
<text text-anchor="start" x="18558.614" y="-188026.6701" font-family="Times,serif" font-size="14.00" fill="#000000">FastTrack.this.macros.global.Tree =&gt; FastTrack.this.macros.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-188011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Fields.this.global.Tree],Fields.this.global.Tree,That] -->
<g id="node2603" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Fields.this.global.Tree],Fields.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-188094.8701" rx="385.2464" ry="26.7407"/>
<text text-anchor="start" x="18502.114" y="-188098.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Fields.this.global.Tree],Fields.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-188083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; DocComments.this.Symbol -->
<g id="node2604" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; DocComments.this.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-188166.8701" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="18585.114" y="-188170.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; DocComments.this.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-188155.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[DirectoryLookup.this.F],scala.tools.nsc.classpath.PackageEntryImpl,Seq[scala.tools.nsc.classpath.PackageEntry]] -->
<g id="node2605" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[DirectoryLookup.this.F],scala.tools.nsc.classpath.PackageEntryImpl,Seq[scala.tools.nsc.classpath.PackageEntry]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-89530.8701" rx="630.9786" ry="26.7407"/>
<text text-anchor="start" x="18328.614" y="-89534.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[DirectoryLookup.this.F],scala.tools.nsc.classpath.PackageEntryImpl,Seq[scala.tools.nsc.classpath.PackageEntry]]</text>
<text text-anchor="middle" x="18766.614" y="-89519.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[DirectoryLookup.this.F],scala.tools.nsc.classpath.PackageEntryImpl,Seq[scala.tools.nsc.classpath.PackageEntry]]&#45;&gt;DummyImplicit -->
<g id="edge10" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[DirectoryLookup.this.F],scala.tools.nsc.classpath.PackageEntryImpl,Seq[scala.tools.nsc.classpath.PackageEntry]]&#45;&gt;DummyImplicit</title>
<path fill="none" stroke="#000000" d="M19396.7727,-89532.0397C22585.8628,-89537.9592 36842.8436,-89564.4227 38076.1677,-89566.7119"/>
<polygon fill="#000000" stroke="#000000" points="38076.2683,-89570.212 38086.2748,-89566.7307 38076.2814,-89563.212 38076.2683,-89570.212"/>
</g>
<!-- member.NameType =&gt; ?{def stripSuffix: ?} -->
<g id="node2606" class="node">
<title>member.NameType =&gt; ?{def stripSuffix: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-188238.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="18643.114" y="-188242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">member.NameType =&gt; ?{def stripSuffix: ?}</text>
<text text-anchor="middle" x="18766.614" y="-188227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],(Int, Int),List[(Int, Int)]] -->
<g id="node2607" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],(Int, Int),List[(Int, Int)]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-188310.8701" rx="292.9846" ry="26.7407"/>
<text text-anchor="start" x="18567.614" y="-188314.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],(Int, Int),List[(Int, Int)]]</text>
<text text-anchor="middle" x="18766.614" y="-188299.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Fields.this.global.Symbol =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2608" class="node">
<title>Fields.this.global.Symbol =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-188382.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="18650.614" y="-188386.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Fields.this.global.Symbol =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-188371.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; MatchApproximator.this.Substitution) =&gt; ?{def &gt;&gt;=: ?} -->
<g id="node2609" class="node">
<title>(=&gt; MatchApproximator.this.Substitution) =&gt; ?{def &gt;&gt;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-188454.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="18598.114" y="-188458.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; MatchApproximator.this.Substitution) =&gt; ?{def &gt;&gt;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-188443.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; AccessorSynthesis.this.global.Symbol -->
<g id="node2610" class="node">
<title>((Nothing, Nothing)) =&gt; AccessorSynthesis.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-188526.8701" rx="256.8596" ry="26.7407"/>
<text text-anchor="start" x="18593.114" y="-188530.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; AccessorSynthesis.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-188515.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- JavaScanners.this.global.javanme.RETURNkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2611" class="node">
<title>JavaScanners.this.global.javanme.RETURNkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-188598.8701" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="18578.614" y="-188602.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.RETURNkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-188587.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Sym def: %s (%s)&#39;) =&gt; ?{def format: ?} -->
<g id="node2612" class="node">
<title>String(&#39;Sym def: %s (%s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-188670.8701" rx="197.0658" ry="26.7407"/>
<text text-anchor="start" x="18635.114" y="-188674.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Sym def: %s (%s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-188659.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;metalevel mismatch: expected %s, actual %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2613" class="node">
<title>String(&#39;metalevel mismatch: expected %s, actual %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-188742.8701" rx="301.4551" ry="26.7407"/>
<text text-anchor="start" x="18561.614" y="-188746.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;metalevel mismatch: expected %s, actual %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-188731.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; NamesDefaults.this.global.gen.global.Symbol -->
<g id="node2614" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; NamesDefaults.this.global.gen.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-188814.8701" rx="301.8692" ry="26.7407"/>
<text text-anchor="start" x="18561.114" y="-188818.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; NamesDefaults.this.global.gen.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-188803.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- value.type =&gt; ?{def iterator: ?} -->
<g id="node2615" class="node">
<title>value.type =&gt; ?{def iterator: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-188886.8701" rx="134.2007" ry="26.7407"/>
<text text-anchor="start" x="18679.614" y="-188890.6701" font-family="Times,serif" font-size="14.00" fill="#000000">value.type =&gt; ?{def iterator: ?}</text>
<text text-anchor="middle" x="18766.614" y="-188875.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[GenTypes.this.global.Symbol],GenTypes.this.global.Tree,That] -->
<g id="node2616" class="node">
<title>scala.collection.generic.CanBuildFrom[List[GenTypes.this.global.Symbol],GenTypes.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-188958.8701" rx="429.8419" ry="26.7407"/>
<text text-anchor="start" x="18470.614" y="-188962.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[GenTypes.this.global.Symbol],GenTypes.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-188947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Fields.this.global.Symbol],Fields.this.global.Tree,That] -->
<g id="node2617" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Fields.this.global.Symbol],Fields.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-189030.8701" rx="398.2023" ry="26.7407"/>
<text text-anchor="start" x="18493.114" y="-189034.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Fields.this.global.Symbol],Fields.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-189019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.DOUBLE.type),That] -->
<g id="node2618" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.DOUBLE.type),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-189102.8701" rx="456.5821" ry="26.7407"/>
<text text-anchor="start" x="18451.614" y="-189106.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.DOUBLE.type),That]</text>
<text text-anchor="middle" x="18766.614" y="-189091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.CASEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2619" class="node">
<title>JavaScanners.this.global.javanme.CASEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-189174.8701" rx="263.5019" ry="26.7407"/>
<text text-anchor="start" x="18588.114" y="-189178.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.CASEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-189163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- xs.type =&gt; ?{def nonEmpty: ?} -->
<g id="node2620" class="node">
<title>xs.type =&gt; ?{def nonEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-189246.8701" rx="135.1148" ry="26.7407"/>
<text text-anchor="start" x="18679.114" y="-189250.6701" font-family="Times,serif" font-size="14.00" fill="#000000">xs.type =&gt; ?{def nonEmpty: ?}</text>
<text text-anchor="middle" x="18766.614" y="-189235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[scala.tools.asm.Handle] =&gt; ?{def ::=: ?} -->
<g id="node2621" class="node">
<title>List[scala.tools.asm.Handle] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-189318.8701" rx="188.1809" ry="26.7407"/>
<text text-anchor="start" x="18641.614" y="-189322.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[scala.tools.asm.Handle] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-189307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Constructors.this.global.Tree],Constructors.this.global.Symbol,That] -->
<g id="node2622" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Constructors.this.global.Tree],Constructors.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-189390.8701" rx="449.0256" ry="26.7407"/>
<text text-anchor="start" x="18457.114" y="-189394.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Constructors.this.global.Tree],Constructors.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-189379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Namers.this.global.Type -->
<g id="node2623" class="node">
<title>(=&gt; Unit) =&gt; Namers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-189462.8701" rx="161.8549" ry="26.7407"/>
<text text-anchor="start" x="18660.114" y="-189466.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Namers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-189451.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; Long) =&gt; Int -->
<g id="node2624" class="node">
<title>(=&gt; Long) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-189534.8701" rx="82.0488" ry="26.7407"/>
<text text-anchor="start" x="18716.614" y="-189538.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Long) =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-189523.6701" font-family="Times,serif" font-size="14.00" fill="#000000">505 times = 22ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Contexts.this.global.Name -->
<g id="node2625" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Contexts.this.global.Name</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-189606.8701" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="18588.614" y="-189610.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Contexts.this.global.Name</text>
<text text-anchor="middle" x="18766.614" y="-189595.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Extractors.this.global.Symbol],Extractors.this.global.Name,That] -->
<g id="node2626" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Extractors.this.global.Symbol],Extractors.this.global.Name,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-189678.8701" rx="436.0699" ry="26.7407"/>
<text text-anchor="start" x="18466.114" y="-189682.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Extractors.this.global.Symbol],Extractors.this.global.Name,That]</text>
<text text-anchor="middle" x="18766.614" y="-189667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- String(&#39;[CDATA[&#39;) =&gt; Seq[Char] -->
<g id="node2627" class="node">
<title>String(&#39;[CDATA[&#39;) =&gt; Seq[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-189750.8701" rx="140.0143" ry="26.7407"/>
<text text-anchor="start" x="18675.614" y="-189754.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;[CDATA[&#39;) =&gt; Seq[Char]</text>
<text text-anchor="middle" x="18766.614" y="-189739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Map[String,List[String]] =&gt; ?{def +=: ?} -->
<g id="node2628" class="node">
<title>scala.collection.immutable.Map[String,List[String]] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-189822.8701" rx="280.0286" ry="26.7407"/>
<text text-anchor="start" x="18576.614" y="-189826.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[String,List[String]] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-189811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Byte] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node2629" class="node">
<title>Array[Byte] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-189894.8701" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="18612.614" y="-189898.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Byte] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-189883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;/&gt;&#39;) =&gt; Seq[Char] -->
<g id="node2630" class="node">
<title>String(&#39;/&gt;&#39;) =&gt; Seq[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-189966.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="18697.114" y="-189970.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;/&gt;&#39;) =&gt; Seq[Char]</text>
<text text-anchor="middle" x="18766.614" y="-189955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.classpath.ClassPathEntries =&gt; (A1, A2) -->
<g id="node2631" class="node">
<title>scala.tools.nsc.classpath.ClassPathEntries =&gt; (A1, A2)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-190038.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="18616.114" y="-190042.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.classpath.ClassPathEntries =&gt; (A1, A2)</text>
<text text-anchor="middle" x="18766.614" y="-190027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[Reifier.this.global.Symbol]) =&gt; ?{def ++=: ?} -->
<g id="node2632" class="node">
<title>(=&gt; scala.collection.immutable.Set[Reifier.this.global.Symbol]) =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-190110.8701" rx="332.1805" ry="26.7407"/>
<text text-anchor="start" x="18539.614" y="-190114.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[Reifier.this.global.Symbol]) =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-190099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; List[scala.tools.asm.Label]) =&gt; ?{def ::=: ?} -->
<g id="node2633" class="node">
<title>(=&gt; List[scala.tools.asm.Label]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-190182.8701" rx="202.8793" ry="26.7407"/>
<text text-anchor="start" x="18631.114" y="-190186.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[scala.tools.asm.Label]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-190171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Unit =&gt; EtaExpansion.this.global.Type -->
<g id="node2634" class="node">
<title>Unit =&gt; EtaExpansion.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-190254.8701" rx="164.0976" ry="26.7407"/>
<text text-anchor="start" x="18658.614" y="-190258.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; EtaExpansion.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-190243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Typers.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node2635" class="node">
<title>List[Typers.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-190326.8701" rx="308.0972" ry="26.7407"/>
<text text-anchor="start" x="18556.614" y="-190330.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Typers.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-190315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.asm.tree.InsnList =&gt; ?{def foreachInsn: ?} -->
<g id="node2636" class="node">
<title>scala.tools.asm.tree.InsnList =&gt; ?{def foreachInsn: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-190398.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="18617.614" y="-190402.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.asm.tree.InsnList =&gt; ?{def foreachInsn: ?}</text>
<text text-anchor="middle" x="18766.614" y="-190387.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- checker.type =&gt; ?{def MEMBER_==: ?} -->
<g id="node2637" class="node">
<title>checker.type =&gt; ?{def MEMBER_==: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-190470.8701" rx="174.8109" ry="26.7407"/>
<text text-anchor="start" x="18651.114" y="-190474.6701" font-family="Times,serif" font-size="14.00" fill="#000000">checker.type =&gt; ?{def MEMBER_==: ?}</text>
<text text-anchor="middle" x="18766.614" y="-190459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ToolBoxGlobal.this.Tree],ToolBoxGlobal.this.Type,List[ToolBoxGlobal.this.Type]] -->
<g id="node2638" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ToolBoxGlobal.this.Tree],ToolBoxGlobal.this.Type,List[ToolBoxGlobal.this.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-190542.8701" rx="510.5622" ry="26.7407"/>
<text text-anchor="start" x="18413.614" y="-190546.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ToolBoxGlobal.this.Tree],ToolBoxGlobal.this.Type,List[ToolBoxGlobal.this.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-190531.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- key.type =&gt; ?{def drop: ?} -->
<g id="node2639" class="node">
<title>key.type =&gt; ?{def drop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-190614.8701" rx="117.2596" ry="26.7407"/>
<text text-anchor="start" x="18691.614" y="-190618.6701" font-family="Times,serif" font-size="14.00" fill="#000000">key.type =&gt; ?{def drop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-190603.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; java.util.Properties -->
<g id="node2640" class="node">
<title>(=&gt; Unit) =&gt; java.util.Properties</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-190686.8701" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="18676.114" y="-190690.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; java.util.Properties</text>
<text text-anchor="middle" x="18766.614" y="-190675.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[BCodeSkelBuilder.this.global.UseInvokeSpecial.type] -->
<g id="node2641" class="node">
<title>scala.reflect.ClassTag[BCodeSkelBuilder.this.global.UseInvokeSpecial.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-190758.8701" rx="309.0113" ry="26.7407"/>
<text text-anchor="start" x="18556.114" y="-190762.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[BCodeSkelBuilder.this.global.UseInvokeSpecial.type]</text>
<text text-anchor="middle" x="18766.614" y="-190747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- JavaScanners.this.global.javanme.EXTENDSkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2642" class="node">
<title>JavaScanners.this.global.javanme.EXTENDSkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-190830.8701" rx="282.6855" ry="26.7407"/>
<text text-anchor="start" x="18574.614" y="-190834.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.EXTENDSkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-190819.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- pattern.type =&gt; ?{def replaceAllLiterally: ?} -->
<g id="node2643" class="node">
<title>pattern.type =&gt; ?{def replaceAllLiterally: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-190902.8701" rx="185.0243" ry="26.7407"/>
<text text-anchor="start" x="18643.614" y="-190906.6701" font-family="Times,serif" font-size="14.00" fill="#000000">pattern.type =&gt; ?{def replaceAllLiterally: ?}</text>
<text text-anchor="middle" x="18766.614" y="-190891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Float =&gt; Scanners.this.Offset -->
<g id="node2644" class="node">
<title>Float =&gt; Scanners.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-190974.8701" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="18685.614" y="-190978.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Float =&gt; Scanners.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-190963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Duplicators.this.global.Symbol],Duplicators.this.global.Type,That] -->
<g id="node2645" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Duplicators.this.global.Symbol],Duplicators.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-191046.8701" rx="442.7977" ry="26.7407"/>
<text text-anchor="start" x="18461.614" y="-191050.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Duplicators.this.global.Symbol],Duplicators.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-191035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Float] -->
<g id="node2646" class="node">
<title>(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Float]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-191118.8701" rx="233.1906" ry="26.7407"/>
<text text-anchor="start" x="18609.614" y="-191122.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Float]</text>
<text text-anchor="middle" x="18766.614" y="-191107.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.Tree],ExtensionMethods.this.global.Tree,List[ExtensionMethods.this.global.Tree]] -->
<g id="node2647" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.Tree],ExtensionMethods.this.global.Tree,List[ExtensionMethods.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-191190.8701" rx="622.008" ry="26.7407"/>
<text text-anchor="start" x="18334.614" y="-191194.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ExtensionMethods.this.global.Tree],ExtensionMethods.this.global.Tree,List[ExtensionMethods.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-191179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[scala.reflect.macros.contexts.Context{val universe: Macros.this.global.type}]) =&gt; ?{def ::=: ?} -->
<g id="node2648" class="node">
<title>(=&gt; List[scala.reflect.macros.contexts.Context{val universe: Macros.this.global.type}]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-191262.8701" rx="417.3861" ry="26.7407"/>
<text text-anchor="start" x="18479.614" y="-191266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[scala.reflect.macros.contexts.Context{val universe: Macros.this.global.type}]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-191251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- sym.type =&gt; ?{def isLocalToReifee: ?} -->
<g id="node2649" class="node">
<title>sym.type =&gt; ?{def isLocalToReifee: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-191334.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="18657.114" y="-191338.6701" font-family="Times,serif" font-size="14.00" fill="#000000">sym.type =&gt; ?{def isLocalToReifee: ?}</text>
<text text-anchor="middle" x="18766.614" y="-191323.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Holes.this.global.Type -->
<g id="node2650" class="node">
<title>(=&gt; Unit) =&gt; Holes.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-191406.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="18665.614" y="-191410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Holes.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-191395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Tree -->
<g id="node2651" class="node">
<title>((Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-191478.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="18605.614" y="-191482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-191467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchOptimization.this.global.Symbol],MatchOptimization.this.global.TermSymbol,That] -->
<g id="node2652" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchOptimization.this.global.Symbol],MatchOptimization.this.global.TermSymbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-191550.8701" rx="537.3023" ry="26.7407"/>
<text text-anchor="start" x="18394.614" y="-191554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchOptimization.this.global.Symbol],MatchOptimization.this.global.TermSymbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-191539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.DefDef,That] -->
<g id="node2653" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.DefDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-191622.8701" rx="415.1434" ry="26.7407"/>
<text text-anchor="start" x="18481.114" y="-191626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.DefDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-191611.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.tools.nsc.Settings#BooleanSetting =&gt; Printers.this.BooleanFlag -->
<g id="node2654" class="node">
<title>scala.tools.nsc.Settings#BooleanSetting =&gt; Printers.this.BooleanFlag</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-191694.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="18577.114" y="-191698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.Settings#BooleanSetting =&gt; Printers.this.BooleanFlag</text>
<text text-anchor="middle" x="18766.614" y="-191683.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Iterable[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Symbol,That] -->
<g id="node2655" class="node">
<title>scala.collection.generic.CanBuildFrom[Iterable[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-191766.8701" rx="504.3343" ry="26.7407"/>
<text text-anchor="start" x="18418.114" y="-191770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Iterable[SpecializeTypes.this.global.Symbol],SpecializeTypes.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-191755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[NodePrinters.this.global.Tree],String,That] -->
<g id="node2656" class="node">
<title>scala.collection.generic.CanBuildFrom[List[NodePrinters.this.global.Tree],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-191838.8701" rx="349.1216" ry="26.7407"/>
<text text-anchor="start" x="18527.614" y="-191842.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[NodePrinters.this.global.Tree],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-191827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[Solver.this.Clause] -->
<g id="node2657" class="node">
<title>scala.reflect.ClassTag[Solver.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-191910.8701" rx="172.5681" ry="26.7407"/>
<text text-anchor="start" x="18652.614" y="-191914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Solver.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-191899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 3ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Array[Object] -->
<g id="node2658" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Array[Object]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-191982.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="18649.114" y="-191986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Array[Object]</text>
<text text-anchor="middle" x="18766.614" y="-191971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- vi.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2659" class="node">
<title>vi.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-192054.8701" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="18702.114" y="-192058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">vi.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-192043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- AbstractReporter.this.settings.BooleanSetting =&gt; Boolean -->
<g id="node2660" class="node">
<title>AbstractReporter.this.settings.BooleanSetting =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-192126.8701" rx="236.3475" ry="26.7407"/>
<text text-anchor="start" x="18607.614" y="-192130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">AbstractReporter.this.settings.BooleanSetting =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-192115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[Typers.this.global.Symbol]) =&gt; ?{def +=: ?} -->
<g id="node2661" class="node">
<title>(=&gt; scala.collection.immutable.Set[Typers.this.global.Symbol]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-192198.8701" rx="326.8668" ry="26.7407"/>
<text text-anchor="start" x="18543.614" y="-192202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[Typers.this.global.Symbol]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-192187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Infer.this.global.Symbol, Infer.this.global.Type)) =&gt; (A1, A2) -->
<g id="node2662" class="node">
<title>((Infer.this.global.Symbol, Infer.this.global.Type)) =&gt; (A1, A2)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-192270.8701" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="18590.614" y="-192274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Infer.this.global.Symbol, Infer.this.global.Type)) =&gt; (A1, A2)</text>
<text text-anchor="middle" x="18766.614" y="-192259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((DestructureTypes.this.global.Name, DestructureTypes.this.global.ClassfileAnnotArg)) =&gt; (A1, A2) -->
<g id="node2663" class="node">
<title>((DestructureTypes.this.global.Name, DestructureTypes.this.global.ClassfileAnnotArg)) =&gt; (A1, A2)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-192342.8701" rx="404.4302" ry="26.7407"/>
<text text-anchor="start" x="18488.614" y="-192346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((DestructureTypes.this.global.Name, DestructureTypes.this.global.ClassfileAnnotArg)) =&gt; (A1, A2)</text>
<text text-anchor="middle" x="18766.614" y="-192331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; java.util.Map[_ &lt;: java.text.AttributedCharacterIterator.Attribute, _] -->
<g id="node2664" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; java.util.Map[_ &lt;: java.text.AttributedCharacterIterator.Attribute, _]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-192414.8701" rx="410.2439" ry="26.7407"/>
<text text-anchor="start" x="18484.614" y="-192418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; java.util.Map[_ &lt;: java.text.AttributedCharacterIterator.Attribute, _]</text>
<text text-anchor="middle" x="18766.614" y="-192403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Interface.this.global.analyzer.global.Tree -->
<g id="node2665" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Interface.this.global.analyzer.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-192486.8701" rx="282.2713" ry="26.7407"/>
<text text-anchor="start" x="18575.114" y="-192490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Interface.this.global.analyzer.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-192475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; ClassfileParser.this.symbolTable.AnnotationInfo -->
<g id="node2666" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; ClassfileParser.this.symbolTable.AnnotationInfo</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-192558.8701" rx="348.7073" ry="26.7407"/>
<text text-anchor="start" x="18528.114" y="-192562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; ClassfileParser.this.symbolTable.AnnotationInfo</text>
<text text-anchor="middle" x="18766.614" y="-192547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.util.List[scala.tools.asm.tree.FieldNode] =&gt; ?{def asScala: ?} -->
<g id="node2667" class="node">
<title>java.util.List[scala.tools.asm.tree.FieldNode] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-192630.8701" rx="269.3154" ry="26.7407"/>
<text text-anchor="start" x="18584.114" y="-192634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.List[scala.tools.asm.tree.FieldNode] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-192619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Boolean -->
<g id="node2668" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-192702.8701" rx="192.1662" ry="26.7407"/>
<text text-anchor="start" x="18638.614" y="-192706.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-192691.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; List[ClassfileParser.this.symbolTable.Type] -->
<g id="node2669" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; List[ClassfileParser.this.symbolTable.Type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-192774.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="18566.614" y="-192778.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; List[ClassfileParser.this.symbolTable.Type]</text>
<text text-anchor="middle" x="18766.614" y="-192763.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- methName.type =&gt; ?{def take: ?} -->
<g id="node2670" class="node">
<title>methName.type =&gt; ?{def take: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-192846.8701" rx="144.9138" ry="26.7407"/>
<text text-anchor="start" x="18672.114" y="-192850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">methName.type =&gt; ?{def take: ?}</text>
<text text-anchor="middle" x="18766.614" y="-192835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Seq[org.apache.tools.ant.types.Commandline.Argument]) =&gt; ?{def ++=: ?} -->
<g id="node2671" class="node">
<title>(=&gt; Seq[org.apache.tools.ant.types.Commandline.Argument]) =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-192918.8701" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="18544.114" y="-192922.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Seq[org.apache.tools.ant.types.Commandline.Argument]) =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-192907.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- nextFrame.type =&gt; ?{def peekStack: ?} -->
<g id="node2672" class="node">
<title>nextFrame.type =&gt; ?{def peekStack: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-192990.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="18656.614" y="-192994.6701" font-family="Times,serif" font-size="14.00" fill="#000000">nextFrame.type =&gt; ?{def peekStack: ?}</text>
<text text-anchor="middle" x="18766.614" y="-192979.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 2ms</text>
</g>
<!-- (=&gt; Array[Double]) =&gt; Array[CNF.this.Clause] -->
<g id="node2673" class="node">
<title>(=&gt; Array[Double]) =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-193062.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="18634.114" y="-193066.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Double]) =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-193051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; List[(BCodeBodyBuilder.this.global.Symbol, scala.tools.asm.Label)]) =&gt; ?{def ::=: ?} -->
<g id="node2674" class="node">
<title>(=&gt; List[(BCodeBodyBuilder.this.global.Symbol, scala.tools.asm.Label)]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-193134.8701" rx="366.0628" ry="26.7407"/>
<text text-anchor="start" x="18515.614" y="-193138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[(BCodeBodyBuilder.this.global.Symbol, scala.tools.asm.Label)]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-193123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- InlineRequest.this.callsite.callee.type =&gt; ?{def get: ?} -->
<g id="node2675" class="node">
<title>InlineRequest.this.callsite.callee.type =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-193206.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="18617.614" y="-193210.6701" font-family="Times,serif" font-size="14.00" fill="#000000">InlineRequest.this.callsite.callee.type =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-193195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CleanUp.this.global.gen.global.RefTree =&gt; ?{def DOT: ?} -->
<g id="node2676" class="node">
<title>CleanUp.this.global.gen.global.RefTree =&gt; ?{def DOT: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-193278.8701" rx="240.3326" ry="26.7407"/>
<text text-anchor="start" x="18604.614" y="-193282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CleanUp.this.global.gen.global.RefTree =&gt; ?{def DOT: ?}</text>
<text text-anchor="middle" x="18766.614" y="-193267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 1ms</text>
</g>
<!-- Array[Long] =&gt; Array[Int] -->
<g id="node2677" class="node">
<title>Array[Long] =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-193350.8701" rx="116.8455" ry="26.7407"/>
<text text-anchor="start" x="18692.114" y="-193354.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Long] =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-193339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Nothing,BTypesFromClassfile.this.postProcessor.bTypes.ClassBType,List[BTypesFromClassfile.this.postProcessor.bTypes.ClassBType]] -->
<g id="node2678" class="node">
<title>scala.collection.generic.CanBuildFrom[Nothing,BTypesFromClassfile.this.postProcessor.bTypes.ClassBType,List[BTypesFromClassfile.this.postProcessor.bTypes.ClassBType]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-193422.8701" rx="699.1573" ry="26.7407"/>
<text text-anchor="start" x="18280.114" y="-193426.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Nothing,BTypesFromClassfile.this.postProcessor.bTypes.ClassBType,List[BTypesFromClassfile.this.postProcessor.bTypes.ClassBType]]</text>
<text text-anchor="middle" x="18766.614" y="-193411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Array[Byte] =&gt; ?{def drop: ?} -->
<g id="node2679" class="node">
<title>Array[Byte] =&gt; ?{def drop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-193494.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-193498.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Byte] =&gt; ?{def drop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-193483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Unit =&gt; Long -->
<g id="node2680" class="node">
<title>Unit =&gt; Long</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-193566.8701" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="18726.614" y="-193570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Long</text>
<text text-anchor="middle" x="18766.614" y="-193555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- String(&#39;sym.ownerChain&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2681" class="node">
<title>String(&#39;sym.ownerChain&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-193638.8701" rx="174.8109" ry="26.7407"/>
<text text-anchor="start" x="18651.114" y="-193642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;sym.ownerChain&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-193627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.FlagSet -->
<g id="node2682" class="node">
<title>((Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-193710.8701" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="18603.114" y="-193714.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-193699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Global.this.delambdafy.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2683" class="node">
<title>Global.this.delambdafy.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-193782.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="18643.114" y="-193786.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.delambdafy.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-193771.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;generating bridge from %s (%s): %s to %s: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2684" class="node">
<title>String(&#39;generating bridge from %s (%s): %s to %s: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-193854.8701" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="18554.614" y="-193858.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;generating bridge from %s (%s): %s to %s: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-193843.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((List[ContextErrors.this.global.Type], List[ContextErrors.this.global.TypeBounds])) =&gt; ?{def zipped: ?} -->
<g id="node2685" class="node">
<title>((List[ContextErrors.this.global.Type], List[ContextErrors.this.global.TypeBounds])) =&gt; ?{def zipped: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-193926.8701" rx="420.9572" ry="26.7407"/>
<text text-anchor="start" x="18477.114" y="-193930.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((List[ContextErrors.this.global.Type], List[ContextErrors.this.global.TypeBounds])) =&gt; ?{def zipped: ?}</text>
<text text-anchor="middle" x="18766.614" y="-193915.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- args.type =&gt; ?{def flatMap: ?} -->
<g id="node2686" class="node">
<title>args.type =&gt; ?{def flatMap: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-193998.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="18680.614" y="-194002.6701" font-family="Times,serif" font-size="14.00" fill="#000000">args.type =&gt; ?{def flatMap: ?}</text>
<text text-anchor="middle" x="18766.614" y="-193987.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39; %s package object %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2687" class="node">
<title>String(&#39; %s package object %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-194070.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-194074.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39; %s package object %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-194059.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Integral[Int] -->
<g id="node2688" class="node">
<title>Integral[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-194142.8701" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="18726.614" y="-194146.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Integral[Int]</text>
<text text-anchor="middle" x="18766.614" y="-194131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Infer.this.global.AnnotationInfo =&gt; Infer.this.global.Type -->
<g id="node2689" class="node">
<title>Infer.this.global.AnnotationInfo =&gt; Infer.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-194214.8701" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="18608.114" y="-194218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Infer.this.global.AnnotationInfo =&gt; Infer.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-194203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Double =&gt; String -->
<g id="node2690" class="node">
<title>Double =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-194286.8701" rx="79.8063" ry="26.7407"/>
<text text-anchor="start" x="18718.114" y="-194290.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Double =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-194275.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[PatternTypers.this.global.Symbol],PatternTypers.this.global.Symbol,List[PatternTypers.this.global.Symbol]] -->
<g id="node2691" class="node">
<title>scala.collection.generic.CanBuildFrom[List[PatternTypers.this.global.Symbol],PatternTypers.this.global.Symbol,List[PatternTypers.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-194358.8701" rx="604.6526" ry="26.7407"/>
<text text-anchor="start" x="18347.114" y="-194362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[PatternTypers.this.global.Symbol],PatternTypers.this.global.Symbol,List[PatternTypers.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-194347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.Symbol,That] -->
<g id="node2692" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-194430.8701" rx="419.1287" ry="26.7407"/>
<text text-anchor="start" x="18478.114" y="-194434.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Interface.this.global.Tree],Interface.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-194419.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],scala.collection.immutable.Nil.type,That] -->
<g id="node2693" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],scala.collection.immutable.Nil.type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-194502.8701" rx="440.5551" ry="26.7407"/>
<text text-anchor="start" x="18463.114" y="-194506.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],scala.collection.immutable.Nil.type,That]</text>
<text text-anchor="middle" x="18766.614" y="-194491.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- SpecializeTypes.this.global.Symbol =&gt; ?{def +: ?} -->
<g id="node2694" class="node">
<title>SpecializeTypes.this.global.Symbol =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-194574.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="18625.114" y="-194578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SpecializeTypes.this.global.Symbol =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-194563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Pickler.this.global.AnnotationInfo -->
<g id="node2695" class="node">
<title>((Nothing, Nothing)) =&gt; Pickler.this.global.AnnotationInfo</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-194646.8701" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="18604.114" y="-194650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Pickler.this.global.AnnotationInfo</text>
<text text-anchor="middle" x="18766.614" y="-194635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$17.type =&gt; ?{def INT_==: ?} -->
<g id="node2696" class="node">
<title>x$17.type =&gt; ?{def INT_==: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-194718.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-194722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$17.type =&gt; ?{def INT_==: ?}</text>
<text text-anchor="middle" x="18766.614" y="-194707.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[PatternExpansion.this.global.Type],PatternExpansion.this.global.Type,List[PatternExpansion.this.global.Type]] -->
<g id="node2697" class="node">
<title>scala.collection.generic.CanBuildFrom[List[PatternExpansion.this.global.Type],PatternExpansion.this.global.Type,List[PatternExpansion.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-194790.8701" rx="614.4516" ry="26.7407"/>
<text text-anchor="start" x="18340.114" y="-194794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[PatternExpansion.this.global.Type],PatternExpansion.this.global.Type,List[PatternExpansion.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-194779.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 2ms</text>
</g>
<!-- List[LambdaLift.this.global.Tree] =&gt; ?{def ::=: ?} -->
<g id="node2698" class="node">
<title>List[LambdaLift.this.global.Tree] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-194862.8701" rx="208.693" ry="26.7407"/>
<text text-anchor="start" x="18627.114" y="-194866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[LambdaLift.this.global.Tree] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-194851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x.type =&gt; ?{def toInt: ?} -->
<g id="node2699" class="node">
<title>x.type =&gt; ?{def toInt: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-194934.8701" rx="108.789" ry="26.7407"/>
<text text-anchor="start" x="18697.614" y="-194938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x.type =&gt; ?{def toInt: ?}</text>
<text text-anchor="middle" x="18766.614" y="-194923.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Map[String,String] =&gt; ?{def ++=: ?} -->
<g id="node2700" class="node">
<title>scala.collection.immutable.Map[String,String] =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-195006.8701" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="18587.614" y="-195010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[String,String] =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-194995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Array[Int] -->
<g id="node2701" class="node">
<title>((Nothing, Nothing)) =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-195078.8701" rx="148.4848" ry="26.7407"/>
<text text-anchor="start" x="18669.614" y="-195082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-195067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Boolean] =&gt; Array[Class[_]] -->
<g id="node2702" class="node">
<title>Array[Boolean] =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-195150.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="18668.614" y="-195154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Boolean] =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-195139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- Array[BCodeBodyBuilder.this.bTypes.BType] =&gt; Array[scala.tools.asm.Label] -->
<g id="node2703" class="node">
<title>Array[BCodeBodyBuilder.this.bTypes.BType] =&gt; Array[scala.tools.asm.Label]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-195222.8701" rx="321.053" ry="26.7407"/>
<text text-anchor="start" x="18547.614" y="-195226.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[BCodeBodyBuilder.this.bTypes.BType] =&gt; Array[scala.tools.asm.Label]</text>
<text text-anchor="middle" x="18766.614" y="-195211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Type],Int,That] -->
<g id="node2704" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Type],Int,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-195294.8701" rx="323.2957" ry="26.7407"/>
<text text-anchor="start" x="18546.114" y="-195298.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Type],Int,That]</text>
<text text-anchor="middle" x="18766.614" y="-195283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((MatchTreeMaking.this.global.Symbol, MatchTreeMaking.this.global.Tree)) =&gt; (A1, A2) -->
<g id="node2705" class="node">
<title>((MatchTreeMaking.this.global.Symbol, MatchTreeMaking.this.global.Tree)) =&gt; (A1, A2)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-195366.8701" rx="366.0628" ry="26.7407"/>
<text text-anchor="start" x="18515.614" y="-195370.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((MatchTreeMaking.this.global.Symbol, MatchTreeMaking.this.global.Tree)) =&gt; (A1, A2)</text>
<text text-anchor="middle" x="18766.614" y="-195355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Checkable.this.global.Symbol],Checkable.this.global.TypeVar,That] -->
<g id="node2706" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Checkable.this.global.Symbol],Checkable.this.global.TypeVar,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-195438.8701" rx="449.0256" ry="26.7407"/>
<text text-anchor="start" x="18457.114" y="-195442.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Checkable.this.global.Symbol],Checkable.this.global.TypeVar,That]</text>
<text text-anchor="middle" x="18766.614" y="-195427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- List[TreeGen.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node2707" class="node">
<title>List[TreeGen.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-195510.8701" rx="315.2393" ry="26.7407"/>
<text text-anchor="start" x="18551.614" y="-195514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[TreeGen.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-195499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.util.List[Object] =&gt; ?{def asScala: ?} -->
<g id="node2708" class="node">
<title>java.util.List[Object] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-195582.8701" rx="176.1392" ry="26.7407"/>
<text text-anchor="start" x="18650.114" y="-195586.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.List[Object] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-195571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[Parsers.this.global.Tree] =&gt; Traversable[?] -->
<g id="node2709" class="node">
<title>Option[Parsers.this.global.Tree] =&gt; Traversable[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-195654.8701" rx="207.7788" ry="26.7407"/>
<text text-anchor="start" x="18627.614" y="-195658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[Parsers.this.global.Tree] =&gt; Traversable[?]</text>
<text text-anchor="middle" x="18766.614" y="-195643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; SyntheticMethods.this.global.Symbol -->
<g id="node2710" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; SyntheticMethods.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-195726.8701" rx="269.3154" ry="26.7407"/>
<text text-anchor="start" x="18584.114" y="-195730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; SyntheticMethods.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-195715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- (=&gt; List[BCodeIdiomatic.this.global.LabelDef]) =&gt; ?{def ::=: ?} -->
<g id="node2711" class="node">
<title>(=&gt; List[BCodeIdiomatic.this.global.LabelDef]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-195798.8701" rx="265.3302" ry="26.7407"/>
<text text-anchor="start" x="18587.114" y="-195802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[BCodeIdiomatic.this.global.LabelDef]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-195787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[(scala.tools.asm.Label, BCodeBodyBuilder.this.global.Tree)] =&gt; ?{def ::=: ?} -->
<g id="node2712" class="node">
<title>List[(scala.tools.asm.Label, BCodeBodyBuilder.this.global.Tree)] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-195870.8701" rx="333.0946" ry="26.7407"/>
<text text-anchor="start" x="18539.114" y="-195874.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[(scala.tools.asm.Label, BCodeBodyBuilder.this.global.Tree)] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-195859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Char(&#39;,&#39;)) =&gt; String -->
<g id="node2713" class="node">
<title>(=&gt; Char(&#39;,&#39;)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-195942.8701" rx="103.4757" ry="26.7407"/>
<text text-anchor="start" x="18701.614" y="-195946.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Char(&#39;,&#39;)) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-195931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- str.type =&gt; ?{def toInt: ?} -->
<g id="node2714" class="node">
<title>str.type =&gt; ?{def toInt: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-196014.8701" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="18694.114" y="-196018.6701" font-family="Times,serif" font-size="14.00" fill="#000000">str.type =&gt; ?{def toInt: ?}</text>
<text text-anchor="middle" x="18766.614" y="-196003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Metalevels.this.global.Symbol =&gt; ?{def metalevel: ?} -->
<g id="node2715" class="node">
<title>Metalevels.this.global.Symbol =&gt; ?{def metalevel: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-196086.8701" rx="222.9775" ry="26.7407"/>
<text text-anchor="start" x="18617.114" y="-196090.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Metalevels.this.global.Symbol =&gt; ?{def metalevel: ?}</text>
<text text-anchor="middle" x="18766.614" y="-196075.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;materializing requested %s.%s[%s] using %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2716" class="node">
<title>String(&#39;materializing requested %s.%s[%s] using %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-196158.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="18560.614" y="-196162.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;materializing requested %s.%s[%s] using %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-196147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; EtaExpansion.this.global.Symbol -->
<g id="node2717" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; EtaExpansion.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-196230.8701" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="18544.114" y="-196234.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; EtaExpansion.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-196219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- str.type =&gt; ?{def tail: ?} -->
<g id="node2718" class="node">
<title>str.type =&gt; ?{def tail: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-196302.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-196306.6701" font-family="Times,serif" font-size="14.00" fill="#000000">str.type =&gt; ?{def tail: ?}</text>
<text text-anchor="middle" x="18766.614" y="-196291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Reshape.this.global.DefDef],Reshape.this.global.DefDef,List[Reshape.this.global.DefDef]] -->
<g id="node2719" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Reshape.this.global.DefDef],Reshape.this.global.DefDef,List[Reshape.this.global.DefDef]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-196374.8701" rx="535.9739" ry="26.7407"/>
<text text-anchor="start" x="18395.614" y="-196378.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Reshape.this.global.DefDef],Reshape.this.global.DefDef,List[Reshape.this.global.DefDef]]</text>
<text text-anchor="middle" x="18766.614" y="-196363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- scala.io.Codec -->
<g id="node2720" class="node">
<title>scala.io.Codec</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-196446.8701" rx="72.6644" ry="26.7407"/>
<text text-anchor="start" x="18723.114" y="-196450.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.io.Codec</text>
<text text-anchor="middle" x="18766.614" y="-196435.6701" font-family="Times,serif" font-size="14.00" fill="#000000">24 times = 3ms</text>
</g>
<!-- (=&gt; Int) =&gt; ?{def +=: ?} -->
<g id="node2721" class="node">
<title>(=&gt; Int) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-196518.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="18697.114" y="-196522.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Int) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-196507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">140 times = 8ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.InsnList -->
<g id="node2722" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.InsnList</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-196590.8701" rx="233.1906" ry="26.7407"/>
<text text-anchor="start" x="18609.614" y="-196594.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; scala.tools.asm.tree.InsnList</text>
<text text-anchor="middle" x="18766.614" y="-196579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">14 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Namers.this.global.ClassDef -->
<g id="node2723" class="node">
<title>((Nothing, Nothing)) =&gt; Namers.this.global.ClassDef</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-196662.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-196666.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Namers.this.global.ClassDef</text>
<text text-anchor="middle" x="18766.614" y="-196651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Interface.this.global.Symbol],Interface.this.global.Symbol,List[Interface.this.global.Symbol]] -->
<g id="node2724" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Interface.this.global.Symbol],Interface.this.global.Symbol,List[Interface.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-196734.8701" rx="545.7729" ry="26.7407"/>
<text text-anchor="start" x="18388.614" y="-196738.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Interface.this.global.Symbol],Interface.this.global.Symbol,List[Interface.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-196723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- AsmAnalyzer.this.analyzer.type =&gt; ?{def frameAt: ?} -->
<g id="node2725" class="node">
<title>AsmAnalyzer.this.analyzer.type =&gt; ?{def frameAt: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-196806.8701" rx="223.3915" ry="26.7407"/>
<text text-anchor="start" x="18616.614" y="-196810.6701" font-family="Times,serif" font-size="14.00" fill="#000000">AsmAnalyzer.this.analyzer.type =&gt; ?{def frameAt: ?}</text>
<text text-anchor="middle" x="18766.614" y="-196795.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Solver.this.Sym, Boolean) &lt;:&lt; (Solver.this.Sym, Boolean) -->
<g id="node2726" class="node">
<title>(Solver.this.Sym, Boolean) &lt;:&lt; (Solver.this.Sym, Boolean)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-196878.8701" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="18603.114" y="-196882.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Solver.this.Sym, Boolean) &lt;:&lt; (Solver.this.Sym, Boolean)</text>
<text text-anchor="middle" x="18766.614" y="-196867.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Context.this.type) =&gt; ?{def reporter_=: ?} -->
<g id="node2727" class="node">
<title>(=&gt; Context.this.type) =&gt; ?{def reporter_=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-196950.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="18637.114" y="-196954.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Context.this.type) =&gt; ?{def reporter_=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-196939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- java.util.List[scala.tools.asm.tree.LabelNode] =&gt; ?{def asScala: ?} -->
<g id="node2728" class="node">
<title>java.util.List[scala.tools.asm.tree.LabelNode] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-197022.8701" rx="271.558" ry="26.7407"/>
<text text-anchor="start" x="18582.614" y="-197026.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.List[scala.tools.asm.tree.LabelNode] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-197011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.tools.nsc.typechecker.ContextMode.PatternAlternative.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2729" class="node">
<title>scala.tools.nsc.typechecker.ContextMode.PatternAlternative.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-197094.8701" rx="328.1951" ry="26.7407"/>
<text text-anchor="start" x="18542.614" y="-197098.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.ContextMode.PatternAlternative.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-197083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Any],Calculate.this.global.TypeTree,That] -->
<g id="node2730" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Any],Calculate.this.global.TypeTree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-197166.8701" rx="347.7931" ry="26.7407"/>
<text text-anchor="start" x="18528.614" y="-197170.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Any],Calculate.this.global.TypeTree,That]</text>
<text text-anchor="middle" x="18766.614" y="-197155.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.tools.nsc.Settings#BooleanSetting =&gt; Boolean -->
<g id="node2731" class="node">
<title>scala.tools.nsc.Settings#BooleanSetting =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-197238.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="18623.614" y="-197242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.Settings#BooleanSetting =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-197227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">80 times = 30ms</text>
</g>
<!-- String(&#39;\nNote: %s exists, but it has no companion object.&#39;) =&gt; ?{def format: ?} -->
<g id="node2732" class="node">
<title>String(&#39;\nNote: %s exists, but it has no companion object.&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-197320.8701" rx="285.8424" ry="37.4533"/>
<text text-anchor="middle" x="18766.614" y="-197332.1701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;</text>
<text text-anchor="start" x="18572.614" y="-197317.1701" font-family="Times,serif" font-size="14.00" fill="#000000">Note: %s exists, but it has no companion object.&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-197302.1701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.NEWkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2733" class="node">
<title>JavaScanners.this.global.javanme.NEWkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-197402.8701" rx="261.7591" ry="26.7407"/>
<text text-anchor="start" x="18589.614" y="-197406.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.NEWkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-197391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CleanUp.this.global.gen.global.RefTree =&gt; ?{def OBJ_NE: ?} -->
<g id="node2734" class="node">
<title>CleanUp.this.global.gen.global.RefTree =&gt; ?{def OBJ_NE: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-197474.8701" rx="255.0313" ry="26.7407"/>
<text text-anchor="start" x="18594.114" y="-197478.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CleanUp.this.global.gen.global.RefTree =&gt; ?{def OBJ_NE: ?}</text>
<text text-anchor="middle" x="18766.614" y="-197463.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;NoType()&#39;) =&gt; scala.text.Document -->
<g id="node2735" class="node">
<title>String(&#39;NoType()&#39;) =&gt; scala.text.Document</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-197546.8701" rx="178.382" ry="26.7407"/>
<text text-anchor="start" x="18648.614" y="-197550.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;NoType()&#39;) =&gt; scala.text.Document</text>
<text text-anchor="middle" x="18766.614" y="-197535.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[UnCurry.this.global.TypeParamVarargsAttachment] -->
<g id="node2736" class="node">
<title>scala.reflect.ClassTag[UnCurry.this.global.TypeParamVarargsAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-197618.8701" rx="301.8692" ry="26.7407"/>
<text text-anchor="start" x="18561.114" y="-197622.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[UnCurry.this.global.TypeParamVarargsAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-197607.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[Reshape.this.global.analyzer.MacroExpansionAttachment] -->
<g id="node2737" class="node">
<title>scala.reflect.ClassTag[Reshape.this.global.analyzer.MacroExpansionAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-197690.8701" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="18544.114" y="-197694.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Reshape.this.global.analyzer.MacroExpansionAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-197679.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- MatchTreeMaking.this.global.gen.global.RefTree =&gt; ?{def OBJ_NE: ?} -->
<g id="node2739" class="node">
<title>MatchTreeMaking.this.global.gen.global.RefTree =&gt; ?{def OBJ_NE: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-197762.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="18566.614" y="-197766.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchTreeMaking.this.global.gen.global.RefTree =&gt; ?{def OBJ_NE: ?}</text>
<text text-anchor="middle" x="18766.614" y="-197751.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchApproximator.this.TreeMaker],MatchApproximator.this.Test,That] -->
<g id="node2740" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchApproximator.this.TreeMaker],MatchApproximator.this.Test,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-197834.8701" rx="469.5378" ry="26.7407"/>
<text text-anchor="start" x="18442.614" y="-197838.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchApproximator.this.TreeMaker],MatchApproximator.this.Test,That]</text>
<text text-anchor="middle" x="18766.614" y="-197823.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.typechecker.ContextMode.StarPatterns.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2741" class="node">
<title>scala.tools.nsc.typechecker.ContextMode.StarPatterns.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-197906.8701" rx="304.1118" ry="26.7407"/>
<text text-anchor="start" x="18559.614" y="-197910.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.ContextMode.StarPatterns.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-197895.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- sym.NameType =&gt; ?{def getterName: ?} -->
<g id="node2742" class="node">
<title>sym.NameType =&gt; ?{def getterName: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-197978.8701" rx="173.8966" ry="26.7407"/>
<text text-anchor="start" x="18651.614" y="-197982.6701" font-family="Times,serif" font-size="14.00" fill="#000000">sym.NameType =&gt; ?{def getterName: ?}</text>
<text text-anchor="middle" x="18766.614" y="-197967.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Array[String] =&gt; ?{def ++: ?} -->
<g id="node2743" class="node">
<title>Array[String] =&gt; ?{def ++: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-198050.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-198054.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[String] =&gt; ?{def ++: ?}</text>
<text text-anchor="middle" x="18766.614" y="-198039.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BackendUtils.this.postProcessor.bTypes.ClassBType],BackendUtils.this.postProcessor.bTypes.ClassBType,That] -->
<g id="node2744" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BackendUtils.this.postProcessor.bTypes.ClassBType],BackendUtils.this.postProcessor.bTypes.ClassBType,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-198122.8701" rx="620.6795" ry="26.7407"/>
<text text-anchor="start" x="18335.614" y="-198126.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BackendUtils.this.postProcessor.bTypes.ClassBType],BackendUtils.this.postProcessor.bTypes.ClassBType,That]</text>
<text text-anchor="middle" x="18766.614" y="-198111.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;List\\[.*?\\]&#39;) =&gt; ?{def r: ?} -->
<g id="node2745" class="node">
<title>String(&#39;List\\[.*?\\]&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-198194.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="18674.614" y="-198198.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;List\[.*?\]&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-198183.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.WITHkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2746" class="node">
<title>Scanners.this.global.nme.WITHkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-198266.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="18610.614" y="-198270.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.WITHkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-198255.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;tree&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2747" class="node">
<title>String(&#39;tree&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-198338.8701" rx="123.0732" ry="26.7407"/>
<text text-anchor="start" x="18687.614" y="-198342.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;tree&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-198327.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; java.net.Proxy -->
<g id="node2748" class="node">
<title>((Nothing, Nothing)) =&gt; java.net.Proxy</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-198410.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="18658.114" y="-198414.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; java.net.Proxy</text>
<text text-anchor="middle" x="18766.614" y="-198399.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;| &#160;&#160;&#160;&#39;) =&gt; ?{def *: ?} -->
<g id="node2749" class="node">
<title>String(&#39;| &#160;&#160;&#160;&#39;) =&gt; ?{def *: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-198482.8701" rx="117.2596" ry="26.7407"/>
<text text-anchor="start" x="18691.614" y="-198486.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;| &#160;&#160;&#160;&#39;) =&gt; ?{def *: ?}</text>
<text text-anchor="middle" x="18766.614" y="-198471.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.THROWkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2750" class="node">
<title>Scanners.this.global.nme.THROWkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-198554.8701" rx="241.6612" ry="26.7407"/>
<text text-anchor="start" x="18603.614" y="-198558.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.THROWkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-198543.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- p.name.type =&gt; ?{def +: ?} -->
<g id="node2751" class="node">
<title>p.name.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-198626.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="18689.614" y="-198630.6701" font-family="Times,serif" font-size="14.00" fill="#000000">p.name.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-198615.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[CleanUp.this.global.Symbol],CleanUp.this.global.Type,That] -->
<g id="node2752" class="node">
<title>scala.collection.generic.CanBuildFrom[List[CleanUp.this.global.Symbol],CleanUp.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-198698.8701" rx="421.3713" ry="26.7407"/>
<text text-anchor="start" x="18476.614" y="-198702.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[CleanUp.this.global.Symbol],CleanUp.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-198687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Set[Implicits.this.global.Symbol] -->
<g id="node2753" class="node">
<title>Set[Implicits.this.global.Symbol]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-198770.8701" rx="140.9288" ry="26.7407"/>
<text text-anchor="start" x="18675.114" y="-198774.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Set[Implicits.this.global.Symbol]</text>
<text text-anchor="middle" x="18766.614" y="-198759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)],(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName),That] -->
<g id="node2754" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)],(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-198842.8701" rx="790.5908" ry="26.7407"/>
<text text-anchor="start" x="18215.614" y="-198846.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName)],(SymbolTables.this.global.Symbol, SymbolTables.this.global.TermName),That]</text>
<text text-anchor="middle" x="18766.614" y="-198831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; LambdaLift.this.global.Tree) =&gt; LambdaLift.this.global.Type -->
<g id="node2755" class="node">
<title>(=&gt; LambdaLift.this.global.Tree) =&gt; LambdaLift.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-198914.8701" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="18583.614" y="-198918.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; LambdaLift.this.global.Tree) =&gt; LambdaLift.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-198903.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;\&#39;%s\&#39; is not an existing directory.&#39;) =&gt; ?{def format: ?} -->
<g id="node2756" class="node">
<title>String(&#39;\&#39;%s\&#39; is not an existing directory.&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-198986.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="18598.114" y="-198990.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;&#39;%s&#39; is not an existing directory.&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-198975.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.Position -->
<g id="node2757" class="node">
<title>(=&gt; (Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.Position</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-199058.8701" rx="258.6023" ry="26.7407"/>
<text text-anchor="start" x="18591.614" y="-199062.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit, Unit)) =&gt; NodePrinters.this.global.Position</text>
<text text-anchor="middle" x="18766.614" y="-199047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;renaming in %s: %s =&gt; %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2758" class="node">
<title>String(&#39;renaming in %s: %s =&gt; %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-199130.8701" rx="234.1047" ry="26.7407"/>
<text text-anchor="start" x="18609.114" y="-199134.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;renaming in %s: %s =&gt; %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-199119.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- params.type =&gt; ?{def +:: ?} -->
<g id="node2759" class="node">
<title>params.type =&gt; ?{def +:: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-199202.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="18688.114" y="-199206.6701" font-family="Times,serif" font-size="14.00" fill="#000000">params.type =&gt; ?{def +:: ?}</text>
<text text-anchor="middle" x="18766.614" y="-199191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.Symbol -->
<g id="node2760" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-199274.8701" rx="226.9626" ry="26.7407"/>
<text text-anchor="start" x="18614.114" y="-199278.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Parsers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-199263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Macros.this.global.treeInfo.global.Tree],Macros.this.global.treeInfo.global.Type,List[Macros.this.global.Type]] -->
<g id="node2761" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Macros.this.global.treeInfo.global.Tree],Macros.this.global.treeInfo.global.Type,List[Macros.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-199346.8701" rx="616.6942" ry="26.7407"/>
<text text-anchor="start" x="18338.614" y="-199350.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Macros.this.global.treeInfo.global.Tree],Macros.this.global.treeInfo.global.Type,List[Macros.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-199335.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode]) =&gt; ?{def +=: ?} -->
<g id="node2762" class="node">
<title>(=&gt; scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-199418.8701" rx="372.7906" ry="26.7407"/>
<text text-anchor="start" x="18511.114" y="-199422.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-199407.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- v.insns.type =&gt; ?{def asScala: ?} -->
<g id="node2763" class="node">
<title>v.insns.type =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-199490.8701" rx="141.3428" ry="26.7407"/>
<text text-anchor="start" x="18674.614" y="-199494.6701" font-family="Times,serif" font-size="14.00" fill="#000000">v.insns.type =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-199479.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (Constructors.this.global.Symbol, Constructors.this.global.Tree) &lt;:&lt; (T, U) -->
<g id="node2764" class="node">
<title>(Constructors.this.global.Symbol, Constructors.this.global.Tree) &lt;:&lt; (T, U)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-199562.8701" rx="304.1118" ry="26.7407"/>
<text text-anchor="start" x="18559.614" y="-199566.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Constructors.this.global.Symbol, Constructors.this.global.Tree) &lt;:&lt; (T, U)</text>
<text text-anchor="middle" x="18766.614" y="-199551.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[AccessorSynthesis.this.global.DefDef],AccessorSynthesis.this.global.Tree,List[AccessorSynthesis.this.global.Tree]] -->
<g id="node2765" class="node">
<title>scala.collection.generic.CanBuildFrom[List[AccessorSynthesis.this.global.DefDef],AccessorSynthesis.this.global.Tree,List[AccessorSynthesis.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-199634.8701" rx="631.3927" ry="26.7407"/>
<text text-anchor="start" x="18328.114" y="-199638.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[AccessorSynthesis.this.global.DefDef],AccessorSynthesis.this.global.Tree,List[AccessorSynthesis.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-199623.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Array[Char] -->
<g id="node2766" class="node">
<title>Unit =&gt; Array[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-199706.8701" rx="92.7622" ry="26.7407"/>
<text text-anchor="start" x="18709.114" y="-199710.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Array[Char]</text>
<text text-anchor="middle" x="18766.614" y="-199695.6701" font-family="Times,serif" font-size="14.00" fill="#000000">5 times = 0ms</text>
</g>
<!-- Array[Solver.this.Clause] =&gt; List[List[?A]] -->
<g id="node2767" class="node">
<title>Array[Solver.this.Clause] =&gt; List[List[?A]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-199778.8701" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="18646.614" y="-199782.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Solver.this.Clause] =&gt; List[List[?A]]</text>
<text text-anchor="middle" x="18766.614" y="-199767.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;&#45;&#45;&#39;) =&gt; Seq[Char] -->
<g id="node2768" class="node">
<title>String(&#39;&#45;&#45;&#39;) =&gt; Seq[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-199850.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-199854.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;&#45;&#45;&#39;) =&gt; Seq[Char]</text>
<text text-anchor="middle" x="18766.614" y="-199839.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[(Holes.this.global.Type, scala.reflect.quasiquotes.Rank)] =&gt; ?{def +:=: ?} -->
<g id="node2769" class="node">
<title>List[(Holes.this.global.Type, scala.reflect.quasiquotes.Rank)] =&gt; ?{def +:=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-199922.8701" rx="318.3962" ry="26.7407"/>
<text text-anchor="start" x="18549.614" y="-199926.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[(Holes.this.global.Type, scala.reflect.quasiquotes.Rank)] =&gt; ?{def +:=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-199911.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Long -->
<g id="node2770" class="node">
<title>(=&gt; Unit) =&gt; Long</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-199994.8701" rx="86.0347" ry="26.7407"/>
<text text-anchor="start" x="18713.614" y="-199998.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Long</text>
<text text-anchor="middle" x="18766.614" y="-199983.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Parsers.this.global.Position -->
<g id="node2771" class="node">
<title>((Nothing, Nothing)) =&gt; Parsers.this.global.Position</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-200066.8701" rx="213.5925" ry="26.7407"/>
<text text-anchor="start" x="18623.614" y="-200070.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Parsers.this.global.Position</text>
<text text-anchor="middle" x="18766.614" y="-200055.6701" font-family="Times,serif" font-size="14.00" fill="#000000">32 times = 4ms</text>
</g>
<!-- Some[TreeAndTypeAnalysis.this.global.Type] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node2772" class="node">
<title>Some[TreeAndTypeAnalysis.this.global.Type] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-200138.8701" rx="363.4058" ry="26.7407"/>
<text text-anchor="start" x="18517.614" y="-200142.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Some[TreeAndTypeAnalysis.this.global.Type] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-200127.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;[Connecting to compilation daemon at port %d failed; re&#45;trying...]&#39;) =&gt; ?{def format: ?} -->
<g id="node2773" class="node">
<title>String(&#39;[Connecting to compilation daemon at port %d failed; re&#45;trying...]&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-200210.8701" rx="383.0039" ry="26.7407"/>
<text text-anchor="start" x="18503.614" y="-200214.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;[Connecting to compilation daemon at port %d failed; re&#45;trying...]&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-200199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.THENkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2774" class="node">
<title>Scanners.this.global.nme.THENkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-200282.8701" rx="231.8621" ry="26.7407"/>
<text text-anchor="start" x="18610.614" y="-200286.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.THENkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-200271.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[(Holes.this.global.Type, scala.reflect.quasiquotes.Rank)]) =&gt; ?{def +:=: ?} -->
<g id="node2775" class="node">
<title>(=&gt; List[(Holes.this.global.Type, scala.reflect.quasiquotes.Rank)]) =&gt; ?{def +:=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-200354.8701" rx="338.9084" ry="26.7407"/>
<text text-anchor="start" x="18535.114" y="-200358.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[(Holes.this.global.Type, scala.reflect.quasiquotes.Rank)]) =&gt; ?{def +:=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-200343.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; scala.tools.nsc.Settings -->
<g id="node2776" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; scala.tools.nsc.Settings</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-200426.8701" rx="285.8424" ry="26.7407"/>
<text text-anchor="start" x="18572.614" y="-200430.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; scala.tools.nsc.Settings</text>
<text text-anchor="middle" x="18766.614" y="-200415.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;scala&#45;library.jar&#39;) =&gt; scala.reflect.io.Path -->
<g id="node2777" class="node">
<title>String(&#39;scala&#45;library.jar&#39;) =&gt; scala.reflect.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-200498.8701" rx="197.9798" ry="26.7407"/>
<text text-anchor="start" x="18634.614" y="-200502.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;scala&#45;library.jar&#39;) =&gt; scala.reflect.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-200487.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[SwitchEmission.this.TreeMaker]],Option[MatchOptimization.this.global.Tree],That] -->
<g id="node2778" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[SwitchEmission.this.TreeMaker]],Option[MatchOptimization.this.global.Tree],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-200570.8701" rx="530.1602" ry="26.7407"/>
<text text-anchor="start" x="18399.614" y="-200574.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[SwitchEmission.this.TreeMaker]],Option[MatchOptimization.this.global.Tree],That]</text>
<text text-anchor="middle" x="18766.614" y="-200559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Set[SymbolTrackers.this.global.Symbol] =&gt; List[SymbolTrackers.this.global.Symbol] -->
<g id="node2779" class="node">
<title>Set[SymbolTrackers.this.global.Symbol] =&gt; List[SymbolTrackers.this.global.Symbol]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-161146.8701" rx="347.379" ry="26.7407"/>
<text text-anchor="start" x="18529.114" y="-161150.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Set[SymbolTrackers.this.global.Symbol] =&gt; List[SymbolTrackers.this.global.Symbol]</text>
<text text-anchor="middle" x="18766.614" y="-161135.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Set[SymbolTrackers.this.global.Symbol] =&gt; List[SymbolTrackers.this.global.Symbol]&#45;&gt;Ordering[SymbolTrackers.this.global.Symbol] -->
<g id="edge9" class="edge">
<title>Set[SymbolTrackers.this.global.Symbol] =&gt; List[SymbolTrackers.this.global.Symbol]&#45;&gt;Ordering[SymbolTrackers.this.global.Symbol]</title>
<path fill="none" stroke="#000000" d="M19113.8094,-161146.8701C21552.6217,-161146.8701 36069.3291,-161146.8701 37958.6906,-161146.8701"/>
<polygon fill="#000000" stroke="#000000" points="37958.9606,-161150.3702 37968.9605,-161146.8701 37958.9605,-161143.3702 37958.9606,-161150.3702"/>
</g>
<!-- String(&#39;xml&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType -->
<g id="node2780" class="node">
<title>String(&#39;xml&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-200642.8701" rx="347.379" ry="26.7407"/>
<text text-anchor="start" x="18529.114" y="-200646.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;xml&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</text>
<text text-anchor="middle" x="18766.614" y="-200631.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; ToolBoxGlobal.this.analyzer.global.Tree -->
<g id="node2781" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; ToolBoxGlobal.this.analyzer.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-200714.8701" rx="304.1118" ry="26.7407"/>
<text text-anchor="start" x="18559.614" y="-200718.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; ToolBoxGlobal.this.analyzer.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-200703.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- frames.type =&gt; ?{def takeWhile: ?} -->
<g id="node2782" class="node">
<title>frames.type =&gt; ?{def takeWhile: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-200786.8701" rx="152.0559" ry="26.7407"/>
<text text-anchor="start" x="18667.114" y="-200790.6701" font-family="Times,serif" font-size="14.00" fill="#000000">frames.type =&gt; ?{def takeWhile: ?}</text>
<text text-anchor="middle" x="18766.614" y="-200775.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; SymbolicXMLBuilder.this.global.Tree -->
<g id="node2783" class="node">
<title>((Nothing, Nothing)) =&gt; SymbolicXMLBuilder.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-200858.8701" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="18590.614" y="-200862.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; SymbolicXMLBuilder.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-200847.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 4ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Throwable -->
<g id="node2784" class="node">
<title>((Nothing, Nothing)) =&gt; Throwable</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-200930.8701" rx="150.7276" ry="26.7407"/>
<text text-anchor="start" x="18668.114" y="-200934.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Throwable</text>
<text text-anchor="middle" x="18766.614" y="-200919.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol -->
<g id="node2785" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-201002.8701" rx="339.3225" ry="26.7407"/>
<text text-anchor="start" x="18534.614" y="-201006.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; MethodSynthesis.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-200991.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Char -->
<g id="node2786" class="node">
<title>(=&gt; Unit) =&gt; Char</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-201074.8701" rx="84.7059" ry="26.7407"/>
<text text-anchor="start" x="18714.614" y="-201078.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Char</text>
<text text-anchor="middle" x="18766.614" y="-201063.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- String(&#39;Unparsed&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType -->
<g id="node2787" class="node">
<title>String(&#39;Unparsed&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-201146.8701" rx="366.9768" ry="26.7407"/>
<text text-anchor="start" x="18515.114" y="-201150.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Unparsed&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmltypes.NameType</text>
<text text-anchor="middle" x="18766.614" y="-201135.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,List[BackendUtils.this.postProcessor.bTypes.ClassBType]] =&gt; ?{def get: ?} -->
<g id="node2788" class="node">
<title>Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,List[BackendUtils.this.postProcessor.bTypes.ClassBType]] =&gt; ?{def get: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-201218.8701" rx="574.3415" ry="26.7407"/>
<text text-anchor="start" x="18368.614" y="-201222.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Either[tools.nsc.backend.jvm.BackendReporting.NoClassBTypeInfo,List[BackendUtils.this.postProcessor.bTypes.ClassBType]] =&gt; ?{def get: ?}</text>
<text text-anchor="middle" x="18766.614" y="-201207.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;residual: %s, tparams: %s, env: %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2789" class="node">
<title>String(&#39;residual: %s, tparams: %s, env: %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-201290.8701" rx="263.5019" ry="26.7407"/>
<text text-anchor="start" x="18588.114" y="-201294.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;residual: %s, tparams: %s, env: %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-201279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.Tree -->
<g id="node2790" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-201362.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-201366.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-201351.6701" font-family="Times,serif" font-size="14.00" fill="#000000">41 times = 3ms</text>
</g>
<!-- args.type =&gt; ?{def contains: ?} -->
<g id="node2791" class="node">
<title>args.type =&gt; ?{def contains: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-201434.8701" rx="133.7865" ry="26.7407"/>
<text text-anchor="start" x="18680.114" y="-201438.6701" font-family="Times,serif" font-size="14.00" fill="#000000">args.type =&gt; ?{def contains: ?}</text>
<text text-anchor="middle" x="18766.614" y="-201423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; TreeCheckers.this.global.Tree -->
<g id="node2792" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; TreeCheckers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-201506.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-201510.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; TreeCheckers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-201495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Taggers.this.c.universe.definitions.ByteTpe.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2793" class="node">
<title>Taggers.this.c.universe.definitions.ByteTpe.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-201578.8701" rx="263.0875" ry="26.7407"/>
<text text-anchor="start" x="18588.614" y="-201582.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Taggers.this.c.universe.definitions.ByteTpe.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-201567.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- Array[java.lang.reflect.TypeVariable[Class[_$1]]] =&gt; ?{def map: ?} -->
<g id="node2794" class="node">
<title>Array[java.lang.reflect.TypeVariable[Class[_$1]]] =&gt; ?{def map: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-201650.8701" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="18578.614" y="-201654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[java.lang.reflect.TypeVariable[Class[_$1]]] =&gt; ?{def map: ?}</text>
<text text-anchor="middle" x="18766.614" y="-201639.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchOptimization.this.global.Symbol],MatchOptimization.this.global.Type,List[MatchOptimization.this.global.Type]] -->
<g id="node2795" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchOptimization.this.global.Symbol],MatchOptimization.this.global.Type,List[MatchOptimization.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-201722.8701" rx="650.5765" ry="26.7407"/>
<text text-anchor="start" x="18314.614" y="-201726.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchOptimization.this.global.Symbol],MatchOptimization.this.global.Type,List[MatchOptimization.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-201711.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Metalevels.this.global.Tree],Metalevels.this.global.Symbol,That] -->
<g id="node2796" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Metalevels.this.global.Tree],Metalevels.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-201794.8701" rx="436.0699" ry="26.7407"/>
<text text-anchor="start" x="18466.114" y="-201798.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Metalevels.this.global.Tree],Metalevels.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-201783.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Symbol],TreeAndTypeAnalysis.this.global.Type,List[TreeAndTypeAnalysis.this.global.Type]] -->
<g id="node2797" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Symbol],TreeAndTypeAnalysis.this.global.Type,List[TreeAndTypeAnalysis.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-201866.8701" rx="683.5446" ry="26.7407"/>
<text text-anchor="start" x="18291.114" y="-201870.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Symbol],TreeAndTypeAnalysis.this.global.Type,List[TreeAndTypeAnalysis.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-201855.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[CNF.this.Sym],scala.tools.nsc.transform.patmat.Lit,That] -->
<g id="node2798" class="node">
<title>scala.collection.generic.CanBuildFrom[List[CNF.this.Sym],scala.tools.nsc.transform.patmat.Lit,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-201938.8701" rx="407.0871" ry="26.7407"/>
<text text-anchor="start" x="18486.614" y="-201942.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[CNF.this.Sym],scala.tools.nsc.transform.patmat.Lit,That]</text>
<text text-anchor="middle" x="18766.614" y="-201927.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Sym],MatchAnalyzer.this.Const,List[MatchAnalyzer.this.Const]] -->
<g id="node2799" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Sym],MatchAnalyzer.this.Const,List[MatchAnalyzer.this.Const]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-202010.8701" rx="516.376" ry="26.7407"/>
<text text-anchor="start" x="18409.614" y="-202014.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.Sym],MatchAnalyzer.this.Const,List[MatchAnalyzer.this.Const]]</text>
<text text-anchor="middle" x="18766.614" y="-201999.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[() =&gt; Any],AnyRef,That] -->
<g id="node2800" class="node">
<title>scala.collection.generic.CanBuildFrom[List[() =&gt; Any],AnyRef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-202082.8701" rx="282.6855" ry="26.7407"/>
<text text-anchor="start" x="18574.614" y="-202086.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[() =&gt; Any],AnyRef,That]</text>
<text text-anchor="middle" x="18766.614" y="-202071.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Validators.this.global.AnnotationInfo) =&gt; Validators.this.global.Type -->
<g id="node2801" class="node">
<title>(=&gt; Validators.this.global.AnnotationInfo) =&gt; Validators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-202154.8701" rx="298.2982" ry="26.7407"/>
<text text-anchor="start" x="18563.614" y="-202158.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Validators.this.global.AnnotationInfo) =&gt; Validators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-202143.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Type], List[Infer.this.global.Symbol]) -->
<g id="node2802" class="node">
<title>(=&gt; (List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-202226.8701" rx="629.1501" ry="26.7407"/>
<text text-anchor="start" x="18329.614" y="-202230.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type], List[Infer.this.global.Type], List[Infer.this.global.Symbol])</text>
<text text-anchor="middle" x="18766.614" y="-202215.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.ValDef],SpecializeTypes.this.global.Symbol,List[SpecializeTypes.this.global.Symbol]] -->
<g id="node2803" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.ValDef],SpecializeTypes.this.global.Symbol,List[SpecializeTypes.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-202298.8701" rx="629.1501" ry="26.7407"/>
<text text-anchor="start" x="18329.614" y="-202302.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.ValDef],SpecializeTypes.this.global.Symbol,List[SpecializeTypes.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-202287.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; TreeGen.this.global.Symbol -->
<g id="node2804" class="node">
<title>((Nothing, Nothing)) =&gt; TreeGen.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-202370.8701" rx="218.492" ry="26.7407"/>
<text text-anchor="start" x="18620.114" y="-202374.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; TreeGen.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-202359.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; EtaExpansion.this.global.gen.global.ValDef -->
<g id="node2805" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; EtaExpansion.this.global.gen.global.ValDef</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-202442.8701" rx="293.3986" ry="26.7407"/>
<text text-anchor="start" x="18567.114" y="-202446.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; EtaExpansion.this.global.gen.global.ValDef</text>
<text text-anchor="middle" x="18766.614" y="-202431.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$8.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2806" class="node">
<title>x$8.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-202514.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="18697.114" y="-202518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$8.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-202503.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Array[Double] -->
<g id="node2807" class="node">
<title>((Nothing, Nothing)) =&gt; Array[Double]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-202586.8701" rx="166.3404" ry="26.7407"/>
<text text-anchor="start" x="18657.114" y="-202590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Array[Double]</text>
<text text-anchor="middle" x="18766.614" y="-202575.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(128) =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node2808" class="node">
<title>Int(128) =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-202658.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-202662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(128) =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-202647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%s accesses protected %s from self type %s.&#39;) =&gt; ?{def format: ?} -->
<g id="node2809" class="node">
<title>String(&#39;%s accesses protected %s from self type %s.&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-202730.8701" rx="300.5408" ry="26.7407"/>
<text text-anchor="start" x="18562.114" y="-202734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s accesses protected %s from self type %s.&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-202719.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type]) -->
<g id="node2810" class="node">
<title>((List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-202802.8701" rx="441.8835" ry="26.7407"/>
<text text-anchor="start" x="18462.114" y="-202806.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type])</text>
<text text-anchor="middle" x="18766.614" y="-202791.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[Any]],Seq[String],That] -->
<g id="node2811" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[Any]],Seq[String],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-202874.8701" rx="294.3129" ry="26.7407"/>
<text text-anchor="start" x="18566.614" y="-202878.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[Any]],Seq[String],That]</text>
<text text-anchor="middle" x="18766.614" y="-202863.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[EtaExpansion.this.global.Symbol],Boolean,That] -->
<g id="node2812" class="node">
<title>scala.collection.generic.CanBuildFrom[List[EtaExpansion.this.global.Symbol],Boolean,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-202946.8701" rx="373.2048" ry="26.7407"/>
<text text-anchor="start" x="18510.614" y="-202950.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[EtaExpansion.this.global.Symbol],Boolean,That]</text>
<text text-anchor="middle" x="18766.614" y="-202935.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Unit, Unit)) =&gt; LambdaLift.this.global.Symbol -->
<g id="node2813" class="node">
<title>((Nothing, Unit, Unit)) =&gt; LambdaLift.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-203018.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="18605.614" y="-203022.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit, Unit)) =&gt; LambdaLift.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-203007.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Array[Byte] =&gt; Array[CNF.this.Clause] -->
<g id="node2814" class="node">
<title>Array[Byte] =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-203090.8701" rx="167.6687" ry="26.7407"/>
<text text-anchor="start" x="18656.114" y="-203094.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Byte] =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-203079.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[BoxUnbox.this.BoxConsumer],scala.tools.asm.tree.AbstractInsnNode,That] -->
<g id="node2815" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[BoxUnbox.this.BoxConsumer],scala.tools.asm.tree.AbstractInsnNode,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-203162.8701" rx="581.4836" ry="26.7407"/>
<text text-anchor="start" x="18363.614" y="-203166.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[BoxUnbox.this.BoxConsumer],scala.tools.asm.tree.AbstractInsnNode,That]</text>
<text text-anchor="middle" x="18766.614" y="-203151.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Parsers.this.global.AtBoundIdentifierAttachment.type] -->
<g id="node2816" class="node">
<title>scala.reflect.ClassTag[Parsers.this.global.AtBoundIdentifierAttachment.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-203234.8701" rx="310.3398" ry="26.7407"/>
<text text-anchor="start" x="18555.114" y="-203238.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Parsers.this.global.AtBoundIdentifierAttachment.type]</text>
<text text-anchor="middle" x="18766.614" y="-203223.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Type],Erasure.this.global.TypeTree,That] -->
<g id="node2817" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Type],Erasure.this.global.TypeTree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-203306.8701" rx="419.1287" ry="26.7407"/>
<text text-anchor="start" x="18478.114" y="-203310.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Type],Erasure.this.global.TypeTree,That]</text>
<text text-anchor="middle" x="18766.614" y="-203295.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Duplicators.this.global.Scope) =&gt; Duplicators.this.global.Type -->
<g id="node2818" class="node">
<title>(=&gt; Duplicators.this.global.Scope) =&gt; Duplicators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-203378.8701" rx="272.8864" ry="26.7407"/>
<text text-anchor="start" x="18581.614" y="-203382.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Duplicators.this.global.Scope) =&gt; Duplicators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-203367.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Iterable[Global.this.Symbol],Global.this.Symbol,That] -->
<g id="node2819" class="node">
<title>scala.collection.generic.CanBuildFrom[Iterable[Global.this.Symbol],Global.this.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-203450.8701" rx="377.6901" ry="26.7407"/>
<text text-anchor="start" x="18507.614" y="-203454.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Iterable[Global.this.Symbol],Global.this.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-203439.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Set[InlinerHeuristics.this.InlineRequest] =&gt; ?{def +=: ?} -->
<g id="node2820" class="node">
<title>scala.collection.immutable.Set[InlinerHeuristics.this.InlineRequest] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-203522.8701" rx="340.2368" ry="26.7407"/>
<text text-anchor="start" x="18534.114" y="-203526.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[InlinerHeuristics.this.InlineRequest] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-203511.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[AccessorSynthesis.this.global.TermSymbol] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node2821" class="node">
<title>Array[AccessorSynthesis.this.global.TermSymbol] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-203594.8701" rx="379.9328" ry="26.7407"/>
<text text-anchor="start" x="18506.114" y="-203598.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[AccessorSynthesis.this.global.TermSymbol] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-203583.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$2.type =&gt; ?{def stripPrefix: ?} -->
<g id="node2822" class="node">
<title>x$2.type =&gt; ?{def stripPrefix: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-203666.8701" rx="140.9288" ry="26.7407"/>
<text text-anchor="start" x="18675.114" y="-203670.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$2.type =&gt; ?{def stripPrefix: ?}</text>
<text text-anchor="middle" x="18766.614" y="-203655.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Constructors.this.global.Tree, Constructors.this.global.Tree)],d.global.Tree forSome { val d: Constructors.this.global.specializeTypes.Duplicator },List[Constructors.this.global.Tree]] -->
<g id="node2823" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Constructors.this.global.Tree, Constructors.this.global.Tree)],d.global.Tree forSome { val d: Constructors.this.global.specializeTypes.Duplicator },List[Constructors.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-203738.8701" rx="892.2375" ry="26.7407"/>
<text text-anchor="start" x="18143.614" y="-203742.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Constructors.this.global.Tree, Constructors.this.global.Tree)],d.global.Tree forSome { val d: Constructors.this.global.specializeTypes.Duplicator },List[Constructors.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-203727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (SymbolTrackers.this.global.Symbol, SymbolTrackers.this.global.Symbol) &lt;:&lt; (SymbolTrackers.this.global.Symbol, SymbolTrackers.this.global.Symbol) -->
<g id="node2824" class="node">
<title>(SymbolTrackers.this.global.Symbol, SymbolTrackers.this.global.Symbol) &lt;:&lt; (SymbolTrackers.this.global.Symbol, SymbolTrackers.this.global.Symbol)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-203810.8701" rx="612.209" ry="26.7407"/>
<text text-anchor="start" x="18341.614" y="-203814.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(SymbolTrackers.this.global.Symbol, SymbolTrackers.this.global.Symbol) &lt;:&lt; (SymbolTrackers.this.global.Symbol, SymbolTrackers.this.global.Symbol)</text>
<text text-anchor="middle" x="18766.614" y="-203799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[Erasure.this.global.Symbol]) =&gt; ?{def +=: ?} -->
<g id="node2825" class="node">
<title>(=&gt; scala.collection.immutable.Set[Erasure.this.global.Symbol]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-203882.8701" rx="329.5235" ry="26.7407"/>
<text text-anchor="start" x="18541.614" y="-203886.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[Erasure.this.global.Symbol]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-203871.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.mutable.ListBuffer[Flatten.this.global.Tree] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node2826" class="node">
<title>scala.collection.mutable.ListBuffer[Flatten.this.global.Tree] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-203954.8701" rx="416.4718" ry="26.7407"/>
<text text-anchor="start" x="18480.114" y="-203958.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.mutable.ListBuffer[Flatten.this.global.Tree] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-203943.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Taggers.this.c.universe.definitions.UnitTpe.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2827" class="node">
<title>Taggers.this.c.universe.definitions.UnitTpe.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-204026.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-204030.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Taggers.this.c.universe.definitions.UnitTpe.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-204015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Duplicators.this.global.Ident],Duplicators.this.global.Ident,That] -->
<g id="node2828" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Duplicators.this.global.Ident],Duplicators.this.global.Ident,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-204098.8701" rx="432.0845" ry="26.7407"/>
<text text-anchor="start" x="18469.114" y="-204102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Duplicators.this.global.Ident],Duplicators.this.global.Ident,That]</text>
<text text-anchor="middle" x="18766.614" y="-204087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[tools.nsc.io.Directory] -->
<g id="node2829" class="node">
<title>scala.reflect.ClassTag[tools.nsc.io.Directory]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-204170.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="18643.114" y="-204174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[tools.nsc.io.Directory]</text>
<text text-anchor="middle" x="18766.614" y="-204159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Set[Contexts.this.global.ImportSelector]) =&gt; ?{def +=: ?} -->
<g id="node2830" class="node">
<title>(=&gt; scala.collection.immutable.Set[Contexts.this.global.ImportSelector]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-204242.8701" rx="362.0773" ry="26.7407"/>
<text text-anchor="start" x="18518.614" y="-204246.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Set[Contexts.this.global.ImportSelector]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-204231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Type],ContextErrors.this.global.Symbol,That] -->
<g id="node2831" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Type],ContextErrors.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-204314.8701" rx="461.9816" ry="26.7407"/>
<text text-anchor="start" x="18448.114" y="-204318.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ContextErrors.this.global.Type],ContextErrors.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-204303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; MatchOptimization.this.global.Symbol -->
<g id="node2832" class="node">
<title>((Nothing, Nothing)) =&gt; MatchOptimization.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-204386.8701" rx="260.8448" ry="26.7407"/>
<text text-anchor="start" x="18590.114" y="-204390.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; MatchOptimization.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-204375.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- String(&#39;flatten&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2833" class="node">
<title>String(&#39;flatten&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-204458.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="18680.614" y="-204462.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;flatten&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-204447.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Int(1024) =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node2834" class="node">
<title>Int(1024) =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-204530.8701" rx="224.72" ry="26.7407"/>
<text text-anchor="start" x="18615.614" y="-204534.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(1024) =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-204519.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Some[Parsers.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node2835" class="node">
<title>Some[Parsers.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-204602.8701" rx="312.5824" ry="26.7407"/>
<text text-anchor="start" x="18553.614" y="-204606.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Some[Parsers.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-204591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Namers.this.global.Tree],Namers.this.global.LazyAnnotationInfo,List[Namers.this.global.AnnotationInfo]] -->
<g id="node2836" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Namers.this.global.Tree],Namers.this.global.LazyAnnotationInfo,List[Namers.this.global.AnnotationInfo]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-204674.8701" rx="598.4247" ry="26.7407"/>
<text text-anchor="start" x="18351.614" y="-204678.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Namers.this.global.Tree],Namers.this.global.LazyAnnotationInfo,List[Namers.this.global.AnnotationInfo]]</text>
<text text-anchor="middle" x="18766.614" y="-204663.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[TreesAndTypesDomain.this.Sym] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node2837" class="node">
<title>Option[TreesAndTypesDomain.this.Sym] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-204746.8701" rx="345.1362" ry="26.7407"/>
<text text-anchor="start" x="18530.614" y="-204750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[TreesAndTypesDomain.this.Sym] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-204735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],List[(Typers.this.global.Type, Typers.this.global.Symbol)],That] -->
<g id="node2838" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],List[(Typers.this.global.Type, Typers.this.global.Symbol)],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-204818.8701" rx="542.2018" ry="26.7407"/>
<text text-anchor="start" x="18391.114" y="-204822.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],List[(Typers.this.global.Type, Typers.this.global.Symbol)],That]</text>
<text text-anchor="middle" x="18766.614" y="-204807.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[TypeDiagnostics.this.global.Symbol]) =&gt; ?{def ::=: ?} -->
<g id="node2839" class="node">
<title>(=&gt; List[TypeDiagnostics.this.global.Symbol]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-204890.8701" rx="260.4308" ry="26.7407"/>
<text text-anchor="start" x="18590.614" y="-204894.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[TypeDiagnostics.this.global.Symbol]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-204879.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- prevSym.NameType =&gt; ?{def +: ?} -->
<g id="node2840" class="node">
<title>prevSym.NameType =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-204962.8701" rx="153.3844" ry="26.7407"/>
<text text-anchor="start" x="18666.114" y="-204966.6701" font-family="Times,serif" font-size="14.00" fill="#000000">prevSym.NameType =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-204951.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;%s definition needs %s because \&#39;%s\&#39; is used as a named argument in its body.&#39;) =&gt; ?{def format: ?} -->
<g id="node2841" class="node">
<title>String(&#39;%s definition needs %s because \&#39;%s\&#39; is used as a named argument in its body.&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-205034.8701" rx="428.5134" ry="26.7407"/>
<text text-anchor="start" x="18471.614" y="-205038.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;%s definition needs %s because &#39;%s&#39; is used as a named argument in its body.&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-205023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Long =&gt; Parsers.this.Offset -->
<g id="node2842" class="node">
<title>Long =&gt; Parsers.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-205106.8701" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="18690.114" y="-205110.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Long =&gt; Parsers.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-205095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.Tree],MatchTranslation.this.global.Tree,That] -->
<g id="node2843" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.Tree],MatchTranslation.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-205178.8701" rx="475.7658" ry="26.7407"/>
<text text-anchor="start" x="18438.114" y="-205182.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.Tree],MatchTranslation.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-205167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.Queue[scala.tools.asm.tree.AbstractInsnNode],scala.tools.asm.tree.AbstractInsnNode,That] -->
<g id="node2844" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.Queue[scala.tools.asm.tree.AbstractInsnNode],scala.tools.asm.tree.AbstractInsnNode,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-205250.8701" rx="614.4516" ry="26.7407"/>
<text text-anchor="start" x="18340.114" y="-205254.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.Queue[scala.tools.asm.tree.AbstractInsnNode],scala.tools.asm.tree.AbstractInsnNode,That]</text>
<text text-anchor="middle" x="18766.614" y="-205239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- Option[String] &lt;:&lt; Option[String] -->
<g id="node2845" class="node">
<title>Option[String] &lt;:&lt; Option[String]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-205322.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="18673.114" y="-205326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[String] &lt;:&lt; Option[String]</text>
<text text-anchor="middle" x="18766.614" y="-205311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Float =&gt; String -->
<g id="node2846" class="node">
<title>Float =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-205394.8701" rx="71.3357" ry="26.7407"/>
<text text-anchor="start" x="18724.114" y="-205398.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Float =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-205383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; Boolean) =&gt; ?{def |=: ?} -->
<g id="node2847" class="node">
<title>(=&gt; Boolean) =&gt; ?{def |=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-205466.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="18684.614" y="-205470.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Boolean) =&gt; ?{def |=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-205455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; Extractors.this.global.Symbol -->
<g id="node2848" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; Extractors.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-205538.8701" rx="297.884" ry="26.7407"/>
<text text-anchor="start" x="18564.114" y="-205542.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; Extractors.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-205527.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 2ms</text>
</g>
<!-- JavaScanners.this.global.javanme.PRIVATEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2849" class="node">
<title>JavaScanners.this.global.javanme.PRIVATEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-205610.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="18577.114" y="-205614.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.PRIVATEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-205599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Char(&#39;$&#39;)) =&gt; String -->
<g id="node2850" class="node">
<title>(=&gt; Char(&#39;$&#39;)) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-205682.8701" rx="105.218" ry="26.7407"/>
<text text-anchor="start" x="18700.114" y="-205686.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Char(&#39;$&#39;)) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-205671.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.plugins.Plugin],String,That] -->
<g id="node2851" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.plugins.Plugin],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-205754.8701" rx="350.0357" ry="26.7407"/>
<text text-anchor="start" x="18527.114" y="-205758.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.plugins.Plugin],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-205743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Char] -->
<g id="node2852" class="node">
<title>((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-205826.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="18620.614" y="-205830.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Char]</text>
<text text-anchor="middle" x="18766.614" y="-205815.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.DOkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2853" class="node">
<title>Scanners.this.global.nme.DOkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-205898.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-205902.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.DOkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-205887.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Char =&gt; CharSequence -->
<g id="node2854" class="node">
<title>Char =&gt; CharSequence</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-205970.8701" rx="102.561" ry="26.7407"/>
<text text-anchor="start" x="18702.114" y="-205974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Char =&gt; CharSequence</text>
<text text-anchor="middle" x="18766.614" y="-205959.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Tree],Erasure.this.global.Tree,List[Erasure.this.global.Tree]] -->
<g id="node2855" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Tree],Erasure.this.global.Tree,List[Erasure.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-206042.8701" rx="493.6211" ry="26.7407"/>
<text text-anchor="start" x="18425.614" y="-206046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Erasure.this.global.Tree],Erasure.this.global.Tree,List[Erasure.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-206031.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Holes.this.global.Type, scala.reflect.quasiquotes.Rank)],(Holes.this.global.Type, scala.reflect.quasiquotes.Rank),List[(Holes.this.global.Type, scala.reflect.quasiquotes.Rank)]] -->
<g id="node2856" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Holes.this.global.Type, scala.reflect.quasiquotes.Rank)],(Holes.this.global.Type, scala.reflect.quasiquotes.Rank),List[(Holes.this.global.Type, scala.reflect.quasiquotes.Rank)]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-206114.8701" rx="864.169" ry="26.7407"/>
<text text-anchor="start" x="18163.614" y="-206118.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Holes.this.global.Type, scala.reflect.quasiquotes.Rank)],(Holes.this.global.Type, scala.reflect.quasiquotes.Rank),List[(Holes.this.global.Type, scala.reflect.quasiquotes.Rank)]]</text>
<text text-anchor="middle" x="18766.614" y="-206103.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- Array[Object] =&gt; ?{def foreach: ?} -->
<g id="node2857" class="node">
<title>Array[Object] =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-206186.8701" rx="149.8133" ry="26.7407"/>
<text text-anchor="start" x="18668.614" y="-206190.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Object] =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-206175.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; RefChecks.this.global.analyzer.global.Symbol -->
<g id="node2858" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; RefChecks.this.global.analyzer.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-206258.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="18560.614" y="-206262.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; RefChecks.this.global.analyzer.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-206247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;RESIDUAL: \&#39;scala %s\&#39;\n&#39;) =&gt; ?{def format: ?} -->
<g id="node2859" class="node">
<title>String(&#39;RESIDUAL: \&#39;scala %s\&#39;\n&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-206340.8701" rx="129.3012" ry="37.4533"/>
<text text-anchor="middle" x="18766.614" y="-206352.1701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;RESIDUAL: &#39;scala %s&#39;</text>
<text text-anchor="start" x="18683.114" y="-206337.1701" font-family="Times,serif" font-size="14.00" fill="#000000">&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-206322.1701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Macros.this.global.Scope =&gt; Macros.this.global.Type -->
<g id="node2860" class="node">
<title>Macros.this.global.Scope =&gt; Macros.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-206422.8701" rx="221.149" ry="26.7407"/>
<text text-anchor="start" x="18618.114" y="-206426.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Macros.this.global.Scope =&gt; Macros.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-206411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- (Any =&gt; Nothing) =&gt; scala.tools.nsc.GenericRunnerSettings -->
<g id="node2861" class="node">
<title>(Any =&gt; Nothing) =&gt; scala.tools.nsc.GenericRunnerSettings</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-206494.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="18599.614" y="-206498.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Any =&gt; Nothing) =&gt; scala.tools.nsc.GenericRunnerSettings</text>
<text text-anchor="middle" x="18766.614" y="-206483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[LambdaLift.this.global.Tree]) =&gt; ?{def ::=: ?} -->
<g id="node2862" class="node">
<title>(=&gt; List[LambdaLift.this.global.Tree]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-206566.8701" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="18612.614" y="-206570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[LambdaLift.this.global.Tree]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-206555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- s.type =&gt; ?{def forall: ?} -->
<g id="node2863" class="node">
<title>s.type =&gt; ?{def forall: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-206638.8701" rx="110.1176" ry="26.7407"/>
<text text-anchor="start" x="18696.614" y="-206642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def forall: ?}</text>
<text text-anchor="middle" x="18766.614" y="-206627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchAnalysis.this.global.Symbol],MatchAnalysis.this.global.Symbol,List[MatchAnalysis.this.global.Symbol]] -->
<g id="node2864" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchAnalysis.this.global.Symbol],MatchAnalysis.this.global.Symbol,List[MatchAnalysis.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-206710.8701" rx="618.9369" ry="26.7407"/>
<text text-anchor="start" x="18337.114" y="-206714.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchAnalysis.this.global.Symbol],MatchAnalysis.this.global.Symbol,List[MatchAnalysis.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-206699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[AccessorSynthesis.this.global.Tree],AccessorSynthesis.this.global.Symbol,That] -->
<g id="node2865" class="node">
<title>scala.collection.generic.CanBuildFrom[List[AccessorSynthesis.this.global.Tree],AccessorSynthesis.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-206782.8701" rx="494.9495" ry="26.7407"/>
<text text-anchor="start" x="18424.614" y="-206786.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[AccessorSynthesis.this.global.Tree],AccessorSynthesis.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-206771.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Unit)) =&gt; SpecializeTypes.this.global.Symbol -->
<g id="node2866" class="node">
<title>(=&gt; (Nothing, Nothing, Unit)) =&gt; SpecializeTypes.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-206854.8701" rx="284.0141" ry="26.7407"/>
<text text-anchor="start" x="18573.614" y="-206858.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Unit)) =&gt; SpecializeTypes.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-206843.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],scala.reflect.internal.Variance,List[scala.tools.nsc.Variance]] -->
<g id="node2867" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],scala.reflect.internal.Variance,List[scala.tools.nsc.Variance]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-206926.8701" rx="519.0328" ry="26.7407"/>
<text text-anchor="start" x="18407.614" y="-206930.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.Symbol],scala.reflect.internal.Variance,List[scala.tools.nsc.Variance]]</text>
<text text-anchor="middle" x="18766.614" y="-206915.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.mutable.Set[Implicits.this.global.Type] -->
<g id="node2868" class="node">
<title>scala.collection.mutable.Set[Implicits.this.global.Type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-206998.8701" rx="226.0486" ry="26.7407"/>
<text text-anchor="start" x="18614.614" y="-207002.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.mutable.Set[Implicits.this.global.Type]</text>
<text text-anchor="middle" x="18766.614" y="-206987.6701" font-family="Times,serif" font-size="14.00" fill="#000000">16 times = 1ms</text>
</g>
<!-- java.util.jar.Attributes.Name.MANIFEST_VERSION.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2869" class="node">
<title>java.util.jar.Attributes.Name.MANIFEST_VERSION.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-207070.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="18560.614" y="-207074.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.jar.Attributes.Name.MANIFEST_VERSION.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-207059.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;(?i)m(\\d*)&#39;) =&gt; ?{def r: ?} -->
<g id="node2870" class="node">
<title>String(&#39;(?i)m(\\d*)&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-207142.8701" rx="142.6713" ry="26.7407"/>
<text text-anchor="start" x="18673.614" y="-207146.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;(?i)m(\d*)&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-207131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[settings.Setting],String,That] -->
<g id="node2871" class="node">
<title>scala.collection.generic.CanBuildFrom[List[settings.Setting],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-207214.8701" rx="294.7271" ry="26.7407"/>
<text text-anchor="start" x="18566.114" y="-207218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[settings.Setting],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-207203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Implicits.this.global.TypeVar],Implicits.this.global.TypeConstraint,Any] -->
<g id="node2872" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Implicits.this.global.TypeVar],Implicits.this.global.TypeConstraint,Any]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-207286.8701" rx="465.0526" ry="26.7407"/>
<text text-anchor="start" x="18445.614" y="-207290.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Implicits.this.global.TypeVar],Implicits.this.global.TypeConstraint,Any]</text>
<text text-anchor="middle" x="18766.614" y="-207275.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- args.type =&gt; ?{def dropRight: ?} -->
<g id="node2873" class="node">
<title>args.type =&gt; ?{def dropRight: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-207358.8701" rx="140.9288" ry="26.7407"/>
<text text-anchor="start" x="18675.114" y="-207362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">args.type =&gt; ?{def dropRight: ?}</text>
<text text-anchor="middle" x="18766.614" y="-207347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.FINALLYkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2874" class="node">
<title>Scanners.this.global.nme.FINALLYkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-207430.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="18599.614" y="-207434.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.FINALLYkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-207419.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;caught %s: while typing %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2875" class="node">
<title>String(&#39;caught %s: while typing %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-207502.8701" rx="234.5191" ry="26.7407"/>
<text text-anchor="start" x="18608.614" y="-207506.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;caught %s: while typing %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-207491.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Iterable[scala.collection.immutable.Set[TypeDiagnostics.this.TypeDiag]],scala.collection.immutable.Set[TypeDiagnostics.this.TypeDiag],That] -->
<g id="node2876" class="node">
<title>scala.collection.generic.CanBuildFrom[Iterable[scala.collection.immutable.Set[TypeDiagnostics.this.TypeDiag]],scala.collection.immutable.Set[TypeDiagnostics.this.TypeDiag],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-207574.8701" rx="721.4979" ry="26.7407"/>
<text text-anchor="start" x="18264.614" y="-207578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Iterable[scala.collection.immutable.Set[TypeDiagnostics.this.TypeDiag]],scala.collection.immutable.Set[TypeDiagnostics.this.TypeDiag],That]</text>
<text text-anchor="middle" x="18766.614" y="-207563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Extractors.this.global.Type -->
<g id="node2877" class="node">
<title>(=&gt; Unit) =&gt; Extractors.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-207646.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="18653.614" y="-207650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Extractors.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-207635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Delambdafy.this.global.SAMFunction] -->
<g id="node2878" class="node">
<title>scala.reflect.ClassTag[Delambdafy.this.global.SAMFunction]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-207718.8701" rx="251.0458" ry="26.7407"/>
<text text-anchor="start" x="18597.114" y="-207722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Delambdafy.this.global.SAMFunction]</text>
<text text-anchor="middle" x="18766.614" y="-207707.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Array[scala.tools.asm.Type] =&gt; ?{def toList: ?} -->
<g id="node2879" class="node">
<title>Array[scala.tools.asm.Type] =&gt; ?{def toList: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-207790.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="18634.114" y="-207794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[scala.tools.asm.Type] =&gt; ?{def toList: ?}</text>
<text text-anchor="middle" x="18766.614" y="-207779.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ss.PhasesSetting],List[String],That] -->
<g id="node2880" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ss.PhasesSetting],List[String],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-207862.8701" rx="320.1388" ry="26.7407"/>
<text text-anchor="start" x="18548.114" y="-207866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ss.PhasesSetting],List[String],That]</text>
<text text-anchor="middle" x="18766.614" y="-207851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;tree tpe&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2881" class="node">
<title>String(&#39;tree tpe&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-207934.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-207938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;tree tpe&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-207923.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- s1.type =&gt; ?{def take: ?} -->
<g id="node2882" class="node">
<title>s1.type =&gt; ?{def take: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-208006.8701" rx="110.1176" ry="26.7407"/>
<text text-anchor="start" x="18696.614" y="-208010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s1.type =&gt; ?{def take: ?}</text>
<text text-anchor="middle" x="18766.614" y="-207995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchTranslator.this.TreeMaker],MatchTranslator.this.TreeMaker,That] -->
<g id="node2883" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchTranslator.this.TreeMaker],MatchTranslator.this.TreeMaker,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-208078.8701" rx="465.0526" ry="26.7407"/>
<text text-anchor="start" x="18445.614" y="-208082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchTranslator.this.TreeMaker],MatchTranslator.this.TreeMaker,That]</text>
<text text-anchor="middle" x="18766.614" y="-208067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Checkable.this.global.Symbol],Checkable.this.global.Type,That] -->
<g id="node2884" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Checkable.this.global.Symbol],Checkable.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-208150.8701" rx="434.3272" ry="26.7407"/>
<text text-anchor="start" x="18467.614" y="-208154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Checkable.this.global.Symbol],Checkable.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-208139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Any =&gt; Nothing) =&gt; MethodSynthesis.this.global.Type -->
<g id="node2885" class="node">
<title>(=&gt; Any =&gt; Nothing) =&gt; MethodSynthesis.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-208222.8701" rx="246.1463" ry="26.7407"/>
<text text-anchor="start" x="18600.614" y="-208226.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Any =&gt; Nothing) =&gt; MethodSynthesis.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-208211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- from.type =&gt; ?{def OBJ_EQ: ?} -->
<g id="node2886" class="node">
<title>from.type =&gt; ?{def OBJ_EQ: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-208294.8701" rx="139.1004" ry="26.7407"/>
<text text-anchor="start" x="18676.114" y="-208298.6701" font-family="Times,serif" font-size="14.00" fill="#000000">from.type =&gt; ?{def OBJ_EQ: ?}</text>
<text text-anchor="middle" x="18766.614" y="-208283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- includedFiles.type =&gt; ?{def isEmpty: ?} -->
<g id="node2887" class="node">
<title>includedFiles.type =&gt; ?{def isEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-208366.8701" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="18654.614" y="-208370.6701" font-family="Times,serif" font-size="14.00" fill="#000000">includedFiles.type =&gt; ?{def isEmpty: ?}</text>
<text text-anchor="middle" x="18766.614" y="-208355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[ExtensionMethods.this.global.Name],ExtensionMethods.this.global.Symbol,That] -->
<g id="node2888" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[ExtensionMethods.this.global.Name],ExtensionMethods.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-208438.8701" rx="620.6795" ry="26.7407"/>
<text text-anchor="start" x="18335.614" y="-208442.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[ExtensionMethods.this.global.Name],ExtensionMethods.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-208427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Unit] =&gt; Array[CNF.this.Clause] -->
<g id="node2889" class="node">
<title>Array[Unit] =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-208510.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="18656.614" y="-208514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Unit] =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-208499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Namers.this.global.ValDef],Namers.this.global.ValDef,That] -->
<g id="node2890" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Namers.this.global.ValDef],Namers.this.global.ValDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-208582.8701" rx="420.9572" ry="26.7407"/>
<text text-anchor="start" x="18477.114" y="-208586.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Namers.this.global.ValDef],Namers.this.global.ValDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-208571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (String, String) &lt;:&lt; (T, U) -->
<g id="node2891" class="node">
<title>(String, String) &lt;:&lt; (T, U)</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-208654.8701" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="18694.114" y="-208658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(String, String) &lt;:&lt; (T, U)</text>
<text text-anchor="middle" x="18766.614" y="-208643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.util.Try[(scala.tools.nsc.plugins.PluginDescription, scala.reflect.internal.util.ScalaClassLoader)]],scala.util.Try[scala.tools.nsc.plugins.Plugin.AnyClass],That] -->
<g id="node2892" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.util.Try[(scala.tools.nsc.plugins.PluginDescription, scala.reflect.internal.util.ScalaClassLoader)]],scala.util.Try[scala.tools.nsc.plugins.Plugin.AnyClass],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-208726.8701" rx="816.0025" ry="26.7407"/>
<text text-anchor="start" x="18197.614" y="-208730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.util.Try[(scala.tools.nsc.plugins.PluginDescription, scala.reflect.internal.util.ScalaClassLoader)]],scala.util.Try[scala.tools.nsc.plugins.Plugin.AnyClass],That]</text>
<text text-anchor="middle" x="18766.614" y="-208715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[T] =&gt; ?{def +:=: ?} -->
<g id="node2893" class="node">
<title>List[T] =&gt; ?{def +:=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-208798.8701" rx="108.375" ry="26.7407"/>
<text text-anchor="start" x="18698.114" y="-208802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[T] =&gt; ?{def +:=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-208787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.DocDef,List[Typers.this.global.Tree]] -->
<g id="node2894" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.DocDef,List[Typers.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-208870.8701" rx="497.6064" ry="26.7407"/>
<text text-anchor="start" x="18422.614" y="-208874.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.DocDef,List[Typers.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-208859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;specialization transforms %s%s parents to %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2895" class="node">
<title>String(&#39;specialization transforms %s%s parents to %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-208942.8701" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="18559.114" y="-208946.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;specialization transforms %s%s parents to %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-208931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; TypeAdaptingTransformer.this.global.Tree -->
<g id="node2896" class="node">
<title>((Nothing, Nothing)) =&gt; TypeAdaptingTransformer.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-209014.8701" rx="275.5435" ry="26.7407"/>
<text text-anchor="start" x="18579.614" y="-209018.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; TypeAdaptingTransformer.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-209003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.scalaPrimitives.global.Symbol -->
<g id="node2897" class="node">
<title>((Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.scalaPrimitives.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-209086.8701" rx="349.1216" ry="26.7407"/>
<text text-anchor="start" x="18527.614" y="-209090.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; BCodeBodyBuilder.this.global.scalaPrimitives.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-209075.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(MatchTranslation.this.global.Symbol, Int)],MatchTranslation.this.global.Symbol,That] -->
<g id="node2898" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(MatchTranslation.this.global.Symbol, Int)],MatchTranslation.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-209158.8701" rx="523.0181" ry="26.7407"/>
<text text-anchor="start" x="18404.614" y="-209162.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(MatchTranslation.this.global.Symbol, Int)],MatchTranslation.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-209147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; TreeAndTypeAnalysis.this.global.Tree) =&gt; TreeAndTypeAnalysis.this.global.Type -->
<g id="node2899" class="node">
<title>(=&gt; TreeAndTypeAnalysis.this.global.Tree) =&gt; TreeAndTypeAnalysis.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-209230.8701" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="18526.114" y="-209234.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; TreeAndTypeAnalysis.this.global.Tree) =&gt; TreeAndTypeAnalysis.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-209219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Validators.this.global.Symbol],Validators.this.global.analyzer.global.TypeVar,That] -->
<g id="node2900" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Validators.this.global.Symbol],Validators.this.global.analyzer.global.TypeVar,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-209302.8701" rx="509.2338" ry="26.7407"/>
<text text-anchor="start" x="18414.614" y="-209306.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Validators.this.global.Symbol],Validators.this.global.analyzer.global.TypeVar,That]</text>
<text text-anchor="middle" x="18766.614" y="-209291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 68ms</text>
</g>
<!-- scala.tools.nsc.typechecker.ContextMode.AmbiguousErrors.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2901" class="node">
<title>scala.tools.nsc.typechecker.ContextMode.AmbiguousErrors.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-209374.8701" rx="326.8668" ry="26.7407"/>
<text text-anchor="start" x="18543.614" y="-209378.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.ContextMode.AmbiguousErrors.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-209363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[SpecializeTypes.this.global.Symbol] =&gt; SpecializeTypes.this.global.Type -->
<g id="node2902" class="node">
<title>List[SpecializeTypes.this.global.Symbol] =&gt; SpecializeTypes.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-209446.8701" rx="316.1535" ry="26.7407"/>
<text text-anchor="start" x="18551.114" y="-209450.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[SpecializeTypes.this.global.Symbol] =&gt; SpecializeTypes.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-209435.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Char]) =&gt; Array[Class[_]] -->
<g id="node2903" class="node">
<title>(=&gt; Array[Char]) =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-209518.8701" rx="156.9554" ry="26.7407"/>
<text text-anchor="start" x="18663.614" y="-209522.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Char]) =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-209507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (Mixin.this.global.Symbol, List[Mixin.this.global.Symbol]) &lt;:&lt; (Mixin.this.global.Symbol, List[Mixin.this.global.Symbol]) -->
<g id="node2904" class="node">
<title>(Mixin.this.global.Symbol, List[Mixin.this.global.Symbol]) &lt;:&lt; (Mixin.this.global.Symbol, List[Mixin.this.global.Symbol])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-209590.8701" rx="495.8638" ry="26.7407"/>
<text text-anchor="start" x="18424.114" y="-209594.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(Mixin.this.global.Symbol, List[Mixin.this.global.Symbol]) &lt;:&lt; (Mixin.this.global.Symbol, List[Mixin.this.global.Symbol])</text>
<text text-anchor="middle" x="18766.614" y="-209579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- defines.type =&gt; ?{def isEmpty: ?} -->
<g id="node2905" class="node">
<title>defines.type =&gt; ?{def isEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-209662.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="18671.614" y="-209666.6701" font-family="Times,serif" font-size="14.00" fill="#000000">defines.type =&gt; ?{def isEmpty: ?}</text>
<text text-anchor="middle" x="18766.614" y="-209651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Usage: %s &lt;options&gt; &lt;source files&gt;&#39;) =&gt; ?{def format: ?} -->
<g id="node2906" class="node">
<title>String(&#39;Usage: %s &lt;options&gt; &lt;source files&gt;&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-209734.8701" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="18585.114" y="-209738.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Usage: %s &lt;options&gt; &lt;source files&gt;&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-209723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Fields.this.global.Symbol],Fields.this.global.Symbol,That] -->
<g id="node2907" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Fields.this.global.Symbol],Fields.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-209806.8701" rx="410.6582" ry="26.7407"/>
<text text-anchor="start" x="18484.114" y="-209810.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Fields.this.global.Symbol],Fields.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-209795.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- FormatInterpolator.this.c.universe.TypeTag[java.util.Formattable] -->
<g id="node2908" class="node">
<title>FormatInterpolator.this.c.universe.TypeTag[java.util.Formattable]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-209878.8701" rx="267.0729" ry="26.7407"/>
<text text-anchor="start" x="18585.614" y="-209882.6701" font-family="Times,serif" font-size="14.00" fill="#000000">FormatInterpolator.this.c.universe.TypeTag[java.util.Formattable]</text>
<text text-anchor="middle" x="18766.614" y="-209867.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- String(&#39;Allowing %s to override %s because %s &lt;:&lt; %s&#39;) =&gt; ?{def format: ?} -->
<g id="node2909" class="node">
<title>String(&#39;Allowing %s to override %s because %s &lt;:&lt; %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-209950.8701" rx="315.2393" ry="26.7407"/>
<text text-anchor="start" x="18551.614" y="-209954.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Allowing %s to override %s because %s &lt;:&lt; %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-209939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- CleanUp.this.global.gen.global.Tree =&gt; ?{def GETCLASS: ?} -->
<g id="node2910" class="node">
<title>CleanUp.this.global.gen.global.Tree =&gt; ?{def GETCLASS: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-210022.8701" rx="255.0313" ry="26.7407"/>
<text text-anchor="start" x="18594.114" y="-210026.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CleanUp.this.global.gen.global.Tree =&gt; ?{def GETCLASS: ?}</text>
<text text-anchor="middle" x="18766.614" y="-210011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- SpecializeTypes.this.global.TermName =&gt; ?{def setterName: ?} -->
<g id="node2911" class="node">
<title>SpecializeTypes.this.global.TermName =&gt; ?{def setterName: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-210094.8701" rx="263.5019" ry="26.7407"/>
<text text-anchor="start" x="18588.114" y="-210098.6701" font-family="Times,serif" font-size="14.00" fill="#000000">SpecializeTypes.this.global.TermName =&gt; ?{def setterName: ?}</text>
<text text-anchor="middle" x="18766.614" y="-210083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unapplies.this.global.Ident =&gt; ?{def DOT: ?} -->
<g id="node2912" class="node">
<title>Unapplies.this.global.Ident =&gt; ?{def DOT: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-210166.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="18640.114" y="-210170.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unapplies.this.global.Ident =&gt; ?{def DOT: ?}</text>
<text text-anchor="middle" x="18766.614" y="-210155.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Contexts.this.global.ScopeEntry],Contexts.this.global.Symbol,List[Contexts.this.global.Symbol]] -->
<g id="node2913" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Contexts.this.global.ScopeEntry],Contexts.this.global.Symbol,List[Contexts.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-210238.8701" rx="560.0571" ry="26.7407"/>
<text text-anchor="start" x="18378.614" y="-210242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Contexts.this.global.ScopeEntry],Contexts.this.global.Symbol,List[Contexts.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-210227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Option[BTypesFromSymbols.this.global.Type] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node2914" class="node">
<title>Option[BTypesFromSymbols.this.global.Type] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-210310.8701" rx="365.6484" ry="26.7407"/>
<text text-anchor="start" x="18516.114" y="-210314.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[BTypesFromSymbols.this.global.Type] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-210299.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Parsers.this.OpInfo] =&gt; ?{def ::=: ?} -->
<g id="node2915" class="node">
<title>List[Parsers.this.OpInfo] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-210382.8701" rx="173.4827" ry="26.7407"/>
<text text-anchor="start" x="18652.114" y="-210386.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Parsers.this.OpInfo] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-210371.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;\nOptions for plugin \&#39;%s\&#39;:\n%s\n&#39;) =&gt; ?{def format: ?} -->
<g id="node2916" class="node">
<title>String(&#39;\nOptions for plugin \&#39;%s\&#39;:\n%s\n&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-210486.8701" rx="103.4757" ry="58.8803"/>
<text text-anchor="middle" x="18766.614" y="-210513.1701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;</text>
<text text-anchor="middle" x="18766.614" y="-210498.1701" font-family="Times,serif" font-size="14.00" fill="#000000">Options for plugin &#39;%s&#39;:</text>
<text text-anchor="middle" x="18766.614" y="-210483.1701" font-family="Times,serif" font-size="14.00" fill="#000000">%s</text>
<text text-anchor="start" x="18701.614" y="-210468.1701" font-family="Times,serif" font-size="14.00" fill="#000000">&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-210453.1701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ToolBoxGlobal.this.FreeTypeSymbol],String,That] -->
<g id="node2917" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ToolBoxGlobal.this.FreeTypeSymbol],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-210590.8701" rx="381.6754" ry="26.7407"/>
<text text-anchor="start" x="18504.614" y="-210594.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ToolBoxGlobal.this.FreeTypeSymbol],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-210579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.transform.patmat.Lit],(Solver.this.Sym, Boolean),That] -->
<g id="node2918" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.transform.patmat.Lit],(Solver.this.Sym, Boolean),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-210662.8701" rx="457.4962" ry="26.7407"/>
<text text-anchor="start" x="18451.114" y="-210666.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.transform.patmat.Lit],(Solver.this.Sym, Boolean),That]</text>
<text text-anchor="middle" x="18766.614" y="-210651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Short] =&gt; Array[Class[_]] -->
<g id="node2919" class="node">
<title>Array[Short] =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-210734.8701" rx="138.6859" ry="26.7407"/>
<text text-anchor="start" x="18676.614" y="-210738.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Short] =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-210723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; DestructureTypes.this.global.Type -->
<g id="node2920" class="node">
<title>((Nothing, Nothing)) =&gt; DestructureTypes.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-210806.8701" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="18603.114" y="-210810.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; DestructureTypes.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-210795.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.SHORT.type),That] -->
<g id="node2921" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.SHORT.type),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-210878.8701" rx="449.0256" ry="26.7407"/>
<text text-anchor="start" x="18457.114" y="-210882.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Int],(Int, CoreBTypesFromSymbols.this.bTypes.SHORT.type),That]</text>
<text text-anchor="middle" x="18766.614" y="-210867.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Parsers.this.global.Position -->
<g id="node2922" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Parsers.this.global.Position</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-210950.8701" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="18587.614" y="-210954.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Parsers.this.global.Position</text>
<text text-anchor="middle" x="18766.614" y="-210939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- NamesDefaults.this.global.Symbol =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2923" class="node">
<title>NamesDefaults.this.global.Symbol =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-211022.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="18625.114" y="-211026.6701" font-family="Times,serif" font-size="14.00" fill="#000000">NamesDefaults.this.global.Symbol =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-211011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.CounterExample],(MatchAnalyzer.this.CounterExample, MatchAnalyzer.this.CounterExample),That] -->
<g id="node2924" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.CounterExample],(MatchAnalyzer.this.CounterExample, MatchAnalyzer.this.CounterExample),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-211094.8701" rx="656.8044" ry="26.7407"/>
<text text-anchor="start" x="18310.114" y="-211098.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchAnalyzer.this.CounterExample],(MatchAnalyzer.this.CounterExample, MatchAnalyzer.this.CounterExample),That]</text>
<text text-anchor="middle" x="18766.614" y="-211083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.util.List[_$1] =&gt; ?{def asScala: ?} -->
<g id="node2925" class="node">
<title>java.util.List[_$1] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-211166.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="18658.114" y="-211170.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.List[_$1] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-211155.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[CommonSubconditionElimination.this.Prop],CommonSubconditionElimination.this.Prop,Set[CommonSubconditionElimination.this.Prop]] -->
<g id="node2926" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[CommonSubconditionElimination.this.Prop],CommonSubconditionElimination.this.Prop,Set[CommonSubconditionElimination.this.Prop]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-211238.8701" rx="828.9584" ry="26.7407"/>
<text text-anchor="start" x="18188.614" y="-211242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[CommonSubconditionElimination.this.Prop],CommonSubconditionElimination.this.Prop,Set[CommonSubconditionElimination.this.Prop]]</text>
<text text-anchor="middle" x="18766.614" y="-211227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Type,List[Typers.this.global.Type]] -->
<g id="node2927" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Type,List[Typers.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-211310.8701" rx="489.1359" ry="26.7407"/>
<text text-anchor="start" x="18428.614" y="-211314.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Type,List[Typers.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-211299.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- Scanners.this.global.nme.PRIVATEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2928" class="node">
<title>Scanners.this.global.nme.PRIVATEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-211382.8701" rx="246.5607" ry="26.7407"/>
<text text-anchor="start" x="18600.114" y="-211386.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.PRIVATEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-211371.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Map[String,String] =&gt; ?{def asJava: ?} -->
<g id="node2929" class="node">
<title>scala.collection.immutable.Map[String,String] =&gt; ?{def asJava: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-211454.8701" rx="272.4724" ry="26.7407"/>
<text text-anchor="start" x="18582.114" y="-211458.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[String,String] =&gt; ?{def asJava: ?}</text>
<text text-anchor="middle" x="18766.614" y="-211443.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[scala.tools.nsc.typechecker.Fingerprint] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node2930" class="node">
<title>List[scala.tools.nsc.typechecker.Fingerprint] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-211526.8701" rx="355.8495" ry="26.7407"/>
<text text-anchor="start" x="18523.114" y="-211530.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[scala.tools.nsc.typechecker.Fingerprint] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-211515.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Infer.this.global.Scope =&gt; Infer.this.global.Type -->
<g id="node2931" class="node">
<title>Infer.this.global.Scope =&gt; Infer.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-211598.8701" rx="200.2225" ry="26.7407"/>
<text text-anchor="start" x="18633.114" y="-211602.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Infer.this.global.Scope =&gt; Infer.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-211587.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- c.type =&gt; ?{def isDigit: ?} -->
<g id="node2932" class="node">
<title>c.type =&gt; ?{def isDigit: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-211670.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="18692.614" y="-211674.6701" font-family="Times,serif" font-size="14.00" fill="#000000">c.type =&gt; ?{def isDigit: ?}</text>
<text text-anchor="middle" x="18766.614" y="-211659.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[Errors.this.global.Type],String,That] -->
<g id="node2933" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[Errors.this.global.Type],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-211742.8701" rx="324.624" ry="26.7407"/>
<text text-anchor="start" x="18545.114" y="-211746.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[Errors.this.global.Type],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-211731.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- String =&gt; ?{def foreach: ?} -->
<g id="node2934" class="node">
<title>String =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-211814.8701" rx="118.5882" ry="26.7407"/>
<text text-anchor="start" x="18690.614" y="-211818.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-211803.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def drop: ?} -->
<g id="node2935" class="node">
<title>String =&gt; ?{def drop: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-211886.8701" rx="107.4605" ry="26.7407"/>
<text text-anchor="start" x="18698.614" y="-211890.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def drop: ?}</text>
<text text-anchor="middle" x="18766.614" y="-211875.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; CharSequence -->
<g id="node2936" class="node">
<title>(=&gt; Unit) =&gt; CharSequence</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-211958.8701" rx="121.7449" ry="26.7407"/>
<text text-anchor="start" x="18688.614" y="-211962.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; CharSequence</text>
<text text-anchor="middle" x="18766.614" y="-211947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- until.type =&gt; ?{def tail: ?} -->
<g id="node2937" class="node">
<title>until.type =&gt; ?{def tail: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-212030.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="18692.614" y="-212034.6701" font-family="Times,serif" font-size="14.00" fill="#000000">until.type =&gt; ?{def tail: ?}</text>
<text text-anchor="middle" x="18766.614" y="-212019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Unit)) =&gt; TailCalls.this.global.Tree -->
<g id="node2938" class="node">
<title>((Nothing, Unit)) =&gt; TailCalls.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-212102.8701" rx="193.0803" ry="26.7407"/>
<text text-anchor="start" x="18638.114" y="-212106.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Unit)) =&gt; TailCalls.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-212091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[scala.tools.asm.Label] =&gt; ?{def ::=: ?} -->
<g id="node2939" class="node">
<title>List[scala.tools.asm.Label] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-212174.8701" rx="182.3671" ry="26.7407"/>
<text text-anchor="start" x="18645.614" y="-212178.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[scala.tools.asm.Label] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-212163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[AnyRef],Class[_],That] -->
<g id="node2940" class="node">
<title>scala.collection.generic.CanBuildFrom[List[AnyRef],Class[_],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-212246.8701" rx="275.1291" ry="26.7407"/>
<text text-anchor="start" x="18580.114" y="-212250.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[AnyRef],Class[_],That]</text>
<text text-anchor="middle" x="18766.614" y="-212235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],scala.tools.nsc.classpath.PackageEntry,That] -->
<g id="node2941" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],scala.tools.nsc.classpath.PackageEntry,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-212318.8701" rx="472.1947" ry="26.7407"/>
<text text-anchor="start" x="18440.614" y="-212322.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],scala.tools.nsc.classpath.PackageEntry,That]</text>
<text text-anchor="middle" x="18766.614" y="-212307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type]) -->
<g id="node2942" class="node">
<title>(=&gt; (List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type])</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-212390.8701" rx="456.1678" ry="26.7407"/>
<text text-anchor="start" x="18452.114" y="-212394.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (List[Nothing], List[Nothing], List[Nothing])) =&gt; (List[Infer.this.global.Symbol], List[Infer.this.global.Type])</text>
<text text-anchor="middle" x="18766.614" y="-212379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[String],String,That] -->
<g id="node2943" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[String],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-212462.8701" rx="376.7759" ry="26.7407"/>
<text text-anchor="start" x="18508.114" y="-212466.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Vector[String],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-212451.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(ToolBoxGlobal.this.FreeTermSymbol, ToolBoxGlobal.this.TermName)],ToolBoxGlobal.this.ValDef,That] -->
<g id="node2944" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(ToolBoxGlobal.this.FreeTermSymbol, ToolBoxGlobal.this.TermName)],ToolBoxGlobal.this.ValDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-212534.8701" rx="602.41" ry="26.7407"/>
<text text-anchor="start" x="18348.614" y="-212538.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(ToolBoxGlobal.this.FreeTermSymbol, ToolBoxGlobal.this.TermName)],ToolBoxGlobal.this.ValDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-212523.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[MatchApproximation.this.global.Tree] =&gt; scala.collection.IterableLike[El2,Repr2] -->
<g id="node2945" class="node">
<title>List[MatchApproximation.this.global.Tree] =&gt; scala.collection.IterableLike[El2,Repr2]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-212606.8701" rx="351.3642" ry="26.7407"/>
<text text-anchor="start" x="18526.114" y="-212610.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[MatchApproximation.this.global.Tree] =&gt; scala.collection.IterableLike[El2,Repr2]</text>
<text text-anchor="middle" x="18766.614" y="-212595.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; SymbolicXMLBuilder.this.global.Tree -->
<g id="node2946" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; SymbolicXMLBuilder.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-212678.8701" rx="274.2149" ry="26.7407"/>
<text text-anchor="start" x="18580.614" y="-212682.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; SymbolicXMLBuilder.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-212667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SyntheticMethods.this.global.Symbol],SyntheticMethods.this.global.Apply,That] -->
<g id="node2947" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SyntheticMethods.this.global.Symbol],SyntheticMethods.this.global.Apply,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-212750.8701" rx="497.6064" ry="26.7407"/>
<text text-anchor="start" x="18422.614" y="-212754.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SyntheticMethods.this.global.Symbol],SyntheticMethods.this.global.Apply,That]</text>
<text text-anchor="middle" x="18766.614" y="-212739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Set[SpecializeTypes.this.global.Symbol] =&gt; ?{def ++=: ?} -->
<g id="node2948" class="node">
<title>Set[SpecializeTypes.this.global.Symbol] =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-212822.8701" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="18604.114" y="-212826.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Set[SpecializeTypes.this.global.Symbol] =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-212811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- unboxMethodSym.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2949" class="node">
<title>unboxMethodSym.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-212894.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="18656.614" y="-212898.6701" font-family="Times,serif" font-size="14.00" fill="#000000">unboxMethodSym.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-212883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SyntheticMethods.this.global.Apply],SyntheticMethods.this.global.gen.global.Tree,That] -->
<g id="node2950" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SyntheticMethods.this.global.Apply],SyntheticMethods.this.global.gen.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-212966.8701" rx="528.4176" ry="26.7407"/>
<text text-anchor="start" x="18401.114" y="-212970.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SyntheticMethods.this.global.Apply],SyntheticMethods.this.global.gen.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-212955.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Long =&gt; JavaScanner.this.ScanPosition -->
<g id="node2951" class="node">
<title>Long =&gt; JavaScanner.this.ScanPosition</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-213038.8701" rx="165.426" ry="26.7407"/>
<text text-anchor="start" x="18657.614" y="-213042.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Long =&gt; JavaScanner.this.ScanPosition</text>
<text text-anchor="middle" x="18766.614" y="-213027.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Double) =&gt; String -->
<g id="node2952" class="node">
<title>(=&gt; Double) =&gt; String</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-213110.8701" rx="101.2327" ry="26.7407"/>
<text text-anchor="start" x="18703.114" y="-213114.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Double) =&gt; String</text>
<text text-anchor="middle" x="18766.614" y="-213099.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[CNF.this.Sym],(CNF.this.Sym, Int),That] -->
<g id="node2953" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[CNF.this.Sym],(CNF.this.Sym, Int),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-213182.8701" rx="450.3541" ry="26.7407"/>
<text text-anchor="start" x="18456.114" y="-213186.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[CNF.this.Sym],(CNF.this.Sym, Int),That]</text>
<text text-anchor="middle" x="18766.614" y="-213171.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.TypeVar,List[Infer.this.global.TypeVar]] -->
<g id="node2954" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.TypeVar,List[Infer.this.global.TypeVar]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-213254.8701" rx="510.5622" ry="26.7407"/>
<text text-anchor="start" x="18413.614" y="-213258.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.TypeVar,List[Infer.this.global.TypeVar]]</text>
<text text-anchor="middle" x="18766.614" y="-213243.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- TreeAndTypeAnalysis.this.global.Scope =&gt; TreeAndTypeAnalysis.this.global.Type -->
<g id="node2955" class="node">
<title>TreeAndTypeAnalysis.this.global.Scope =&gt; TreeAndTypeAnalysis.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-213326.8701" rx="336.6657" ry="26.7407"/>
<text text-anchor="start" x="18536.614" y="-213330.6701" font-family="Times,serif" font-size="14.00" fill="#000000">TreeAndTypeAnalysis.this.global.Scope =&gt; TreeAndTypeAnalysis.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-213315.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- target.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2956" class="node">
<title>target.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-213398.8701" rx="116.8455" ry="26.7407"/>
<text text-anchor="start" x="18692.114" y="-213402.6701" font-family="Times,serif" font-size="14.00" fill="#000000">target.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-213387.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- Global.this.cleanup.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2957" class="node">
<title>Global.this.cleanup.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-213470.8701" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="18654.614" y="-213474.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.cleanup.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-213459.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- member.NameType =&gt; ?{def getterName: ?} -->
<g id="node2958" class="node">
<title>member.NameType =&gt; ?{def getterName: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-213542.8701" rx="190.4237" ry="26.7407"/>
<text text-anchor="start" x="18640.114" y="-213546.6701" font-family="Times,serif" font-size="14.00" fill="#000000">member.NameType =&gt; ?{def getterName: ?}</text>
<text text-anchor="middle" x="18766.614" y="-213531.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.typechecker.ContextMode.TypeConstructorAllowed.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2959" class="node">
<title>scala.tools.nsc.typechecker.ContextMode.TypeConstructorAllowed.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-213614.8701" rx="355.8495" ry="26.7407"/>
<text text-anchor="start" x="18523.114" y="-213618.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.ContextMode.TypeConstructorAllowed.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-213603.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[RefChecks.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node2960" class="node">
<title>List[RefChecks.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-213686.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="18545.614" y="-213690.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[RefChecks.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-213675.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- args.type =&gt; ?{def foreach: ?} -->
<g id="node2961" class="node">
<title>args.type =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-213758.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-213762.6701" font-family="Times,serif" font-size="14.00" fill="#000000">args.type =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-213747.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- times.type =&gt; ?{def sorted: ?} -->
<g id="node2962" class="node">
<title>times.type =&gt; ?{def sorted: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-213830.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-213834.6701" font-family="Times,serif" font-size="14.00" fill="#000000">times.type =&gt; ?{def sorted: ?}</text>
<text text-anchor="middle" x="18766.614" y="-213819.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- file.type =&gt; ?{def isPackage: ?} -->
<g id="node2963" class="node">
<title>file.type =&gt; ?{def isPackage: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-213902.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-213906.6701" font-family="Times,serif" font-size="14.00" fill="#000000">file.type =&gt; ?{def isPackage: ?}</text>
<text text-anchor="middle" x="18766.614" y="-213891.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]],scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])],List[Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]]] -->
<g id="node2964" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]],scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])],List[Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-213974.8701" rx="1557.5125" ry="26.7407"/>
<text text-anchor="start" x="17673.114" y="-213978.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]],scala.collection.immutable.Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])],List[Map[MatchAnalyzer.this.Var,(Seq[MatchAnalyzer.this.Const], Seq[MatchAnalyzer.this.Const])]]]</text>
<text text-anchor="middle" x="18766.614" y="-213963.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- s.type =&gt; ?{def stripPrefix: ?} -->
<g id="node2965" class="node">
<title>s.type =&gt; ?{def stripPrefix: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-214046.8701" rx="130.2154" ry="26.7407"/>
<text text-anchor="start" x="18682.614" y="-214050.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def stripPrefix: ?}</text>
<text text-anchor="middle" x="18766.614" y="-214035.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- MultiChoiceSetting.this.domain.ValueSet =&gt; ?{def +=: ?} -->
<g id="node2966" class="node">
<title>MultiChoiceSetting.this.domain.ValueSet =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-214118.8701" rx="240.3326" ry="26.7407"/>
<text text-anchor="start" x="18604.614" y="-214122.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MultiChoiceSetting.this.domain.ValueSet =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-214107.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.LONGkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2967" class="node">
<title>JavaScanners.this.global.javanme.LONGkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-214190.8701" rx="265.7444" ry="26.7407"/>
<text text-anchor="start" x="18586.614" y="-214194.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.LONGkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-214179.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Parsers.this.global.FlagSet -->
<g id="node2968" class="node">
<title>((Nothing, Nothing)) =&gt; Parsers.this.global.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-214262.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="18625.114" y="-214266.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Parsers.this.global.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-214251.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[SpecializeTypes.this.global.Symbol]) =&gt; SpecializeTypes.this.global.Type -->
<g id="node2969" class="node">
<title>(=&gt; List[SpecializeTypes.this.global.Symbol]) =&gt; SpecializeTypes.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-214334.8701" rx="336.6657" ry="26.7407"/>
<text text-anchor="start" x="18536.614" y="-214338.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[SpecializeTypes.this.global.Symbol]) =&gt; SpecializeTypes.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-214323.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.Set[Delambdafy.this.global.Symbol] =&gt; ?{def +=: ?} -->
<g id="node2970" class="node">
<title>scala.collection.Set[Delambdafy.this.global.Symbol] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-214406.8701" rx="282.6855" ry="26.7407"/>
<text text-anchor="start" x="18574.614" y="-214410.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.Set[Delambdafy.this.global.Symbol] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-214395.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- JavaScanners.this.global.javanme.DEFAULTkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2971" class="node">
<title>JavaScanners.this.global.javanme.DEFAULTkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-214478.8701" rx="282.6855" ry="26.7407"/>
<text text-anchor="start" x="18574.614" y="-214482.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.DEFAULTkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-214467.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.FINALkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2972" class="node">
<title>JavaScanners.this.global.javanme.FINALkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-214550.8701" rx="267.0729" ry="26.7407"/>
<text text-anchor="start" x="18585.614" y="-214554.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.FINALkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-214539.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[T],Node,List[Node]] -->
<g id="node2973" class="node">
<title>scala.collection.generic.CanBuildFrom[List[T],Node,List[Node]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-214622.8701" rx="263.5019" ry="26.7407"/>
<text text-anchor="start" x="18588.114" y="-214626.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[T],Node,List[Node]]</text>
<text text-anchor="middle" x="18766.614" y="-214611.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[String],java.net.URL,Array[java.net.URL]] -->
<g id="node2974" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[String],java.net.URL,Array[java.net.URL]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-144664.8701" rx="358.5063" ry="26.7407"/>
<text text-anchor="start" x="18521.114" y="-144668.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[String],java.net.URL,Array[java.net.URL]]</text>
<text text-anchor="middle" x="18766.614" y="-144653.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[String],java.net.URL,Array[java.net.URL]]&#45;&gt;scala.reflect.ClassTag[java.net.URL] -->
<g id="edge12" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[String],java.net.URL,Array[java.net.URL]]&#45;&gt;scala.reflect.ClassTag[java.net.URL]</title>
<path fill="none" stroke="#000000" d="M19125.0527,-144665.5354C21614.3911,-144670.156 36277.978,-144697.3742 37996.8918,-144700.5648"/>
<polygon fill="#000000" stroke="#000000" points="37997.1344,-144704.0651 38007.1409,-144700.5838 37997.1474,-144697.0651 37997.1344,-144704.0651"/>
</g>
<!-- clauses.type =&gt; ?{def size: ?} -->
<g id="node2975" class="node">
<title>clauses.type =&gt; ?{def size: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-214694.8701" rx="128.8872" ry="26.7407"/>
<text text-anchor="start" x="18683.614" y="-214698.6701" font-family="Times,serif" font-size="14.00" fill="#000000">clauses.type =&gt; ?{def size: ?}</text>
<text text-anchor="middle" x="18766.614" y="-214683.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Position -->
<g id="node2976" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Position</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-214766.8701" rx="263.5019" ry="26.7407"/>
<text text-anchor="start" x="18588.114" y="-214770.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Typers.this.global.Position</text>
<text text-anchor="middle" x="18766.614" y="-214755.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Validators.this.global.Symbol],scala.reflect.internal.Variance,List[scala.tools.nsc.Variance]] -->
<g id="node2977" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Validators.this.global.Symbol],scala.reflect.internal.Variance,List[scala.tools.nsc.Variance]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-214838.8701" rx="540.4593" ry="26.7407"/>
<text text-anchor="start" x="18392.614" y="-214842.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Validators.this.global.Symbol],scala.reflect.internal.Variance,List[scala.tools.nsc.Variance]]</text>
<text text-anchor="middle" x="18766.614" y="-214827.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- String(&#39;internal error: %s (%s) is not supported&#39;) =&gt; ?{def format: ?} -->
<g id="node2978" class="node">
<title>String(&#39;internal error: %s (%s) is not supported&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-214910.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="18577.114" y="-214914.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;internal error: %s (%s) is not supported&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-214899.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Constructors.this.global.Symbol],String,That] -->
<g id="node2979" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Constructors.this.global.Symbol],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-214982.8701" rx="360.749" ry="26.7407"/>
<text text-anchor="start" x="18519.614" y="-214986.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Constructors.this.global.Symbol],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-214971.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$15.type =&gt; ?{def INT_&gt;=: ?} -->
<g id="node2980" class="node">
<title>x$15.type =&gt; ?{def INT_&gt;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-215054.8701" rx="137.3577" ry="26.7407"/>
<text text-anchor="start" x="18677.614" y="-215058.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$15.type =&gt; ?{def INT_&gt;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-215043.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- s.type =&gt; ?{def tail: ?} -->
<g id="node2981" class="node">
<title>s.type =&gt; ?{def tail: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-215126.8701" rx="101.6471" ry="26.7407"/>
<text text-anchor="start" x="18702.614" y="-215130.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def tail: ?}</text>
<text text-anchor="middle" x="18766.614" y="-215115.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.DOUBLE.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2982" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.DOUBLE.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-215198.8701" rx="287.1707" ry="26.7407"/>
<text text-anchor="start" x="18571.614" y="-215202.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.DOUBLE.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-215187.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Erasure.this.global.Tree) =&gt; Erasure.this.global.Type -->
<g id="node2983" class="node">
<title>(=&gt; Erasure.this.global.Tree) =&gt; Erasure.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-215270.8701" rx="236.3475" ry="26.7407"/>
<text text-anchor="start" x="18607.614" y="-215274.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Erasure.this.global.Tree) =&gt; Erasure.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-215259.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Type,That] -->
<g id="node2985" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-215342.8701" rx="393.717" ry="26.7407"/>
<text text-anchor="start" x="18496.114" y="-215346.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-215331.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$10.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node2986" class="node">
<title>x$10.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-215414.8701" rx="113.6886" ry="26.7407"/>
<text text-anchor="start" x="18694.114" y="-215418.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$10.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-215403.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.Symbol],(MatchTranslation.this.global.Symbol, Int),That] -->
<g id="node2987" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.Symbol],(MatchTranslation.this.global.Symbol, Int),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-215486.8701" rx="523.0181" ry="26.7407"/>
<text text-anchor="start" x="18404.614" y="-215490.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchTranslation.this.global.Symbol],(MatchTranslation.this.global.Symbol, Int),That]</text>
<text text-anchor="middle" x="18766.614" y="-215475.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; scala.collection.immutable.Map[Int,scala.tools.asm.Type]) =&gt; ?{def +=: ?} -->
<g id="node2988" class="node">
<title>(=&gt; scala.collection.immutable.Map[Int,scala.tools.asm.Type]) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-215558.8701" rx="324.624" ry="26.7407"/>
<text text-anchor="start" x="18545.114" y="-215562.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.collection.immutable.Map[Int,scala.tools.asm.Type]) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-215547.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- MatchCodeGen.this.CODE.SelectStart =&gt; MatchCodeGen.this.global.Tree -->
<g id="node2989" class="node">
<title>MatchCodeGen.this.CODE.SelectStart =&gt; MatchCodeGen.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-215630.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="18560.614" y="-215634.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchCodeGen.this.CODE.SelectStart =&gt; MatchCodeGen.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-215619.6701" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 1ms</text>
</g>
<!-- String =&gt; Char -->
<g id="node2990" class="node">
<title>String =&gt; Char</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-215702.8701" rx="70.922" ry="26.7407"/>
<text text-anchor="start" x="18724.614" y="-215706.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; Char</text>
<text text-anchor="middle" x="18766.614" y="-215691.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[ToolBoxGlobal.this.Tree],ToolBoxGlobal.this.Symbol,List[ToolBoxGlobal.this.Symbol]] -->
<g id="node2991" class="node">
<title>scala.collection.generic.CanBuildFrom[List[ToolBoxGlobal.this.Tree],ToolBoxGlobal.this.Symbol,List[ToolBoxGlobal.this.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-215774.8701" rx="531.9887" ry="26.7407"/>
<text text-anchor="start" x="18398.614" y="-215778.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[ToolBoxGlobal.this.Tree],ToolBoxGlobal.this.Symbol,List[ToolBoxGlobal.this.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-215763.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(NodePrinters.this.global.Name, NodePrinters.this.global.ClassfileAnnotArg)],((NodePrinters.this.global.Name, NodePrinters.this.global.ClassfileAnnotArg), Int),That] -->
<g id="node2992" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(NodePrinters.this.global.Name, NodePrinters.this.global.ClassfileAnnotArg)],((NodePrinters.this.global.Name, NodePrinters.this.global.ClassfileAnnotArg), Int),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-215846.8701" rx="832.9436" ry="26.7407"/>
<text text-anchor="start" x="18185.614" y="-215850.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(NodePrinters.this.global.Name, NodePrinters.this.global.ClassfileAnnotArg)],((NodePrinters.this.global.Name, NodePrinters.this.global.ClassfileAnnotArg), Int),That]</text>
<text text-anchor="middle" x="18766.614" y="-215835.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Set[List[RefChecks.this.global.Type]] =&gt; ?{def +=: ?} -->
<g id="node2993" class="node">
<title>scala.collection.immutable.Set[List[RefChecks.this.global.Type]] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-215918.8701" rx="332.1805" ry="26.7407"/>
<text text-anchor="start" x="18539.614" y="-215922.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[List[RefChecks.this.global.Type]] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-215907.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;\\u%04x&#39;) =&gt; ?{def format: ?} -->
<g id="node2994" class="node">
<title>String(&#39;\\u%04x&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-215990.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="18664.114" y="-215994.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;\u%04x&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-215979.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Set[Contexts.this.global.ImportSelector] =&gt; ?{def +=: ?} -->
<g id="node2995" class="node">
<title>scala.collection.immutable.Set[Contexts.this.global.ImportSelector] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-216062.8701" rx="340.651" ry="26.7407"/>
<text text-anchor="start" x="18533.614" y="-216066.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[Contexts.this.global.ImportSelector] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-216051.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;([0&#45;7]{1,3}).*&#39;) =&gt; ?{def r: ?} -->
<g id="node2996" class="node">
<title>String(&#39;([0&#45;7]{1,3}).*&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-216134.8701" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="18663.114" y="-216138.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;([0&#45;7]{1,3}).*&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-216123.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.transform.UnCurry.UnCurryTransformer.dependentParamTypeErasure.ParamTransform],(UnCurry.this.global.ValDef, UnCurry.this.global.ValDef),That] -->
<g id="node2997" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.transform.UnCurry.UnCurryTransformer.dependentParamTypeErasure.ParamTransform],(UnCurry.this.global.ValDef, UnCurry.this.global.ValDef),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-216206.8701" rx="841.4141" ry="26.7407"/>
<text text-anchor="start" x="18179.614" y="-216210.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.transform.UnCurry.UnCurryTransformer.dependentParamTypeErasure.ParamTransform],(UnCurry.this.global.ValDef, UnCurry.this.global.ValDef),That]</text>
<text text-anchor="middle" x="18766.614" y="-216195.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; scala.tools.asm.tree.ClassNode -->
<g id="node2998" class="node">
<title>((Nothing, Nothing)) =&gt; scala.tools.asm.tree.ClassNode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-216278.8701" rx="229.2052" ry="26.7407"/>
<text text-anchor="start" x="18612.614" y="-216282.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; scala.tools.asm.tree.ClassNode</text>
<text text-anchor="middle" x="18766.614" y="-216267.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Boolean =&gt; ?{def &amp;&amp;=: ?} -->
<g id="node2999" class="node">
<title>Boolean =&gt; ?{def &amp;&amp;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-216350.8701" rx="120.4167" ry="26.7407"/>
<text text-anchor="start" x="18689.614" y="-216354.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean =&gt; ?{def &amp;&amp;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-216339.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;scala.collection.generic.&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3000" class="node">
<title>String(&#39;scala.collection.generic.&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-216422.8701" rx="201.5509" ry="26.7407"/>
<text text-anchor="start" x="18632.114" y="-216426.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;scala.collection.generic.&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-216411.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeBuilder.this.global.Tree],TreeBuilder.this.global.ValDef,That] -->
<g id="node3001" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeBuilder.this.global.Tree],TreeBuilder.this.global.ValDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-216494.8701" rx="441.8835" ry="26.7407"/>
<text text-anchor="start" x="18462.114" y="-216498.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeBuilder.this.global.Tree],TreeBuilder.this.global.ValDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-216483.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- String(&#39;$scope&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType -->
<g id="node3002" class="node">
<title>String(&#39;$scope&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-216566.8701" rx="358.5063" ry="26.7407"/>
<text text-anchor="start" x="18521.114" y="-216570.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;$scope&#39;) =&gt; scala.tools.nsc.ast.parser.SymbolicXMLBuilder.xmlterms.NameType</text>
<text text-anchor="middle" x="18766.614" y="-216555.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Unapplies.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node3003" class="node">
<title>List[Unapplies.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-216638.8701" rx="318.3962" ry="26.7407"/>
<text text-anchor="start" x="18549.614" y="-216642.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Unapplies.this.global.ValDef] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-216627.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Duplicators.this.global.Position -->
<g id="node3004" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Duplicators.this.global.Position</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-216710.8701" rx="267.0729" ry="26.7407"/>
<text text-anchor="start" x="18585.614" y="-216714.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Duplicators.this.global.Position</text>
<text text-anchor="middle" x="18766.614" y="-216699.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Reifiers.this.global.Tree],Reifiers.this.UnapplyHole,That] -->
<g id="node3005" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Reifiers.this.global.Tree],Reifiers.this.UnapplyHole,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-216782.8701" rx="406.6728" ry="26.7407"/>
<text text-anchor="start" x="18487.114" y="-216786.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Reifiers.this.global.Tree],Reifiers.this.UnapplyHole,That]</text>
<text text-anchor="middle" x="18766.614" y="-216771.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Tree],NamesDefaults.this.global.Tree,That] -->
<g id="node3006" class="node">
<title>scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Tree],NamesDefaults.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-216854.8701" rx="457.4962" ry="26.7407"/>
<text text-anchor="start" x="18451.114" y="-216858.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[NamesDefaults.this.global.Tree],NamesDefaults.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-216843.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],scala.tools.nsc.util.ClassPath,That] -->
<g id="node3007" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],scala.tools.nsc.util.ClassPath,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-216926.8701" rx="434.7414" ry="26.7407"/>
<text text-anchor="start" x="18467.114" y="-216930.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[scala.tools.nsc.util.ClassPath],scala.tools.nsc.util.ClassPath,That]</text>
<text text-anchor="middle" x="18766.614" y="-216915.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- AbstractFileReader.this.buf.type =&gt; ?{def slice: ?} -->
<g id="node3008" class="node">
<title>AbstractFileReader.this.buf.type =&gt; ?{def slice: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-216998.8701" rx="209.1074" ry="26.7407"/>
<text text-anchor="start" x="18626.614" y="-217002.6701" font-family="Times,serif" font-size="14.00" fill="#000000">AbstractFileReader.this.buf.type =&gt; ?{def slice: ?}</text>
<text text-anchor="middle" x="18766.614" y="-216987.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- clauses.type =&gt; ?{def head: ?} -->
<g id="node3009" class="node">
<title>clauses.type =&gt; ?{def head: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-217070.8701" rx="131.5437" ry="26.7407"/>
<text text-anchor="start" x="18681.614" y="-217074.6701" font-family="Times,serif" font-size="14.00" fill="#000000">clauses.type =&gt; ?{def head: ?}</text>
<text text-anchor="middle" x="18766.614" y="-217059.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;scala&#45;devel&#39;) =&gt; scala.reflect.io.Path -->
<g id="node3010" class="node">
<title>String(&#39;scala&#45;devel&#39;) =&gt; scala.reflect.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-217142.8701" rx="180.1247" ry="26.7407"/>
<text text-anchor="start" x="18647.114" y="-217146.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;scala&#45;devel&#39;) =&gt; scala.reflect.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-217131.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[Long] =&gt; Array[CNF.this.Clause] -->
<g id="node3011" class="node">
<title>Array[Long] =&gt; Array[CNF.this.Clause]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-217214.8701" rx="169.9115" ry="26.7407"/>
<text text-anchor="start" x="18654.614" y="-217218.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[Long] =&gt; Array[CNF.this.Clause]</text>
<text text-anchor="middle" x="18766.614" y="-217203.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- initialLabels.type =&gt; ?{def iterator: ?} -->
<g id="node3012" class="node">
<title>initialLabels.type =&gt; ?{def iterator: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-217286.8701" rx="161.441" ry="26.7407"/>
<text text-anchor="start" x="18660.614" y="-217290.6701" font-family="Times,serif" font-size="14.00" fill="#000000">initialLabels.type =&gt; ?{def iterator: ?}</text>
<text text-anchor="middle" x="18766.614" y="-217275.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MultiChoiceSetting.this.domain.Choice],String,That] -->
<g id="node3013" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MultiChoiceSetting.this.domain.Choice],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-217358.8701" rx="389.7317" ry="26.7407"/>
<text text-anchor="start" x="18499.114" y="-217362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MultiChoiceSetting.this.domain.Choice],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-217347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- bSeven.type =&gt; ?{def slice: ?} -->
<g id="node3014" class="node">
<title>bSeven.type =&gt; ?{def slice: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-217430.8701" rx="131.5437" ry="26.7407"/>
<text text-anchor="start" x="18681.614" y="-217434.6701" font-family="Times,serif" font-size="14.00" fill="#000000">bSeven.type =&gt; ?{def slice: ?}</text>
<text text-anchor="middle" x="18766.614" y="-217419.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 4ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.TypeTree,That] -->
<g id="node3015" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.TypeTree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-217502.8701" rx="423.6139" ry="26.7407"/>
<text text-anchor="start" x="18475.114" y="-217506.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Reshape.this.global.Tree],Reshape.this.global.TypeTree,That]</text>
<text text-anchor="middle" x="18766.614" y="-217491.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- JavaScanners.this.global.javanme.INTERFACEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3016" class="node">
<title>JavaScanners.this.global.javanme.INTERFACEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-217574.8701" rx="292.0702" ry="26.7407"/>
<text text-anchor="start" x="18568.114" y="-217578.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.INTERFACEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-217563.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; Reshape.this.global.Type -->
<g id="node3017" class="node">
<title>Unit =&gt; Reshape.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-217646.8701" rx="143.5854" ry="26.7407"/>
<text text-anchor="start" x="18673.114" y="-217650.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; Reshape.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-217635.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Ordering[Int] -->
<g id="node3018" class="node">
<title>Ordering[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-217718.8701" rx="67.7647" ry="26.7407"/>
<text text-anchor="start" x="18726.614" y="-217722.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Ordering[Int]</text>
<text text-anchor="middle" x="18766.614" y="-217707.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 8ms</text>
</g>
<!-- includedFiles.type =&gt; ?{def map: ?} -->
<g id="node3019" class="node">
<title>includedFiles.type =&gt; ?{def map: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-217790.8701" rx="154.2987" ry="26.7407"/>
<text text-anchor="start" x="18665.614" y="-217794.6701" font-family="Times,serif" font-size="14.00" fill="#000000">includedFiles.type =&gt; ?{def map: ?}</text>
<text text-anchor="middle" x="18766.614" y="-217779.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Typers.this.ContextReporter -->
<g id="node3020" class="node">
<title>(=&gt; Unit) =&gt; Typers.this.ContextReporter</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-217862.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="18650.614" y="-217866.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Typers.this.ContextReporter</text>
<text text-anchor="middle" x="18766.614" y="-217851.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; GenSymbols.this.global.Tree -->
<g id="node3021" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; GenSymbols.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-217934.8701" rx="258.6023" ry="26.7407"/>
<text text-anchor="start" x="18591.614" y="-217938.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; GenSymbols.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-217923.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def toLong: ?} -->
<g id="node3022" class="node">
<title>String =&gt; ?{def toLong: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-218006.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="18691.114" y="-218010.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def toLong: ?}</text>
<text text-anchor="middle" x="18766.614" y="-217995.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[BCodeBodyBuilder.this.global.delambdafy.LambdaMetaFactoryCapable] -->
<g id="node3023" class="node">
<title>scala.reflect.ClassTag[BCodeBodyBuilder.this.global.delambdafy.LambdaMetaFactoryCapable]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-218078.8701" rx="384.8322" ry="26.7407"/>
<text text-anchor="start" x="18502.614" y="-218082.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[BCodeBodyBuilder.this.global.delambdafy.LambdaMetaFactoryCapable]</text>
<text text-anchor="middle" x="18766.614" y="-218067.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 3ms</text>
</g>
<!-- String(&#39;apos&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3024" class="node">
<title>String(&#39;apos&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-218150.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="18685.114" y="-218154.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;apos&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-218139.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Symbol],scala.tools.asm.Type,That] -->
<g id="node3025" class="node">
<title>scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Symbol],scala.tools.asm.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-218222.8701" rx="445.4545" ry="26.7407"/>
<text text-anchor="start" x="18459.614" y="-218226.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[BCodeBodyBuilder.this.global.Symbol],scala.tools.asm.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-218211.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[java.lang.reflect.Field] =&gt; ?{def find: ?} -->
<g id="node3026" class="node">
<title>Array[java.lang.reflect.Field] =&gt; ?{def find: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-218294.8701" rx="195.3231" ry="26.7407"/>
<text text-anchor="start" x="18636.614" y="-218298.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[java.lang.reflect.Field] =&gt; ?{def find: ?}</text>
<text text-anchor="middle" x="18766.614" y="-218283.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- TreeAndTypeAnalysis.this.global.Tree =&gt; TreeAndTypeAnalysis.this.global.Type -->
<g id="node3027" class="node">
<title>TreeAndTypeAnalysis.this.global.Tree =&gt; TreeAndTypeAnalysis.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-218366.8701" rx="330.852" ry="26.7407"/>
<text text-anchor="start" x="18540.614" y="-218370.6701" font-family="Times,serif" font-size="14.00" fill="#000000">TreeAndTypeAnalysis.this.global.Tree =&gt; TreeAndTypeAnalysis.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-218355.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Double =&gt; Int -->
<g id="node3028" class="node">
<title>Double =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-218438.8701" rx="82.0488" ry="26.7407"/>
<text text-anchor="start" x="18716.614" y="-218442.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Double =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-218427.6701" font-family="Times,serif" font-size="14.00" fill="#000000">478 times = 47ms</text>
</g>
<!-- other.type =&gt; ?{def AS: ?} -->
<g id="node3029" class="node">
<title>other.type =&gt; ?{def AS: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-218510.8701" rx="118.1737" ry="26.7407"/>
<text text-anchor="start" x="18691.114" y="-218514.6701" font-family="Times,serif" font-size="14.00" fill="#000000">other.type =&gt; ?{def AS: ?}</text>
<text text-anchor="middle" x="18766.614" y="-218499.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Symbol,That] -->
<g id="node3030" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-218582.8701" rx="404.4302" ry="26.7407"/>
<text text-anchor="start" x="18488.614" y="-218586.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Tree],Typers.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-218571.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$4.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3031" class="node">
<title>x$4.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-218654.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="18697.114" y="-218658.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$4.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-218643.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Printers.this.Tree],List[Printers.this.Tree],That] -->
<g id="node3032" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Printers.this.Tree],List[Printers.this.Tree],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-218726.8701" rx="366.0628" ry="26.7407"/>
<text text-anchor="start" x="18515.614" y="-218730.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Printers.this.Tree],List[Printers.this.Tree],That]</text>
<text text-anchor="middle" x="18766.614" y="-218715.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; MarkupParsers.this.Offset -->
<g id="node3033" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; MarkupParsers.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-218798.8701" rx="261.7591" ry="26.7407"/>
<text text-anchor="start" x="18589.614" y="-218802.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; MarkupParsers.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-218787.6701" font-family="Times,serif" font-size="14.00" fill="#000000">9 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Tree],MatchApproximation.this.global.Tree,To2] -->
<g id="node3034" class="node">
<title>scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Tree],MatchApproximation.this.global.Tree,To2]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-218870.8701" rx="504.3343" ry="26.7407"/>
<text text-anchor="start" x="18418.114" y="-218874.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[MatchApproximation.this.global.Tree],MatchApproximation.this.global.Tree,To2]</text>
<text text-anchor="middle" x="18766.614" y="-218859.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ClassfileParser.this.symbolTable.Name =&gt; ?{def dropModule: ?} -->
<g id="node3035" class="node">
<title>ClassfileParser.this.symbolTable.Name =&gt; ?{def dropModule: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-218942.8701" rx="267.0729" ry="26.7407"/>
<text text-anchor="start" x="18585.614" y="-218946.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ClassfileParser.this.symbolTable.Name =&gt; ?{def dropModule: ?}</text>
<text text-anchor="middle" x="18766.614" y="-218931.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Typers.this.global.Symbol] =&gt; Typers.this.global.Type -->
<g id="node3036" class="node">
<title>List[Typers.this.global.Symbol] =&gt; Typers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-219014.8701" rx="243.9037" ry="26.7407"/>
<text text-anchor="start" x="18602.114" y="-219018.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Typers.this.global.Symbol] =&gt; Typers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-219003.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Set[MatchApproximator.this.Prop] -->
<g id="node3037" class="node">
<title>((Nothing, Nothing)) =&gt; Set[MatchApproximator.this.Prop]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-219086.8701" rx="244.818" ry="26.7407"/>
<text text-anchor="start" x="18601.614" y="-219090.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Set[MatchApproximator.this.Prop]</text>
<text text-anchor="middle" x="18766.614" y="-219075.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- Null &lt;:&lt; tools.nsc.io.AbstractFile -->
<g id="node3038" class="node">
<title>Null &lt;:&lt; tools.nsc.io.AbstractFile</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-219158.8701" rx="142.257" ry="26.7407"/>
<text text-anchor="start" x="18674.114" y="-219162.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Null &lt;:&lt; tools.nsc.io.AbstractFile</text>
<text text-anchor="middle" x="18766.614" y="-219147.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Any, Any) =&gt; Nothing) =&gt; java.util.Comparator[_ &gt;: =?Nothing] -->
<g id="node3039" class="node">
<title>(=&gt; (Any, Any) =&gt; Nothing) =&gt; java.util.Comparator[_ &gt;: =?Nothing]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-219230.8701" rx="288.4991" ry="26.7407"/>
<text text-anchor="start" x="18570.614" y="-219234.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Any, Any) =&gt; Nothing) =&gt; java.util.Comparator[_ &gt;: =?Nothing]</text>
<text text-anchor="middle" x="18766.614" y="-219219.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeGen.this.global.ValDef],TreeGen.this.global.Type,List[TreeGen.this.global.Type]] -->
<g id="node3040" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeGen.this.global.ValDef],TreeGen.this.global.Type,List[TreeGen.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-219302.8701" rx="521.2754" ry="26.7407"/>
<text text-anchor="start" x="18406.114" y="-219306.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeGen.this.global.ValDef],TreeGen.this.global.Type,List[TreeGen.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-219291.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;verdict: rolled back to original %s&#39;) =&gt; ?{def format: ?} -->
<g id="node3041" class="node">
<title>String(&#39;verdict: rolled back to original %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-219374.8701" rx="258.188" ry="26.7407"/>
<text text-anchor="start" x="18592.114" y="-219378.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;verdict: rolled back to original %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-219363.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[IndexedSeq[CoreBTypesFromSymbols.this.bTypes.global.ClassSymbol],CoreBTypesFromSymbols.this.bTypes.global.Symbol,That] -->
<g id="node3042" class="node">
<title>scala.collection.generic.CanBuildFrom[IndexedSeq[CoreBTypesFromSymbols.this.bTypes.global.ClassSymbol],CoreBTypesFromSymbols.this.bTypes.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-219446.8701" rx="683.5446" ry="26.7407"/>
<text text-anchor="start" x="18291.114" y="-219450.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[IndexedSeq[CoreBTypesFromSymbols.this.bTypes.global.ClassSymbol],CoreBTypesFromSymbols.this.bTypes.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-219435.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Symbol],LambdaLift.this.global.DefDef,That] -->
<g id="node3043" class="node">
<title>scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Symbol],LambdaLift.this.global.DefDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-219518.8701" rx="455.2536" ry="26.7407"/>
<text text-anchor="start" x="18452.614" y="-219522.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[LambdaLift.this.global.Symbol],LambdaLift.this.global.DefDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-219507.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Unapplies.this.global.Tree -->
<g id="node3044" class="node">
<title>((Nothing, Nothing)) =&gt; Unapplies.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-219590.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="18625.114" y="-219594.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Unapplies.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-219579.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[PatternExpansion.this.global.Type],String,That] -->
<g id="node3045" class="node">
<title>scala.collection.generic.CanBuildFrom[List[PatternExpansion.this.global.Type],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-219662.8701" rx="368.3053" ry="26.7407"/>
<text text-anchor="start" x="18514.114" y="-219666.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[PatternExpansion.this.global.Type],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-219651.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- GenUtils.this.global.nme.UNIVERSE_PREFIX.type =&gt; ?{def +: ?} -->
<g id="node3046" class="node">
<title>GenUtils.this.global.nme.UNIVERSE_PREFIX.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-219734.8701" rx="276.4575" ry="26.7407"/>
<text text-anchor="start" x="18579.114" y="-219738.6701" font-family="Times,serif" font-size="14.00" fill="#000000">GenUtils.this.global.nme.UNIVERSE_PREFIX.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-219723.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Symbol],TreeAndTypeAnalysis.this.global.WildcardType.type,That] -->
<g id="node3047" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Symbol],TreeAndTypeAnalysis.this.global.WildcardType.type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-219806.8701" rx="582.812" ry="26.7407"/>
<text text-anchor="start" x="18362.614" y="-219810.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Symbol],TreeAndTypeAnalysis.this.global.WildcardType.type,That]</text>
<text text-anchor="middle" x="18766.614" y="-219795.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Float) =&gt; Long -->
<g id="node3048" class="node">
<title>(=&gt; Float) =&gt; Long</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-219878.8701" rx="89.191" ry="26.7407"/>
<text text-anchor="start" x="18711.614" y="-219882.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Float) =&gt; Long</text>
<text text-anchor="middle" x="18766.614" y="-219867.6701" font-family="Times,serif" font-size="14.00" fill="#000000">20 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Namers.this.global.Symbol -->
<g id="node3049" class="node">
<title>((Nothing, Nothing)) =&gt; Namers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-219950.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-219954.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Namers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-219939.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- clauses.type =&gt; ?{def filterNot: ?} -->
<g id="node3050" class="node">
<title>clauses.type =&gt; ?{def filterNot: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-220022.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="18671.114" y="-220026.6701" font-family="Times,serif" font-size="14.00" fill="#000000">clauses.type =&gt; ?{def filterNot: ?}</text>
<text text-anchor="middle" x="18766.614" y="-220011.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Fields.this.global.AnnotationInfo) =&gt; Fields.this.global.Type -->
<g id="node3051" class="node">
<title>(=&gt; Fields.this.global.AnnotationInfo) =&gt; Fields.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-220094.8701" rx="265.7444" ry="26.7407"/>
<text text-anchor="start" x="18586.614" y="-220098.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Fields.this.global.AnnotationInfo) =&gt; Fields.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-220083.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Fields.this.global.Tree) =&gt; Fields.this.global.Type -->
<g id="node3052" class="node">
<title>(=&gt; Fields.this.global.Tree) =&gt; Fields.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-220166.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="18616.114" y="-220170.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Fields.this.global.Tree) =&gt; Fields.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-220155.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Symbol],String,List[String]] -->
<g id="node3053" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Symbol],String,List[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-220238.8701" rx="373.2048" ry="26.7407"/>
<text text-anchor="start" x="18510.614" y="-220242.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Symbol],String,List[String]]</text>
<text text-anchor="middle" x="18766.614" y="-220227.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[TypeDiagnostics.this.global.AtBoundIdentifierAttachment.type] -->
<g id="node3054" class="node">
<title>scala.reflect.ClassTag[TypeDiagnostics.this.global.AtBoundIdentifierAttachment.type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-220310.8701" rx="347.379" ry="26.7407"/>
<text text-anchor="start" x="18529.114" y="-220314.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[TypeDiagnostics.this.global.AtBoundIdentifierAttachment.type]</text>
<text text-anchor="middle" x="18766.614" y="-220299.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Scanners.this.global.nme.IMPORTkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3055" class="node">
<title>Scanners.this.global.nme.IMPORTkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-220382.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="18602.614" y="-220386.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.IMPORTkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-220371.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.IntMap[InlinerHeuristics.this.postProcessor.callGraph.postProcessor.bTypes.ClassBType],String,That] -->
<g id="node3056" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.IntMap[InlinerHeuristics.this.postProcessor.callGraph.postProcessor.bTypes.ClassBType],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-220454.8701" rx="668.846" ry="26.7407"/>
<text text-anchor="start" x="18301.614" y="-220458.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.IntMap[InlinerHeuristics.this.postProcessor.callGraph.postProcessor.bTypes.ClassBType],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-220443.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.reflect.io.Path],scala.util.Success[(scala.tools.nsc.plugins.PluginDescription, scala.reflect.internal.util.ScalaClassLoader)],PDResults] -->
<g id="node3057" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.reflect.io.Path],scala.util.Success[(scala.tools.nsc.plugins.PluginDescription, scala.reflect.internal.util.ScalaClassLoader)],PDResults]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-220526.8701" rx="719.6694" ry="26.7407"/>
<text text-anchor="start" x="18265.614" y="-220530.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.reflect.io.Path],scala.util.Success[(scala.tools.nsc.plugins.PluginDescription, scala.reflect.internal.util.ScalaClassLoader)],PDResults]</text>
<text text-anchor="middle" x="18766.614" y="-220515.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[UnCurry.this.global.SAMFunction] -->
<g id="node3058" class="node">
<title>scala.reflect.ClassTag[UnCurry.this.global.SAMFunction]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-220598.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="18607.114" y="-220602.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[UnCurry.this.global.SAMFunction]</text>
<text text-anchor="middle" x="18766.614" y="-220587.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 5ms</text>
</g>
<!-- Scanners.this.global.nme.USCOREkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3059" class="node">
<title>Scanners.this.global.nme.USCOREkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-220670.8701" rx="243.9037" ry="26.7407"/>
<text text-anchor="start" x="18602.114" y="-220674.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.USCOREkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-220659.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[Int],ExtensionMethods.this.global.TermName,That] -->
<g id="node3060" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[Int],ExtensionMethods.this.global.TermName,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-220742.8701" rx="504.7485" ry="26.7407"/>
<text text-anchor="start" x="18417.614" y="-220746.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Stream[Int],ExtensionMethods.this.global.TermName,That]</text>
<text text-anchor="middle" x="18766.614" y="-220731.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(Int, CoreBTypesFromSymbols.this.bTypes.PrimitiveBType with Product with Serializable)],(Int, Product with Serializable with CoreBTypesFromSymbols.this.bTypes.BType),That] -->
<g id="node3061" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(Int, CoreBTypesFromSymbols.this.bTypes.PrimitiveBType with Product with Serializable)],(Int, Product with Serializable with CoreBTypesFromSymbols.this.bTypes.BType),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-220814.8701" rx="890.4949" ry="26.7407"/>
<text text-anchor="start" x="18145.114" y="-220818.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(Int, CoreBTypesFromSymbols.this.bTypes.PrimitiveBType with Product with Serializable)],(Int, Product with Serializable with CoreBTypesFromSymbols.this.bTypes.BType),That]</text>
<text text-anchor="middle" x="18766.614" y="-220803.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.reflect.io.File],(scala.reflect.io.File, scala.util.Try[scala.tools.nsc.plugins.PluginDescription]),That] -->
<g id="node3062" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.reflect.io.File],(scala.reflect.io.File, scala.util.Try[scala.tools.nsc.plugins.PluginDescription]),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-220886.8701" rx="587.7115" ry="26.7407"/>
<text text-anchor="start" x="18359.114" y="-220890.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.reflect.io.File],(scala.reflect.io.File, scala.util.Try[scala.tools.nsc.plugins.PluginDescription]),That]</text>
<text text-anchor="middle" x="18766.614" y="-220875.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; scala.tools.nsc.typechecker.Analyzer.packageObjects.global.Symbol -->
<g id="node3063" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; scala.tools.nsc.typechecker.Analyzer.packageObjects.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-220958.8701" rx="388.4034" ry="26.7407"/>
<text text-anchor="start" x="18500.114" y="-220962.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; scala.tools.nsc.typechecker.Analyzer.packageObjects.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-220947.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[Erasure.this.global.Symbol]) =&gt; Erasure.this.global.Type -->
<g id="node3064" class="node">
<title>(=&gt; List[Erasure.this.global.Symbol]) =&gt; Erasure.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-221030.8701" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="18583.614" y="-221034.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Erasure.this.global.Symbol]) =&gt; Erasure.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-221019.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTracker.this.Node],SymbolTrackers.this.global.Symbol,That] -->
<g id="node3065" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTracker.this.Node],SymbolTrackers.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-221102.8701" rx="555.5719" ry="26.7407"/>
<text text-anchor="start" x="18381.614" y="-221106.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTracker.this.Node],SymbolTrackers.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-221091.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- x$20.type =&gt; ?{def forall: ?} -->
<g id="node3066" class="node">
<title>x$20.type =&gt; ?{def forall: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-221174.8701" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="18685.614" y="-221178.6701" font-family="Times,serif" font-size="14.00" fill="#000000">x$20.type =&gt; ?{def forall: ?}</text>
<text text-anchor="middle" x="18766.614" y="-221163.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[CommonSubconditionElimination.this.Test],CommonSubconditionElimination.this.Substitution,That] -->
<g id="node3067" class="node">
<title>scala.collection.generic.CanBuildFrom[List[CommonSubconditionElimination.this.Test],CommonSubconditionElimination.this.Substitution,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-221246.8701" rx="579.6552" ry="26.7407"/>
<text text-anchor="start" x="18364.614" y="-221250.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[CommonSubconditionElimination.this.Test],CommonSubconditionElimination.this.Substitution,That]</text>
<text text-anchor="middle" x="18766.614" y="-221235.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit],Unit,That] -->
<g id="node3068" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit],Unit,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-221318.8701" rx="472.1947" ry="26.7407"/>
<text text-anchor="start" x="18440.614" y="-221322.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.nsc.transform.patmat.Lit],Unit,That]</text>
<text text-anchor="middle" x="18766.614" y="-221307.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[(ContextErrors.this.global.Tree, ContextErrors.this.global.Tree)],ContextErrors.this.global.Name,That] -->
<g id="node3069" class="node">
<title>scala.collection.generic.CanBuildFrom[List[(ContextErrors.this.global.Tree, ContextErrors.this.global.Tree)],ContextErrors.this.global.Name,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-221390.8701" rx="581.8978" ry="26.7407"/>
<text text-anchor="start" x="18363.114" y="-221394.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[(ContextErrors.this.global.Tree, ContextErrors.this.global.Tree)],ContextErrors.this.global.Name,That]</text>
<text text-anchor="middle" x="18766.614" y="-221379.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[(scala.tools.nsc.Phase, scala.tools.nsc.typechecker.TreeCheckers.SymbolTracker.PhaseMap)] =&gt; ?{def ::=: ?} -->
<g id="node3070" class="node">
<title>List[(scala.tools.nsc.Phase, scala.tools.nsc.typechecker.TreeCheckers.SymbolTracker.PhaseMap)] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-221462.8701" rx="457.4962" ry="26.7407"/>
<text text-anchor="start" x="18451.114" y="-221466.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[(scala.tools.nsc.Phase, scala.tools.nsc.typechecker.TreeCheckers.SymbolTracker.PhaseMap)] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-221451.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; PatternTypers.this.global.Tree -->
<g id="node3071" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; PatternTypers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-221534.8701" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="18578.614" y="-221538.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; PatternTypers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-221523.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Float) =&gt; Scanners.this.Offset -->
<g id="node3072" class="node">
<title>(=&gt; Float) =&gt; Scanners.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-221606.8701" rx="146.2423" ry="26.7407"/>
<text text-anchor="start" x="18671.114" y="-221610.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Float) =&gt; Scanners.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-221595.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.ClassSymbol],SpecializeTypes.this.global.Type,That] -->
<g id="node3073" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.ClassSymbol],SpecializeTypes.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-221678.8701" rx="499.849" ry="26.7407"/>
<text text-anchor="start" x="18421.114" y="-221682.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.ClassSymbol],SpecializeTypes.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-221667.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Type],Unit,To] -->
<g id="node3074" class="node">
<title>scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Type],Unit,To]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-221750.8701" rx="330.4379" ry="26.7407"/>
<text text-anchor="start" x="18541.114" y="-221754.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Type],Unit,To]</text>
<text text-anchor="middle" x="18766.614" y="-221739.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[GenSymbols.this.ReifyBindingAttachment] -->
<g id="node3075" class="node">
<title>scala.reflect.ClassTag[GenSymbols.this.ReifyBindingAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-221822.8701" rx="268.9013" ry="26.7407"/>
<text text-anchor="start" x="18584.614" y="-221826.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[GenSymbols.this.ReifyBindingAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-221811.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 3ms</text>
</g>
<!-- ((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Float] -->
<g id="node3076" class="node">
<title>((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Float]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-221894.8701" rx="219.4064" ry="26.7407"/>
<text text-anchor="start" x="18619.614" y="-221898.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Float]</text>
<text text-anchor="middle" x="18766.614" y="-221883.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;(?s)^[\\s&amp;&amp;[^\n\r]]*(.*?)\\s*$&#39;) =&gt; ?{def r: ?} -->
<g id="node3077" class="node">
<title>String(&#39;(?s)^[\\s&amp;&amp;[^\n\r]]*(.*?)\\s*$&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-221988.8701" rx="120.4167" ry="48.5816"/>
<text text-anchor="middle" x="18766.614" y="-222008.1701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;(?s)^[\s&amp;&amp;[^</text>
<text text-anchor="start" x="18689.614" y="-221977.1701" font-family="Times,serif" font-size="14.00" fill="#000000">]]*(.*?)\s*$&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-221962.1701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; Unit) =&gt; scala.io.Codec -->
<g id="node3078" class="node">
<title>(=&gt; Unit) =&gt; scala.io.Codec</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-222082.8701" rx="122.1592" ry="26.7407"/>
<text text-anchor="start" x="18688.114" y="-222086.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; scala.io.Codec</text>
<text text-anchor="middle" x="18766.614" y="-222071.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; MatchAnalyzer.this.Var -->
<g id="node3079" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; MatchAnalyzer.this.Var</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-222154.8701" rx="253.7028" ry="26.7407"/>
<text text-anchor="start" x="18595.114" y="-222158.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; MatchAnalyzer.this.Var</text>
<text text-anchor="middle" x="18766.614" y="-222143.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Set[SpecializeTypes.this.global.Symbol]) =&gt; ?{def ++=: ?} -->
<g id="node3080" class="node">
<title>(=&gt; Set[SpecializeTypes.this.global.Symbol]) =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-222226.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-222230.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Set[SpecializeTypes.this.global.Symbol]) =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-222215.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- MatchTranslation.this.global.Symbol =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3081" class="node">
<title>MatchTranslation.this.global.Symbol =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-222298.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-222302.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchTranslation.this.global.Symbol =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-222287.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- TypersStats.this.Counter =&gt; Ordered[TypersStats.this.Counter] -->
<g id="node3082" class="node">
<title>TypersStats.this.Counter =&gt; Ordered[TypersStats.this.Counter]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-222370.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="18593.614" y="-222374.6701" font-family="Times,serif" font-size="14.00" fill="#000000">TypersStats.this.Counter =&gt; Ordered[TypersStats.this.Counter]</text>
<text text-anchor="middle" x="18766.614" y="-222359.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.math.Ordering[RefChecks.this.global.Symbol#NameType] -->
<g id="node3083" class="node">
<title>scala.math.Ordering[RefChecks.this.global.Symbol#NameType]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-222442.8701" rx="262.1733" ry="26.7407"/>
<text text-anchor="start" x="18589.114" y="-222446.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.math.Ordering[RefChecks.this.global.Symbol#NameType]</text>
<text text-anchor="middle" x="18766.614" y="-222431.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.typechecker.ContextMode.ImplicitsEnabled.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3084" class="node">
<title>scala.tools.nsc.typechecker.ContextMode.ImplicitsEnabled.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-222514.8701" rx="323.7099" ry="26.7407"/>
<text text-anchor="start" x="18545.614" y="-222518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.ContextMode.ImplicitsEnabled.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-222503.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[java.net.URL] =&gt; ?{def toArray: ?} -->
<g id="node3085" class="node">
<title>Array[java.net.URL] =&gt; ?{def toArray: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-222586.8701" rx="177.4676" ry="26.7407"/>
<text text-anchor="start" x="18649.114" y="-222590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[java.net.URL] =&gt; ?{def toArray: ?}</text>
<text text-anchor="middle" x="18766.614" y="-222575.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Array[Short] -->
<g id="node3086" class="node">
<title>((Nothing, Nothing)) =&gt; Array[Short]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-222658.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="18662.614" y="-222662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Array[Short]</text>
<text text-anchor="middle" x="18766.614" y="-222647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;isBundle&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3087" class="node">
<title>String(&#39;isBundle&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-222730.8701" rx="142.6713" ry="26.7407"/>
<text text-anchor="start" x="18673.614" y="-222734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;isBundle&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-222719.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[Product,List[MatchOptimization.this.global.Tree]],MatchOptimization.this.global.Tree,That] -->
<g id="node3088" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[Product,List[MatchOptimization.this.global.Tree]],MatchOptimization.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-222802.8701" rx="654.1476" ry="26.7407"/>
<text text-anchor="start" x="18312.114" y="-222806.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[Product,List[MatchOptimization.this.global.Tree]],MatchOptimization.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-222791.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;.scalac&#39;) =&gt; scala.reflect.io.Path -->
<g id="node3089" class="node">
<title>String(&#39;.scalac&#39;) =&gt; scala.reflect.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-222874.8701" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="18659.114" y="-222878.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;.scalac&#39;) =&gt; scala.reflect.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-222863.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; NamesDefaults.this.global.Tree -->
<g id="node3090" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; NamesDefaults.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-222946.8701" rx="246.1463" ry="26.7407"/>
<text text-anchor="start" x="18600.614" y="-222950.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; NamesDefaults.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-222935.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ToolBoxGlobal.this.settings.BooleanSetting =&gt; Boolean -->
<g id="node3091" class="node">
<title>ToolBoxGlobal.this.settings.BooleanSetting =&gt; Boolean</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-223018.8701" rx="230.5336" ry="26.7407"/>
<text text-anchor="start" x="18611.614" y="-223022.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ToolBoxGlobal.this.settings.BooleanSetting =&gt; Boolean</text>
<text text-anchor="middle" x="18766.614" y="-223007.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- proxyName.type =&gt; ?{def setterName: ?} -->
<g id="node3092" class="node">
<title>proxyName.type =&gt; ?{def setterName: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-223090.8701" rx="175.2251" ry="26.7407"/>
<text text-anchor="start" x="18650.614" y="-223094.6701" font-family="Times,serif" font-size="14.00" fill="#000000">proxyName.type =&gt; ?{def setterName: ?}</text>
<text text-anchor="middle" x="18766.614" y="-223079.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[LambdaLift.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B] -->
<g id="node3093" class="node">
<title>List[LambdaLift.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-223162.8701" rx="328.1951" ry="26.7407"/>
<text text-anchor="start" x="18542.614" y="-223166.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[LambdaLift.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[B]</text>
<text text-anchor="middle" x="18766.614" y="-223151.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- LambdaLift.this.global.Scope =&gt; LambdaLift.this.global.Type -->
<g id="node3094" class="node">
<title>LambdaLift.this.global.Scope =&gt; LambdaLift.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-223234.8701" rx="255.0313" ry="26.7407"/>
<text text-anchor="start" x="18594.114" y="-223238.6701" font-family="Times,serif" font-size="14.00" fill="#000000">LambdaLift.this.global.Scope =&gt; LambdaLift.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-223223.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- Int(64) =&gt; scala.tools.nsc.typechecker.ContextMode -->
<g id="node3095" class="node">
<title>Int(64) =&gt; scala.tools.nsc.typechecker.ContextMode</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-223306.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-223310.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Int(64) =&gt; scala.tools.nsc.typechecker.ContextMode</text>
<text text-anchor="middle" x="18766.614" y="-223295.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode],scala.tools.asm.tree.MethodInsnNode,That] -->
<g id="node3096" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode],scala.tools.asm.tree.MethodInsnNode,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-223378.8701" rx="610.4664" ry="26.7407"/>
<text text-anchor="start" x="18343.114" y="-223382.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[scala.tools.asm.tree.AbstractInsnNode],scala.tools.asm.tree.MethodInsnNode,That]</text>
<text text-anchor="middle" x="18766.614" y="-223367.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Nothing],DependencyGraph.this.Edge,List[DependencyGraph.this.Edge]] -->
<g id="node3097" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Nothing],DependencyGraph.this.Edge,List[DependencyGraph.this.Edge]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-223450.8701" rx="468.2094" ry="26.7407"/>
<text text-anchor="start" x="18443.614" y="-223454.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Nothing],DependencyGraph.this.Edge,List[DependencyGraph.this.Edge]]</text>
<text text-anchor="middle" x="18766.614" y="-223439.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;reifee %s of type %s is not supported&#39;) =&gt; ?{def format: ?} -->
<g id="node3098" class="node">
<title>String(&#39;reifee %s of type %s is not supported&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-223522.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="18583.114" y="-223526.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;reifee %s of type %s is not supported&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-223511.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- (=&gt; Unit) =&gt; java.util.Map[_ &lt;: K, _ &lt;: V] -->
<g id="node3099" class="node">
<title>(=&gt; Unit) =&gt; java.util.Map[_ &lt;: K, _ &lt;: V]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-223594.8701" rx="181.0387" ry="26.7407"/>
<text text-anchor="start" x="18646.614" y="-223598.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; java.util.Map[_ &lt;: K, _ &lt;: V]</text>
<text text-anchor="middle" x="18766.614" y="-223583.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;imported `%s\&#39; is permanently hidden by definition of %s&#39;) =&gt; ?{def format: ?} -->
<g id="node3100" class="node">
<title>String(&#39;imported `%s\&#39; is permanently hidden by definition of %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-223666.8701" rx="346.4646" ry="26.7407"/>
<text text-anchor="start" x="18529.614" y="-223670.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;imported `%s&#39; is permanently hidden by definition of %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-223655.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[SpecializeTypes.this.global.Symbol,SpecializeTypes.this.global.Type],SpecializeTypes.this.global.Symbol,That] -->
<g id="node3101" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[SpecializeTypes.this.global.Symbol,SpecializeTypes.this.global.Type],SpecializeTypes.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-223738.8701" rx="729.9685" ry="26.7407"/>
<text text-anchor="start" x="18258.614" y="-223742.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[SpecializeTypes.this.global.Symbol,SpecializeTypes.this.global.Type],SpecializeTypes.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-223727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; TreeAndTypeAnalysis.this.global.Scope) =&gt; TreeAndTypeAnalysis.this.global.Type -->
<g id="node3102" class="node">
<title>(=&gt; TreeAndTypeAnalysis.this.global.Scope) =&gt; TreeAndTypeAnalysis.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-223810.8701" rx="357.5922" ry="26.7407"/>
<text text-anchor="start" x="18521.614" y="-223814.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; TreeAndTypeAnalysis.this.global.Scope) =&gt; TreeAndTypeAnalysis.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-223799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;last tree to typer&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3103" class="node">
<title>String(&#39;last tree to typer&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-223882.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="18653.614" y="-223886.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;last tree to typer&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-223871.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.util.Iterator[java.nio.file.Path] =&gt; ?{def asScala: ?} -->
<g id="node3104" class="node">
<title>java.util.Iterator[java.nio.file.Path] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-223954.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-223958.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.Iterator[java.nio.file.Path] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-223943.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- RefChecks.this.global.Type =&gt; ?{def +: ?} -->
<g id="node3105" class="node">
<title>RefChecks.this.global.Type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-224026.8701" rx="179.7103" ry="26.7407"/>
<text text-anchor="start" x="18647.614" y="-224030.6701" font-family="Times,serif" font-size="14.00" fill="#000000">RefChecks.this.global.Type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-224015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.global.definitions.BooleanClass.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3106" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.global.definitions.BooleanClass.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-224098.8701" rx="370.5479" ry="26.7407"/>
<text text-anchor="start" x="18512.614" y="-224102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.global.definitions.BooleanClass.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-224087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.BREAKkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3107" class="node">
<title>JavaScanners.this.global.javanme.BREAKkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-224170.8701" rx="271.558" ry="26.7407"/>
<text text-anchor="start" x="18582.614" y="-224174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.BREAKkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-224159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Namers.this.global.TypeDef],Namers.this.global.TypeDef,That] -->
<g id="node3108" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Namers.this.global.TypeDef],Namers.this.global.TypeDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-224242.8701" rx="432.0845" ry="26.7407"/>
<text text-anchor="start" x="18469.114" y="-224246.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Namers.this.global.TypeDef],Namers.this.global.TypeDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-224231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Contexts.this.global.Symbol -->
<g id="node3109" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Contexts.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-224314.8701" rx="255.9453" ry="26.7407"/>
<text text-anchor="start" x="18593.614" y="-224318.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Contexts.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-224303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- badFlags.type =&gt; ?{def foreach: ?} -->
<g id="node3110" class="node">
<title>badFlags.type =&gt; ?{def foreach: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-224386.8701" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="18669.114" y="-224390.6701" font-family="Times,serif" font-size="14.00" fill="#000000">badFlags.type =&gt; ?{def foreach: ?}</text>
<text text-anchor="middle" x="18766.614" y="-224375.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[Int],AccessorSynthesis.this.global.TermSymbol,That] -->
<g id="node3111" class="node">
<title>scala.collection.generic.CanBuildFrom[Array[Int],AccessorSynthesis.this.global.TermSymbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-114188.8701" rx="399.5307" ry="26.7407"/>
<text text-anchor="start" x="18492.114" y="-114192.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Array[Int],AccessorSynthesis.this.global.TermSymbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-114177.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Array[Int],AccessorSynthesis.this.global.TermSymbol,That]&#45;&gt;scala.reflect.ClassTag[AccessorSynthesis.this.global.TermSymbol] -->
<g id="edge22" class="edge">
<title>scala.collection.generic.CanBuildFrom[Array[Int],AccessorSynthesis.this.global.TermSymbol,That]&#45;&gt;scala.reflect.ClassTag[AccessorSynthesis.this.global.TermSymbol]</title>
<path fill="none" stroke="#000000" d="M19166.1396,-114188.8701C21719.5438,-114188.8701 35715.545,-114188.8701 37880.1209,-114188.8701"/>
<polygon fill="#000000" stroke="#000000" points="37880.3526,-114192.3702 37890.3525,-114188.8701 37880.3525,-114185.3702 37880.3526,-114192.3702"/>
</g>
<!-- Some[Parsers.this.global.TypeDef] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node3112" class="node">
<title>Some[Parsers.this.global.TypeDef] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-224458.8701" rx="318.3962" ry="26.7407"/>
<text text-anchor="start" x="18549.614" y="-224462.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Some[Parsers.this.global.TypeDef] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-224447.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Set[Infer.this.global.TypeVar] =&gt; ?{def +=: ?} -->
<g id="node3113" class="node">
<title>scala.collection.immutable.Set[Infer.this.global.TypeVar] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-224530.8701" rx="301.8692" ry="26.7407"/>
<text text-anchor="start" x="18561.114" y="-224534.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[Infer.this.global.TypeVar] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-224519.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Macros.this.MacroRuntimeAttachment] -->
<g id="node3114" class="node">
<title>scala.reflect.ClassTag[Macros.this.MacroRuntimeAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-224602.8701" rx="254.6169" ry="26.7407"/>
<text text-anchor="start" x="18594.614" y="-224606.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Macros.this.MacroRuntimeAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-224591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 3ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Array[Float] -->
<g id="node3115" class="node">
<title>((Nothing, Nothing)) =&gt; Array[Float]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-224674.8701" rx="157.8698" ry="26.7407"/>
<text text-anchor="start" x="18663.114" y="-224678.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Array[Float]</text>
<text text-anchor="middle" x="18766.614" y="-224663.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- parent.type =&gt; ?{def +: ?} -->
<g id="node3116" class="node">
<title>parent.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-224746.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="18692.614" y="-224750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">parent.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-224735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- BCodeSkelBuilder.this.global.Symbol =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3117" class="node">
<title>BCodeSkelBuilder.this.global.Symbol =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-224818.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="18616.114" y="-224822.6701" font-family="Times,serif" font-size="14.00" fill="#000000">BCodeSkelBuilder.this.global.Symbol =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-224807.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; SymbolTables.this.global.Tree -->
<g id="node3118" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; SymbolTables.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-224890.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="18577.114" y="-224894.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; SymbolTables.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-224879.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- StdOpts.this.Bash.name.type =&gt; ?{def &#45;&#45;&gt;: ?} -->
<g id="node3119" class="node">
<title>StdOpts.this.Bash.name.type =&gt; ?{def &#45;&#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-224962.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="18639.614" y="-224966.6701" font-family="Times,serif" font-size="14.00" fill="#000000">StdOpts.this.Bash.name.type =&gt; ?{def &#45;&#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-224951.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.SubComponent],scala.tools.nsc.SubComponent,That] -->
<g id="node3120" class="node">
<title>scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.SubComponent],scala.tools.nsc.SubComponent,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-225034.8701" rx="449.0256" ry="26.7407"/>
<text text-anchor="start" x="18457.114" y="-225038.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[scala.tools.nsc.SubComponent],scala.tools.nsc.SubComponent,That]</text>
<text text-anchor="middle" x="18766.614" y="-225023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39; %s(%s)&#39;) =&gt; ?{def format: ?} -->
<g id="node3121" class="node">
<title>String(&#39; %s(%s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-225106.8701" rx="159.1981" ry="26.7407"/>
<text text-anchor="start" x="18662.114" y="-225110.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39; %s(%s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-225095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- FastTrack.this.macros.global.Symbol =&gt; FastTrack.this.macros.global.Tree -->
<g id="node3122" class="node">
<title>FastTrack.this.macros.global.Symbol =&gt; FastTrack.this.macros.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-225178.8701" rx="305.4403" ry="26.7407"/>
<text text-anchor="start" x="18558.614" y="-225182.6701" font-family="Times,serif" font-size="14.00" fill="#000000">FastTrack.this.macros.global.Symbol =&gt; FastTrack.this.macros.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-225167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 1ms</text>
</g>
<!-- Option[scala.tools.nsc.util.ClassPath] =&gt; Traversable[scala.tools.nsc.util.ClassPath] -->
<g id="node3123" class="node">
<title>Option[scala.tools.nsc.util.ClassPath] =&gt; Traversable[scala.tools.nsc.util.ClassPath]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-225250.8701" rx="335.7515" ry="26.7407"/>
<text text-anchor="start" x="18537.114" y="-225254.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Option[scala.tools.nsc.util.ClassPath] =&gt; Traversable[scala.tools.nsc.util.ClassPath]</text>
<text text-anchor="middle" x="18766.614" y="-225239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- until.type =&gt; ?{def head: ?} -->
<g id="node3124" class="node">
<title>until.type =&gt; ?{def head: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-225322.8701" rx="121.7449" ry="26.7407"/>
<text text-anchor="start" x="18688.614" y="-225326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">until.type =&gt; ?{def head: ?}</text>
<text text-anchor="middle" x="18766.614" y="-225311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def +=: ?} -->
<g id="node3125" class="node">
<title>String =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-225394.8701" rx="101.6471" ry="26.7407"/>
<text text-anchor="start" x="18702.614" y="-225398.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-225383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 1ms</text>
</g>
<!-- thenp.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3126" class="node">
<title>thenp.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-225466.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="18692.614" y="-225470.6701" font-family="Times,serif" font-size="14.00" fill="#000000">thenp.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-225455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; UnCurry.this.global.Tree -->
<g id="node3127" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; UnCurry.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-225538.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="18602.614" y="-225542.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; UnCurry.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-225527.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Global.this.extensionMethods.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3128" class="node">
<title>Global.this.extensionMethods.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-225610.8701" rx="210.9359" ry="26.7407"/>
<text text-anchor="start" x="18625.614" y="-225614.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.extensionMethods.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-225599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- resources.type =&gt; ?{def asScala: ?} -->
<g id="node3129" class="node">
<title>resources.type =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-225682.8701" rx="150.7276" ry="26.7407"/>
<text text-anchor="start" x="18668.114" y="-225686.6701" font-family="Times,serif" font-size="14.00" fill="#000000">resources.type =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-225671.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTrackers.this.global.Symbol],(SymbolTrackers.this.global.Symbol, Long),That] -->
<g id="node3130" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTrackers.this.global.Symbol],(SymbolTrackers.this.global.Symbol, Long),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-225754.8701" rx="627.4075" ry="26.7407"/>
<text text-anchor="start" x="18331.114" y="-225758.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[SymbolTrackers.this.global.Symbol],(SymbolTrackers.this.global.Symbol, Long),That]</text>
<text text-anchor="middle" x="18766.614" y="-225743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Type],TreeAndTypeAnalysis.this.global.WildcardType.type,That] -->
<g id="node3131" class="node">
<title>scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Type],TreeAndTypeAnalysis.this.global.WildcardType.type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-225826.8701" rx="572.0988" ry="26.7407"/>
<text text-anchor="start" x="18370.114" y="-225830.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[TreeAndTypeAnalysis.this.global.Type],TreeAndTypeAnalysis.this.global.WildcardType.type,That]</text>
<text text-anchor="middle" x="18766.614" y="-225815.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[TreeCheckers.this.global.DefTree] =&gt; ?{def ::=: ?} -->
<g id="node3132" class="node">
<title>List[TreeCheckers.this.global.DefTree] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-225898.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-225902.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[TreeCheckers.this.global.DefTree] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-225887.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[java.net.URL],scala.tools.nsc.util.ClassPath,That] -->
<g id="node3133" class="node">
<title>scala.collection.generic.CanBuildFrom[List[java.net.URL],scala.tools.nsc.util.ClassPath,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-225970.8701" rx="376.3617" ry="26.7407"/>
<text text-anchor="start" x="18508.614" y="-225974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[java.net.URL],scala.tools.nsc.util.ClassPath,That]</text>
<text text-anchor="middle" x="18766.614" y="-225959.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- javaFiles.type =&gt; ?{def isEmpty: ?} -->
<g id="node3134" class="node">
<title>javaFiles.type =&gt; ?{def isEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-226042.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="18666.614" y="-226046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">javaFiles.type =&gt; ?{def isEmpty: ?}</text>
<text text-anchor="middle" x="18766.614" y="-226031.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[(ScannersCommon.this.global.Name, ScannersCommon.this.Token)],(Int, ScannersCommon.this.Token),That] -->
<g id="node3135" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[(ScannersCommon.this.global.Name, ScannersCommon.this.Token)],(Int, ScannersCommon.this.Token),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-226114.8701" rx="615.3659" ry="26.7407"/>
<text text-anchor="start" x="18339.614" y="-226118.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[(ScannersCommon.this.global.Name, ScannersCommon.this.Token)],(Int, ScannersCommon.this.Token),That]</text>
<text text-anchor="middle" x="18766.614" y="-226103.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.TypeVar,That] -->
<g id="node3136" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.TypeVar,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-226186.8701" rx="408.9155" ry="26.7407"/>
<text text-anchor="start" x="18485.614" y="-226190.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Infer.this.global.TypeVar],Infer.this.global.TypeVar,That]</text>
<text text-anchor="middle" x="18766.614" y="-226175.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[RefChecks.this.global.Symbol]],Int,That] -->
<g id="node3137" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[RefChecks.this.global.Symbol]],Int,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-226258.8701" rx="362.0773" ry="26.7407"/>
<text text-anchor="start" x="18518.614" y="-226262.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[RefChecks.this.global.Symbol]],Int,That]</text>
<text text-anchor="middle" x="18766.614" y="-226247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;className&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3138" class="node">
<title>String(&#39;className&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-226330.8701" rx="150.7276" ry="26.7407"/>
<text text-anchor="start" x="18668.114" y="-226334.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;className&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-226319.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Set[MatchApproximator.this.Prop] -->
<g id="node3139" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Set[MatchApproximator.this.Prop]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-226402.8701" rx="258.6023" ry="26.7407"/>
<text text-anchor="start" x="18591.614" y="-226406.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Set[MatchApproximator.this.Prop]</text>
<text text-anchor="middle" x="18766.614" y="-226391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[Typers.this.global.ValDef]],List[Typers.this.global.ValDef],List[List[Typers.this.global.ValDef]]] -->
<g id="node3140" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[Typers.this.global.ValDef]],List[Typers.this.global.ValDef],List[List[Typers.this.global.ValDef]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-226474.8701" rx="580.5693" ry="26.7407"/>
<text text-anchor="start" x="18364.114" y="-226478.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[Typers.this.global.ValDef]],List[Typers.this.global.ValDef],List[List[Typers.this.global.ValDef]]]</text>
<text text-anchor="middle" x="18766.614" y="-226463.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;,(&#39;) =&gt; ?{def filter: ?} -->
<g id="node3141" class="node">
<title>String(&#39;,(&#39;) =&gt; ?{def filter: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-226546.8701" rx="124.4016" ry="26.7407"/>
<text text-anchor="start" x="18686.614" y="-226550.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;,(&#39;) =&gt; ?{def filter: ?}</text>
<text text-anchor="middle" x="18766.614" y="-226535.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- MatchOptimization.this.CODE.SelectStart =&gt; MatchOptimization.this.global.Tree -->
<g id="node3142" class="node">
<title>MatchOptimization.this.CODE.SelectStart =&gt; MatchOptimization.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-226618.8701" rx="332.1805" ry="26.7407"/>
<text text-anchor="start" x="18539.614" y="-226622.6701" font-family="Times,serif" font-size="14.00" fill="#000000">MatchOptimization.this.CODE.SelectStart =&gt; MatchOptimization.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-226607.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- String(&#39;Compiling %d file%s to %s&#39;) =&gt; ?{def format: ?} -->
<g id="node3143" class="node">
<title>String(&#39;Compiling %d file%s to %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-226690.8701" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="18608.114" y="-226694.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Compiling %d file%s to %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-226679.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[BCodeHelpers.this.bTypes.BType] =&gt; Array[String] -->
<g id="node3144" class="node">
<title>Array[BCodeHelpers.this.bTypes.BType] =&gt; Array[String]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-226762.8701" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="18604.114" y="-226766.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[BCodeHelpers.this.bTypes.BType] =&gt; Array[String]</text>
<text text-anchor="middle" x="18766.614" y="-226751.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- expr.type =&gt; ?{def tail: ?} -->
<g id="node3145" class="node">
<title>expr.type =&gt; ?{def tail: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-226834.8701" rx="115.0173" ry="26.7407"/>
<text text-anchor="start" x="18693.114" y="-226838.6701" font-family="Times,serif" font-size="14.00" fill="#000000">expr.type =&gt; ?{def tail: ?}</text>
<text text-anchor="middle" x="18766.614" y="-226823.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;_(\\d{1,2}).*&#39;) =&gt; ?{def r: ?} -->
<g id="node3146" class="node">
<title>String(&#39;_(\\d{1,2}).*&#39;) =&gt; ?{def r: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-226906.8701" rx="150.7276" ry="26.7407"/>
<text text-anchor="start" x="18668.114" y="-226910.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;_(\d{1,2}).*&#39;) =&gt; ?{def r: ?}</text>
<text text-anchor="middle" x="18766.614" y="-226895.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Float =&gt; Int -->
<g id="node3147" class="node">
<title>Float =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-226978.8701" rx="82.0488" ry="26.7407"/>
<text text-anchor="start" x="18716.614" y="-226982.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Float =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-226967.6701" font-family="Times,serif" font-size="14.00" fill="#000000">478 times = 28ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[s.BooleanSetting],String,That] -->
<g id="node3148" class="node">
<title>scala.collection.generic.CanBuildFrom[List[s.BooleanSetting],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-227050.8701" rx="301.4551" ry="26.7407"/>
<text text-anchor="start" x="18561.614" y="-227054.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[s.BooleanSetting],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-227039.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; SymbolTables.this.global.Symbol -->
<g id="node3149" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; SymbolTables.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-227122.8701" rx="313.9108" ry="26.7407"/>
<text text-anchor="start" x="18552.614" y="-227126.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; SymbolTables.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-227111.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 1ms</text>
</g>
<!-- (=&gt; (Nothing, Unit)) =&gt; Typers.this.global.Symbol -->
<g id="node3150" class="node">
<title>(=&gt; (Nothing, Unit)) =&gt; Typers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-227194.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="18625.114" y="-227198.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit)) =&gt; Typers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-227183.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; ToolBoxGlobal.this.CompilationUnit -->
<g id="node3151" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; ToolBoxGlobal.this.CompilationUnit</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-227266.8701" rx="267.9869" ry="26.7407"/>
<text text-anchor="start" x="18585.114" y="-227270.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; ToolBoxGlobal.this.CompilationUnit</text>
<text text-anchor="middle" x="18766.614" y="-227255.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Scanners.this.global.nme.RETURNkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3152" class="node">
<title>Scanners.this.global.nme.RETURNkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-227338.8701" rx="244.818" ry="26.7407"/>
<text text-anchor="start" x="18601.614" y="-227342.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Scanners.this.global.nme.RETURNkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-227327.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;quot&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3153" class="node">
<title>String(&#39;quot&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-227410.8701" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="18685.614" y="-227414.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;quot&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-227399.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; Contexts.this.global.Symbol -->
<g id="node3154" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; Contexts.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-227482.8701" rx="270.2296" ry="26.7407"/>
<text text-anchor="start" x="18583.614" y="-227486.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; Contexts.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-227471.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[Seq[Any],String,Seq[String]] -->
<g id="node3155" class="node">
<title>scala.collection.generic.CanBuildFrom[Seq[Any],String,Seq[String]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-227554.8701" rx="278.7002" ry="26.7407"/>
<text text-anchor="start" x="18577.614" y="-227558.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[Seq[Any],String,Seq[String]]</text>
<text text-anchor="middle" x="18766.614" y="-227543.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;during phase&#39;) =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3156" class="node">
<title>String(&#39;during phase&#39;) =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-227626.8701" rx="158.2839" ry="26.7407"/>
<text text-anchor="start" x="18662.614" y="-227630.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;during phase&#39;) =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-227615.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 4ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Set[MatchAnalyzer.this.Prop] -->
<g id="node3157" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Set[MatchAnalyzer.this.Prop]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-227698.8701" rx="239.0042" ry="26.7407"/>
<text text-anchor="start" x="18605.614" y="-227702.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Set[MatchAnalyzer.this.Prop]</text>
<text text-anchor="middle" x="18766.614" y="-227687.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- c.type =&gt; ?{def AND: ?} -->
<g id="node3158" class="node">
<title>c.type =&gt; ?{def AND: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-227770.8701" rx="111.0315" ry="26.7407"/>
<text text-anchor="start" x="18696.114" y="-227774.6701" font-family="Times,serif" font-size="14.00" fill="#000000">c.type =&gt; ?{def AND: ?}</text>
<text text-anchor="middle" x="18766.614" y="-227759.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- from.type =&gt; ?{def dropModule: ?} -->
<g id="node3159" class="node">
<title>from.type =&gt; ?{def dropModule: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-227842.8701" rx="152.9705" ry="26.7407"/>
<text text-anchor="start" x="18666.614" y="-227846.6701" font-family="Times,serif" font-size="14.00" fill="#000000">from.type =&gt; ?{def dropModule: ?}</text>
<text text-anchor="middle" x="18766.614" y="-227831.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Long]) =&gt; Array[AnyRef] -->
<g id="node3160" class="node">
<title>(=&gt; Array[Long]) =&gt; Array[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-227914.8701" rx="156.9554" ry="26.7407"/>
<text text-anchor="start" x="18663.614" y="-227918.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Long]) =&gt; Array[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-227903.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.Symbol,List[Typers.this.global.Symbol]] -->
<g id="node3161" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.Symbol,List[Typers.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-227986.8701" rx="523.0181" ry="26.7407"/>
<text text-anchor="start" x="18404.614" y="-227990.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.Symbol,List[Typers.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-227975.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Macros.this.global.AnnotationInfo) =&gt; Macros.this.global.Type -->
<g id="node3162" class="node">
<title>(=&gt; Macros.this.global.AnnotationInfo) =&gt; Macros.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-228058.8701" rx="277.3718" ry="26.7407"/>
<text text-anchor="start" x="18578.614" y="-228062.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Macros.this.global.AnnotationInfo) =&gt; Macros.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-228047.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Unit =&gt; List[MatchCodeGen.this.global.Tree] -->
<g id="node3163" class="node">
<title>Unit =&gt; List[MatchCodeGen.this.global.Tree]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-228130.8701" rx="190.8377" ry="26.7407"/>
<text text-anchor="start" x="18639.614" y="-228134.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Unit =&gt; List[MatchCodeGen.this.global.Tree]</text>
<text text-anchor="middle" x="18766.614" y="-228119.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;/&#39;) =&gt; scala.reflect.io.Path -->
<g id="node3164" class="node">
<title>String(&#39;/&#39;) =&gt; scala.reflect.io.Path</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-228202.8701" rx="140.0143" ry="26.7407"/>
<text text-anchor="start" x="18675.614" y="-228206.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;/&#39;) =&gt; scala.reflect.io.Path</text>
<text text-anchor="middle" x="18766.614" y="-228191.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Typers.this.global.ClassfileAnnotArg] -->
<g id="node3165" class="node">
<title>scala.reflect.ClassTag[Typers.this.global.ClassfileAnnotArg]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-228274.8701" rx="246.5607" ry="26.7407"/>
<text text-anchor="start" x="18600.114" y="-228278.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Typers.this.global.ClassfileAnnotArg]</text>
<text text-anchor="middle" x="18766.614" y="-228263.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Array[Byte]) =&gt; Array[Class[_]] -->
<g id="node3166" class="node">
<title>(=&gt; Array[Byte]) =&gt; Array[Class[_]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-228346.8701" rx="156.0415" ry="26.7407"/>
<text text-anchor="start" x="18664.114" y="-228350.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Byte]) =&gt; Array[Class[_]]</text>
<text text-anchor="middle" x="18766.614" y="-228335.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- tree.type =&gt; ?{def +: ?} -->
<g id="node3167" class="node">
<title>tree.type =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-228418.8701" rx="106.1321" ry="26.7407"/>
<text text-anchor="start" x="18699.614" y="-228422.6701" font-family="Times,serif" font-size="14.00" fill="#000000">tree.type =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-228407.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; EtaExpansion.this.global.gen.global.Symbol -->
<g id="node3168" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; EtaExpansion.this.global.gen.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-228490.8701" rx="295.6413" ry="26.7407"/>
<text text-anchor="start" x="18565.614" y="-228494.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; EtaExpansion.this.global.gen.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-228479.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Locatable: %s (%s) owned by %s (%s) at %s&#39;) =&gt; ?{def format: ?} -->
<g id="node3169" class="node">
<title>String(&#39;Locatable: %s (%s) owned by %s (%s) at %s&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-228562.8701" rx="302.7835" ry="26.7407"/>
<text text-anchor="start" x="18560.614" y="-228566.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Locatable: %s (%s) owned by %s (%s) at %s&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-228551.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; java.io.FileDescriptor -->
<g id="node3170" class="node">
<title>((Nothing, Nothing)) =&gt; java.io.FileDescriptor</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-228634.8701" rx="193.0803" ry="26.7407"/>
<text text-anchor="start" x="18638.114" y="-228638.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; java.io.FileDescriptor</text>
<text text-anchor="middle" x="18766.614" y="-228623.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- synthesizer.clazz.NameType =&gt; ?{def +: ?} -->
<g id="node3171" class="node">
<title>synthesizer.clazz.NameType =&gt; ?{def +: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-228706.8701" rx="183.6957" ry="26.7407"/>
<text text-anchor="start" x="18644.614" y="-228710.6701" font-family="Times,serif" font-size="14.00" fill="#000000">synthesizer.clazz.NameType =&gt; ?{def +: ?}</text>
<text text-anchor="middle" x="18766.614" y="-228695.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[String] =&gt; ?{def +:=: ?} -->
<g id="node3172" class="node">
<title>List[String] =&gt; ?{def +:=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-228778.8701" rx="125.7302" ry="26.7407"/>
<text text-anchor="start" x="18685.614" y="-228782.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[String] =&gt; ?{def +:=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-228767.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- String(&#39;tough type: %s (%s)&#39;) =&gt; ?{def format: ?} -->
<g id="node3173" class="node">
<title>String(&#39;tough type: %s (%s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-228850.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="18629.614" y="-228854.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;tough type: %s (%s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-228839.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Global.this.mixer.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3174" class="node">
<title>Global.this.mixer.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-228922.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="18659.614" y="-228926.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.mixer.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-228911.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; Implicits.this.global.TypeBounds -->
<g id="node3175" class="node">
<title>(=&gt; Unit) =&gt; Implicits.this.global.TypeBounds</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-228994.8701" rx="195.3231" ry="26.7407"/>
<text text-anchor="start" x="18636.614" y="-228998.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; Implicits.this.global.TypeBounds</text>
<text text-anchor="middle" x="18766.614" y="-228983.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- CleanUp.this.global.gen.global.RefTree =&gt; ?{def ===: ?} -->
<g id="node3176" class="node">
<title>CleanUp.this.global.gen.global.RefTree =&gt; ?{def ===: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-229066.8701" rx="238.0901" ry="26.7407"/>
<text text-anchor="start" x="18606.114" y="-229070.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CleanUp.this.global.gen.global.RefTree =&gt; ?{def ===: ?}</text>
<text text-anchor="middle" x="18766.614" y="-229055.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.tools.nsc.typechecker.ContextMode.SelfSuperCall.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3177" class="node">
<title>scala.tools.nsc.typechecker.ContextMode.SelfSuperCall.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-229138.8701" rx="311.254" ry="26.7407"/>
<text text-anchor="start" x="18554.614" y="-229142.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.typechecker.ContextMode.SelfSuperCall.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-229127.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Double) =&gt; Int -->
<g id="node3178" class="node">
<title>(=&gt; Double) =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-229210.8701" rx="88.2768" ry="26.7407"/>
<text text-anchor="start" x="18712.114" y="-229214.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Double) =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-229199.6701" font-family="Times,serif" font-size="14.00" fill="#000000">478 times = 25ms</text>
</g>
<!-- bits.type =&gt; ?{def toLong: ?} -->
<g id="node3179" class="node">
<title>bits.type =&gt; ?{def toLong: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-229282.8701" rx="127.0588" ry="26.7407"/>
<text text-anchor="start" x="18684.614" y="-229286.6701" font-family="Times,serif" font-size="14.00" fill="#000000">bits.type =&gt; ?{def toLong: ?}</text>
<text text-anchor="middle" x="18766.614" y="-229271.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.BOOLEANkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3180" class="node">
<title>JavaScanners.this.global.javanme.BOOLEANkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-229354.8701" rx="284.9281" ry="26.7407"/>
<text text-anchor="start" x="18573.114" y="-229358.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.BOOLEANkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-229343.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Taggers.this.c.universe.definitions.ObjectTpe.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3181" class="node">
<title>Taggers.this.c.universe.definitions.ObjectTpe.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-229426.8701" rx="270.6439" ry="26.7407"/>
<text text-anchor="start" x="18583.114" y="-229430.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Taggers.this.c.universe.definitions.ObjectTpe.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-229415.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Unit) =&gt; List[MatchCodeGen.this.global.Tree] -->
<g id="node3183" class="node">
<title>(=&gt; Unit) =&gt; List[MatchCodeGen.this.global.Tree]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-229498.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="18625.114" y="-229502.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Unit) =&gt; List[MatchCodeGen.this.global.Tree]</text>
<text text-anchor="middle" x="18766.614" y="-229487.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Taggers.this.c.universe.definitions.AnyTpe.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3184" class="node">
<title>Taggers.this.c.universe.definitions.AnyTpe.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-229570.8701" rx="261.7591" ry="26.7407"/>
<text text-anchor="start" x="18589.614" y="-229574.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Taggers.this.c.universe.definitions.AnyTpe.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-229559.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Symbol],Implicits.this.global.TypeVar,That] -->
<g id="node3185" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Symbol],Implicits.this.global.TypeVar,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-229642.8701" rx="436.984" ry="26.7407"/>
<text text-anchor="start" x="18465.614" y="-229646.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Implicits.this.global.Symbol],Implicits.this.global.TypeVar,That]</text>
<text text-anchor="middle" x="18766.614" y="-229631.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Validators.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[Validators.this.global.Symbol] -->
<g id="node3186" class="node">
<title>List[Validators.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[Validators.this.global.Symbol]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-229714.8701" rx="430.7561" ry="26.7407"/>
<text text-anchor="start" x="18470.114" y="-229718.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Validators.this.global.Symbol] =&gt; scala.collection.GenTraversableOnce[Validators.this.global.Symbol]</text>
<text text-anchor="middle" x="18766.614" y="-229703.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 2ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; JavaParsers.this.global.Symbol -->
<g id="node3187" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; JavaParsers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-229786.8701" rx="317.4819" ry="26.7407"/>
<text text-anchor="start" x="18550.114" y="-229790.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; JavaParsers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-229775.6701" font-family="Times,serif" font-size="14.00" fill="#000000">12 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],java.io.File,That] -->
<g id="node3188" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],java.io.File,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-229858.8701" rx="279.1145" ry="26.7407"/>
<text text-anchor="start" x="18577.114" y="-229862.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],java.io.File,That]</text>
<text text-anchor="middle" x="18766.614" y="-229847.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[(scala.tools.asm.Label, BCodeBodyBuilder.this.global.Tree)]) =&gt; ?{def ::=: ?} -->
<g id="node3189" class="node">
<title>(=&gt; List[(scala.tools.asm.Label, BCodeBodyBuilder.this.global.Tree)]) =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-229930.8701" rx="353.6068" ry="26.7407"/>
<text text-anchor="start" x="18524.614" y="-229934.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[(scala.tools.asm.Label, BCodeBodyBuilder.this.global.Tree)]) =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-229919.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- List[Int] =&gt; ?{def ::=: ?} -->
<g id="node3190" class="node">
<title>List[Int] =&gt; ?{def ::=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-230002.8701" rx="109.7032" ry="26.7407"/>
<text text-anchor="start" x="18697.114" y="-230006.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[Int] =&gt; ?{def ::=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-229991.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.CONTINUEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3191" class="node">
<title>JavaScanners.this.global.javanme.CONTINUEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-230074.8701" rx="287.5851" ry="26.7407"/>
<text text-anchor="start" x="18571.114" y="-230078.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.CONTINUEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-230063.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Int] -->
<g id="node3192" class="node">
<title>(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-230146.8701" rx="224.3058" ry="26.7407"/>
<text text-anchor="start" x="18616.114" y="-230150.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-230135.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Any, Any) =&gt; Nothing) =&gt; java.util.Comparator[_ &gt;: =?Nothing] -->
<g id="node3193" class="node">
<title>((Any, Any) =&gt; Nothing) =&gt; java.util.Comparator[_ &gt;: =?Nothing]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-230218.8701" rx="274.2149" ry="26.7407"/>
<text text-anchor="start" x="18580.614" y="-230222.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Any, Any) =&gt; Nothing) =&gt; java.util.Comparator[_ &gt;: =?Nothing]</text>
<text text-anchor="middle" x="18766.614" y="-230207.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Typers.this.global.Scope =&gt; Typers.this.global.Type -->
<g id="node3194" class="node">
<title>Typers.this.global.Scope =&gt; Typers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-230290.8701" rx="215.8353" ry="26.7407"/>
<text text-anchor="start" x="18622.114" y="-230294.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Typers.this.global.Scope =&gt; Typers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-230279.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 1ms</text>
</g>
<!-- scala.tools.nsc.Settings#BooleanSetting =&gt; ?{def unary_!: ?} -->
<g id="node3195" class="node">
<title>scala.tools.nsc.Settings#BooleanSetting =&gt; ?{def unary_!: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-230362.8701" rx="249.7174" ry="26.7407"/>
<text text-anchor="start" x="18598.114" y="-230366.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.tools.nsc.Settings#BooleanSetting =&gt; ?{def unary_!: ?}</text>
<text text-anchor="middle" x="18766.614" y="-230351.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 2ms</text>
</g>
<!-- space.type =&gt; ?{def *: ?} -->
<g id="node3196" class="node">
<title>space.type =&gt; ?{def *: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-230434.8701" rx="111.9462" ry="26.7407"/>
<text text-anchor="start" x="18695.614" y="-230438.6701" font-family="Times,serif" font-size="14.00" fill="#000000">space.type =&gt; ?{def *: ?}</text>
<text text-anchor="middle" x="18766.614" y="-230423.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- UnCurry.this.global.Symbol =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3197" class="node">
<title>UnCurry.this.global.Symbol =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-230506.8701" rx="185.9382" ry="26.7407"/>
<text text-anchor="start" x="18643.114" y="-230510.6701" font-family="Times,serif" font-size="14.00" fill="#000000">UnCurry.this.global.Symbol =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-230495.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[Validators.this.global.Symbol]) =&gt; Validators.this.global.Type -->
<g id="node3198" class="node">
<title>(=&gt; List[Validators.this.global.Symbol]) =&gt; Validators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-230578.8701" rx="291.1561" ry="26.7407"/>
<text text-anchor="start" x="18568.614" y="-230582.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Validators.this.global.Symbol]) =&gt; Validators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-230567.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- maxLen.type =&gt; ?{def min: ?} -->
<g id="node3199" class="node">
<title>maxLen.type =&gt; ?{def min: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-230650.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="18680.614" y="-230654.6701" font-family="Times,serif" font-size="14.00" fill="#000000">maxLen.type =&gt; ?{def min: ?}</text>
<text text-anchor="middle" x="18766.614" y="-230639.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String =&gt; ?{def stripSuffix: ?} -->
<g id="node3200" class="node">
<title>String =&gt; ?{def stripSuffix: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-230722.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-230726.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String =&gt; ?{def stripSuffix: ?}</text>
<text text-anchor="middle" x="18766.614" y="-230711.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing)) =&gt; TreeCheckers.this.global.Tree -->
<g id="node3201" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; TreeCheckers.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-230794.8701" rx="276.4575" ry="26.7407"/>
<text text-anchor="start" x="18579.114" y="-230798.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing)) =&gt; TreeCheckers.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-230783.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- proxyName.type =&gt; ?{def getterName: ?} -->
<g id="node3202" class="node">
<title>proxyName.type =&gt; ?{def getterName: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-230866.8701" rx="176.5537" ry="26.7407"/>
<text text-anchor="start" x="18649.614" y="-230870.6701" font-family="Times,serif" font-size="14.00" fill="#000000">proxyName.type =&gt; ?{def getterName: ?}</text>
<text text-anchor="middle" x="18766.614" y="-230855.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashMap[(CoreBTypesFromSymbols.this.bTypes.global.specializeTypes.global.Symbol, CoreBTypesFromSymbols.this.bTypes.global.specializeTypes.TypeEnv),CoreBTypesFromSymbols.this.bTypes.global.specializeTypes.global.Symbol],CoreBTypesFromSymbols.this.bTypes.global.specializeTypes.global.Symbol,That] -->
<g id="node3203" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashMap[(CoreBTypesFromSymbols.this.bTypes.global.specializeTypes.global.Symbol, CoreBTypesFromSymbols.this.bTypes.global.specializeTypes.TypeEnv),CoreBTypesFromSymbols.this.bTypes.global.specializeTypes.global.Symbol],CoreBTypesFromSymbols.this.bTypes.global.specializeTypes.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-230938.8701" rx="1524.5444" ry="26.7407"/>
<text text-anchor="start" x="17696.614" y="-230942.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.mutable.HashMap[(CoreBTypesFromSymbols.this.bTypes.global.specializeTypes.global.Symbol, CoreBTypesFromSymbols.this.bTypes.global.specializeTypes.TypeEnv),CoreBTypesFromSymbols.this.bTypes.global.specializeTypes.global.Symbol],CoreBTypesFromSymbols.this.bTypes.global.specializeTypes.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-230927.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 5ms</text>
</g>
<!-- scala.runtime.Tuple2Zipped[MatchTreeMaking.this.global.Symbol,List[MatchTreeMaking.this.global.Symbol],MatchTreeMaking.this.global.Tree,List[MatchTreeMaking.this.global.Tree]] =&gt; ?{def partition: ?} -->
<g id="node3204" class="node">
<title>scala.runtime.Tuple2Zipped[MatchTreeMaking.this.global.Symbol,List[MatchTreeMaking.this.global.Symbol],MatchTreeMaking.this.global.Tree,List[MatchTreeMaking.this.global.Tree]] =&gt; ?{def partition: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-231010.8701" rx="832.9436" ry="26.7407"/>
<text text-anchor="start" x="18185.614" y="-231014.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.runtime.Tuple2Zipped[MatchTreeMaking.this.global.Symbol,List[MatchTreeMaking.this.global.Symbol],MatchTreeMaking.this.global.Tree,List[MatchTreeMaking.this.global.Tree]] =&gt; ?{def partition: ?}</text>
<text text-anchor="middle" x="18766.614" y="-230999.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- fs.type =&gt; ?{def exists: ?} -->
<g id="node3205" class="node">
<title>fs.type =&gt; ?{def exists: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-231082.8701" rx="114.6026" ry="26.7407"/>
<text text-anchor="start" x="18693.614" y="-231086.6701" font-family="Times,serif" font-size="14.00" fill="#000000">fs.type =&gt; ?{def exists: ?}</text>
<text text-anchor="middle" x="18766.614" y="-231071.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; List[Typers.this.global.Symbol]) =&gt; Typers.this.global.Type -->
<g id="node3206" class="node">
<title>(=&gt; List[Typers.this.global.Symbol]) =&gt; Typers.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-231154.8701" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="18587.614" y="-231158.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; List[Typers.this.global.Symbol]) =&gt; Typers.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-231143.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- n.type =&gt; ?{def /:: ?} -->
<g id="node3207" class="node">
<title>n.type =&gt; ?{def /:: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-231226.8701" rx="96.3333" ry="26.7407"/>
<text text-anchor="start" x="18706.614" y="-231230.6701" font-family="Times,serif" font-size="14.00" fill="#000000">n.type =&gt; ?{def /:: ?}</text>
<text text-anchor="middle" x="18766.614" y="-231215.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Typers.this.global.Symbol -->
<g id="node3208" class="node">
<title>((Nothing, Nothing)) =&gt; Typers.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-231298.8701" rx="211.3499" ry="26.7407"/>
<text text-anchor="start" x="18625.114" y="-231302.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Typers.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-231287.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 0ms</text>
</g>
<!-- list.type =&gt; ?{def asScala: ?} -->
<g id="node3209" class="node">
<title>list.type =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-231370.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="18685.114" y="-231374.6701" font-family="Times,serif" font-size="14.00" fill="#000000">list.type =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-231359.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Some[Reshape.this.global.Tree] =&gt; scala.collection.GenTraversableOnce[?] -->
<g id="node3210" class="node">
<title>Some[Reshape.this.global.Tree] =&gt; scala.collection.GenTraversableOnce[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-231442.8701" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="18557.614" y="-231446.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Some[Reshape.this.global.Tree] =&gt; scala.collection.GenTraversableOnce[?]</text>
<text text-anchor="middle" x="18766.614" y="-231431.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Unit, Unit)) =&gt; Macros.this.global.FlagSet -->
<g id="node3211" class="node">
<title>(=&gt; (Nothing, Unit, Unit)) =&gt; Macros.this.global.FlagSet</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-231514.8701" rx="235.4331" ry="26.7407"/>
<text text-anchor="start" x="18608.114" y="-231518.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Unit, Unit)) =&gt; Macros.this.global.FlagSet</text>
<text text-anchor="middle" x="18766.614" y="-231503.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Parsers.this.Offset -->
<g id="node3212" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Parsers.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-231586.8701" rx="216.2494" ry="26.7407"/>
<text text-anchor="start" x="18621.614" y="-231590.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Parsers.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-231575.6701" font-family="Times,serif" font-size="14.00" fill="#000000">10 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[BigInt] -->
<g id="node3213" class="node">
<title>scala.reflect.ClassTag[BigInt]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-231658.8701" rx="126.6443" ry="26.7407"/>
<text text-anchor="start" x="18685.114" y="-231662.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[BigInt]</text>
<text text-anchor="middle" x="18766.614" y="-231647.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Boolean(true) =&gt; Macros.this.global.BooleanFlag -->
<g id="node3214" class="node">
<title>Boolean(true) =&gt; Macros.this.global.BooleanFlag</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-231730.8701" rx="205.122" ry="26.7407"/>
<text text-anchor="start" x="18629.614" y="-231734.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Boolean(true) =&gt; Macros.this.global.BooleanFlag</text>
<text text-anchor="middle" x="18766.614" y="-231719.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Typers.this.global.SAMFunction] -->
<g id="node3215" class="node">
<title>scala.reflect.ClassTag[Typers.this.global.SAMFunction]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-231802.8701" rx="229.6196" ry="26.7407"/>
<text text-anchor="start" x="18612.114" y="-231806.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Typers.this.global.SAMFunction]</text>
<text text-anchor="middle" x="18766.614" y="-231791.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.PACKAGEkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3216" class="node">
<title>JavaScanners.this.global.javanme.PACKAGEkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-231874.8701" rx="284.0141" ry="26.7407"/>
<text text-anchor="start" x="18573.614" y="-231878.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.PACKAGEkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-231863.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[AnyRef] -->
<g id="node3217" class="node">
<title>scala.reflect.ClassTag[AnyRef]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-231946.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="18680.614" y="-231950.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[AnyRef]</text>
<text text-anchor="middle" x="18766.614" y="-231935.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 9ms</text>
</g>
<!-- files.type =&gt; ?{def map: ?} -->
<g id="node3218" class="node">
<title>files.type =&gt; ?{def map: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-232018.8701" rx="119.5021" ry="26.7407"/>
<text text-anchor="start" x="18690.114" y="-232022.6701" font-family="Times,serif" font-size="14.00" fill="#000000">files.type =&gt; ?{def map: ?}</text>
<text text-anchor="middle" x="18766.614" y="-232007.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[UnCurry.this.global.treeInfo.global.ValDef],UnCurry.this.global.Tree,That] -->
<g id="node3219" class="node">
<title>scala.collection.generic.CanBuildFrom[List[UnCurry.this.global.treeInfo.global.ValDef],UnCurry.this.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-232090.8701" rx="476.68" ry="26.7407"/>
<text text-anchor="start" x="18437.614" y="-232094.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[UnCurry.this.global.treeInfo.global.ValDef],UnCurry.this.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-232079.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[TreeAndTypeAnalysis.this.global.Type]],List[TreeAndTypeAnalysis.this.global.Type],List[List[TreeAndTypeAnalysis.this.global.Type]]] -->
<g id="node3220" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[TreeAndTypeAnalysis.this.global.Type]],List[TreeAndTypeAnalysis.this.global.Type],List[List[TreeAndTypeAnalysis.this.global.Type]]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-232162.8701" rx="736.6106" ry="26.7407"/>
<text text-anchor="start" x="18253.614" y="-232166.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[TreeAndTypeAnalysis.this.global.Type]],List[TreeAndTypeAnalysis.this.global.Type],List[List[TreeAndTypeAnalysis.this.global.Type]]]</text>
<text text-anchor="middle" x="18766.614" y="-232151.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; MultiStringSetting.this.T) =&gt; ?{def ++=: ?} -->
<g id="node3221" class="node">
<title>(=&gt; MultiStringSetting.this.T) =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-232234.8701" rx="202.4653" ry="26.7407"/>
<text text-anchor="start" x="18631.614" y="-232238.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; MultiStringSetting.this.T) =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-232223.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Long) =&gt; ?{def |=: ?} -->
<g id="node3222" class="node">
<title>(=&gt; Long) =&gt; ?{def |=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-232306.8701" rx="115.931" ry="26.7407"/>
<text text-anchor="start" x="18692.614" y="-232310.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Long) =&gt; ?{def |=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-232295.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Set[scala.tools.asm.tree.TryCatchBlockNode] =&gt; ?{def ++=: ?} -->
<g id="node3223" class="node">
<title>scala.collection.immutable.Set[scala.tools.asm.tree.TryCatchBlockNode] =&gt; ?{def ++=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-232378.8701" rx="367.8912" ry="26.7407"/>
<text text-anchor="start" x="18514.614" y="-232382.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[scala.tools.asm.tree.TryCatchBlockNode] =&gt; ?{def ++=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-232367.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; Double) =&gt; Scanners.this.Offset -->
<g id="node3224" class="node">
<title>(=&gt; Double) =&gt; Scanners.this.Offset</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-232450.8701" rx="154.7129" ry="26.7407"/>
<text text-anchor="start" x="18665.114" y="-232454.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Double) =&gt; Scanners.this.Offset</text>
<text text-anchor="middle" x="18766.614" y="-232439.6701" font-family="Times,serif" font-size="14.00" fill="#000000">11 times = 1ms</text>
</g>
<!-- (=&gt; Array[Boolean]) =&gt; Array[Int] -->
<g id="node3225" class="node">
<title>(=&gt; Array[Boolean]) =&gt; Array[Int]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-232522.8701" rx="149.3993" ry="26.7407"/>
<text text-anchor="start" x="18669.114" y="-232526.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; Array[Boolean]) =&gt; Array[Int]</text>
<text text-anchor="middle" x="18766.614" y="-232511.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing)) =&gt; Erasure.this.global.Tree -->
<g id="node3226" class="node">
<title>((Nothing, Nothing, Nothing)) =&gt; Erasure.this.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-232594.8701" rx="238.0901" ry="26.7407"/>
<text text-anchor="start" x="18606.114" y="-232598.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing)) =&gt; Erasure.this.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-232583.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.Tree],Delambdafy.this.global.Tree,List[Delambdafy.this.global.Tree]] -->
<g id="node3227" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.Tree],Delambdafy.this.global.Tree,List[Delambdafy.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-232666.8701" rx="548.9298" ry="26.7407"/>
<text text-anchor="start" x="18386.614" y="-232670.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.Tree],Delambdafy.this.global.Tree,List[Delambdafy.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-232655.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Duplicators.this.global.Scope =&gt; Duplicators.this.global.Type -->
<g id="node3228" class="node">
<title>Duplicators.this.global.Scope =&gt; Duplicators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-232738.8701" rx="251.9602" ry="26.7407"/>
<text text-anchor="start" x="18596.614" y="-232742.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Duplicators.this.global.Scope =&gt; Duplicators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-232727.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 1ms</text>
</g>
<!-- scala.reflect.ClassTag[scala.runtime.BoxedUnit] -->
<g id="node3229" class="node">
<title>scala.reflect.ClassTag[scala.runtime.BoxedUnit]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-232810.8701" rx="198.8942" ry="26.7407"/>
<text text-anchor="start" x="18634.114" y="-232814.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[scala.runtime.BoxedUnit]</text>
<text text-anchor="middle" x="18766.614" y="-232799.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 1ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Typers.this.global.constfold.global.Tree -->
<g id="node3230" class="node">
<title>((Nothing, Nothing)) =&gt; Typers.this.global.constfold.global.Tree</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-232882.8701" rx="263.5019" ry="26.7407"/>
<text text-anchor="start" x="18588.114" y="-232886.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Typers.this.global.constfold.global.Tree</text>
<text text-anchor="middle" x="18766.614" y="-232871.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((List[MatchTreeMaking.this.global.Symbol], List[MatchTreeMaking.this.global.Tree])) =&gt; ?{def zipped: ?} -->
<g id="node3231" class="node">
<title>((List[MatchTreeMaking.this.global.Symbol], List[MatchTreeMaking.this.global.Tree])) =&gt; ?{def zipped: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-232954.8701" rx="436.984" ry="26.7407"/>
<text text-anchor="start" x="18465.614" y="-232958.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((List[MatchTreeMaking.this.global.Symbol], List[MatchTreeMaking.this.global.Tree])) =&gt; ?{def zipped: ?}</text>
<text text-anchor="middle" x="18766.614" y="-232943.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- (=&gt; scala.tools.asm.tree.analysis.Analyzer[scala.tools.asm.tree.analysis.BasicValue]) =&gt; scala.tools.asm.tree.analysis.Analyzer[V] -->
<g id="node3232" class="node">
<title>(=&gt; scala.tools.asm.tree.analysis.Analyzer[scala.tools.asm.tree.analysis.BasicValue]) =&gt; scala.tools.asm.tree.analysis.Analyzer[V]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-233026.8701" rx="519.0328" ry="26.7407"/>
<text text-anchor="start" x="18407.614" y="-233030.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; scala.tools.asm.tree.analysis.Analyzer[scala.tools.asm.tree.analysis.BasicValue]) =&gt; scala.tools.asm.tree.analysis.Analyzer[V]</text>
<text text-anchor="middle" x="18766.614" y="-233015.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],SpecializeTypes.this.global.Symbol,List[SpecializeTypes.this.global.Symbol]] -->
<g id="node3233" class="node">
<title>scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],SpecializeTypes.this.global.Symbol,List[SpecializeTypes.this.global.Symbol]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-233098.8701" rx="620.6795" ry="26.7407"/>
<text text-anchor="start" x="18335.614" y="-233102.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[SpecializeTypes.this.global.Type],SpecializeTypes.this.global.Symbol,List[SpecializeTypes.this.global.Symbol]]</text>
<text text-anchor="middle" x="18766.614" y="-233087.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- OptimizedCasegen.this.nextCase.type =&gt; ?{def APPLY: ?} -->
<g id="node3234" class="node">
<title>OptimizedCasegen.this.nextCase.type =&gt; ?{def APPLY: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-233170.8701" rx="243.4897" ry="26.7407"/>
<text text-anchor="start" x="18602.614" y="-233174.6701" font-family="Times,serif" font-size="14.00" fill="#000000">OptimizedCasegen.this.nextCase.type =&gt; ?{def APPLY: ?}</text>
<text text-anchor="middle" x="18766.614" y="-233159.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Internals.this.global.Symbol -->
<g id="node3235" class="node">
<title>((Nothing, Nothing)) =&gt; Internals.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-233242.8701" rx="218.492" ry="26.7407"/>
<text text-anchor="start" x="18620.114" y="-233246.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Internals.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-233231.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- java.util.List[scala.tools.asm.tree.LocalVariableNode] =&gt; ?{def asScala: ?} -->
<g id="node3236" class="node">
<title>java.util.List[scala.tools.asm.tree.LocalVariableNode] =&gt; ?{def asScala: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-233314.8701" rx="304.5262" ry="26.7407"/>
<text text-anchor="start" x="18559.114" y="-233318.6701" font-family="Times,serif" font-size="14.00" fill="#000000">java.util.List[scala.tools.asm.tree.LocalVariableNode] =&gt; ?{def asScala: ?}</text>
<text text-anchor="middle" x="18766.614" y="-233303.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing, Nothing, Nothing)) =&gt; Placeholders.this.global.Symbol -->
<g id="node3237" class="node">
<title>((Nothing, Nothing, Nothing, Nothing)) =&gt; Placeholders.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-233386.8701" rx="306.7687" ry="26.7407"/>
<text text-anchor="start" x="18557.614" y="-233390.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing, Nothing, Nothing)) =&gt; Placeholders.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-233375.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Namers.this.global.Tree],Namers.this.global.Type,That] -->
<g id="node3238" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Namers.this.global.Tree],Namers.this.global.Type,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-233458.8701" rx="401.7733" ry="26.7407"/>
<text text-anchor="start" x="18490.614" y="-233462.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Namers.this.global.Tree],Namers.this.global.Type,That]</text>
<text text-anchor="middle" x="18766.614" y="-233447.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Global.this.patmat.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3239" class="node">
<title>Global.this.patmat.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-233530.8701" rx="166.7545" ry="26.7407"/>
<text text-anchor="start" x="18656.614" y="-233534.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Global.this.patmat.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-233519.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[CommonSubconditionElimination.this.Test]],List[CommonSubconditionElimination.this.TreeMaker],That] -->
<g id="node3240" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[CommonSubconditionElimination.this.Test]],List[CommonSubconditionElimination.this.TreeMaker],That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-233602.8701" rx="618.9369" ry="26.7407"/>
<text text-anchor="start" x="18337.114" y="-233606.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[CommonSubconditionElimination.this.Test]],List[CommonSubconditionElimination.this.TreeMaker],That]</text>
<text text-anchor="middle" x="18766.614" y="-233591.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; Array[Object] -->
<g id="node3241" class="node">
<title>((Nothing, Nothing)) =&gt; Array[Object]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-233674.8701" rx="163.1835" ry="26.7407"/>
<text text-anchor="start" x="18659.114" y="-233678.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; Array[Object]</text>
<text text-anchor="middle" x="18766.614" y="-233663.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Infer.this.global.Tree =&gt; Infer.this.global.Type -->
<g id="node3242" class="node">
<title>Infer.this.global.Tree =&gt; Infer.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-233746.8701" rx="194.4087" ry="26.7407"/>
<text text-anchor="start" x="18637.114" y="-233750.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Infer.this.global.Tree =&gt; Infer.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-233735.6701" font-family="Times,serif" font-size="14.00" fill="#000000">3 times = 0ms</text>
</g>
<!-- (=&gt; GenSymbols.this.SymbolTable) =&gt; ?{def +=: ?} -->
<g id="node3243" class="node">
<title>(=&gt; GenSymbols.this.SymbolTable) =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-233818.8701" rx="219.8205" ry="26.7407"/>
<text text-anchor="start" x="18619.114" y="-233822.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; GenSymbols.this.SymbolTable) =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-233807.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Symbol],RefChecks.this.global.Symbol,That] -->
<g id="node3244" class="node">
<title>scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Symbol],RefChecks.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-233890.8701" rx="448.1115" ry="26.7407"/>
<text text-anchor="start" x="18457.614" y="-233894.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[RefChecks.this.global.Symbol],RefChecks.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-233879.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- trimmed.type =&gt; ?{def reverse: ?} -->
<g id="node3245" class="node">
<title>trimmed.type =&gt; ?{def reverse: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-233962.8701" rx="147.1565" ry="26.7407"/>
<text text-anchor="start" x="18670.614" y="-233966.6701" font-family="Times,serif" font-size="14.00" fill="#000000">trimmed.type =&gt; ?{def reverse: ?}</text>
<text text-anchor="middle" x="18766.614" y="-233951.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- s.type =&gt; ?{def replaceAllLiterally: ?} -->
<g id="node3246" class="node">
<title>s.type =&gt; ?{def replaceAllLiterally: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-234034.8701" rx="162.7692" ry="26.7407"/>
<text text-anchor="start" x="18659.614" y="-234038.6701" font-family="Times,serif" font-size="14.00" fill="#000000">s.type =&gt; ?{def replaceAllLiterally: ?}</text>
<text text-anchor="middle" x="18766.614" y="-234023.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.immutable.Map[SuperAccessors.this.global.Symbol,SuperAccessors.this.global.analyzer.Typer] =&gt; ?{def &#45;=: ?} -->
<g id="node3247" class="node">
<title>scala.collection.immutable.Map[SuperAccessors.this.global.Symbol,SuperAccessors.this.global.analyzer.Typer] =&gt; ?{def &#45;=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-234106.8701" rx="510.5622" ry="26.7407"/>
<text text-anchor="start" x="18413.614" y="-234110.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Map[SuperAccessors.this.global.Symbol,SuperAccessors.this.global.analyzer.Typer] =&gt; ?{def &#45;=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-234095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaParsers.this.global.Position =&gt; Int -->
<g id="node3248" class="node">
<title>JavaParsers.this.global.Position =&gt; Int</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-234178.8701" rx="160.5265" ry="26.7407"/>
<text text-anchor="start" x="18661.114" y="-234182.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaParsers.this.global.Position =&gt; Int</text>
<text text-anchor="middle" x="18766.614" y="-234167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">6 times = 1ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.WildcardType.type,List[Typers.this.global.Type]] -->
<g id="node3249" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.WildcardType.type,List[Typers.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-234250.8701" rx="557.4004" ry="26.7407"/>
<text text-anchor="start" x="18380.614" y="-234254.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.Symbol],Typers.this.global.WildcardType.type,List[Typers.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-234239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[String],String,MultiStringSetting.this.T] -->
<g id="node3250" class="node">
<title>scala.collection.generic.CanBuildFrom[List[String],String,MultiStringSetting.this.T]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-234322.8701" rx="338.9084" ry="26.7407"/>
<text text-anchor="start" x="18535.114" y="-234326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[String],String,MultiStringSetting.this.T]</text>
<text text-anchor="middle" x="18766.614" y="-234311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ManifestResourcesClassPath.this.file.type =&gt; ?{def toURLs: ?} -->
<g id="node3251" class="node">
<title>ManifestResourcesClassPath.this.file.type =&gt; ?{def toURLs: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-234394.8701" rx="259.5164" ry="26.7407"/>
<text text-anchor="start" x="18591.114" y="-234398.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ManifestResourcesClassPath.this.file.type =&gt; ?{def toURLs: ?}</text>
<text text-anchor="middle" x="18766.614" y="-234383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[List[Errors.this.global.Symbol]],String,That] -->
<g id="node3252" class="node">
<title>scala.collection.generic.CanBuildFrom[List[List[Errors.this.global.Symbol]],String,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-234466.8701" rx="357.1779" ry="26.7407"/>
<text text-anchor="start" x="18522.114" y="-234470.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[List[Errors.this.global.Symbol]],String,That]</text>
<text text-anchor="middle" x="18766.614" y="-234455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- CoreBTypesFromSymbols.this.bTypes.INT.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3253" class="node">
<title>CoreBTypesFromSymbols.this.bTypes.INT.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-234538.8701" rx="264.4159" ry="26.7407"/>
<text text-anchor="start" x="18587.614" y="-234542.6701" font-family="Times,serif" font-size="14.00" fill="#000000">CoreBTypesFromSymbols.this.bTypes.INT.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-234527.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[UnCurry.this.global.ValDef],UnCurry.this.global.Symbol,That] -->
<g id="node3254" class="node">
<title>scala.collection.generic.CanBuildFrom[List[UnCurry.this.global.ValDef],UnCurry.this.global.Symbol,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-234610.8701" rx="429.8419" ry="26.7407"/>
<text text-anchor="start" x="18470.614" y="-234614.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[UnCurry.this.global.ValDef],UnCurry.this.global.Symbol,That]</text>
<text text-anchor="middle" x="18766.614" y="-234599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;implementation restriction: cannot reify type %s (%s)&#39;) =&gt; ?{def format: ?} -->
<g id="node3255" class="node">
<title>String(&#39;implementation restriction: cannot reify type %s (%s)&#39;) =&gt; ?{def format: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-234682.8701" rx="334.423" ry="26.7407"/>
<text text-anchor="start" x="18538.114" y="-234686.6701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;implementation restriction: cannot reify type %s (%s)&#39;) =&gt; ?{def format: ?}</text>
<text text-anchor="middle" x="18766.614" y="-234671.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Byte] -->
<g id="node3256" class="node">
<title>((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Byte]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-234754.8701" rx="217.578" ry="26.7407"/>
<text text-anchor="start" x="18620.614" y="-234758.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, (Any, Any) =&gt; Nothing)) =&gt; Array[Byte]</text>
<text text-anchor="middle" x="18766.614" y="-234743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.AnnotationInfo],Unit,That] -->
<g id="node3257" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.AnnotationInfo],Unit,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-234826.8701" rx="360.749" ry="26.7407"/>
<text text-anchor="start" x="18519.614" y="-234830.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.AnnotationInfo],Unit,That]</text>
<text text-anchor="middle" x="18766.614" y="-234815.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Namers.this.global.Symbol],Namers.this.global.Type,List[Namers.this.global.Type]] -->
<g id="node3258" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Namers.this.global.Symbol],Namers.this.global.Type,List[Namers.this.global.Type]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-234898.8701" rx="513.2191" ry="26.7407"/>
<text text-anchor="start" x="18411.614" y="-234902.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Namers.this.global.Symbol],Namers.this.global.Type,List[Namers.this.global.Type]]</text>
<text text-anchor="middle" x="18766.614" y="-234887.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- String(&#39;Use classpath and sourcepath options like in the case of e.g. \&#39;scala\&#39; command.\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| There\&#39;s also one additional option:\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#45;requiredInstances &lt;int value&gt; Determine how many times classpath should be loaded\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#39;) =&gt; ?{def stripMargin: ?} -->
<g id="node3259" class="node">
<title>String(&#39;Use classpath and sourcepath options like in the case of e.g. \&#39;scala\&#39; command.\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| There\&#39;s also one additional option:\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#45;requiredInstances &lt;int value&gt; Determine how many times classpath should be loaded\n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#39;) =&gt; ?{def stripMargin: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-235002.8701" rx="391.0601" ry="58.8803"/>
<text text-anchor="middle" x="18766.614" y="-235029.1701" font-family="Times,serif" font-size="14.00" fill="#000000">String(&#39;Use classpath and sourcepath options like in the case of e.g. &#39;scala&#39; command.</text>
<text text-anchor="middle" x="18766.614" y="-235014.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| There&#39;s also one additional option:</text>
<text text-anchor="middle" x="18766.614" y="-234999.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| &#45;requiredInstances &lt;int value&gt; Determine how many times classpath should be loaded</text>
<text text-anchor="start" x="18498.114" y="-234984.1701" font-family="Times,serif" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#39;) =&gt; ?{def stripMargin: ?}</text>
<text text-anchor="middle" x="18766.614" y="-234969.1701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; List[Typers.this.global.Type] -->
<g id="node3260" class="node">
<title>((Nothing, Nothing)) =&gt; List[Typers.this.global.Type]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-235106.8701" rx="222.0631" ry="26.7407"/>
<text text-anchor="start" x="18617.614" y="-235110.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; List[Typers.this.global.Type]</text>
<text text-anchor="middle" x="18766.614" y="-235095.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Typers.this.global.gen.global.Tree],Typers.this.global.gen.global.Tree,That] -->
<g id="node3261" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Typers.this.global.gen.global.Tree],Typers.this.global.gen.global.Tree,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-235178.8701" rx="478.0084" ry="26.7407"/>
<text text-anchor="start" x="18436.614" y="-235182.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Typers.this.global.gen.global.Tree],Typers.this.global.gen.global.Tree,That]</text>
<text text-anchor="middle" x="18766.614" y="-235167.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Throwable -->
<g id="node3262" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Throwable</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-235250.8701" rx="164.5121" ry="26.7407"/>
<text text-anchor="start" x="18658.114" y="-235254.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Throwable</text>
<text text-anchor="middle" x="18766.614" y="-235239.6701" font-family="Times,serif" font-size="14.00" fill="#000000">7 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; SymbolicXMLBuilder.this.global.Symbol -->
<g id="node3263" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; SymbolicXMLBuilder.this.global.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-235322.8701" rx="359.8347" ry="26.7407"/>
<text text-anchor="start" x="18520.114" y="-235326.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; SymbolicXMLBuilder.this.global.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-235311.6701" font-family="Times,serif" font-size="14.00" fill="#000000">8 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; FormatInterpolator.this.c.universe.Symbol -->
<g id="node3264" class="node">
<title>(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; FormatInterpolator.this.c.universe.Symbol</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-235394.8701" rx="361.1632" ry="26.7407"/>
<text text-anchor="start" x="18519.114" y="-235398.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing, Nothing, Nothing)) =&gt; FormatInterpolator.this.c.universe.Symbol</text>
<text text-anchor="middle" x="18766.614" y="-235383.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[SymbolTables.this.ReifyBindingAttachment] -->
<g id="node3265" class="node">
<title>scala.reflect.ClassTag[SymbolTables.this.ReifyBindingAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-235466.8701" rx="274.2149" ry="26.7407"/>
<text text-anchor="start" x="18580.614" y="-235470.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[SymbolTables.this.ReifyBindingAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-235455.6701" font-family="Times,serif" font-size="14.00" fill="#000000">4 times = 7ms</text>
</g>
<!-- origMeth.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3266" class="node">
<title>origMeth.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-235538.8701" rx="130.6298" ry="26.7407"/>
<text text-anchor="start" x="18682.114" y="-235542.6701" font-family="Times,serif" font-size="14.00" fill="#000000">origMeth.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-235527.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- treeStrings.type =&gt; ?{def ::: ?} -->
<g id="node3267" class="node">
<title>treeStrings.type =&gt; ?{def ::: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-12358.8701" rx="132.8722" ry="26.7407"/>
<text text-anchor="start" x="18680.614" y="-12362.6701" font-family="Times,serif" font-size="14.00" fill="#000000">treeStrings.type =&gt; ?{def ::: ?}</text>
<text text-anchor="middle" x="18766.614" y="-12347.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- treeStrings.type =&gt; ?{def ::: ?}&#45;&gt;Ordering[String] -->
<g id="edge2" class="edge">
<title>treeStrings.type =&gt; ?{def ::: ?}&#45;&gt;Ordering[String]</title>
<path fill="none" stroke="#000000" d="M18899.8325,-12358.8701C20537.5564,-12358.8701 36747.4281,-12358.8701 38074.9962,-12358.8701"/>
<polygon fill="#000000" stroke="#000000" points="38075.3964,-12362.3702 38085.3964,-12358.8701 38075.3964,-12355.3702 38075.3964,-12362.3702"/>
</g>
<!-- clauses.type =&gt; ?{def isEmpty: ?} -->
<g id="node3268" class="node">
<title>clauses.type =&gt; ?{def isEmpty: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-235610.8701" rx="145.8282" ry="26.7407"/>
<text text-anchor="start" x="18671.614" y="-235614.6701" font-family="Times,serif" font-size="14.00" fill="#000000">clauses.type =&gt; ?{def isEmpty: ?}</text>
<text text-anchor="middle" x="18766.614" y="-235599.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- JavaScanners.this.global.javanme.IFkw.type =&gt; ?{def &#45;&gt;: ?} -->
<g id="node3269" class="node">
<title>JavaScanners.this.global.javanme.IFkw.type =&gt; ?{def &#45;&gt;: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-235682.8701" rx="247.4747" ry="26.7407"/>
<text text-anchor="start" x="18599.614" y="-235686.6701" font-family="Times,serif" font-size="14.00" fill="#000000">JavaScanners.this.global.javanme.IFkw.type =&gt; ?{def &#45;&gt;: ?}</text>
<text text-anchor="middle" x="18766.614" y="-235671.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[StackTraceElement] =&gt; ?{def dropWhile: ?} -->
<g id="node3270" class="node">
<title>Array[StackTraceElement] =&gt; ?{def dropWhile: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-235754.8701" rx="212.2642" ry="26.7407"/>
<text text-anchor="start" x="18624.614" y="-235758.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[StackTraceElement] =&gt; ?{def dropWhile: ?}</text>
<text text-anchor="middle" x="18766.614" y="-235743.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.TermSymbol],Delambdafy.this.global.ValDef,That] -->
<g id="node3271" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.TermSymbol],Delambdafy.this.global.ValDef,That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-235826.8701" rx="478.9227" ry="26.7407"/>
<text text-anchor="start" x="18436.114" y="-235830.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Delambdafy.this.global.TermSymbol],Delambdafy.this.global.ValDef,That]</text>
<text text-anchor="middle" x="18766.614" y="-235815.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[List[Reifiers.this.global.ValDef],Reifiers.this.global.Tree,List[Reifiers.this.global.Tree]] -->
<g id="node3272" class="node">
<title>scala.collection.generic.CanBuildFrom[List[Reifiers.this.global.ValDef],Reifiers.this.global.Tree,List[Reifiers.this.global.Tree]]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-235898.8701" rx="506.9911" ry="26.7407"/>
<text text-anchor="start" x="18416.114" y="-235902.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[List[Reifiers.this.global.ValDef],Reifiers.this.global.Tree,List[Reifiers.this.global.Tree]]</text>
<text text-anchor="middle" x="18766.614" y="-235887.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 2ms</text>
</g>
<!-- scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[String,Option[String]],(String, String),That] -->
<g id="node3273" class="node">
<title>scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[String,Option[String]],(String, String),That]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-235970.8701" rx="463.3099" ry="26.7407"/>
<text text-anchor="start" x="18447.114" y="-235974.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.generic.CanBuildFrom[scala.collection.immutable.Map[String,Option[String]],(String, String),That]</text>
<text text-anchor="middle" x="18766.614" y="-235959.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- scala.reflect.ClassTag[Typers.this.OriginalTreeAttachment] -->
<g id="node3274" class="node">
<title>scala.reflect.ClassTag[Typers.this.OriginalTreeAttachment]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-236042.8701" rx="242.5753" ry="26.7407"/>
<text text-anchor="start" x="18603.114" y="-236046.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.reflect.ClassTag[Typers.this.OriginalTreeAttachment]</text>
<text text-anchor="middle" x="18766.614" y="-236031.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Validators.this.global.Tree =&gt; Validators.this.global.Type -->
<g id="node3275" class="node">
<title>Validators.this.global.Tree =&gt; Validators.this.global.Type</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-236114.8701" rx="236.7616" ry="26.7407"/>
<text text-anchor="start" x="18607.114" y="-236118.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Validators.this.global.Tree =&gt; Validators.this.global.Type</text>
<text text-anchor="middle" x="18766.614" y="-236103.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- Array[scala.tools.asm.Type] =&gt; scala.collection.GenSeq[?] -->
<g id="node3276" class="node">
<title>Array[scala.tools.asm.Type] =&gt; scala.collection.GenSeq[?]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-236186.8701" rx="241.2469" ry="26.7407"/>
<text text-anchor="start" x="18604.114" y="-236190.6701" font-family="Times,serif" font-size="14.00" fill="#000000">Array[scala.tools.asm.Type] =&gt; scala.collection.GenSeq[?]</text>
<text text-anchor="middle" x="18766.614" y="-236175.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 1ms</text>
</g>
<!-- scala.collection.immutable.Set[TypeDiagnostics.this.TypeDiag] =&gt; ?{def +=: ?} -->
<g id="node3277" class="node">
<title>scala.collection.immutable.Set[TypeDiagnostics.this.TypeDiag] =&gt; ?{def +=: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-236258.8701" rx="325.9525" ry="26.7407"/>
<text text-anchor="start" x="18544.114" y="-236262.6701" font-family="Times,serif" font-size="14.00" fill="#000000">scala.collection.immutable.Set[TypeDiagnostics.this.TypeDiag] =&gt; ?{def +=: ?}</text>
<text text-anchor="middle" x="18766.614" y="-236247.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- List[scala.tools.asm.tree.LocalVariableNode] =&gt; ?{def asJava: ?} -->
<g id="node3278" class="node">
<title>List[scala.tools.asm.tree.LocalVariableNode] =&gt; ?{def asJava: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-236330.8701" rx="266.6585" ry="26.7407"/>
<text text-anchor="start" x="18586.114" y="-236334.6701" font-family="Times,serif" font-size="14.00" fill="#000000">List[scala.tools.asm.tree.LocalVariableNode] =&gt; ?{def asJava: ?}</text>
<text text-anchor="middle" x="18766.614" y="-236319.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- (=&gt; (Nothing, Nothing)) =&gt; Array[Char] -->
<g id="node3279" class="node">
<title>(=&gt; (Nothing, Nothing)) =&gt; Array[Char]</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-236402.8701" rx="171.2398" ry="26.7407"/>
<text text-anchor="start" x="18653.614" y="-236406.6701" font-family="Times,serif" font-size="14.00" fill="#000000">(=&gt; (Nothing, Nothing)) =&gt; Array[Char]</text>
<text text-anchor="middle" x="18766.614" y="-236391.6701" font-family="Times,serif" font-size="14.00" fill="#000000">2 times = 0ms</text>
</g>
<!-- ch.type =&gt; ?{def isDigit: ?} -->
<g id="node3280" class="node">
<title>ch.type =&gt; ?{def isDigit: ?}</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-236474.8701" rx="120.8306" ry="26.7407"/>
<text text-anchor="start" x="18689.114" y="-236478.6701" font-family="Times,serif" font-size="14.00" fill="#000000">ch.type =&gt; ?{def isDigit: ?}</text>
<text text-anchor="middle" x="18766.614" y="-236463.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
<!-- ((Nothing, Nothing)) =&gt; java.lang.reflect.Method -->
<g id="node3281" class="node">
<title>((Nothing, Nothing)) =&gt; java.lang.reflect.Method</title>
<ellipse fill="none" stroke="#000000" cx="18766.614" cy="-236546.8701" rx="204.2078" ry="26.7407"/>
<text text-anchor="start" x="18630.114" y="-236550.6701" font-family="Times,serif" font-size="14.00" fill="#000000">((Nothing, Nothing)) =&gt; java.lang.reflect.Method</text>
<text text-anchor="middle" x="18766.614" y="-236535.6701" font-family="Times,serif" font-size="14.00" fill="#000000">1 times = 0ms</text>
</g>
</g>
</svg>
